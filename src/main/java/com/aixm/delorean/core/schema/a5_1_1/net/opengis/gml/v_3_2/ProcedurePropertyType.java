//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package net.opengis.gml.v_3_2;

import java.util.ArrayList;
import java.util.List;
import aero.aixm.features.AbstractAIXMFeatureType;
import aero.aixm.features.AbstractAirportGroundServiceType;
import aero.aixm.features.AbstractAirportHeliportProtectionAreaType;
import aero.aixm.features.AbstractApproachLegType;
import aero.aixm.features.AbstractGroundLightSystemType;
import aero.aixm.features.AbstractMarkingType;
import aero.aixm.features.AbstractNavaidEquipmentType;
import aero.aixm.features.AbstractNavigationSystemCheckpointType;
import aero.aixm.features.AbstractProcedureType;
import aero.aixm.features.AbstractRadarEquipmentType;
import aero.aixm.features.AbstractSegmentLegType;
import aero.aixm.features.AbstractServiceType;
import aero.aixm.features.AbstractSurveillanceRadarType;
import aero.aixm.features.AbstractTrafficSeparationServiceType;
import aero.aixm.features.AerialRefuellingType;
import aero.aixm.features.AeronauticalGroundLightType;
import aero.aixm.features.AirTrafficControlServiceType;
import aero.aixm.features.AirTrafficManagementServiceType;
import aero.aixm.features.AircraftGroundServiceType;
import aero.aixm.features.AircraftStandType;
import aero.aixm.features.AirportClearanceServiceType;
import aero.aixm.features.AirportHeliportCollocationType;
import aero.aixm.features.AirportHeliportType;
import aero.aixm.features.AirportHotSpotType;
import aero.aixm.features.AirportProtectionAreaMarkingType;
import aero.aixm.features.AirportSuppliesServiceType;
import aero.aixm.features.AirspaceBorderCrossingType;
import aero.aixm.features.AirspaceType;
import aero.aixm.features.AltimeterSourceType;
import aero.aixm.features.AngleIndicationType;
import aero.aixm.features.ApproachLightingSystemType;
import aero.aixm.features.ApronElementType;
import aero.aixm.features.ApronLightSystemType;
import aero.aixm.features.ApronMarkingType;
import aero.aixm.features.ApronType;
import aero.aixm.features.ArrestingGearType;
import aero.aixm.features.ArrivalFeederLegType;
import aero.aixm.features.ArrivalLegType;
import aero.aixm.features.AuthorityForAirspaceType;
import aero.aixm.features.AzimuthType;
import aero.aixm.features.ChangeOverPointType;
import aero.aixm.features.CheckpointINSType;
import aero.aixm.features.CheckpointVORType;
import aero.aixm.features.CirclingAreaType;
import aero.aixm.features.DMEType;
import aero.aixm.features.DeicingAreaMarkingType;
import aero.aixm.features.DeicingAreaType;
import aero.aixm.features.DepartureLegType;
import aero.aixm.features.DesignatedPointType;
import aero.aixm.features.DirectionFinderType;
import aero.aixm.features.DistanceIndicationType;
import aero.aixm.features.ElevationType;
import aero.aixm.features.FinalLegType;
import aero.aixm.features.FireFightingServiceType;
import aero.aixm.features.FlightRestrictionType;
import aero.aixm.features.FloatingDockSiteType;
import aero.aixm.features.GeoBorderType;
import aero.aixm.features.GlidepathType;
import aero.aixm.features.GroundTrafficControlServiceType;
import aero.aixm.features.GuidanceLineLightSystemType;
import aero.aixm.features.GuidanceLineMarkingType;
import aero.aixm.features.GuidanceLineType;
import aero.aixm.features.HoldingAssessmentType;
import aero.aixm.features.HoldingPatternType;
import aero.aixm.features.InformationServiceType;
import aero.aixm.features.InitialLegType;
import aero.aixm.features.InstrumentApproachProcedureType;
import aero.aixm.features.IntermediateLegType;
import aero.aixm.features.LocalizerType;
import aero.aixm.features.MarkerBeaconType;
import aero.aixm.features.MarkingBuoyType;
import aero.aixm.features.MissedApproachLegType;
import aero.aixm.features.NDBType;
import aero.aixm.features.NavaidType;
import aero.aixm.features.NavigationAreaRestrictionType;
import aero.aixm.features.NavigationAreaType;
import aero.aixm.features.NonMovementAreaType;
import aero.aixm.features.ObstacleAreaType;
import aero.aixm.features.OrganisationAuthorityType;
import aero.aixm.features.PassengerLoadingBridgeType;
import aero.aixm.features.PassengerServiceType;
import aero.aixm.features.PilotControlledLightingType;
import aero.aixm.features.PrecisionApproachRadarType;
import aero.aixm.features.PrimarySurveillanceRadarType;
import aero.aixm.features.ProcedureDMEType;
import aero.aixm.features.RadarSystemType;
import aero.aixm.features.RadioCommunicationChannelType;
import aero.aixm.features.RadioFrequencyAreaType;
import aero.aixm.features.RoadType;
import aero.aixm.features.RouteDMEType;
import aero.aixm.features.RouteSegmentType;
import aero.aixm.features.RouteType;
import aero.aixm.features.RulesProceduresType;
import aero.aixm.features.RunwayBlastPadType;
import aero.aixm.features.RunwayCentrelinePointType;
import aero.aixm.features.RunwayDirectionLightSystemType;
import aero.aixm.features.RunwayDirectionType;
import aero.aixm.features.RunwayElementType;
import aero.aixm.features.RunwayMarkingType;
import aero.aixm.features.RunwayProtectAreaLightSystemType;
import aero.aixm.features.RunwayProtectAreaType;
import aero.aixm.features.RunwayType;
import aero.aixm.features.RunwayVisualRangeType;
import aero.aixm.features.SDFType;
import aero.aixm.features.SafeAltitudeAreaType;
import aero.aixm.features.SeaplaneLandingAreaType;
import aero.aixm.features.SeaplaneRampSiteType;
import aero.aixm.features.SearchRescueServiceType;
import aero.aixm.features.SecondarySurveillanceRadarType;
import aero.aixm.features.SignificantPointInAirspaceType;
import aero.aixm.features.SpecialDateType;
import aero.aixm.features.SpecialNavigationStationType;
import aero.aixm.features.SpecialNavigationSystemType;
import aero.aixm.features.StandMarkingType;
import aero.aixm.features.StandardInstrumentArrivalType;
import aero.aixm.features.StandardInstrumentDepartureType;
import aero.aixm.features.StandardLevelColumnType;
import aero.aixm.features.StandardLevelSectorType;
import aero.aixm.features.StandardLevelTableType;
import aero.aixm.features.SurveyControlPointType;
import aero.aixm.features.TACANType;
import aero.aixm.features.TaxiHoldingPositionLightSystemType;
import aero.aixm.features.TaxiHoldingPositionMarkingType;
import aero.aixm.features.TaxiHoldingPositionType;
import aero.aixm.features.TaxiwayElementType;
import aero.aixm.features.TaxiwayLightSystemType;
import aero.aixm.features.TaxiwayMarkingType;
import aero.aixm.features.TaxiwayType;
import aero.aixm.features.TerminalArrivalAreaType;
import aero.aixm.features.TouchDownLiftOffLightSystemType;
import aero.aixm.features.TouchDownLiftOffMarkingType;
import aero.aixm.features.TouchDownLiftOffSafeAreaType;
import aero.aixm.features.TouchDownLiftOffType;
import aero.aixm.features.UnitType;
import aero.aixm.features.UnplannedHoldingType;
import aero.aixm.features.VORType;
import aero.aixm.features.VerticalStructureType;
import aero.aixm.features.VisualGlideSlopeIndicatorType;
import aero.aixm.features.WorkAreaType;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElementRef;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;
import org.w3._1999.xlink.ActuateType;
import org.w3._1999.xlink.ShowType;
import org.w3._1999.xlink.TypeType;


/**
 * <p>Java class for ProcedurePropertyType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="ProcedurePropertyType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence minOccurs="0">
 *         <element ref="{http://www.opengis.net/gml/3.2}AbstractFeature"/>
 *       </sequence>
 *       <attGroup ref="{http://www.opengis.net/gml/3.2}OwnershipAttributeGroup"/>
 *       <attGroup ref="{http://www.opengis.net/gml/3.2}AssociationAttributeGroup"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProcedurePropertyType", propOrder = {
    "abstractFeature"
})
public class ProcedurePropertyType {

    /**
     * This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType.  This may be used as a variable in the construction of content models.  
     * gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
     * 
     */
    @XmlElementRef(name = "AbstractFeature", namespace = "http://www.opengis.net/gml/3.2", type = JAXBElement.class, required = false)
    protected JAXBElement<? extends AbstractFeatureType> abstractFeature;
    @XmlAttribute(name = "owns")
    protected java.lang.Boolean owns;
    @XmlAttribute(name = "nilReason")
    protected List<String> nilReason;
    @XmlAttribute(name = "remoteSchema", namespace = "http://www.opengis.net/gml/3.2")
    @XmlSchemaType(name = "anyURI")
    protected String remoteSchema;
    @XmlAttribute(name = "type", namespace = "http://www.w3.org/1999/xlink")
    protected TypeType type;
    @XmlAttribute(name = "href", namespace = "http://www.w3.org/1999/xlink")
    protected String href;
    @XmlAttribute(name = "role", namespace = "http://www.w3.org/1999/xlink")
    protected String role;
    @XmlAttribute(name = "arcrole", namespace = "http://www.w3.org/1999/xlink")
    protected String arcrole;
    @XmlAttribute(name = "title", namespace = "http://www.w3.org/1999/xlink")
    protected String xlinkTitle;
    @XmlAttribute(name = "show", namespace = "http://www.w3.org/1999/xlink")
    protected ShowType show;
    @XmlAttribute(name = "actuate", namespace = "http://www.w3.org/1999/xlink")
    protected ActuateType actuate;

    /**
     * This abstract element serves as the head of a substitution group which may contain any elements whose content model is derived from gml:AbstractFeatureType.  This may be used as a variable in the construction of content models.  
     * gml:AbstractFeature may be thought of as "anything that is a GML feature" and may be used to define variables or templates in which the value of a GML property is "any feature". This occurs in particular in a GML feature collection where the feature member properties contain one or multiple copies of gml:AbstractFeature respectively.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link AbstractAIXMFeatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractAirportGroundServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractAirportHeliportProtectionAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractApproachLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractGroundLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractNavaidEquipmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractNavigationSystemCheckpointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractProcedureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractRadarEquipmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractSegmentLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractSurveillanceRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractTrafficSeparationServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AerialRefuellingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AeronauticalGroundLightType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirTrafficControlServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirTrafficManagementServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AircraftGroundServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AircraftStandType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportClearanceServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportHeliportCollocationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportHeliportType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportHotSpotType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportProtectionAreaMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportSuppliesServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirspaceBorderCrossingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirspaceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AltimeterSourceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AngleIndicationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApproachLightingSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronElementType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ArrestingGearType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ArrivalFeederLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ArrivalLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AuthorityForAirspaceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AzimuthType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ChangeOverPointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CheckpointINSType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CheckpointVORType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CirclingAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DMEType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DeicingAreaMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DeicingAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DepartureLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DesignatedPointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DirectionFinderType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DistanceIndicationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ElevationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FinalLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FireFightingServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FlightRestrictionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FloatingDockSiteType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GeoBorderType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GlidepathType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GroundTrafficControlServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuidanceLineLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuidanceLineMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuidanceLineType }{@code >}
     *     {@link JAXBElement }{@code <}{@link HoldingAssessmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link HoldingPatternType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InformationServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InitialLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InstrumentApproachProcedureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link IntermediateLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link LocalizerType }{@code >}
     *     {@link JAXBElement }{@code <}{@link MarkerBeaconType }{@code >}
     *     {@link JAXBElement }{@code <}{@link MarkingBuoyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link MissedApproachLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NDBType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NavaidType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NavigationAreaRestrictionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NavigationAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NonMovementAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ObstacleAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link OrganisationAuthorityType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PassengerLoadingBridgeType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PassengerServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PilotControlledLightingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PrecisionApproachRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PrimarySurveillanceRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ProcedureDMEType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RadarSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RadioCommunicationChannelType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RadioFrequencyAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RoadType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RouteDMEType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RouteSegmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RouteType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RulesProceduresType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayBlastPadType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayCentrelinePointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayDirectionLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayDirectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayElementType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayProtectAreaLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayProtectAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayVisualRangeType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SDFType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SafeAltitudeAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeaplaneLandingAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeaplaneRampSiteType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SearchRescueServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SecondarySurveillanceRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SignificantPointInAirspaceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecialDateType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecialNavigationStationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecialNavigationSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardInstrumentArrivalType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardInstrumentDepartureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardLevelColumnType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardLevelSectorType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardLevelTableType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SurveyControlPointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TACANType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiHoldingPositionLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiHoldingPositionMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiHoldingPositionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayElementType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TerminalArrivalAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffSafeAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffType }{@code >}
     *     {@link JAXBElement }{@code <}{@link UnitType }{@code >}
     *     {@link JAXBElement }{@code <}{@link UnplannedHoldingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VORType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VerticalStructureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VisualGlideSlopeIndicatorType }{@code >}
     *     {@link JAXBElement }{@code <}{@link WorkAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractContinuousCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractFeatureCollectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractFeatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DirectedObservationAtDistanceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DirectedObservationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DynamicFeatureCollectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DynamicFeatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FeatureCollectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ObservationType }{@code >}
     *     
     */
    public JAXBElement<? extends AbstractFeatureType> getAbstractFeature() {
        return abstractFeature;
    }

    /**
     * Sets the value of the abstractFeature property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link AbstractAIXMFeatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractAirportGroundServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractAirportHeliportProtectionAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractApproachLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractGroundLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractNavaidEquipmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractNavigationSystemCheckpointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractProcedureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractRadarEquipmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractSegmentLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractSurveillanceRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractTrafficSeparationServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AerialRefuellingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AeronauticalGroundLightType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirTrafficControlServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirTrafficManagementServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AircraftGroundServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AircraftStandType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportClearanceServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportHeliportCollocationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportHeliportType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportHotSpotType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportProtectionAreaMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirportSuppliesServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirspaceBorderCrossingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AirspaceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AltimeterSourceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AngleIndicationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApproachLightingSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronElementType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ApronType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ArrestingGearType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ArrivalFeederLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ArrivalLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AuthorityForAirspaceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AzimuthType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ChangeOverPointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CheckpointINSType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CheckpointVORType }{@code >}
     *     {@link JAXBElement }{@code <}{@link CirclingAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DMEType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DeicingAreaMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DeicingAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DepartureLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DesignatedPointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DirectionFinderType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DistanceIndicationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ElevationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FinalLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FireFightingServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FlightRestrictionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FloatingDockSiteType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GeoBorderType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GlidepathType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GroundTrafficControlServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuidanceLineLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuidanceLineMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link GuidanceLineType }{@code >}
     *     {@link JAXBElement }{@code <}{@link HoldingAssessmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link HoldingPatternType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InformationServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InitialLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link InstrumentApproachProcedureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link IntermediateLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link LocalizerType }{@code >}
     *     {@link JAXBElement }{@code <}{@link MarkerBeaconType }{@code >}
     *     {@link JAXBElement }{@code <}{@link MarkingBuoyType }{@code >}
     *     {@link JAXBElement }{@code <}{@link MissedApproachLegType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NDBType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NavaidType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NavigationAreaRestrictionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NavigationAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link NonMovementAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ObstacleAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link OrganisationAuthorityType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PassengerLoadingBridgeType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PassengerServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PilotControlledLightingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PrecisionApproachRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link PrimarySurveillanceRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ProcedureDMEType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RadarSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RadioCommunicationChannelType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RadioFrequencyAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RoadType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RouteDMEType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RouteSegmentType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RouteType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RulesProceduresType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayBlastPadType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayCentrelinePointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayDirectionLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayDirectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayElementType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayProtectAreaLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayProtectAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayType }{@code >}
     *     {@link JAXBElement }{@code <}{@link RunwayVisualRangeType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SDFType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SafeAltitudeAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeaplaneLandingAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SeaplaneRampSiteType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SearchRescueServiceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SecondarySurveillanceRadarType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SignificantPointInAirspaceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecialDateType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecialNavigationStationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SpecialNavigationSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardInstrumentArrivalType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardInstrumentDepartureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardLevelColumnType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardLevelSectorType }{@code >}
     *     {@link JAXBElement }{@code <}{@link StandardLevelTableType }{@code >}
     *     {@link JAXBElement }{@code <}{@link SurveyControlPointType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TACANType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiHoldingPositionLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiHoldingPositionMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiHoldingPositionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayElementType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TaxiwayType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TerminalArrivalAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffLightSystemType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffMarkingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffSafeAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link TouchDownLiftOffType }{@code >}
     *     {@link JAXBElement }{@code <}{@link UnitType }{@code >}
     *     {@link JAXBElement }{@code <}{@link UnplannedHoldingType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VORType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VerticalStructureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link VisualGlideSlopeIndicatorType }{@code >}
     *     {@link JAXBElement }{@code <}{@link WorkAreaType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractContinuousCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractFeatureCollectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link AbstractFeatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DirectedObservationAtDistanceType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DirectedObservationType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DiscreteCoverageType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DynamicFeatureCollectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link DynamicFeatureType }{@code >}
     *     {@link JAXBElement }{@code <}{@link FeatureCollectionType }{@code >}
     *     {@link JAXBElement }{@code <}{@link ObservationType }{@code >}
     *     
     * @see #getAbstractFeature()
     */
    public void setAbstractFeature(JAXBElement<? extends AbstractFeatureType> value) {
        this.abstractFeature = value;
    }

    /**
     * Gets the value of the owns property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.Boolean }
     *     
     */
    public boolean isOwns() {
        if (owns == null) {
            return false;
        } else {
            return owns;
        }
    }

    /**
     * Sets the value of the owns property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.Boolean }
     *     
     */
    public void setOwns(java.lang.Boolean value) {
        this.owns = value;
    }

    /**
     * Gets the value of the nilReason property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nilReason property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getNilReason().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the nilReason property.
     */
    public List<String> getNilReason() {
        if (nilReason == null) {
            nilReason = new ArrayList<>();
        }
        return this.nilReason;
    }

    /**
     * Gets the value of the remoteSchema property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRemoteSchema() {
        return remoteSchema;
    }

    /**
     * Sets the value of the remoteSchema property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRemoteSchema(String value) {
        this.remoteSchema = value;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link TypeType }
     *     
     */
    public TypeType getType() {
        if (type == null) {
            return TypeType.SIMPLE;
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link TypeType }
     *     
     */
    public void setType(TypeType value) {
        this.type = value;
    }

    /**
     * Gets the value of the href property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getHref() {
        return href;
    }

    /**
     * Sets the value of the href property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setHref(String value) {
        this.href = value;
    }

    /**
     * Gets the value of the role property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRole() {
        return role;
    }

    /**
     * Sets the value of the role property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRole(String value) {
        this.role = value;
    }

    /**
     * Gets the value of the arcrole property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getArcrole() {
        return arcrole;
    }

    /**
     * Sets the value of the arcrole property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setArcrole(String value) {
        this.arcrole = value;
    }

    /**
     * Gets the value of the xlinkTitle property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getXlinkTitle() {
        return xlinkTitle;
    }

    /**
     * Sets the value of the xlinkTitle property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setXlinkTitle(String value) {
        this.xlinkTitle = value;
    }

    /**
     * Gets the value of the show property.
     * 
     * @return
     *     possible object is
     *     {@link ShowType }
     *     
     */
    public ShowType getShow() {
        return show;
    }

    /**
     * Sets the value of the show property.
     * 
     * @param value
     *     allowed object is
     *     {@link ShowType }
     *     
     */
    public void setShow(ShowType value) {
        this.show = value;
    }

    /**
     * Gets the value of the actuate property.
     * 
     * @return
     *     possible object is
     *     {@link ActuateType }
     *     
     */
    public ActuateType getActuate() {
        return actuate;
    }

    /**
     * Sets the value of the actuate property.
     * 
     * @param value
     *     allowed object is
     *     {@link ActuateType }
     *     
     */
    public void setActuate(ActuateType value) {
        this.actuate = value;
    }

}
