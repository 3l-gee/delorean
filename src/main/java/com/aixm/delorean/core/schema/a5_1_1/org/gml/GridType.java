//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.a5_1_1.org.gml;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlType;
import org.w3._2001.xmlschema.PositiveInteger;


/**
 * <p>Java class for GridType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="GridType">
 *   <complexContent>
 *     <extension base="{http://www.opengis.net/gml/3.2}AbstractGeometryType">
 *       <sequence>
 *         <element name="limits" type="{http://www.opengis.net/gml/3.2}GridLimitsType"/>
 *         <choice>
 *           <element name="axisLabels" type="{http://www.opengis.net/gml/3.2}NCNameList"/>
 *           <element name="axisName" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
 *         </choice>
 *       </sequence>
 *       <attribute name="dimension" use="required" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GridType", propOrder = {
    "limits",
    "gridAxisLabels",
    "axisName"
})
@XmlSeeAlso({
    RectifiedGridType.class
})
public class GridType
    extends AbstractGeometryType
{

    @XmlElement(required = true)
    protected GridLimitsType limits;
    @XmlElement(name = "axisLabels")
    protected NCNameList gridAxisLabels;
    protected List<String> axisName;
    @XmlAttribute(name = "dimension", required = true)
    protected PositiveInteger dimension;

    /**
     * Gets the value of the limits property.
     * 
     * @return
     *     possible object is
     *     {@link GridLimitsType }
     *     
     */
    public GridLimitsType getLimits() {
        return limits;
    }

    /**
     * Sets the value of the limits property.
     * 
     * @param value
     *     allowed object is
     *     {@link GridLimitsType }
     *     
     */
    public void setLimits(GridLimitsType value) {
        this.limits = value;
    }

    public boolean isSetLimits() {
        return (this.limits!= null);
    }

    /**
     * Gets the value of the gridAxisLabels property.
     * 
     * @return
     *     possible object is
     *     {@link NCNameList }
     *     
     */
    public NCNameList getGridAxisLabels() {
        return gridAxisLabels;
    }

    /**
     * Sets the value of the gridAxisLabels property.
     * 
     * @param value
     *     allowed object is
     *     {@link NCNameList }
     *     
     */
    public void setGridAxisLabels(NCNameList value) {
        this.gridAxisLabels = value;
    }

    public boolean isSetGridAxisLabels() {
        return (this.gridAxisLabels!= null);
    }

    /**
     * Gets the value of the axisName property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the axisName property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getAxisName().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * </p>
     * 
     * 
     * @return
     *     The value of the axisName property.
     */
    public List<String> getAxisName() {
        if (axisName == null) {
            axisName = new ArrayList<>();
        }
        return this.axisName;
    }

    public boolean isSetAxisName() {
        return ((this.axisName!= null)&&(!this.axisName.isEmpty()));
    }

    public void unsetAxisName() {
        this.axisName = null;
    }

    /**
     * Gets the value of the dimension property.
     * 
     * @return
     *     possible object is
     *     {@link PositiveInteger }
     *     
     */
    public PositiveInteger getDimension() {
        return dimension;
    }

    /**
     * Sets the value of the dimension property.
     * 
     * @param value
     *     allowed object is
     *     {@link PositiveInteger }
     *     
     */
    public void setDimension(PositiveInteger value) {
        this.dimension = value;
    }

    public boolean isSetDimension() {
        return (this.dimension!= null);
    }

}
