//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.a5_1_1.aixm;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 * 
 * <p>Java class for CodeFuelBaseType</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * <pre>{@code
 * <simpleType name="CodeFuelBaseType">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="AVGAS"/>
 *     <enumeration value="AVGAS_LL"/>
 *     <enumeration value="OCT73"/>
 *     <enumeration value="OCT80"/>
 *     <enumeration value="OCT82UL"/>
 *     <enumeration value="OCT80_87"/>
 *     <enumeration value="OCT91_98"/>
 *     <enumeration value="OCT100_130"/>
 *     <enumeration value="OCT108_135"/>
 *     <enumeration value="OCT115_145"/>
 *     <enumeration value="MOGAS"/>
 *     <enumeration value="JET"/>
 *     <enumeration value="A"/>
 *     <enumeration value="A1"/>
 *     <enumeration value="A1_PLUS"/>
 *     <enumeration value="B"/>
 *     <enumeration value="JP1"/>
 *     <enumeration value="JP2"/>
 *     <enumeration value="JP3"/>
 *     <enumeration value="JP4"/>
 *     <enumeration value="JP5"/>
 *     <enumeration value="JP6"/>
 *     <enumeration value="JPTS"/>
 *     <enumeration value="JP7"/>
 *     <enumeration value="JP8"/>
 *     <enumeration value="JP8_HIGHER"/>
 *     <enumeration value="JP9"/>
 *     <enumeration value="JP10"/>
 *     <enumeration value="F18"/>
 *     <enumeration value="F34"/>
 *     <enumeration value="F35"/>
 *     <enumeration value="F40"/>
 *     <enumeration value="F44"/>
 *     <enumeration value="TR0"/>
 *     <enumeration value="TR4"/>
 *     <enumeration value="TS1"/>
 *     <enumeration value="RT"/>
 *     <enumeration value="ALL"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "CodeFuelBaseType")
@XmlEnum
public enum CodeFuelBaseType {

    AVGAS("AVGAS"),
    AVGAS_LL("AVGAS_LL"),
    @XmlEnumValue("OCT73")
    OCT_73("OCT73"),
    @XmlEnumValue("OCT80")
    OCT_80("OCT80"),
    @XmlEnumValue("OCT82UL")
    OCT_82_UL("OCT82UL"),
    @XmlEnumValue("OCT80_87")
    OCT_80_87("OCT80_87"),
    @XmlEnumValue("OCT91_98")
    OCT_91_98("OCT91_98"),
    @XmlEnumValue("OCT100_130")
    OCT_100_130("OCT100_130"),
    @XmlEnumValue("OCT108_135")
    OCT_108_135("OCT108_135"),
    @XmlEnumValue("OCT115_145")
    OCT_115_145("OCT115_145"),
    MOGAS("MOGAS"),
    JET("JET"),
    A("A"),
    @XmlEnumValue("A1")
    A_1("A1"),
    @XmlEnumValue("A1_PLUS")
    A_1_PLUS("A1_PLUS"),
    B("B"),
    @XmlEnumValue("JP1")
    JP_1("JP1"),
    @XmlEnumValue("JP2")
    JP_2("JP2"),
    @XmlEnumValue("JP3")
    JP_3("JP3"),
    @XmlEnumValue("JP4")
    JP_4("JP4"),
    @XmlEnumValue("JP5")
    JP_5("JP5"),
    @XmlEnumValue("JP6")
    JP_6("JP6"),
    JPTS("JPTS"),
    @XmlEnumValue("JP7")
    JP_7("JP7"),
    @XmlEnumValue("JP8")
    JP_8("JP8"),
    @XmlEnumValue("JP8_HIGHER")
    JP_8_HIGHER("JP8_HIGHER"),
    @XmlEnumValue("JP9")
    JP_9("JP9"),
    @XmlEnumValue("JP10")
    JP_10("JP10"),
    @XmlEnumValue("F18")
    F_18("F18"),
    @XmlEnumValue("F34")
    F_34("F34"),
    @XmlEnumValue("F35")
    F_35("F35"),
    @XmlEnumValue("F40")
    F_40("F40"),
    @XmlEnumValue("F44")
    F_44("F44"),
    @XmlEnumValue("TR0")
    TR_0("TR0"),
    @XmlEnumValue("TR4")
    TR_4("TR4"),
    @XmlEnumValue("TS1")
    TS_1("TS1"),
    RT("RT"),
    ALL("ALL");
    private final String value;

    CodeFuelBaseType(String v) {
        value = v;
    }

    /**
     * Gets the value associated to the enum constant.
     * 
     * @return
     *     The value linked to the enum.
     */
    public String value() {
        return value;
    }

    /**
     * Gets the enum associated to the value passed as parameter.
     * 
     * @param v
     *     The value to get the enum from.
     * @return
     *     The enum which corresponds to the value, if it exists.
     * @throws IllegalArgumentException
     *     If no value matches in the enum declaration.
     */
    public static CodeFuelBaseType fromValue(String v) {
        for (CodeFuelBaseType c: CodeFuelBaseType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
