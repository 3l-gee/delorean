//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.test.aixm;

import javax.xml.namespace.QName;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.aixm.delorean.core.schema.test.aixm package. 
 * <p>An ObjectFactory allows you to programmatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private static final QName _Feature_QNAME = new QName("http://www.test.com", "Feature");
    private static final QName _FeatureCollection_QNAME = new QName("http://www.test.com", "FeatureCollection");
    private static final QName _FeatureTypeA_QNAME = new QName("http://www.test.com", "a");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.aixm.delorean.core.schema.test.aixm
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FeatureType }
     * 
     * @return
     *     the new instance of {@link FeatureType }
     */
    public FeatureType createFeatureType() {
        return new FeatureType();
    }

    /**
     * Create an instance of {@link FeatureCollectionType }
     * 
     * @return
     *     the new instance of {@link FeatureCollectionType }
     */
    public FeatureCollectionType createFeatureCollectionType() {
        return new FeatureCollectionType();
    }

    /**
     * Create an instance of {@link DistanceType }
     * 
     * @return
     *     the new instance of {@link DistanceType }
     */
    public DistanceType createDistanceType() {
        return new DistanceType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FeatureType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FeatureType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.test.com", name = "Feature")
    public JAXBElement<FeatureType> createFeature(FeatureType value) {
        return new JAXBElement<>(_Feature_QNAME, FeatureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FeatureCollectionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FeatureCollectionType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.test.com", name = "FeatureCollection")
    public JAXBElement<FeatureCollectionType> createFeatureCollection(FeatureCollectionType value) {
        return new JAXBElement<>(_FeatureCollection_QNAME, FeatureCollectionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DistanceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DistanceType }{@code >}
     */
    @XmlElementDecl(namespace = "http://www.test.com", name = "a", scope = FeatureType.class)
    public JAXBElement<DistanceType> createFeatureTypeA(DistanceType value) {
        return new JAXBElement<>(_FeatureTypeA_QNAME, DistanceType.class, FeatureType.class, value);
    }

}
