//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.school.org.gml;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * gml:KnotPropertyType encapsulates a knot to use it in a geometric type.
 * 
 * <p>Java class for KnotPropertyType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="KnotPropertyType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="Knot" type="{http://www.opengis.net/gml/3.2}KnotType"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "KnotPropertyType", propOrder = {
    "knot"
})
public class KnotPropertyType {

    /**
     * A knot is a breakpoint on a piecewise spline curve.
     * value is the value of the parameter at the knot of the spline (see ISO 19107:2003, 6.4.24.2).
     * multiplicity is the multiplicity of this knot used in the definition of the spline (with the same weight).
     * weight is the value of the averaging weight used for this knot of the spline.
     * 
     */
    @XmlElement(name = "Knot", required = true)
    protected KnotType knot;

    /**
     * A knot is a breakpoint on a piecewise spline curve.
     * value is the value of the parameter at the knot of the spline (see ISO 19107:2003, 6.4.24.2).
     * multiplicity is the multiplicity of this knot used in the definition of the spline (with the same weight).
     * weight is the value of the averaging weight used for this knot of the spline.
     * 
     * @return
     *     possible object is
     *     {@link KnotType }
     *     
     */
    public KnotType getKnot() {
        return knot;
    }

    /**
     * Sets the value of the knot property.
     * 
     * @param value
     *     allowed object is
     *     {@link KnotType }
     *     
     * @see #getKnot()
     */
    public void setKnot(KnotType value) {
        this.knot = value;
    }

    public boolean isSetKnot() {
        return (this.knot!= null);
    }

}
