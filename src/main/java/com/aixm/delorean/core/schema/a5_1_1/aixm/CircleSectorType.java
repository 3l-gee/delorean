//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.a5_1_1.aixm;

import java.util.ArrayList;
import java.util.List;
import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CircleSectorType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="CircleSectorType">
 *   <complexContent>
 *     <extension base="{http://www.aixm.aero/schema/5.1.1}AbstractAIXMObjectType">
 *       <sequence>
 *         <group ref="{http://www.aixm.aero/schema/5.1.1}CircleSectorPropertyGroup"/>
 *         <element name="extension" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <choice>
 *                   <element ref="{http://www.aixm.aero/schema/5.1.1}AbstractCircleSectorExtension"/>
 *                 </choice>
 *                 <attGroup ref="{http://www.opengis.net/gml/3.2}OwnershipAttributeGroup"/>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CircleSectorType", propOrder = {
    "arcDirection",
    "fromAngle",
    "toAngle",
    "angleType",
    "angleDirectionReference",
    "innerDistance",
    "outerDistance",
    "upperLimit",
    "upperLimitReference",
    "lowerLimit",
    "lowerLimitReference",
    "annotation",
    "extension"
})
@Entity
@Table(name = "circlesector", schema = "circle_sector")
public class CircleSectorType
    extends AbstractAIXMObjectType
{

    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "arcdirection_value", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "arcdirection_nilreason", length = 255, nullable = true, unique = false))
    })
    protected CodeArcDirectionType arcDirection;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "fromangle_value", length = 255, columnDefinition = "DECIMAL", nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "fromangle_nilreason", length = 255, nullable = true, unique = false))
    })
    protected ValBearingType fromAngle;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "toangle_value", length = 255, columnDefinition = "DECIMAL", nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "toangle_nilreason", length = 255, nullable = true, unique = false))
    })
    protected ValBearingType toAngle;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "angle_type_value", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "angle_type_nilreason", length = 255, nullable = true, unique = false))
    })
    protected CodeBearingType angleType;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "angledirectionreference_value", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "angledirectionreference_nilreason", length = 255, nullable = true, unique = false))
    })
    protected CodeDirectionReferenceType angleDirectionReference;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "innerdistance_value", length = 255, columnDefinition = "DECIMAL", nullable = true, unique = false)),
        @AttributeOverride(name = "uom", column = @Column(name = "innerdistance_uom", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "innerdistance_nilreason", length = 255, nullable = true, unique = false))
    })
    protected ValDistanceType innerDistance;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "outerdistance_value", length = 255, columnDefinition = "DECIMAL", nullable = true, unique = false)),
        @AttributeOverride(name = "uom", column = @Column(name = "outerdistance_uom", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "outerdistance_nilreason", length = 255, nullable = true, unique = false))
    })
    protected ValDistanceType outerDistance;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "upperlimit_value", length = 255, columnDefinition = "TEXT", nullable = true, unique = false)),
        @AttributeOverride(name = "uom", column = @Column(name = "upperlimit_uom", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "upperlimit_nilreason", length = 255, nullable = true, unique = false))
    })
    protected ValDistanceVerticalType upperLimit;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "upperlimitreference_value", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "upperlimitreference_nilreason", length = 255, nullable = true, unique = false))
    })
    protected CodeVerticalReferenceType upperLimitReference;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "lowerlimit_value", length = 255, columnDefinition = "TEXT", nullable = true, unique = false)),
        @AttributeOverride(name = "uom", column = @Column(name = "lowerlimit_uom", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "lowerlimit_nilreason", length = 255, nullable = true, unique = false))
    })
    protected ValDistanceVerticalType lowerLimit;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "value", column = @Column(name = "lowerlimitreference_value", length = 255, nullable = true, unique = false)),
        @AttributeOverride(name = "nilReason", column = @Column(name = "lowerlimitreference_nilreason", length = 255, nullable = true, unique = false))
    })
    protected CodeVerticalReferenceType lowerLimitReference;
    @XmlElement(nillable = true)
    @OneToMany(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinTable(name = "circlesector_pg_annotation", joinColumns = {
        @JoinColumn(name = "circlesector_pg_id")
    }, inverseJoinColumns = {
        @JoinColumn(name = "note_pt_id")
    })
    protected List<NotePropertyType> annotation;
    @Transient
    protected List<CircleSectorType.Extension> extension;

    /**
     * Gets the value of the arcDirection property.
     * 
     * @return
     *     possible object is
     *     {@link CodeArcDirectionType }
     *     
     */
    public CodeArcDirectionType getArcDirection() {
        return arcDirection;
    }

    /**
     * Sets the value of the arcDirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeArcDirectionType }
     *     
     */
    public void setArcDirection(CodeArcDirectionType value) {
        this.arcDirection = value;
    }

    public boolean isSetArcDirection() {
        return (this.arcDirection!= null);
    }

    /**
     * Gets the value of the fromAngle property.
     * 
     * @return
     *     possible object is
     *     {@link ValBearingType }
     *     
     */
    public ValBearingType getFromAngle() {
        return fromAngle;
    }

    /**
     * Sets the value of the fromAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValBearingType }
     *     
     */
    public void setFromAngle(ValBearingType value) {
        this.fromAngle = value;
    }

    public boolean isSetFromAngle() {
        return (this.fromAngle!= null);
    }

    /**
     * Gets the value of the toAngle property.
     * 
     * @return
     *     possible object is
     *     {@link ValBearingType }
     *     
     */
    public ValBearingType getToAngle() {
        return toAngle;
    }

    /**
     * Sets the value of the toAngle property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValBearingType }
     *     
     */
    public void setToAngle(ValBearingType value) {
        this.toAngle = value;
    }

    public boolean isSetToAngle() {
        return (this.toAngle!= null);
    }

    /**
     * Gets the value of the angleType property.
     * 
     * @return
     *     possible object is
     *     {@link CodeBearingType }
     *     
     */
    public CodeBearingType getAngleType() {
        return angleType;
    }

    /**
     * Sets the value of the angleType property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeBearingType }
     *     
     */
    public void setAngleType(CodeBearingType value) {
        this.angleType = value;
    }

    public boolean isSetAngleType() {
        return (this.angleType!= null);
    }

    /**
     * Gets the value of the angleDirectionReference property.
     * 
     * @return
     *     possible object is
     *     {@link CodeDirectionReferenceType }
     *     
     */
    public CodeDirectionReferenceType getAngleDirectionReference() {
        return angleDirectionReference;
    }

    /**
     * Sets the value of the angleDirectionReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeDirectionReferenceType }
     *     
     */
    public void setAngleDirectionReference(CodeDirectionReferenceType value) {
        this.angleDirectionReference = value;
    }

    public boolean isSetAngleDirectionReference() {
        return (this.angleDirectionReference!= null);
    }

    /**
     * Gets the value of the innerDistance property.
     * 
     * @return
     *     possible object is
     *     {@link ValDistanceType }
     *     
     */
    public ValDistanceType getInnerDistance() {
        return innerDistance;
    }

    /**
     * Sets the value of the innerDistance property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValDistanceType }
     *     
     */
    public void setInnerDistance(ValDistanceType value) {
        this.innerDistance = value;
    }

    public boolean isSetInnerDistance() {
        return (this.innerDistance!= null);
    }

    /**
     * Gets the value of the outerDistance property.
     * 
     * @return
     *     possible object is
     *     {@link ValDistanceType }
     *     
     */
    public ValDistanceType getOuterDistance() {
        return outerDistance;
    }

    /**
     * Sets the value of the outerDistance property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValDistanceType }
     *     
     */
    public void setOuterDistance(ValDistanceType value) {
        this.outerDistance = value;
    }

    public boolean isSetOuterDistance() {
        return (this.outerDistance!= null);
    }

    /**
     * Gets the value of the upperLimit property.
     * 
     * @return
     *     possible object is
     *     {@link ValDistanceVerticalType }
     *     
     */
    public ValDistanceVerticalType getUpperLimit() {
        return upperLimit;
    }

    /**
     * Sets the value of the upperLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValDistanceVerticalType }
     *     
     */
    public void setUpperLimit(ValDistanceVerticalType value) {
        this.upperLimit = value;
    }

    public boolean isSetUpperLimit() {
        return (this.upperLimit!= null);
    }

    /**
     * Gets the value of the upperLimitReference property.
     * 
     * @return
     *     possible object is
     *     {@link CodeVerticalReferenceType }
     *     
     */
    public CodeVerticalReferenceType getUpperLimitReference() {
        return upperLimitReference;
    }

    /**
     * Sets the value of the upperLimitReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeVerticalReferenceType }
     *     
     */
    public void setUpperLimitReference(CodeVerticalReferenceType value) {
        this.upperLimitReference = value;
    }

    public boolean isSetUpperLimitReference() {
        return (this.upperLimitReference!= null);
    }

    /**
     * Gets the value of the lowerLimit property.
     * 
     * @return
     *     possible object is
     *     {@link ValDistanceVerticalType }
     *     
     */
    public ValDistanceVerticalType getLowerLimit() {
        return lowerLimit;
    }

    /**
     * Sets the value of the lowerLimit property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValDistanceVerticalType }
     *     
     */
    public void setLowerLimit(ValDistanceVerticalType value) {
        this.lowerLimit = value;
    }

    public boolean isSetLowerLimit() {
        return (this.lowerLimit!= null);
    }

    /**
     * Gets the value of the lowerLimitReference property.
     * 
     * @return
     *     possible object is
     *     {@link CodeVerticalReferenceType }
     *     
     */
    public CodeVerticalReferenceType getLowerLimitReference() {
        return lowerLimitReference;
    }

    /**
     * Sets the value of the lowerLimitReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeVerticalReferenceType }
     *     
     */
    public void setLowerLimitReference(CodeVerticalReferenceType value) {
        this.lowerLimitReference = value;
    }

    public boolean isSetLowerLimitReference() {
        return (this.lowerLimitReference!= null);
    }

    /**
     * Gets the value of the annotation property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the annotation property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getAnnotation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NotePropertyType }
     * </p>
     * 
     * 
     * @return
     *     The value of the annotation property.
     */
    public List<NotePropertyType> getAnnotation() {
        if (annotation == null) {
            annotation = new ArrayList<>();
        }
        return this.annotation;
    }

    public boolean isSetAnnotation() {
        return ((this.annotation!= null)&&(!this.annotation.isEmpty()));
    }

    public void unsetAnnotation() {
        this.annotation = null;
    }

    /**
     * Gets the value of the extension property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extension property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getExtension().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CircleSectorType.Extension }
     * </p>
     * 
     * 
     * @return
     *     The value of the extension property.
     */
    public List<CircleSectorType.Extension> getExtension() {
        if (extension == null) {
            extension = new ArrayList<>();
        }
        return this.extension;
    }

    public boolean isSetExtension() {
        return ((this.extension!= null)&&(!this.extension.isEmpty()));
    }

    public void unsetExtension() {
        this.extension = null;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <choice>
     *         <element ref="{http://www.aixm.aero/schema/5.1.1}AbstractCircleSectorExtension"/>
     *       </choice>
     *       <attGroup ref="{http://www.opengis.net/gml/3.2}OwnershipAttributeGroup"/>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "abstractCircleSectorExtension"
    })
    public static class Extension {

        @XmlElement(name = "AbstractCircleSectorExtension")
        @OneToOne(cascade = {
            CascadeType.ALL
        }, fetch = FetchType.EAGER)
        @JoinColumn(name = "abstractcirclesectorextension_id", referencedColumnName = "id")
        protected AbstractExtensionType abstractCircleSectorExtension;
        @XmlAttribute(name = "owns")
        @Transient
        protected Boolean owns;

        /**
         * Gets the value of the abstractCircleSectorExtension property.
         * 
         * @return
         *     possible object is
         *     {@link AbstractExtensionType }
         *     
         */
        public AbstractExtensionType getAbstractCircleSectorExtension() {
            return abstractCircleSectorExtension;
        }

        /**
         * Sets the value of the abstractCircleSectorExtension property.
         * 
         * @param value
         *     allowed object is
         *     {@link AbstractExtensionType }
         *     
         */
        public void setAbstractCircleSectorExtension(AbstractExtensionType value) {
            this.abstractCircleSectorExtension = value;
        }

        public boolean isSetAbstractCircleSectorExtension() {
            return (this.abstractCircleSectorExtension!= null);
        }

        /**
         * Gets the value of the owns property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isOwns() {
            if (owns == null) {
                return false;
            } else {
                return owns;
            }
        }

        /**
         * Sets the value of the owns property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setOwns(boolean value) {
            this.owns = value;
        }

        public boolean isSetOwns() {
            return (this.owns!= null);
        }

        public void unsetOwns() {
            this.owns = null;
        }

    }

}
