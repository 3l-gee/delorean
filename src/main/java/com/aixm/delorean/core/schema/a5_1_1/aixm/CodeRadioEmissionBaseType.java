//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.a5_1_1.aixm;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 * 
 * <p>Java class for CodeRadioEmissionBaseType</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * <pre>{@code
 * <simpleType name="CodeRadioEmissionBaseType">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="A2"/>
 *     <enumeration value="A3A"/>
 *     <enumeration value="A3B"/>
 *     <enumeration value="A3E"/>
 *     <enumeration value="A3H"/>
 *     <enumeration value="A3J"/>
 *     <enumeration value="A3L"/>
 *     <enumeration value="A3U"/>
 *     <enumeration value="J3E"/>
 *     <enumeration value="NONA1A"/>
 *     <enumeration value="NONA2A"/>
 *     <enumeration value="PON"/>
 *     <enumeration value="A8W"/>
 *     <enumeration value="A9W"/>
 *     <enumeration value="NOX"/>
 *     <enumeration value="G1D"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@XmlType(name = "CodeRadioEmissionBaseType")
@XmlEnum
public enum CodeRadioEmissionBaseType {

    @XmlEnumValue("A2")
    A_2("A2"),
    @XmlEnumValue("A3A")
    A_3_A("A3A"),
    @XmlEnumValue("A3B")
    A_3_B("A3B"),
    @XmlEnumValue("A3E")
    A_3_E("A3E"),
    @XmlEnumValue("A3H")
    A_3_H("A3H"),
    @XmlEnumValue("A3J")
    A_3_J("A3J"),
    @XmlEnumValue("A3L")
    A_3_L("A3L"),
    @XmlEnumValue("A3U")
    A_3_U("A3U"),
    @XmlEnumValue("J3E")
    J_3_E("J3E"),
    @XmlEnumValue("NONA1A")
    NONA_1_A("NONA1A"),
    @XmlEnumValue("NONA2A")
    NONA_2_A("NONA2A"),
    PON("PON"),
    @XmlEnumValue("A8W")
    A_8_W("A8W"),
    @XmlEnumValue("A9W")
    A_9_W("A9W"),
    NOX("NOX"),
    @XmlEnumValue("G1D")
    G_1_D("G1D");
    private final String value;

    CodeRadioEmissionBaseType(String v) {
        value = v;
    }

    /**
     * Gets the value associated to the enum constant.
     * 
     * @return
     *     The value linked to the enum.
     */
    public String value() {
        return value;
    }

    /**
     * Gets the enum associated to the value passed as parameter.
     * 
     * @param v
     *     The value to get the enum from.
     * @return
     *     The enum which corresponds to the value, if it exists.
     * @throws IllegalArgumentException
     *     If no value matches in the enum declaration.
     */
    public static CodeRadioEmissionBaseType fromValue(String v) {
        for (CodeRadioEmissionBaseType c: CodeRadioEmissionBaseType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
