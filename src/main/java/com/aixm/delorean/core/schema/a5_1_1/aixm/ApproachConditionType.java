//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.a5_1_1.aixm;

import java.util.ArrayList;
import java.util.List;
import jakarta.persistence.AttributeOverride;
import jakarta.persistence.AttributeOverrides;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Transient;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ApproachConditionType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="ApproachConditionType">
 *   <complexContent>
 *     <extension base="{http://www.aixm.aero/schema/5.1.1}AbstractAIXMObjectType">
 *       <sequence>
 *         <group ref="{http://www.aixm.aero/schema/5.1.1}ApproachConditionPropertyGroup"/>
 *         <element name="extension" maxOccurs="unbounded" minOccurs="0">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <choice>
 *                   <element ref="{http://www.aixm.aero/schema/5.1.1}AbstractApproachConditionExtension"/>
 *                 </choice>
 *                 <attGroup ref="{http://www.opengis.net/gml/3.2}OwnershipAttributeGroup"/>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *       </sequence>
 *     </extension>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ApproachConditionType", propOrder = {
    "finalApproachPath",
    "requiredNavigationPerformance",
    "climbGradient",
    "minimumSet",
    "circlingRestriction",
    "aircraftCategory",
    "landingArea",
    "altimeter",
    "designSurface",
    "annotation",
    "extension"
})
@Entity
@Table(name = "approachconditiontype", schema = "approach")
public class ApproachConditionType
    extends AbstractAIXMObjectType
{

    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "nilReason", column = @Column(name = "finalapproachpath_nilreason")),
        @AttributeOverride(name = "value", column = @Column(name = "finalapproachpath"))
    })
    protected CodeMinimaFinalApproachPathType finalApproachPath;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "nilReason", column = @Column(name = "requirednavigationperformance_nilreason")),
        @AttributeOverride(name = "value", column = @Column(name = "requirednavigationperformance"))
    })
    protected CodeRNPType requiredNavigationPerformance;
    @XmlElement(nillable = true)
    @Embedded
    @AttributeOverrides({
        @AttributeOverride(name = "nilReason", column = @Column(name = "climbgradient_nilreason")),
        @AttributeOverride(name = "value", column = @Column(name = "climbgradient"))
    })
    protected ValSlopeType climbGradient;
    @XmlElement(nillable = true)
    @OneToOne(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "minimumset_id", referencedColumnName = "id")
    protected MinimaPropertyType minimumSet;
    @XmlElement(nillable = true)
    @ManyToMany(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinTable(name = "approachcondition_pg_circlingrestriction", joinColumns = {
        @JoinColumn(name = "approachconditionpropertygroup_id")
    }, inverseJoinColumns = {
        @JoinColumn(name = "circlingrestrictionpropertytype_id")
    })
    protected List<CirclingRestrictionPropertyType> circlingRestriction;
    @XmlElement(nillable = true)
    @ManyToMany(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinTable(name = "approachcondition_pg_aircraftcategory", joinColumns = {
        @JoinColumn(name = "approachconditionpropertygroup_id")
    }, inverseJoinColumns = {
        @JoinColumn(name = "aircraftcharacteristicpropertytype_id")
    })
    protected List<AircraftCharacteristicPropertyType> aircraftCategory;
    @XmlElement(nillable = true)
    @ManyToMany(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinTable(name = "approachcondition_pg_landingarea", joinColumns = {
        @JoinColumn(name = "approachconditionpropertygroup_id")
    }, inverseJoinColumns = {
        @JoinColumn(name = "landingtakeoffareacollectionpropertytype_id")
    })
    protected List<LandingTakeoffAreaCollectionPropertyType> landingArea;
    @XmlElement(nillable = true)
    @OneToOne(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinColumn(name = "altimeter_id", referencedColumnName = "id")
    protected AltimeterSourcePropertyType altimeter;
    @XmlElement(nillable = true)
    @ManyToMany(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinTable(name = "approachcondition_pg_designsurface", joinColumns = {
        @JoinColumn(name = "approachconditionpropertygroup_id")
    }, inverseJoinColumns = {
        @JoinColumn(name = "obstacleassessmentareapropertytype_id")
    })
    protected List<ObstacleAssessmentAreaPropertyType> designSurface;
    @XmlElement(nillable = true)
    @ManyToMany(cascade = {
        CascadeType.ALL
    }, fetch = FetchType.EAGER)
    @JoinTable(name = "approachcondition_pg_annotation", joinColumns = {
        @JoinColumn(name = "approachconditionpropertygroup_id")
    }, inverseJoinColumns = {
        @JoinColumn(name = "notepropertytype_id")
    })
    protected List<NotePropertyType> annotation;
    @Transient
    protected List<ApproachConditionType.Extension> extension;

    /**
     * Gets the value of the finalApproachPath property.
     * 
     * @return
     *     possible object is
     *     {@link CodeMinimaFinalApproachPathType }
     *     
     */
    public CodeMinimaFinalApproachPathType getFinalApproachPath() {
        return finalApproachPath;
    }

    /**
     * Sets the value of the finalApproachPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeMinimaFinalApproachPathType }
     *     
     */
    public void setFinalApproachPath(CodeMinimaFinalApproachPathType value) {
        this.finalApproachPath = value;
    }

    public boolean isSetFinalApproachPath() {
        return (this.finalApproachPath!= null);
    }

    /**
     * Gets the value of the requiredNavigationPerformance property.
     * 
     * @return
     *     possible object is
     *     {@link CodeRNPType }
     *     
     */
    public CodeRNPType getRequiredNavigationPerformance() {
        return requiredNavigationPerformance;
    }

    /**
     * Sets the value of the requiredNavigationPerformance property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeRNPType }
     *     
     */
    public void setRequiredNavigationPerformance(CodeRNPType value) {
        this.requiredNavigationPerformance = value;
    }

    public boolean isSetRequiredNavigationPerformance() {
        return (this.requiredNavigationPerformance!= null);
    }

    /**
     * Gets the value of the climbGradient property.
     * 
     * @return
     *     possible object is
     *     {@link ValSlopeType }
     *     
     */
    public ValSlopeType getClimbGradient() {
        return climbGradient;
    }

    /**
     * Sets the value of the climbGradient property.
     * 
     * @param value
     *     allowed object is
     *     {@link ValSlopeType }
     *     
     */
    public void setClimbGradient(ValSlopeType value) {
        this.climbGradient = value;
    }

    public boolean isSetClimbGradient() {
        return (this.climbGradient!= null);
    }

    /**
     * Gets the value of the minimumSet property.
     * 
     * @return
     *     possible object is
     *     {@link MinimaPropertyType }
     *     
     */
    public MinimaPropertyType getMinimumSet() {
        return minimumSet;
    }

    /**
     * Sets the value of the minimumSet property.
     * 
     * @param value
     *     allowed object is
     *     {@link MinimaPropertyType }
     *     
     */
    public void setMinimumSet(MinimaPropertyType value) {
        this.minimumSet = value;
    }

    public boolean isSetMinimumSet() {
        return (this.minimumSet!= null);
    }

    /**
     * Gets the value of the circlingRestriction property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the circlingRestriction property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getCirclingRestriction().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CirclingRestrictionPropertyType }
     * </p>
     * 
     * 
     * @return
     *     The value of the circlingRestriction property.
     */
    public List<CirclingRestrictionPropertyType> getCirclingRestriction() {
        if (circlingRestriction == null) {
            circlingRestriction = new ArrayList<>();
        }
        return this.circlingRestriction;
    }

    public boolean isSetCirclingRestriction() {
        return ((this.circlingRestriction!= null)&&(!this.circlingRestriction.isEmpty()));
    }

    public void unsetCirclingRestriction() {
        this.circlingRestriction = null;
    }

    /**
     * Gets the value of the aircraftCategory property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the aircraftCategory property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getAircraftCategory().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AircraftCharacteristicPropertyType }
     * </p>
     * 
     * 
     * @return
     *     The value of the aircraftCategory property.
     */
    public List<AircraftCharacteristicPropertyType> getAircraftCategory() {
        if (aircraftCategory == null) {
            aircraftCategory = new ArrayList<>();
        }
        return this.aircraftCategory;
    }

    public boolean isSetAircraftCategory() {
        return ((this.aircraftCategory!= null)&&(!this.aircraftCategory.isEmpty()));
    }

    public void unsetAircraftCategory() {
        this.aircraftCategory = null;
    }

    /**
     * Gets the value of the landingArea property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the landingArea property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getLandingArea().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LandingTakeoffAreaCollectionPropertyType }
     * </p>
     * 
     * 
     * @return
     *     The value of the landingArea property.
     */
    public List<LandingTakeoffAreaCollectionPropertyType> getLandingArea() {
        if (landingArea == null) {
            landingArea = new ArrayList<>();
        }
        return this.landingArea;
    }

    public boolean isSetLandingArea() {
        return ((this.landingArea!= null)&&(!this.landingArea.isEmpty()));
    }

    public void unsetLandingArea() {
        this.landingArea = null;
    }

    /**
     * Gets the value of the altimeter property.
     * 
     * @return
     *     possible object is
     *     {@link AltimeterSourcePropertyType }
     *     
     */
    public AltimeterSourcePropertyType getAltimeter() {
        return altimeter;
    }

    /**
     * Sets the value of the altimeter property.
     * 
     * @param value
     *     allowed object is
     *     {@link AltimeterSourcePropertyType }
     *     
     */
    public void setAltimeter(AltimeterSourcePropertyType value) {
        this.altimeter = value;
    }

    public boolean isSetAltimeter() {
        return (this.altimeter!= null);
    }

    /**
     * Gets the value of the designSurface property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the designSurface property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getDesignSurface().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObstacleAssessmentAreaPropertyType }
     * </p>
     * 
     * 
     * @return
     *     The value of the designSurface property.
     */
    public List<ObstacleAssessmentAreaPropertyType> getDesignSurface() {
        if (designSurface == null) {
            designSurface = new ArrayList<>();
        }
        return this.designSurface;
    }

    public boolean isSetDesignSurface() {
        return ((this.designSurface!= null)&&(!this.designSurface.isEmpty()));
    }

    public void unsetDesignSurface() {
        this.designSurface = null;
    }

    /**
     * Gets the value of the annotation property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the annotation property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getAnnotation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NotePropertyType }
     * </p>
     * 
     * 
     * @return
     *     The value of the annotation property.
     */
    public List<NotePropertyType> getAnnotation() {
        if (annotation == null) {
            annotation = new ArrayList<>();
        }
        return this.annotation;
    }

    public boolean isSetAnnotation() {
        return ((this.annotation!= null)&&(!this.annotation.isEmpty()));
    }

    public void unsetAnnotation() {
        this.annotation = null;
    }

    /**
     * Gets the value of the extension property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extension property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getExtension().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ApproachConditionType.Extension }
     * </p>
     * 
     * 
     * @return
     *     The value of the extension property.
     */
    public List<ApproachConditionType.Extension> getExtension() {
        if (extension == null) {
            extension = new ArrayList<>();
        }
        return this.extension;
    }

    public boolean isSetExtension() {
        return ((this.extension!= null)&&(!this.extension.isEmpty()));
    }

    public void unsetExtension() {
        this.extension = null;
    }


    /**
     * <p>Java class for anonymous complex type</p>.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.</p>
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <choice>
     *         <element ref="{http://www.aixm.aero/schema/5.1.1}AbstractApproachConditionExtension"/>
     *       </choice>
     *       <attGroup ref="{http://www.opengis.net/gml/3.2}OwnershipAttributeGroup"/>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "abstractApproachConditionExtension"
    })
    public static class Extension {

        @XmlElement(name = "AbstractApproachConditionExtension")
        @OneToOne(cascade = {
            CascadeType.ALL
        }, fetch = FetchType.EAGER)
        @JoinColumn(name = "abstractapproachconditionextension_id", referencedColumnName = "id")
        protected AbstractExtensionType abstractApproachConditionExtension;
        @XmlAttribute(name = "owns")
        @Transient
        protected Boolean owns;

        /**
         * Gets the value of the abstractApproachConditionExtension property.
         * 
         * @return
         *     possible object is
         *     {@link AbstractExtensionType }
         *     
         */
        public AbstractExtensionType getAbstractApproachConditionExtension() {
            return abstractApproachConditionExtension;
        }

        /**
         * Sets the value of the abstractApproachConditionExtension property.
         * 
         * @param value
         *     allowed object is
         *     {@link AbstractExtensionType }
         *     
         */
        public void setAbstractApproachConditionExtension(AbstractExtensionType value) {
            this.abstractApproachConditionExtension = value;
        }

        public boolean isSetAbstractApproachConditionExtension() {
            return (this.abstractApproachConditionExtension!= null);
        }

        /**
         * Gets the value of the owns property.
         * 
         * @return
         *     possible object is
         *     {@link Boolean }
         *     
         */
        public boolean isOwns() {
            if (owns == null) {
                return false;
            } else {
                return owns;
            }
        }

        /**
         * Sets the value of the owns property.
         * 
         * @param value
         *     allowed object is
         *     {@link Boolean }
         *     
         */
        public void setOwns(boolean value) {
            this.owns = value;
        }

        public boolean isSetOwns() {
            return (this.owns!= null);
        }

        public void unsetOwns() {
            this.owns = null;
        }

    }

}
