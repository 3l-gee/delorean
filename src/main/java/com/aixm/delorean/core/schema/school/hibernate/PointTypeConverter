package com.aixm.delorean.core.schema.hibernate;

import org.hibernate.engine.spi.SharedSessionContractImplementor;
import org.hibernate.usertype.UserType;
import org.locationtech.jts.geom.Point;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;

public class PointTypeConverter implements UserType {

    @Override
    public int[] sqlTypes() {
        return new int[]{Types.OTHER};  // PostGIS types
    }

    @Override
    public Class<Point> returnedClass() {
        return Point.class;
    }

    @Override
    public Object nullSafeGet(ResultSet rs, String[] names, SharedSessionContractImplementor session, Object owner) throws SQLException {
        String point = rs.getString(names[0]);
        if (point != null) {
            // Convert String to Point object
            return new Point(point);
        }
        return null;
    }

    @Override
    public void nullSafeSet(PreparedStatement st, Object value, int index, SharedSessionContractImplementor session) throws SQLException {
        if (value != null) {
            Point point = (Point) value;
            // Convert Point to string representation before storing in the database
            st.setObject(index, point.toString(), Types.OTHER);
        } else {
            st.setNull(index, Types.OTHER);
        }
    }

    // Other methods like deepCopy(), equals(), etc., are omitted for brevity.
}
