//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.aixm.delorean.core.schema.a5_1.aixm;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Inheritance;
import jakarta.persistence.InheritanceType;
import jakarta.persistence.SequenceGenerator;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.bind.annotation.XmlTransient;
import jakarta.xml.bind.annotation.XmlType;


/**
 * It provides a basis for deriving AIXM feature/object properties. It defines the nilReason attribute and currently, it is only used for properties that are derived from association with an AIM object.
 * 
 * <p>Java class for AbstractAIXMPropertyType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="AbstractAIXMPropertyType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="dbid" type="{http://www.w3.org/2001/XMLSchema}long" minOccurs="0"/>
 *       </sequence>
 *       <attribute name="nilReason" type="{http://www.opengis.net/gml/3.2}NilReasonEnumeration" />
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AbstractAIXMPropertyType", propOrder = {

})
@XmlSeeAlso({
    NavaidEquipmentDistancePropertyType.class,
    RunwayDeclaredDistancePropertyType.class,
    RunwayDeclaredDistanceValuePropertyType.class,
    ManoeuvringAreaAvailabilityPropertyType.class,
    ManoeuvringAreaUsagePropertyType.class,
    ApronAreaAvailabilityPropertyType.class,
    ApronAreaUsagePropertyType.class,
    LightActivationPropertyType.class,
    GroundLightingAvailabilityPropertyType.class,
    MarkingElementPropertyType.class,
    SurfaceContaminationPropertyType.class,
    RidgePropertyType.class,
    RunwayContaminationPropertyType.class,
    TaxiwayContaminationPropertyType.class,
    SurfaceContaminationLayerPropertyType.class,
    RunwaySectionContaminationPropertyType.class,
    TouchDownLiftOffContaminationPropertyType.class,
    ApronContaminationPropertyType.class,
    AircraftStandContaminationPropertyType.class,
    AirportHeliportContaminationPropertyType.class,
    SurfaceCharacteristicsPropertyType.class,
    CityPropertyType.class,
    UsageConditionPropertyType.class,
    AirportHeliportResponsibilityOrganisationPropertyType.class,
    AltimeterSourceStatusPropertyType.class,
    WorkareaActivityPropertyType.class,
    ConditionCombinationPropertyType.class,
    AirportHeliportAvailabilityPropertyType.class,
    AirportHeliportUsagePropertyType.class,
    AirspaceGeometryComponentPropertyType.class,
    AirspaceVolumePropertyType.class,
    AirspaceActivationPropertyType.class,
    AirspaceLayerClassPropertyType.class,
    AirspaceVolumeDependencyPropertyType.class,
    CurvePropertyType.class,
    ElevatedCurvePropertyType.class,
    ElevatedPointPropertyType.class,
    ElevatedSurfacePropertyType.class,
    PointPropertyType.class,
    SurfacePropertyType.class,
    RadarComponentPropertyType.class,
    ReflectorPropertyType.class,
    SurveillanceGroundStationPropertyType.class,
    ObstacleAssessmentAreaPropertyType.class,
    ObstructionPropertyType.class,
    AltitudeAdjustmentPropertyType.class,
    ObstaclePlacementPropertyType.class,
    StandardLevelPropertyType.class,
    ContactInformationPropertyType.class,
    OnlineContactPropertyType.class,
    PostalAddressPropertyType.class,
    TelephoneContactPropertyType.class,
    AircraftCharacteristicPropertyType.class,
    FlightCharacteristicPropertyType.class,
    LightElementPropertyType.class,
    LightElementStatusPropertyType.class,
    AirspaceLayerPropertyType.class,
    CircleSectorPropertyType.class,
    TimesheetPropertyType.class,
    PropertiesWithSchedulePropertyType.class,
    MeteorologyPropertyType.class,
    CallsignDetailPropertyType.class,
    FuelPropertyType.class,
    NitrogenPropertyType.class,
    OilPropertyType.class,
    OxygenPropertyType.class,
    ServiceOperationalStatusPropertyType.class,
    RadioCommunicationOperationalStatusPropertyType.class,
    PointReferencePropertyType.class,
    SegmentPointPropertyType.class,
    TerminalSegmentPointPropertyType.class,
    EnRouteSegmentPointPropertyType.class,
    AngleUsePropertyType.class,
    AuthorityForNavaidEquipmentPropertyType.class,
    AuthorityForSpecialNavigationStationPropertyType.class,
    AuthorityForSpecialNavigationSystemPropertyType.class,
    NavaidComponentPropertyType.class,
    NavaidOperationalStatusPropertyType.class,
    NavaidEquipmentMonitoringPropertyType.class,
    SpecialNavigationStationStatusPropertyType.class,
    NotePropertyType.class,
    LinguisticNotePropertyType.class,
    OrganisationAuthorityAssociationPropertyType.class,
    UnitDependencyPropertyType.class,
    UnitAvailabilityPropertyType.class,
    VerticalStructurePartPropertyType.class,
    VerticalStructureLightingStatusPropertyType.class,
    CirclingRestrictionPropertyType.class,
    MinimaPropertyType.class,
    EquipmentUnavailableAdjustmentPropertyType.class,
    EquipmentUnavailableAdjustmentColumnPropertyType.class,
    TerminalArrivalAreaSectorPropertyType.class,
    FASDataBlockPropertyType.class,
    ApproachAltitudeTablePropertyType.class,
    ApproachDistanceTablePropertyType.class,
    ApproachTimingTablePropertyType.class,
    FinalProfilePropertyType.class,
    MissedApproachGroupPropertyType.class,
    ApproachConditionPropertyType.class,
    NavigationAreaSectorPropertyType.class,
    DepartureArrivalConditionPropertyType.class,
    SectorDesignPropertyType.class,
    ProcedureAvailabilityPropertyType.class,
    ProcedureTransitionPropertyType.class,
    HoldingUsePropertyType.class,
    ProcedureTransitionLegPropertyType.class,
    LandingTakeoffAreaCollectionPropertyType.class,
    SafeAltitudeAreaSectorPropertyType.class,
    HoldingPatternDurationPropertyType.class,
    HoldingPatternDistancePropertyType.class,
    DirectFlightPropertyType.class,
    DirectFlightClassPropertyType.class,
    DirectFlightSegmentPropertyType.class,
    FlightConditionCombinationPropertyType.class,
    FlightConditionCircumstancePropertyType.class,
    FlightRestrictionLevelPropertyType.class,
    FlightRestrictionRoutePropertyType.class,
    FlightRoutingElementPropertyType.class,
    FlightConditionElementPropertyType.class,
    RouteAvailabilityPropertyType.class,
    RoutePortionPropertyType.class,
    AerialRefuellingPointPropertyType.class,
    AerialRefuellingAnchorPropertyType.class,
    AerialRefuellingTrackPropertyType.class,
    AuthorityForAerialRefuellingPropertyType.class
})
@Entity
@Inheritance(strategy = InheritanceType.TABLE_PER_CLASS)
public abstract class AbstractAIXMPropertyType {

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "delorean_seq_gen")
    @SequenceGenerator(name = "delorean_seq_gen", sequenceName = "delorean_seq_gen", allocationSize = 1)
    @Column(name = "id", length = 255, nullable = false, unique = true)
    @XmlTransient
    protected Long dbid;
    @XmlAttribute(name = "nilReason")
    protected String nilReason;

    /**
     * Gets the value of the dbid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getDbid() {
        return dbid;
    }

    /**
     * Sets the value of the dbid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setDbid(Long value) {
        this.dbid = value;
    }

    public boolean isSetDbid() {
        return (this.dbid!= null);
    }

    /**
     * Gets the value of the nilReason property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNilReason() {
        return nilReason;
    }

    /**
     * Sets the value of the nilReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNilReason(String value) {
        this.nilReason = value;
    }

    public boolean isSetNilReason() {
        return (this.nilReason!= null);
    }

}
