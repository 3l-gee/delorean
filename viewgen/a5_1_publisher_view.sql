-- LinguisticNotePropertyType
-- []
-- Snowflake SQL : LinguisticNotePropertyType 

CREATE INDEX ON notes.linguisticnote_pt (linguisticnote_id);
CREATE INDEX ON notes.linguisticnote (id);

DROP MATERIALIZED VIEW IF EXISTS notes.linguisticnote_view CASCADE;

CREATE MATERIALIZED VIEW notes.linguisticnote_view AS
SELECT 
    notes.linguisticnote_pt.id,
    notes.linguisticnote.note_lang AS lang,
    COALESCE(notes.linguisticnote.note_value, '('|| notes.linguisticnote.note_nilreason ||')') AS note
FROM notes.linguisticnote_pt
INNER JOIN notes.linguisticnote ON notes.linguisticnote_pt.linguisticnote_id = notes.linguisticnote.id;

CREATE INDEX ON notes.linguisticnote_view (id);
-- NotePropertyType
-- ['notes.linguisticnote_view']
-- Snowflake SQL : NotePropertyType 

CREATE INDEX ON notes.note_pt (note_id);
CREATE INDEX ON notes.note (id);

DROP MATERIALIZED VIEW IF EXISTS notes.note_view CASCADE;

CREATE MATERIALIZED VIEW notes.note_view AS
SELECT
    notes.note_pt.id,
    jsonb_build_object(
        'propertyName', COALESCE(notes.note.propertyname_value, '(' || notes.note.propertyname_nilreason || ')'),
        'purpose', COALESCE(notes.note.purpose_value, '(' || notes.note.purpose_nilreason || ')'),
        'notes', translated_notes.notes_array
    ) AS note
FROM notes.note_pt
INNER JOIN notes.note ON notes.note_pt.note_id = notes.note.id
LEFT JOIN LATERAL (
    SELECT jsonb_agg(
        jsonb_build_object(
            'id', notes.linguisticnote_view.id,
            'lang', notes.linguisticnote_view.lang,
            'note', notes.linguisticnote_view.note
        )
    ) AS notes_array
    FROM master_join
    JOIN notes.linguisticnote_view ON master_join.target_id = notes.linguisticnote_view.id
    WHERE master_join.source_id = notes.note.id
) AS translated_notes ON true;

CREATE INDEX ON notes.note_view (id);
-- AircraftCharacteristicPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.aircraftcharacteristic_view cascade;
create materialized view shared.aircraftcharacteristic_view as
select
    shared.aircraftcharacteristic_pt.id,
    shared.aircraftcharacteristic_pt.nilreason AS aircraftcharacteristic_nilreason,
    coalesce(cast(shared.aircraftcharacteristic.type_value as varchar), '(' || shared.aircraftcharacteristic.type_nilreason || ')') as type,
    coalesce(cast(shared.aircraftcharacteristic.engine_value as varchar), '(' || shared.aircraftcharacteristic.engine_nilreason || ')') as engine,
    coalesce(cast(shared.aircraftcharacteristic.numberengine_value as varchar), '(' || shared.aircraftcharacteristic.numberengine_nilreason || ')') as numberengine,
    coalesce(cast(shared.aircraftcharacteristic.typeaircrafticao_value as varchar), '(' || shared.aircraftcharacteristic.typeaircrafticao_nilreason || ')') as typeaircrafticao,
    coalesce(cast(shared.aircraftcharacteristic.aircraftlandingcategory_value as varchar), '(' || shared.aircraftcharacteristic.aircraftlandingcategory_nilreason || ')') as aircraftlandingcategory,
    coalesce(cast(shared.aircraftcharacteristic.wingspaninterpretation_value as varchar), '(' || shared.aircraftcharacteristic.wingspaninterpretation_nilreason || ')') as wingspaninterpretation,
    coalesce(cast(shared.aircraftcharacteristic.classwingspan_value as varchar), '(' || shared.aircraftcharacteristic.classwingspan_nilreason || ')') as classwingspan,
    coalesce(cast(shared.aircraftcharacteristic.weightinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.weightinterpretation_nilreason || ')') as weightinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.passengers_value as varchar), '(' || shared.aircraftcharacteristic.passengers_nilreason || ')') as passengers,
    coalesce(cast(shared.aircraftcharacteristic.passengersinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.passengersinterpretation_nilreason || ')') as passengersinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.speedinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.waketurbulence_value as varchar), '(' || shared.aircraftcharacteristic.waketurbulence_nilreason || ')') as waketurbulence,
    coalesce(cast(shared.aircraftcharacteristic.navigationequipment_value as varchar), '(' || shared.aircraftcharacteristic.navigationequipment_nilreason || ')') as navigationequipment,
    coalesce(cast(shared.aircraftcharacteristic.navigationspecification_value as varchar), '(' || shared.aircraftcharacteristic.navigationspecification_nilreason || ')') as navigationspecification,
    coalesce(cast(shared.aircraftcharacteristic.verticalseparationcapability_value as varchar), '(' || shared.aircraftcharacteristic.verticalseparationcapability_nilreason || ')') as verticalseparationcapability,
    coalesce(cast(shared.aircraftcharacteristic.anticollisionandseparationequipment_value as varchar), '(' || shared.aircraftcharacteristic.anticollisionandseparationequipment_nilreason || ')') as anticollisionandseparationequipment,
    coalesce(cast(shared.aircraftcharacteristic.communicationequipment_value as varchar), '(' || shared.aircraftcharacteristic.communicationequipment_nilreason || ')') as communicationequipment,
    coalesce(cast(shared.aircraftcharacteristic.surveillanceequipment_value as varchar), '(' || shared.aircraftcharacteristic.surveillanceequipment_nilreason || ')') as surveillanceequipment,
    coalesce(cast(shared.aircraftcharacteristic.wingspan_value as varchar) || ' ' || shared.aircraftcharacteristic.wingspan_uom, '(' || shared.aircraftcharacteristic.wingspan_nilreason || ')') as wingspan,
    coalesce(cast(shared.aircraftcharacteristic.weight_value as varchar) || ' ' || shared.aircraftcharacteristic.weight_uom, '(' || shared.aircraftcharacteristic.weight_nilreason || ')') as weight,
    coalesce(cast(shared.aircraftcharacteristic.speed_value as varchar) || ' ' || shared.aircraftcharacteristic.speed_uom, '(' || shared.aircraftcharacteristic.speed_nilreason || ')') as speed,
    jsonb_agg(notes_note_view_isffie.*) AS annotation
from shared.aircraftcharacteristic_pt 
inner join shared.aircraftcharacteristic on shared.aircraftcharacteristic_pt.aircraftcharacteristic_id = shared.aircraftcharacteristic.id
left join master_join master_join_exvzof on shared.aircraftcharacteristic.id = master_join_exvzof.source_id
left join notes.note_view notes_note_view_isffie on master_join_exvzof.target_id = notes_note_view_isffie.id
group by
    shared.aircraftcharacteristic_pt.id,
    shared.aircraftcharacteristic_pt.nilreason,
    shared.aircraftcharacteristic.type_value,
    shared.aircraftcharacteristic.type_nilreason,
    shared.aircraftcharacteristic.engine_value,
    shared.aircraftcharacteristic.engine_nilreason,
    shared.aircraftcharacteristic.numberengine_value,
    shared.aircraftcharacteristic.numberengine_nilreason,
    shared.aircraftcharacteristic.typeaircrafticao_value,
    shared.aircraftcharacteristic.typeaircrafticao_nilreason,
    shared.aircraftcharacteristic.aircraftlandingcategory_value,
    shared.aircraftcharacteristic.aircraftlandingcategory_nilreason,
    shared.aircraftcharacteristic.wingspaninterpretation_value,
    shared.aircraftcharacteristic.wingspaninterpretation_nilreason,
    shared.aircraftcharacteristic.classwingspan_value,
    shared.aircraftcharacteristic.classwingspan_nilreason,
    shared.aircraftcharacteristic.weightinterpretation_value,
    shared.aircraftcharacteristic.weightinterpretation_nilreason,
    shared.aircraftcharacteristic.passengers_value,
    shared.aircraftcharacteristic.passengers_nilreason,
    shared.aircraftcharacteristic.passengersinterpretation_value,
    shared.aircraftcharacteristic.passengersinterpretation_nilreason,
    shared.aircraftcharacteristic.speedinterpretation_value,
    shared.aircraftcharacteristic.speedinterpretation_nilreason,
    shared.aircraftcharacteristic.waketurbulence_value,
    shared.aircraftcharacteristic.waketurbulence_nilreason,
    shared.aircraftcharacteristic.navigationequipment_value,
    shared.aircraftcharacteristic.navigationequipment_nilreason,
    shared.aircraftcharacteristic.navigationspecification_value,
    shared.aircraftcharacteristic.navigationspecification_nilreason,
    shared.aircraftcharacteristic.verticalseparationcapability_value,
    shared.aircraftcharacteristic.verticalseparationcapability_nilreason,
    shared.aircraftcharacteristic.anticollisionandseparationequipment_value,
    shared.aircraftcharacteristic.anticollisionandseparationequipment_nilreason,
    shared.aircraftcharacteristic.communicationequipment_value,
    shared.aircraftcharacteristic.communicationequipment_nilreason,
    shared.aircraftcharacteristic.surveillanceequipment_value,
    shared.aircraftcharacteristic.surveillanceequipment_nilreason,
    shared.aircraftcharacteristic.wingspan_value,
    shared.aircraftcharacteristic.wingspan_uom,
    shared.aircraftcharacteristic.wingspan_nilreason,
    shared.aircraftcharacteristic.weight_value,
    shared.aircraftcharacteristic.weight_uom,
    shared.aircraftcharacteristic.weight_nilreason,
    shared.aircraftcharacteristic.speed_value,
    shared.aircraftcharacteristic.speed_uom,
    shared.aircraftcharacteristic.speed_nilreason;
create index on shared.aircraftcharacteristic_view (id);
-- AircraftStandContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.aircraftstandcontamination_view cascade;
create materialized view airport_heliport.aircraftstandcontamination_view as
select
    airport_heliport.aircraftstandcontamination_pt.id,
    airport_heliport.aircraftstandcontamination_pt.nilreason AS aircraftstandcontamination_nilreason,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictionestimation_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictiondevice_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.aircraftstandcontamination.obscuredlights_value as varchar), '(' || airport_heliport.aircraftstandcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.aircraftstandcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.aircraftstandcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.aircraftstandcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.aircraftstandcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.aircraftstandcontamination.proportion_value as varchar), '(' || airport_heliport.aircraftstandcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.aircraftstandcontamination.depth_value as varchar) || ' ' || airport_heliport.aircraftstandcontamination.depth_uom, '(' || airport_heliport.aircraftstandcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_pt_xivddt.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_hzsnpa.id) AS layer,
    jsonb_agg(notes_note_view_butbwq.*) AS annotation
from airport_heliport.aircraftstandcontamination_pt 
inner join airport_heliport.aircraftstandcontamination on airport_heliport.aircraftstandcontamination_pt.aircraftstandcontamination_id = airport_heliport.aircraftstandcontamination.id
left join master_join master_join_vxdals on airport_heliport.aircraftstandcontamination.id = master_join_vxdals.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_xivddt on master_join_vxdals.target_id = airport_heliport_ridge_pt_xivddt.id
left join master_join master_join_abtftq on airport_heliport.aircraftstandcontamination.id = master_join_abtftq.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_hzsnpa on master_join_abtftq.target_id = airport_heliport_surfacecontaminationlayer_pt_hzsnpa.id
left join master_join master_join_suaepb on airport_heliport.aircraftstandcontamination.id = master_join_suaepb.source_id
left join notes.note_view notes_note_view_butbwq on master_join_suaepb.target_id = notes_note_view_butbwq.id
group by
    airport_heliport.aircraftstandcontamination_pt.id,
    airport_heliport.aircraftstandcontamination_pt.nilreason,
    airport_heliport.aircraftstandcontamination.frictioncoefficient_value,
    airport_heliport.aircraftstandcontamination.frictioncoefficient_nilreason,
    airport_heliport.aircraftstandcontamination.frictionestimation_value,
    airport_heliport.aircraftstandcontamination.frictionestimation_nilreason,
    airport_heliport.aircraftstandcontamination.frictiondevice_value,
    airport_heliport.aircraftstandcontamination.frictiondevice_nilreason,
    airport_heliport.aircraftstandcontamination.obscuredlights_value,
    airport_heliport.aircraftstandcontamination.obscuredlights_nilreason,
    airport_heliport.aircraftstandcontamination.furtherclearancetime_value,
    airport_heliport.aircraftstandcontamination.furtherclearancetime_nilreason,
    airport_heliport.aircraftstandcontamination.furthertotalclearance_value,
    airport_heliport.aircraftstandcontamination.furthertotalclearance_nilreason,
    airport_heliport.aircraftstandcontamination.proportion_value,
    airport_heliport.aircraftstandcontamination.proportion_nilreason,
    airport_heliport.aircraftstandcontamination.depth_value,
    airport_heliport.aircraftstandcontamination.depth_uom,
    airport_heliport.aircraftstandcontamination.depth_nilreason;
create index on airport_heliport.aircraftstandcontamination_view (id);
-- AirportHeliportContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.airportheliportcontamination_view cascade;
create materialized view airport_heliport.airportheliportcontamination_view as
select
    airport_heliport.airportheliportcontamination_pt.id,
    airport_heliport.airportheliportcontamination_pt.nilreason AS airportheliportcontamination_nilreason,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictionestimation_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictiondevice_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.airportheliportcontamination.obscuredlights_value as varchar), '(' || airport_heliport.airportheliportcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.airportheliportcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.airportheliportcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.airportheliportcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.airportheliportcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.airportheliportcontamination.proportion_value as varchar), '(' || airport_heliport.airportheliportcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.airportheliportcontamination.depth_value as varchar) || ' ' || airport_heliport.airportheliportcontamination.depth_uom, '(' || airport_heliport.airportheliportcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_pt_eewrck.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_rcpjpc.id) AS layer,
    jsonb_agg(notes_note_view_sjgmzx.*) AS annotation
from airport_heliport.airportheliportcontamination_pt 
inner join airport_heliport.airportheliportcontamination on airport_heliport.airportheliportcontamination_pt.airportheliportcontamination_id = airport_heliport.airportheliportcontamination.id
left join master_join master_join_gucvwh on airport_heliport.airportheliportcontamination.id = master_join_gucvwh.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_eewrck on master_join_gucvwh.target_id = airport_heliport_ridge_pt_eewrck.id
left join master_join master_join_tfxqwl on airport_heliport.airportheliportcontamination.id = master_join_tfxqwl.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_rcpjpc on master_join_tfxqwl.target_id = airport_heliport_surfacecontaminationlayer_pt_rcpjpc.id
left join master_join master_join_uoflbl on airport_heliport.airportheliportcontamination.id = master_join_uoflbl.source_id
left join notes.note_view notes_note_view_sjgmzx on master_join_uoflbl.target_id = notes_note_view_sjgmzx.id
group by
    airport_heliport.airportheliportcontamination_pt.id,
    airport_heliport.airportheliportcontamination_pt.nilreason,
    airport_heliport.airportheliportcontamination.frictioncoefficient_value,
    airport_heliport.airportheliportcontamination.frictioncoefficient_nilreason,
    airport_heliport.airportheliportcontamination.frictionestimation_value,
    airport_heliport.airportheliportcontamination.frictionestimation_nilreason,
    airport_heliport.airportheliportcontamination.frictiondevice_value,
    airport_heliport.airportheliportcontamination.frictiondevice_nilreason,
    airport_heliport.airportheliportcontamination.obscuredlights_value,
    airport_heliport.airportheliportcontamination.obscuredlights_nilreason,
    airport_heliport.airportheliportcontamination.furtherclearancetime_value,
    airport_heliport.airportheliportcontamination.furtherclearancetime_nilreason,
    airport_heliport.airportheliportcontamination.furthertotalclearance_value,
    airport_heliport.airportheliportcontamination.furthertotalclearance_nilreason,
    airport_heliport.airportheliportcontamination.proportion_value,
    airport_heliport.airportheliportcontamination.proportion_nilreason,
    airport_heliport.airportheliportcontamination.depth_value,
    airport_heliport.airportheliportcontamination.depth_uom,
    airport_heliport.airportheliportcontamination.depth_nilreason;
create index on airport_heliport.airportheliportcontamination_view (id);
-- AirspaceGeometryComponentPropertyType
-- ['notes.note_view']
drop materialized view if exists airspace.airspacegeometrycomponent_view cascade;
create materialized view airspace.airspacegeometrycomponent_view as
select
    airspace.airspacegeometrycomponent_pt.id,
    airspace.airspacegeometrycomponent_pt.nilreason AS airspacegeometrycomponent_nilreason,
    coalesce(cast(airspace.airspacegeometrycomponent.operation_value as varchar), '(' || airspace.airspacegeometrycomponent.operation_nilreason || ')') as operation,
    coalesce(cast(airspace.airspacegeometrycomponent.operationsequence_value as varchar), '(' || airspace.airspacegeometrycomponent.operationsequence_nilreason || ')') as operationsequence,
    airspace_airspacevolume_pt_lczvbf.id AS theairspacevolume,
    jsonb_agg(notes_note_view_wsbdxc.*) AS annotation
from airspace.airspacegeometrycomponent_pt 
inner join airspace.airspacegeometrycomponent on airspace.airspacegeometrycomponent_pt.airspacegeometrycomponent_id = airspace.airspacegeometrycomponent.id
left join airspace.airspacevolume_pt airspace_airspacevolume_pt_lczvbf on airspace.airspacegeometrycomponent.theairspacevolume_id = airspace_airspacevolume_pt_lczvbf.id
left join master_join master_join_gxlavy on airspace.airspacegeometrycomponent.id = master_join_gxlavy.source_id
left join notes.note_view notes_note_view_wsbdxc on master_join_gxlavy.target_id = notes_note_view_wsbdxc.id
group by
    airspace.airspacegeometrycomponent_pt.id,
    airspace.airspacegeometrycomponent_pt.nilreason,
    airspace.airspacegeometrycomponent.operation_value,
    airspace.airspacegeometrycomponent.operation_nilreason,
    airspace.airspacegeometrycomponent.operationsequence_value,
    airspace.airspacegeometrycomponent.operationsequence_nilreason,
    airspace_airspacevolume_pt_lczvbf.id;
create index on airspace.airspacegeometrycomponent_view (id);
-- AirspaceLayerPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.airspacelayer_view cascade;
create materialized view shared.airspacelayer_view as
select
    shared.airspacelayer_pt.id,
    shared.airspacelayer_pt.nilreason AS airspacelayer_nilreason,
    coalesce(cast(shared.airspacelayer.upperlimitreference_value as varchar), '(' || shared.airspacelayer.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.airspacelayer.lowerlimitreference_value as varchar), '(' || shared.airspacelayer.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.airspacelayer.altitudeinterpretation_value as varchar), '(' || shared.airspacelayer.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(shared.airspacelayer.upperlimit_value as varchar) || ' ' || shared.airspacelayer.upperlimit_uom, '(' || shared.airspacelayer.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.airspacelayer.lowerlimit_value as varchar) || ' ' || shared.airspacelayer.lowerlimit_uom, '(' || shared.airspacelayer.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(shared_standardlevelcolumn_pt_loivko.title as varchar), '(' || shared_standardlevelcolumn_pt_loivko.nilreason[1] || ')') AS discretelevelseries,
    shared_standardlevelcolumn_pt_loivko.href AS discretelevelseries_href,
    jsonb_agg(notes_note_view_qcaffs.*) AS annotation
from shared.airspacelayer_pt 
inner join shared.airspacelayer on shared.airspacelayer_pt.airspacelayer_id = shared.airspacelayer.id
left join shared.standardlevelcolumn_pt shared_standardlevelcolumn_pt_loivko on shared.airspacelayer.discretelevelseries_id = shared_standardlevelcolumn_pt_loivko.id
left join master_join master_join_sygfhh on shared.airspacelayer.id = master_join_sygfhh.source_id
left join notes.note_view notes_note_view_qcaffs on master_join_sygfhh.target_id = notes_note_view_qcaffs.id
group by
    shared.airspacelayer_pt.id,
    shared.airspacelayer_pt.nilreason,
    shared.airspacelayer.upperlimitreference_value,
    shared.airspacelayer.upperlimitreference_nilreason,
    shared.airspacelayer.lowerlimitreference_value,
    shared.airspacelayer.lowerlimitreference_nilreason,
    shared.airspacelayer.altitudeinterpretation_value,
    shared.airspacelayer.altitudeinterpretation_nilreason,
    shared.airspacelayer.upperlimit_value,
    shared.airspacelayer.upperlimit_uom,
    shared.airspacelayer.upperlimit_nilreason,
    shared.airspacelayer.lowerlimit_value,
    shared.airspacelayer.lowerlimit_uom,
    shared.airspacelayer.lowerlimit_nilreason,
    shared_standardlevelcolumn_pt_loivko.title,
    shared_standardlevelcolumn_pt_loivko.nilreason[1],
    shared_standardlevelcolumn_pt_loivko.href;
create index on shared.airspacelayer_view (id);
-- AirspaceVolumeDependencyPropertyType
-- ['notes.note_view']
drop materialized view if exists airspace.airspacevolumedependency_view cascade;
create materialized view airspace.airspacevolumedependency_view as
select
    airspace.airspacevolumedependency_pt.id,
    airspace.airspacevolumedependency_pt.nilreason AS airspacevolumedependency_nilreason,
    coalesce(cast(airspace.airspacevolumedependency.dependency_value as varchar), '(' || airspace.airspacevolumedependency.dependency_nilreason || ')') as dependency,
    coalesce(cast(airspace_airspace_pt_ttieuy.title as varchar), '(' || airspace_airspace_pt_ttieuy.nilreason[1] || ')') AS theairspace,
    airspace_airspace_pt_ttieuy.href AS theairspace_href,
    jsonb_agg(notes_note_view_nedsvo.*) AS annotation
from airspace.airspacevolumedependency_pt 
inner join airspace.airspacevolumedependency on airspace.airspacevolumedependency_pt.airspacevolumedependency_id = airspace.airspacevolumedependency.id
left join airspace.airspace_pt airspace_airspace_pt_ttieuy on airspace.airspacevolumedependency.theairspace_id = airspace_airspace_pt_ttieuy.id
left join master_join master_join_kpxrga on airspace.airspacevolumedependency.id = master_join_kpxrga.source_id
left join notes.note_view notes_note_view_nedsvo on master_join_kpxrga.target_id = notes_note_view_nedsvo.id
group by
    airspace.airspacevolumedependency_pt.id,
    airspace.airspacevolumedependency_pt.nilreason,
    airspace.airspacevolumedependency.dependency_value,
    airspace.airspacevolumedependency.dependency_nilreason,
    airspace_airspace_pt_ttieuy.title,
    airspace_airspace_pt_ttieuy.nilreason[1],
    airspace_airspace_pt_ttieuy.href;
create index on airspace.airspacevolumedependency_view (id);
-- AltitudeAdjustmentPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.altitudeadjustment_view cascade;
create materialized view shared.altitudeadjustment_view as
select
    shared.altitudeadjustment_pt.id,
    shared.altitudeadjustment_pt.nilreason AS altitudeadjustment_nilreason,
    coalesce(cast(shared.altitudeadjustment.altitudeadjustmenttype_value as varchar), '(' || shared.altitudeadjustment.altitudeadjustmenttype_nilreason || ')') as altitudeadjustmenttype,
    coalesce(cast(shared.altitudeadjustment.primaryalternateminimum_value as varchar), '(' || shared.altitudeadjustment.primaryalternateminimum_nilreason || ')') as primaryalternateminimum,
    coalesce(cast(shared.altitudeadjustment.localremotecode_value as varchar), '(' || shared.altitudeadjustment.localremotecode_nilreason || ')') as localremotecode,
    coalesce(cast(shared.altitudeadjustment.altitudeadjustment_value as varchar) || ' ' || shared.altitudeadjustment.altitudeadjustment_uom, '(' || shared.altitudeadjustment.altitudeadjustment_nilreason || ')') as altitudeadjustment,
    jsonb_agg(notes_note_view_bcjcrk.*) AS annotation
from shared.altitudeadjustment_pt 
inner join shared.altitudeadjustment on shared.altitudeadjustment_pt.altitudeadjustment_id = shared.altitudeadjustment.id
left join master_join master_join_bpeeng on shared.altitudeadjustment.id = master_join_bpeeng.source_id
left join notes.note_view notes_note_view_bcjcrk on master_join_bpeeng.target_id = notes_note_view_bcjcrk.id
group by
    shared.altitudeadjustment_pt.id,
    shared.altitudeadjustment_pt.nilreason,
    shared.altitudeadjustment.altitudeadjustmenttype_value,
    shared.altitudeadjustment.altitudeadjustmenttype_nilreason,
    shared.altitudeadjustment.primaryalternateminimum_value,
    shared.altitudeadjustment.primaryalternateminimum_nilreason,
    shared.altitudeadjustment.localremotecode_value,
    shared.altitudeadjustment.localremotecode_nilreason,
    shared.altitudeadjustment.altitudeadjustment_value,
    shared.altitudeadjustment.altitudeadjustment_uom,
    shared.altitudeadjustment.altitudeadjustment_nilreason;
create index on shared.altitudeadjustment_view (id);
-- AngleUsePropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.angleuse_view cascade;
create materialized view navaids_points.angleuse_view as
select
    navaids_points.angleuse_pt.id,
    navaids_points.angleuse_pt.nilreason AS angleuse_nilreason,
    coalesce(cast(navaids_points.angleuse.alongcourseguidance_value as varchar), '(' || navaids_points.angleuse.alongcourseguidance_nilreason || ')') as alongcourseguidance,
    coalesce(cast(navaids_points_angleindication_pt_mzxiyl.title as varchar), '(' || navaids_points_angleindication_pt_mzxiyl.nilreason[1] || ')') AS theangleindication,
    navaids_points_angleindication_pt_mzxiyl.href AS theangleindication_href,
    jsonb_agg(notes_note_view_zstmsi.*) AS annotation
from navaids_points.angleuse_pt 
inner join navaids_points.angleuse on navaids_points.angleuse_pt.angleuse_id = navaids_points.angleuse.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_mzxiyl on navaids_points.angleuse.theangleindication_id = navaids_points_angleindication_pt_mzxiyl.id
left join master_join master_join_kbabhn on navaids_points.angleuse.id = master_join_kbabhn.source_id
left join notes.note_view notes_note_view_zstmsi on master_join_kbabhn.target_id = notes_note_view_zstmsi.id
group by
    navaids_points.angleuse_pt.id,
    navaids_points.angleuse_pt.nilreason,
    navaids_points.angleuse.alongcourseguidance_value,
    navaids_points.angleuse.alongcourseguidance_nilreason,
    navaids_points_angleindication_pt_mzxiyl.title,
    navaids_points_angleindication_pt_mzxiyl.nilreason[1],
    navaids_points_angleindication_pt_mzxiyl.href;
create index on navaids_points.angleuse_view (id);
-- ApproachAltitudeTablePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachaltitudetable_view cascade;
create materialized view procedure.approachaltitudetable_view as
select
    procedure.approachaltitudetable_pt.id,
    procedure.approachaltitudetable_pt.nilreason AS approachaltitudetable_nilreason,
    coalesce(cast(procedure.approachaltitudetable.measurementpoint_value as varchar), '(' || procedure.approachaltitudetable.measurementpoint_nilreason || ')') as measurementpoint,
    coalesce(cast(procedure.approachaltitudetable.altitudereference_value as varchar), '(' || procedure.approachaltitudetable.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(procedure.approachaltitudetable.altitude_value as varchar) || ' ' || procedure.approachaltitudetable.altitude_uom, '(' || procedure.approachaltitudetable.altitude_nilreason || ')') as altitude,
    jsonb_agg(notes_note_view_gersjm.*) AS annotation
from procedure.approachaltitudetable_pt 
inner join procedure.approachaltitudetable on procedure.approachaltitudetable_pt.approachaltitudetable_id = procedure.approachaltitudetable.id
left join master_join master_join_xyeezo on procedure.approachaltitudetable.id = master_join_xyeezo.source_id
left join notes.note_view notes_note_view_gersjm on master_join_xyeezo.target_id = notes_note_view_gersjm.id
group by
    procedure.approachaltitudetable_pt.id,
    procedure.approachaltitudetable_pt.nilreason,
    procedure.approachaltitudetable.measurementpoint_value,
    procedure.approachaltitudetable.measurementpoint_nilreason,
    procedure.approachaltitudetable.altitudereference_value,
    procedure.approachaltitudetable.altitudereference_nilreason,
    procedure.approachaltitudetable.altitude_value,
    procedure.approachaltitudetable.altitude_uom,
    procedure.approachaltitudetable.altitude_nilreason;
create index on procedure.approachaltitudetable_view (id);
-- ApproachConditionPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachcondition_view cascade;
create materialized view procedure.approachcondition_view as
select
    procedure.approachcondition_pt.id,
    procedure.approachcondition_pt.nilreason AS approachcondition_nilreason,
    coalesce(cast(procedure.approachcondition.finalapproachpath_value as varchar), '(' || procedure.approachcondition.finalapproachpath_nilreason || ')') as finalapproachpath,
    coalesce(cast(procedure.approachcondition.requirednavigationperformance_value as varchar), '(' || procedure.approachcondition.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.approachcondition.climbgradient_value as varchar), '(' || procedure.approachcondition.climbgradient_nilreason || ')') as climbgradient,
    procedure_minima_pt_qyqszj.id AS minimumset,
    coalesce(cast(airport_heliport_altimetersource_pt_zgnhbh.title as varchar), '(' || airport_heliport_altimetersource_pt_zgnhbh.nilreason[1] || ')') AS altimeter,
    airport_heliport_altimetersource_pt_zgnhbh.href AS altimeter_href,
    jsonb_agg(procedure_circlingrestriction_pt_vcmofs.id) AS circlingrestriction,
    jsonb_agg(shared_aircraftcharacteristic_pt_amvtdm.id) AS aircraftcategory,
    jsonb_agg(procedure_landingtakeoffareacollection_pt_wnvwpd.id) AS landingarea,
    jsonb_agg(shared_obstacleassessmentarea_pt_fynvym.id) AS designsurface,
    jsonb_agg(notes_note_view_fvkrsv.*) AS annotation
from procedure.approachcondition_pt 
inner join procedure.approachcondition on procedure.approachcondition_pt.approachcondition_id = procedure.approachcondition.id
left join procedure.minima_pt procedure_minima_pt_qyqszj on procedure.approachcondition.minimumset_id = procedure_minima_pt_qyqszj.id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_zgnhbh on procedure.approachcondition.altimeter_id = airport_heliport_altimetersource_pt_zgnhbh.id
left join master_join master_join_sozwme on procedure.approachcondition.id = master_join_sozwme.source_id
left join procedure.circlingrestriction_pt procedure_circlingrestriction_pt_vcmofs on master_join_sozwme.target_id = procedure_circlingrestriction_pt_vcmofs.id
left join master_join master_join_ejxfej on procedure.approachcondition.id = master_join_ejxfej.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_amvtdm on master_join_ejxfej.target_id = shared_aircraftcharacteristic_pt_amvtdm.id
left join master_join master_join_tljljl on procedure.approachcondition.id = master_join_tljljl.source_id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_wnvwpd on master_join_tljljl.target_id = procedure_landingtakeoffareacollection_pt_wnvwpd.id
left join master_join master_join_ivpawu on procedure.approachcondition.id = master_join_ivpawu.source_id
left join shared.obstacleassessmentarea_pt shared_obstacleassessmentarea_pt_fynvym on master_join_ivpawu.target_id = shared_obstacleassessmentarea_pt_fynvym.id
left join master_join master_join_hkfkwn on procedure.approachcondition.id = master_join_hkfkwn.source_id
left join notes.note_view notes_note_view_fvkrsv on master_join_hkfkwn.target_id = notes_note_view_fvkrsv.id
group by
    procedure.approachcondition_pt.id,
    procedure.approachcondition_pt.nilreason,
    procedure.approachcondition.finalapproachpath_value,
    procedure.approachcondition.finalapproachpath_nilreason,
    procedure.approachcondition.requirednavigationperformance_value,
    procedure.approachcondition.requirednavigationperformance_nilreason,
    procedure.approachcondition.climbgradient_value,
    procedure.approachcondition.climbgradient_nilreason,
    procedure_minima_pt_qyqszj.id,
    airport_heliport_altimetersource_pt_zgnhbh.title,
    airport_heliport_altimetersource_pt_zgnhbh.nilreason[1],
    airport_heliport_altimetersource_pt_zgnhbh.href;
create index on procedure.approachcondition_view (id);
-- ApproachDistanceTablePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachdistancetable_view cascade;
create materialized view procedure.approachdistancetable_view as
select
    procedure.approachdistancetable_pt.id,
    procedure.approachdistancetable_pt.nilreason AS approachdistancetable_nilreason,
    coalesce(cast(procedure.approachdistancetable.startingmeasurementpoint_value as varchar), '(' || procedure.approachdistancetable.startingmeasurementpoint_nilreason || ')') as startingmeasurementpoint,
    coalesce(cast(procedure.approachdistancetable.endingmeasurementpoint_value as varchar), '(' || procedure.approachdistancetable.endingmeasurementpoint_nilreason || ')') as endingmeasurementpoint,
    coalesce(cast(procedure.approachdistancetable.valuehat_value as varchar) || ' ' || procedure.approachdistancetable.valuehat_uom, '(' || procedure.approachdistancetable.valuehat_nilreason || ')') as valuehat,
    coalesce(cast(procedure.approachdistancetable.distance_value as varchar) || ' ' || procedure.approachdistancetable.distance_uom, '(' || procedure.approachdistancetable.distance_nilreason || ')') as distance,
    jsonb_agg(notes_note_view_lhnfgx.*) AS annotation
from procedure.approachdistancetable_pt 
inner join procedure.approachdistancetable on procedure.approachdistancetable_pt.approachdistancetable_id = procedure.approachdistancetable.id
left join master_join master_join_snjzjr on procedure.approachdistancetable.id = master_join_snjzjr.source_id
left join notes.note_view notes_note_view_lhnfgx on master_join_snjzjr.target_id = notes_note_view_lhnfgx.id
group by
    procedure.approachdistancetable_pt.id,
    procedure.approachdistancetable_pt.nilreason,
    procedure.approachdistancetable.startingmeasurementpoint_value,
    procedure.approachdistancetable.startingmeasurementpoint_nilreason,
    procedure.approachdistancetable.endingmeasurementpoint_value,
    procedure.approachdistancetable.endingmeasurementpoint_nilreason,
    procedure.approachdistancetable.valuehat_value,
    procedure.approachdistancetable.valuehat_uom,
    procedure.approachdistancetable.valuehat_nilreason,
    procedure.approachdistancetable.distance_value,
    procedure.approachdistancetable.distance_uom,
    procedure.approachdistancetable.distance_nilreason;
create index on procedure.approachdistancetable_view (id);
-- ApproachTimingTablePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachtimingtable_view cascade;
create materialized view procedure.approachtimingtable_view as
select
    procedure.approachtimingtable_pt.id,
    procedure.approachtimingtable_pt.nilreason AS approachtimingtable_nilreason,
    coalesce(cast(procedure.approachtimingtable.startingmeasurementpoint_value as varchar), '(' || procedure.approachtimingtable.startingmeasurementpoint_nilreason || ')') as startingmeasurementpoint,
    coalesce(cast(procedure.approachtimingtable.endingmeasurementpoint_value as varchar), '(' || procedure.approachtimingtable.endingmeasurementpoint_nilreason || ')') as endingmeasurementpoint,
    coalesce(cast(procedure.approachtimingtable.time_value as varchar) || ' ' || procedure.approachtimingtable.time_uom, '(' || procedure.approachtimingtable.time_nilreason || ')') as time,
    coalesce(cast(procedure.approachtimingtable.speed_value as varchar) || ' ' || procedure.approachtimingtable.speed_uom, '(' || procedure.approachtimingtable.speed_nilreason || ')') as speed,
    jsonb_agg(notes_note_view_mklzha.*) AS annotation
from procedure.approachtimingtable_pt 
inner join procedure.approachtimingtable on procedure.approachtimingtable_pt.approachtimingtable_id = procedure.approachtimingtable.id
left join master_join master_join_lbhszo on procedure.approachtimingtable.id = master_join_lbhszo.source_id
left join notes.note_view notes_note_view_mklzha on master_join_lbhszo.target_id = notes_note_view_mklzha.id
group by
    procedure.approachtimingtable_pt.id,
    procedure.approachtimingtable_pt.nilreason,
    procedure.approachtimingtable.startingmeasurementpoint_value,
    procedure.approachtimingtable.startingmeasurementpoint_nilreason,
    procedure.approachtimingtable.endingmeasurementpoint_value,
    procedure.approachtimingtable.endingmeasurementpoint_nilreason,
    procedure.approachtimingtable.time_value,
    procedure.approachtimingtable.time_uom,
    procedure.approachtimingtable.time_nilreason,
    procedure.approachtimingtable.speed_value,
    procedure.approachtimingtable.speed_uom,
    procedure.approachtimingtable.speed_nilreason;
create index on procedure.approachtimingtable_view (id);
-- ApronContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.aproncontamination_view cascade;
create materialized view airport_heliport.aproncontamination_view as
select
    airport_heliport.aproncontamination_pt.id,
    airport_heliport.aproncontamination_pt.nilreason AS aproncontamination_nilreason,
    coalesce(cast(airport_heliport.aproncontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.aproncontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.aproncontamination.frictionestimation_value as varchar), '(' || airport_heliport.aproncontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.aproncontamination.frictiondevice_value as varchar), '(' || airport_heliport.aproncontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.aproncontamination.obscuredlights_value as varchar), '(' || airport_heliport.aproncontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.aproncontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.aproncontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.aproncontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.aproncontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.aproncontamination.proportion_value as varchar), '(' || airport_heliport.aproncontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.aproncontamination.depth_value as varchar) || ' ' || airport_heliport.aproncontamination.depth_uom, '(' || airport_heliport.aproncontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_pt_yzvrjt.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_qbpocd.id) AS layer,
    jsonb_agg(notes_note_view_yeztdg.*) AS annotation
from airport_heliport.aproncontamination_pt 
inner join airport_heliport.aproncontamination on airport_heliport.aproncontamination_pt.aproncontamination_id = airport_heliport.aproncontamination.id
left join master_join master_join_tnoooe on airport_heliport.aproncontamination.id = master_join_tnoooe.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_yzvrjt on master_join_tnoooe.target_id = airport_heliport_ridge_pt_yzvrjt.id
left join master_join master_join_dnpxly on airport_heliport.aproncontamination.id = master_join_dnpxly.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_qbpocd on master_join_dnpxly.target_id = airport_heliport_surfacecontaminationlayer_pt_qbpocd.id
left join master_join master_join_eqfgnx on airport_heliport.aproncontamination.id = master_join_eqfgnx.source_id
left join notes.note_view notes_note_view_yeztdg on master_join_eqfgnx.target_id = notes_note_view_yeztdg.id
group by
    airport_heliport.aproncontamination_pt.id,
    airport_heliport.aproncontamination_pt.nilreason,
    airport_heliport.aproncontamination.frictioncoefficient_value,
    airport_heliport.aproncontamination.frictioncoefficient_nilreason,
    airport_heliport.aproncontamination.frictionestimation_value,
    airport_heliport.aproncontamination.frictionestimation_nilreason,
    airport_heliport.aproncontamination.frictiondevice_value,
    airport_heliport.aproncontamination.frictiondevice_nilreason,
    airport_heliport.aproncontamination.obscuredlights_value,
    airport_heliport.aproncontamination.obscuredlights_nilreason,
    airport_heliport.aproncontamination.furtherclearancetime_value,
    airport_heliport.aproncontamination.furtherclearancetime_nilreason,
    airport_heliport.aproncontamination.furthertotalclearance_value,
    airport_heliport.aproncontamination.furthertotalclearance_nilreason,
    airport_heliport.aproncontamination.proportion_value,
    airport_heliport.aproncontamination.proportion_nilreason,
    airport_heliport.aproncontamination.depth_value,
    airport_heliport.aproncontamination.depth_uom,
    airport_heliport.aproncontamination.depth_nilreason;
create index on airport_heliport.aproncontamination_view (id);
-- AuthorityForAerialRefuellingPropertyType
-- ['notes.note_view']
drop materialized view if exists aerial_refuelling.authorityforaerialrefuelling_view cascade;
create materialized view aerial_refuelling.authorityforaerialrefuelling_view as
select
    aerial_refuelling.authorityforaerialrefuelling_pt.id,
    aerial_refuelling.authorityforaerialrefuelling_pt.nilreason AS authorityforaerialrefuelling_nilreason,
    coalesce(cast(aerial_refuelling.authorityforaerialrefuelling.type_value as varchar), '(' || aerial_refuelling.authorityforaerialrefuelling.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_pbvlsl.title as varchar), '(' || organisation_organisationauthority_pt_pbvlsl.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_pbvlsl.href AS theorganisationauthority_href,
    jsonb_agg(notes_note_view_vxcbjm.*) AS annotation
from aerial_refuelling.authorityforaerialrefuelling_pt 
inner join aerial_refuelling.authorityforaerialrefuelling on aerial_refuelling.authorityforaerialrefuelling_pt.authorityforaerialrefuelling_id = aerial_refuelling.authorityforaerialrefuelling.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_pbvlsl on aerial_refuelling.authorityforaerialrefuelling.theorganisationauthority_id = organisation_organisationauthority_pt_pbvlsl.id
left join master_join master_join_zxkhvv on aerial_refuelling.authorityforaerialrefuelling.id = master_join_zxkhvv.source_id
left join notes.note_view notes_note_view_vxcbjm on master_join_zxkhvv.target_id = notes_note_view_vxcbjm.id
group by
    aerial_refuelling.authorityforaerialrefuelling_pt.id,
    aerial_refuelling.authorityforaerialrefuelling_pt.nilreason,
    aerial_refuelling.authorityforaerialrefuelling.type_value,
    aerial_refuelling.authorityforaerialrefuelling.type_nilreason,
    organisation_organisationauthority_pt_pbvlsl.title,
    organisation_organisationauthority_pt_pbvlsl.nilreason[1],
    organisation_organisationauthority_pt_pbvlsl.href;
create index on aerial_refuelling.authorityforaerialrefuelling_view (id);
-- AuthorityForNavaidEquipmentPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.authorityfornavaidequipment_view cascade;
create materialized view navaids_points.authorityfornavaidequipment_view as
select
    navaids_points.authorityfornavaidequipment_pt.id,
    navaids_points.authorityfornavaidequipment_pt.nilreason AS authorityfornavaidequipment_nilreason,
    coalesce(cast(navaids_points.authorityfornavaidequipment.type_value as varchar), '(' || navaids_points.authorityfornavaidequipment.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_zdwdma.title as varchar), '(' || organisation_organisationauthority_pt_zdwdma.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_zdwdma.href AS theorganisationauthority_href,
    jsonb_agg(notes_note_view_kbbgio.*) AS annotation
from navaids_points.authorityfornavaidequipment_pt 
inner join navaids_points.authorityfornavaidequipment on navaids_points.authorityfornavaidequipment_pt.authorityfornavaidequipment_id = navaids_points.authorityfornavaidequipment.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_zdwdma on navaids_points.authorityfornavaidequipment.theorganisationauthority_id = organisation_organisationauthority_pt_zdwdma.id
left join master_join master_join_lbrxnd on navaids_points.authorityfornavaidequipment.id = master_join_lbrxnd.source_id
left join notes.note_view notes_note_view_kbbgio on master_join_lbrxnd.target_id = notes_note_view_kbbgio.id
group by
    navaids_points.authorityfornavaidequipment_pt.id,
    navaids_points.authorityfornavaidequipment_pt.nilreason,
    navaids_points.authorityfornavaidequipment.type_value,
    navaids_points.authorityfornavaidequipment.type_nilreason,
    organisation_organisationauthority_pt_zdwdma.title,
    organisation_organisationauthority_pt_zdwdma.nilreason[1],
    organisation_organisationauthority_pt_zdwdma.href;
create index on navaids_points.authorityfornavaidequipment_view (id);
-- AuthorityForSpecialNavigationStationPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.authorityforspecialnavigationstation_view cascade;
create materialized view navaids_points.authorityforspecialnavigationstation_view as
select
    navaids_points.authorityforspecialnavigationstation_pt.id,
    navaids_points.authorityforspecialnavigationstation_pt.nilreason AS authorityforspecialnavigationstation_nilreason,
    coalesce(cast(navaids_points.authorityforspecialnavigationstation.type_value as varchar), '(' || navaids_points.authorityforspecialnavigationstation.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_nqjzes.title as varchar), '(' || organisation_organisationauthority_pt_nqjzes.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_nqjzes.href AS theorganisationauthority_href,
    jsonb_agg(notes_note_view_gqtmzb.*) AS annotation
from navaids_points.authorityforspecialnavigationstation_pt 
inner join navaids_points.authorityforspecialnavigationstation on navaids_points.authorityforspecialnavigationstation_pt.authorityforspecialnavigationstation_id = navaids_points.authorityforspecialnavigationstation.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_nqjzes on navaids_points.authorityforspecialnavigationstation.theorganisationauthority_id = organisation_organisationauthority_pt_nqjzes.id
left join master_join master_join_wekarh on navaids_points.authorityforspecialnavigationstation.id = master_join_wekarh.source_id
left join notes.note_view notes_note_view_gqtmzb on master_join_wekarh.target_id = notes_note_view_gqtmzb.id
group by
    navaids_points.authorityforspecialnavigationstation_pt.id,
    navaids_points.authorityforspecialnavigationstation_pt.nilreason,
    navaids_points.authorityforspecialnavigationstation.type_value,
    navaids_points.authorityforspecialnavigationstation.type_nilreason,
    organisation_organisationauthority_pt_nqjzes.title,
    organisation_organisationauthority_pt_nqjzes.nilreason[1],
    organisation_organisationauthority_pt_nqjzes.href;
create index on navaids_points.authorityforspecialnavigationstation_view (id);
-- AuthorityForSpecialNavigationSystemPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.authorityforspecialnavigationsystem_view cascade;
create materialized view navaids_points.authorityforspecialnavigationsystem_view as
select
    navaids_points.authorityforspecialnavigationsystem_pt.id,
    navaids_points.authorityforspecialnavigationsystem_pt.nilreason AS authorityforspecialnavigationsystem_nilreason,
    coalesce(cast(navaids_points.authorityforspecialnavigationsystem.type_value as varchar), '(' || navaids_points.authorityforspecialnavigationsystem.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_yacjmu.title as varchar), '(' || organisation_organisationauthority_pt_yacjmu.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_yacjmu.href AS theorganisationauthority_href,
    jsonb_agg(notes_note_view_nqixpt.*) AS annotation
from navaids_points.authorityforspecialnavigationsystem_pt 
inner join navaids_points.authorityforspecialnavigationsystem on navaids_points.authorityforspecialnavigationsystem_pt.authorityforspecialnavigationsystem_id = navaids_points.authorityforspecialnavigationsystem.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_yacjmu on navaids_points.authorityforspecialnavigationsystem.theorganisationauthority_id = organisation_organisationauthority_pt_yacjmu.id
left join master_join master_join_tmrffb on navaids_points.authorityforspecialnavigationsystem.id = master_join_tmrffb.source_id
left join notes.note_view notes_note_view_nqixpt on master_join_tmrffb.target_id = notes_note_view_nqixpt.id
group by
    navaids_points.authorityforspecialnavigationsystem_pt.id,
    navaids_points.authorityforspecialnavigationsystem_pt.nilreason,
    navaids_points.authorityforspecialnavigationsystem.type_value,
    navaids_points.authorityforspecialnavigationsystem.type_nilreason,
    organisation_organisationauthority_pt_yacjmu.title,
    organisation_organisationauthority_pt_yacjmu.nilreason[1],
    organisation_organisationauthority_pt_yacjmu.href;
create index on navaids_points.authorityforspecialnavigationsystem_view (id);
-- CallsignDetailPropertyType
-- ['notes.note_view']
drop materialized view if exists service.callsigndetail_view cascade;
create materialized view service.callsigndetail_view as
select
    service.callsigndetail_pt.id,
    service.callsigndetail_pt.nilreason AS callsigndetail_nilreason,
    coalesce(cast(service.callsigndetail.callsign_value as varchar), '(' || service.callsigndetail.callsign_nilreason || ')') as callsign,
    coalesce(cast(service.callsigndetail.language_value as varchar), '(' || service.callsigndetail.language_nilreason || ')') as language,
    jsonb_agg(notes_note_view_nynufk.*) AS annotation
from service.callsigndetail_pt 
inner join service.callsigndetail on service.callsigndetail_pt.callsigndetail_id = service.callsigndetail.id
left join master_join master_join_fxhtbp on service.callsigndetail.id = master_join_fxhtbp.source_id
left join notes.note_view notes_note_view_nynufk on master_join_fxhtbp.target_id = notes_note_view_nynufk.id
group by
    service.callsigndetail_pt.id,
    service.callsigndetail_pt.nilreason,
    service.callsigndetail.callsign_value,
    service.callsigndetail.callsign_nilreason,
    service.callsigndetail.language_value,
    service.callsigndetail.language_nilreason;
create index on service.callsigndetail_view (id);
-- CircleSectorPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.circlesector_view cascade;
create materialized view shared.circlesector_view as
select
    shared.circlesector_pt.id,
    shared.circlesector_pt.nilreason AS circlesector_nilreason,
    coalesce(cast(shared.circlesector.arcdirection_value as varchar), '(' || shared.circlesector.arcdirection_nilreason || ')') as arcdirection,
    coalesce(cast(shared.circlesector.fromangle_value as varchar), '(' || shared.circlesector.fromangle_nilreason || ')') as fromangle,
    coalesce(cast(shared.circlesector.toangle_value as varchar), '(' || shared.circlesector.toangle_nilreason || ')') as toangle,
    coalesce(cast(shared.circlesector.angletype_value as varchar), '(' || shared.circlesector.angletype_nilreason || ')') as angletype,
    coalesce(cast(shared.circlesector.angledirectionreference_value as varchar), '(' || shared.circlesector.angledirectionreference_nilreason || ')') as angledirectionreference,
    coalesce(cast(shared.circlesector.upperlimitreference_value as varchar), '(' || shared.circlesector.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.circlesector.lowerlimitreference_value as varchar), '(' || shared.circlesector.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.circlesector.innerdistance_value as varchar) || ' ' || shared.circlesector.innerdistance_uom, '(' || shared.circlesector.innerdistance_nilreason || ')') as innerdistance,
    coalesce(cast(shared.circlesector.outerdistance_value as varchar) || ' ' || shared.circlesector.outerdistance_uom, '(' || shared.circlesector.outerdistance_nilreason || ')') as outerdistance,
    coalesce(cast(shared.circlesector.upperlimit_value as varchar) || ' ' || shared.circlesector.upperlimit_uom, '(' || shared.circlesector.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.circlesector.lowerlimit_value as varchar) || ' ' || shared.circlesector.lowerlimit_uom, '(' || shared.circlesector.lowerlimit_nilreason || ')') as lowerlimit,
    jsonb_agg(notes_note_view_rywklh.*) AS annotation
from shared.circlesector_pt 
inner join shared.circlesector on shared.circlesector_pt.circlesector_id = shared.circlesector.id
left join master_join master_join_ezjeqq on shared.circlesector.id = master_join_ezjeqq.source_id
left join notes.note_view notes_note_view_rywklh on master_join_ezjeqq.target_id = notes_note_view_rywklh.id
group by
    shared.circlesector_pt.id,
    shared.circlesector_pt.nilreason,
    shared.circlesector.arcdirection_value,
    shared.circlesector.arcdirection_nilreason,
    shared.circlesector.fromangle_value,
    shared.circlesector.fromangle_nilreason,
    shared.circlesector.toangle_value,
    shared.circlesector.toangle_nilreason,
    shared.circlesector.angletype_value,
    shared.circlesector.angletype_nilreason,
    shared.circlesector.angledirectionreference_value,
    shared.circlesector.angledirectionreference_nilreason,
    shared.circlesector.upperlimitreference_value,
    shared.circlesector.upperlimitreference_nilreason,
    shared.circlesector.lowerlimitreference_value,
    shared.circlesector.lowerlimitreference_nilreason,
    shared.circlesector.innerdistance_value,
    shared.circlesector.innerdistance_uom,
    shared.circlesector.innerdistance_nilreason,
    shared.circlesector.outerdistance_value,
    shared.circlesector.outerdistance_uom,
    shared.circlesector.outerdistance_nilreason,
    shared.circlesector.upperlimit_value,
    shared.circlesector.upperlimit_uom,
    shared.circlesector.upperlimit_nilreason,
    shared.circlesector.lowerlimit_value,
    shared.circlesector.lowerlimit_uom,
    shared.circlesector.lowerlimit_nilreason;
create index on shared.circlesector_view (id);
-- CityPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.city_view cascade;
create materialized view airport_heliport.city_view as
select
    airport_heliport.city_pt.id,
    airport_heliport.city_pt.nilreason AS city_nilreason,
    coalesce(cast(airport_heliport.city.name_value as varchar), '(' || airport_heliport.city.name_nilreason || ')') as name,
    jsonb_agg(notes_note_view_rdbkbc.*) AS annotation
from airport_heliport.city_pt 
inner join airport_heliport.city on airport_heliport.city_pt.city_id = airport_heliport.city.id
left join master_join master_join_jwimpr on airport_heliport.city.id = master_join_jwimpr.source_id
left join notes.note_view notes_note_view_rdbkbc on master_join_jwimpr.target_id = notes_note_view_rdbkbc.id
group by
    airport_heliport.city_pt.id,
    airport_heliport.city_pt.nilreason,
    airport_heliport.city.name_value,
    airport_heliport.city.name_nilreason;
create index on airport_heliport.city_view (id);
-- CurvePropertyType
-- ['notes.note_view']
-- Snowflake SQL : CurvePropertyType 

DROP MATERIALIZED VIEW IF EXISTS geometry.curve_view CASCADE;

CREATE MATERIALIZED VIEW geometry.curve_view AS
WITH 
center AS (
    SELECT 
		id, 
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 100) AS n, 	
        center
),
arc_line AS (
    SELECT 
        interpolated_points.id,
        ST_MakeLine(point_geom) AS arc_geom
    FROM interpolated_points
    GROUP BY id
),
segment_union AS (
    SELECT 
		id, 
		ST_ReducePrecision(linestring,0.000000000000001) AS geom
    FROM
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 0
    UNION ALL 
    SELECT 
		id, 
		ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 1000)::geometry AS geom
    FROM 
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 1
    UNION ALL 
    SELECT 
		id, 
		ST_ReducePrecision(arc_geom, 0.000000000000001) AS geom
    FROM 
		arc_line
),
merged_segments AS (
    SELECT 
        geometry.curve_pt.id,
        ST_LineMerge(ST_Collect(segment_union.geom)) AS merged_geom,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        geometry.curve_pt
    INNER JOIN 
		master_join_geometry ON  geometry.curve_pt.id = master_join_geometry.source_id 
    INNER JOIN 
        segment_union ON master_join_geometry.target_id = segment_union.id
    GROUP BY geometry.curve_pt.id
)
SELECT 
    merged_segments.id, 
	merged_geom as geom,
	COALESCE(merged_segments.horizontalaccuracy || ' ' || merged_segments.horizontalaccuracy_uom, '(' || merged_segments.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM merged_segments;

CREATE INDEX ON geometry.curve_view (id);
-- DepartureArrivalConditionPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.departurearrivalcondition_view cascade;
create materialized view procedure.departurearrivalcondition_view as
select
    procedure.departurearrivalcondition_pt.id,
    procedure.departurearrivalcondition_pt.nilreason AS departurearrivalcondition_nilreason,
    coalesce(cast(procedure.departurearrivalcondition.minimumcrossingatendreference_value as varchar), '(' || procedure.departurearrivalcondition.minimumcrossingatendreference_nilreason || ')') as minimumcrossingatendreference,
    coalesce(cast(procedure.departurearrivalcondition.maximumcrossingatendreference_value as varchar), '(' || procedure.departurearrivalcondition.maximumcrossingatendreference_nilreason || ')') as maximumcrossingatendreference,
    coalesce(cast(procedure.departurearrivalcondition.minimumenroutealtitude_value as varchar) || ' ' || procedure.departurearrivalcondition.minimumenroutealtitude_uom, '(' || procedure.departurearrivalcondition.minimumenroutealtitude_nilreason || ')') as minimumenroutealtitude,
    coalesce(cast(procedure.departurearrivalcondition.minimumcrossingatend_value as varchar) || ' ' || procedure.departurearrivalcondition.minimumcrossingatend_uom, '(' || procedure.departurearrivalcondition.minimumcrossingatend_nilreason || ')') as minimumcrossingatend,
    coalesce(cast(procedure.departurearrivalcondition.maximumcrossingatend_value as varchar) || ' ' || procedure.departurearrivalcondition.maximumcrossingatend_uom, '(' || procedure.departurearrivalcondition.maximumcrossingatend_nilreason || ')') as maximumcrossingatend,
    shared_aircraftcharacteristic_pt_mpylzo.id AS enginetype,
    jsonb_agg(notes_note_view_diawir.*) AS annotation
from procedure.departurearrivalcondition_pt 
inner join procedure.departurearrivalcondition on procedure.departurearrivalcondition_pt.departurearrivalcondition_id = procedure.departurearrivalcondition.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_mpylzo on procedure.departurearrivalcondition.engine_id = shared_aircraftcharacteristic_pt_mpylzo.id
left join master_join master_join_wztgea on procedure.departurearrivalcondition.id = master_join_wztgea.source_id
left join notes.note_view notes_note_view_diawir on master_join_wztgea.target_id = notes_note_view_diawir.id
group by
    procedure.departurearrivalcondition_pt.id,
    procedure.departurearrivalcondition_pt.nilreason,
    procedure.departurearrivalcondition.minimumcrossingatendreference_value,
    procedure.departurearrivalcondition.minimumcrossingatendreference_nilreason,
    procedure.departurearrivalcondition.maximumcrossingatendreference_value,
    procedure.departurearrivalcondition.maximumcrossingatendreference_nilreason,
    procedure.departurearrivalcondition.minimumenroutealtitude_value,
    procedure.departurearrivalcondition.minimumenroutealtitude_uom,
    procedure.departurearrivalcondition.minimumenroutealtitude_nilreason,
    procedure.departurearrivalcondition.minimumcrossingatend_value,
    procedure.departurearrivalcondition.minimumcrossingatend_uom,
    procedure.departurearrivalcondition.minimumcrossingatend_nilreason,
    procedure.departurearrivalcondition.maximumcrossingatend_value,
    procedure.departurearrivalcondition.maximumcrossingatend_uom,
    procedure.departurearrivalcondition.maximumcrossingatend_nilreason,
    shared_aircraftcharacteristic_pt_mpylzo.id;
create index on procedure.departurearrivalcondition_view (id);
-- DirectFlightClassPropertyType
-- ['notes.note_view']
drop materialized view if exists routes.directflightclass_view cascade;
create materialized view routes.directflightclass_view as
select
    routes.directflightclass_pt.id,
    routes.directflightclass_pt.nilreason AS directflightclass_nilreason,
    coalesce(cast(routes.directflightclass.exceedlength_value as varchar) || ' ' || routes.directflightclass.exceedlength_uom, '(' || routes.directflightclass.exceedlength_nilreason || ')') as exceedlength,
    jsonb_agg(notes_note_view_ddkzms.*) AS annotation
from routes.directflightclass_pt 
inner join routes.directflightclass on routes.directflightclass_pt.directflightclass_id = routes.directflightclass.id
left join master_join master_join_qfbjuf on routes.directflightclass.id = master_join_qfbjuf.source_id
left join notes.note_view notes_note_view_ddkzms on master_join_qfbjuf.target_id = notes_note_view_ddkzms.id
group by
    routes.directflightclass_pt.id,
    routes.directflightclass_pt.nilreason,
    routes.directflightclass.exceedlength_value,
    routes.directflightclass.exceedlength_uom,
    routes.directflightclass.exceedlength_nilreason;
create index on routes.directflightclass_view (id);
-- ElevatedCurvePropertyType
-- ['notes.note_view']
-- Snowflake SQL : ElevatedCurvePropertyType

DROP MATERIALIZED VIEW IF EXISTS geometry.elevatedcurve_view CASCADE;

CREATE MATERIALIZED VIEW geometry.elevatedcurve_view AS
WITH 
center AS (
    SELECT 
		id, 
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 100) AS n, 	
        center
),
arc_line AS (
    SELECT 
        id,
        ST_MakeLine(point_geom) AS arc_geom
    FROM interpolated_points
    GROUP BY id
),
segment_union AS (
    SELECT 
		id, 
		ST_ReducePrecision(linestring,0.000000000000001) AS geom
    FROM
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 0
    UNION ALL 
    SELECT 
		id, 
		ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 1000)::geometry AS geom
    FROM 
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 1
    UNION ALL 
    SELECT 
		id, 
		ST_ReducePrecision(arc_geom, 0.000000000000001) AS geom
    FROM 
		arc_line
),
merged_segments AS (
    SELECT 
        geometry.elevated_curve_pt.id,
        ST_LineMerge(ST_Collect(segment_union.geom)) AS merged_geom,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        geometry.elevated_curve_pt
    INNER JOIN 
		master_join_geometry ON  geometry.elevated_curve_pt.id = master_join_geometry.source_id 
    INNER JOIN 
        segment_union ON master_join_geometry.target_id  = segment_union.id
    GROUP BY geometry.elevated_curve_pt.id
)
SELECT 
    merged_segments.id,
	merged_geom as geom,
	COALESCE(merged_segments.elevation || ' ' || merged_segments.elevation_uom, '(' || merged_segments.elevation_nilreason || ')') AS elevation,
	COALESCE(merged_segments.geoidundulation || ' ' || merged_segments.geoidundulation_uom, '(' || merged_segments.geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(merged_segments.verticaldatum || ' ' || merged_segments.geoidundulation_uom, '(' || merged_segments.geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(CAST(merged_segments.verticalaccuracy AS varchar), '(' || merged_segments.verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(merged_segments.horizontalaccuracy || ' ' || merged_segments.horizontalaccuracy_uom, '(' || merged_segments.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM merged_segments;

CREATE INDEX ON geometry.elevatedcurve_view (id);
-- ElevatedPointPropertyType
-- ['notes.note_view']
-- Snowflake SQL : ElevatedPointPropertyType

DROP MATERIALIZED VIEW IF EXISTS geometry.elevatedpoint_view CASCADE;

CREATE MATERIALIZED VIEW geometry.elevatedpoint_view AS
SELECT 
    id, 
    point as geom,
	COALESCE(elevation || ' ' || elevation_uom, '(' || elevation_nilreason || ')') AS elevation,
	COALESCE(geoidundulation || ' ' || geoidundulation_uom, '(' || geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(verticaldatum || ' ' || geoidundulation_uom, '(' || geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(verticalaccuracy || ' ' || horizontalaccuracy_uom, '(' || verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(horizontalaccuracy || ' ' || horizontalaccuracy_uom, '(' || horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM geometry.elevated_point_pt;

CREATE INDEX ON geometry.elevatedpoint_view (id);
-- ElevatedSurfacePropertyType
-- ['notes.note_view']
-- -- Snowflake SQL : ElevatedSurfacePropertyType

-- DROP VIEW IF EXISTS geometry.elevatedpoint_view CASCADE;

-- CREATE MATERIALIZED VIEW partial_elevatedsurface_view AS
-- WITH  
-- segment_ref AS(
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		SUBSTRING(
-- 	        curve_ref 
-- 	        FROM '([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$'
-- 	    ) AS uuid
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 4
-- ),
-- segment_value AS(
-- 	SELECT 
-- 		airspace.geoborder.identifier AS uuid,
-- 		geom
-- 	FROM airspace.geoborder
-- 	INNER JOIN public.geoborder_timeslice
-- 		ON airspace.geoborder.id = public.geoborder_timeslice.geoborder_id
-- 	INNER JOIN airspace.geoborder_tsp
-- 		ON public.geoborder_timeslice.geoborder_tsp_id = airspace.geoborder_tsp.id
-- 	INNER JOIN airspace.geoborder_ts
-- 		ON airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
-- 	INNER JOIN public.curve_pt
-- 		ON airspace.geoborder_ts.border_id = public.curve_pt.id
-- 	INNER JOIN geometry.curve_view
-- 		ON public.curve_pt.id = geometry.curve_view.id
-- ),
-- center AS (
--     SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		start_angle,
-- 		end_angle,
-- 		(end_angle - start_angle) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 2
-- 	UNION ALL 
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		0 as start_angle,
-- 		2*PI() as end_angle,
-- 		(0 - 2*PI()) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 3
-- ),
-- interpolated_points AS (
--     SELECT 
--         center.id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
--     FROM 
--         generate_series(0, 256) AS n, 	
--         center
-- ),
-- arc_line AS (
--     SELECT 
--         id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_MakeLine(point_geom) AS geom
--     FROM interpolated_points
--     GROUP BY 
-- 		id, 
-- 		curve_xml_id,
-- 		part, 
-- 		member, 
-- 		sequence, 
-- 		interpretation
-- ),
-- segment_union AS (
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(linestring, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 0
--     UNION ALL 
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 10000)::geometry as geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 1
-- 	UNION ALL
-- 	SELECT
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM
-- 		arc_line
-- 	UNION ALL
-- 	SELECT
-- 		id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM segment_ref
-- 	INNER JOIN segment_value
-- 	ON segment_ref.uuid = segment_value.uuid		
-- ),
-- segement_ownership AS (
-- 	SELECT 
-- 		public.elevated_surface_pt.id,
--         public.elevated_surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point as first_point,
-- 		segment_union.last_point as last_point,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         public.elevated_surface_pt
--     INNER JOIN 
--         public.elevatedsurface_exterior 
--         ON public.elevated_surface_pt.id = public.elevatedsurface_exterior.elevatedsurfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.elevatedsurface_exterior.exteriorlinestring_id = segment_union.id
-- 	UNION ALL
-- 	SELECT 
-- 		public.elevated_surface_pt.id,
--         public.elevated_surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point AS first_point,
-- 		segment_union.last_point AS last_point,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         public.elevated_surface_pt
--     INNER JOIN 
--         public.elevatedsurface_interior 
--         ON public.elevated_surface_pt.id = public.elevatedsurface_interior.elevatedsurfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.elevatedsurface_interior.interiorlinestring_id = segment_union.id
-- ),
-- ordered_segments AS (
--     SELECT 
-- 		id,
--         xml_id, 
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point, 
--         last_point,
-- 		ST_IsClosed(segement_ownership.geom) AS closed,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         segement_ownership
--     ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member, 
-- 		sequence
-- ),
-- connecting_segments AS (
--     SELECT 
--         id,
-- 		xml_id,
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point,
--         last_point,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         ordered_segments
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member,
--         curr.sequence + 0.5 AS sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		NULL AS elevation,
-- 		NULL AS elevation_uom,
-- 		NULL AS elevation_nilreason,
-- 		NULL AS geoidundulation,
-- 		NULL AS geoidundulation_uom,
-- 		NULL AS geoidundulation_nilreason,
-- 		NULL AS horizontalaccuracy,
-- 		NULL AS horizontalaccuracy_uom,
-- 		NULL AS horizontalaccuracy_nilreason,
-- 		NULL AS verticalaccuracy,
-- 		NULL AS verticalaccuracy_uom,
-- 		NULL AS verticalaccuracy_nilreason,
-- 		NULL AS verticaldatum,
-- 		NULL AS verticaldatum_nilreason,
-- 		NULL AS nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.sequence + 1 = next.sequence
-- 		AND curr.member = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member + 0.5 AS member,
--         curr.sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		NULL AS elevation,
-- 		NULL AS elevation_uom,
-- 		NULL AS elevation_nilreason,
-- 		NULL AS geoidundulation,
-- 		NULL AS geoidundulation_uom,
-- 		NULL AS geoidundulation_nilreason,
-- 		NULL AS horizontalaccuracy,
-- 		NULL AS horizontalaccuracy_uom,
-- 		NULL AS horizontalaccuracy_nilreason,
-- 		NULL AS verticalaccuracy,
-- 		NULL AS verticalaccuracy_uom,
-- 		NULL AS verticalaccuracy_nilreason,
-- 		NULL AS verticaldatum,
-- 		NULL AS verticaldatum_nilreason,
-- 		NULL AS nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.member + 1 = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     ORDER BY 
--         xml_id, 
--         part, 
--         member,
--         sequence
-- ),
-- clustered_segments AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         geom,
-- 		ST_ClusterDBSCAN(geom, eps := 0, minpoints := 1) OVER (PARTITION BY xml_id, part)  AS cluster_id,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation != 4
-- 	UNION ALL
--     SELECT 
--         id, 
-- 		xml_id,
-- 		curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         geom,
-- 		Null AS cluster_id,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation = 4
-- 	ORDER BY
-- 		xml_id,
-- 		part, 
-- 		member
-- ),
-- partial_ring AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY_AGG(curve_xml_id) as curve_xml_id,
--         part,
--         MIN(member) AS member,
-- 		MIN(interpretation) AS interpretation,
--         ST_IsClosed(ST_LineMerge(ST_Collect(geom))) AS closed,
--         ST_GeometryType(ST_LineMerge(ST_Collect(geom))) AS type, 
--         ST_LineMerge(ST_Collect(geom)) AS geom,
--         NULL::geometry AS points,
-- 		MAX(elevation) AS elevation,
-- 		MAX(elevation_uom) AS elevation_uom,
-- 		MAX(elevation_nilreason) AS elevation_nilreason,
-- 		MAX(geoidundulation) AS geoidundulation,
-- 		MAX(geoidundulation_uom) AS geoidundulation_uom,
-- 		MAX(geoidundulation_nilreason) AS geoidundulation_nilreason,
-- 		MAX(horizontalaccuracy) AS horizontalaccuracy,
-- 		MAX(horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MAX(horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MAX(verticalaccuracy) AS verticalaccuracy,
-- 		MAX(verticalaccuracy_uom) AS verticalaccuracy_uom,
-- 		MAX(verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
-- 		MAX(verticaldatum) AS verticaldatum,
-- 		MAX(verticaldatum_nilreason) AS verticaldatum_nilreason,
-- 		MAX(nilreason) AS nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation != 4
--     GROUP BY 
-- 		id,
--         xml_id, 
--         part, 
--         cluster_id,
--         horizontalaccuracy, 
--         horizontalaccuracy_uom, 
--         horizontalaccuracy_nilreason,	
--         nilreason
-- 	UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY[curve_xml_id] AS curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         ST_IsClosed(geom) AS closed,
--         ST_GeometryType(geom) AS type, 
-- 		geom AS geom,
-- 		ST_Points(geom) AS points,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation = 4
-- 	ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member
-- ),
-- output AS (
--     SELECT 
--         pr.id, 
--         pr.xml_id,
-- 		pr.curve_xml_id,
--         pr.part,
-- 		ROW_NUMBER() OVER (PARTITION BY xml_id, part ORDER BY id) - 1 AS increment,
-- 		COUNT(*) OVER (PARTITION BY xml_id, part ) AS total_count,
-- 		pr.interpretation,
-- 		pr.points,
--         COALESCE(dumped.geom, pr.geom) AS geom,
-- 		pr.elevation,
-- 		pr.elevation_uom,
-- 		pr.elevation_nilreason,
-- 		pr.geoidundulation,
-- 		pr.geoidundulation_uom,
-- 		pr.geoidundulation_nilreason,
-- 		pr.horizontalaccuracy,
-- 		pr.horizontalaccuracy_uom,
-- 		pr.horizontalaccuracy_nilreason,
-- 		pr.verticalaccuracy,
-- 		pr.verticalaccuracy_uom,
-- 		pr.verticalaccuracy_nilreason,
-- 		pr.verticaldatum,
-- 		pr.verticaldatum_nilreason,
-- 		pr.nilreason
--     FROM 
--         partial_ring pr
--     LEFT JOIN LATERAL (
--         SELECT (ST_Dump(pr.geom)).geom
--         WHERE ST_GeometryType(pr.geom) = 'ST_MultiLineString'
--     ) dumped ON true
-- 	ORDER BY
-- 		xml_id, 
-- 		part, 
-- 		member
-- )
-- SELECT 
-- 	ST_GeometryType(geom),
-- 	output.id, 
-- 	to_jsonb(output.xml_id) AS xml_id,
-- 	to_jsonb(output.curve_xml_id) AS curve_xml_id,
-- 	output.part,
-- 	output.increment,
-- 	output.total_count,
-- 	output.interpretation,
-- 	output.geom,
-- 	output.points,
-- 	output.elevation,
-- 	output.elevation_uom,
-- 	output.elevation_nilreason,
-- 	output.geoidundulation,
-- 	output.geoidundulation_uom,
-- 	output.geoidundulation_nilreason,
-- 	output.horizontalaccuracy,
-- 	output.horizontalaccuracy_uom,
-- 	output.horizontalaccuracy_nilreason,
-- 	output.verticalaccuracy,
-- 	output.verticalaccuracy_uom,
-- 	output.verticalaccuracy_nilreason,
-- 	output.verticaldatum,
-- 	output.verticaldatum_nilreason,
-- 	output.nilreason
-- FROM
-- output;

-- -- R1 : Simple feature, closed
-- -- R2 : Simple feature, unclosed
-- -- G1 : Complex feature wiht a single geoborder, 
-- -- G2 : Complex feature with multiple geoborder,
-- CREATE MATERIALIZED VIEW geometry.elevatedsurface_view AS
-- WITH 
-- g1_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(ring.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(ring.geom)) AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view ring
-- 	ON 
--         ring.xml_id = geoborder.xml_id
-- 		AND
-- 		ring.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE 
-- 		geoborder.total_count = 2
-- 		AND
-- 		geoborder.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.geom, 
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.geom, 
-- 		ring.geom,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_elevated_surface_view.id, 
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		partial_elevated_surface_view.increment,
-- 		partial_elevated_surface_view.interpretation,
-- 		partial_elevated_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view
-- 	WHERE 
-- 		partial_elevated_surface_view.total_count = 2 
-- 		AND
-- 		partial_elevated_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		geoborder.geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom, ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,	ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_elevated_surface_view.id, 
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		partial_elevated_surface_view.increment,
-- 		partial_elevated_surface_view.interpretation,
-- 		partial_elevated_surface_view.total_count,
-- 		partial_elevated_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view
-- 	WHERE 
-- 		partial_elevated_surface_view.total_count > 2 
-- 		AND
-- 		partial_elevated_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment_filtered AS (
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		curr.geom AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.start_segment])) AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment)  
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment])) AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment, curr.start_segment])) AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 	g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT
-- 		g2_segment.id, 
-- 		g2_segment.xml_id,
-- 		g2_segment.curve_xml_id,
-- 		g2_segment.part,
-- 		g2_segment.increment,
-- 		g2_segment.geom,
-- 		g2_segment.elevation,
-- 		g2_segment.elevation_uom,
-- 		g2_segment.elevation_nilreason,
-- 		g2_segment.geoidundulation,
-- 		g2_segment.geoidundulation_uom,
-- 		g2_segment.geoidundulation_nilreason,
-- 		g2_segment.horizontalaccuracy,
-- 		g2_segment.horizontalaccuracy_uom,
-- 		g2_segment.horizontalaccuracy_nilreason,
-- 		g2_segment.verticalaccuracy,
-- 		g2_segment.verticalaccuracy_uom,
-- 		g2_segment.verticalaccuracy_nilreason,
-- 		g2_segment.verticaldatum,
-- 		g2_segment.verticaldatum_nilreason,
-- 		g2_segment.nilreason
-- 	FROM 
-- 		g2_segment
-- 	WHERE 
-- 		g2_segment.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- r1 AS (
-- 	SELECT
-- 		partial_elevated_surface_view.id,
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		partial_elevated_surface_view.geom,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM
-- 		partial_elevated_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_elevated_surface_view.geom) = true
-- 		AND 
-- 		partial_elevated_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(geom) >= 4
-- ),
-- r2 AS (
-- 	SELECT
-- 		partial_elevated_surface_view.id,
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		ST_AddPoint(partial_elevated_surface_view.geom, ST_StartPoint(partial_elevated_surface_view.geom)) AS geom,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM
-- 		partial_elevated_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_elevated_surface_view.geom) = false
-- 		AND 
-- 		partial_elevated_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(ST_AddPoint(partial_elevated_surface_view.geom, ST_StartPoint(partial_elevated_surface_view.geom))) >= 4		
-- ),
-- g1 AS (
-- 	SELECT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.elevation,
-- 		ring.elevation_uom,
-- 		ring.elevation_nilreason,
-- 		ring.geoidundulation,
-- 		ring.geoidundulation_uom,
-- 		ring.geoidundulation_nilreason,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.verticalaccuracy,
-- 		ring.verticalaccuracy_uom,
-- 		ring.verticalaccuracy_nilreason,
-- 		ring.verticaldatum,
-- 		ring.verticaldatum_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		NOT ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- 	UNION ALL
-- 	SELECT DISTINCT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.elevation,
-- 		ring.elevation_uom,
-- 		ring.elevation_nilreason,
-- 		ring.geoidundulation,
-- 		ring.geoidundulation_uom,
-- 		ring.geoidundulation_nilreason,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.verticalaccuracy,
-- 		ring.verticalaccuracy_uom,
-- 		ring.verticalaccuracy_nilreason,
-- 		ring.verticaldatum,
-- 		ring.verticaldatum_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- ),
-- g2 AS (	
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_LineMerge(ST_Collect(g2_segment_filtered.geom)) AS geom,
-- 		MAX(g2_segment_filtered.elevation) AS elevation,
-- 		MAX(g2_segment_filtered.elevation_uom) AS elevation_uom,
-- 		MAX(g2_segment_filtered.elevation_nilreason) AS elevation_nilreason,
-- 		MAX(g2_segment_filtered.geoidundulation) AS geoidundulation,
-- 		MAX(g2_segment_filtered.geoidundulation_uom) AS geoidundulation_uom,
-- 		MAX(g2_segment_filtered.geoidundulation_nilreason) AS geoidundulation_nilreason,
-- 		MAX(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticalaccuracy) AS verticalaccuracy,
-- 		MAX(g2_segment_filtered.verticalaccuracy_uom) AS verticalaccuracy_uom,
-- 		MAX(g2_segment_filtered.verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticaldatum) AS verticaldatum,
-- 		MAX(g2_segment_filtered.verticaldatum_nilreason) AS verticaldatum_nilreason,
-- 		MAX(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = true
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- 	UNION ALL
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_AddPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)), ST_StartPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)))) AS geom,
-- 		MAX(g2_segment_filtered.elevation) AS elevation,
-- 		MAX(g2_segment_filtered.elevation_uom) AS elevation_uom,
-- 		MAX(g2_segment_filtered.elevation_nilreason) AS elevation_nilreason,
-- 		MAX(g2_segment_filtered.geoidundulation) AS geoidundulation,
-- 		MAX(g2_segment_filtered.geoidundulation_uom) AS geoidundulation_uom,
-- 		MAX(g2_segment_filtered.geoidundulation_nilreason) AS geoidundulation_nilreason,
-- 		MAX(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticalaccuracy) AS verticalaccuracy,
-- 		MAX(g2_segment_filtered.verticalaccuracy_uom) AS verticalaccuracy_uom,
-- 		MAX(g2_segment_filtered.verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticaldatum) AS verticaldatum,
-- 		MAX(g2_segment_filtered.verticaldatum_nilreason) AS verticaldatum_nilreason,
-- 		MAX(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = false
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- ),
-- combined_data AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
-- 		geom,
-- 		part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         r1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         geom,
--         part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         r2
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         g1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         g2
-- ),
-- outer_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         ST_MakePolygon(geom) AS geom,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part = 0
-- ),
-- inner_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part <> 0
-- )
-- SELECT 
--     outer_shells.id, 
--     ST_MakePolygon(
--         ST_ExteriorRing(outer_shells.geom),
--         ARRAY(
--             SELECT ST_ExteriorRing(inner_shells.geom)
--             FROM inner_shells 
--             WHERE inner_shells.id = outer_shells.id
--         )
--     ) AS geom,
-- 	COALESCE(outer_shells.elevation || ' ' || outer_shells.elevation_uom, '(' || outer_shells.elevation_nilreason || ')') AS elevation,
-- 	COALESCE(outer_shells.geoidundulation || ' ' || outer_shells.geoidundulation_uom, '(' || outer_shells.geoidundulation_nilreason || ')') AS geoidUndulation,
-- 	COALESCE(outer_shells.verticaldatum || ' ' || outer_shells.outer_shells.geoidundulation_uom, '(' || outer_shells.geoidundulation_nilreason || ')') AS verticalDatum,
-- 	COALESCE(CAST(outer_shells.verticalaccuracy AS varchar), '(' || outer_shells.verticaldatum_nilreason || ')') AS verticalAccuracy,
-- 	COALESCE(outer_shells.horizontalaccuracy || ' ' || outer_shells.horizontalaccuracy_uom, '(' || outer_shells.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
-- FROM 
-- outer_shells;

-- CREATE INDEX ON geometry.elevatedsurface_view (id);

DROP MATERIALIZED VIEW IF EXISTS geometry.elevatedsurface_view CASCADE;

CREATE MATERIALIZED VIEW geometry.elevatedsurface_view AS

SELECT 
0 AS id,
ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 4326) AS geom,
0 AS elevation,
0 AS geoidUndulation,
0 AS verticalDatum,
0 AS verticalAccuracy,
0 AS horizontalAccuracy;
-- EquipmentUnavailableAdjustmentColumnPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.equipmentunavailableadjustmentcolumn_view cascade;
create materialized view procedure.equipmentunavailableadjustmentcolumn_view as
select
    procedure.equipmentunavailableadjustmentcolumn_pt.id,
    procedure.equipmentunavailableadjustmentcolumn_pt.nilreason AS equipmentunavailableadjustmentcolumn_nilreason,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_nilreason || ')') as guidanceequipment,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_nilreason || ')') as landingsystemlights,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_nilreason || ')') as equipmentrvr,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_nilreason || ')') as approachlightinginoperative,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_value as varchar) || ' ' || procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_uom, '(' || procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_nilreason || ')') as visibilityadjustment,
    jsonb_agg(notes_note_view_pwamyq.*) AS annotation
from procedure.equipmentunavailableadjustmentcolumn_pt 
inner join procedure.equipmentunavailableadjustmentcolumn on procedure.equipmentunavailableadjustmentcolumn_pt.equipmentunavailableadjustmentcolumn_id = procedure.equipmentunavailableadjustmentcolumn.id
left join master_join master_join_wnpebh on procedure.equipmentunavailableadjustmentcolumn.id = master_join_wnpebh.source_id
left join notes.note_view notes_note_view_pwamyq on master_join_wnpebh.target_id = notes_note_view_pwamyq.id
group by
    procedure.equipmentunavailableadjustmentcolumn_pt.id,
    procedure.equipmentunavailableadjustmentcolumn_pt.nilreason,
    procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_value,
    procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_value,
    procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_value,
    procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_value,
    procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_value,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_uom,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_nilreason;
create index on procedure.equipmentunavailableadjustmentcolumn_view (id);
-- EquipmentUnavailableAdjustmentPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.equipmentunavailableadjustment_view cascade;
create materialized view procedure.equipmentunavailableadjustment_view as
select
    procedure.equipmentunavailableadjustment_pt.id,
    procedure.equipmentunavailableadjustment_pt.nilreason AS equipmentunavailableadjustment_nilreason,
    coalesce(cast(procedure.equipmentunavailableadjustment.type_value as varchar), '(' || procedure.equipmentunavailableadjustment.type_nilreason || ')') as type,
    coalesce(cast(procedure.equipmentunavailableadjustment.approachlightinginoperative_value as varchar), '(' || procedure.equipmentunavailableadjustment.approachlightinginoperative_nilreason || ')') as approachlightinginoperative,
    jsonb_agg(procedure_equipmentunavailableadjustmentcolumn_pt_mcmzdy.id) AS adjustmentinopcol,
    jsonb_agg(notes_note_view_bjqtnf.*) AS annotation
from procedure.equipmentunavailableadjustment_pt 
inner join procedure.equipmentunavailableadjustment on procedure.equipmentunavailableadjustment_pt.equipmentunavailableadjustment_id = procedure.equipmentunavailableadjustment.id
left join master_join master_join_ydgtfq on procedure.equipmentunavailableadjustment.id = master_join_ydgtfq.source_id
left join procedure.equipmentunavailableadjustmentcolumn_pt procedure_equipmentunavailableadjustmentcolumn_pt_mcmzdy on master_join_ydgtfq.target_id = procedure_equipmentunavailableadjustmentcolumn_pt_mcmzdy.id
left join master_join master_join_iuugmt on procedure.equipmentunavailableadjustment.id = master_join_iuugmt.source_id
left join notes.note_view notes_note_view_bjqtnf on master_join_iuugmt.target_id = notes_note_view_bjqtnf.id
group by
    procedure.equipmentunavailableadjustment_pt.id,
    procedure.equipmentunavailableadjustment_pt.nilreason,
    procedure.equipmentunavailableadjustment.type_value,
    procedure.equipmentunavailableadjustment.type_nilreason,
    procedure.equipmentunavailableadjustment.approachlightinginoperative_value,
    procedure.equipmentunavailableadjustment.approachlightinginoperative_nilreason;
create index on procedure.equipmentunavailableadjustment_view (id);
-- FASDataBlockPropertyType
-- ['notes.note_view']
drop materialized view if exists public.fasdatablock_view cascade;
create materialized view public.fasdatablock_view as
select
    public.fasdatablock_pt.id,
    public.fasdatablock_pt.nilreason AS fasdatablock_nilreason,
    coalesce(cast(public.fasdatablock.horizontalalarmlimit_value as varchar), '(' || public.fasdatablock.horizontalalarmlimit_nilreason || ')') as horizontalalarmlimit,
    coalesce(cast(public.fasdatablock.verticalalarmlimit_value as varchar), '(' || public.fasdatablock.verticalalarmlimit_nilreason || ')') as verticalalarmlimit,
    coalesce(cast(public.fasdatablock.crcremainder_value as varchar), '(' || public.fasdatablock.crcremainder_nilreason || ')') as crcremainder,
    coalesce(cast(public.fasdatablock.operationtype_value as varchar), '(' || public.fasdatablock.operationtype_nilreason || ')') as operationtype,
    coalesce(cast(public.fasdatablock.serviceprovidersbas_value as varchar), '(' || public.fasdatablock.serviceprovidersbas_nilreason || ')') as serviceprovidersbas,
    coalesce(cast(public.fasdatablock.approachperformancedesignator_value as varchar), '(' || public.fasdatablock.approachperformancedesignator_nilreason || ')') as approachperformancedesignator,
    coalesce(cast(public.fasdatablock.referencepathdataselector_value as varchar), '(' || public.fasdatablock.referencepathdataselector_nilreason || ')') as referencepathdataselector,
    coalesce(cast(public.fasdatablock.thresholdcoursewidth_value as varchar) || ' ' || public.fasdatablock.thresholdcoursewidth_uom, '(' || public.fasdatablock.thresholdcoursewidth_nilreason || ')') as thresholdcoursewidth,
    coalesce(cast(public.fasdatablock.lengthoffset_value as varchar) || ' ' || public.fasdatablock.lengthoffset_uom, '(' || public.fasdatablock.lengthoffset_nilreason || ')') as lengthoffset,
    jsonb_agg(notes_note_view_swbkgm.*) AS annotation
from public.fasdatablock_pt 
inner join public.fasdatablock on public.fasdatablock_pt.fasdatablock_id = public.fasdatablock.id
left join master_join master_join_jciwcq on public.fasdatablock.id = master_join_jciwcq.source_id
left join notes.note_view notes_note_view_swbkgm on master_join_jciwcq.target_id = notes_note_view_swbkgm.id
group by
    public.fasdatablock_pt.id,
    public.fasdatablock_pt.nilreason,
    public.fasdatablock.horizontalalarmlimit_value,
    public.fasdatablock.horizontalalarmlimit_nilreason,
    public.fasdatablock.verticalalarmlimit_value,
    public.fasdatablock.verticalalarmlimit_nilreason,
    public.fasdatablock.crcremainder_value,
    public.fasdatablock.crcremainder_nilreason,
    public.fasdatablock.operationtype_value,
    public.fasdatablock.operationtype_nilreason,
    public.fasdatablock.serviceprovidersbas_value,
    public.fasdatablock.serviceprovidersbas_nilreason,
    public.fasdatablock.approachperformancedesignator_value,
    public.fasdatablock.approachperformancedesignator_nilreason,
    public.fasdatablock.referencepathdataselector_value,
    public.fasdatablock.referencepathdataselector_nilreason,
    public.fasdatablock.thresholdcoursewidth_value,
    public.fasdatablock.thresholdcoursewidth_uom,
    public.fasdatablock.thresholdcoursewidth_nilreason,
    public.fasdatablock.lengthoffset_value,
    public.fasdatablock.lengthoffset_uom,
    public.fasdatablock.lengthoffset_nilreason;
create index on public.fasdatablock_view (id);
-- FinalProfilePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.finalprofile_view cascade;
create materialized view procedure.finalprofile_view as
select
    procedure.finalprofile_pt.id,
    procedure.finalprofile_pt.nilreason AS finalprofile_nilreason,
    jsonb_agg(procedure_approachaltitudetable_pt_lxflni.id) AS altitude,
    jsonb_agg(procedure_approachdistancetable_pt_uafxpp.id) AS distance,
    jsonb_agg(procedure_approachtimingtable_pt_cyifls.id) AS timing,
    jsonb_agg(notes_note_view_izdffr.*) AS annotation
from procedure.finalprofile_pt 
inner join procedure.finalprofile on procedure.finalprofile_pt.finalprofile_id = procedure.finalprofile.id
left join master_join master_join_wuguuo on procedure.finalprofile.id = master_join_wuguuo.source_id
left join procedure.approachaltitudetable_pt procedure_approachaltitudetable_pt_lxflni on master_join_wuguuo.target_id = procedure_approachaltitudetable_pt_lxflni.id
left join master_join master_join_vxahgx on procedure.finalprofile.id = master_join_vxahgx.source_id
left join procedure.approachdistancetable_pt procedure_approachdistancetable_pt_uafxpp on master_join_vxahgx.target_id = procedure_approachdistancetable_pt_uafxpp.id
left join master_join master_join_doumek on procedure.finalprofile.id = master_join_doumek.source_id
left join procedure.approachtimingtable_pt procedure_approachtimingtable_pt_cyifls on master_join_doumek.target_id = procedure_approachtimingtable_pt_cyifls.id
left join master_join master_join_cdspyz on procedure.finalprofile.id = master_join_cdspyz.source_id
left join notes.note_view notes_note_view_izdffr on master_join_cdspyz.target_id = notes_note_view_izdffr.id
group by
    procedure.finalprofile_pt.id,
    procedure.finalprofile_pt.nilreason;
create index on procedure.finalprofile_view (id);
-- FlightCharacteristicPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.flightcharacteristic_view cascade;
create materialized view shared.flightcharacteristic_view as
select
    shared.flightcharacteristic_pt.id,
    shared.flightcharacteristic_pt.nilreason AS flightcharacteristic_nilreason,
    coalesce(cast(shared.flightcharacteristic.type_value as varchar), '(' || shared.flightcharacteristic.type_nilreason || ')') as type,
    coalesce(cast(shared.flightcharacteristic.rule_value as varchar), '(' || shared.flightcharacteristic.rule_nilreason || ')') as rule,
    coalesce(cast(shared.flightcharacteristic.status_value as varchar), '(' || shared.flightcharacteristic.status_nilreason || ')') as status,
    coalesce(cast(shared.flightcharacteristic.military_value as varchar), '(' || shared.flightcharacteristic.military_nilreason || ')') as military,
    coalesce(cast(shared.flightcharacteristic.origin_value as varchar), '(' || shared.flightcharacteristic.origin_nilreason || ')') as origin,
    coalesce(cast(shared.flightcharacteristic.purpose_value as varchar), '(' || shared.flightcharacteristic.purpose_nilreason || ')') as purpose,
    jsonb_agg(notes_note_view_xzdjyx.*) AS annotation
from shared.flightcharacteristic_pt 
inner join shared.flightcharacteristic on shared.flightcharacteristic_pt.flightcharacteristic_id = shared.flightcharacteristic.id
left join master_join master_join_qidxnc on shared.flightcharacteristic.id = master_join_qidxnc.source_id
left join notes.note_view notes_note_view_xzdjyx on master_join_qidxnc.target_id = notes_note_view_xzdjyx.id
group by
    shared.flightcharacteristic_pt.id,
    shared.flightcharacteristic_pt.nilreason,
    shared.flightcharacteristic.type_value,
    shared.flightcharacteristic.type_nilreason,
    shared.flightcharacteristic.rule_value,
    shared.flightcharacteristic.rule_nilreason,
    shared.flightcharacteristic.status_value,
    shared.flightcharacteristic.status_nilreason,
    shared.flightcharacteristic.military_value,
    shared.flightcharacteristic.military_nilreason,
    shared.flightcharacteristic.origin_value,
    shared.flightcharacteristic.origin_nilreason,
    shared.flightcharacteristic.purpose_value,
    shared.flightcharacteristic.purpose_nilreason;
create index on shared.flightcharacteristic_view (id);
-- FlightConditionCircumstancePropertyType
-- ['notes.note_view']
drop materialized view if exists routes.flightconditioncircumstance_view cascade;
create materialized view routes.flightconditioncircumstance_view as
select
    routes.flightconditioncircumstance_pt.id,
    routes.flightconditioncircumstance_pt.nilreason AS flightconditioncircumstance_nilreason,
    coalesce(cast(routes.flightconditioncircumstance.referencelocation_value as varchar), '(' || routes.flightconditioncircumstance.referencelocation_nilreason || ')') as referencelocation,
    coalesce(cast(routes.flightconditioncircumstance.relationwithlocation_value as varchar), '(' || routes.flightconditioncircumstance.relationwithlocation_nilreason || ')') as relationwithlocation,
    jsonb_agg(notes_note_view_asjrnh.*) AS annotation
from routes.flightconditioncircumstance_pt 
inner join routes.flightconditioncircumstance on routes.flightconditioncircumstance_pt.flightconditioncircumstance_id = routes.flightconditioncircumstance.id
left join master_join master_join_mkreoc on routes.flightconditioncircumstance.id = master_join_mkreoc.source_id
left join notes.note_view notes_note_view_asjrnh on master_join_mkreoc.target_id = notes_note_view_asjrnh.id
group by
    routes.flightconditioncircumstance_pt.id,
    routes.flightconditioncircumstance_pt.nilreason,
    routes.flightconditioncircumstance.referencelocation_value,
    routes.flightconditioncircumstance.referencelocation_nilreason,
    routes.flightconditioncircumstance.relationwithlocation_value,
    routes.flightconditioncircumstance.relationwithlocation_nilreason;
create index on routes.flightconditioncircumstance_view (id);
-- FlightRestrictionLevelPropertyType
-- ['notes.note_view']
drop materialized view if exists routes.flightrestrictionlevel_view cascade;
create materialized view routes.flightrestrictionlevel_view as
select
    routes.flightrestrictionlevel_pt.id,
    routes.flightrestrictionlevel_pt.nilreason AS flightrestrictionlevel_nilreason,
    coalesce(cast(routes.flightrestrictionlevel.upperlevelreference_value as varchar), '(' || routes.flightrestrictionlevel.upperlevelreference_nilreason || ')') as upperlevelreference,
    coalesce(cast(routes.flightrestrictionlevel.lowerlevelreference_value as varchar), '(' || routes.flightrestrictionlevel.lowerlevelreference_nilreason || ')') as lowerlevelreference,
    coalesce(cast(routes.flightrestrictionlevel.upperlevel_value as varchar) || ' ' || routes.flightrestrictionlevel.upperlevel_uom, '(' || routes.flightrestrictionlevel.upperlevel_nilreason || ')') as upperlevel,
    coalesce(cast(routes.flightrestrictionlevel.lowerlevel_value as varchar) || ' ' || routes.flightrestrictionlevel.lowerlevel_uom, '(' || routes.flightrestrictionlevel.lowerlevel_nilreason || ')') as lowerlevel,
    jsonb_agg(notes_note_view_uzcocd.*) AS annotation
from routes.flightrestrictionlevel_pt 
inner join routes.flightrestrictionlevel on routes.flightrestrictionlevel_pt.flightrestrictionlevel_id = routes.flightrestrictionlevel.id
left join master_join master_join_xypfos on routes.flightrestrictionlevel.id = master_join_xypfos.source_id
left join notes.note_view notes_note_view_uzcocd on master_join_xypfos.target_id = notes_note_view_uzcocd.id
group by
    routes.flightrestrictionlevel_pt.id,
    routes.flightrestrictionlevel_pt.nilreason,
    routes.flightrestrictionlevel.upperlevelreference_value,
    routes.flightrestrictionlevel.upperlevelreference_nilreason,
    routes.flightrestrictionlevel.lowerlevelreference_value,
    routes.flightrestrictionlevel.lowerlevelreference_nilreason,
    routes.flightrestrictionlevel.upperlevel_value,
    routes.flightrestrictionlevel.upperlevel_uom,
    routes.flightrestrictionlevel.upperlevel_nilreason,
    routes.flightrestrictionlevel.lowerlevel_value,
    routes.flightrestrictionlevel.lowerlevel_uom,
    routes.flightrestrictionlevel.lowerlevel_nilreason;
create index on routes.flightrestrictionlevel_view (id);
-- FuelPropertyType
-- ['notes.note_view']
drop materialized view if exists service.fuel_view cascade;
create materialized view service.fuel_view as
select
    service.fuel_pt.id,
    service.fuel_pt.nilreason AS fuel_nilreason,
    coalesce(cast(service.fuel.category_value as varchar), '(' || service.fuel.category_nilreason || ')') as category,
    jsonb_agg(notes_note_view_rzkiok.*) AS annotation
from service.fuel_pt 
inner join service.fuel on service.fuel_pt.fuel_id = service.fuel.id
left join master_join master_join_jhwywl on service.fuel.id = master_join_jhwywl.source_id
left join notes.note_view notes_note_view_rzkiok on master_join_jhwywl.target_id = notes_note_view_rzkiok.id
group by
    service.fuel_pt.id,
    service.fuel_pt.nilreason,
    service.fuel.category_value,
    service.fuel.category_nilreason;
create index on service.fuel_view (id);
-- HoldingPatternDistancePropertyType
-- ['notes.note_view']
drop materialized view if exists holding.holdingpatterndistance_view cascade;
create materialized view holding.holdingpatterndistance_view as
select
    holding.holdingpatterndistance_pt.id,
    holding.holdingpatterndistance_pt.nilreason AS holdingpatterndistance_nilreason,
    coalesce(cast(holding.holdingpatterndistance.length_value as varchar) || ' ' || holding.holdingpatterndistance.length_uom, '(' || holding.holdingpatterndistance.length_nilreason || ')') as length,
    jsonb_agg(notes_note_view_eebxdo.*) AS annotation
from holding.holdingpatterndistance_pt 
inner join holding.holdingpatterndistance on holding.holdingpatterndistance_pt.holdingpatterndistance_id = holding.holdingpatterndistance.id
left join master_join master_join_flgvjo on holding.holdingpatterndistance.id = master_join_flgvjo.source_id
left join notes.note_view notes_note_view_eebxdo on master_join_flgvjo.target_id = notes_note_view_eebxdo.id
group by
    holding.holdingpatterndistance_pt.id,
    holding.holdingpatterndistance_pt.nilreason,
    holding.holdingpatterndistance.length_value,
    holding.holdingpatterndistance.length_uom,
    holding.holdingpatterndistance.length_nilreason;
create index on holding.holdingpatterndistance_view (id);
-- HoldingPatternDurationPropertyType
-- ['notes.note_view']
drop materialized view if exists holding.holdingpatternduration_view cascade;
create materialized view holding.holdingpatternduration_view as
select
    holding.holdingpatternduration_pt.id,
    holding.holdingpatternduration_pt.nilreason AS holdingpatternduration_nilreason,
    coalesce(cast(holding.holdingpatternduration.duration_value as varchar) || ' ' || holding.holdingpatternduration.duration_uom, '(' || holding.holdingpatternduration.duration_nilreason || ')') as duration,
    jsonb_agg(notes_note_view_ywoxzb.*) AS annotation
from holding.holdingpatternduration_pt 
inner join holding.holdingpatternduration on holding.holdingpatternduration_pt.holdingpatternduration_id = holding.holdingpatternduration.id
left join master_join master_join_jwmopg on holding.holdingpatternduration.id = master_join_jwmopg.source_id
left join notes.note_view notes_note_view_ywoxzb on master_join_jwmopg.target_id = notes_note_view_ywoxzb.id
group by
    holding.holdingpatternduration_pt.id,
    holding.holdingpatternduration_pt.nilreason,
    holding.holdingpatternduration.duration_value,
    holding.holdingpatternduration.duration_uom,
    holding.holdingpatternduration.duration_nilreason;
create index on holding.holdingpatternduration_view (id);
-- HoldingUsePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.holdinguse_view cascade;
create materialized view procedure.holdinguse_view as
select
    procedure.holdinguse_pt.id,
    procedure.holdinguse_pt.nilreason AS holdinguse_nilreason,
    coalesce(cast(procedure.holdinguse.holdinguse_value as varchar), '(' || procedure.holdinguse.holdinguse_nilreason || ')') as holdinguse,
    coalesce(cast(procedure.holdinguse.instruction_value as varchar), '(' || procedure.holdinguse.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.holdinguse.instructionaltitudereference_value as varchar), '(' || procedure.holdinguse.instructionaltitudereference_nilreason || ')') as instructionaltitudereference,
    coalesce(cast(procedure.holdinguse.instructedaltitude_value as varchar) || ' ' || procedure.holdinguse.instructedaltitude_uom, '(' || procedure.holdinguse.instructedaltitude_nilreason || ')') as instructedaltitude,
    coalesce(cast(holding_holdingpattern_pt_acbxfo.title as varchar), '(' || holding_holdingpattern_pt_acbxfo.nilreason[1] || ')') AS theholdingpattern,
    holding_holdingpattern_pt_acbxfo.href AS theholdingpattern_href,
    jsonb_agg(notes_note_view_gjsdsq.*) AS annotation
from procedure.holdinguse_pt 
inner join procedure.holdinguse on procedure.holdinguse_pt.holdinguse_id = procedure.holdinguse.id
left join holding.holdingpattern_pt holding_holdingpattern_pt_acbxfo on procedure.holdinguse.theholdingpattern_id = holding_holdingpattern_pt_acbxfo.id
left join master_join master_join_edwuua on procedure.holdinguse.id = master_join_edwuua.source_id
left join notes.note_view notes_note_view_gjsdsq on master_join_edwuua.target_id = notes_note_view_gjsdsq.id
group by
    procedure.holdinguse_pt.id,
    procedure.holdinguse_pt.nilreason,
    procedure.holdinguse.holdinguse_value,
    procedure.holdinguse.holdinguse_nilreason,
    procedure.holdinguse.instruction_value,
    procedure.holdinguse.instruction_nilreason,
    procedure.holdinguse.instructionaltitudereference_value,
    procedure.holdinguse.instructionaltitudereference_nilreason,
    procedure.holdinguse.instructedaltitude_value,
    procedure.holdinguse.instructedaltitude_uom,
    procedure.holdinguse.instructedaltitude_nilreason,
    holding_holdingpattern_pt_acbxfo.title,
    holding_holdingpattern_pt_acbxfo.nilreason[1],
    holding_holdingpattern_pt_acbxfo.href;
create index on procedure.holdinguse_view (id);
-- LandingTakeoffAreaCollectionPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.landingtakeoffareacollection_view cascade;
create materialized view procedure.landingtakeoffareacollection_view as
select
    procedure.landingtakeoffareacollection_pt.id,
    procedure.landingtakeoffareacollection_pt.nilreason AS landingtakeoffareacollection_nilreason,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_jnxpgf.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_jnxpgf.title AS varchar), '(' || airport_heliport_runwaydirection_pt_jnxpgf.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_jnxpgf.href)) AS runway,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_touchdownliftoff_pt_haomfi.id,
    'title', coalesce(cast(airport_heliport_touchdownliftoff_pt_haomfi.title AS varchar), '(' || airport_heliport_touchdownliftoff_pt_haomfi.nilreason[1] || ')'),
    'href', airport_heliport_touchdownliftoff_pt_haomfi.href)) AS tlof,
    jsonb_agg(notes_note_view_pfspkb.*) AS annotation
from procedure.landingtakeoffareacollection_pt 
inner join procedure.landingtakeoffareacollection on procedure.landingtakeoffareacollection_pt.landingtakeoffareacollection_id = procedure.landingtakeoffareacollection.id
left join master_join master_join_rvsuwx on procedure.landingtakeoffareacollection.id = master_join_rvsuwx.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_jnxpgf on master_join_rvsuwx.target_id = airport_heliport_runwaydirection_pt_jnxpgf.id
left join master_join master_join_foybxk on procedure.landingtakeoffareacollection.id = master_join_foybxk.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_haomfi on master_join_foybxk.target_id = airport_heliport_touchdownliftoff_pt_haomfi.id
left join master_join master_join_byzzkw on procedure.landingtakeoffareacollection.id = master_join_byzzkw.source_id
left join notes.note_view notes_note_view_pfspkb on master_join_byzzkw.target_id = notes_note_view_pfspkb.id
group by
    procedure.landingtakeoffareacollection_pt.id,
    procedure.landingtakeoffareacollection_pt.nilreason;
create index on procedure.landingtakeoffareacollection_view (id);
-- LightActivationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.lightactivation_view cascade;
create materialized view airport_heliport.lightactivation_view as
select
    airport_heliport.lightactivation_pt.id,
    airport_heliport.lightactivation_pt.nilreason AS lightactivation_nilreason,
    coalesce(cast(airport_heliport.lightactivation.clicks_value as varchar), '(' || airport_heliport.lightactivation.clicks_nilreason || ')') as clicks,
    coalesce(cast(airport_heliport.lightactivation.intensitylevel_value as varchar), '(' || airport_heliport.lightactivation.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.lightactivation.activation_value as varchar), '(' || airport_heliport.lightactivation.activation_nilreason || ')') as activation,
    jsonb_agg(notes_note_view_dszdsj.*) AS annotation
from airport_heliport.lightactivation_pt 
inner join airport_heliport.lightactivation on airport_heliport.lightactivation_pt.lightactivation_id = airport_heliport.lightactivation.id
left join master_join master_join_fujlrt on airport_heliport.lightactivation.id = master_join_fujlrt.source_id
left join notes.note_view notes_note_view_dszdsj on master_join_fujlrt.target_id = notes_note_view_dszdsj.id
group by
    airport_heliport.lightactivation_pt.id,
    airport_heliport.lightactivation_pt.nilreason,
    airport_heliport.lightactivation.clicks_value,
    airport_heliport.lightactivation.clicks_nilreason,
    airport_heliport.lightactivation.intensitylevel_value,
    airport_heliport.lightactivation.intensitylevel_nilreason,
    airport_heliport.lightactivation.activation_value,
    airport_heliport.lightactivation.activation_nilreason;
create index on airport_heliport.lightactivation_view (id);
-- MeteorologyPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.meteorology_view cascade;
create materialized view shared.meteorology_view as
select
    shared.meteorology_pt.id,
    shared.meteorology_pt.nilreason AS meteorology_nilreason,
    coalesce(cast(shared.meteorology.flightconditions_value as varchar), '(' || shared.meteorology.flightconditions_nilreason || ')') as flightconditions,
    coalesce(cast(shared.meteorology.visibilityinterpretation_value as varchar), '(' || shared.meteorology.visibilityinterpretation_nilreason || ')') as visibilityinterpretation,
    coalesce(cast(shared.meteorology.runwayvisualrangeinterpretation_value as varchar), '(' || shared.meteorology.runwayvisualrangeinterpretation_nilreason || ')') as runwayvisualrangeinterpretation,
    coalesce(cast(shared.meteorology.visibility_value as varchar) || ' ' || shared.meteorology.visibility_uom, '(' || shared.meteorology.visibility_nilreason || ')') as visibility,
    coalesce(cast(shared.meteorology.runwayvisualrange_value as varchar) || ' ' || shared.meteorology.runwayvisualrange_uom, '(' || shared.meteorology.runwayvisualrange_nilreason || ')') as runwayvisualrange,
    jsonb_agg(notes_note_view_jfpukk.*) AS annotation
from shared.meteorology_pt 
inner join shared.meteorology on shared.meteorology_pt.meteorology_id = shared.meteorology.id
left join master_join master_join_yozgux on shared.meteorology.id = master_join_yozgux.source_id
left join notes.note_view notes_note_view_jfpukk on master_join_yozgux.target_id = notes_note_view_jfpukk.id
group by
    shared.meteorology_pt.id,
    shared.meteorology_pt.nilreason,
    shared.meteorology.flightconditions_value,
    shared.meteorology.flightconditions_nilreason,
    shared.meteorology.visibilityinterpretation_value,
    shared.meteorology.visibilityinterpretation_nilreason,
    shared.meteorology.runwayvisualrangeinterpretation_value,
    shared.meteorology.runwayvisualrangeinterpretation_nilreason,
    shared.meteorology.visibility_value,
    shared.meteorology.visibility_uom,
    shared.meteorology.visibility_nilreason,
    shared.meteorology.runwayvisualrange_value,
    shared.meteorology.runwayvisualrange_uom,
    shared.meteorology.runwayvisualrange_nilreason;
create index on shared.meteorology_view (id);
-- MinimaPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.minima_view cascade;
create materialized view procedure.minima_view as
select
    procedure.minima_pt.id,
    procedure.minima_pt.nilreason AS minima_nilreason,
    coalesce(cast(procedure.minima.altitudecode_value as varchar), '(' || procedure.minima.altitudecode_nilreason || ')') as altitudecode,
    coalesce(cast(procedure.minima.altitudereference_value as varchar), '(' || procedure.minima.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(procedure.minima.heightcode_value as varchar), '(' || procedure.minima.heightcode_nilreason || ')') as heightcode,
    coalesce(cast(procedure.minima.heightreference_value as varchar), '(' || procedure.minima.heightreference_nilreason || ')') as heightreference,
    coalesce(cast(procedure.minima.mandatoryrvr_value as varchar), '(' || procedure.minima.mandatoryrvr_nilreason || ')') as mandatoryrvr,
    coalesce(cast(procedure.minima.remotealtimeterminima_value as varchar), '(' || procedure.minima.remotealtimeterminima_nilreason || ')') as remotealtimeterminima,
    coalesce(cast(procedure.minima.altitude_value as varchar) || ' ' || procedure.minima.altitude_uom, '(' || procedure.minima.altitude_nilreason || ')') as altitude,
    coalesce(cast(procedure.minima.height_value as varchar) || ' ' || procedure.minima.height_uom, '(' || procedure.minima.height_nilreason || ')') as height,
    coalesce(cast(procedure.minima.militaryheight_value as varchar) || ' ' || procedure.minima.militaryheight_uom, '(' || procedure.minima.militaryheight_nilreason || ')') as militaryheight,
    coalesce(cast(procedure.minima.radioheight_value as varchar) || ' ' || procedure.minima.radioheight_uom, '(' || procedure.minima.radioheight_nilreason || ')') as radioheight,
    coalesce(cast(procedure.minima.visibility_value as varchar) || ' ' || procedure.minima.visibility_uom, '(' || procedure.minima.visibility_nilreason || ')') as visibility,
    coalesce(cast(procedure.minima.militaryvisibility_value as varchar) || ' ' || procedure.minima.militaryvisibility_uom, '(' || procedure.minima.militaryvisibility_nilreason || ')') as militaryvisibility,
    jsonb_agg(procedure_equipmentunavailableadjustment_pt_wqlmqi.id) AS adjustmentinop,
    jsonb_agg(notes_note_view_xwhnyn.*) AS annotation
from procedure.minima_pt 
inner join procedure.minima on procedure.minima_pt.minima_id = procedure.minima.id
left join master_join master_join_zciumw on procedure.minima.id = master_join_zciumw.source_id
left join procedure.equipmentunavailableadjustment_pt procedure_equipmentunavailableadjustment_pt_wqlmqi on master_join_zciumw.target_id = procedure_equipmentunavailableadjustment_pt_wqlmqi.id
left join master_join master_join_qibvea on procedure.minima.id = master_join_qibvea.source_id
left join notes.note_view notes_note_view_xwhnyn on master_join_qibvea.target_id = notes_note_view_xwhnyn.id
group by
    procedure.minima_pt.id,
    procedure.minima_pt.nilreason,
    procedure.minima.altitudecode_value,
    procedure.minima.altitudecode_nilreason,
    procedure.minima.altitudereference_value,
    procedure.minima.altitudereference_nilreason,
    procedure.minima.heightcode_value,
    procedure.minima.heightcode_nilreason,
    procedure.minima.heightreference_value,
    procedure.minima.heightreference_nilreason,
    procedure.minima.mandatoryrvr_value,
    procedure.minima.mandatoryrvr_nilreason,
    procedure.minima.remotealtimeterminima_value,
    procedure.minima.remotealtimeterminima_nilreason,
    procedure.minima.altitude_value,
    procedure.minima.altitude_uom,
    procedure.minima.altitude_nilreason,
    procedure.minima.height_value,
    procedure.minima.height_uom,
    procedure.minima.height_nilreason,
    procedure.minima.militaryheight_value,
    procedure.minima.militaryheight_uom,
    procedure.minima.militaryheight_nilreason,
    procedure.minima.radioheight_value,
    procedure.minima.radioheight_uom,
    procedure.minima.radioheight_nilreason,
    procedure.minima.visibility_value,
    procedure.minima.visibility_uom,
    procedure.minima.visibility_nilreason,
    procedure.minima.militaryvisibility_value,
    procedure.minima.militaryvisibility_uom,
    procedure.minima.militaryvisibility_nilreason;
create index on procedure.minima_view (id);
-- MissedApproachGroupPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.missedapproachgroup_view cascade;
create materialized view procedure.missedapproachgroup_view as
select
    procedure.missedapproachgroup_pt.id,
    procedure.missedapproachgroup_pt.nilreason AS missedapproachgroup_nilreason,
    coalesce(cast(procedure.missedapproachgroup.instruction_value as varchar), '(' || procedure.missedapproachgroup.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.missedapproachgroup.alternateclimbinstruction_value as varchar), '(' || procedure.missedapproachgroup.alternateclimbinstruction_nilreason || ')') as alternateclimbinstruction,
    coalesce(cast(procedure.missedapproachgroup.alternateclimbaltitude_value as varchar) || ' ' || procedure.missedapproachgroup.alternateclimbaltitude_uom, '(' || procedure.missedapproachgroup.alternateclimbaltitude_nilreason || ')') as alternateclimbaltitude,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_altimetersource_pt_mtwygb.id,
    'title', coalesce(cast(airport_heliport_altimetersource_pt_mtwygb.title AS varchar), '(' || airport_heliport_altimetersource_pt_mtwygb.nilreason[1] || ')'),
    'href', airport_heliport_altimetersource_pt_mtwygb.href)) AS altimeter,
    jsonb_agg(notes_note_view_igezkd.*) AS annotation
from procedure.missedapproachgroup_pt 
inner join procedure.missedapproachgroup on procedure.missedapproachgroup_pt.missedapproachgroup_id = procedure.missedapproachgroup.id
left join master_join master_join_smudzm on procedure.missedapproachgroup.id = master_join_smudzm.source_id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_mtwygb on master_join_smudzm.target_id = airport_heliport_altimetersource_pt_mtwygb.id
left join master_join master_join_mjusel on procedure.missedapproachgroup.id = master_join_mjusel.source_id
left join notes.note_view notes_note_view_igezkd on master_join_mjusel.target_id = notes_note_view_igezkd.id
group by
    procedure.missedapproachgroup_pt.id,
    procedure.missedapproachgroup_pt.nilreason,
    procedure.missedapproachgroup.instruction_value,
    procedure.missedapproachgroup.instruction_nilreason,
    procedure.missedapproachgroup.alternateclimbinstruction_value,
    procedure.missedapproachgroup.alternateclimbinstruction_nilreason,
    procedure.missedapproachgroup.alternateclimbaltitude_value,
    procedure.missedapproachgroup.alternateclimbaltitude_uom,
    procedure.missedapproachgroup.alternateclimbaltitude_nilreason;
create index on procedure.missedapproachgroup_view (id);
-- NavaidComponentPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.navaidcomponent_view cascade;
create materialized view navaids_points.navaidcomponent_view as
select
    navaids_points.navaidcomponent_pt.id,
    navaids_points.navaidcomponent_pt.nilreason AS navaidcomponent_nilreason,
    coalesce(cast(navaids_points.navaidcomponent.collocationgroup_value as varchar), '(' || navaids_points.navaidcomponent.collocationgroup_nilreason || ')') as collocationgroup,
    coalesce(cast(navaids_points.navaidcomponent.markerposition_value as varchar), '(' || navaids_points.navaidcomponent.markerposition_nilreason || ')') as markerposition,
    coalesce(cast(navaids_points.navaidcomponent.providesnavigablelocation_value as varchar), '(' || navaids_points.navaidcomponent.providesnavigablelocation_nilreason || ')') as providesnavigablelocation,
    jsonb_agg(notes_note_view_rrpxrh.*) AS annotation
from navaids_points.navaidcomponent_pt 
inner join navaids_points.navaidcomponent on navaids_points.navaidcomponent_pt.navaidcomponent_id = navaids_points.navaidcomponent.id
left join master_join master_join_gzooxj on navaids_points.navaidcomponent.id = master_join_gzooxj.source_id
left join notes.note_view notes_note_view_rrpxrh on master_join_gzooxj.target_id = notes_note_view_rrpxrh.id
group by
    navaids_points.navaidcomponent_pt.id,
    navaids_points.navaidcomponent_pt.nilreason,
    navaids_points.navaidcomponent.collocationgroup_value,
    navaids_points.navaidcomponent.collocationgroup_nilreason,
    navaids_points.navaidcomponent.markerposition_value,
    navaids_points.navaidcomponent.markerposition_nilreason,
    navaids_points.navaidcomponent.providesnavigablelocation_value,
    navaids_points.navaidcomponent.providesnavigablelocation_nilreason;
create index on navaids_points.navaidcomponent_view (id);
-- NavaidEquipmentDistancePropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.navaidequipmentdistance_view cascade;
create materialized view airport_heliport.navaidequipmentdistance_view as
select
    airport_heliport.navaidequipmentdistance_pt.id,
    airport_heliport.navaidequipmentdistance_pt.nilreason AS navaidequipmentdistance_nilreason,
    coalesce(cast(airport_heliport.navaidequipmentdistance.distance_value as varchar) || ' ' || airport_heliport.navaidequipmentdistance.distance_uom, '(' || airport_heliport.navaidequipmentdistance.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.navaidequipmentdistance.distanceaccuracy_value as varchar) || ' ' || airport_heliport.navaidequipmentdistance.distanceaccuracy_uom, '(' || airport_heliport.navaidequipmentdistance.distanceaccuracy_nilreason || ')') as distanceaccuracy,
    jsonb_agg(notes_note_view_svqymf.*) AS annotation
from airport_heliport.navaidequipmentdistance_pt 
inner join airport_heliport.navaidequipmentdistance on airport_heliport.navaidequipmentdistance_pt.navaidequipmentdistance_id = airport_heliport.navaidequipmentdistance.id
left join master_join master_join_hykwzi on airport_heliport.navaidequipmentdistance.id = master_join_hykwzi.source_id
left join notes.note_view notes_note_view_svqymf on master_join_hykwzi.target_id = notes_note_view_svqymf.id
group by
    airport_heliport.navaidequipmentdistance_pt.id,
    airport_heliport.navaidequipmentdistance_pt.nilreason,
    airport_heliport.navaidequipmentdistance.distance_value,
    airport_heliport.navaidequipmentdistance.distance_uom,
    airport_heliport.navaidequipmentdistance.distance_nilreason,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_value,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_uom,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_nilreason;
create index on airport_heliport.navaidequipmentdistance_view (id);
-- NitrogenPropertyType
-- ['notes.note_view']
drop materialized view if exists service.nitrogen_view cascade;
create materialized view service.nitrogen_view as
select
    service.nitrogen_pt.id,
    service.nitrogen_pt.nilreason AS nitrogen_nilreason,
    coalesce(cast(service.nitrogen.type_value as varchar), '(' || service.nitrogen.type_nilreason || ')') as type,
    jsonb_agg(notes_note_view_laputh.*) AS annotation
from service.nitrogen_pt 
inner join service.nitrogen on service.nitrogen_pt.nitrogen_id = service.nitrogen.id
left join master_join master_join_srjqrt on service.nitrogen.id = master_join_srjqrt.source_id
left join notes.note_view notes_note_view_laputh on master_join_srjqrt.target_id = notes_note_view_laputh.id
group by
    service.nitrogen_pt.id,
    service.nitrogen_pt.nilreason,
    service.nitrogen.type_value,
    service.nitrogen.type_nilreason;
create index on service.nitrogen_view (id);
-- ObstaclePlacementPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.obstacleplacement_view cascade;
create materialized view shared.obstacleplacement_view as
select
    shared.obstacleplacement_pt.id,
    shared.obstacleplacement_pt.nilreason AS obstacleplacement_nilreason,
    coalesce(cast(shared.obstacleplacement.obstaclebearing_value as varchar), '(' || shared.obstacleplacement.obstaclebearing_nilreason || ')') as obstaclebearing,
    coalesce(cast(shared.obstacleplacement.pointtype_value as varchar), '(' || shared.obstacleplacement.pointtype_nilreason || ')') as pointtype,
    coalesce(cast(shared.obstacleplacement.obstacleplacement_value as varchar), '(' || shared.obstacleplacement.obstacleplacement_nilreason || ')') as obstacleplacement,
    coalesce(cast(shared.obstacleplacement.obstacledistance_value as varchar) || ' ' || shared.obstacleplacement.obstacledistance_uom, '(' || shared.obstacleplacement.obstacledistance_nilreason || ')') as obstacledistance,
    jsonb_agg(notes_note_view_vhpdie.*) AS annotation
from shared.obstacleplacement_pt 
inner join shared.obstacleplacement on shared.obstacleplacement_pt.obstacleplacement_id = shared.obstacleplacement.id
left join master_join master_join_tiyczz on shared.obstacleplacement.id = master_join_tiyczz.source_id
left join notes.note_view notes_note_view_vhpdie on master_join_tiyczz.target_id = notes_note_view_vhpdie.id
group by
    shared.obstacleplacement_pt.id,
    shared.obstacleplacement_pt.nilreason,
    shared.obstacleplacement.obstaclebearing_value,
    shared.obstacleplacement.obstaclebearing_nilreason,
    shared.obstacleplacement.pointtype_value,
    shared.obstacleplacement.pointtype_nilreason,
    shared.obstacleplacement.obstacleplacement_value,
    shared.obstacleplacement.obstacleplacement_nilreason,
    shared.obstacleplacement.obstacledistance_value,
    shared.obstacleplacement.obstacledistance_uom,
    shared.obstacleplacement.obstacledistance_nilreason;
create index on shared.obstacleplacement_view (id);
-- ObstructionPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.obstruction_view cascade;
create materialized view shared.obstruction_view as
select
    shared.obstruction_pt.id,
    shared.obstruction_pt.nilreason AS obstruction_nilreason,
    coalesce(cast(shared.obstruction.surfacepenetration_value as varchar), '(' || shared.obstruction.surfacepenetration_nilreason || ')') as surfacepenetration,
    coalesce(cast(shared.obstruction.slopepenetration_value as varchar), '(' || shared.obstruction.slopepenetration_nilreason || ')') as slopepenetration,
    coalesce(cast(shared.obstruction.controlling_value as varchar), '(' || shared.obstruction.controlling_nilreason || ')') as controlling,
    coalesce(cast(shared.obstruction.closein_value as varchar), '(' || shared.obstruction.closein_nilreason || ')') as closein,
    coalesce(cast(shared.obstruction.requiredclearance_value as varchar) || ' ' || shared.obstruction.requiredclearance_uom, '(' || shared.obstruction.requiredclearance_nilreason || ')') as requiredclearance,
    coalesce(cast(shared.obstruction.minimumaltitude_value as varchar) || ' ' || shared.obstruction.minimumaltitude_uom, '(' || shared.obstruction.minimumaltitude_nilreason || ')') as minimumaltitude,
    coalesce(cast(obstacles_verticalstructure_pt_itzcpx.title as varchar), '(' || obstacles_verticalstructure_pt_itzcpx.nilreason[1] || ')') AS theverticalstructure,
    obstacles_verticalstructure_pt_itzcpx.href AS theverticalstructure_href,
    jsonb_agg(shared_altitudeadjustment_pt_qfxiav.id) AS adjustment,
    jsonb_agg(shared_obstacleplacement_pt_afbbcf.id) AS obstacleplacement,
    jsonb_agg(notes_note_view_ufpywr.*) AS annotation
from shared.obstruction_pt 
inner join shared.obstruction on shared.obstruction_pt.obstruction_id = shared.obstruction.id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_itzcpx on shared.obstruction.theverticalstructure_id = obstacles_verticalstructure_pt_itzcpx.id
left join master_join master_join_pbafus on shared.obstruction.id = master_join_pbafus.source_id
left join shared.altitudeadjustment_pt shared_altitudeadjustment_pt_qfxiav on master_join_pbafus.target_id = shared_altitudeadjustment_pt_qfxiav.id
left join master_join master_join_jwhvjh on shared.obstruction.id = master_join_jwhvjh.source_id
left join shared.obstacleplacement_pt shared_obstacleplacement_pt_afbbcf on master_join_jwhvjh.target_id = shared_obstacleplacement_pt_afbbcf.id
left join master_join master_join_yguhpn on shared.obstruction.id = master_join_yguhpn.source_id
left join notes.note_view notes_note_view_ufpywr on master_join_yguhpn.target_id = notes_note_view_ufpywr.id
group by
    shared.obstruction_pt.id,
    shared.obstruction_pt.nilreason,
    shared.obstruction.surfacepenetration_value,
    shared.obstruction.surfacepenetration_nilreason,
    shared.obstruction.slopepenetration_value,
    shared.obstruction.slopepenetration_nilreason,
    shared.obstruction.controlling_value,
    shared.obstruction.controlling_nilreason,
    shared.obstruction.closein_value,
    shared.obstruction.closein_nilreason,
    shared.obstruction.requiredclearance_value,
    shared.obstruction.requiredclearance_uom,
    shared.obstruction.requiredclearance_nilreason,
    shared.obstruction.minimumaltitude_value,
    shared.obstruction.minimumaltitude_uom,
    shared.obstruction.minimumaltitude_nilreason,
    obstacles_verticalstructure_pt_itzcpx.title,
    obstacles_verticalstructure_pt_itzcpx.nilreason[1],
    obstacles_verticalstructure_pt_itzcpx.href;
create index on shared.obstruction_view (id);
-- OilPropertyType
-- ['notes.note_view']
drop materialized view if exists service.oil_view cascade;
create materialized view service.oil_view as
select
    service.oil_pt.id,
    service.oil_pt.nilreason AS oil_nilreason,
    coalesce(cast(service.oil.category_value as varchar), '(' || service.oil.category_nilreason || ')') as category,
    jsonb_agg(notes_note_view_ninbtn.*) AS annotation
from service.oil_pt 
inner join service.oil on service.oil_pt.oil_id = service.oil.id
left join master_join master_join_wsnozs on service.oil.id = master_join_wsnozs.source_id
left join notes.note_view notes_note_view_ninbtn on master_join_wsnozs.target_id = notes_note_view_ninbtn.id
group by
    service.oil_pt.id,
    service.oil_pt.nilreason,
    service.oil.category_value,
    service.oil.category_nilreason;
create index on service.oil_view (id);
-- OrganisationAuthorityAssociationPropertyType
-- ['notes.note_view']
drop materialized view if exists organisation.organisationauthorityassociation_view cascade;
create materialized view organisation.organisationauthorityassociation_view as
select
    organisation.organisationauthorityassociation_pt.id,
    organisation.organisationauthorityassociation_pt.nilreason AS organisationauthorityassociation_nilreason,
    coalesce(cast(organisation.organisationauthorityassociation.type_value as varchar), '(' || organisation.organisationauthorityassociation.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_hcowrj.title as varchar), '(' || organisation_organisationauthority_pt_hcowrj.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_hcowrj.href AS theorganisationauthority_href,
    jsonb_agg(notes_note_view_fppvgo.*) AS annotation
from organisation.organisationauthorityassociation_pt 
inner join organisation.organisationauthorityassociation on organisation.organisationauthorityassociation_pt.organisationauthorityassociation_id = organisation.organisationauthorityassociation.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_hcowrj on organisation.organisationauthorityassociation.theorganisationauthority_id = organisation_organisationauthority_pt_hcowrj.id
left join master_join master_join_swroko on organisation.organisationauthorityassociation.id = master_join_swroko.source_id
left join notes.note_view notes_note_view_fppvgo on master_join_swroko.target_id = notes_note_view_fppvgo.id
group by
    organisation.organisationauthorityassociation_pt.id,
    organisation.organisationauthorityassociation_pt.nilreason,
    organisation.organisationauthorityassociation.type_value,
    organisation.organisationauthorityassociation.type_nilreason,
    organisation_organisationauthority_pt_hcowrj.title,
    organisation_organisationauthority_pt_hcowrj.nilreason[1],
    organisation_organisationauthority_pt_hcowrj.href;
create index on organisation.organisationauthorityassociation_view (id);
-- OxygenPropertyType
-- ['notes.note_view']
drop materialized view if exists service.oxygen_view cascade;
create materialized view service.oxygen_view as
select
    service.oxygen_pt.id,
    service.oxygen_pt.nilreason AS oxygen_nilreason,
    coalesce(cast(service.oxygen.type_value as varchar), '(' || service.oxygen.type_nilreason || ')') as type,
    jsonb_agg(notes_note_view_xnfiuy.*) AS annotation
from service.oxygen_pt 
inner join service.oxygen on service.oxygen_pt.oxygen_id = service.oxygen.id
left join master_join master_join_czdbmv on service.oxygen.id = master_join_czdbmv.source_id
left join notes.note_view notes_note_view_xnfiuy on master_join_czdbmv.target_id = notes_note_view_xnfiuy.id
group by
    service.oxygen_pt.id,
    service.oxygen_pt.nilreason,
    service.oxygen.type_value,
    service.oxygen.type_nilreason;
create index on service.oxygen_view (id);
-- PointPropertyType
-- ['notes.note_view']
-- Snowflake SQL : PointPropertyType

DROP MATERIALIZED VIEW IF EXISTS geometry.point_view CASCADE;

CREATE MATERIALIZED VIEW geometry.point_view AS
SELECT
    id, 
	point as geom,
	COALESCE(horizontalaccuracy || ' ' || horizontalaccuracy_uom, '(' || horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM geometry.point_pt;

CREATE INDEX ON geometry.point_view (id);
-- ProcedureTransitionLegPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.proceduretransitionleg_view cascade;
create materialized view procedure.proceduretransitionleg_view as
select
    procedure.proceduretransitionleg_pt.id,
    procedure.proceduretransitionleg_pt.nilreason AS proceduretransitionleg_nilreason,
    coalesce(cast(procedure.proceduretransitionleg.seqnumberarinc_value as varchar), '(' || procedure.proceduretransitionleg.seqnumberarinc_nilreason || ')') as seqnumberarinc,
    jsonb_agg(notes_note_view_ntrshf.*) AS annotation
from procedure.proceduretransitionleg_pt 
inner join procedure.proceduretransitionleg on procedure.proceduretransitionleg_pt.proceduretransitionleg_id = procedure.proceduretransitionleg.id
left join master_join master_join_zfbfgo on procedure.proceduretransitionleg.id = master_join_zfbfgo.source_id
left join notes.note_view notes_note_view_ntrshf on master_join_zfbfgo.target_id = notes_note_view_ntrshf.id
group by
    procedure.proceduretransitionleg_pt.id,
    procedure.proceduretransitionleg_pt.nilreason,
    procedure.proceduretransitionleg.seqnumberarinc_value,
    procedure.proceduretransitionleg.seqnumberarinc_nilreason;
create index on procedure.proceduretransitionleg_view (id);
-- RadarComponentPropertyType
-- ['notes.note_view']
drop materialized view if exists surveillance.radarcomponent_view cascade;
create materialized view surveillance.radarcomponent_view as
select
    surveillance.radarcomponent_pt.id,
    surveillance.radarcomponent_pt.nilreason AS radarcomponent_nilreason,
    coalesce(cast(surveillance.radarcomponent.collocationgroup_value as varchar), '(' || surveillance.radarcomponent.collocationgroup_nilreason || ')') as collocationgroup,
    jsonb_agg(notes_note_view_humzan.*) AS annotation
from surveillance.radarcomponent_pt 
inner join surveillance.radarcomponent on surveillance.radarcomponent_pt.radarcomponent_id = surveillance.radarcomponent.id
left join master_join master_join_muvgpc on surveillance.radarcomponent.id = master_join_muvgpc.source_id
left join notes.note_view notes_note_view_humzan on master_join_muvgpc.target_id = notes_note_view_humzan.id
group by
    surveillance.radarcomponent_pt.id,
    surveillance.radarcomponent_pt.nilreason,
    surveillance.radarcomponent.collocationgroup_value,
    surveillance.radarcomponent.collocationgroup_nilreason;
create index on surveillance.radarcomponent_view (id);
-- RidgePropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.ridge_view cascade;
create materialized view airport_heliport.ridge_view as
select
    airport_heliport.ridge_pt.id,
    airport_heliport.ridge_pt.nilreason AS ridge_nilreason,
    coalesce(cast(airport_heliport.ridge.side_value as varchar), '(' || airport_heliport.ridge.side_nilreason || ')') as side,
    coalesce(cast(airport_heliport.ridge.distance_value as varchar) || ' ' || airport_heliport.ridge.distance_uom, '(' || airport_heliport.ridge.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.ridge.depth_value as varchar) || ' ' || airport_heliport.ridge.depth_uom, '(' || airport_heliport.ridge.depth_nilreason || ')') as depth,
    jsonb_agg(notes_note_view_iaaufc.*) AS annotation
from airport_heliport.ridge_pt 
inner join airport_heliport.ridge on airport_heliport.ridge_pt.ridge_id = airport_heliport.ridge.id
left join master_join master_join_amnvef on airport_heliport.ridge.id = master_join_amnvef.source_id
left join notes.note_view notes_note_view_iaaufc on master_join_amnvef.target_id = notes_note_view_iaaufc.id
group by
    airport_heliport.ridge_pt.id,
    airport_heliport.ridge_pt.nilreason,
    airport_heliport.ridge.side_value,
    airport_heliport.ridge.side_nilreason,
    airport_heliport.ridge.distance_value,
    airport_heliport.ridge.distance_uom,
    airport_heliport.ridge.distance_nilreason,
    airport_heliport.ridge.depth_value,
    airport_heliport.ridge.depth_uom,
    airport_heliport.ridge.depth_nilreason;
create index on airport_heliport.ridge_view (id);
-- RunwayContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.runwaycontamination_view cascade;
create materialized view airport_heliport.runwaycontamination_view as
select
    airport_heliport.runwaycontamination_pt.id,
    airport_heliport.runwaycontamination_pt.nilreason AS runwaycontamination_nilreason,
    coalesce(cast(airport_heliport.runwaycontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.runwaycontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.runwaycontamination.frictionestimation_value as varchar), '(' || airport_heliport.runwaycontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.runwaycontamination.frictiondevice_value as varchar), '(' || airport_heliport.runwaycontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.runwaycontamination.obscuredlights_value as varchar), '(' || airport_heliport.runwaycontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.runwaycontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.runwaycontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.runwaycontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.runwaycontamination.proportion_value as varchar), '(' || airport_heliport.runwaycontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.runwaycontamination.clearedside_value as varchar), '(' || airport_heliport.runwaycontamination.clearedside_nilreason || ')') as clearedside,
    coalesce(cast(airport_heliport.runwaycontamination.obscuredlightsside_value as varchar), '(' || airport_heliport.runwaycontamination.obscuredlightsside_nilreason || ')') as obscuredlightsside,
    coalesce(cast(airport_heliport.runwaycontamination.taxiwayavailable_value as varchar), '(' || airport_heliport.runwaycontamination.taxiwayavailable_nilreason || ')') as taxiwayavailable,
    coalesce(cast(airport_heliport.runwaycontamination.apronavailable_value as varchar), '(' || airport_heliport.runwaycontamination.apronavailable_nilreason || ')') as apronavailable,
    coalesce(cast(airport_heliport.runwaycontamination.depth_value as varchar) || ' ' || airport_heliport.runwaycontamination.depth_uom, '(' || airport_heliport.runwaycontamination.depth_nilreason || ')') as depth,
    coalesce(cast(airport_heliport.runwaycontamination.clearedlength_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedlength_uom, '(' || airport_heliport.runwaycontamination.clearedlength_nilreason || ')') as clearedlength,
    coalesce(cast(airport_heliport.runwaycontamination.clearedwidth_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedwidth_uom, '(' || airport_heliport.runwaycontamination.clearedwidth_nilreason || ')') as clearedwidth,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancelength_value as varchar) || ' ' || airport_heliport.runwaycontamination.furtherclearancelength_uom, '(' || airport_heliport.runwaycontamination.furtherclearancelength_nilreason || ')') as furtherclearancelength,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancewidth_value as varchar) || ' ' || airport_heliport.runwaycontamination.furtherclearancewidth_uom, '(' || airport_heliport.runwaycontamination.furtherclearancewidth_nilreason || ')') as furtherclearancewidth,
    coalesce(cast(airport_heliport.runwaycontamination.clearedlengthbegin_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedlengthbegin_uom, '(' || airport_heliport.runwaycontamination.clearedlengthbegin_nilreason || ')') as clearedlengthbegin,
    jsonb_agg(airport_heliport_ridge_pt_aphxqd.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_pvzpnc.id) AS layer,
    jsonb_agg(notes_note_view_htgzpy.*) AS annotation
from airport_heliport.runwaycontamination_pt 
inner join airport_heliport.runwaycontamination on airport_heliport.runwaycontamination_pt.runwaycontamination_id = airport_heliport.runwaycontamination.id
left join master_join master_join_xgkgte on airport_heliport.runwaycontamination.id = master_join_xgkgte.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_aphxqd on master_join_xgkgte.target_id = airport_heliport_ridge_pt_aphxqd.id
left join master_join master_join_acgxan on airport_heliport.runwaycontamination.id = master_join_acgxan.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_pvzpnc on master_join_acgxan.target_id = airport_heliport_surfacecontaminationlayer_pt_pvzpnc.id
left join master_join master_join_fhheyc on airport_heliport.runwaycontamination.id = master_join_fhheyc.source_id
left join notes.note_view notes_note_view_htgzpy on master_join_fhheyc.target_id = notes_note_view_htgzpy.id
group by
    airport_heliport.runwaycontamination_pt.id,
    airport_heliport.runwaycontamination_pt.nilreason,
    airport_heliport.runwaycontamination.frictioncoefficient_value,
    airport_heliport.runwaycontamination.frictioncoefficient_nilreason,
    airport_heliport.runwaycontamination.frictionestimation_value,
    airport_heliport.runwaycontamination.frictionestimation_nilreason,
    airport_heliport.runwaycontamination.frictiondevice_value,
    airport_heliport.runwaycontamination.frictiondevice_nilreason,
    airport_heliport.runwaycontamination.obscuredlights_value,
    airport_heliport.runwaycontamination.obscuredlights_nilreason,
    airport_heliport.runwaycontamination.furtherclearancetime_value,
    airport_heliport.runwaycontamination.furtherclearancetime_nilreason,
    airport_heliport.runwaycontamination.furthertotalclearance_value,
    airport_heliport.runwaycontamination.furthertotalclearance_nilreason,
    airport_heliport.runwaycontamination.proportion_value,
    airport_heliport.runwaycontamination.proportion_nilreason,
    airport_heliport.runwaycontamination.clearedside_value,
    airport_heliport.runwaycontamination.clearedside_nilreason,
    airport_heliport.runwaycontamination.obscuredlightsside_value,
    airport_heliport.runwaycontamination.obscuredlightsside_nilreason,
    airport_heliport.runwaycontamination.taxiwayavailable_value,
    airport_heliport.runwaycontamination.taxiwayavailable_nilreason,
    airport_heliport.runwaycontamination.apronavailable_value,
    airport_heliport.runwaycontamination.apronavailable_nilreason,
    airport_heliport.runwaycontamination.depth_value,
    airport_heliport.runwaycontamination.depth_uom,
    airport_heliport.runwaycontamination.depth_nilreason,
    airport_heliport.runwaycontamination.clearedlength_value,
    airport_heliport.runwaycontamination.clearedlength_uom,
    airport_heliport.runwaycontamination.clearedlength_nilreason,
    airport_heliport.runwaycontamination.clearedwidth_value,
    airport_heliport.runwaycontamination.clearedwidth_uom,
    airport_heliport.runwaycontamination.clearedwidth_nilreason,
    airport_heliport.runwaycontamination.furtherclearancelength_value,
    airport_heliport.runwaycontamination.furtherclearancelength_uom,
    airport_heliport.runwaycontamination.furtherclearancelength_nilreason,
    airport_heliport.runwaycontamination.furtherclearancewidth_value,
    airport_heliport.runwaycontamination.furtherclearancewidth_uom,
    airport_heliport.runwaycontamination.furtherclearancewidth_nilreason,
    airport_heliport.runwaycontamination.clearedlengthbegin_value,
    airport_heliport.runwaycontamination.clearedlengthbegin_uom,
    airport_heliport.runwaycontamination.clearedlengthbegin_nilreason;
create index on airport_heliport.runwaycontamination_view (id);
-- RunwayDeclaredDistancePropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.runwaydeclareddistance_view cascade;
create materialized view airport_heliport.runwaydeclareddistance_view as
select
    airport_heliport.runwaydeclareddistance_pt.id,
    airport_heliport.runwaydeclareddistance_pt.nilreason AS runwaydeclareddistance_nilreason,
    coalesce(cast(airport_heliport.runwaydeclareddistance.type_value as varchar), '(' || airport_heliport.runwaydeclareddistance.type_nilreason || ')') as type,
    jsonb_agg(airport_heliport_runwaydeclareddistancevalue_pt_cqtfhs.id) AS declaredvalue,
    jsonb_agg(notes_note_view_nwdsto.*) AS annotation
from airport_heliport.runwaydeclareddistance_pt 
inner join airport_heliport.runwaydeclareddistance on airport_heliport.runwaydeclareddistance_pt.runwaydeclareddistance_id = airport_heliport.runwaydeclareddistance.id
left join master_join master_join_krwwdg on airport_heliport.runwaydeclareddistance.id = master_join_krwwdg.source_id
left join airport_heliport.runwaydeclareddistancevalue_pt airport_heliport_runwaydeclareddistancevalue_pt_cqtfhs on master_join_krwwdg.target_id = airport_heliport_runwaydeclareddistancevalue_pt_cqtfhs.id
left join master_join master_join_tdrlxm on airport_heliport.runwaydeclareddistance.id = master_join_tdrlxm.source_id
left join notes.note_view notes_note_view_nwdsto on master_join_tdrlxm.target_id = notes_note_view_nwdsto.id
group by
    airport_heliport.runwaydeclareddistance_pt.id,
    airport_heliport.runwaydeclareddistance_pt.nilreason,
    airport_heliport.runwaydeclareddistance.type_value,
    airport_heliport.runwaydeclareddistance.type_nilreason;
create index on airport_heliport.runwaydeclareddistance_view (id);
-- RunwaySectionContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.runwaysectioncontamination_view cascade;
create materialized view airport_heliport.runwaysectioncontamination_view as
select
    airport_heliport.runwaysectioncontamination_pt.id,
    airport_heliport.runwaysectioncontamination_pt.nilreason AS runwaysectioncontamination_nilreason,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictionestimation_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictiondevice_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.runwaysectioncontamination.obscuredlights_value as varchar), '(' || airport_heliport.runwaysectioncontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.runwaysectioncontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.runwaysectioncontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.runwaysectioncontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.runwaysectioncontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.runwaysectioncontamination.proportion_value as varchar), '(' || airport_heliport.runwaysectioncontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.runwaysectioncontamination.section_value as varchar), '(' || airport_heliport.runwaysectioncontamination.section_nilreason || ')') as section,
    coalesce(cast(airport_heliport.runwaysectioncontamination.depth_value as varchar) || ' ' || airport_heliport.runwaysectioncontamination.depth_uom, '(' || airport_heliport.runwaysectioncontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_pt_yuwnhh.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_fiiwyj.id) AS layer,
    jsonb_agg(notes_note_view_zlktwl.*) AS annotation
from airport_heliport.runwaysectioncontamination_pt 
inner join airport_heliport.runwaysectioncontamination on airport_heliport.runwaysectioncontamination_pt.runwaysectioncontamination_id = airport_heliport.runwaysectioncontamination.id
left join master_join master_join_nvkykt on airport_heliport.runwaysectioncontamination.id = master_join_nvkykt.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_yuwnhh on master_join_nvkykt.target_id = airport_heliport_ridge_pt_yuwnhh.id
left join master_join master_join_ucrsth on airport_heliport.runwaysectioncontamination.id = master_join_ucrsth.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_fiiwyj on master_join_ucrsth.target_id = airport_heliport_surfacecontaminationlayer_pt_fiiwyj.id
left join master_join master_join_mxiolo on airport_heliport.runwaysectioncontamination.id = master_join_mxiolo.source_id
left join notes.note_view notes_note_view_zlktwl on master_join_mxiolo.target_id = notes_note_view_zlktwl.id
group by
    airport_heliport.runwaysectioncontamination_pt.id,
    airport_heliport.runwaysectioncontamination_pt.nilreason,
    airport_heliport.runwaysectioncontamination.frictioncoefficient_value,
    airport_heliport.runwaysectioncontamination.frictioncoefficient_nilreason,
    airport_heliport.runwaysectioncontamination.frictionestimation_value,
    airport_heliport.runwaysectioncontamination.frictionestimation_nilreason,
    airport_heliport.runwaysectioncontamination.frictiondevice_value,
    airport_heliport.runwaysectioncontamination.frictiondevice_nilreason,
    airport_heliport.runwaysectioncontamination.obscuredlights_value,
    airport_heliport.runwaysectioncontamination.obscuredlights_nilreason,
    airport_heliport.runwaysectioncontamination.furtherclearancetime_value,
    airport_heliport.runwaysectioncontamination.furtherclearancetime_nilreason,
    airport_heliport.runwaysectioncontamination.furthertotalclearance_value,
    airport_heliport.runwaysectioncontamination.furthertotalclearance_nilreason,
    airport_heliport.runwaysectioncontamination.proportion_value,
    airport_heliport.runwaysectioncontamination.proportion_nilreason,
    airport_heliport.runwaysectioncontamination.section_value,
    airport_heliport.runwaysectioncontamination.section_nilreason,
    airport_heliport.runwaysectioncontamination.depth_value,
    airport_heliport.runwaysectioncontamination.depth_uom,
    airport_heliport.runwaysectioncontamination.depth_nilreason;
create index on airport_heliport.runwaysectioncontamination_view (id);
-- SectorDesignPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.sectordesign_view cascade;
create materialized view procedure.sectordesign_view as
select
    procedure.sectordesign_pt.id,
    procedure.sectordesign_pt.nilreason AS sectordesign_nilreason,
    coalesce(cast(procedure.sectordesign.turndirection_value as varchar), '(' || procedure.sectordesign.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.sectordesign.designgradient_value as varchar), '(' || procedure.sectordesign.designgradient_nilreason || ')') as designgradient,
    coalesce(cast(procedure.sectordesign.turnpermitted_value as varchar), '(' || procedure.sectordesign.turnpermitted_nilreason || ')') as turnpermitted,
    coalesce(cast(procedure.sectordesign.terminationaltitude_value as varchar) || ' ' || procedure.sectordesign.terminationaltitude_uom, '(' || procedure.sectordesign.terminationaltitude_nilreason || ')') as terminationaltitude,
    jsonb_agg(notes_note_view_qbhrgh.*) AS annotation
from procedure.sectordesign_pt 
inner join procedure.sectordesign on procedure.sectordesign_pt.sectordesign_id = procedure.sectordesign.id
left join master_join master_join_alhaha on procedure.sectordesign.id = master_join_alhaha.source_id
left join notes.note_view notes_note_view_qbhrgh on master_join_alhaha.target_id = notes_note_view_qbhrgh.id
group by
    procedure.sectordesign_pt.id,
    procedure.sectordesign_pt.nilreason,
    procedure.sectordesign.turndirection_value,
    procedure.sectordesign.turndirection_nilreason,
    procedure.sectordesign.designgradient_value,
    procedure.sectordesign.designgradient_nilreason,
    procedure.sectordesign.turnpermitted_value,
    procedure.sectordesign.turnpermitted_nilreason,
    procedure.sectordesign.terminationaltitude_value,
    procedure.sectordesign.terminationaltitude_uom,
    procedure.sectordesign.terminationaltitude_nilreason;
create index on procedure.sectordesign_view (id);
-- StandardLevelPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.standardlevel_view cascade;
create materialized view shared.standardlevel_view as
select
    shared.standardlevel_pt.id,
    shared.standardlevel_pt.nilreason AS standardlevel_nilreason,
    coalesce(cast(shared.standardlevel.verticaldistance_value as varchar) || ' ' || shared.standardlevel.verticaldistance_uom, '(' || shared.standardlevel.verticaldistance_nilreason || ')') as verticaldistance,
    jsonb_agg(notes_note_view_whskvb.*) AS annotation
from shared.standardlevel_pt 
inner join shared.standardlevel on shared.standardlevel_pt.standardlevel_id = shared.standardlevel.id
left join master_join master_join_onjiid on shared.standardlevel.id = master_join_onjiid.source_id
left join notes.note_view notes_note_view_whskvb on master_join_onjiid.target_id = notes_note_view_whskvb.id
group by
    shared.standardlevel_pt.id,
    shared.standardlevel_pt.nilreason,
    shared.standardlevel.verticaldistance_value,
    shared.standardlevel.verticaldistance_uom,
    shared.standardlevel.verticaldistance_nilreason;
create index on shared.standardlevel_view (id);
-- SurfaceCharacteristicsPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.surfacecharacteristics_view cascade;
create materialized view airport_heliport.surfacecharacteristics_view as
select
    airport_heliport.surfacecharacteristics_pt.id,
    airport_heliport.surfacecharacteristics_pt.nilreason AS surfacecharacteristics_nilreason,
    coalesce(cast(airport_heliport.surfacecharacteristics.composition_value as varchar), '(' || airport_heliport.surfacecharacteristics.composition_nilreason || ')') as composition,
    coalesce(cast(airport_heliport.surfacecharacteristics.preparation_value as varchar), '(' || airport_heliport.surfacecharacteristics.preparation_nilreason || ')') as preparation,
    coalesce(cast(airport_heliport.surfacecharacteristics.surfacecondition_value as varchar), '(' || airport_heliport.surfacecharacteristics.surfacecondition_nilreason || ')') as surfacecondition,
    coalesce(cast(airport_heliport.surfacecharacteristics.classpcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.classpcn_nilreason || ')') as classpcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.pavementtypepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.pavementtypepcn_nilreason || ')') as pavementtypepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.pavementsubgradepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.pavementsubgradepcn_nilreason || ')') as pavementsubgradepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.maxtyrepressurepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.maxtyrepressurepcn_nilreason || ')') as maxtyrepressurepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.evaluationmethodpcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.evaluationmethodpcn_nilreason || ')') as evaluationmethodpcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.classlcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.classlcn_nilreason || ')') as classlcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.weightsiwl_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.weightsiwl_uom, '(' || airport_heliport.surfacecharacteristics.weightsiwl_nilreason || ')') as weightsiwl,
    coalesce(cast(airport_heliport.surfacecharacteristics.tyrepressuresiwl_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.tyrepressuresiwl_uom, '(' || airport_heliport.surfacecharacteristics.tyrepressuresiwl_nilreason || ')') as tyrepressuresiwl,
    coalesce(cast(airport_heliport.surfacecharacteristics.weightauw_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.weightauw_uom, '(' || airport_heliport.surfacecharacteristics.weightauw_nilreason || ')') as weightauw,
    jsonb_agg(notes_note_view_keyjeo.*) AS annotation
from airport_heliport.surfacecharacteristics_pt 
inner join airport_heliport.surfacecharacteristics on airport_heliport.surfacecharacteristics_pt.surfacecharacteristics_id = airport_heliport.surfacecharacteristics.id
left join master_join master_join_uepdoz on airport_heliport.surfacecharacteristics.id = master_join_uepdoz.source_id
left join notes.note_view notes_note_view_keyjeo on master_join_uepdoz.target_id = notes_note_view_keyjeo.id
group by
    airport_heliport.surfacecharacteristics_pt.id,
    airport_heliport.surfacecharacteristics_pt.nilreason,
    airport_heliport.surfacecharacteristics.composition_value,
    airport_heliport.surfacecharacteristics.composition_nilreason,
    airport_heliport.surfacecharacteristics.preparation_value,
    airport_heliport.surfacecharacteristics.preparation_nilreason,
    airport_heliport.surfacecharacteristics.surfacecondition_value,
    airport_heliport.surfacecharacteristics.surfacecondition_nilreason,
    airport_heliport.surfacecharacteristics.classpcn_value,
    airport_heliport.surfacecharacteristics.classpcn_nilreason,
    airport_heliport.surfacecharacteristics.pavementtypepcn_value,
    airport_heliport.surfacecharacteristics.pavementtypepcn_nilreason,
    airport_heliport.surfacecharacteristics.pavementsubgradepcn_value,
    airport_heliport.surfacecharacteristics.pavementsubgradepcn_nilreason,
    airport_heliport.surfacecharacteristics.maxtyrepressurepcn_value,
    airport_heliport.surfacecharacteristics.maxtyrepressurepcn_nilreason,
    airport_heliport.surfacecharacteristics.evaluationmethodpcn_value,
    airport_heliport.surfacecharacteristics.evaluationmethodpcn_nilreason,
    airport_heliport.surfacecharacteristics.classlcn_value,
    airport_heliport.surfacecharacteristics.classlcn_nilreason,
    airport_heliport.surfacecharacteristics.weightsiwl_value,
    airport_heliport.surfacecharacteristics.weightsiwl_uom,
    airport_heliport.surfacecharacteristics.weightsiwl_nilreason,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_value,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_uom,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_nilreason,
    airport_heliport.surfacecharacteristics.weightauw_value,
    airport_heliport.surfacecharacteristics.weightauw_uom,
    airport_heliport.surfacecharacteristics.weightauw_nilreason;
create index on airport_heliport.surfacecharacteristics_view (id);
-- SurfacePropertyType
-- ['notes.note_view']
-- -- Snowflake SQL : SurfacePropertyType

-- CREATE MATERIALIZED VIEW partial_surface_view AS
-- WITH  
-- segment_ref AS(
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		SUBSTRING(
-- 	        curve_ref 
-- 	        FROM '([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$'
-- 	    ) AS uuid
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 4
-- ),
-- segment_value AS(
-- 	SELECT 
-- 		airspace.geoborder.identifier AS uuid,
-- 		geom
-- 	FROM airspace.geoborder
-- 	INNER JOIN public.geoborder_timeslice
-- 		ON airspace.geoborder.id = public.geoborder_timeslice.geoborder_id
-- 	INNER JOIN airspace.geoborder_tsp
-- 		ON public.geoborder_timeslice.geoborder_tsp_id = airspace.geoborder_tsp.id
-- 	INNER JOIN airspace.geoborder_ts
-- 		ON airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
-- 	INNER JOIN public.curve_pt
-- 		ON airspace.geoborder_ts.border_id = public.curve_pt.id
-- 	INNER JOIN geometry.curve_view
-- 		ON public.curve_pt.id = geometry.curve_view.id
-- ),
-- center AS (
--     SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		start_angle,
-- 		end_angle,
-- 		(end_angle - start_angle) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 2
-- 	UNION ALL 
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		0 as start_angle,
-- 		2*PI() as end_angle,
-- 		(0 - 2*PI()) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 3
-- ),
-- interpolated_points AS (
--     SELECT 
--         center.id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
--     FROM 
--         generate_series(0, 256) AS n, 	
--         center
-- ),
-- arc_line AS (
--     SELECT 
--         id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_MakeLine(point_geom) AS geom
--     FROM interpolated_points
--     GROUP BY 
-- 		id, 
-- 		curve_xml_id,
-- 		part, 
-- 		member, 
-- 		sequence, 
-- 		interpretation
-- ),
-- segment_union AS (
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(linestring, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 0
--     UNION ALL 
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 10000)::geometry as geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 1
-- 	UNION ALL
-- 	SELECT
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM
-- 		arc_line
-- 	UNION ALL
-- 	SELECT
-- 		id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM segment_ref
-- 	INNER JOIN segment_value
-- 	ON segment_ref.uuid = segment_value.uuid		
-- ),
-- segement_ownership AS (
-- 	SELECT 
-- 		public.surface_pt.id,
--         public.surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point as first_point,
-- 		segment_union.last_point as last_point,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         public.surface_pt
--     INNER JOIN 
--         public.surface_exterior 
--         ON public.surface_pt.id = public.surface_exterior.surfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.surface_exterior.exteriorlinestring_id = segment_union.id
-- 	UNION ALL
-- 	SELECT 
-- 		public.surface_pt.id,
--         public.surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point AS first_point,
-- 		segment_union.last_point AS last_point,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         public.surface_pt
--     INNER JOIN 
--         public.surface_interior 
--         ON public.surface_pt.id = public.surface_interior.surfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.surface_interior.interiorlinestring_id = segment_union.id
-- ),
-- ordered_segments AS (
--     SELECT 
-- 		id,
--         xml_id, 
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point, 
--         last_point,
-- 		ST_IsClosed(segement_ownership.geom) AS closed,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         segement_ownership
--     ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member, 
-- 		sequence
-- ),
-- connecting_segments AS (
--     SELECT 
--         id,
-- 		xml_id,
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point,
--         last_point,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         ordered_segments
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member,
--         curr.sequence + 0.5 AS sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.sequence + 1 = next.sequence
-- 		AND curr.member = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member + 0.5 AS member,
--         curr.sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.member + 1 = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     ORDER BY 
--         xml_id, 
--         part, 
--         member,
--         sequence
-- ),
-- clustered_segments AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         part,
--         member,
--         geom,
-- 		interpretation,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason,
--         ST_ClusterDBSCAN(geom, eps := 0, minpoints := 1) OVER (PARTITION BY xml_id, part)  AS cluster_id
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation != 4
-- 	UNION ALL
--     SELECT 
--         id, 
-- 		xml_id,
-- 		curve_xml_id,
--         part,
--         member,
--         geom,
-- 		interpretation,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason,
--         Null AS cluster_id
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation = 4
-- 	ORDER BY
-- 		xml_id,
-- 		part, 
-- 		member
-- ),
-- partial_ring AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY_AGG(curve_xml_id) as curve_xml_id,
--         part,
--         MIN(member) AS member,
-- 		MIN(interpretation) AS interpretation,
--         ST_IsClosed(ST_LineMerge(ST_Collect(geom))) AS closed,
--         ST_GeometryType(ST_LineMerge(ST_Collect(geom))) AS type, 
--         ST_LineMerge(ST_Collect(geom)) AS geom,
--         NULL::geometry AS points,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation != 4
--     GROUP BY 
-- 		id,
--         xml_id, 
--         part, 
--         cluster_id,
--         horizontalaccuracy, 
--         horizontalaccuracy_uom, 
--         horizontalaccuracy_nilreason,	
--         nilreason
-- 	UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY[curve_xml_id] AS curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         ST_IsClosed(geom) AS closed,
--         ST_GeometryType(geom) AS type, 
-- 		geom AS geom,
-- 		ST_Points(geom) AS points,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation = 4
-- 	ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member
-- ),
-- output AS (
--     SELECT 
--         pr.id, 
--         pr.xml_id,
-- 		pr.curve_xml_id,
--         pr.part,
-- 		ROW_NUMBER() OVER (PARTITION BY xml_id, part ORDER BY id) - 1 AS increment,
-- 		COUNT(*) OVER (PARTITION BY xml_id, part ) AS total_count,
-- 		pr.interpretation,
-- 		pr.points,
--         COALESCE(dumped.geom, pr.geom) AS geom,
--         pr.horizontalaccuracy,
--         pr.horizontalaccuracy_uom,
--         pr.horizontalaccuracy_nilreason,
--         pr.nilreason
--     FROM 
--         partial_ring pr
--     LEFT JOIN LATERAL (
--         SELECT (ST_Dump(pr.geom)).geom
--         WHERE ST_GeometryType(pr.geom) = 'ST_MultiLineString'
--     ) dumped ON true
-- 	ORDER BY
-- 		xml_id, 
-- 		part, 
-- 		member
-- )
-- SELECT 
-- 	ST_GeometryType(geom),
-- 	output.id, 
-- 	to_jsonb(output.xml_id) AS xml_id,
-- 	to_jsonb(output.curve_xml_id) AS curve_xml_id,
-- 	output.part,
-- 	output.increment,
-- 	output.total_count,
-- 	output.interpretation,
-- 	output.geom,
-- 	output.points,
-- 	output.horizontalaccuracy,
-- 	output.horizontalaccuracy_uom,
-- 	output.horizontalaccuracy_nilreason,
-- 	output.nilreason
-- FROM
-- 	output;

-- -- R1 : Simple feature, closed
-- -- R2 : Simple feature, unclosed
-- -- G1 : Complex feature wiht a single geoborder, 
-- -- G2 : Complex feature with multiple geoborder,
-- CREATE MATERIALIZED VIEW geometry.surface_view AS
-- WITH 
-- g1_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(ring.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(ring.geom)) AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view ring
-- 	ON 
--         ring.xml_id = geoborder.xml_id
-- 		AND
-- 		ring.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE 
-- 		geoborder.total_count = 2
-- 		AND
-- 		geoborder.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.geom, 
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.geom, 
-- 		ring.geom,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_surface_view.id, 
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		partial_surface_view.increment,
-- 		partial_surface_view.interpretation,
-- 		partial_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_surface_view.horizontalaccuracy, 
-- 		partial_surface_view.horizontalaccuracy_uom, 
-- 		partial_surface_view.horizontalaccuracy_nilreason, 
-- 		partial_surface_view.nilreason
-- 	FROM 
-- 		partial_surface_view
-- 	WHERE 
-- 		partial_surface_view.total_count = 2 
-- 		AND
-- 		partial_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		geoborder.geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom, ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,	ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_surface_view.id, 
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		partial_surface_view.increment,
-- 		partial_surface_view.interpretation,
-- 		partial_surface_view.total_count,
-- 		partial_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_surface_view.horizontalaccuracy, 
-- 		partial_surface_view.horizontalaccuracy_uom, 
-- 		partial_surface_view.horizontalaccuracy_nilreason, 
-- 		partial_surface_view.nilreason
-- 	FROM 
-- 		partial_surface_view
-- 	WHERE 
-- 		partial_surface_view.total_count > 2 
-- 		AND
-- 		partial_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment_filtered AS (
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		curr.geom AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.start_segment])) AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment)  
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment])) AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment, curr.start_segment])) AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 	g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT
-- 		g2_segment.id, 
-- 		g2_segment.xml_id,
-- 		g2_segment.curve_xml_id,
-- 		g2_segment.part,
-- 		g2_segment.increment,
-- 		g2_segment.geom,
-- 		g2_segment.horizontalaccuracy, 
-- 		g2_segment.horizontalaccuracy_uom, 
-- 		g2_segment.horizontalaccuracy_nilreason, 
-- 		g2_segment.nilreason
-- 	FROM 
-- 		g2_segment
-- 	WHERE 
-- 		g2_segment.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- r1 AS (
-- 	SELECT
-- 		partial_surface_view.id,
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		partial_surface_view.geom,
-- 		partial_surface_view.horizontalaccuracy,
-- 		partial_surface_view.horizontalaccuracy_uom,
-- 		partial_surface_view.horizontalaccuracy_nilreason,
-- 		partial_surface_view.nilreason
-- 	FROM
-- 		partial_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_surface_view.geom) = true
-- 		AND 
-- 		partial_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(geom) >= 4
-- ),
-- r2 AS (
-- 	SELECT
-- 		partial_surface_view.id,
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		ST_AddPoint(partial_surface_view.geom, ST_StartPoint(partial_surface_view.geom)) AS geom,
-- 		partial_surface_view.horizontalaccuracy,
-- 		partial_surface_view.horizontalaccuracy_uom,
-- 		partial_surface_view.horizontalaccuracy_nilreason,
-- 		partial_surface_view.nilreason
-- 	FROM
-- 		partial_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_surface_view.geom) = false
-- 		AND 
-- 		partial_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(ST_AddPoint(partial_surface_view.geom, ST_StartPoint(partial_surface_view.geom))) >= 4		
-- ),
-- g1 AS (
-- 	SELECT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		NOT ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- 	UNION ALL
-- 	SELECT DISTINCT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- ),
-- g2 AS (	
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_LineMerge(ST_Collect(g2_segment_filtered.geom)) AS geom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MIN(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = true
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- 	UNION ALL
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_AddPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)), ST_StartPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)))) AS geom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MIN(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = false
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- ),
-- combined_data AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
-- 		geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         r1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         r2
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         g1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         g2
-- ),
-- outer_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         ST_MakePolygon(geom) AS geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part = 0
-- ),
-- inner_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part <> 0
-- )
-- SELECT 
--     outer_shells.id,
--     ST_MakePolygon(
--         ST_ExteriorRing(outer_shells.geom),
--         ARRAY(
--             SELECT ST_ExteriorRing(inner_shells.geom)
--             FROM inner_shells 
--             WHERE inner_shells.id = outer_shells.id
--         )
--     ) AS geom,
-- 	COALESCE(outer_shells.horizontalaccuracy || ' ' ||outer_shells. horizontalaccuracy_uom, '(' || outer_shells.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
-- FROM 
-- outer_shells;

-- CREATE INDEX ON geometry.surface_view (id);

DROP MATERIALIZED VIEW IF EXISTS geometry.surface_view CASCADE;

CREATE MATERIALIZED VIEW geometry.surface_view AS
SELECT 
0 AS id,
ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 4326) AS geom,
0 AS horizontalAccuracy;
-- SurveillanceGroundStationPropertyType
-- ['notes.note_view']
drop materialized view if exists surveillance.surveillancegroundstation_view cascade;
create materialized view surveillance.surveillancegroundstation_view as
select
    surveillance.surveillancegroundstation_pt.id,
    surveillance.surveillancegroundstation_pt.nilreason AS surveillancegroundstation_nilreason,
    coalesce(cast(surveillance.surveillancegroundstation.videomap_value as varchar), '(' || surveillance.surveillancegroundstation.videomap_nilreason || ')') as videomap,
    coalesce(cast(organisation_unit_pt_phzfci.title as varchar), '(' || organisation_unit_pt_phzfci.nilreason[1] || ')') AS theunit,
    organisation_unit_pt_phzfci.href AS theunit_href,
    jsonb_agg(notes_note_view_giovwb.*) AS annotation
from surveillance.surveillancegroundstation_pt 
inner join surveillance.surveillancegroundstation on surveillance.surveillancegroundstation_pt.surveillancegroundstation_id = surveillance.surveillancegroundstation.id
left join organisation.unit_pt organisation_unit_pt_phzfci on surveillance.surveillancegroundstation.theunit_id = organisation_unit_pt_phzfci.id
left join master_join master_join_jaxaso on surveillance.surveillancegroundstation.id = master_join_jaxaso.source_id
left join notes.note_view notes_note_view_giovwb on master_join_jaxaso.target_id = notes_note_view_giovwb.id
group by
    surveillance.surveillancegroundstation_pt.id,
    surveillance.surveillancegroundstation_pt.nilreason,
    surveillance.surveillancegroundstation.videomap_value,
    surveillance.surveillancegroundstation.videomap_nilreason,
    organisation_unit_pt_phzfci.title,
    organisation_unit_pt_phzfci.nilreason[1],
    organisation_unit_pt_phzfci.href;
create index on surveillance.surveillancegroundstation_view (id);
-- TaxiwayContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.taxiwaycontamination_view cascade;
create materialized view airport_heliport.taxiwaycontamination_view as
select
    airport_heliport.taxiwaycontamination_pt.id,
    airport_heliport.taxiwaycontamination_pt.nilreason AS taxiwaycontamination_nilreason,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictionestimation_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictiondevice_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.taxiwaycontamination.obscuredlights_value as varchar), '(' || airport_heliport.taxiwaycontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.taxiwaycontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.taxiwaycontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.taxiwaycontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.taxiwaycontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.taxiwaycontamination.proportion_value as varchar), '(' || airport_heliport.taxiwaycontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.taxiwaycontamination.depth_value as varchar) || ' ' || airport_heliport.taxiwaycontamination.depth_uom, '(' || airport_heliport.taxiwaycontamination.depth_nilreason || ')') as depth,
    coalesce(cast(airport_heliport.taxiwaycontamination.clearedwidth_value as varchar) || ' ' || airport_heliport.taxiwaycontamination.clearedwidth_uom, '(' || airport_heliport.taxiwaycontamination.clearedwidth_nilreason || ')') as clearedwidth,
    jsonb_agg(airport_heliport_ridge_pt_eacgmo.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_wshico.id) AS layer,
    jsonb_agg(notes_note_view_kyjlgh.*) AS annotation
from airport_heliport.taxiwaycontamination_pt 
inner join airport_heliport.taxiwaycontamination on airport_heliport.taxiwaycontamination_pt.taxiwaycontamination_id = airport_heliport.taxiwaycontamination.id
left join master_join master_join_flrqmk on airport_heliport.taxiwaycontamination.id = master_join_flrqmk.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_eacgmo on master_join_flrqmk.target_id = airport_heliport_ridge_pt_eacgmo.id
left join master_join master_join_ahabok on airport_heliport.taxiwaycontamination.id = master_join_ahabok.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_wshico on master_join_ahabok.target_id = airport_heliport_surfacecontaminationlayer_pt_wshico.id
left join master_join master_join_iouley on airport_heliport.taxiwaycontamination.id = master_join_iouley.source_id
left join notes.note_view notes_note_view_kyjlgh on master_join_iouley.target_id = notes_note_view_kyjlgh.id
group by
    airport_heliport.taxiwaycontamination_pt.id,
    airport_heliport.taxiwaycontamination_pt.nilreason,
    airport_heliport.taxiwaycontamination.frictioncoefficient_value,
    airport_heliport.taxiwaycontamination.frictioncoefficient_nilreason,
    airport_heliport.taxiwaycontamination.frictionestimation_value,
    airport_heliport.taxiwaycontamination.frictionestimation_nilreason,
    airport_heliport.taxiwaycontamination.frictiondevice_value,
    airport_heliport.taxiwaycontamination.frictiondevice_nilreason,
    airport_heliport.taxiwaycontamination.obscuredlights_value,
    airport_heliport.taxiwaycontamination.obscuredlights_nilreason,
    airport_heliport.taxiwaycontamination.furtherclearancetime_value,
    airport_heliport.taxiwaycontamination.furtherclearancetime_nilreason,
    airport_heliport.taxiwaycontamination.furthertotalclearance_value,
    airport_heliport.taxiwaycontamination.furthertotalclearance_nilreason,
    airport_heliport.taxiwaycontamination.proportion_value,
    airport_heliport.taxiwaycontamination.proportion_nilreason,
    airport_heliport.taxiwaycontamination.depth_value,
    airport_heliport.taxiwaycontamination.depth_uom,
    airport_heliport.taxiwaycontamination.depth_nilreason,
    airport_heliport.taxiwaycontamination.clearedwidth_value,
    airport_heliport.taxiwaycontamination.clearedwidth_uom,
    airport_heliport.taxiwaycontamination.clearedwidth_nilreason;
create index on airport_heliport.taxiwaycontamination_view (id);
-- TimesheetPropertyType
-- ['notes.note_view']
-- Snowflake SQL : TimesheetPropertyType 

DROP MATERIALIZED VIEW IF EXISTS shared.timesheet_view CASCADE;

CREATE MATERIALIZED VIEW shared.timesheet_view AS
SELECT
shared.timesheet_pt.id,
jsonb_build_object(
	'timereference', COALESCE(shared.timesheet.timereference_value, '(' || shared.timesheet.timereference_nilreason || ')'),
	'startdate', COALESCE(shared.timesheet.startdate_value, '(' || shared.timesheet.startdate_nilreason || ')'),
	'enddate', COALESCE(shared.timesheet.enddate_value, '(' || shared.timesheet.enddate_nilreason || ')'),
	'day', COALESCE(shared.timesheet.day_value, '(' || shared.timesheet.day_nilreason || ')'),
	'daytil', COALESCE(shared.timesheet.daytil_value, '(' || shared.timesheet.daytil_nilreason || ')'),
	'starttime', COALESCE(shared.timesheet.starttime_value, '(' || shared.timesheet.starttime_nilreason || ')'),
	'startevent', COALESCE(shared.timesheet.startevent_value, '(' || shared.timesheet.startevent_nilreason || ')'),
	'starteventinterpretation', COALESCE(shared.timesheet.starteventinterpretation_value, '(' || shared.timesheet.starteventinterpretation_nilreason || ')'),
	'starttimerelativeevent', COALESCE(shared.timesheet.starttimerelativeevent_value || ' ' || shared.timesheet.starttimerelativeevent_uom, '(' || shared.timesheet.starttimerelativeevent_nilreason || ')'),
	'endtime', COALESCE(shared.timesheet.endtime_value, '(' || shared.timesheet.endtime_nilreason || ')'),
	'endevent', COALESCE(shared.timesheet.endevent_value, '(' || shared.timesheet.endevent_nilreason || ')'),
	'endeventinterpretation', COALESCE(shared.timesheet.endeventinterpretation_value, '(' || shared.timesheet.endeventinterpretation_nilreason || ')'),
	'endtimerelativeevent', COALESCE(shared.timesheet.endtimerelativeevent_value || ' ' || shared.timesheet.endtimerelativeevent_uom, '(' || shared.timesheet.endtimerelativeevent_nilreason || ')'),
	'daylightsavingadjust',COALESCE(shared.timesheet.daylightsavingadjust_value, '(' || shared.timesheet.daylightsavingadjust_nilreason || ')'),
	'excluded', COALESCE(shared.timesheet.excluded_value, '(' || shared.timesheet.excluded_nilreason || ')'),
	'annotations', COALESCE(jsonb_agg(notes.note_view.note), '[]'::jsonb)
)
FROM shared.timesheet_pt
INNER JOIN shared.timesheet ON shared.timesheet_pt.timesheet_id = shared.timesheet.id
LEFT JOIN master_join ON shared.timesheet.id = master_join.source_id
LEFT JOIN notes.note_view ON master_join.target_id = notes.note_view.id
GROUP BY
    shared.timesheet_pt.id,
    shared.timesheet.timereference_value,
    shared.timesheet.timereference_nilreason,
    shared.timesheet.startdate_value,
    shared.timesheet.startdate_nilreason,
    shared.timesheet.enddate_value,
    shared.timesheet.enddate_nilreason,
    shared.timesheet.day_value,
    shared.timesheet.day_nilreason,
    shared.timesheet.daytil_value,
    shared.timesheet.daytil_nilreason,
    shared.timesheet.starttime_value,
    shared.timesheet.starttime_nilreason,
    shared.timesheet.startevent_value,
    shared.timesheet.startevent_nilreason,
    shared.timesheet.starteventinterpretation_value,
    shared.timesheet.starteventinterpretation_nilreason,
    shared.timesheet.endtime_value,
    shared.timesheet.endtime_nilreason,
    shared.timesheet.endevent_value,
    shared.timesheet.endevent_nilreason,
    shared.timesheet.endeventinterpretation_value,
    shared.timesheet.endeventinterpretation_nilreason,
    shared.timesheet.daylightsavingadjust_value,
    shared.timesheet.daylightsavingadjust_nilreason,
    shared.timesheet.excluded_value,
    shared.timesheet.excluded_nilreason,
    shared.timesheet.starttimerelativeevent_value,
    shared.timesheet.starttimerelativeevent_uom,
    shared.timesheet.starttimerelativeevent_nilreason,
    shared.timesheet.endtimerelativeevent_value,
    shared.timesheet.endtimerelativeevent_uom,
    shared.timesheet.endtimerelativeevent_nilreason;

CREATE INDEX ON shared.timesheet_view (id);
-- TouchDownLiftOffContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.touchdownliftoffcontamination_view cascade;
create materialized view airport_heliport.touchdownliftoffcontamination_view as
select
    airport_heliport.touchdownliftoffcontamination_pt.id,
    airport_heliport.touchdownliftoffcontamination_pt.nilreason AS touchdownliftoffcontamination_nilreason,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictionestimation_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictiondevice_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.obscuredlights_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.proportion_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.depth_value as varchar) || ' ' || airport_heliport.touchdownliftoffcontamination.depth_uom, '(' || airport_heliport.touchdownliftoffcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_pt_lrpkku.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_pt_gsuclu.id) AS layer,
    jsonb_agg(notes_note_view_ilijcj.*) AS annotation
from airport_heliport.touchdownliftoffcontamination_pt 
inner join airport_heliport.touchdownliftoffcontamination on airport_heliport.touchdownliftoffcontamination_pt.touchdownliftoffcontamination_id = airport_heliport.touchdownliftoffcontamination.id
left join master_join master_join_ofqyaw on airport_heliport.touchdownliftoffcontamination.id = master_join_ofqyaw.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_lrpkku on master_join_ofqyaw.target_id = airport_heliport_ridge_pt_lrpkku.id
left join master_join master_join_rrvmhn on airport_heliport.touchdownliftoffcontamination.id = master_join_rrvmhn.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_gsuclu on master_join_rrvmhn.target_id = airport_heliport_surfacecontaminationlayer_pt_gsuclu.id
left join master_join master_join_ykwwmv on airport_heliport.touchdownliftoffcontamination.id = master_join_ykwwmv.source_id
left join notes.note_view notes_note_view_ilijcj on master_join_ykwwmv.target_id = notes_note_view_ilijcj.id
group by
    airport_heliport.touchdownliftoffcontamination_pt.id,
    airport_heliport.touchdownliftoffcontamination_pt.nilreason,
    airport_heliport.touchdownliftoffcontamination.frictioncoefficient_value,
    airport_heliport.touchdownliftoffcontamination.frictioncoefficient_nilreason,
    airport_heliport.touchdownliftoffcontamination.frictionestimation_value,
    airport_heliport.touchdownliftoffcontamination.frictionestimation_nilreason,
    airport_heliport.touchdownliftoffcontamination.frictiondevice_value,
    airport_heliport.touchdownliftoffcontamination.frictiondevice_nilreason,
    airport_heliport.touchdownliftoffcontamination.obscuredlights_value,
    airport_heliport.touchdownliftoffcontamination.obscuredlights_nilreason,
    airport_heliport.touchdownliftoffcontamination.furtherclearancetime_value,
    airport_heliport.touchdownliftoffcontamination.furtherclearancetime_nilreason,
    airport_heliport.touchdownliftoffcontamination.furthertotalclearance_value,
    airport_heliport.touchdownliftoffcontamination.furthertotalclearance_nilreason,
    airport_heliport.touchdownliftoffcontamination.proportion_value,
    airport_heliport.touchdownliftoffcontamination.proportion_nilreason,
    airport_heliport.touchdownliftoffcontamination.depth_value,
    airport_heliport.touchdownliftoffcontamination.depth_uom,
    airport_heliport.touchdownliftoffcontamination.depth_nilreason;
create index on airport_heliport.touchdownliftoffcontamination_view (id);
-- UnitDependencyPropertyType
-- ['notes.note_view']
drop materialized view if exists organisation.unitdependency_view cascade;
create materialized view organisation.unitdependency_view as
select
    organisation.unitdependency_pt.id,
    organisation.unitdependency_pt.nilreason AS unitdependency_nilreason,
    coalesce(cast(organisation.unitdependency.type_value as varchar), '(' || organisation.unitdependency.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_twiamd.title as varchar), '(' || organisation_unit_pt_twiamd.nilreason[1] || ')') AS theunit,
    organisation_unit_pt_twiamd.href AS theunit_href,
    jsonb_agg(notes_note_view_hetulg.*) AS annotation
from organisation.unitdependency_pt 
inner join organisation.unitdependency on organisation.unitdependency_pt.unitdependency_id = organisation.unitdependency.id
left join organisation.unit_pt organisation_unit_pt_twiamd on organisation.unitdependency.theunit_id = organisation_unit_pt_twiamd.id
left join master_join master_join_qdgdlx on organisation.unitdependency.id = master_join_qdgdlx.source_id
left join notes.note_view notes_note_view_hetulg on master_join_qdgdlx.target_id = notes_note_view_hetulg.id
group by
    organisation.unitdependency_pt.id,
    organisation.unitdependency_pt.nilreason,
    organisation.unitdependency.type_value,
    organisation.unitdependency.type_nilreason,
    organisation_unit_pt_twiamd.title,
    organisation_unit_pt_twiamd.nilreason[1],
    organisation_unit_pt_twiamd.href;
create index on organisation.unitdependency_view (id);
-- AerialRefuellingTrackPropertyType
-- ['geometry.curve_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuellingtrack_view cascade;
create materialized view aerial_refuelling.aerialrefuellingtrack_view as
select
    aerial_refuelling.aerialrefuellingtrack_pt.id,
    aerial_refuelling.aerialrefuellingtrack_pt.nilreason AS aerialrefuellingtrack_nilreason,
    geometry_curve_view_dgpzbp.geom AS extent_geom,
    geometry_curve_view_dgpzbp.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(aerial_refuelling_aerialrefuellingpoint_pt_rggdnt.id) AS point,
    jsonb_agg(shared_airspacelayer_pt_gkdoks.id) AS verticalextent,
    jsonb_agg(notes_note_view_arbkmu.*) AS annotation
from aerial_refuelling.aerialrefuellingtrack_pt 
inner join aerial_refuelling.aerialrefuellingtrack on aerial_refuelling.aerialrefuellingtrack_pt.aerialrefuellingtrack_id = aerial_refuelling.aerialrefuellingtrack.id
left join geometry.curve_view geometry_curve_view_dgpzbp on aerial_refuelling.aerialrefuellingtrack.extent_id = geometry_curve_view_dgpzbp.id
left join master_join master_join_kzymkv on aerial_refuelling.aerialrefuellingtrack.id = master_join_kzymkv.source_id
left join aerial_refuelling.aerialrefuellingpoint_pt aerial_refuelling_aerialrefuellingpoint_pt_rggdnt on master_join_kzymkv.target_id = aerial_refuelling_aerialrefuellingpoint_pt_rggdnt.id
left join master_join master_join_ejyyzt on aerial_refuelling.aerialrefuellingtrack.id = master_join_ejyyzt.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_gkdoks on master_join_ejyyzt.target_id = shared_airspacelayer_pt_gkdoks.id
left join master_join master_join_cwcmws on aerial_refuelling.aerialrefuellingtrack.id = master_join_cwcmws.source_id
left join notes.note_view notes_note_view_arbkmu on master_join_cwcmws.target_id = notes_note_view_arbkmu.id
group by
    aerial_refuelling.aerialrefuellingtrack_pt.id,
    aerial_refuelling.aerialrefuellingtrack_pt.nilreason,
    geometry_curve_view_dgpzbp.geom,
    geometry_curve_view_dgpzbp.horizontalAccuracy;
create index on aerial_refuelling.aerialrefuellingtrack_view (id);
-- ProcedureTransitionPropertyType
-- ['geometry.curve_view', 'notes.note_view']
drop materialized view if exists procedure.proceduretransition_view cascade;
create materialized view procedure.proceduretransition_view as
select
    procedure.proceduretransition_pt.id,
    procedure.proceduretransition_pt.nilreason AS proceduretransition_nilreason,
    coalesce(cast(procedure.proceduretransition.transitionid_value as varchar), '(' || procedure.proceduretransition.transitionid_nilreason || ')') as transitionid,
    coalesce(cast(procedure.proceduretransition.type_value as varchar), '(' || procedure.proceduretransition.type_nilreason || ')') as type,
    coalesce(cast(procedure.proceduretransition.instruction_value as varchar), '(' || procedure.proceduretransition.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.proceduretransition.vectorheading_value as varchar), '(' || procedure.proceduretransition.vectorheading_nilreason || ')') as vectorheading,
    procedure_landingtakeoffareacollection_pt_ckixnd.id AS departurerunwaytransition,
    geometry_curve_view_elzaih.geom AS trajectory_geom,
    geometry_curve_view_elzaih.horizontalAccuracy as trajectory_horizontalaccuracy,
    jsonb_agg(procedure_proceduretransitionleg_pt_jsdzan.id) AS transitionleg,
    jsonb_agg(notes_note_view_tajczv.*) AS annotation
from procedure.proceduretransition_pt 
inner join procedure.proceduretransition on procedure.proceduretransition_pt.proceduretransition_id = procedure.proceduretransition.id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_ckixnd on procedure.proceduretransition.departurerunwaytransition_id = procedure_landingtakeoffareacollection_pt_ckixnd.id
left join geometry.curve_view geometry_curve_view_elzaih on procedure.proceduretransition.trajectory_id = geometry_curve_view_elzaih.id
left join master_join master_join_bgmdlw on procedure.proceduretransition.id = master_join_bgmdlw.source_id
left join procedure.proceduretransitionleg_pt procedure_proceduretransitionleg_pt_jsdzan on master_join_bgmdlw.target_id = procedure_proceduretransitionleg_pt_jsdzan.id
left join master_join master_join_jqgnnc on procedure.proceduretransition.id = master_join_jqgnnc.source_id
left join notes.note_view notes_note_view_tajczv on master_join_jqgnnc.target_id = notes_note_view_tajczv.id
group by
    procedure.proceduretransition_pt.id,
    procedure.proceduretransition_pt.nilreason,
    procedure.proceduretransition.transitionid_value,
    procedure.proceduretransition.transitionid_nilreason,
    procedure.proceduretransition.type_value,
    procedure.proceduretransition.type_nilreason,
    procedure.proceduretransition.instruction_value,
    procedure.proceduretransition.instruction_nilreason,
    procedure.proceduretransition.vectorheading_value,
    procedure.proceduretransition.vectorheading_nilreason,
    procedure_landingtakeoffareacollection_pt_ckixnd.id,
    geometry_curve_view_elzaih.geom,
    geometry_curve_view_elzaih.horizontalAccuracy;
create index on procedure.proceduretransition_view (id);
-- LightElementPropertyType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists shared.lightelement_view cascade;
create materialized view shared.lightelement_view as
select
    shared.lightelement_pt.id,
    shared.lightelement_pt.nilreason AS lightelement_nilreason,
    coalesce(cast(shared.lightelement.colour_value as varchar), '(' || shared.lightelement.colour_nilreason || ')') as colour,
    coalesce(cast(shared.lightelement.intensitylevel_value as varchar), '(' || shared.lightelement.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(shared.lightelement.type_value as varchar), '(' || shared.lightelement.type_nilreason || ')') as type,
    coalesce(cast(shared.lightelement.intensity_value as varchar) || ' ' || shared.lightelement.intensity_uom, '(' || shared.lightelement.intensity_nilreason || ')') as intensity,
    geometry_elevatedpoint_view_tqcvlp.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_tqcvlp.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_tqcvlp.geom) AS location_latitude,
    geometry_elevatedpoint_view_tqcvlp.elevation AS location_elevation,
    geometry_elevatedpoint_view_tqcvlp.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_tqcvlp.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_tqcvlp.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_tqcvlp.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_zfgtwd.*) AS annotation,
    jsonb_agg(shared_lightelementstatus_pt_yasfox.id) AS availability
from shared.lightelement_pt 
inner join shared.lightelement on shared.lightelement_pt.lightelement_id = shared.lightelement.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_tqcvlp on shared.lightelement.location_id = geometry_elevatedpoint_view_tqcvlp.id
left join master_join master_join_twfxmn on shared.lightelement.id = master_join_twfxmn.source_id
left join notes.note_view notes_note_view_zfgtwd on master_join_twfxmn.target_id = notes_note_view_zfgtwd.id
left join master_join master_join_wyotof on shared.lightelement.id = master_join_wyotof.source_id
left join shared.lightelementstatus_pt shared_lightelementstatus_pt_yasfox on master_join_wyotof.target_id = shared_lightelementstatus_pt_yasfox.id
group by
    shared.lightelement_pt.id,
    shared.lightelement_pt.nilreason,
    shared.lightelement.colour_value,
    shared.lightelement.colour_nilreason,
    shared.lightelement.intensitylevel_value,
    shared.lightelement.intensitylevel_nilreason,
    shared.lightelement.type_value,
    shared.lightelement.type_nilreason,
    shared.lightelement.intensity_value,
    shared.lightelement.intensity_uom,
    shared.lightelement.intensity_nilreason,
    geometry_elevatedpoint_view_tqcvlp.geom,
    geometry_elevatedpoint_view_tqcvlp.elevation,
    geometry_elevatedpoint_view_tqcvlp.geoidUndulation,
    geometry_elevatedpoint_view_tqcvlp.verticalDatum,
    geometry_elevatedpoint_view_tqcvlp.verticalAccuracy,
    geometry_elevatedpoint_view_tqcvlp.horizontalAccuracy;
create index on shared.lightelement_view (id);
-- ReflectorPropertyType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists surveillance.reflector_view cascade;
create materialized view surveillance.reflector_view as
select
    surveillance.reflector_pt.id,
    surveillance.reflector_pt.nilreason AS reflector_nilreason,
    coalesce(cast(surveillance.reflector.type_value as varchar), '(' || surveillance.reflector.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_yxvknv.geom AS touchdownreflector_geom,
    ST_X(geometry_elevatedpoint_view_yxvknv.geom) AS touchdownreflector_longitude,
    ST_Y(geometry_elevatedpoint_view_yxvknv.geom) AS touchdownreflector_latitude,
    geometry_elevatedpoint_view_yxvknv.elevation AS touchdownreflector_elevation,
    geometry_elevatedpoint_view_yxvknv.geoidUndulation AS touchdownreflector_geoidundulation,
    geometry_elevatedpoint_view_yxvknv.verticalDatum AS touchdownreflector_verticaldatum,
    geometry_elevatedpoint_view_yxvknv.verticalAccuracy AS touchdownreflector_verticalaccuracy,
    geometry_elevatedpoint_view_yxvknv.horizontalAccuracy AS touchdownreflector_horizontalaccuracy,
    jsonb_agg(notes_note_view_djcqbr.*) AS annotation
from surveillance.reflector_pt 
inner join surveillance.reflector on surveillance.reflector_pt.reflector_id = surveillance.reflector.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_yxvknv on surveillance.reflector.touchdownreflector_id = geometry_elevatedpoint_view_yxvknv.id
left join master_join master_join_xxvilo on surveillance.reflector.id = master_join_xxvilo.source_id
left join notes.note_view notes_note_view_djcqbr on master_join_xxvilo.target_id = notes_note_view_djcqbr.id
group by
    surveillance.reflector_pt.id,
    surveillance.reflector_pt.nilreason,
    surveillance.reflector.type_value,
    surveillance.reflector.type_nilreason,
    geometry_elevatedpoint_view_yxvknv.geom,
    geometry_elevatedpoint_view_yxvknv.elevation,
    geometry_elevatedpoint_view_yxvknv.geoidUndulation,
    geometry_elevatedpoint_view_yxvknv.verticalDatum,
    geometry_elevatedpoint_view_yxvknv.verticalAccuracy,
    geometry_elevatedpoint_view_yxvknv.horizontalAccuracy;
create index on surveillance.reflector_view (id);
-- MarkingElementPropertyType
-- ['geometry.elevatedsurface_view', 'geometry.elevatedpoint_view', 'geometry.elevatedcurve_view', 'notes.note_view']
drop materialized view if exists airport_heliport.markingelement_view cascade;
create materialized view airport_heliport.markingelement_view as
select
    airport_heliport.markingelement_pt.id,
    airport_heliport.markingelement_pt.nilreason AS markingelement_nilreason,
    coalesce(cast(airport_heliport.markingelement.colour_value as varchar), '(' || airport_heliport.markingelement.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.markingelement.style_value as varchar), '(' || airport_heliport.markingelement.style_nilreason || ')') as style,
    geometry_elevatedsurface_view_iebjha.geom AS extentsurfaceextent_geom,
    geometry_elevatedsurface_view_iebjha.elevation AS extentsurfaceextent_elevation,
    geometry_elevatedsurface_view_iebjha.geoidUndulation AS extentsurfaceextent_geoidundulation,
    geometry_elevatedsurface_view_iebjha.verticalDatum AS extentsurfaceextent_verticaldatum,
    geometry_elevatedsurface_view_iebjha.verticalAccuracy AS extentsurfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_iebjha.horizontalAccuracy AS extentsurfaceextent_horizontalaccuracy,
    geometry_elevatedcurve_view_odjafa.geom AS extentcurveextent_geom,
    geometry_elevatedcurve_view_odjafa.elevation AS extentcurveextent_elevation,
    geometry_elevatedcurve_view_odjafa.geoidUndulation AS extentcurveextent_geoidundulation,
    geometry_elevatedcurve_view_odjafa.verticalDatum AS extentcurveextent_verticaldatum,
    geometry_elevatedcurve_view_odjafa.verticalAccuracy AS extentcurveextent_verticalaccuracy,
    geometry_elevatedcurve_view_odjafa.horizontalAccuracy AS extentcurveextent_horizontalaccuracy,
    geometry_elevatedpoint_view_flyyxe.geom AS extentlocation_geom,
    ST_X(geometry_elevatedpoint_view_flyyxe.geom) AS extentlocation_longitude,
    ST_Y(geometry_elevatedpoint_view_flyyxe.geom) AS extentlocation_latitude,
    geometry_elevatedpoint_view_flyyxe.elevation AS extentlocation_elevation,
    geometry_elevatedpoint_view_flyyxe.geoidUndulation AS extentlocation_geoidundulation,
    geometry_elevatedpoint_view_flyyxe.verticalDatum AS extentlocation_verticaldatum,
    geometry_elevatedpoint_view_flyyxe.verticalAccuracy AS extentlocation_verticalaccuracy,
    geometry_elevatedpoint_view_flyyxe.horizontalAccuracy AS extentlocation_horizontalaccuracy,
    jsonb_agg(notes_note_view_wzaoyk.*) AS annotation
from airport_heliport.markingelement_pt 
inner join airport_heliport.markingelement on airport_heliport.markingelement_pt.markingelement_id = airport_heliport.markingelement.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_iebjha on airport_heliport.markingelement.extent_surfaceextent_id = geometry_elevatedsurface_view_iebjha.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_odjafa on airport_heliport.markingelement.extent_curveextent_id = geometry_elevatedcurve_view_odjafa.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_flyyxe on airport_heliport.markingelement.extent_location_id = geometry_elevatedpoint_view_flyyxe.id
left join master_join master_join_mzxxfs on airport_heliport.markingelement.id = master_join_mzxxfs.source_id
left join notes.note_view notes_note_view_wzaoyk on master_join_mzxxfs.target_id = notes_note_view_wzaoyk.id
group by
    airport_heliport.markingelement_pt.id,
    airport_heliport.markingelement_pt.nilreason,
    airport_heliport.markingelement.colour_value,
    airport_heliport.markingelement.colour_nilreason,
    airport_heliport.markingelement.style_value,
    airport_heliport.markingelement.style_nilreason,
    geometry_elevatedsurface_view_iebjha.geom,
    geometry_elevatedsurface_view_iebjha.elevation,
    geometry_elevatedsurface_view_iebjha.geoidUndulation,
    geometry_elevatedsurface_view_iebjha.verticalDatum,
    geometry_elevatedsurface_view_iebjha.verticalAccuracy,
    geometry_elevatedsurface_view_iebjha.horizontalAccuracy,
    geometry_elevatedcurve_view_odjafa.geom,
    geometry_elevatedcurve_view_odjafa.elevation,
    geometry_elevatedcurve_view_odjafa.geoidUndulation,
    geometry_elevatedcurve_view_odjafa.verticalDatum,
    geometry_elevatedcurve_view_odjafa.verticalAccuracy,
    geometry_elevatedcurve_view_odjafa.horizontalAccuracy,
    geometry_elevatedpoint_view_flyyxe.geom,
    geometry_elevatedpoint_view_flyyxe.elevation,
    geometry_elevatedpoint_view_flyyxe.geoidUndulation,
    geometry_elevatedpoint_view_flyyxe.verticalDatum,
    geometry_elevatedpoint_view_flyyxe.verticalAccuracy,
    geometry_elevatedpoint_view_flyyxe.horizontalAccuracy;
create index on airport_heliport.markingelement_view (id);
-- SurfaceContaminationLayerPropertyType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.surfacecontaminationlayer_view cascade;
create materialized view airport_heliport.surfacecontaminationlayer_view as
select
    airport_heliport.surfacecontaminationlayer_pt.id,
    airport_heliport.surfacecontaminationlayer_pt.nilreason AS surfacecontaminationlayer_nilreason,
    coalesce(cast(airport_heliport.surfacecontaminationlayer.layerorder_value as varchar), '(' || airport_heliport.surfacecontaminationlayer.layerorder_nilreason || ')') as layerorder,
    coalesce(cast(airport_heliport.surfacecontaminationlayer.type_value as varchar), '(' || airport_heliport.surfacecontaminationlayer.type_nilreason || ')') as type,
    ST_Collect(geometry_elevatedsurface_view_mpvyqs.geom) AS extent_geom,
    jsonb_agg(notes_note_view_wjgiqb.*) AS annotation
from airport_heliport.surfacecontaminationlayer_pt 
inner join airport_heliport.surfacecontaminationlayer on airport_heliport.surfacecontaminationlayer_pt.surfacecontaminationlayer_id = airport_heliport.surfacecontaminationlayer.id
left join master_join master_join_cudqfa on airport_heliport.surfacecontaminationlayer.id = master_join_cudqfa.source_id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_mpvyqs on master_join_cudqfa.target_id = geometry_elevatedsurface_view_mpvyqs.id
left join master_join master_join_rmcomn on airport_heliport.surfacecontaminationlayer.id = master_join_rmcomn.source_id
left join notes.note_view notes_note_view_wjgiqb on master_join_rmcomn.target_id = notes_note_view_wjgiqb.id
group by
    airport_heliport.surfacecontaminationlayer_pt.id,
    airport_heliport.surfacecontaminationlayer_pt.nilreason,
    airport_heliport.surfacecontaminationlayer.layerorder_value,
    airport_heliport.surfacecontaminationlayer.layerorder_nilreason,
    airport_heliport.surfacecontaminationlayer.type_value,
    airport_heliport.surfacecontaminationlayer.type_nilreason;
create index on airport_heliport.surfacecontaminationlayer_view (id);
-- AerialRefuellingPointPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuellingpoint_view cascade;
create materialized view aerial_refuelling.aerialrefuellingpoint_view as
select
    aerial_refuelling.aerialrefuellingpoint_pt.id,
    aerial_refuelling.aerialrefuellingpoint_pt.nilreason AS aerialrefuellingpoint_nilreason,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.reportingatc_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.flyover_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.waypoint_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.radarguidance_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.sequence_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.sequence_nilreason || ')') as sequence,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.usagetype_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.usagetype_nilreason || ')') as usagetype,
    coalesce(cast(navaids_points_designatedpoint_pt_grtypf.title as varchar), '(' || navaids_points_designatedpoint_pt_grtypf.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_grtypf.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ppnppc.title as varchar), '(' || navaids_points_navaid_pt_ppnppc.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_ppnppc.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_qqcfzx.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_qqcfzx.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_qqcfzx.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_ulbmyz.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_ulbmyz.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_ulbmyz.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_jrxtif.title as varchar), '(' || airport_heliport_airportheliport_pt_jrxtif.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_jrxtif.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_rzarpy.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_rzarpy.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_rzarpy.geom) AS pointchoiceposition_latitude,
    geometry_point_view_rzarpy.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    coalesce(cast(shared_radiofrequencyarea_pt_oauhwz.title as varchar), '(' || shared_radiofrequencyarea_pt_oauhwz.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_oauhwz.href AS extendedservicevolume_href,
    jsonb_agg(navaids_points_pointreference_pt_rbyius.id) AS facilitymakeup,
    jsonb_agg(notes_note_view_ntekzw.*) AS annotation
from aerial_refuelling.aerialrefuellingpoint_pt 
inner join aerial_refuelling.aerialrefuellingpoint on aerial_refuelling.aerialrefuellingpoint_pt.aerialrefuellingpoint_id = aerial_refuelling.aerialrefuellingpoint.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_grtypf on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_grtypf.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ppnppc on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_navaidsystem_id = navaids_points_navaid_pt_ppnppc.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_qqcfzx on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_qqcfzx.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_ulbmyz on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_ulbmyz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jrxtif on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_jrxtif.id
left join geometry.point_view geometry_point_view_rzarpy on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_position_id = geometry_point_view_rzarpy.id
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_oauhwz on aerial_refuelling.aerialrefuellingpoint.extendedservicevolume_id = shared_radiofrequencyarea_pt_oauhwz.id
left join master_join master_join_wkxtxc on aerial_refuelling.aerialrefuellingpoint.id = master_join_wkxtxc.source_id
left join navaids_points.pointreference_pt navaids_points_pointreference_pt_rbyius on master_join_wkxtxc.target_id = navaids_points_pointreference_pt_rbyius.id
left join master_join master_join_qintwc on aerial_refuelling.aerialrefuellingpoint.id = master_join_qintwc.source_id
left join notes.note_view notes_note_view_ntekzw on master_join_qintwc.target_id = notes_note_view_ntekzw.id
group by
    aerial_refuelling.aerialrefuellingpoint_pt.id,
    aerial_refuelling.aerialrefuellingpoint_pt.nilreason,
    aerial_refuelling.aerialrefuellingpoint.reportingatc_value,
    aerial_refuelling.aerialrefuellingpoint.reportingatc_nilreason,
    aerial_refuelling.aerialrefuellingpoint.flyover_value,
    aerial_refuelling.aerialrefuellingpoint.flyover_nilreason,
    aerial_refuelling.aerialrefuellingpoint.waypoint_value,
    aerial_refuelling.aerialrefuellingpoint.waypoint_nilreason,
    aerial_refuelling.aerialrefuellingpoint.radarguidance_value,
    aerial_refuelling.aerialrefuellingpoint.radarguidance_nilreason,
    aerial_refuelling.aerialrefuellingpoint.sequence_value,
    aerial_refuelling.aerialrefuellingpoint.sequence_nilreason,
    aerial_refuelling.aerialrefuellingpoint.usagetype_value,
    aerial_refuelling.aerialrefuellingpoint.usagetype_nilreason,
    navaids_points_designatedpoint_pt_grtypf.title,
    navaids_points_designatedpoint_pt_grtypf.nilreason[1],
    navaids_points_designatedpoint_pt_grtypf.href,
    navaids_points_navaid_pt_ppnppc.title,
    navaids_points_navaid_pt_ppnppc.nilreason[1],
    navaids_points_navaid_pt_ppnppc.href,
    airport_heliport_touchdownliftoff_pt_qqcfzx.title,
    airport_heliport_touchdownliftoff_pt_qqcfzx.nilreason[1],
    airport_heliport_touchdownliftoff_pt_qqcfzx.href,
    airport_heliport_runwaycentrelinepoint_pt_ulbmyz.title,
    airport_heliport_runwaycentrelinepoint_pt_ulbmyz.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_ulbmyz.href,
    airport_heliport_airportheliport_pt_jrxtif.title,
    airport_heliport_airportheliport_pt_jrxtif.nilreason[1],
    airport_heliport_airportheliport_pt_jrxtif.href,
    geometry_point_view_rzarpy.geom,
    geometry_point_view_rzarpy.horizontalAccuracy,
    shared_radiofrequencyarea_pt_oauhwz.title,
    shared_radiofrequencyarea_pt_oauhwz.nilreason[1],
    shared_radiofrequencyarea_pt_oauhwz.href;
create index on aerial_refuelling.aerialrefuellingpoint_view (id);
-- DirectFlightSegmentPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.directflightsegment_view cascade;
create materialized view routes.directflightsegment_view as
select
    routes.directflightsegment_pt.id,
    routes.directflightsegment_pt.nilreason AS directflightsegment_nilreason,
    coalesce(cast(navaids_points_designatedpoint_pt_ikppdx.title as varchar), '(' || navaids_points_designatedpoint_pt_ikppdx.nilreason[1] || ')') AS endfixdesignatedpoint,
    navaids_points_designatedpoint_pt_ikppdx.href AS endfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_otyxiq.title as varchar), '(' || navaids_points_designatedpoint_pt_otyxiq.nilreason[1] || ')') AS startfixdesignatedpoint,
    navaids_points_designatedpoint_pt_otyxiq.href AS startfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ugfeuz.title as varchar), '(' || navaids_points_navaid_pt_ugfeuz.nilreason[1] || ')') AS endnavaidsystem,
    navaids_points_navaid_pt_ugfeuz.href AS endnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_hpolot.title as varchar), '(' || navaids_points_navaid_pt_hpolot.nilreason[1] || ')') AS startnavaidsystem,
    navaids_points_navaid_pt_hpolot.href AS startnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_znkysa.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_znkysa.nilreason[1] || ')') AS endaimingpoint,
    airport_heliport_touchdownliftoff_pt_znkysa.href AS endaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_hfsaqy.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_hfsaqy.nilreason[1] || ')') AS startaimingpoint,
    airport_heliport_touchdownliftoff_pt_hfsaqy.href AS startaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_cstzaa.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_cstzaa.nilreason[1] || ')') AS endrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_cstzaa.href AS endrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_oofvcc.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_oofvcc.nilreason[1] || ')') AS startrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_oofvcc.href AS startrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ffbehy.title as varchar), '(' || airport_heliport_airportheliport_pt_ffbehy.nilreason[1] || ')') AS endairportreferencepoint,
    airport_heliport_airportheliport_pt_ffbehy.href AS endairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ykjjgq.title as varchar), '(' || airport_heliport_airportheliport_pt_ykjjgq.nilreason[1] || ')') AS startairportreferencepoint,
    airport_heliport_airportheliport_pt_ykjjgq.href AS startairportreferencepoint_href,
    geometry_point_view_wktmtk.geom AS endposition_geom,
    ST_X(geometry_point_view_wktmtk.geom) AS endposition_longitude,
    ST_Y(geometry_point_view_wktmtk.geom) AS endposition_latitude,
    geometry_point_view_wktmtk.horizontalAccuracy AS endposition_horizontalaccuracy,
    geometry_point_view_wnxekc.geom AS startposition_geom,
    ST_X(geometry_point_view_wnxekc.geom) AS startposition_longitude,
    ST_Y(geometry_point_view_wnxekc.geom) AS startposition_latitude,
    geometry_point_view_wnxekc.horizontalAccuracy AS startposition_horizontalaccuracy,
    jsonb_agg(notes_note_view_wudcuo.*) AS annotation
from routes.directflightsegment_pt 
inner join routes.directflightsegment on routes.directflightsegment_pt.directflightsegment_id = routes.directflightsegment.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ikppdx on routes.directflightsegment.end_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ikppdx.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ugfeuz on routes.directflightsegment.end_navaidsystem_id = navaids_points_navaid_pt_ugfeuz.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_znkysa on routes.directflightsegment.end_aimingpoint_id = airport_heliport_touchdownliftoff_pt_znkysa.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_cstzaa on routes.directflightsegment.end_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_cstzaa.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ffbehy on routes.directflightsegment.end_airportreferencepoint_id = airport_heliport_airportheliport_pt_ffbehy.id
left join geometry.point_view geometry_point_view_wktmtk on routes.directflightsegment.end_position_id = geometry_point_view_wktmtk.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_otyxiq on routes.directflightsegment.start_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_otyxiq.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_hpolot on routes.directflightsegment.start_navaidsystem_id = navaids_points_navaid_pt_hpolot.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_hfsaqy on routes.directflightsegment.start_aimingpoint_id = airport_heliport_touchdownliftoff_pt_hfsaqy.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_oofvcc on routes.directflightsegment.start_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_oofvcc.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ykjjgq on routes.directflightsegment.start_airportreferencepoint_id = airport_heliport_airportheliport_pt_ykjjgq.id
left join geometry.point_view geometry_point_view_wnxekc on routes.directflightsegment.start_position_id = geometry_point_view_wnxekc.id
left join master_join master_join_mcystv on routes.directflightsegment.id = master_join_mcystv.source_id
left join notes.note_view notes_note_view_wudcuo on master_join_mcystv.target_id = notes_note_view_wudcuo.id
group by
    routes.directflightsegment_pt.id,
    routes.directflightsegment_pt.nilreason,
    navaids_points_designatedpoint_pt_ikppdx.title,
    navaids_points_designatedpoint_pt_ikppdx.nilreason[1],
    navaids_points_designatedpoint_pt_ikppdx.href,
    navaids_points_navaid_pt_ugfeuz.title,
    navaids_points_navaid_pt_ugfeuz.nilreason[1],
    navaids_points_navaid_pt_ugfeuz.href,
    airport_heliport_touchdownliftoff_pt_znkysa.title,
    airport_heliport_touchdownliftoff_pt_znkysa.nilreason[1],
    airport_heliport_touchdownliftoff_pt_znkysa.href,
    airport_heliport_runwaycentrelinepoint_pt_cstzaa.title,
    airport_heliport_runwaycentrelinepoint_pt_cstzaa.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_cstzaa.href,
    airport_heliport_airportheliport_pt_ffbehy.title,
    airport_heliport_airportheliport_pt_ffbehy.nilreason[1],
    airport_heliport_airportheliport_pt_ffbehy.href,
    geometry_point_view_wktmtk.geom,
    geometry_point_view_wktmtk.horizontalAccuracy,
    navaids_points_designatedpoint_pt_otyxiq.title,
    navaids_points_designatedpoint_pt_otyxiq.nilreason[1],
    navaids_points_designatedpoint_pt_otyxiq.href,
    navaids_points_navaid_pt_hpolot.title,
    navaids_points_navaid_pt_hpolot.nilreason[1],
    navaids_points_navaid_pt_hpolot.href,
    airport_heliport_touchdownliftoff_pt_hfsaqy.title,
    airport_heliport_touchdownliftoff_pt_hfsaqy.nilreason[1],
    airport_heliport_touchdownliftoff_pt_hfsaqy.href,
    airport_heliport_runwaycentrelinepoint_pt_oofvcc.title,
    airport_heliport_runwaycentrelinepoint_pt_oofvcc.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_oofvcc.href,
    airport_heliport_airportheliport_pt_ykjjgq.title,
    airport_heliport_airportheliport_pt_ykjjgq.nilreason[1],
    airport_heliport_airportheliport_pt_ykjjgq.href,
    geometry_point_view_wnxekc.geom,
    geometry_point_view_wnxekc.horizontalAccuracy;
create index on routes.directflightsegment_view (id);
-- EnRouteSegmentPointPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.enroutesegmentpoint_view cascade;
create materialized view navaids_points.enroutesegmentpoint_view as
select
    navaids_points.enroutesegmentpoint_pt.id,
    navaids_points.enroutesegmentpoint_pt.nilreason AS enroutesegmentpoint_nilreason,
    coalesce(cast(navaids_points.enroutesegmentpoint.reportingatc_value as varchar), '(' || navaids_points.enroutesegmentpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(navaids_points.enroutesegmentpoint.flyover_value as varchar), '(' || navaids_points.enroutesegmentpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(navaids_points.enroutesegmentpoint.waypoint_value as varchar), '(' || navaids_points.enroutesegmentpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(navaids_points.enroutesegmentpoint.radarguidance_value as varchar), '(' || navaids_points.enroutesegmentpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolefreeflight_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolefreeflight_nilreason || ')') as rolefreeflight,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolervsm_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolervsm_nilreason || ')') as rolervsm,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolemilitarytraining_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolemilitarytraining_nilreason || ')') as rolemilitarytraining,
    coalesce(cast(navaids_points.enroutesegmentpoint.turnradius_value as varchar) || ' ' || navaids_points.enroutesegmentpoint.turnradius_uom, '(' || navaids_points.enroutesegmentpoint.turnradius_nilreason || ')') as turnradius,
    coalesce(cast(navaids_points_designatedpoint_pt_txygfb.title as varchar), '(' || navaids_points_designatedpoint_pt_txygfb.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_txygfb.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ceumav.title as varchar), '(' || navaids_points_navaid_pt_ceumav.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_ceumav.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_gtpydb.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_gtpydb.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_gtpydb.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_hkrgry.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_hkrgry.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_hkrgry.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_rwclln.title as varchar), '(' || airport_heliport_airportheliport_pt_rwclln.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_rwclln.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_gdetdh.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_gdetdh.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_gdetdh.geom) AS pointchoiceposition_latitude,
    geometry_point_view_gdetdh.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    coalesce(cast(shared_radiofrequencyarea_pt_eowjzp.title as varchar), '(' || shared_radiofrequencyarea_pt_eowjzp.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_eowjzp.href AS extendedservicevolume_href,
    jsonb_agg(navaids_points_pointreference_pt_eibefi.id) AS facilitymakeup,
    jsonb_agg(notes_note_view_znsqkg.*) AS annotation
from navaids_points.enroutesegmentpoint_pt 
inner join navaids_points.enroutesegmentpoint on navaids_points.enroutesegmentpoint_pt.enroutesegmentpoint_id = navaids_points.enroutesegmentpoint.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_txygfb on navaids_points.enroutesegmentpoint.enroutesegmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_txygfb.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ceumav on navaids_points.enroutesegmentpoint.enroutesegmentpoint_navaidsystem_id = navaids_points_navaid_pt_ceumav.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_gtpydb on navaids_points.enroutesegmentpoint.enroutesegmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_gtpydb.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_hkrgry on navaids_points.enroutesegmentpoint.enroutesegmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_hkrgry.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_rwclln on navaids_points.enroutesegmentpoint.enroutesegmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_rwclln.id
left join geometry.point_view geometry_point_view_gdetdh on navaids_points.enroutesegmentpoint.enroutesegmentpoint_position_id = geometry_point_view_gdetdh.id
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_eowjzp on navaids_points.enroutesegmentpoint.extendedservicevolume_id = shared_radiofrequencyarea_pt_eowjzp.id
left join master_join master_join_jybtih on navaids_points.enroutesegmentpoint.id = master_join_jybtih.source_id
left join navaids_points.pointreference_pt navaids_points_pointreference_pt_eibefi on master_join_jybtih.target_id = navaids_points_pointreference_pt_eibefi.id
left join master_join master_join_xyuwye on navaids_points.enroutesegmentpoint.id = master_join_xyuwye.source_id
left join notes.note_view notes_note_view_znsqkg on master_join_xyuwye.target_id = notes_note_view_znsqkg.id
group by
    navaids_points.enroutesegmentpoint_pt.id,
    navaids_points.enroutesegmentpoint_pt.nilreason,
    navaids_points.enroutesegmentpoint.reportingatc_value,
    navaids_points.enroutesegmentpoint.reportingatc_nilreason,
    navaids_points.enroutesegmentpoint.flyover_value,
    navaids_points.enroutesegmentpoint.flyover_nilreason,
    navaids_points.enroutesegmentpoint.waypoint_value,
    navaids_points.enroutesegmentpoint.waypoint_nilreason,
    navaids_points.enroutesegmentpoint.radarguidance_value,
    navaids_points.enroutesegmentpoint.radarguidance_nilreason,
    navaids_points.enroutesegmentpoint.rolefreeflight_value,
    navaids_points.enroutesegmentpoint.rolefreeflight_nilreason,
    navaids_points.enroutesegmentpoint.rolervsm_value,
    navaids_points.enroutesegmentpoint.rolervsm_nilreason,
    navaids_points.enroutesegmentpoint.rolemilitarytraining_value,
    navaids_points.enroutesegmentpoint.rolemilitarytraining_nilreason,
    navaids_points.enroutesegmentpoint.turnradius_value,
    navaids_points.enroutesegmentpoint.turnradius_uom,
    navaids_points.enroutesegmentpoint.turnradius_nilreason,
    navaids_points_designatedpoint_pt_txygfb.title,
    navaids_points_designatedpoint_pt_txygfb.nilreason[1],
    navaids_points_designatedpoint_pt_txygfb.href,
    navaids_points_navaid_pt_ceumav.title,
    navaids_points_navaid_pt_ceumav.nilreason[1],
    navaids_points_navaid_pt_ceumav.href,
    airport_heliport_touchdownliftoff_pt_gtpydb.title,
    airport_heliport_touchdownliftoff_pt_gtpydb.nilreason[1],
    airport_heliport_touchdownliftoff_pt_gtpydb.href,
    airport_heliport_runwaycentrelinepoint_pt_hkrgry.title,
    airport_heliport_runwaycentrelinepoint_pt_hkrgry.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_hkrgry.href,
    airport_heliport_airportheliport_pt_rwclln.title,
    airport_heliport_airportheliport_pt_rwclln.nilreason[1],
    airport_heliport_airportheliport_pt_rwclln.href,
    geometry_point_view_gdetdh.geom,
    geometry_point_view_gdetdh.horizontalAccuracy,
    shared_radiofrequencyarea_pt_eowjzp.title,
    shared_radiofrequencyarea_pt_eowjzp.nilreason[1],
    shared_radiofrequencyarea_pt_eowjzp.href;
create index on navaids_points.enroutesegmentpoint_view (id);
-- FlightConditionElementPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.flightconditionelement_view cascade;
create materialized view routes.flightconditionelement_view as
select
    routes.flightconditionelement_pt.id,
    routes.flightconditionelement_pt.nilreason AS flightconditionelement_nilreason,
    coalesce(cast(routes.flightconditionelement.index_value as varchar), '(' || routes.flightconditionelement.index_nilreason || ')') as index,
    coalesce(cast(airport_heliport_airportheliport_pt_rdlwwu.title as varchar), '(' || airport_heliport_airportheliport_pt_rdlwwu.nilreason[1] || ')') AS flightconditionairportheliportcondition,
    airport_heliport_airportheliport_pt_rdlwwu.href AS flightconditionairportheliportcondition_href,
    coalesce(cast(airport_heliport_airportheliport_pt_nfjyor.title as varchar), '(' || airport_heliport_airportheliport_pt_nfjyor.nilreason[1] || ')') AS significantpointconditionairportreferencepoint,
    airport_heliport_airportheliport_pt_nfjyor.href AS significantpointconditionairportreferencepoint_href,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_yeoarx.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_yeoarx.nilreason[1] || ')') AS flightconditionstandardinstrumentdeparturecondition,
    procedure_standardinstrumentdeparture_pt_yeoarx.href AS flightconditionstandardinstrumentdeparturecondition_href,
    routes_routeportion_pt_jecppc.id AS flightconditionrouteportioncondition,
    coalesce(cast(organisation_organisationauthority_pt_hpqcni.title as varchar), '(' || organisation_organisationauthority_pt_hpqcni.nilreason[1] || ')') AS flightconditionorganisationcondition,
    organisation_organisationauthority_pt_hpqcni.href AS flightconditionorganisationcondition_href,
    coalesce(cast(navaids_points_designatedpoint_pt_foyprj.title as varchar), '(' || navaids_points_designatedpoint_pt_foyprj.nilreason[1] || ')') AS significantpointconditionfixdesignatedpoint,
    navaids_points_designatedpoint_pt_foyprj.href AS significantpointconditionfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_veqhjo.title as varchar), '(' || navaids_points_navaid_pt_veqhjo.nilreason[1] || ')') AS significantpointconditionnavaidsystem,
    navaids_points_navaid_pt_veqhjo.href AS significantpointconditionnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_sqfusp.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_sqfusp.nilreason[1] || ')') AS significantpointconditionaimingpoint,
    airport_heliport_touchdownliftoff_pt_sqfusp.href AS significantpointconditionaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_etdmui.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_etdmui.nilreason[1] || ')') AS significantpointconditionrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_etdmui.href AS significantpointconditionrunwaypoint_href,
    geometry_point_view_kqavou.geom AS significantpointconditionposition_geom,
    ST_X(geometry_point_view_kqavou.geom) AS significantpointconditionposition_longitude,
    ST_Y(geometry_point_view_kqavou.geom) AS significantpointconditionposition_latitude,
    geometry_point_view_kqavou.horizontalAccuracy AS significantpointconditionposition_horizontalaccuracy,
    shared_aircraftcharacteristic_pt_mzlhao.id AS flightconditionaircraft,
    coalesce(cast(routes_airspacebordercrossing_pt_fsbtvo.title as varchar), '(' || routes_airspacebordercrossing_pt_fsbtvo.nilreason[1] || ')') AS flightconditionbordercrossingcondition,
    routes_airspacebordercrossing_pt_fsbtvo.href AS flightconditionbordercrossingcondition_href,
    coalesce(cast(airspace_airspace_pt_ucngbz.title as varchar), '(' || airspace_airspace_pt_ucngbz.nilreason[1] || ')') AS flightconditionairspacecondition,
    airspace_airspace_pt_ucngbz.href AS flightconditionairspacecondition_href,
    shared_flightcharacteristic_pt_vvrdpx.id AS flightconditionflight,
    coalesce(cast(procedure_standardinstrumentarrival_pt_sndajz.title as varchar), '(' || procedure_standardinstrumentarrival_pt_sndajz.nilreason[1] || ')') AS flightconditionstandardinstrumentarrivalcondition,
    procedure_standardinstrumentarrival_pt_sndajz.href AS flightconditionstandardinstrumentarrivalcondition_href,
    routes_flightconditioncombination_pt_hxqjtp.id AS flightconditionoperand,
    shared_meteorology_pt_pgjlsy.id AS flightconditionweather,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_czjvkd.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_czjvkd.nilreason[1] || ')') AS flightconditionaerialrefuellingcondition,
    aerial_refuelling_aerialrefuelling_pt_czjvkd.href AS flightconditionaerialrefuellingcondition_href,
    routes_flightconditioncircumstance_pt_anmcjz.id AS operationalcondition,
    jsonb_agg(routes_flightrestrictionlevel_pt_vectuv.id) AS flightlevel,
    jsonb_agg(notes_note_view_tjerpb.*) AS annotation
from routes.flightconditionelement_pt 
inner join routes.flightconditionelement on routes.flightconditionelement_pt.flightconditionelement_id = routes.flightconditionelement.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_rdlwwu on routes.flightconditionelement.flightcondition_airportheliportcondition_id = airport_heliport_airportheliport_pt_rdlwwu.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_yeoarx on routes.flightconditionelement.flightcondition_standardinstrumentdeparturecondition_id = procedure_standardinstrumentdeparture_pt_yeoarx.id
left join routes.routeportion_pt routes_routeportion_pt_jecppc on routes.flightconditionelement.flightcondition_routeportioncondition_id = routes_routeportion_pt_jecppc.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_hpqcni on routes.flightconditionelement.flightcondition_organisationcondition_id = organisation_organisationauthority_pt_hpqcni.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_foyprj on routes.flightconditionelement.significantpointcondition_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_foyprj.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_veqhjo on routes.flightconditionelement.significantpointcondition_navaidsystem_id = navaids_points_navaid_pt_veqhjo.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_sqfusp on routes.flightconditionelement.significantpointcondition_aimingpoint_id = airport_heliport_touchdownliftoff_pt_sqfusp.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_etdmui on routes.flightconditionelement.significantpointcondition_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_etdmui.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_nfjyor on routes.flightconditionelement.significantpointcondition_airportreferencepoint_id = airport_heliport_airportheliport_pt_nfjyor.id
left join geometry.point_view geometry_point_view_kqavou on routes.flightconditionelement.significantpointcondition_position_id = geometry_point_view_kqavou.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_mzlhao on routes.flightconditionelement.flightcondition_aircraft_id = shared_aircraftcharacteristic_pt_mzlhao.id
left join routes.airspacebordercrossing_pt routes_airspacebordercrossing_pt_fsbtvo on routes.flightconditionelement.flightcondition_bordercrossingcondition_id = routes_airspacebordercrossing_pt_fsbtvo.id
left join airspace.airspace_pt airspace_airspace_pt_ucngbz on routes.flightconditionelement.flightcondition_airspacecondition_id = airspace_airspace_pt_ucngbz.id
left join shared.flightcharacteristic_pt shared_flightcharacteristic_pt_vvrdpx on routes.flightconditionelement.flightcondition_flight_id = shared_flightcharacteristic_pt_vvrdpx.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_sndajz on routes.flightconditionelement.flightcondition_standardinstrumentarrivalcondition_id = procedure_standardinstrumentarrival_pt_sndajz.id
left join routes.flightconditioncombination_pt routes_flightconditioncombination_pt_hxqjtp on routes.flightconditionelement.flightcondition_operand_id = routes_flightconditioncombination_pt_hxqjtp.id
left join shared.meteorology_pt shared_meteorology_pt_pgjlsy on routes.flightconditionelement.flightcondition_weather_id = shared_meteorology_pt_pgjlsy.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_czjvkd on routes.flightconditionelement.flightcondition_aerialrefuellingcondition_id = aerial_refuelling_aerialrefuelling_pt_czjvkd.id
left join routes.flightconditioncircumstance_pt routes_flightconditioncircumstance_pt_anmcjz on routes.flightconditionelement.operationalcondition_id = routes_flightconditioncircumstance_pt_anmcjz.id
left join master_join master_join_kpswfx on routes.flightconditionelement.id = master_join_kpswfx.source_id
left join routes.flightrestrictionlevel_pt routes_flightrestrictionlevel_pt_vectuv on master_join_kpswfx.target_id = routes_flightrestrictionlevel_pt_vectuv.id
left join master_join master_join_ehqmdx on routes.flightconditionelement.id = master_join_ehqmdx.source_id
left join notes.note_view notes_note_view_tjerpb on master_join_ehqmdx.target_id = notes_note_view_tjerpb.id
group by
    routes.flightconditionelement_pt.id,
    routes.flightconditionelement_pt.nilreason,
    routes.flightconditionelement.index_value,
    routes.flightconditionelement.index_nilreason,
    airport_heliport_airportheliport_pt_rdlwwu.title,
    airport_heliport_airportheliport_pt_rdlwwu.nilreason[1],
    airport_heliport_airportheliport_pt_rdlwwu.href,
    procedure_standardinstrumentdeparture_pt_yeoarx.title,
    procedure_standardinstrumentdeparture_pt_yeoarx.nilreason[1],
    procedure_standardinstrumentdeparture_pt_yeoarx.href,
    routes_routeportion_pt_jecppc.id,
    organisation_organisationauthority_pt_hpqcni.title,
    organisation_organisationauthority_pt_hpqcni.nilreason[1],
    organisation_organisationauthority_pt_hpqcni.href,
    navaids_points_designatedpoint_pt_foyprj.title,
    navaids_points_designatedpoint_pt_foyprj.nilreason[1],
    navaids_points_designatedpoint_pt_foyprj.href,
    navaids_points_navaid_pt_veqhjo.title,
    navaids_points_navaid_pt_veqhjo.nilreason[1],
    navaids_points_navaid_pt_veqhjo.href,
    airport_heliport_touchdownliftoff_pt_sqfusp.title,
    airport_heliport_touchdownliftoff_pt_sqfusp.nilreason[1],
    airport_heliport_touchdownliftoff_pt_sqfusp.href,
    airport_heliport_runwaycentrelinepoint_pt_etdmui.title,
    airport_heliport_runwaycentrelinepoint_pt_etdmui.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_etdmui.href,
    airport_heliport_airportheliport_pt_nfjyor.title,
    airport_heliport_airportheliport_pt_nfjyor.nilreason[1],
    airport_heliport_airportheliport_pt_nfjyor.href,
    geometry_point_view_kqavou.geom,
    geometry_point_view_kqavou.horizontalAccuracy,
    shared_aircraftcharacteristic_pt_mzlhao.id,
    routes_airspacebordercrossing_pt_fsbtvo.title,
    routes_airspacebordercrossing_pt_fsbtvo.nilreason[1],
    routes_airspacebordercrossing_pt_fsbtvo.href,
    airspace_airspace_pt_ucngbz.title,
    airspace_airspace_pt_ucngbz.nilreason[1],
    airspace_airspace_pt_ucngbz.href,
    shared_flightcharacteristic_pt_vvrdpx.id,
    procedure_standardinstrumentarrival_pt_sndajz.title,
    procedure_standardinstrumentarrival_pt_sndajz.nilreason[1],
    procedure_standardinstrumentarrival_pt_sndajz.href,
    routes_flightconditioncombination_pt_hxqjtp.id,
    shared_meteorology_pt_pgjlsy.id,
    aerial_refuelling_aerialrefuelling_pt_czjvkd.title,
    aerial_refuelling_aerialrefuelling_pt_czjvkd.nilreason[1],
    aerial_refuelling_aerialrefuelling_pt_czjvkd.href,
    routes_flightconditioncircumstance_pt_anmcjz.id;
create index on routes.flightconditionelement_view (id);
-- FlightRoutingElementPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.flightroutingelement_view cascade;
create materialized view routes.flightroutingelement_view as
select
    routes.flightroutingelement_pt.id,
    routes.flightroutingelement_pt.nilreason AS flightroutingelement_nilreason,
    coalesce(cast(routes.flightroutingelement.ordernumber_value as varchar), '(' || routes.flightroutingelement.ordernumber_nilreason || ')') as ordernumber,
    coalesce(cast(routes.flightroutingelement.speedreference_value as varchar), '(' || routes.flightroutingelement.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(routes.flightroutingelement.speedcriteria_value as varchar), '(' || routes.flightroutingelement.speedcriteria_nilreason || ')') as speedcriteria,
    coalesce(cast(routes.flightroutingelement.speed_value as varchar) || ' ' || routes.flightroutingelement.speed_uom, '(' || routes.flightroutingelement.speed_nilreason || ')') as speed,
    coalesce(cast(procedure_standardinstrumentarrival_pt_nuiftq.title as varchar), '(' || procedure_standardinstrumentarrival_pt_nuiftq.nilreason[1] || ')') AS elementstandardinstrumentarrivalelement,
    procedure_standardinstrumentarrival_pt_nuiftq.href AS elementstandardinstrumentarrivalelement_href,
    coalesce(cast(airspace_airspace_pt_wypgng.title as varchar), '(' || airspace_airspace_pt_wypgng.nilreason[1] || ')') AS elementairspaceelement,
    airspace_airspace_pt_wypgng.href AS elementairspaceelement_href,
    coalesce(cast(navaids_points_designatedpoint_pt_mdistk.title as varchar), '(' || navaids_points_designatedpoint_pt_mdistk.nilreason[1] || ')') AS pointelementfixdesignatedpoint,
    navaids_points_designatedpoint_pt_mdistk.href AS pointelementfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_kukxxk.title as varchar), '(' || navaids_points_navaid_pt_kukxxk.nilreason[1] || ')') AS pointelementnavaidsystem,
    navaids_points_navaid_pt_kukxxk.href AS pointelementnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_mavoty.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_mavoty.nilreason[1] || ')') AS pointelementaimingpoint,
    airport_heliport_touchdownliftoff_pt_mavoty.href AS pointelementaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_smctuv.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_smctuv.nilreason[1] || ')') AS pointelementrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_smctuv.href AS pointelementrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_aqxmub.title as varchar), '(' || airport_heliport_airportheliport_pt_aqxmub.nilreason[1] || ')') AS pointelementairportreferencepoint,
    airport_heliport_airportheliport_pt_aqxmub.href AS pointelementairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_trzleq.title as varchar), '(' || airport_heliport_airportheliport_pt_trzleq.nilreason[1] || ')') AS elementairportheliportelement,
    airport_heliport_airportheliport_pt_trzleq.href AS elementairportheliportelement_href,
    geometry_point_view_rnpicd.geom AS pointelementposition_geom,
    ST_X(geometry_point_view_rnpicd.geom) AS pointelementposition_longitude,
    ST_Y(geometry_point_view_rnpicd.geom) AS pointelementposition_latitude,
    geometry_point_view_rnpicd.horizontalAccuracy AS pointelementposition_horizontalaccuracy,
    routes_directflightsegment_pt_oajsrq.id AS elementdirectflightelement,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_djoeek.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_djoeek.nilreason[1] || ')') AS elementstandardinstrumentdepartureelement,
    procedure_standardinstrumentdeparture_pt_djoeek.href AS elementstandardinstrumentdepartureelement_href,
    routes_routeportion_pt_lwohun.id AS elementrouteportionelement,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_fxmhar.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_fxmhar.nilreason[1] || ')') AS elementaerialrefuellingelement,
    aerial_refuelling_aerialrefuelling_pt_fxmhar.href AS elementaerialrefuellingelement_href,
    jsonb_agg(routes_flightrestrictionlevel_pt_oskaqa.id) AS flightlevel,
    jsonb_agg(notes_note_view_uqppco.*) AS annotation
from routes.flightroutingelement_pt 
inner join routes.flightroutingelement on routes.flightroutingelement_pt.flightroutingelement_id = routes.flightroutingelement.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_nuiftq on routes.flightroutingelement.element_standardinstrumentarrivalelement_id = procedure_standardinstrumentarrival_pt_nuiftq.id
left join airspace.airspace_pt airspace_airspace_pt_wypgng on routes.flightroutingelement.element_airspaceelement_id = airspace_airspace_pt_wypgng.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_mdistk on routes.flightroutingelement.pointelement_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_mdistk.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_kukxxk on routes.flightroutingelement.pointelement_navaidsystem_id = navaids_points_navaid_pt_kukxxk.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_mavoty on routes.flightroutingelement.pointelement_aimingpoint_id = airport_heliport_touchdownliftoff_pt_mavoty.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_smctuv on routes.flightroutingelement.pointelement_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_smctuv.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_aqxmub on routes.flightroutingelement.pointelement_airportreferencepoint_id = airport_heliport_airportheliport_pt_aqxmub.id
left join geometry.point_view geometry_point_view_rnpicd on routes.flightroutingelement.pointelement_position_id = geometry_point_view_rnpicd.id
left join routes.directflightsegment_pt routes_directflightsegment_pt_oajsrq on routes.flightroutingelement.element_directflightelement_id = routes_directflightsegment_pt_oajsrq.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_djoeek on routes.flightroutingelement.element_standardinstrumentdepartureelement_id = procedure_standardinstrumentdeparture_pt_djoeek.id
left join routes.routeportion_pt routes_routeportion_pt_lwohun on routes.flightroutingelement.element_routeportionelement_id = routes_routeportion_pt_lwohun.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_trzleq on routes.flightroutingelement.element_airportheliportelement_id = airport_heliport_airportheliport_pt_trzleq.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_fxmhar on routes.flightroutingelement.element_aerialrefuellingelement_id = aerial_refuelling_aerialrefuelling_pt_fxmhar.id
left join master_join master_join_rtkreg on routes.flightroutingelement.id = master_join_rtkreg.source_id
left join routes.flightrestrictionlevel_pt routes_flightrestrictionlevel_pt_oskaqa on master_join_rtkreg.target_id = routes_flightrestrictionlevel_pt_oskaqa.id
left join master_join master_join_xyukix on routes.flightroutingelement.id = master_join_xyukix.source_id
left join notes.note_view notes_note_view_uqppco on master_join_xyukix.target_id = notes_note_view_uqppco.id
group by
    routes.flightroutingelement_pt.id,
    routes.flightroutingelement_pt.nilreason,
    routes.flightroutingelement.ordernumber_value,
    routes.flightroutingelement.ordernumber_nilreason,
    routes.flightroutingelement.speedreference_value,
    routes.flightroutingelement.speedreference_nilreason,
    routes.flightroutingelement.speedcriteria_value,
    routes.flightroutingelement.speedcriteria_nilreason,
    routes.flightroutingelement.speed_value,
    routes.flightroutingelement.speed_uom,
    routes.flightroutingelement.speed_nilreason,
    procedure_standardinstrumentarrival_pt_nuiftq.title,
    procedure_standardinstrumentarrival_pt_nuiftq.nilreason[1],
    procedure_standardinstrumentarrival_pt_nuiftq.href,
    airspace_airspace_pt_wypgng.title,
    airspace_airspace_pt_wypgng.nilreason[1],
    airspace_airspace_pt_wypgng.href,
    navaids_points_designatedpoint_pt_mdistk.title,
    navaids_points_designatedpoint_pt_mdistk.nilreason[1],
    navaids_points_designatedpoint_pt_mdistk.href,
    navaids_points_navaid_pt_kukxxk.title,
    navaids_points_navaid_pt_kukxxk.nilreason[1],
    navaids_points_navaid_pt_kukxxk.href,
    airport_heliport_touchdownliftoff_pt_mavoty.title,
    airport_heliport_touchdownliftoff_pt_mavoty.nilreason[1],
    airport_heliport_touchdownliftoff_pt_mavoty.href,
    airport_heliport_runwaycentrelinepoint_pt_smctuv.title,
    airport_heliport_runwaycentrelinepoint_pt_smctuv.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_smctuv.href,
    airport_heliport_airportheliport_pt_aqxmub.title,
    airport_heliport_airportheliport_pt_aqxmub.nilreason[1],
    airport_heliport_airportheliport_pt_aqxmub.href,
    geometry_point_view_rnpicd.geom,
    geometry_point_view_rnpicd.horizontalAccuracy,
    routes_directflightsegment_pt_oajsrq.id,
    procedure_standardinstrumentdeparture_pt_djoeek.title,
    procedure_standardinstrumentdeparture_pt_djoeek.nilreason[1],
    procedure_standardinstrumentdeparture_pt_djoeek.href,
    routes_routeportion_pt_lwohun.id,
    airport_heliport_airportheliport_pt_trzleq.title,
    airport_heliport_airportheliport_pt_trzleq.nilreason[1],
    airport_heliport_airportheliport_pt_trzleq.href,
    aerial_refuelling_aerialrefuelling_pt_fxmhar.title,
    aerial_refuelling_aerialrefuelling_pt_fxmhar.nilreason[1],
    aerial_refuelling_aerialrefuelling_pt_fxmhar.href;
create index on routes.flightroutingelement_view (id);
-- RoutePortionPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.routeportion_view cascade;
create materialized view routes.routeportion_view as
select
    routes.routeportion_pt.id,
    routes.routeportion_pt.nilreason AS routeportion_nilreason,
    coalesce(cast(navaids_points_designatedpoint_pt_xcapni.title as varchar), '(' || navaids_points_designatedpoint_pt_xcapni.nilreason[1] || ')') AS startfixdesignatedpoint,
    navaids_points_designatedpoint_pt_xcapni.href AS startfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_rnlmpk.title as varchar), '(' || navaids_points_designatedpoint_pt_rnlmpk.nilreason[1] || ')') AS intermediatepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_rnlmpk.href AS intermediatepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_jdpbwz.title as varchar), '(' || navaids_points_designatedpoint_pt_jdpbwz.nilreason[1] || ')') AS endfixdesignatedpoint,
    navaids_points_designatedpoint_pt_jdpbwz.href AS endfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_qbpibf.title as varchar), '(' || navaids_points_navaid_pt_qbpibf.nilreason[1] || ')') AS startnavaidsystem,
    navaids_points_navaid_pt_qbpibf.href AS startnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_nsxqph.title as varchar), '(' || navaids_points_navaid_pt_nsxqph.nilreason[1] || ')') AS intermediatepointnavaidsystem,
    navaids_points_navaid_pt_nsxqph.href AS intermediatepointnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_sejsbi.title as varchar), '(' || navaids_points_navaid_pt_sejsbi.nilreason[1] || ')') AS endnavaidsystem,
    navaids_points_navaid_pt_sejsbi.href AS endnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_qstbog.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_qstbog.nilreason[1] || ')') AS startaimingpoint,
    airport_heliport_touchdownliftoff_pt_qstbog.href AS startaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ktmdbi.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ktmdbi.nilreason[1] || ')') AS intermediatepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_ktmdbi.href AS intermediatepointaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_sgciku.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_sgciku.nilreason[1] || ')') AS endaimingpoint,
    airport_heliport_touchdownliftoff_pt_sgciku.href AS endaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_doqnvi.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_doqnvi.nilreason[1] || ')') AS startrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_doqnvi.href AS startrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_jscnlq.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_jscnlq.nilreason[1] || ')') AS intermediatepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_jscnlq.href AS intermediatepointrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_qutnvf.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_qutnvf.nilreason[1] || ')') AS endrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_qutnvf.href AS endrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ynyntu.title as varchar), '(' || airport_heliport_airportheliport_pt_ynyntu.nilreason[1] || ')') AS startairportreferencepoint,
    airport_heliport_airportheliport_pt_ynyntu.href AS startairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_bczcdk.title as varchar), '(' || airport_heliport_airportheliport_pt_bczcdk.nilreason[1] || ')') AS intermediatepointairportreferencepoint,
    airport_heliport_airportheliport_pt_bczcdk.href AS intermediatepointairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_pknavb.title as varchar), '(' || airport_heliport_airportheliport_pt_pknavb.nilreason[1] || ')') AS endairportreferencepoint,
    airport_heliport_airportheliport_pt_pknavb.href AS endairportreferencepoint_href,
    geometry_point_view_lchmli.geom AS startposition_geom,
    ST_X(geometry_point_view_lchmli.geom) AS startposition_longitude,
    ST_Y(geometry_point_view_lchmli.geom) AS startposition_latitude,
    geometry_point_view_lchmli.horizontalAccuracy AS startposition_horizontalaccuracy,
    geometry_point_view_bmavbl.geom AS intermediatepointposition_geom,
    ST_X(geometry_point_view_bmavbl.geom) AS intermediatepointposition_longitude,
    ST_Y(geometry_point_view_bmavbl.geom) AS intermediatepointposition_latitude,
    geometry_point_view_bmavbl.horizontalAccuracy AS intermediatepointposition_horizontalaccuracy,
    geometry_point_view_awogzx.geom AS endposition_geom,
    ST_X(geometry_point_view_awogzx.geom) AS endposition_longitude,
    ST_Y(geometry_point_view_awogzx.geom) AS endposition_latitude,
    geometry_point_view_awogzx.horizontalAccuracy AS endposition_horizontalaccuracy,
    coalesce(cast(routes_route_pt_hqfwzw.title as varchar), '(' || routes_route_pt_hqfwzw.nilreason[1] || ')') AS referencedroute,
    routes_route_pt_hqfwzw.href AS referencedroute_href,
    jsonb_agg(notes_note_view_ytgajq.*) AS annotation
from routes.routeportion_pt 
inner join routes.routeportion on routes.routeportion_pt.routeportion_id = routes.routeportion.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_xcapni on routes.routeportion.start_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_xcapni.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_qbpibf on routes.routeportion.start_navaidsystem_id = navaids_points_navaid_pt_qbpibf.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_qstbog on routes.routeportion.start_aimingpoint_id = airport_heliport_touchdownliftoff_pt_qstbog.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_doqnvi on routes.routeportion.start_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_doqnvi.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ynyntu on routes.routeportion.start_airportreferencepoint_id = airport_heliport_airportheliport_pt_ynyntu.id
left join geometry.point_view geometry_point_view_lchmli on routes.routeportion.start_position_id = geometry_point_view_lchmli.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_rnlmpk on routes.routeportion.intermediatepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_rnlmpk.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_nsxqph on routes.routeportion.intermediatepoint_navaidsystem_id = navaids_points_navaid_pt_nsxqph.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ktmdbi on routes.routeportion.intermediatepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_ktmdbi.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_jscnlq on routes.routeportion.intermediatepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_jscnlq.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_bczcdk on routes.routeportion.intermediatepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_bczcdk.id
left join geometry.point_view geometry_point_view_bmavbl on routes.routeportion.intermediatepoint_position_id = geometry_point_view_bmavbl.id
left join routes.route_pt routes_route_pt_hqfwzw on routes.routeportion.referencedroute_id = routes_route_pt_hqfwzw.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_jdpbwz on routes.routeportion.end_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_jdpbwz.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_sejsbi on routes.routeportion.end_navaidsystem_id = navaids_points_navaid_pt_sejsbi.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_sgciku on routes.routeportion.end_aimingpoint_id = airport_heliport_touchdownliftoff_pt_sgciku.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_qutnvf on routes.routeportion.end_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_qutnvf.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pknavb on routes.routeportion.end_airportreferencepoint_id = airport_heliport_airportheliport_pt_pknavb.id
left join geometry.point_view geometry_point_view_awogzx on routes.routeportion.end_position_id = geometry_point_view_awogzx.id
left join master_join master_join_uehcuu on routes.routeportion.id = master_join_uehcuu.source_id
left join notes.note_view notes_note_view_ytgajq on master_join_uehcuu.target_id = notes_note_view_ytgajq.id
group by
    routes.routeportion_pt.id,
    routes.routeportion_pt.nilreason,
    navaids_points_designatedpoint_pt_xcapni.title,
    navaids_points_designatedpoint_pt_xcapni.nilreason[1],
    navaids_points_designatedpoint_pt_xcapni.href,
    navaids_points_navaid_pt_qbpibf.title,
    navaids_points_navaid_pt_qbpibf.nilreason[1],
    navaids_points_navaid_pt_qbpibf.href,
    airport_heliport_touchdownliftoff_pt_qstbog.title,
    airport_heliport_touchdownliftoff_pt_qstbog.nilreason[1],
    airport_heliport_touchdownliftoff_pt_qstbog.href,
    airport_heliport_runwaycentrelinepoint_pt_doqnvi.title,
    airport_heliport_runwaycentrelinepoint_pt_doqnvi.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_doqnvi.href,
    airport_heliport_airportheliport_pt_ynyntu.title,
    airport_heliport_airportheliport_pt_ynyntu.nilreason[1],
    airport_heliport_airportheliport_pt_ynyntu.href,
    geometry_point_view_lchmli.geom,
    geometry_point_view_lchmli.horizontalAccuracy,
    navaids_points_designatedpoint_pt_rnlmpk.title,
    navaids_points_designatedpoint_pt_rnlmpk.nilreason[1],
    navaids_points_designatedpoint_pt_rnlmpk.href,
    navaids_points_navaid_pt_nsxqph.title,
    navaids_points_navaid_pt_nsxqph.nilreason[1],
    navaids_points_navaid_pt_nsxqph.href,
    airport_heliport_touchdownliftoff_pt_ktmdbi.title,
    airport_heliport_touchdownliftoff_pt_ktmdbi.nilreason[1],
    airport_heliport_touchdownliftoff_pt_ktmdbi.href,
    airport_heliport_runwaycentrelinepoint_pt_jscnlq.title,
    airport_heliport_runwaycentrelinepoint_pt_jscnlq.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_jscnlq.href,
    airport_heliport_airportheliport_pt_bczcdk.title,
    airport_heliport_airportheliport_pt_bczcdk.nilreason[1],
    airport_heliport_airportheliport_pt_bczcdk.href,
    geometry_point_view_bmavbl.geom,
    geometry_point_view_bmavbl.horizontalAccuracy,
    routes_route_pt_hqfwzw.title,
    routes_route_pt_hqfwzw.nilreason[1],
    routes_route_pt_hqfwzw.href,
    navaids_points_designatedpoint_pt_jdpbwz.title,
    navaids_points_designatedpoint_pt_jdpbwz.nilreason[1],
    navaids_points_designatedpoint_pt_jdpbwz.href,
    navaids_points_navaid_pt_sejsbi.title,
    navaids_points_navaid_pt_sejsbi.nilreason[1],
    navaids_points_navaid_pt_sejsbi.href,
    airport_heliport_touchdownliftoff_pt_sgciku.title,
    airport_heliport_touchdownliftoff_pt_sgciku.nilreason[1],
    airport_heliport_touchdownliftoff_pt_sgciku.href,
    airport_heliport_runwaycentrelinepoint_pt_qutnvf.title,
    airport_heliport_runwaycentrelinepoint_pt_qutnvf.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_qutnvf.href,
    airport_heliport_airportheliport_pt_pknavb.title,
    airport_heliport_airportheliport_pt_pknavb.nilreason[1],
    airport_heliport_airportheliport_pt_pknavb.href,
    geometry_point_view_awogzx.geom,
    geometry_point_view_awogzx.horizontalAccuracy;
create index on routes.routeportion_view (id);
-- TerminalSegmentPointPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.terminalsegmentpoint_view cascade;
create materialized view navaids_points.terminalsegmentpoint_view as
select
    navaids_points.terminalsegmentpoint_pt.id,
    navaids_points.terminalsegmentpoint_pt.nilreason AS terminalsegmentpoint_nilreason,
    coalesce(cast(navaids_points.terminalsegmentpoint.reportingatc_value as varchar), '(' || navaids_points.terminalsegmentpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(navaids_points.terminalsegmentpoint.flyover_value as varchar), '(' || navaids_points.terminalsegmentpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(navaids_points.terminalsegmentpoint.waypoint_value as varchar), '(' || navaids_points.terminalsegmentpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(navaids_points.terminalsegmentpoint.radarguidance_value as varchar), '(' || navaids_points.terminalsegmentpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(navaids_points.terminalsegmentpoint.role_value as varchar), '(' || navaids_points.terminalsegmentpoint.role_nilreason || ')') as role,
    coalesce(cast(navaids_points.terminalsegmentpoint.leadradial_value as varchar), '(' || navaids_points.terminalsegmentpoint.leadradial_nilreason || ')') as leadradial,
    coalesce(cast(navaids_points.terminalsegmentpoint.indicatorfacf_value as varchar), '(' || navaids_points.terminalsegmentpoint.indicatorfacf_nilreason || ')') as indicatorfacf,
    coalesce(cast(navaids_points.terminalsegmentpoint.leaddme_value as varchar) || ' ' || navaids_points.terminalsegmentpoint.leaddme_uom, '(' || navaids_points.terminalsegmentpoint.leaddme_nilreason || ')') as leaddme,
    coalesce(cast(navaids_points_designatedpoint_pt_ssivna.title as varchar), '(' || navaids_points_designatedpoint_pt_ssivna.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_ssivna.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_gxyqfo.title as varchar), '(' || navaids_points_navaid_pt_gxyqfo.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_gxyqfo.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_fegauq.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_fegauq.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_fegauq.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_mzlkzc.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_mzlkzc.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_mzlkzc.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_jpaufu.title as varchar), '(' || airport_heliport_airportheliport_pt_jpaufu.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_jpaufu.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_msehed.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_msehed.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_msehed.geom) AS pointchoiceposition_latitude,
    geometry_point_view_msehed.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    coalesce(cast(shared_radiofrequencyarea_pt_bnxcsf.title as varchar), '(' || shared_radiofrequencyarea_pt_bnxcsf.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_bnxcsf.href AS extendedservicevolume_href,
    jsonb_agg(navaids_points_pointreference_pt_tnlxea.id) AS facilitymakeup,
    jsonb_agg(notes_note_view_yfdldl.*) AS annotation
from navaids_points.terminalsegmentpoint_pt 
inner join navaids_points.terminalsegmentpoint on navaids_points.terminalsegmentpoint_pt.terminalsegmentpoint_id = navaids_points.terminalsegmentpoint.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ssivna on navaids_points.terminalsegmentpoint.terminalsegmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ssivna.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_gxyqfo on navaids_points.terminalsegmentpoint.terminalsegmentpoint_navaidsystem_id = navaids_points_navaid_pt_gxyqfo.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_fegauq on navaids_points.terminalsegmentpoint.terminalsegmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_fegauq.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_mzlkzc on navaids_points.terminalsegmentpoint.terminalsegmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_mzlkzc.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jpaufu on navaids_points.terminalsegmentpoint.terminalsegmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_jpaufu.id
left join geometry.point_view geometry_point_view_msehed on navaids_points.terminalsegmentpoint.terminalsegmentpoint_position_id = geometry_point_view_msehed.id
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_bnxcsf on navaids_points.terminalsegmentpoint.extendedservicevolume_id = shared_radiofrequencyarea_pt_bnxcsf.id
left join master_join master_join_ceujzg on navaids_points.terminalsegmentpoint.id = master_join_ceujzg.source_id
left join navaids_points.pointreference_pt navaids_points_pointreference_pt_tnlxea on master_join_ceujzg.target_id = navaids_points_pointreference_pt_tnlxea.id
left join master_join master_join_fxsbcy on navaids_points.terminalsegmentpoint.id = master_join_fxsbcy.source_id
left join notes.note_view notes_note_view_yfdldl on master_join_fxsbcy.target_id = notes_note_view_yfdldl.id
group by
    navaids_points.terminalsegmentpoint_pt.id,
    navaids_points.terminalsegmentpoint_pt.nilreason,
    navaids_points.terminalsegmentpoint.reportingatc_value,
    navaids_points.terminalsegmentpoint.reportingatc_nilreason,
    navaids_points.terminalsegmentpoint.flyover_value,
    navaids_points.terminalsegmentpoint.flyover_nilreason,
    navaids_points.terminalsegmentpoint.waypoint_value,
    navaids_points.terminalsegmentpoint.waypoint_nilreason,
    navaids_points.terminalsegmentpoint.radarguidance_value,
    navaids_points.terminalsegmentpoint.radarguidance_nilreason,
    navaids_points.terminalsegmentpoint.role_value,
    navaids_points.terminalsegmentpoint.role_nilreason,
    navaids_points.terminalsegmentpoint.leadradial_value,
    navaids_points.terminalsegmentpoint.leadradial_nilreason,
    navaids_points.terminalsegmentpoint.indicatorfacf_value,
    navaids_points.terminalsegmentpoint.indicatorfacf_nilreason,
    navaids_points.terminalsegmentpoint.leaddme_value,
    navaids_points.terminalsegmentpoint.leaddme_uom,
    navaids_points.terminalsegmentpoint.leaddme_nilreason,
    navaids_points_designatedpoint_pt_ssivna.title,
    navaids_points_designatedpoint_pt_ssivna.nilreason[1],
    navaids_points_designatedpoint_pt_ssivna.href,
    navaids_points_navaid_pt_gxyqfo.title,
    navaids_points_navaid_pt_gxyqfo.nilreason[1],
    navaids_points_navaid_pt_gxyqfo.href,
    airport_heliport_touchdownliftoff_pt_fegauq.title,
    airport_heliport_touchdownliftoff_pt_fegauq.nilreason[1],
    airport_heliport_touchdownliftoff_pt_fegauq.href,
    airport_heliport_runwaycentrelinepoint_pt_mzlkzc.title,
    airport_heliport_runwaycentrelinepoint_pt_mzlkzc.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_mzlkzc.href,
    airport_heliport_airportheliport_pt_jpaufu.title,
    airport_heliport_airportheliport_pt_jpaufu.nilreason[1],
    airport_heliport_airportheliport_pt_jpaufu.href,
    geometry_point_view_msehed.geom,
    geometry_point_view_msehed.horizontalAccuracy,
    shared_radiofrequencyarea_pt_bnxcsf.title,
    shared_radiofrequencyarea_pt_bnxcsf.nilreason[1],
    shared_radiofrequencyarea_pt_bnxcsf.href;
create index on navaids_points.terminalsegmentpoint_view (id);
-- AerialRefuellingAnchorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuellinganchor_view cascade;
create materialized view aerial_refuelling.aerialrefuellinganchor_view as
select
    aerial_refuelling.aerialrefuellinganchor_pt.id,
    aerial_refuelling.aerialrefuellinganchor_pt.nilreason AS aerialrefuellinganchor_nilreason,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.outboundcourse_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.outboundcourse_nilreason || ')') as outboundcourse,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_nilreason || ')') as outboundcoursetype,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.inboundcourse_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.inboundcourse_nilreason || ')') as inboundcourse,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.turndirection_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_nilreason || ')') as refuellingbaselevelreference,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.speedlimit_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.speedlimit_uom, '(' || aerial_refuelling.aerialrefuellinganchor.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.legseparation_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.legseparation_uom, '(' || aerial_refuelling.aerialrefuellinganchor.legseparation_nilreason || ')') as legseparation,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.leglength_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.leglength_uom, '(' || aerial_refuelling.aerialrefuellinganchor.leglength_nilreason || ')') as leglength,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_uom, '(' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_nilreason || ')') as refuellingbaselevel,
    geometry_surface_view_hdudgz.geom AS extent_geom,
    geometry_surface_view_hdudgz.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(shared_airspacelayer_pt_zbtahm.id) AS verticalextent,
    jsonb_agg(aerial_refuelling_aerialrefuellingpoint_pt_upcvsi.id) AS point,
    jsonb_agg(notes_note_view_jsrnmy.*) AS annotation
from aerial_refuelling.aerialrefuellinganchor_pt 
inner join aerial_refuelling.aerialrefuellinganchor on aerial_refuelling.aerialrefuellinganchor_pt.aerialrefuellinganchor_id = aerial_refuelling.aerialrefuellinganchor.id
left join geometry.surface_view geometry_surface_view_hdudgz on aerial_refuelling.aerialrefuellinganchor.extent_id = geometry_surface_view_hdudgz.id
left join master_join master_join_oixapt on aerial_refuelling.aerialrefuellinganchor.id = master_join_oixapt.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_zbtahm on master_join_oixapt.target_id = shared_airspacelayer_pt_zbtahm.id
left join master_join master_join_zeapnj on aerial_refuelling.aerialrefuellinganchor.id = master_join_zeapnj.source_id
left join aerial_refuelling.aerialrefuellingpoint_pt aerial_refuelling_aerialrefuellingpoint_pt_upcvsi on master_join_zeapnj.target_id = aerial_refuelling_aerialrefuellingpoint_pt_upcvsi.id
left join master_join master_join_mfdydl on aerial_refuelling.aerialrefuellinganchor.id = master_join_mfdydl.source_id
left join notes.note_view notes_note_view_jsrnmy on master_join_mfdydl.target_id = notes_note_view_jsrnmy.id
group by
    aerial_refuelling.aerialrefuellinganchor_pt.id,
    aerial_refuelling.aerialrefuellinganchor_pt.nilreason,
    aerial_refuelling.aerialrefuellinganchor.outboundcourse_value,
    aerial_refuelling.aerialrefuellinganchor.outboundcourse_nilreason,
    aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_value,
    aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_nilreason,
    aerial_refuelling.aerialrefuellinganchor.inboundcourse_value,
    aerial_refuelling.aerialrefuellinganchor.inboundcourse_nilreason,
    aerial_refuelling.aerialrefuellinganchor.turndirection_value,
    aerial_refuelling.aerialrefuellinganchor.turndirection_nilreason,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_value,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_nilreason,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_value,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_uom,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_nilreason,
    aerial_refuelling.aerialrefuellinganchor.legseparation_value,
    aerial_refuelling.aerialrefuellinganchor.legseparation_uom,
    aerial_refuelling.aerialrefuellinganchor.legseparation_nilreason,
    aerial_refuelling.aerialrefuellinganchor.leglength_value,
    aerial_refuelling.aerialrefuellinganchor.leglength_uom,
    aerial_refuelling.aerialrefuellinganchor.leglength_nilreason,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_value,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_uom,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_nilreason,
    geometry_surface_view_hdudgz.geom,
    geometry_surface_view_hdudgz.horizontalAccuracy;
create index on aerial_refuelling.aerialrefuellinganchor_view (id);
-- AirspaceVolumePropertyType
-- ['geometry.curve_view', 'geometry.surface_view', 'notes.note_view']
drop materialized view if exists airspace.airspacevolume_view cascade;
create materialized view airspace.airspacevolume_view as
select
    airspace.airspacevolume_pt.id,
    airspace.airspacevolume_pt.nilreason AS airspacevolume_nilreason,
    coalesce(cast(airspace.airspacevolume.upperlimitreference_value as varchar), '(' || airspace.airspacevolume.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(airspace.airspacevolume.maximumlimitreference_value as varchar), '(' || airspace.airspacevolume.maximumlimitreference_nilreason || ')') as maximumlimitreference,
    coalesce(cast(airspace.airspacevolume.lowerlimitreference_value as varchar), '(' || airspace.airspacevolume.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(airspace.airspacevolume.minimumlimitreference_value as varchar), '(' || airspace.airspacevolume.minimumlimitreference_nilreason || ')') as minimumlimitreference,
    coalesce(cast(airspace.airspacevolume.upperlimit_value as varchar) || ' ' || airspace.airspacevolume.upperlimit_uom, '(' || airspace.airspacevolume.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(airspace.airspacevolume.maximumlimit_value as varchar) || ' ' || airspace.airspacevolume.maximumlimit_uom, '(' || airspace.airspacevolume.maximumlimit_nilreason || ')') as maximumlimit,
    coalesce(cast(airspace.airspacevolume.lowerlimit_value as varchar) || ' ' || airspace.airspacevolume.lowerlimit_uom, '(' || airspace.airspacevolume.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(airspace.airspacevolume.minimumlimit_value as varchar) || ' ' || airspace.airspacevolume.minimumlimit_uom, '(' || airspace.airspacevolume.minimumlimit_nilreason || ')') as minimumlimit,
    coalesce(cast(airspace.airspacevolume.width_value as varchar) || ' ' || airspace.airspacevolume.width_uom, '(' || airspace.airspacevolume.width_nilreason || ')') as width,
    geometry_surface_view_pkfewn.geom AS horizontalprojection_geom,
    geometry_surface_view_pkfewn.horizontalAccuracy as horizontalprojection_horizontalaccuracy,
    geometry_curve_view_khviat.geom AS centreline_geom,
    geometry_curve_view_khviat.horizontalAccuracy as centreline_horizontalaccuracy,
    airspace_airspacevolumedependency_pt_rldetb.id AS contributorairspace,
    jsonb_agg(notes_note_view_zjwofg.*) AS annotation
from airspace.airspacevolume_pt 
inner join airspace.airspacevolume on airspace.airspacevolume_pt.airspacevolume_id = airspace.airspacevolume.id
left join geometry.surface_view geometry_surface_view_pkfewn on airspace.airspacevolume.horizontalprojection_id = geometry_surface_view_pkfewn.id
left join geometry.curve_view geometry_curve_view_khviat on airspace.airspacevolume.centreline_id = geometry_curve_view_khviat.id
left join airspace.airspacevolumedependency_pt airspace_airspacevolumedependency_pt_rldetb on airspace.airspacevolume.contributorairspace_id = airspace_airspacevolumedependency_pt_rldetb.id
left join master_join master_join_dilcnp on airspace.airspacevolume.id = master_join_dilcnp.source_id
left join notes.note_view notes_note_view_zjwofg on master_join_dilcnp.target_id = notes_note_view_zjwofg.id
group by
    airspace.airspacevolume_pt.id,
    airspace.airspacevolume_pt.nilreason,
    airspace.airspacevolume.upperlimitreference_value,
    airspace.airspacevolume.upperlimitreference_nilreason,
    airspace.airspacevolume.maximumlimitreference_value,
    airspace.airspacevolume.maximumlimitreference_nilreason,
    airspace.airspacevolume.lowerlimitreference_value,
    airspace.airspacevolume.lowerlimitreference_nilreason,
    airspace.airspacevolume.minimumlimitreference_value,
    airspace.airspacevolume.minimumlimitreference_nilreason,
    airspace.airspacevolume.upperlimit_value,
    airspace.airspacevolume.upperlimit_uom,
    airspace.airspacevolume.upperlimit_nilreason,
    airspace.airspacevolume.maximumlimit_value,
    airspace.airspacevolume.maximumlimit_uom,
    airspace.airspacevolume.maximumlimit_nilreason,
    airspace.airspacevolume.lowerlimit_value,
    airspace.airspacevolume.lowerlimit_uom,
    airspace.airspacevolume.lowerlimit_nilreason,
    airspace.airspacevolume.minimumlimit_value,
    airspace.airspacevolume.minimumlimit_uom,
    airspace.airspacevolume.minimumlimit_nilreason,
    airspace.airspacevolume.width_value,
    airspace.airspacevolume.width_uom,
    airspace.airspacevolume.width_nilreason,
    geometry_surface_view_pkfewn.geom,
    geometry_surface_view_pkfewn.horizontalAccuracy,
    geometry_curve_view_khviat.geom,
    geometry_curve_view_khviat.horizontalAccuracy,
    airspace_airspacevolumedependency_pt_rldetb.id;
create index on airspace.airspacevolume_view (id);
-- NavigationAreaSectorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.navigationareasector_view cascade;
create materialized view procedure.navigationareasector_view as
select
    procedure.navigationareasector_pt.id,
    procedure.navigationareasector_pt.nilreason AS navigationareasector_nilreason,
    shared_circlesector_pt_ktvxsu.id AS sectordefinition,
    geometry_surface_view_ihylzv.geom AS extent_geom,
    geometry_surface_view_ihylzv.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(shared_obstruction_pt_qdohtf.id) AS significantobstacle,
    jsonb_agg(procedure_sectordesign_pt_ktetcc.id) AS sectorcriteria,
    jsonb_agg(notes_note_view_ifqihj.*) AS annotation
from procedure.navigationareasector_pt 
inner join procedure.navigationareasector on procedure.navigationareasector_pt.navigationareasector_id = procedure.navigationareasector.id
left join shared.circlesector_pt shared_circlesector_pt_ktvxsu on procedure.navigationareasector.sectordefinition_id = shared_circlesector_pt_ktvxsu.id
left join geometry.surface_view geometry_surface_view_ihylzv on procedure.navigationareasector.extent_id = geometry_surface_view_ihylzv.id
left join master_join master_join_abfhma on procedure.navigationareasector.id = master_join_abfhma.source_id
left join shared.obstruction_pt shared_obstruction_pt_qdohtf on master_join_abfhma.target_id = shared_obstruction_pt_qdohtf.id
left join master_join master_join_ylgexf on procedure.navigationareasector.id = master_join_ylgexf.source_id
left join procedure.sectordesign_pt procedure_sectordesign_pt_ktetcc on master_join_ylgexf.target_id = procedure_sectordesign_pt_ktetcc.id
left join master_join master_join_rpivss on procedure.navigationareasector.id = master_join_rpivss.source_id
left join notes.note_view notes_note_view_ifqihj on master_join_rpivss.target_id = notes_note_view_ifqihj.id
group by
    procedure.navigationareasector_pt.id,
    procedure.navigationareasector_pt.nilreason,
    shared_circlesector_pt_ktvxsu.id,
    geometry_surface_view_ihylzv.geom,
    geometry_surface_view_ihylzv.horizontalAccuracy;
create index on procedure.navigationareasector_view (id);
-- ObstacleAssessmentAreaPropertyType
-- ['geometry.curve_view', 'geometry.surface_view', 'notes.note_view']
drop materialized view if exists shared.obstacleassessmentarea_view cascade;
create materialized view shared.obstacleassessmentarea_view as
select
    shared.obstacleassessmentarea_pt.id,
    shared.obstacleassessmentarea_pt.nilreason AS obstacleassessmentarea_nilreason,
    coalesce(cast(shared.obstacleassessmentarea.type_value as varchar), '(' || shared.obstacleassessmentarea.type_nilreason || ')') as type,
    coalesce(cast(shared.obstacleassessmentarea.sectionnumber_value as varchar), '(' || shared.obstacleassessmentarea.sectionnumber_nilreason || ')') as sectionnumber,
    coalesce(cast(shared.obstacleassessmentarea.slope_value as varchar), '(' || shared.obstacleassessmentarea.slope_nilreason || ')') as slope,
    coalesce(cast(shared.obstacleassessmentarea.gradientlowhigh_value as varchar), '(' || shared.obstacleassessmentarea.gradientlowhigh_nilreason || ')') as gradientlowhigh,
    coalesce(cast(shared.obstacleassessmentarea.surfacezone_value as varchar), '(' || shared.obstacleassessmentarea.surfacezone_nilreason || ')') as surfacezone,
    coalesce(cast(shared.obstacleassessmentarea.safetyregulation_value as varchar), '(' || shared.obstacleassessmentarea.safetyregulation_nilreason || ')') as safetyregulation,
    coalesce(cast(shared.obstacleassessmentarea.assessedaltitude_value as varchar) || ' ' || shared.obstacleassessmentarea.assessedaltitude_uom, '(' || shared.obstacleassessmentarea.assessedaltitude_nilreason || ')') as assessedaltitude,
    coalesce(cast(shared.obstacleassessmentarea.slopeloweraltitude_value as varchar) || ' ' || shared.obstacleassessmentarea.slopeloweraltitude_uom, '(' || shared.obstacleassessmentarea.slopeloweraltitude_nilreason || ')') as slopeloweraltitude,
    geometry_surface_view_jpfqwj.geom AS surface_geom,
    geometry_surface_view_jpfqwj.horizontalAccuracy as surface_horizontalaccuracy,
    geometry_curve_view_drcnbe.geom AS startingcurve_geom,
    geometry_curve_view_drcnbe.horizontalAccuracy as startingcurve_horizontalaccuracy,
    jsonb_agg(shared_aircraftcharacteristic_pt_ubqhfw.id) AS aircraftcategory,
    jsonb_agg(shared_obstruction_pt_gwijtp.id) AS significantobstacle,
    jsonb_agg(notes_note_view_qdvbpv.*) AS annotation
from shared.obstacleassessmentarea_pt 
inner join shared.obstacleassessmentarea on shared.obstacleassessmentarea_pt.obstacleassessmentarea_id = shared.obstacleassessmentarea.id
left join geometry.surface_view geometry_surface_view_jpfqwj on shared.obstacleassessmentarea.surface_id = geometry_surface_view_jpfqwj.id
left join geometry.curve_view geometry_curve_view_drcnbe on shared.obstacleassessmentarea.startingcurve_id = geometry_curve_view_drcnbe.id
left join master_join master_join_xxeuwj on shared.obstacleassessmentarea.id = master_join_xxeuwj.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_ubqhfw on master_join_xxeuwj.target_id = shared_aircraftcharacteristic_pt_ubqhfw.id
left join master_join master_join_qeveto on shared.obstacleassessmentarea.id = master_join_qeveto.source_id
left join shared.obstruction_pt shared_obstruction_pt_gwijtp on master_join_qeveto.target_id = shared_obstruction_pt_gwijtp.id
left join master_join master_join_ioizpy on shared.obstacleassessmentarea.id = master_join_ioizpy.source_id
left join notes.note_view notes_note_view_qdvbpv on master_join_ioizpy.target_id = notes_note_view_qdvbpv.id
group by
    shared.obstacleassessmentarea_pt.id,
    shared.obstacleassessmentarea_pt.nilreason,
    shared.obstacleassessmentarea.type_value,
    shared.obstacleassessmentarea.type_nilreason,
    shared.obstacleassessmentarea.sectionnumber_value,
    shared.obstacleassessmentarea.sectionnumber_nilreason,
    shared.obstacleassessmentarea.slope_value,
    shared.obstacleassessmentarea.slope_nilreason,
    shared.obstacleassessmentarea.gradientlowhigh_value,
    shared.obstacleassessmentarea.gradientlowhigh_nilreason,
    shared.obstacleassessmentarea.surfacezone_value,
    shared.obstacleassessmentarea.surfacezone_nilreason,
    shared.obstacleassessmentarea.safetyregulation_value,
    shared.obstacleassessmentarea.safetyregulation_nilreason,
    shared.obstacleassessmentarea.assessedaltitude_value,
    shared.obstacleassessmentarea.assessedaltitude_uom,
    shared.obstacleassessmentarea.assessedaltitude_nilreason,
    shared.obstacleassessmentarea.slopeloweraltitude_value,
    shared.obstacleassessmentarea.slopeloweraltitude_uom,
    shared.obstacleassessmentarea.slopeloweraltitude_nilreason,
    geometry_surface_view_jpfqwj.geom,
    geometry_surface_view_jpfqwj.horizontalAccuracy,
    geometry_curve_view_drcnbe.geom,
    geometry_curve_view_drcnbe.horizontalAccuracy;
create index on shared.obstacleassessmentarea_view (id);
-- PointReferencePropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists navaids_points.pointreference_view cascade;
create materialized view navaids_points.pointreference_view as
select
    navaids_points.pointreference_pt.id,
    navaids_points.pointreference_pt.nilreason AS pointreference_nilreason,
    coalesce(cast(navaids_points.pointreference.role_value as varchar), '(' || navaids_points.pointreference.role_nilreason || ')') as role,
    coalesce(cast(navaids_points.pointreference.priorfixtolerance_value as varchar) || ' ' || navaids_points.pointreference.priorfixtolerance_uom, '(' || navaids_points.pointreference.priorfixtolerance_nilreason || ')') as priorfixtolerance,
    coalesce(cast(navaids_points.pointreference.postfixtolerance_value as varchar) || ' ' || navaids_points.pointreference.postfixtolerance_uom, '(' || navaids_points.pointreference.postfixtolerance_nilreason || ')') as postfixtolerance,
    coalesce(cast(navaids_points_designatedpoint_pt_hmbqyu.title as varchar), '(' || navaids_points_designatedpoint_pt_hmbqyu.nilreason[1] || ')') AS point,
    navaids_points_designatedpoint_pt_hmbqyu.href AS point_href,
    geometry_surface_view_kqqwtc.geom AS fixtolerancearea_geom,
    geometry_surface_view_kqqwtc.horizontalAccuracy as fixtolerancearea_horizontalaccuracy,
    jsonb_agg(navaids_points_angleuse_pt_zjzrhu.id) AS facilityangle,
    jsonb_agg(DISTINCT jsonb_build_object('id', navaids_points_distanceindication_pt_drlsnz.id,
    'title', coalesce(cast(navaids_points_distanceindication_pt_drlsnz.title AS varchar), '(' || navaids_points_distanceindication_pt_drlsnz.nilreason[1] || ')'),
    'href', navaids_points_distanceindication_pt_drlsnz.href)) AS facilitydistance,
    jsonb_agg(notes_note_view_ikqqpa.*) AS annotation
from navaids_points.pointreference_pt 
inner join navaids_points.pointreference on navaids_points.pointreference_pt.pointreference_id = navaids_points.pointreference.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_hmbqyu on navaids_points.pointreference.point_id = navaids_points_designatedpoint_pt_hmbqyu.id
left join geometry.surface_view geometry_surface_view_kqqwtc on navaids_points.pointreference.fixtolerancearea_id = geometry_surface_view_kqqwtc.id
left join master_join master_join_flobpj on navaids_points.pointreference.id = master_join_flobpj.source_id
left join navaids_points.angleuse_pt navaids_points_angleuse_pt_zjzrhu on master_join_flobpj.target_id = navaids_points_angleuse_pt_zjzrhu.id
left join master_join master_join_zbsvof on navaids_points.pointreference.id = master_join_zbsvof.source_id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_drlsnz on master_join_zbsvof.target_id = navaids_points_distanceindication_pt_drlsnz.id
left join master_join master_join_txklmt on navaids_points.pointreference.id = master_join_txklmt.source_id
left join notes.note_view notes_note_view_ikqqpa on master_join_txklmt.target_id = notes_note_view_ikqqpa.id
group by
    navaids_points.pointreference_pt.id,
    navaids_points.pointreference_pt.nilreason,
    navaids_points.pointreference.role_value,
    navaids_points.pointreference.role_nilreason,
    navaids_points.pointreference.priorfixtolerance_value,
    navaids_points.pointreference.priorfixtolerance_uom,
    navaids_points.pointreference.priorfixtolerance_nilreason,
    navaids_points.pointreference.postfixtolerance_value,
    navaids_points.pointreference.postfixtolerance_uom,
    navaids_points.pointreference.postfixtolerance_nilreason,
    navaids_points_designatedpoint_pt_hmbqyu.title,
    navaids_points_designatedpoint_pt_hmbqyu.nilreason[1],
    navaids_points_designatedpoint_pt_hmbqyu.href,
    geometry_surface_view_kqqwtc.geom,
    geometry_surface_view_kqqwtc.horizontalAccuracy;
create index on navaids_points.pointreference_view (id);
-- SafeAltitudeAreaSectorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.safealtitudeareasector_view cascade;
create materialized view procedure.safealtitudeareasector_view as
select
    procedure.safealtitudeareasector_pt.id,
    procedure.safealtitudeareasector_pt.nilreason AS safealtitudeareasector_nilreason,
    coalesce(cast(procedure.safealtitudeareasector.bufferwidth_value as varchar) || ' ' || procedure.safealtitudeareasector.bufferwidth_uom, '(' || procedure.safealtitudeareasector.bufferwidth_nilreason || ')') as bufferwidth,
    geometry_surface_view_uywvlo.geom AS extent_geom,
    geometry_surface_view_uywvlo.horizontalAccuracy as extent_horizontalaccuracy,
    shared_circlesector_pt_aytvyq.id AS sectordefinition,
    jsonb_agg(shared_obstruction_pt_uzjcvj.id) AS significantobstacle,
    jsonb_agg(notes_note_view_aebrfx.*) AS annotation
from procedure.safealtitudeareasector_pt 
inner join procedure.safealtitudeareasector on procedure.safealtitudeareasector_pt.safealtitudeareasector_id = procedure.safealtitudeareasector.id
left join geometry.surface_view geometry_surface_view_uywvlo on procedure.safealtitudeareasector.extent_id = geometry_surface_view_uywvlo.id
left join shared.circlesector_pt shared_circlesector_pt_aytvyq on procedure.safealtitudeareasector.sectordefinition_id = shared_circlesector_pt_aytvyq.id
left join master_join master_join_ljqqgk on procedure.safealtitudeareasector.id = master_join_ljqqgk.source_id
left join shared.obstruction_pt shared_obstruction_pt_uzjcvj on master_join_ljqqgk.target_id = shared_obstruction_pt_uzjcvj.id
left join master_join master_join_tjqzda on procedure.safealtitudeareasector.id = master_join_tjqzda.source_id
left join notes.note_view notes_note_view_aebrfx on master_join_tjqzda.target_id = notes_note_view_aebrfx.id
group by
    procedure.safealtitudeareasector_pt.id,
    procedure.safealtitudeareasector_pt.nilreason,
    procedure.safealtitudeareasector.bufferwidth_value,
    procedure.safealtitudeareasector.bufferwidth_uom,
    procedure.safealtitudeareasector.bufferwidth_nilreason,
    geometry_surface_view_uywvlo.geom,
    geometry_surface_view_uywvlo.horizontalAccuracy,
    shared_circlesector_pt_aytvyq.id;
create index on procedure.safealtitudeareasector_view (id);
-- TerminalArrivalAreaSectorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.terminalarrivalareasector_view cascade;
create materialized view procedure.terminalarrivalareasector_view as
select
    procedure.terminalarrivalareasector_pt.id,
    procedure.terminalarrivalareasector_pt.nilreason AS terminalarrivalareasector_nilreason,
    coalesce(cast(procedure.terminalarrivalareasector.flybycode_value as varchar), '(' || procedure.terminalarrivalareasector.flybycode_nilreason || ')') as flybycode,
    coalesce(cast(procedure.terminalarrivalareasector.procedureturnrequired_value as varchar), '(' || procedure.terminalarrivalareasector.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.terminalarrivalareasector.altitudedescription_value as varchar), '(' || procedure.terminalarrivalareasector.altitudedescription_nilreason || ')') as altitudedescription,
    shared_circlesector_pt_ldybfi.id AS sectordefinition,
    geometry_surface_view_ieqbnd.geom AS extent_geom,
    geometry_surface_view_ieqbnd.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(shared_obstruction_pt_qlsybs.id) AS significantobstacle,
    jsonb_agg(notes_note_view_qcfidw.*) AS annotation
from procedure.terminalarrivalareasector_pt 
inner join procedure.terminalarrivalareasector on procedure.terminalarrivalareasector_pt.terminalarrivalareasector_id = procedure.terminalarrivalareasector.id
left join shared.circlesector_pt shared_circlesector_pt_ldybfi on procedure.terminalarrivalareasector.sectordefinition_id = shared_circlesector_pt_ldybfi.id
left join geometry.surface_view geometry_surface_view_ieqbnd on procedure.terminalarrivalareasector.extent_id = geometry_surface_view_ieqbnd.id
left join master_join master_join_dqibgs on procedure.terminalarrivalareasector.id = master_join_dqibgs.source_id
left join shared.obstruction_pt shared_obstruction_pt_qlsybs on master_join_dqibgs.target_id = shared_obstruction_pt_qlsybs.id
left join master_join master_join_tqxhxz on procedure.terminalarrivalareasector.id = master_join_tqxhxz.source_id
left join notes.note_view notes_note_view_qcfidw on master_join_tqxhxz.target_id = notes_note_view_qcfidw.id
group by
    procedure.terminalarrivalareasector_pt.id,
    procedure.terminalarrivalareasector_pt.nilreason,
    procedure.terminalarrivalareasector.flybycode_value,
    procedure.terminalarrivalareasector.flybycode_nilreason,
    procedure.terminalarrivalareasector.procedureturnrequired_value,
    procedure.terminalarrivalareasector.procedureturnrequired_nilreason,
    procedure.terminalarrivalareasector.altitudedescription_value,
    procedure.terminalarrivalareasector.altitudedescription_nilreason,
    shared_circlesector_pt_ldybfi.id,
    geometry_surface_view_ieqbnd.geom,
    geometry_surface_view_ieqbnd.horizontalAccuracy;
create index on procedure.terminalarrivalareasector_view (id);
-- AirportHeliportAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airportheliportavailability_view cascade;
create materialized view airport_heliport.airportheliportavailability_view as
select
    airport_heliport.airportheliportavailability_pt.id,
    airport_heliport.airportheliportavailability_pt.nilreason AS airportheliportavailability_nilreason,
    coalesce(cast(airport_heliport.airportheliportavailability.operationalstatus_value as varchar), '(' || airport_heliport.airportheliportavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.airportheliportavailability.warning_value as varchar), '(' || airport_heliport.airportheliportavailability.warning_nilreason || ')') as warning,
    jsonb_agg(notes_note_view_qzzbdx.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_nqelpz.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_nqelpz.title AS varchar), '(' || organisation_organisationauthority_pt_nqelpz.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_nqelpz.href)) AS specialdateauthority,
    jsonb_agg(airport_heliport_airportheliportusage_pt_nebmmt.id) AS usage
from airport_heliport.airportheliportavailability_pt 
inner join airport_heliport.airportheliportavailability on airport_heliport.airportheliportavailability_pt.airportheliportavailability_id = airport_heliport.airportheliportavailability.id
left join master_join master_join_zxmpys on airport_heliport.airportheliportavailability.id = master_join_zxmpys.source_id
left join shared.timesheet_view shared_timesheet_view_znopti on master_join_zxmpys.target_id = shared_timesheet_view_znopti.id
left join master_join master_join_rvwqex on airport_heliport.airportheliportavailability.id = master_join_rvwqex.source_id
left join notes.note_view notes_note_view_qzzbdx on master_join_rvwqex.target_id = notes_note_view_qzzbdx.id
left join master_join master_join_vqreoi on airport_heliport.airportheliportavailability.id = master_join_vqreoi.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_nqelpz on master_join_vqreoi.target_id = organisation_organisationauthority_pt_nqelpz.id
left join master_join master_join_tzduzf on airport_heliport.airportheliportavailability.id = master_join_tzduzf.source_id
left join airport_heliport.airportheliportusage_pt airport_heliport_airportheliportusage_pt_nebmmt on master_join_tzduzf.target_id = airport_heliport_airportheliportusage_pt_nebmmt.id
group by
    airport_heliport.airportheliportavailability_pt.id,
    airport_heliport.airportheliportavailability_pt.nilreason,
    airport_heliport.airportheliportavailability.operationalstatus_value,
    airport_heliport.airportheliportavailability.operationalstatus_nilreason,
    airport_heliport.airportheliportavailability.warning_value,
    airport_heliport.airportheliportavailability.warning_nilreason;
create index on airport_heliport.airportheliportavailability_view (id);
-- AirportHeliportResponsibilityOrganisationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airportheliportresponsibilityorganisation_view cascade;
create materialized view airport_heliport.airportheliportresponsibilityorganisation_view as
select
    airport_heliport.airportheliportresponsibilityorganisation_pt.id,
    airport_heliport.airportheliportresponsibilityorganisation_pt.nilreason AS airportheliportresponsibilityorganisation_nilreason,
    coalesce(cast(airport_heliport.airportheliportresponsibilityorganisation.role_value as varchar), '(' || airport_heliport.airportheliportresponsibilityorganisation.role_nilreason || ')') as role,
    coalesce(cast(organisation_organisationauthority_pt_fsheor.title as varchar), '(' || organisation_organisationauthority_pt_fsheor.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_fsheor.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_qsfzat.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_qsfzat.title AS varchar), '(' || organisation_organisationauthority_pt_qsfzat.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_qsfzat.href)) AS specialdateauthority,
    jsonb_agg(notes_note_view_cbbdcr.*) AS annotation
from airport_heliport.airportheliportresponsibilityorganisation_pt 
inner join airport_heliport.airportheliportresponsibilityorganisation on airport_heliport.airportheliportresponsibilityorganisation_pt.airportheliportresponsibilityorganisation_id = airport_heliport.airportheliportresponsibilityorganisation.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_fsheor on airport_heliport.airportheliportresponsibilityorganisation.theorganisationauthority_id = organisation_organisationauthority_pt_fsheor.id
left join master_join master_join_udlqcb on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_udlqcb.source_id
left join shared.timesheet_view shared_timesheet_view_ejdskx on master_join_udlqcb.target_id = shared_timesheet_view_ejdskx.id
left join master_join master_join_kkghxx on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_kkghxx.source_id
left join notes.note_view notes_note_view_cbbdcr on master_join_kkghxx.target_id = notes_note_view_cbbdcr.id
left join master_join master_join_tfwseg on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_tfwseg.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_qsfzat on master_join_tfwseg.target_id = organisation_organisationauthority_pt_qsfzat.id
group by
    airport_heliport.airportheliportresponsibilityorganisation_pt.id,
    airport_heliport.airportheliportresponsibilityorganisation_pt.nilreason,
    airport_heliport.airportheliportresponsibilityorganisation.role_value,
    airport_heliport.airportheliportresponsibilityorganisation.role_nilreason,
    organisation_organisationauthority_pt_fsheor.title,
    organisation_organisationauthority_pt_fsheor.nilreason[1],
    organisation_organisationauthority_pt_fsheor.href;
create index on airport_heliport.airportheliportresponsibilityorganisation_view (id);
-- AirspaceActivationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airspace.airspaceactivation_view cascade;
create materialized view airspace.airspaceactivation_view as
select
    airspace.airspaceactivation_pt.id,
    airspace.airspaceactivation_pt.nilreason AS airspaceactivation_nilreason,
    coalesce(cast(airspace.airspaceactivation.activity_value as varchar), '(' || airspace.airspaceactivation.activity_nilreason || ')') as activity,
    coalesce(cast(airspace.airspaceactivation.status_value as varchar), '(' || airspace.airspaceactivation.status_nilreason || ')') as status,
    jsonb_agg(notes_note_view_seyzdj.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_drcbii.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_drcbii.title AS varchar), '(' || organisation_organisationauthority_pt_drcbii.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_drcbii.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_xdbdjk.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_xdbdjk.title AS varchar), '(' || organisation_organisationauthority_pt_xdbdjk.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_xdbdjk.href)) AS user,
    jsonb_agg(shared_airspacelayer_pt_whowtx.id) AS levels,
    jsonb_agg(shared_aircraftcharacteristic_pt_bunden.id) AS aircraft
from airspace.airspaceactivation_pt 
inner join airspace.airspaceactivation on airspace.airspaceactivation_pt.airspaceactivation_id = airspace.airspaceactivation.id
left join master_join master_join_nthnfm on airspace.airspaceactivation.id = master_join_nthnfm.source_id
left join shared.timesheet_view shared_timesheet_view_blhzjm on master_join_nthnfm.target_id = shared_timesheet_view_blhzjm.id
left join master_join master_join_dhktiy on airspace.airspaceactivation.id = master_join_dhktiy.source_id
left join notes.note_view notes_note_view_seyzdj on master_join_dhktiy.target_id = notes_note_view_seyzdj.id
left join master_join master_join_mylxtw on airspace.airspaceactivation.id = master_join_mylxtw.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_drcbii on master_join_mylxtw.target_id = organisation_organisationauthority_pt_drcbii.id
left join master_join master_join_plcdgk on airspace.airspaceactivation.id = master_join_plcdgk.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_whowtx on master_join_plcdgk.target_id = shared_airspacelayer_pt_whowtx.id
left join master_join master_join_fanswa on airspace.airspaceactivation.id = master_join_fanswa.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_xdbdjk on master_join_fanswa.target_id = organisation_organisationauthority_pt_xdbdjk.id
left join master_join master_join_digmnx on airspace.airspaceactivation.id = master_join_digmnx.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_bunden on master_join_digmnx.target_id = shared_aircraftcharacteristic_pt_bunden.id
group by
    airspace.airspaceactivation_pt.id,
    airspace.airspaceactivation_pt.nilreason,
    airspace.airspaceactivation.activity_value,
    airspace.airspaceactivation.activity_nilreason,
    airspace.airspaceactivation.status_value,
    airspace.airspaceactivation.status_nilreason;
create index on airspace.airspaceactivation_view (id);
-- AirspaceLayerClassPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airspace.airspacelayerclass_view cascade;
create materialized view airspace.airspacelayerclass_view as
select
    airspace.airspacelayerclass_pt.id,
    airspace.airspacelayerclass_pt.nilreason AS airspacelayerclass_nilreason,
    coalesce(cast(airspace.airspacelayerclass.classification_value as varchar), '(' || airspace.airspacelayerclass.classification_nilreason || ')') as classification,
    jsonb_agg(notes_note_view_fprrmg.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_lfiqdh.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_lfiqdh.title AS varchar), '(' || organisation_organisationauthority_pt_lfiqdh.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_lfiqdh.href)) AS specialdateauthority,
    jsonb_agg(shared_airspacelayer_pt_kkhpls.id) AS associatedlevels
from airspace.airspacelayerclass_pt 
inner join airspace.airspacelayerclass on airspace.airspacelayerclass_pt.airspacelayerclass_id = airspace.airspacelayerclass.id
left join master_join master_join_klpuaz on airspace.airspacelayerclass.id = master_join_klpuaz.source_id
left join shared.timesheet_view shared_timesheet_view_gplaop on master_join_klpuaz.target_id = shared_timesheet_view_gplaop.id
left join master_join master_join_wjmptf on airspace.airspacelayerclass.id = master_join_wjmptf.source_id
left join notes.note_view notes_note_view_fprrmg on master_join_wjmptf.target_id = notes_note_view_fprrmg.id
left join master_join master_join_afnmec on airspace.airspacelayerclass.id = master_join_afnmec.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_lfiqdh on master_join_afnmec.target_id = organisation_organisationauthority_pt_lfiqdh.id
left join master_join master_join_awwiye on airspace.airspacelayerclass.id = master_join_awwiye.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_kkhpls on master_join_awwiye.target_id = shared_airspacelayer_pt_kkhpls.id
group by
    airspace.airspacelayerclass_pt.id,
    airspace.airspacelayerclass_pt.nilreason,
    airspace.airspacelayerclass.classification_value,
    airspace.airspacelayerclass.classification_nilreason;
create index on airspace.airspacelayerclass_view (id);
-- AltimeterSourceStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.altimetersourcestatus_view cascade;
create materialized view airport_heliport.altimetersourcestatus_view as
select
    airport_heliport.altimetersourcestatus_pt.id,
    airport_heliport.altimetersourcestatus_pt.nilreason AS altimetersourcestatus_nilreason,
    coalesce(cast(airport_heliport.altimetersourcestatus.operationalstatus_value as varchar), '(' || airport_heliport.altimetersourcestatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(notes_note_view_xfrxod.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_scklat.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_scklat.title AS varchar), '(' || organisation_organisationauthority_pt_scklat.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_scklat.href)) AS specialdateauthority
from airport_heliport.altimetersourcestatus_pt 
inner join airport_heliport.altimetersourcestatus on airport_heliport.altimetersourcestatus_pt.altimetersourcestatus_id = airport_heliport.altimetersourcestatus.id
left join master_join master_join_mxzdao on airport_heliport.altimetersourcestatus.id = master_join_mxzdao.source_id
left join shared.timesheet_view shared_timesheet_view_nwjfyz on master_join_mxzdao.target_id = shared_timesheet_view_nwjfyz.id
left join master_join master_join_jgoeut on airport_heliport.altimetersourcestatus.id = master_join_jgoeut.source_id
left join notes.note_view notes_note_view_xfrxod on master_join_jgoeut.target_id = notes_note_view_xfrxod.id
left join master_join master_join_qbwetf on airport_heliport.altimetersourcestatus.id = master_join_qbwetf.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_scklat on master_join_qbwetf.target_id = organisation_organisationauthority_pt_scklat.id
group by
    airport_heliport.altimetersourcestatus_pt.id,
    airport_heliport.altimetersourcestatus_pt.nilreason,
    airport_heliport.altimetersourcestatus.operationalstatus_value,
    airport_heliport.altimetersourcestatus.operationalstatus_nilreason;
create index on airport_heliport.altimetersourcestatus_view (id);
-- ApronAreaAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.apronareaavailability_view cascade;
create materialized view airport_heliport.apronareaavailability_view as
select
    airport_heliport.apronareaavailability_pt.id,
    airport_heliport.apronareaavailability_pt.nilreason AS apronareaavailability_nilreason,
    coalesce(cast(airport_heliport.apronareaavailability.operationalstatus_value as varchar), '(' || airport_heliport.apronareaavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.apronareaavailability.warning_value as varchar), '(' || airport_heliport.apronareaavailability.warning_nilreason || ')') as warning,
    jsonb_agg(notes_note_view_qjzohq.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_pbwmmn.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_pbwmmn.title AS varchar), '(' || organisation_organisationauthority_pt_pbwmmn.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_pbwmmn.href)) AS specialdateauthority,
    jsonb_agg(airport_heliport_apronareausage_pt_kmeomy.id) AS usage
from airport_heliport.apronareaavailability_pt 
inner join airport_heliport.apronareaavailability on airport_heliport.apronareaavailability_pt.apronareaavailability_id = airport_heliport.apronareaavailability.id
left join master_join master_join_fwaveo on airport_heliport.apronareaavailability.id = master_join_fwaveo.source_id
left join shared.timesheet_view shared_timesheet_view_jjmeko on master_join_fwaveo.target_id = shared_timesheet_view_jjmeko.id
left join master_join master_join_mizqgv on airport_heliport.apronareaavailability.id = master_join_mizqgv.source_id
left join notes.note_view notes_note_view_qjzohq on master_join_mizqgv.target_id = notes_note_view_qjzohq.id
left join master_join master_join_ajryni on airport_heliport.apronareaavailability.id = master_join_ajryni.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_pbwmmn on master_join_ajryni.target_id = organisation_organisationauthority_pt_pbwmmn.id
left join master_join master_join_oupjoz on airport_heliport.apronareaavailability.id = master_join_oupjoz.source_id
left join airport_heliport.apronareausage_pt airport_heliport_apronareausage_pt_kmeomy on master_join_oupjoz.target_id = airport_heliport_apronareausage_pt_kmeomy.id
group by
    airport_heliport.apronareaavailability_pt.id,
    airport_heliport.apronareaavailability_pt.nilreason,
    airport_heliport.apronareaavailability.operationalstatus_value,
    airport_heliport.apronareaavailability.operationalstatus_nilreason,
    airport_heliport.apronareaavailability.warning_value,
    airport_heliport.apronareaavailability.warning_nilreason;
create index on airport_heliport.apronareaavailability_view (id);
-- CirclingRestrictionPropertyType
-- ['shared.timesheet_view', 'geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.circlingrestriction_view cascade;
create materialized view procedure.circlingrestriction_view as
select
    procedure.circlingrestriction_pt.id,
    procedure.circlingrestriction_pt.nilreason AS circlingrestriction_nilreason,
    shared_circlesector_pt_ylapsq.id AS sectordescription,
    geometry_surface_view_vifeqz.geom AS restrictionarea_geom,
    geometry_surface_view_vifeqz.horizontalAccuracy as restrictionarea_horizontalaccuracy,
    jsonb_agg(notes_note_view_rugwvd.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_whqxfg.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_whqxfg.title AS varchar), '(' || organisation_organisationauthority_pt_whqxfg.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_whqxfg.href)) AS specialdateauthority
from procedure.circlingrestriction_pt 
inner join procedure.circlingrestriction on procedure.circlingrestriction_pt.circlingrestriction_id = procedure.circlingrestriction.id
left join shared.circlesector_pt shared_circlesector_pt_ylapsq on procedure.circlingrestriction.sectordescription_id = shared_circlesector_pt_ylapsq.id
left join geometry.surface_view geometry_surface_view_vifeqz on procedure.circlingrestriction.restrictionarea_id = geometry_surface_view_vifeqz.id
left join master_join master_join_okhmbd on procedure.circlingrestriction.id = master_join_okhmbd.source_id
left join shared.timesheet_view shared_timesheet_view_viwuoj on master_join_okhmbd.target_id = shared_timesheet_view_viwuoj.id
left join master_join master_join_dpwbcs on procedure.circlingrestriction.id = master_join_dpwbcs.source_id
left join notes.note_view notes_note_view_rugwvd on master_join_dpwbcs.target_id = notes_note_view_rugwvd.id
left join master_join master_join_fgamur on procedure.circlingrestriction.id = master_join_fgamur.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_whqxfg on master_join_fgamur.target_id = organisation_organisationauthority_pt_whqxfg.id
group by
    procedure.circlingrestriction_pt.id,
    procedure.circlingrestriction_pt.nilreason,
    shared_circlesector_pt_ylapsq.id,
    geometry_surface_view_vifeqz.geom,
    geometry_surface_view_vifeqz.horizontalAccuracy;
create index on procedure.circlingrestriction_view (id);
-- ConditionCombinationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.conditioncombination_view cascade;
create materialized view airport_heliport.conditioncombination_view as
select
    airport_heliport.conditioncombination_pt.id,
    airport_heliport.conditioncombination_pt.nilreason AS conditioncombination_nilreason,
    coalesce(cast(airport_heliport.conditioncombination.logicaloperator_value as varchar), '(' || airport_heliport.conditioncombination.logicaloperator_nilreason || ')') as logicaloperator,
    jsonb_agg(notes_note_view_pjybna.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_cylokf.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_cylokf.title AS varchar), '(' || organisation_organisationauthority_pt_cylokf.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_cylokf.href)) AS specialdateauthority,
    jsonb_agg(shared_meteorology_pt_tswfot.id) AS weather,
    jsonb_agg(shared_aircraftcharacteristic_pt_shkcmz.id) AS aircraft,
    jsonb_agg(shared_flightcharacteristic_pt_mysxrh.id) AS flight,
    jsonb_agg(airport_heliport_conditioncombination_pt_hzmfqt.id) AS subcondition
from airport_heliport.conditioncombination_pt 
inner join airport_heliport.conditioncombination on airport_heliport.conditioncombination_pt.conditioncombination_id = airport_heliport.conditioncombination.id
left join master_join master_join_tyoaeu on airport_heliport.conditioncombination.id = master_join_tyoaeu.source_id
left join shared.timesheet_view shared_timesheet_view_apexrc on master_join_tyoaeu.target_id = shared_timesheet_view_apexrc.id
left join master_join master_join_rvfufl on airport_heliport.conditioncombination.id = master_join_rvfufl.source_id
left join notes.note_view notes_note_view_pjybna on master_join_rvfufl.target_id = notes_note_view_pjybna.id
left join master_join master_join_udwdye on airport_heliport.conditioncombination.id = master_join_udwdye.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_cylokf on master_join_udwdye.target_id = organisation_organisationauthority_pt_cylokf.id
left join master_join master_join_juqpkm on airport_heliport.conditioncombination.id = master_join_juqpkm.source_id
left join shared.meteorology_pt shared_meteorology_pt_tswfot on master_join_juqpkm.target_id = shared_meteorology_pt_tswfot.id
left join master_join master_join_okmuir on airport_heliport.conditioncombination.id = master_join_okmuir.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_shkcmz on master_join_okmuir.target_id = shared_aircraftcharacteristic_pt_shkcmz.id
left join master_join master_join_tcdliu on airport_heliport.conditioncombination.id = master_join_tcdliu.source_id
left join shared.flightcharacteristic_pt shared_flightcharacteristic_pt_mysxrh on master_join_tcdliu.target_id = shared_flightcharacteristic_pt_mysxrh.id
left join master_join master_join_viuvix on airport_heliport.conditioncombination.id = master_join_viuvix.source_id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_hzmfqt on master_join_viuvix.target_id = airport_heliport_conditioncombination_pt_hzmfqt.id
group by
    airport_heliport.conditioncombination_pt.id,
    airport_heliport.conditioncombination_pt.nilreason,
    airport_heliport.conditioncombination.logicaloperator_value,
    airport_heliport.conditioncombination.logicaloperator_nilreason;
create index on airport_heliport.conditioncombination_view (id);
-- FlightConditionCombinationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists routes.flightconditioncombination_view cascade;
create materialized view routes.flightconditioncombination_view as
select
    routes.flightconditioncombination_pt.id,
    routes.flightconditioncombination_pt.nilreason AS flightconditioncombination_nilreason,
    coalesce(cast(routes.flightconditioncombination.logicaloperator_value as varchar), '(' || routes.flightconditioncombination.logicaloperator_nilreason || ')') as logicaloperator,
    jsonb_agg(notes_note_view_wlzbsq.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_pbhyef.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_pbhyef.title AS varchar), '(' || organisation_organisationauthority_pt_pbhyef.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_pbhyef.href)) AS specialdateauthority,
    jsonb_agg(routes_flightconditionelement_pt_ijjnes.id) AS element
from routes.flightconditioncombination_pt 
inner join routes.flightconditioncombination on routes.flightconditioncombination_pt.flightconditioncombination_id = routes.flightconditioncombination.id
left join master_join master_join_dvadlh on routes.flightconditioncombination.id = master_join_dvadlh.source_id
left join shared.timesheet_view shared_timesheet_view_bvtaqj on master_join_dvadlh.target_id = shared_timesheet_view_bvtaqj.id
left join master_join master_join_jhbcfu on routes.flightconditioncombination.id = master_join_jhbcfu.source_id
left join notes.note_view notes_note_view_wlzbsq on master_join_jhbcfu.target_id = notes_note_view_wlzbsq.id
left join master_join master_join_mqxomf on routes.flightconditioncombination.id = master_join_mqxomf.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_pbhyef on master_join_mqxomf.target_id = organisation_organisationauthority_pt_pbhyef.id
left join master_join master_join_ihwgdq on routes.flightconditioncombination.id = master_join_ihwgdq.source_id
left join routes.flightconditionelement_pt routes_flightconditionelement_pt_ijjnes on master_join_ihwgdq.target_id = routes_flightconditionelement_pt_ijjnes.id
group by
    routes.flightconditioncombination_pt.id,
    routes.flightconditioncombination_pt.nilreason,
    routes.flightconditioncombination.logicaloperator_value,
    routes.flightconditioncombination.logicaloperator_nilreason;
create index on routes.flightconditioncombination_view (id);
-- GroundLightingAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.groundlightingavailability_view cascade;
create materialized view airport_heliport.groundlightingavailability_view as
select
    airport_heliport.groundlightingavailability_pt.id,
    airport_heliport.groundlightingavailability_pt.nilreason AS groundlightingavailability_nilreason,
    coalesce(cast(airport_heliport.groundlightingavailability.operationalstatus_value as varchar), '(' || airport_heliport.groundlightingavailability.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(notes_note_view_mzgkef.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_dqpmpd.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_dqpmpd.title AS varchar), '(' || organisation_organisationauthority_pt_dqpmpd.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_dqpmpd.href)) AS specialdateauthority
from airport_heliport.groundlightingavailability_pt 
inner join airport_heliport.groundlightingavailability on airport_heliport.groundlightingavailability_pt.groundlightingavailability_id = airport_heliport.groundlightingavailability.id
left join master_join master_join_wcqamv on airport_heliport.groundlightingavailability.id = master_join_wcqamv.source_id
left join shared.timesheet_view shared_timesheet_view_lfjrqu on master_join_wcqamv.target_id = shared_timesheet_view_lfjrqu.id
left join master_join master_join_bodxat on airport_heliport.groundlightingavailability.id = master_join_bodxat.source_id
left join notes.note_view notes_note_view_mzgkef on master_join_bodxat.target_id = notes_note_view_mzgkef.id
left join master_join master_join_bxyaic on airport_heliport.groundlightingavailability.id = master_join_bxyaic.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_dqpmpd on master_join_bxyaic.target_id = organisation_organisationauthority_pt_dqpmpd.id
group by
    airport_heliport.groundlightingavailability_pt.id,
    airport_heliport.groundlightingavailability_pt.nilreason,
    airport_heliport.groundlightingavailability.operationalstatus_value,
    airport_heliport.groundlightingavailability.operationalstatus_nilreason;
create index on airport_heliport.groundlightingavailability_view (id);
-- LightElementStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.lightelementstatus_view cascade;
create materialized view shared.lightelementstatus_view as
select
    shared.lightelementstatus_pt.id,
    shared.lightelementstatus_pt.nilreason AS lightelementstatus_nilreason,
    coalesce(cast(shared.lightelementstatus.status_value as varchar), '(' || shared.lightelementstatus.status_nilreason || ')') as status,
    jsonb_agg(notes_note_view_iqicqa.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_wxpcup.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_wxpcup.title AS varchar), '(' || organisation_organisationauthority_pt_wxpcup.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_wxpcup.href)) AS specialdateauthority
from shared.lightelementstatus_pt 
inner join shared.lightelementstatus on shared.lightelementstatus_pt.lightelementstatus_id = shared.lightelementstatus.id
left join master_join master_join_zqulzw on shared.lightelementstatus.id = master_join_zqulzw.source_id
left join shared.timesheet_view shared_timesheet_view_apebal on master_join_zqulzw.target_id = shared_timesheet_view_apebal.id
left join master_join master_join_bubkus on shared.lightelementstatus.id = master_join_bubkus.source_id
left join notes.note_view notes_note_view_iqicqa on master_join_bubkus.target_id = notes_note_view_iqicqa.id
left join master_join master_join_jwpwxx on shared.lightelementstatus.id = master_join_jwpwxx.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_wxpcup on master_join_jwpwxx.target_id = organisation_organisationauthority_pt_wxpcup.id
group by
    shared.lightelementstatus_pt.id,
    shared.lightelementstatus_pt.nilreason,
    shared.lightelementstatus.status_value,
    shared.lightelementstatus.status_nilreason;
create index on shared.lightelementstatus_view (id);
-- ManoeuvringAreaAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.manoeuvringareaavailability_view cascade;
create materialized view airport_heliport.manoeuvringareaavailability_view as
select
    airport_heliport.manoeuvringareaavailability_pt.id,
    airport_heliport.manoeuvringareaavailability_pt.nilreason AS manoeuvringareaavailability_nilreason,
    coalesce(cast(airport_heliport.manoeuvringareaavailability.operationalstatus_value as varchar), '(' || airport_heliport.manoeuvringareaavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.manoeuvringareaavailability.warning_value as varchar), '(' || airport_heliport.manoeuvringareaavailability.warning_nilreason || ')') as warning,
    jsonb_agg(notes_note_view_bmhrna.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_xwnhft.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_xwnhft.title AS varchar), '(' || organisation_organisationauthority_pt_xwnhft.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_xwnhft.href)) AS specialdateauthority,
    jsonb_agg(airport_heliport_manoeuvringareausage_pt_unzmad.id) AS usage
from airport_heliport.manoeuvringareaavailability_pt 
inner join airport_heliport.manoeuvringareaavailability on airport_heliport.manoeuvringareaavailability_pt.manoeuvringareaavailability_id = airport_heliport.manoeuvringareaavailability.id
left join master_join master_join_jyaxaf on airport_heliport.manoeuvringareaavailability.id = master_join_jyaxaf.source_id
left join shared.timesheet_view shared_timesheet_view_sizzzc on master_join_jyaxaf.target_id = shared_timesheet_view_sizzzc.id
left join master_join master_join_hocogp on airport_heliport.manoeuvringareaavailability.id = master_join_hocogp.source_id
left join notes.note_view notes_note_view_bmhrna on master_join_hocogp.target_id = notes_note_view_bmhrna.id
left join master_join master_join_nimafc on airport_heliport.manoeuvringareaavailability.id = master_join_nimafc.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_xwnhft on master_join_nimafc.target_id = organisation_organisationauthority_pt_xwnhft.id
left join master_join master_join_zoxxor on airport_heliport.manoeuvringareaavailability.id = master_join_zoxxor.source_id
left join airport_heliport.manoeuvringareausage_pt airport_heliport_manoeuvringareausage_pt_unzmad on master_join_zoxxor.target_id = airport_heliport_manoeuvringareausage_pt_unzmad.id
group by
    airport_heliport.manoeuvringareaavailability_pt.id,
    airport_heliport.manoeuvringareaavailability_pt.nilreason,
    airport_heliport.manoeuvringareaavailability.operationalstatus_value,
    airport_heliport.manoeuvringareaavailability.operationalstatus_nilreason,
    airport_heliport.manoeuvringareaavailability.warning_value,
    airport_heliport.manoeuvringareaavailability.warning_nilreason;
create index on airport_heliport.manoeuvringareaavailability_view (id);
-- NavaidEquipmentMonitoringPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists navaids_points.navaidequipmentmonitoring_view cascade;
create materialized view navaids_points.navaidequipmentmonitoring_view as
select
    navaids_points.navaidequipmentmonitoring_pt.id,
    navaids_points.navaidequipmentmonitoring_pt.nilreason AS navaidequipmentmonitoring_nilreason,
    coalesce(cast(navaids_points.navaidequipmentmonitoring.monitored_value as varchar), '(' || navaids_points.navaidequipmentmonitoring.monitored_nilreason || ')') as monitored,
    jsonb_agg(notes_note_view_wbqkwa.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_nznwxl.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_nznwxl.title AS varchar), '(' || organisation_organisationauthority_pt_nznwxl.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_nznwxl.href)) AS specialdateauthority
from navaids_points.navaidequipmentmonitoring_pt 
inner join navaids_points.navaidequipmentmonitoring on navaids_points.navaidequipmentmonitoring_pt.navaidequipmentmonitoring_id = navaids_points.navaidequipmentmonitoring.id
left join master_join master_join_srpegx on navaids_points.navaidequipmentmonitoring.id = master_join_srpegx.source_id
left join shared.timesheet_view shared_timesheet_view_khyfwx on master_join_srpegx.target_id = shared_timesheet_view_khyfwx.id
left join master_join master_join_ouqxsd on navaids_points.navaidequipmentmonitoring.id = master_join_ouqxsd.source_id
left join notes.note_view notes_note_view_wbqkwa on master_join_ouqxsd.target_id = notes_note_view_wbqkwa.id
left join master_join master_join_yoknht on navaids_points.navaidequipmentmonitoring.id = master_join_yoknht.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_nznwxl on master_join_yoknht.target_id = organisation_organisationauthority_pt_nznwxl.id
group by
    navaids_points.navaidequipmentmonitoring_pt.id,
    navaids_points.navaidequipmentmonitoring_pt.nilreason,
    navaids_points.navaidequipmentmonitoring.monitored_value,
    navaids_points.navaidequipmentmonitoring.monitored_nilreason;
create index on navaids_points.navaidequipmentmonitoring_view (id);
-- NavaidOperationalStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists navaids_points.navaidoperationalstatus_view cascade;
create materialized view navaids_points.navaidoperationalstatus_view as
select
    navaids_points.navaidoperationalstatus_pt.id,
    navaids_points.navaidoperationalstatus_pt.nilreason AS navaidoperationalstatus_nilreason,
    coalesce(cast(navaids_points.navaidoperationalstatus.operationalstatus_value as varchar), '(' || navaids_points.navaidoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(navaids_points.navaidoperationalstatus.signaltype_value as varchar), '(' || navaids_points.navaidoperationalstatus.signaltype_nilreason || ')') as signaltype,
    jsonb_agg(notes_note_view_uvlffc.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_qlbams.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_qlbams.title AS varchar), '(' || organisation_organisationauthority_pt_qlbams.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_qlbams.href)) AS specialdateauthority
from navaids_points.navaidoperationalstatus_pt 
inner join navaids_points.navaidoperationalstatus on navaids_points.navaidoperationalstatus_pt.navaidoperationalstatus_id = navaids_points.navaidoperationalstatus.id
left join master_join master_join_myopgw on navaids_points.navaidoperationalstatus.id = master_join_myopgw.source_id
left join shared.timesheet_view shared_timesheet_view_mtyhwv on master_join_myopgw.target_id = shared_timesheet_view_mtyhwv.id
left join master_join master_join_ndmeih on navaids_points.navaidoperationalstatus.id = master_join_ndmeih.source_id
left join notes.note_view notes_note_view_uvlffc on master_join_ndmeih.target_id = notes_note_view_uvlffc.id
left join master_join master_join_dvznqp on navaids_points.navaidoperationalstatus.id = master_join_dvznqp.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_qlbams on master_join_dvznqp.target_id = organisation_organisationauthority_pt_qlbams.id
group by
    navaids_points.navaidoperationalstatus_pt.id,
    navaids_points.navaidoperationalstatus_pt.nilreason,
    navaids_points.navaidoperationalstatus.operationalstatus_value,
    navaids_points.navaidoperationalstatus.operationalstatus_nilreason,
    navaids_points.navaidoperationalstatus.signaltype_value,
    navaids_points.navaidoperationalstatus.signaltype_nilreason;
create index on navaids_points.navaidoperationalstatus_view (id);
-- OnlineContactPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.onlinecontact_view cascade;
create materialized view shared.onlinecontact_view as
select
    shared.onlinecontact_pt.id,
    shared.onlinecontact_pt.nilreason AS onlinecontact_nilreason,
    coalesce(cast(shared.onlinecontact.network_value as varchar), '(' || shared.onlinecontact.network_nilreason || ')') as network,
    coalesce(cast(shared.onlinecontact.linkage_value as varchar), '(' || shared.onlinecontact.linkage_nilreason || ')') as linkage,
    coalesce(cast(shared.onlinecontact.protocol_value as varchar), '(' || shared.onlinecontact.protocol_nilreason || ')') as protocol,
    coalesce(cast(shared.onlinecontact.email_value as varchar), '(' || shared.onlinecontact.email_nilreason || ')') as email,
    jsonb_agg(notes_note_view_afmrpc.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_cewrir.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_cewrir.title AS varchar), '(' || organisation_organisationauthority_pt_cewrir.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_cewrir.href)) AS specialdateauthority
from shared.onlinecontact_pt 
inner join shared.onlinecontact on shared.onlinecontact_pt.onlinecontact_id = shared.onlinecontact.id
left join master_join master_join_xlbpxe on shared.onlinecontact.id = master_join_xlbpxe.source_id
left join shared.timesheet_view shared_timesheet_view_cpshan on master_join_xlbpxe.target_id = shared_timesheet_view_cpshan.id
left join master_join master_join_axnszu on shared.onlinecontact.id = master_join_axnszu.source_id
left join notes.note_view notes_note_view_afmrpc on master_join_axnszu.target_id = notes_note_view_afmrpc.id
left join master_join master_join_cdlocj on shared.onlinecontact.id = master_join_cdlocj.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_cewrir on master_join_cdlocj.target_id = organisation_organisationauthority_pt_cewrir.id
group by
    shared.onlinecontact_pt.id,
    shared.onlinecontact_pt.nilreason,
    shared.onlinecontact.network_value,
    shared.onlinecontact.network_nilreason,
    shared.onlinecontact.linkage_value,
    shared.onlinecontact.linkage_nilreason,
    shared.onlinecontact.protocol_value,
    shared.onlinecontact.protocol_nilreason,
    shared.onlinecontact.email_value,
    shared.onlinecontact.email_nilreason;
create index on shared.onlinecontact_view (id);
-- PostalAddressPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.postaladdress_view cascade;
create materialized view shared.postaladdress_view as
select
    shared.postaladdress_pt.id,
    shared.postaladdress_pt.nilreason AS postaladdress_nilreason,
    coalesce(cast(shared.postaladdress.deliverypoint_value as varchar), '(' || shared.postaladdress.deliverypoint_nilreason || ')') as deliverypoint,
    coalesce(cast(shared.postaladdress.city_value as varchar), '(' || shared.postaladdress.city_nilreason || ')') as city,
    coalesce(cast(shared.postaladdress.administrativearea_value as varchar), '(' || shared.postaladdress.administrativearea_nilreason || ')') as administrativearea,
    coalesce(cast(shared.postaladdress.postalcode_value as varchar), '(' || shared.postaladdress.postalcode_nilreason || ')') as postalcode,
    coalesce(cast(shared.postaladdress.country_value as varchar), '(' || shared.postaladdress.country_nilreason || ')') as country,
    jsonb_agg(notes_note_view_rzyxuw.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_hkmskc.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_hkmskc.title AS varchar), '(' || organisation_organisationauthority_pt_hkmskc.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_hkmskc.href)) AS specialdateauthority
from shared.postaladdress_pt 
inner join shared.postaladdress on shared.postaladdress_pt.postaladdress_id = shared.postaladdress.id
left join master_join master_join_szsltr on shared.postaladdress.id = master_join_szsltr.source_id
left join shared.timesheet_view shared_timesheet_view_lywtal on master_join_szsltr.target_id = shared_timesheet_view_lywtal.id
left join master_join master_join_ggtpfi on shared.postaladdress.id = master_join_ggtpfi.source_id
left join notes.note_view notes_note_view_rzyxuw on master_join_ggtpfi.target_id = notes_note_view_rzyxuw.id
left join master_join master_join_fcvmnr on shared.postaladdress.id = master_join_fcvmnr.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_hkmskc on master_join_fcvmnr.target_id = organisation_organisationauthority_pt_hkmskc.id
group by
    shared.postaladdress_pt.id,
    shared.postaladdress_pt.nilreason,
    shared.postaladdress.deliverypoint_value,
    shared.postaladdress.deliverypoint_nilreason,
    shared.postaladdress.city_value,
    shared.postaladdress.city_nilreason,
    shared.postaladdress.administrativearea_value,
    shared.postaladdress.administrativearea_nilreason,
    shared.postaladdress.postalcode_value,
    shared.postaladdress.postalcode_nilreason,
    shared.postaladdress.country_value,
    shared.postaladdress.country_nilreason;
create index on shared.postaladdress_view (id);
-- ProcedureAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists procedure.procedureavailability_view cascade;
create materialized view procedure.procedureavailability_view as
select
    procedure.procedureavailability_pt.id,
    procedure.procedureavailability_pt.nilreason AS procedureavailability_nilreason,
    coalesce(cast(procedure.procedureavailability.status_value as varchar), '(' || procedure.procedureavailability.status_nilreason || ')') as status,
    jsonb_agg(notes_note_view_kcysdf.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_gsrjbt.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_gsrjbt.title AS varchar), '(' || organisation_organisationauthority_pt_gsrjbt.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_gsrjbt.href)) AS specialdateauthority
from procedure.procedureavailability_pt 
inner join procedure.procedureavailability on procedure.procedureavailability_pt.procedureavailability_id = procedure.procedureavailability.id
left join master_join master_join_sfralm on procedure.procedureavailability.id = master_join_sfralm.source_id
left join shared.timesheet_view shared_timesheet_view_utdvzs on master_join_sfralm.target_id = shared_timesheet_view_utdvzs.id
left join master_join master_join_xufjjx on procedure.procedureavailability.id = master_join_xufjjx.source_id
left join notes.note_view notes_note_view_kcysdf on master_join_xufjjx.target_id = notes_note_view_kcysdf.id
left join master_join master_join_dzbpjh on procedure.procedureavailability.id = master_join_dzbpjh.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_gsrjbt on master_join_dzbpjh.target_id = organisation_organisationauthority_pt_gsrjbt.id
group by
    procedure.procedureavailability_pt.id,
    procedure.procedureavailability_pt.nilreason,
    procedure.procedureavailability.status_value,
    procedure.procedureavailability.status_nilreason;
create index on procedure.procedureavailability_view (id);
-- RadioCommunicationOperationalStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists service.radiocommunicationoperationalstatus_view cascade;
create materialized view service.radiocommunicationoperationalstatus_view as
select
    service.radiocommunicationoperationalstatus_pt.id,
    service.radiocommunicationoperationalstatus_pt.nilreason AS radiocommunicationoperationalstatus_nilreason,
    coalesce(cast(service.radiocommunicationoperationalstatus.operationalstatus_value as varchar), '(' || service.radiocommunicationoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(notes_note_view_hlydzv.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_gxqrbp.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_gxqrbp.title AS varchar), '(' || organisation_organisationauthority_pt_gxqrbp.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_gxqrbp.href)) AS specialdateauthority
from service.radiocommunicationoperationalstatus_pt 
inner join service.radiocommunicationoperationalstatus on service.radiocommunicationoperationalstatus_pt.radiocommunicationoperationalstatus_id = service.radiocommunicationoperationalstatus.id
left join master_join master_join_hyhrir on service.radiocommunicationoperationalstatus.id = master_join_hyhrir.source_id
left join shared.timesheet_view shared_timesheet_view_tymelo on master_join_hyhrir.target_id = shared_timesheet_view_tymelo.id
left join master_join master_join_dgtqbg on service.radiocommunicationoperationalstatus.id = master_join_dgtqbg.source_id
left join notes.note_view notes_note_view_hlydzv on master_join_dgtqbg.target_id = notes_note_view_hlydzv.id
left join master_join master_join_pjjhpp on service.radiocommunicationoperationalstatus.id = master_join_pjjhpp.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_gxqrbp on master_join_pjjhpp.target_id = organisation_organisationauthority_pt_gxqrbp.id
group by
    service.radiocommunicationoperationalstatus_pt.id,
    service.radiocommunicationoperationalstatus_pt.nilreason,
    service.radiocommunicationoperationalstatus.operationalstatus_value,
    service.radiocommunicationoperationalstatus.operationalstatus_nilreason;
create index on service.radiocommunicationoperationalstatus_view (id);
-- RouteAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists routes.routeavailability_view cascade;
create materialized view routes.routeavailability_view as
select
    routes.routeavailability_pt.id,
    routes.routeavailability_pt.nilreason AS routeavailability_nilreason,
    coalesce(cast(routes.routeavailability.direction_value as varchar), '(' || routes.routeavailability.direction_nilreason || ')') as direction,
    coalesce(cast(routes.routeavailability.cardinaldirection_value as varchar), '(' || routes.routeavailability.cardinaldirection_nilreason || ')') as cardinaldirection,
    coalesce(cast(routes.routeavailability.status_value as varchar), '(' || routes.routeavailability.status_nilreason || ')') as status,
    jsonb_agg(notes_note_view_jmmadg.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_sypyjq.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_sypyjq.title AS varchar), '(' || organisation_organisationauthority_pt_sypyjq.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_sypyjq.href)) AS specialdateauthority,
    jsonb_agg(shared_airspacelayer_pt_jqmlym.id) AS levels
from routes.routeavailability_pt 
inner join routes.routeavailability on routes.routeavailability_pt.routeavailability_id = routes.routeavailability.id
left join master_join master_join_gthyew on routes.routeavailability.id = master_join_gthyew.source_id
left join shared.timesheet_view shared_timesheet_view_gkjfud on master_join_gthyew.target_id = shared_timesheet_view_gkjfud.id
left join master_join master_join_lqznmi on routes.routeavailability.id = master_join_lqznmi.source_id
left join notes.note_view notes_note_view_jmmadg on master_join_lqznmi.target_id = notes_note_view_jmmadg.id
left join master_join master_join_usefjb on routes.routeavailability.id = master_join_usefjb.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_sypyjq on master_join_usefjb.target_id = organisation_organisationauthority_pt_sypyjq.id
left join master_join master_join_wrakys on routes.routeavailability.id = master_join_wrakys.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_jqmlym on master_join_wrakys.target_id = shared_airspacelayer_pt_jqmlym.id
group by
    routes.routeavailability_pt.id,
    routes.routeavailability_pt.nilreason,
    routes.routeavailability.direction_value,
    routes.routeavailability.direction_nilreason,
    routes.routeavailability.cardinaldirection_value,
    routes.routeavailability.cardinaldirection_nilreason,
    routes.routeavailability.status_value,
    routes.routeavailability.status_nilreason;
create index on routes.routeavailability_view (id);
-- RunwayDeclaredDistanceValuePropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwaydeclareddistancevalue_view cascade;
create materialized view airport_heliport.runwaydeclareddistancevalue_view as
select
    airport_heliport.runwaydeclareddistancevalue_pt.id,
    airport_heliport.runwaydeclareddistancevalue_pt.nilreason AS runwaydeclareddistancevalue_nilreason,
    coalesce(cast(airport_heliport.runwaydeclareddistancevalue.distance_value as varchar) || ' ' || airport_heliport.runwaydeclareddistancevalue.distance_uom, '(' || airport_heliport.runwaydeclareddistancevalue.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_value as varchar) || ' ' || airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_uom, '(' || airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_nilreason || ')') as distanceaccuracy,
    jsonb_agg(notes_note_view_emyyiw.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_tgpxla.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_tgpxla.title AS varchar), '(' || organisation_organisationauthority_pt_tgpxla.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_tgpxla.href)) AS specialdateauthority
from airport_heliport.runwaydeclareddistancevalue_pt 
inner join airport_heliport.runwaydeclareddistancevalue on airport_heliport.runwaydeclareddistancevalue_pt.runwaydeclareddistancevalue_id = airport_heliport.runwaydeclareddistancevalue.id
left join master_join master_join_vxsauw on airport_heliport.runwaydeclareddistancevalue.id = master_join_vxsauw.source_id
left join shared.timesheet_view shared_timesheet_view_feakwl on master_join_vxsauw.target_id = shared_timesheet_view_feakwl.id
left join master_join master_join_nfbego on airport_heliport.runwaydeclareddistancevalue.id = master_join_nfbego.source_id
left join notes.note_view notes_note_view_emyyiw on master_join_nfbego.target_id = notes_note_view_emyyiw.id
left join master_join master_join_ycwzcj on airport_heliport.runwaydeclareddistancevalue.id = master_join_ycwzcj.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_tgpxla on master_join_ycwzcj.target_id = organisation_organisationauthority_pt_tgpxla.id
group by
    airport_heliport.runwaydeclareddistancevalue_pt.id,
    airport_heliport.runwaydeclareddistancevalue_pt.nilreason,
    airport_heliport.runwaydeclareddistancevalue.distance_value,
    airport_heliport.runwaydeclareddistancevalue.distance_uom,
    airport_heliport.runwaydeclareddistancevalue.distance_nilreason,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_value,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_uom,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_nilreason;
create index on airport_heliport.runwaydeclareddistancevalue_view (id);
-- ServiceOperationalStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists service.serviceoperationalstatus_view cascade;
create materialized view service.serviceoperationalstatus_view as
select
    service.serviceoperationalstatus_pt.id,
    service.serviceoperationalstatus_pt.nilreason AS serviceoperationalstatus_nilreason,
    coalesce(cast(service.serviceoperationalstatus.operationalstatus_value as varchar), '(' || service.serviceoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(notes_note_view_wwfvre.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ngouik.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ngouik.title AS varchar), '(' || organisation_organisationauthority_pt_ngouik.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ngouik.href)) AS specialdateauthority
from service.serviceoperationalstatus_pt 
inner join service.serviceoperationalstatus on service.serviceoperationalstatus_pt.serviceoperationalstatus_id = service.serviceoperationalstatus.id
left join master_join master_join_wpqxmu on service.serviceoperationalstatus.id = master_join_wpqxmu.source_id
left join shared.timesheet_view shared_timesheet_view_fjhdgz on master_join_wpqxmu.target_id = shared_timesheet_view_fjhdgz.id
left join master_join master_join_idvqfr on service.serviceoperationalstatus.id = master_join_idvqfr.source_id
left join notes.note_view notes_note_view_wwfvre on master_join_idvqfr.target_id = notes_note_view_wwfvre.id
left join master_join master_join_fpxbpu on service.serviceoperationalstatus.id = master_join_fpxbpu.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ngouik on master_join_fpxbpu.target_id = organisation_organisationauthority_pt_ngouik.id
group by
    service.serviceoperationalstatus_pt.id,
    service.serviceoperationalstatus_pt.nilreason,
    service.serviceoperationalstatus.operationalstatus_value,
    service.serviceoperationalstatus.operationalstatus_nilreason;
create index on service.serviceoperationalstatus_view (id);
-- SpecialNavigationStationStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists navaids_points.specialnavigationstationstatus_view cascade;
create materialized view navaids_points.specialnavigationstationstatus_view as
select
    navaids_points.specialnavigationstationstatus_pt.id,
    navaids_points.specialnavigationstationstatus_pt.nilreason AS specialnavigationstationstatus_nilreason,
    coalesce(cast(navaids_points.specialnavigationstationstatus.operationalstatus_value as varchar), '(' || navaids_points.specialnavigationstationstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(notes_note_view_fduktg.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_yukoan.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_yukoan.title AS varchar), '(' || organisation_organisationauthority_pt_yukoan.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_yukoan.href)) AS specialdateauthority
from navaids_points.specialnavigationstationstatus_pt 
inner join navaids_points.specialnavigationstationstatus on navaids_points.specialnavigationstationstatus_pt.specialnavigationstationstatus_id = navaids_points.specialnavigationstationstatus.id
left join master_join master_join_fedqhh on navaids_points.specialnavigationstationstatus.id = master_join_fedqhh.source_id
left join shared.timesheet_view shared_timesheet_view_pvwysz on master_join_fedqhh.target_id = shared_timesheet_view_pvwysz.id
left join master_join master_join_xmnclf on navaids_points.specialnavigationstationstatus.id = master_join_xmnclf.source_id
left join notes.note_view notes_note_view_fduktg on master_join_xmnclf.target_id = notes_note_view_fduktg.id
left join master_join master_join_ektkhq on navaids_points.specialnavigationstationstatus.id = master_join_ektkhq.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_yukoan on master_join_ektkhq.target_id = organisation_organisationauthority_pt_yukoan.id
group by
    navaids_points.specialnavigationstationstatus_pt.id,
    navaids_points.specialnavigationstationstatus_pt.nilreason,
    navaids_points.specialnavigationstationstatus.operationalstatus_value,
    navaids_points.specialnavigationstationstatus.operationalstatus_nilreason;
create index on navaids_points.specialnavigationstationstatus_view (id);
-- TelephoneContactPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.telephonecontact_view cascade;
create materialized view shared.telephonecontact_view as
select
    shared.telephonecontact_pt.id,
    shared.telephonecontact_pt.nilreason AS telephonecontact_nilreason,
    coalesce(cast(shared.telephonecontact.voice_value as varchar), '(' || shared.telephonecontact.voice_nilreason || ')') as voice,
    coalesce(cast(shared.telephonecontact.facsimile_value as varchar), '(' || shared.telephonecontact.facsimile_nilreason || ')') as facsimile,
    jsonb_agg(notes_note_view_umqgbi.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_bkwrha.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_bkwrha.title AS varchar), '(' || organisation_organisationauthority_pt_bkwrha.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_bkwrha.href)) AS specialdateauthority
from shared.telephonecontact_pt 
inner join shared.telephonecontact on shared.telephonecontact_pt.telephonecontact_id = shared.telephonecontact.id
left join master_join master_join_zhmggf on shared.telephonecontact.id = master_join_zhmggf.source_id
left join shared.timesheet_view shared_timesheet_view_haxquu on master_join_zhmggf.target_id = shared_timesheet_view_haxquu.id
left join master_join master_join_uaqlva on shared.telephonecontact.id = master_join_uaqlva.source_id
left join notes.note_view notes_note_view_umqgbi on master_join_uaqlva.target_id = notes_note_view_umqgbi.id
left join master_join master_join_cryjpy on shared.telephonecontact.id = master_join_cryjpy.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_bkwrha on master_join_cryjpy.target_id = organisation_organisationauthority_pt_bkwrha.id
group by
    shared.telephonecontact_pt.id,
    shared.telephonecontact_pt.nilreason,
    shared.telephonecontact.voice_value,
    shared.telephonecontact.voice_nilreason,
    shared.telephonecontact.facsimile_value,
    shared.telephonecontact.facsimile_nilreason;
create index on shared.telephonecontact_view (id);
-- UnitAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists organisation.unitavailability_view cascade;
create materialized view organisation.unitavailability_view as
select
    organisation.unitavailability_pt.id,
    organisation.unitavailability_pt.nilreason AS unitavailability_nilreason,
    coalesce(cast(organisation.unitavailability.operationalstatus_value as varchar), '(' || organisation.unitavailability.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(notes_note_view_emkvzm.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_thloat.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_thloat.title AS varchar), '(' || organisation_organisationauthority_pt_thloat.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_thloat.href)) AS specialdateauthority
from organisation.unitavailability_pt 
inner join organisation.unitavailability on organisation.unitavailability_pt.unitavailability_id = organisation.unitavailability.id
left join master_join master_join_plcuxo on organisation.unitavailability.id = master_join_plcuxo.source_id
left join shared.timesheet_view shared_timesheet_view_npcbul on master_join_plcuxo.target_id = shared_timesheet_view_npcbul.id
left join master_join master_join_gebpjb on organisation.unitavailability.id = master_join_gebpjb.source_id
left join notes.note_view notes_note_view_emkvzm on master_join_gebpjb.target_id = notes_note_view_emkvzm.id
left join master_join master_join_gigxiq on organisation.unitavailability.id = master_join_gigxiq.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_thloat on master_join_gigxiq.target_id = organisation_organisationauthority_pt_thloat.id
group by
    organisation.unitavailability_pt.id,
    organisation.unitavailability_pt.nilreason,
    organisation.unitavailability.operationalstatus_value,
    organisation.unitavailability.operationalstatus_nilreason;
create index on organisation.unitavailability_view (id);
-- VerticalStructureLightingStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists obstacles.verticalstructurelightingstatus_view cascade;
create materialized view obstacles.verticalstructurelightingstatus_view as
select
    obstacles.verticalstructurelightingstatus_pt.id,
    obstacles.verticalstructurelightingstatus_pt.nilreason AS verticalstructurelightingstatus_nilreason,
    coalesce(cast(obstacles.verticalstructurelightingstatus.status_value as varchar), '(' || obstacles.verticalstructurelightingstatus.status_nilreason || ')') as status,
    jsonb_agg(notes_note_view_shymap.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ivddiv.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ivddiv.title AS varchar), '(' || organisation_organisationauthority_pt_ivddiv.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ivddiv.href)) AS specialdateauthority
from obstacles.verticalstructurelightingstatus_pt 
inner join obstacles.verticalstructurelightingstatus on obstacles.verticalstructurelightingstatus_pt.verticalstructurelightingstatus_id = obstacles.verticalstructurelightingstatus.id
left join master_join master_join_nnwzps on obstacles.verticalstructurelightingstatus.id = master_join_nnwzps.source_id
left join shared.timesheet_view shared_timesheet_view_deljhs on master_join_nnwzps.target_id = shared_timesheet_view_deljhs.id
left join master_join master_join_sidhqp on obstacles.verticalstructurelightingstatus.id = master_join_sidhqp.source_id
left join notes.note_view notes_note_view_shymap on master_join_sidhqp.target_id = notes_note_view_shymap.id
left join master_join master_join_btyttg on obstacles.verticalstructurelightingstatus.id = master_join_btyttg.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ivddiv on master_join_btyttg.target_id = organisation_organisationauthority_pt_ivddiv.id
group by
    obstacles.verticalstructurelightingstatus_pt.id,
    obstacles.verticalstructurelightingstatus_pt.nilreason,
    obstacles.verticalstructurelightingstatus.status_value,
    obstacles.verticalstructurelightingstatus.status_nilreason;
create index on obstacles.verticalstructurelightingstatus_view (id);
-- VerticalStructurePartPropertyType
-- ['shared.timesheet_view', 'geometry.elevatedpoint_view', 'geometry.elevatedcurve_view', 'notes.note_view', 'geometry.elevatedsurface_view']
drop materialized view if exists obstacles.verticalstructurepart_view cascade;
create materialized view obstacles.verticalstructurepart_view as
select
    obstacles.verticalstructurepart_pt.id,
    obstacles.verticalstructurepart_pt.nilreason AS verticalstructurepart_nilreason,
    coalesce(cast(obstacles.verticalstructurepart.type_value as varchar), '(' || obstacles.verticalstructurepart.type_nilreason || ')') as type,
    coalesce(cast(obstacles.verticalstructurepart.constructionstatus_value as varchar), '(' || obstacles.verticalstructurepart.constructionstatus_nilreason || ')') as constructionstatus,
    coalesce(cast(obstacles.verticalstructurepart.markingpattern_value as varchar), '(' || obstacles.verticalstructurepart.markingpattern_nilreason || ')') as markingpattern,
    coalesce(cast(obstacles.verticalstructurepart.markingfirstcolour_value as varchar), '(' || obstacles.verticalstructurepart.markingfirstcolour_nilreason || ')') as markingfirstcolour,
    coalesce(cast(obstacles.verticalstructurepart.markingsecondcolour_value as varchar), '(' || obstacles.verticalstructurepart.markingsecondcolour_nilreason || ')') as markingsecondcolour,
    coalesce(cast(obstacles.verticalstructurepart.mobile_value as varchar), '(' || obstacles.verticalstructurepart.mobile_nilreason || ')') as mobile,
    coalesce(cast(obstacles.verticalstructurepart.frangible_value as varchar), '(' || obstacles.verticalstructurepart.frangible_nilreason || ')') as frangible,
    coalesce(cast(obstacles.verticalstructurepart.visiblematerial_value as varchar), '(' || obstacles.verticalstructurepart.visiblematerial_nilreason || ')') as visiblematerial,
    coalesce(cast(obstacles.verticalstructurepart.designator_value as varchar), '(' || obstacles.verticalstructurepart.designator_nilreason || ')') as designator,
    coalesce(cast(obstacles.verticalstructurepart.verticalextent_value as varchar) || ' ' || obstacles.verticalstructurepart.verticalextent_uom, '(' || obstacles.verticalstructurepart.verticalextent_nilreason || ')') as verticalextent,
    coalesce(cast(obstacles.verticalstructurepart.verticalextentaccuracy_value as varchar) || ' ' || obstacles.verticalstructurepart.verticalextentaccuracy_uom, '(' || obstacles.verticalstructurepart.verticalextentaccuracy_nilreason || ')') as verticalextentaccuracy,
    geometry_elevatedpoint_view_tbvgca.geom AS horizontalprojectionlocation_geom,
    ST_X(geometry_elevatedpoint_view_tbvgca.geom) AS horizontalprojectionlocation_longitude,
    ST_Y(geometry_elevatedpoint_view_tbvgca.geom) AS horizontalprojectionlocation_latitude,
    geometry_elevatedpoint_view_tbvgca.elevation AS horizontalprojectionlocation_elevation,
    geometry_elevatedpoint_view_tbvgca.geoidUndulation AS horizontalprojectionlocation_geoidundulation,
    geometry_elevatedpoint_view_tbvgca.verticalDatum AS horizontalprojectionlocation_verticaldatum,
    geometry_elevatedpoint_view_tbvgca.verticalAccuracy AS horizontalprojectionlocation_verticalaccuracy,
    geometry_elevatedpoint_view_tbvgca.horizontalAccuracy AS horizontalprojectionlocation_horizontalaccuracy,
    geometry_elevatedcurve_view_tsqyqy.geom AS horizontalprojectionlinearextent_geom,
    geometry_elevatedcurve_view_tsqyqy.elevation AS horizontalprojectionlinearextent_elevation,
    geometry_elevatedcurve_view_tsqyqy.geoidUndulation AS horizontalprojectionlinearextent_geoidundulation,
    geometry_elevatedcurve_view_tsqyqy.verticalDatum AS horizontalprojectionlinearextent_verticaldatum,
    geometry_elevatedcurve_view_tsqyqy.verticalAccuracy AS horizontalprojectionlinearextent_verticalaccuracy,
    geometry_elevatedcurve_view_tsqyqy.horizontalAccuracy AS horizontalprojectionlinearextent_horizontalaccuracy,
    geometry_elevatedsurface_view_zqrnwm.geom AS horizontalprojectionsurfaceextent_geom,
    geometry_elevatedsurface_view_zqrnwm.elevation AS horizontalprojectionsurfaceextent_elevation,
    geometry_elevatedsurface_view_zqrnwm.geoidUndulation AS horizontalprojectionsurfaceextent_geoidundulation,
    geometry_elevatedsurface_view_zqrnwm.verticalDatum AS horizontalprojectionsurfaceextent_verticaldatum,
    geometry_elevatedsurface_view_zqrnwm.verticalAccuracy AS horizontalprojectionsurfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_zqrnwm.horizontalAccuracy AS horizontalprojectionsurfaceextent_horizontalaccuracy,
    jsonb_agg(notes_note_view_oxajgx.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ysolex.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ysolex.title AS varchar), '(' || organisation_organisationauthority_pt_ysolex.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ysolex.href)) AS specialdateauthority,
    jsonb_agg(shared_lightelement_pt_fedzfl.id) AS lighting
from obstacles.verticalstructurepart_pt 
inner join obstacles.verticalstructurepart on obstacles.verticalstructurepart_pt.verticalstructurepart_id = obstacles.verticalstructurepart.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_tbvgca on obstacles.verticalstructurepart.horizontalprojection_location_id = geometry_elevatedpoint_view_tbvgca.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_tsqyqy on obstacles.verticalstructurepart.horizontalprojection_linearextent_id = geometry_elevatedcurve_view_tsqyqy.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_zqrnwm on obstacles.verticalstructurepart.horizontalprojection_surfaceextent_id = geometry_elevatedsurface_view_zqrnwm.id
left join master_join master_join_tpiuvv on obstacles.verticalstructurepart.id = master_join_tpiuvv.source_id
left join shared.timesheet_view shared_timesheet_view_mwoqzv on master_join_tpiuvv.target_id = shared_timesheet_view_mwoqzv.id
left join master_join master_join_ijcvls on obstacles.verticalstructurepart.id = master_join_ijcvls.source_id
left join notes.note_view notes_note_view_oxajgx on master_join_ijcvls.target_id = notes_note_view_oxajgx.id
left join master_join master_join_imwfsa on obstacles.verticalstructurepart.id = master_join_imwfsa.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ysolex on master_join_imwfsa.target_id = organisation_organisationauthority_pt_ysolex.id
left join master_join master_join_skvuze on obstacles.verticalstructurepart.id = master_join_skvuze.source_id
left join shared.lightelement_pt shared_lightelement_pt_fedzfl on master_join_skvuze.target_id = shared_lightelement_pt_fedzfl.id
group by
    obstacles.verticalstructurepart_pt.id,
    obstacles.verticalstructurepart_pt.nilreason,
    obstacles.verticalstructurepart.type_value,
    obstacles.verticalstructurepart.type_nilreason,
    obstacles.verticalstructurepart.constructionstatus_value,
    obstacles.verticalstructurepart.constructionstatus_nilreason,
    obstacles.verticalstructurepart.markingpattern_value,
    obstacles.verticalstructurepart.markingpattern_nilreason,
    obstacles.verticalstructurepart.markingfirstcolour_value,
    obstacles.verticalstructurepart.markingfirstcolour_nilreason,
    obstacles.verticalstructurepart.markingsecondcolour_value,
    obstacles.verticalstructurepart.markingsecondcolour_nilreason,
    obstacles.verticalstructurepart.mobile_value,
    obstacles.verticalstructurepart.mobile_nilreason,
    obstacles.verticalstructurepart.frangible_value,
    obstacles.verticalstructurepart.frangible_nilreason,
    obstacles.verticalstructurepart.visiblematerial_value,
    obstacles.verticalstructurepart.visiblematerial_nilreason,
    obstacles.verticalstructurepart.designator_value,
    obstacles.verticalstructurepart.designator_nilreason,
    obstacles.verticalstructurepart.verticalextent_value,
    obstacles.verticalstructurepart.verticalextent_uom,
    obstacles.verticalstructurepart.verticalextent_nilreason,
    obstacles.verticalstructurepart.verticalextentaccuracy_value,
    obstacles.verticalstructurepart.verticalextentaccuracy_uom,
    obstacles.verticalstructurepart.verticalextentaccuracy_nilreason,
    geometry_elevatedpoint_view_tbvgca.geom,
    geometry_elevatedpoint_view_tbvgca.elevation,
    geometry_elevatedpoint_view_tbvgca.geoidUndulation,
    geometry_elevatedpoint_view_tbvgca.verticalDatum,
    geometry_elevatedpoint_view_tbvgca.verticalAccuracy,
    geometry_elevatedpoint_view_tbvgca.horizontalAccuracy,
    geometry_elevatedcurve_view_tsqyqy.geom,
    geometry_elevatedcurve_view_tsqyqy.elevation,
    geometry_elevatedcurve_view_tsqyqy.geoidUndulation,
    geometry_elevatedcurve_view_tsqyqy.verticalDatum,
    geometry_elevatedcurve_view_tsqyqy.verticalAccuracy,
    geometry_elevatedcurve_view_tsqyqy.horizontalAccuracy,
    geometry_elevatedsurface_view_zqrnwm.geom,
    geometry_elevatedsurface_view_zqrnwm.elevation,
    geometry_elevatedsurface_view_zqrnwm.geoidUndulation,
    geometry_elevatedsurface_view_zqrnwm.verticalDatum,
    geometry_elevatedsurface_view_zqrnwm.verticalAccuracy,
    geometry_elevatedsurface_view_zqrnwm.horizontalAccuracy;
create index on obstacles.verticalstructurepart_view (id);
-- WorkareaActivityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.workareaactivity_view cascade;
create materialized view airport_heliport.workareaactivity_view as
select
    airport_heliport.workareaactivity_pt.id,
    airport_heliport.workareaactivity_pt.nilreason AS workareaactivity_nilreason,
    coalesce(cast(airport_heliport.workareaactivity.isactive_value as varchar), '(' || airport_heliport.workareaactivity.isactive_nilreason || ')') as isactive,
    jsonb_agg(notes_note_view_oonboi.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ifurhf.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ifurhf.title AS varchar), '(' || organisation_organisationauthority_pt_ifurhf.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ifurhf.href)) AS specialdateauthority
from airport_heliport.workareaactivity_pt 
inner join airport_heliport.workareaactivity on airport_heliport.workareaactivity_pt.workareaactivity_id = airport_heliport.workareaactivity.id
left join master_join master_join_itsnwr on airport_heliport.workareaactivity.id = master_join_itsnwr.source_id
left join shared.timesheet_view shared_timesheet_view_jkgapg on master_join_itsnwr.target_id = shared_timesheet_view_jkgapg.id
left join master_join master_join_donfnk on airport_heliport.workareaactivity.id = master_join_donfnk.source_id
left join notes.note_view notes_note_view_oonboi on master_join_donfnk.target_id = notes_note_view_oonboi.id
left join master_join master_join_rexgtv on airport_heliport.workareaactivity.id = master_join_rexgtv.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ifurhf on master_join_rexgtv.target_id = organisation_organisationauthority_pt_ifurhf.id
group by
    airport_heliport.workareaactivity_pt.id,
    airport_heliport.workareaactivity_pt.nilreason,
    airport_heliport.workareaactivity.isactive_value,
    airport_heliport.workareaactivity.isactive_nilreason;
create index on airport_heliport.workareaactivity_view (id);
-- ContactInformationPropertyType
-- ['shared.telephonecontact_view', 'shared.postaladdress_view', 'notes.note_view', 'shared.onlinecontact_view']
-- Snowflake SQL : ContactInformationPropertyType 

DROP MATERIALIZED VIEW IF EXISTS shared.contactinformation_view CASCADE;

CREATE MATERIALIZED VIEW shared.contactinformation_view AS
SELECT 
0 AS id;
-- AirportHeliportUsagePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists airport_heliport.airportheliportusage_view cascade;
create materialized view airport_heliport.airportheliportusage_view as
select
    airport_heliport.airportheliportusage_pt.id,
    airport_heliport.airportheliportusage_pt.nilreason AS airportheliportusage_nilreason,
    coalesce(cast(airport_heliport.airportheliportusage.type_value as varchar), '(' || airport_heliport.airportheliportusage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.airportheliportusage.operation_value as varchar), '(' || airport_heliport.airportheliportusage.operation_nilreason || ')') as operation,
    coalesce(cast(airport_heliport.airportheliportusage.priorpermission_value as varchar) || ' ' || airport_heliport.airportheliportusage.priorpermission_uom, '(' || airport_heliport.airportheliportusage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_ktcqvf.id AS selection,
    jsonb_agg(notes_note_view_mhmlzr.*) AS annotation
from airport_heliport.airportheliportusage_pt 
inner join airport_heliport.airportheliportusage on airport_heliport.airportheliportusage_pt.airportheliportusage_id = airport_heliport.airportheliportusage.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_ktcqvf on airport_heliport.airportheliportusage.selection_id = airport_heliport_conditioncombination_pt_ktcqvf.id
left join master_join master_join_wrozcb on airport_heliport.airportheliportusage.id = master_join_wrozcb.source_id
left join shared.contactinformation_view shared_contactinformation_view_kdghoq on master_join_wrozcb.target_id = shared_contactinformation_view_kdghoq.id
left join master_join master_join_wperty on airport_heliport.airportheliportusage.id = master_join_wperty.source_id
left join notes.note_view notes_note_view_mhmlzr on master_join_wperty.target_id = notes_note_view_mhmlzr.id
group by
    airport_heliport.airportheliportusage_pt.id,
    airport_heliport.airportheliportusage_pt.nilreason,
    airport_heliport.airportheliportusage.type_value,
    airport_heliport.airportheliportusage.type_nilreason,
    airport_heliport.airportheliportusage.operation_value,
    airport_heliport.airportheliportusage.operation_nilreason,
    airport_heliport.airportheliportusage.priorpermission_value,
    airport_heliport.airportheliportusage.priorpermission_uom,
    airport_heliport.airportheliportusage.priorpermission_nilreason,
    airport_heliport_conditioncombination_pt_ktcqvf.id;
create index on airport_heliport.airportheliportusage_view (id);
-- ApronAreaUsagePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists airport_heliport.apronareausage_view cascade;
create materialized view airport_heliport.apronareausage_view as
select
    airport_heliport.apronareausage_pt.id,
    airport_heliport.apronareausage_pt.nilreason AS apronareausage_nilreason,
    coalesce(cast(airport_heliport.apronareausage.type_value as varchar), '(' || airport_heliport.apronareausage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.apronareausage.priorpermission_value as varchar) || ' ' || airport_heliport.apronareausage.priorpermission_uom, '(' || airport_heliport.apronareausage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_xrfocf.id AS selection,
    jsonb_agg(notes_note_view_lbqbej.*) AS annotation
from airport_heliport.apronareausage_pt 
inner join airport_heliport.apronareausage on airport_heliport.apronareausage_pt.apronareausage_id = airport_heliport.apronareausage.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_xrfocf on airport_heliport.apronareausage.selection_id = airport_heliport_conditioncombination_pt_xrfocf.id
left join master_join master_join_esxyco on airport_heliport.apronareausage.id = master_join_esxyco.source_id
left join shared.contactinformation_view shared_contactinformation_view_nuzkph on master_join_esxyco.target_id = shared_contactinformation_view_nuzkph.id
left join master_join master_join_khavbg on airport_heliport.apronareausage.id = master_join_khavbg.source_id
left join notes.note_view notes_note_view_lbqbej on master_join_khavbg.target_id = notes_note_view_lbqbej.id
group by
    airport_heliport.apronareausage_pt.id,
    airport_heliport.apronareausage_pt.nilreason,
    airport_heliport.apronareausage.type_value,
    airport_heliport.apronareausage.type_nilreason,
    airport_heliport.apronareausage.priorpermission_value,
    airport_heliport.apronareausage.priorpermission_uom,
    airport_heliport.apronareausage.priorpermission_nilreason,
    airport_heliport_conditioncombination_pt_xrfocf.id;
create index on airport_heliport.apronareausage_view (id);
-- FlightRestrictionRoutePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists routes.flightrestrictionroute_view cascade;
create materialized view routes.flightrestrictionroute_view as
select
    routes.flightrestrictionroute_pt.id,
    routes.flightrestrictionroute_pt.nilreason AS flightrestrictionroute_nilreason,
    coalesce(cast(routes.flightrestrictionroute.priorpermission_value as varchar), '(' || routes.flightrestrictionroute.priorpermission_nilreason || ')') as priorpermission,
    jsonb_agg(routes_flightroutingelement_pt_enzsqo.id) AS routeelement,
    jsonb_agg(notes_note_view_ojmtnl.*) AS annotation
from routes.flightrestrictionroute_pt 
inner join routes.flightrestrictionroute on routes.flightrestrictionroute_pt.flightrestrictionroute_id = routes.flightrestrictionroute.id
left join master_join master_join_ekkwrv on routes.flightrestrictionroute.id = master_join_ekkwrv.source_id
left join routes.flightroutingelement_pt routes_flightroutingelement_pt_enzsqo on master_join_ekkwrv.target_id = routes_flightroutingelement_pt_enzsqo.id
left join master_join master_join_thopoz on routes.flightrestrictionroute.id = master_join_thopoz.source_id
left join shared.contactinformation_view shared_contactinformation_view_dfjecp on master_join_thopoz.target_id = shared_contactinformation_view_dfjecp.id
left join master_join master_join_yetpyy on routes.flightrestrictionroute.id = master_join_yetpyy.source_id
left join notes.note_view notes_note_view_ojmtnl on master_join_yetpyy.target_id = notes_note_view_ojmtnl.id
group by
    routes.flightrestrictionroute_pt.id,
    routes.flightrestrictionroute_pt.nilreason,
    routes.flightrestrictionroute.priorpermission_value,
    routes.flightrestrictionroute.priorpermission_nilreason;
create index on routes.flightrestrictionroute_view (id);
-- ManoeuvringAreaUsagePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists airport_heliport.manoeuvringareausage_view cascade;
create materialized view airport_heliport.manoeuvringareausage_view as
select
    airport_heliport.manoeuvringareausage_pt.id,
    airport_heliport.manoeuvringareausage_pt.nilreason AS manoeuvringareausage_nilreason,
    coalesce(cast(airport_heliport.manoeuvringareausage.type_value as varchar), '(' || airport_heliport.manoeuvringareausage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.manoeuvringareausage.operation_value as varchar), '(' || airport_heliport.manoeuvringareausage.operation_nilreason || ')') as operation,
    coalesce(cast(airport_heliport.manoeuvringareausage.priorpermission_value as varchar) || ' ' || airport_heliport.manoeuvringareausage.priorpermission_uom, '(' || airport_heliport.manoeuvringareausage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_wdnfca.id AS selection,
    jsonb_agg(notes_note_view_ekpcwn.*) AS annotation
from airport_heliport.manoeuvringareausage_pt 
inner join airport_heliport.manoeuvringareausage on airport_heliport.manoeuvringareausage_pt.manoeuvringareausage_id = airport_heliport.manoeuvringareausage.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_wdnfca on airport_heliport.manoeuvringareausage.selection_id = airport_heliport_conditioncombination_pt_wdnfca.id
left join master_join master_join_kcmqbq on airport_heliport.manoeuvringareausage.id = master_join_kcmqbq.source_id
left join shared.contactinformation_view shared_contactinformation_view_skbmte on master_join_kcmqbq.target_id = shared_contactinformation_view_skbmte.id
left join master_join master_join_eoeghu on airport_heliport.manoeuvringareausage.id = master_join_eoeghu.source_id
left join notes.note_view notes_note_view_ekpcwn on master_join_eoeghu.target_id = notes_note_view_ekpcwn.id
group by
    airport_heliport.manoeuvringareausage_pt.id,
    airport_heliport.manoeuvringareausage_pt.nilreason,
    airport_heliport.manoeuvringareausage.type_value,
    airport_heliport.manoeuvringareausage.type_nilreason,
    airport_heliport.manoeuvringareausage.operation_value,
    airport_heliport.manoeuvringareausage.operation_nilreason,
    airport_heliport.manoeuvringareausage.priorpermission_value,
    airport_heliport.manoeuvringareausage.priorpermission_uom,
    airport_heliport.manoeuvringareausage.priorpermission_nilreason,
    airport_heliport_conditioncombination_pt_wdnfca.id;
create index on airport_heliport.manoeuvringareausage_view (id);
-- AerialRefuellingTimeSliceType
-- ['aerial_refuelling.aerialrefuellinganchor_view', 'notes.note_view', 'routes.routeavailability_view', 'aerial_refuelling.aerialrefuellingtrack_view', 'aerial_refuelling.authorityforaerialrefuelling_view']
drop materialized view if exists aerial_refuelling.aerialrefuelling_view cascade;
create materialized view aerial_refuelling.aerialrefuelling_view as
select distinct on (aerialrefuelling.identifier,aerialrefuelling_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    aerial_refuelling.aerialrefuelling.id,
    aerial_refuelling.aerialrefuelling_ts.id as ts_id,
    aerial_refuelling.aerialrefuelling_tsp.id as tsp_id,
    aerial_refuelling.aerialrefuelling.identifier,
    aerial_refuelling.aerialrefuelling_ts.interpretation,
    aerial_refuelling.aerialrefuelling_ts.sequence_number,
    aerial_refuelling.aerialrefuelling_ts.correction_number,
    aerial_refuelling.aerialrefuelling_ts.valid_time_begin,
    aerial_refuelling.aerialrefuelling_ts.valid_time_end,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_begin,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_end,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatorprefix_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatorprefix_nilreason || ')') as designatorprefix,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatornumber_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatornumber_nilreason || ')') as designatornumber,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatorsuffix_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatorsuffix_nilreason || ')') as designatorsuffix,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatordirection_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatordirection_nilreason || ')') as designatordirection,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.name_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.name_nilreason || ')') as name,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.type_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.type_nilreason || ')') as type,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_nilreason || ')') as radarbeaconsetting,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_nilreason || ')') as xbandradarsetting,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.tankerchannel_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.tankerchannel_nilreason || ')') as tankerchannel,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.receiverchannel_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.receiverchannel_nilreason || ')') as receiverchannel,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.helicopterroute_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.helicopterroute_nilreason || ')') as helicopterroute,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.specialrefuelling_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.specialrefuelling_nilreason || ')') as specialrefuelling,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_nilreason || ')') as bidirectionaluse,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_nilreason || ')') as reversedirectionturn,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_dlbevk.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_dlbevk.nilreason[1] || ')') AS oppositetrack,
    aerial_refuelling_aerialrefuelling_pt_dlbevk.href AS oppositetrack_href,
    jsonb_agg(routes_routeavailability_view_ilgfoa.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_iggjbe.id,
    'title', coalesce(cast(airspace_airspace_pt_iggjbe.title AS varchar), '(' || airspace_airspace_pt_iggjbe.nilreason[1] || ')'),
    'href', airspace_airspace_pt_iggjbe.href)) AS protectingairspace,
    jsonb_agg(aerial_refuelling_aerialrefuellingtrack_view_yapztp.id) AS track,
    jsonb_agg(aerial_refuelling_aerialrefuellinganchor_view_qlrhzg.id) AS anchor,
    jsonb_agg(aerial_refuelling_authorityforaerialrefuelling_view_upfkpy.id) AS managingorganisation,
    jsonb_agg(notes_note_view_rkqwsm.*) AS annotation
from aerial_refuelling.aerialrefuelling 
inner join master_join mj2 on aerial_refuelling.aerialrefuelling.id = mj2.source_id
inner join aerial_refuelling.aerialrefuelling_tsp on mj2.target_id = aerial_refuelling.aerialrefuelling_tsp.id
inner join aerial_refuelling.aerialrefuelling_ts on aerial_refuelling.aerialrefuelling_tsp.aerialrefuellingtimeslice_id = aerial_refuelling.aerialrefuelling_ts.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_dlbevk on aerial_refuelling.aerialrefuelling_ts.oppositetrack_id = aerial_refuelling_aerialrefuelling_pt_dlbevk.id
left join master_join master_join_maiwgk on aerial_refuelling.aerialrefuelling_ts.id = master_join_maiwgk.source_id
left join routes.routeavailability_view routes_routeavailability_view_ilgfoa on master_join_maiwgk.target_id = routes_routeavailability_view_ilgfoa.id
left join master_join master_join_rqspme on aerial_refuelling.aerialrefuelling_ts.id = master_join_rqspme.source_id
left join airspace.airspace_pt airspace_airspace_pt_iggjbe on master_join_rqspme.target_id = airspace_airspace_pt_iggjbe.id
left join master_join master_join_rzwpgp on aerial_refuelling.aerialrefuelling_ts.id = master_join_rzwpgp.source_id
left join aerial_refuelling.aerialrefuellingtrack_view aerial_refuelling_aerialrefuellingtrack_view_yapztp on master_join_rzwpgp.target_id = aerial_refuelling_aerialrefuellingtrack_view_yapztp.id
left join master_join master_join_eadqep on aerial_refuelling.aerialrefuelling_ts.id = master_join_eadqep.source_id
left join aerial_refuelling.aerialrefuellinganchor_view aerial_refuelling_aerialrefuellinganchor_view_qlrhzg on master_join_eadqep.target_id = aerial_refuelling_aerialrefuellinganchor_view_qlrhzg.id
left join master_join master_join_yvexjb on aerial_refuelling.aerialrefuelling_ts.id = master_join_yvexjb.source_id
left join aerial_refuelling.authorityforaerialrefuelling_view aerial_refuelling_authorityforaerialrefuelling_view_upfkpy on master_join_yvexjb.target_id = aerial_refuelling_authorityforaerialrefuelling_view_upfkpy.id
left join master_join master_join_uhlrip on aerial_refuelling.aerialrefuelling_ts.id = master_join_uhlrip.source_id
left join notes.note_view notes_note_view_rkqwsm on master_join_uhlrip.target_id = notes_note_view_rkqwsm.id
where aerial_refuelling.aerialrefuelling.feature_status = 'APPROVED'
  and aerial_refuelling.aerialrefuelling_ts.feature_status = 'APPROVED'
group by
    aerial_refuelling.aerialrefuelling.id,
    aerial_refuelling.aerialrefuelling_ts.id,
    aerial_refuelling.aerialrefuelling_tsp.id,
    aerial_refuelling.aerialrefuelling.identifier,
    aerial_refuelling.aerialrefuelling_ts.interpretation,
    aerial_refuelling.aerialrefuelling_ts.sequence_number,
    aerial_refuelling.aerialrefuelling_ts.correction_number,
    aerial_refuelling.aerialrefuelling_ts.valid_time_begin,
    aerial_refuelling.aerialrefuelling_ts.valid_time_end,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_begin,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_end,
    aerial_refuelling.aerialrefuelling_ts.designatorprefix_value,
    aerial_refuelling.aerialrefuelling_ts.designatorprefix_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatornumber_value,
    aerial_refuelling.aerialrefuelling_ts.designatornumber_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatorsuffix_value,
    aerial_refuelling.aerialrefuelling_ts.designatorsuffix_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatordirection_value,
    aerial_refuelling.aerialrefuelling_ts.designatordirection_nilreason,
    aerial_refuelling.aerialrefuelling_ts.name_value,
    aerial_refuelling.aerialrefuelling_ts.name_nilreason,
    aerial_refuelling.aerialrefuelling_ts.type_value,
    aerial_refuelling.aerialrefuelling_ts.type_nilreason,
    aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_value,
    aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_nilreason,
    aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_value,
    aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_nilreason,
    aerial_refuelling.aerialrefuelling_ts.tankerchannel_value,
    aerial_refuelling.aerialrefuelling_ts.tankerchannel_nilreason,
    aerial_refuelling.aerialrefuelling_ts.receiverchannel_value,
    aerial_refuelling.aerialrefuelling_ts.receiverchannel_nilreason,
    aerial_refuelling.aerialrefuelling_ts.helicopterroute_value,
    aerial_refuelling.aerialrefuelling_ts.helicopterroute_nilreason,
    aerial_refuelling.aerialrefuelling_ts.specialrefuelling_value,
    aerial_refuelling.aerialrefuelling_ts.specialrefuelling_nilreason,
    aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_value,
    aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_nilreason,
    aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_value,
    aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_nilreason,
    aerial_refuelling_aerialrefuelling_pt_dlbevk.title,
    aerial_refuelling_aerialrefuelling_pt_dlbevk.nilreason[1],
    aerial_refuelling_aerialrefuelling_pt_dlbevk.href
order by aerialrefuelling.identifier, aerialrefuelling_ts.sequence_number, aerialrefuelling_ts.correction_number DESC;
create index on aerial_refuelling.aerialrefuelling_view (id);
-- AeronauticalGroundLightTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.aeronauticalgroundlight_view cascade;
create materialized view navaids_points.aeronauticalgroundlight_view as
select distinct on (aeronauticalgroundlight.identifier,aeronauticalgroundlight_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.aeronauticalgroundlight.id,
    navaids_points.aeronauticalgroundlight_ts.id as ts_id,
    navaids_points.aeronauticalgroundlight_tsp.id as tsp_id,
    navaids_points.aeronauticalgroundlight.identifier,
    navaids_points.aeronauticalgroundlight_ts.interpretation,
    navaids_points.aeronauticalgroundlight_ts.sequence_number,
    navaids_points.aeronauticalgroundlight_ts.correction_number,
    navaids_points.aeronauticalgroundlight_ts.valid_time_begin,
    navaids_points.aeronauticalgroundlight_ts.valid_time_end,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_begin,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.name_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.type_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.colour_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.colour_nilreason || ')') as colour,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.flashing_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.flashing_nilreason || ')') as flashing,
    coalesce(cast(obstacles_verticalstructure_pt_ghtvqv.title as varchar), '(' || obstacles_verticalstructure_pt_ghtvqv.nilreason[1] || ')') AS structurebeacon,
    obstacles_verticalstructure_pt_ghtvqv.href AS structurebeacon_href,
    coalesce(cast(airport_heliport_airportheliport_pt_bfsjya.title as varchar), '(' || airport_heliport_airportheliport_pt_bfsjya.nilreason[1] || ')') AS aerodromebeacon,
    airport_heliport_airportheliport_pt_bfsjya.href AS aerodromebeacon_href,
    geometry_elevatedpoint_view_bwqtbo.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_bwqtbo.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_bwqtbo.geom) AS location_latitude,
    geometry_elevatedpoint_view_bwqtbo.elevation AS location_elevation,
    geometry_elevatedpoint_view_bwqtbo.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_bwqtbo.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_bwqtbo.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_bwqtbo.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_enverb.*) AS annotation
from navaids_points.aeronauticalgroundlight 
inner join master_join mj2 on navaids_points.aeronauticalgroundlight.id = mj2.source_id
inner join navaids_points.aeronauticalgroundlight_tsp on mj2.target_id = navaids_points.aeronauticalgroundlight_tsp.id
inner join navaids_points.aeronauticalgroundlight_ts on navaids_points.aeronauticalgroundlight_tsp.aeronauticalgroundlighttimeslice_id = navaids_points.aeronauticalgroundlight_ts.id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_ghtvqv on navaids_points.aeronauticalgroundlight_ts.structurebeacon_id = obstacles_verticalstructure_pt_ghtvqv.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_bfsjya on navaids_points.aeronauticalgroundlight_ts.aerodromebeacon_id = airport_heliport_airportheliport_pt_bfsjya.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_bwqtbo on navaids_points.aeronauticalgroundlight_ts.location_id = geometry_elevatedpoint_view_bwqtbo.id
left join master_join master_join_ydybkl on navaids_points.aeronauticalgroundlight_ts.id = master_join_ydybkl.source_id
left join notes.note_view notes_note_view_enverb on master_join_ydybkl.target_id = notes_note_view_enverb.id
where navaids_points.aeronauticalgroundlight.feature_status = 'APPROVED'
  and navaids_points.aeronauticalgroundlight_ts.feature_status = 'APPROVED'
group by
    navaids_points.aeronauticalgroundlight.id,
    navaids_points.aeronauticalgroundlight_ts.id,
    navaids_points.aeronauticalgroundlight_tsp.id,
    navaids_points.aeronauticalgroundlight.identifier,
    navaids_points.aeronauticalgroundlight_ts.interpretation,
    navaids_points.aeronauticalgroundlight_ts.sequence_number,
    navaids_points.aeronauticalgroundlight_ts.correction_number,
    navaids_points.aeronauticalgroundlight_ts.valid_time_begin,
    navaids_points.aeronauticalgroundlight_ts.valid_time_end,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_begin,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_end,
    navaids_points.aeronauticalgroundlight_ts.name_value,
    navaids_points.aeronauticalgroundlight_ts.name_nilreason,
    navaids_points.aeronauticalgroundlight_ts.type_value,
    navaids_points.aeronauticalgroundlight_ts.type_nilreason,
    navaids_points.aeronauticalgroundlight_ts.colour_value,
    navaids_points.aeronauticalgroundlight_ts.colour_nilreason,
    navaids_points.aeronauticalgroundlight_ts.flashing_value,
    navaids_points.aeronauticalgroundlight_ts.flashing_nilreason,
    obstacles_verticalstructure_pt_ghtvqv.title,
    obstacles_verticalstructure_pt_ghtvqv.nilreason[1],
    obstacles_verticalstructure_pt_ghtvqv.href,
    airport_heliport_airportheliport_pt_bfsjya.title,
    airport_heliport_airportheliport_pt_bfsjya.nilreason[1],
    airport_heliport_airportheliport_pt_bfsjya.href,
    geometry_elevatedpoint_view_bwqtbo.geom,
    geometry_elevatedpoint_view_bwqtbo.elevation,
    geometry_elevatedpoint_view_bwqtbo.geoidUndulation,
    geometry_elevatedpoint_view_bwqtbo.verticalDatum,
    geometry_elevatedpoint_view_bwqtbo.verticalAccuracy,
    geometry_elevatedpoint_view_bwqtbo.horizontalAccuracy
order by aeronauticalgroundlight.identifier, aeronauticalgroundlight_ts.sequence_number, aeronauticalgroundlight_ts.correction_number DESC;
create index on navaids_points.aeronauticalgroundlight_view (id);
-- AircraftGroundServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view']
drop materialized view if exists service.aircraftgroundservice_view cascade;
create materialized view service.aircraftgroundservice_view as
select distinct on (aircraftgroundservice.identifier,aircraftgroundservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.aircraftgroundservice.id,
    service.aircraftgroundservice_ts.id as ts_id,
    service.aircraftgroundservice_tsp.id as tsp_id,
    service.aircraftgroundservice.identifier,
    service.aircraftgroundservice_ts.interpretation,
    service.aircraftgroundservice_ts.sequence_number,
    service.aircraftgroundservice_ts.correction_number,
    service.aircraftgroundservice_ts.valid_time_begin,
    service.aircraftgroundservice_ts.valid_time_end,
    service.aircraftgroundservice_ts.feature_lifetime_begin,
    service.aircraftgroundservice_ts.feature_lifetime_end,
    coalesce(cast(service.aircraftgroundservice_ts.flightoperations_value as varchar), '(' || service.aircraftgroundservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.aircraftgroundservice_ts.rank_value as varchar), '(' || service.aircraftgroundservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.aircraftgroundservice_ts.complianticao_value as varchar), '(' || service.aircraftgroundservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.aircraftgroundservice_ts.name_value as varchar), '(' || service.aircraftgroundservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.aircraftgroundservice_ts.type_value as varchar), '(' || service.aircraftgroundservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_pixksn.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_pixksn.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_pixksn.geom) AS location_latitude,
    geometry_elevatedpoint_view_pixksn.elevation AS location_elevation,
    geometry_elevatedpoint_view_pixksn.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_pixksn.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_pixksn.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_pixksn.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_viifti.title as varchar), '(' || organisation_unit_pt_viifti.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_viifti.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_pxdmrm.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_bjrikj.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_bjrikj.title AS varchar), '(' || service_radiocommunicationchannel_pt_bjrikj.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_bjrikj.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_krliay.id) AS availability,
    jsonb_agg(notes_note_view_ndjjnx.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_hrkuux.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_hrkuux.title AS varchar), '(' || airport_heliport_airportheliport_pt_hrkuux.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_hrkuux.href)) AS airportheliport
from service.aircraftgroundservice 
inner join master_join mj2 on service.aircraftgroundservice.id = mj2.source_id
inner join service.aircraftgroundservice_tsp on mj2.target_id = service.aircraftgroundservice_tsp.id
inner join service.aircraftgroundservice_ts on service.aircraftgroundservice_tsp.aircraftgroundservicetimeslice_id = service.aircraftgroundservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_pixksn on service.aircraftgroundservice_ts.location_id = geometry_elevatedpoint_view_pixksn.id
left join organisation.unit_pt organisation_unit_pt_viifti on service.aircraftgroundservice_ts.serviceprovider_id = organisation_unit_pt_viifti.id
left join master_join master_join_qeuwpm on service.aircraftgroundservice_ts.id = master_join_qeuwpm.source_id
left join service.callsigndetail_view service_callsigndetail_view_pxdmrm on master_join_qeuwpm.target_id = service_callsigndetail_view_pxdmrm.id
left join master_join master_join_anbzez on service.aircraftgroundservice_ts.id = master_join_anbzez.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_bjrikj on master_join_anbzez.target_id = service_radiocommunicationchannel_pt_bjrikj.id
left join master_join master_join_nerxou on service.aircraftgroundservice_ts.id = master_join_nerxou.source_id
left join shared.contactinformation_view shared_contactinformation_view_togwrb on master_join_nerxou.target_id = shared_contactinformation_view_togwrb.id
left join master_join master_join_xoxxtt on service.aircraftgroundservice_ts.id = master_join_xoxxtt.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_krliay on master_join_xoxxtt.target_id = service_serviceoperationalstatus_view_krliay.id
left join master_join master_join_vbodvh on service.aircraftgroundservice_ts.id = master_join_vbodvh.source_id
left join notes.note_view notes_note_view_ndjjnx on master_join_vbodvh.target_id = notes_note_view_ndjjnx.id
left join master_join master_join_vugdjh on service.aircraftgroundservice_ts.id = master_join_vugdjh.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hrkuux on master_join_vugdjh.target_id = airport_heliport_airportheliport_pt_hrkuux.id
where service.aircraftgroundservice.feature_status = 'APPROVED'
  and service.aircraftgroundservice_ts.feature_status = 'APPROVED'
group by
    service.aircraftgroundservice.id,
    service.aircraftgroundservice_ts.id,
    service.aircraftgroundservice_tsp.id,
    service.aircraftgroundservice.identifier,
    service.aircraftgroundservice_ts.interpretation,
    service.aircraftgroundservice_ts.sequence_number,
    service.aircraftgroundservice_ts.correction_number,
    service.aircraftgroundservice_ts.valid_time_begin,
    service.aircraftgroundservice_ts.valid_time_end,
    service.aircraftgroundservice_ts.feature_lifetime_begin,
    service.aircraftgroundservice_ts.feature_lifetime_end,
    service.aircraftgroundservice_ts.flightoperations_value,
    service.aircraftgroundservice_ts.flightoperations_nilreason,
    service.aircraftgroundservice_ts.rank_value,
    service.aircraftgroundservice_ts.rank_nilreason,
    service.aircraftgroundservice_ts.complianticao_value,
    service.aircraftgroundservice_ts.complianticao_nilreason,
    service.aircraftgroundservice_ts.name_value,
    service.aircraftgroundservice_ts.name_nilreason,
    service.aircraftgroundservice_ts.type_value,
    service.aircraftgroundservice_ts.type_nilreason,
    geometry_elevatedpoint_view_pixksn.geom,
    geometry_elevatedpoint_view_pixksn.elevation,
    geometry_elevatedpoint_view_pixksn.geoidUndulation,
    geometry_elevatedpoint_view_pixksn.verticalDatum,
    geometry_elevatedpoint_view_pixksn.verticalAccuracy,
    geometry_elevatedpoint_view_pixksn.horizontalAccuracy,
    organisation_unit_pt_viifti.title,
    organisation_unit_pt_viifti.nilreason[1],
    organisation_unit_pt_viifti.href
order by aircraftgroundservice.identifier, aircraftgroundservice_ts.sequence_number, aircraftgroundservice_ts.correction_number DESC;
create index on service.aircraftgroundservice_view (id);
-- AircraftStandTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view', 'geometry.elevatedsurface_view', 'airport_heliport.apronareaavailability_view', 'airport_heliport.aircraftstandcontamination_view', 'airport_heliport.surfacecharacteristics_view']
drop materialized view if exists airport_heliport.aircraftstand_view cascade;
create materialized view airport_heliport.aircraftstand_view as
select distinct on (aircraftstand.identifier,aircraftstand_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.aircraftstand.id,
    airport_heliport.aircraftstand_ts.id as ts_id,
    airport_heliport.aircraftstand_tsp.id as tsp_id,
    airport_heliport.aircraftstand.identifier,
    airport_heliport.aircraftstand_ts.interpretation,
    airport_heliport.aircraftstand_ts.sequence_number,
    airport_heliport.aircraftstand_ts.correction_number,
    airport_heliport.aircraftstand_ts.valid_time_begin,
    airport_heliport.aircraftstand_ts.valid_time_end,
    airport_heliport.aircraftstand_ts.feature_lifetime_begin,
    airport_heliport.aircraftstand_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.aircraftstand_ts.designator_value as varchar), '(' || airport_heliport.aircraftstand_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.aircraftstand_ts.type_value as varchar), '(' || airport_heliport.aircraftstand_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.aircraftstand_ts.visualdockingsystem_value as varchar), '(' || airport_heliport.aircraftstand_ts.visualdockingsystem_nilreason || ')') as visualdockingsystem,
    airport_heliport_surfacecharacteristics_view_dhaxkq.id AS surfaceproperties,
    geometry_elevatedpoint_view_dwfxqn.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_dwfxqn.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_dwfxqn.geom) AS location_latitude,
    geometry_elevatedpoint_view_dwfxqn.elevation AS location_elevation,
    geometry_elevatedpoint_view_dwfxqn.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_dwfxqn.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_dwfxqn.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_dwfxqn.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(airport_heliport_apronelement_pt_iuwpjc.title as varchar), '(' || airport_heliport_apronelement_pt_iuwpjc.nilreason[1] || ')') AS apronlocation,
    airport_heliport_apronelement_pt_iuwpjc.href AS apronlocation_href,
    geometry_elevatedsurface_view_hausgj.geom AS extent_geom,
    geometry_elevatedsurface_view_hausgj.elevation AS extent_elevation,
    geometry_elevatedsurface_view_hausgj.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_hausgj.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_hausgj.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_hausgj.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(airport_heliport_aircraftstandcontamination_view_fzhqac.id) AS contaminant,
    jsonb_agg(notes_note_view_ulojss.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_msugeb.id) AS availability
from airport_heliport.aircraftstand 
inner join master_join mj2 on airport_heliport.aircraftstand.id = mj2.source_id
inner join airport_heliport.aircraftstand_tsp on mj2.target_id = airport_heliport.aircraftstand_tsp.id
inner join airport_heliport.aircraftstand_ts on airport_heliport.aircraftstand_tsp.aircraftstandtimeslice_id = airport_heliport.aircraftstand_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_dhaxkq on airport_heliport.aircraftstand_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_dhaxkq.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_dwfxqn on airport_heliport.aircraftstand_ts.location_id = geometry_elevatedpoint_view_dwfxqn.id
left join airport_heliport.apronelement_pt airport_heliport_apronelement_pt_iuwpjc on airport_heliport.aircraftstand_ts.apronlocation_id = airport_heliport_apronelement_pt_iuwpjc.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_hausgj on airport_heliport.aircraftstand_ts.extent_id = geometry_elevatedsurface_view_hausgj.id
left join master_join master_join_pxpkpl on airport_heliport.aircraftstand_ts.id = master_join_pxpkpl.source_id
left join airport_heliport.aircraftstandcontamination_view airport_heliport_aircraftstandcontamination_view_fzhqac on master_join_pxpkpl.target_id = airport_heliport_aircraftstandcontamination_view_fzhqac.id
left join master_join master_join_qpwoas on airport_heliport.aircraftstand_ts.id = master_join_qpwoas.source_id
left join notes.note_view notes_note_view_ulojss on master_join_qpwoas.target_id = notes_note_view_ulojss.id
left join master_join master_join_jdbitl on airport_heliport.aircraftstand_ts.id = master_join_jdbitl.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_msugeb on master_join_jdbitl.target_id = airport_heliport_apronareaavailability_view_msugeb.id
where airport_heliport.aircraftstand.feature_status = 'APPROVED'
  and airport_heliport.aircraftstand_ts.feature_status = 'APPROVED'
group by
    airport_heliport.aircraftstand.id,
    airport_heliport.aircraftstand_ts.id,
    airport_heliport.aircraftstand_tsp.id,
    airport_heliport.aircraftstand.identifier,
    airport_heliport.aircraftstand_ts.interpretation,
    airport_heliport.aircraftstand_ts.sequence_number,
    airport_heliport.aircraftstand_ts.correction_number,
    airport_heliport.aircraftstand_ts.valid_time_begin,
    airport_heliport.aircraftstand_ts.valid_time_end,
    airport_heliport.aircraftstand_ts.feature_lifetime_begin,
    airport_heliport.aircraftstand_ts.feature_lifetime_end,
    airport_heliport.aircraftstand_ts.designator_value,
    airport_heliport.aircraftstand_ts.designator_nilreason,
    airport_heliport.aircraftstand_ts.type_value,
    airport_heliport.aircraftstand_ts.type_nilreason,
    airport_heliport.aircraftstand_ts.visualdockingsystem_value,
    airport_heliport.aircraftstand_ts.visualdockingsystem_nilreason,
    airport_heliport_surfacecharacteristics_view_dhaxkq.id,
    geometry_elevatedpoint_view_dwfxqn.geom,
    geometry_elevatedpoint_view_dwfxqn.elevation,
    geometry_elevatedpoint_view_dwfxqn.geoidUndulation,
    geometry_elevatedpoint_view_dwfxqn.verticalDatum,
    geometry_elevatedpoint_view_dwfxqn.verticalAccuracy,
    geometry_elevatedpoint_view_dwfxqn.horizontalAccuracy,
    airport_heliport_apronelement_pt_iuwpjc.title,
    airport_heliport_apronelement_pt_iuwpjc.nilreason[1],
    airport_heliport_apronelement_pt_iuwpjc.href,
    geometry_elevatedsurface_view_hausgj.geom,
    geometry_elevatedsurface_view_hausgj.elevation,
    geometry_elevatedsurface_view_hausgj.geoidUndulation,
    geometry_elevatedsurface_view_hausgj.verticalDatum,
    geometry_elevatedsurface_view_hausgj.verticalAccuracy,
    geometry_elevatedsurface_view_hausgj.horizontalAccuracy
order by aircraftstand.identifier, aircraftstand_ts.sequence_number, aircraftstand_ts.correction_number DESC;
create index on airport_heliport.aircraftstand_view (id);
-- AirportClearanceServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view']
drop materialized view if exists service.airportclearanceservice_view cascade;
create materialized view service.airportclearanceservice_view as
select distinct on (airportclearanceservice.identifier,airportclearanceservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airportclearanceservice.id,
    service.airportclearanceservice_ts.id as ts_id,
    service.airportclearanceservice_tsp.id as tsp_id,
    service.airportclearanceservice.identifier,
    service.airportclearanceservice_ts.interpretation,
    service.airportclearanceservice_ts.sequence_number,
    service.airportclearanceservice_ts.correction_number,
    service.airportclearanceservice_ts.valid_time_begin,
    service.airportclearanceservice_ts.valid_time_end,
    service.airportclearanceservice_ts.feature_lifetime_begin,
    service.airportclearanceservice_ts.feature_lifetime_end,
    coalesce(cast(service.airportclearanceservice_ts.flightoperations_value as varchar), '(' || service.airportclearanceservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airportclearanceservice_ts.rank_value as varchar), '(' || service.airportclearanceservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airportclearanceservice_ts.complianticao_value as varchar), '(' || service.airportclearanceservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airportclearanceservice_ts.name_value as varchar), '(' || service.airportclearanceservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airportclearanceservice_ts.snowplan_value as varchar), '(' || service.airportclearanceservice_ts.snowplan_nilreason || ')') as snowplan,
    geometry_elevatedpoint_view_yjjfhx.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_yjjfhx.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_yjjfhx.geom) AS location_latitude,
    geometry_elevatedpoint_view_yjjfhx.elevation AS location_elevation,
    geometry_elevatedpoint_view_yjjfhx.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_yjjfhx.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_yjjfhx.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_yjjfhx.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_zbyfew.title as varchar), '(' || organisation_unit_pt_zbyfew.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_zbyfew.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_iovlst.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_cgygpo.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_cgygpo.title AS varchar), '(' || service_radiocommunicationchannel_pt_cgygpo.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_cgygpo.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_wmhdvr.id) AS availability,
    jsonb_agg(notes_note_view_tnbwkr.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_gmwtgm.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_gmwtgm.title AS varchar), '(' || airport_heliport_airportheliport_pt_gmwtgm.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_gmwtgm.href)) AS airportheliport
from service.airportclearanceservice 
inner join master_join mj2 on service.airportclearanceservice.id = mj2.source_id
inner join service.airportclearanceservice_tsp on mj2.target_id = service.airportclearanceservice_tsp.id
inner join service.airportclearanceservice_ts on service.airportclearanceservice_tsp.airportclearanceservicetimeslice_id = service.airportclearanceservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_yjjfhx on service.airportclearanceservice_ts.location_id = geometry_elevatedpoint_view_yjjfhx.id
left join organisation.unit_pt organisation_unit_pt_zbyfew on service.airportclearanceservice_ts.serviceprovider_id = organisation_unit_pt_zbyfew.id
left join master_join master_join_ufxfip on service.airportclearanceservice_ts.id = master_join_ufxfip.source_id
left join service.callsigndetail_view service_callsigndetail_view_iovlst on master_join_ufxfip.target_id = service_callsigndetail_view_iovlst.id
left join master_join master_join_jrsyts on service.airportclearanceservice_ts.id = master_join_jrsyts.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_cgygpo on master_join_jrsyts.target_id = service_radiocommunicationchannel_pt_cgygpo.id
left join master_join master_join_daymxa on service.airportclearanceservice_ts.id = master_join_daymxa.source_id
left join shared.contactinformation_view shared_contactinformation_view_ctlzbz on master_join_daymxa.target_id = shared_contactinformation_view_ctlzbz.id
left join master_join master_join_jqkaei on service.airportclearanceservice_ts.id = master_join_jqkaei.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_wmhdvr on master_join_jqkaei.target_id = service_serviceoperationalstatus_view_wmhdvr.id
left join master_join master_join_bnsaui on service.airportclearanceservice_ts.id = master_join_bnsaui.source_id
left join notes.note_view notes_note_view_tnbwkr on master_join_bnsaui.target_id = notes_note_view_tnbwkr.id
left join master_join master_join_nmnevc on service.airportclearanceservice_ts.id = master_join_nmnevc.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_gmwtgm on master_join_nmnevc.target_id = airport_heliport_airportheliport_pt_gmwtgm.id
where service.airportclearanceservice.feature_status = 'APPROVED'
  and service.airportclearanceservice_ts.feature_status = 'APPROVED'
group by
    service.airportclearanceservice.id,
    service.airportclearanceservice_ts.id,
    service.airportclearanceservice_tsp.id,
    service.airportclearanceservice.identifier,
    service.airportclearanceservice_ts.interpretation,
    service.airportclearanceservice_ts.sequence_number,
    service.airportclearanceservice_ts.correction_number,
    service.airportclearanceservice_ts.valid_time_begin,
    service.airportclearanceservice_ts.valid_time_end,
    service.airportclearanceservice_ts.feature_lifetime_begin,
    service.airportclearanceservice_ts.feature_lifetime_end,
    service.airportclearanceservice_ts.flightoperations_value,
    service.airportclearanceservice_ts.flightoperations_nilreason,
    service.airportclearanceservice_ts.rank_value,
    service.airportclearanceservice_ts.rank_nilreason,
    service.airportclearanceservice_ts.complianticao_value,
    service.airportclearanceservice_ts.complianticao_nilreason,
    service.airportclearanceservice_ts.name_value,
    service.airportclearanceservice_ts.name_nilreason,
    service.airportclearanceservice_ts.snowplan_value,
    service.airportclearanceservice_ts.snowplan_nilreason,
    geometry_elevatedpoint_view_yjjfhx.geom,
    geometry_elevatedpoint_view_yjjfhx.elevation,
    geometry_elevatedpoint_view_yjjfhx.geoidUndulation,
    geometry_elevatedpoint_view_yjjfhx.verticalDatum,
    geometry_elevatedpoint_view_yjjfhx.verticalAccuracy,
    geometry_elevatedpoint_view_yjjfhx.horizontalAccuracy,
    organisation_unit_pt_zbyfew.title,
    organisation_unit_pt_zbyfew.nilreason[1],
    organisation_unit_pt_zbyfew.href
order by airportclearanceservice.identifier, airportclearanceservice_ts.sequence_number, airportclearanceservice_ts.correction_number DESC;
create index on service.airportclearanceservice_view (id);
-- AirportHeliportCollocationTimeSliceType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.airportheliportcollocation_view cascade;
create materialized view airport_heliport.airportheliportcollocation_view as
select distinct on (airportheliportcollocation.identifier,airportheliportcollocation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportheliportcollocation.id,
    airport_heliport.airportheliportcollocation_ts.id as ts_id,
    airport_heliport.airportheliportcollocation_tsp.id as tsp_id,
    airport_heliport.airportheliportcollocation.identifier,
    airport_heliport.airportheliportcollocation_ts.interpretation,
    airport_heliport.airportheliportcollocation_ts.sequence_number,
    airport_heliport.airportheliportcollocation_ts.correction_number,
    airport_heliport.airportheliportcollocation_ts.valid_time_begin,
    airport_heliport.airportheliportcollocation_ts.valid_time_end,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_begin,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airportheliportcollocation_ts.type_value as varchar), '(' || airport_heliport.airportheliportcollocation_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_airportheliport_pt_jvasbr.title as varchar), '(' || airport_heliport_airportheliport_pt_jvasbr.nilreason[1] || ')') AS hostairport,
    airport_heliport_airportheliport_pt_jvasbr.href AS hostairport_href,
    coalesce(cast(airport_heliport_airportheliport_pt_uilwqr.title as varchar), '(' || airport_heliport_airportheliport_pt_uilwqr.nilreason[1] || ')') AS dependentairport,
    airport_heliport_airportheliport_pt_uilwqr.href AS dependentairport_href,
    jsonb_agg(notes_note_view_lbyiun.*) AS annotation
from airport_heliport.airportheliportcollocation 
inner join master_join mj2 on airport_heliport.airportheliportcollocation.id = mj2.source_id
inner join airport_heliport.airportheliportcollocation_tsp on mj2.target_id = airport_heliport.airportheliportcollocation_tsp.id
inner join airport_heliport.airportheliportcollocation_ts on airport_heliport.airportheliportcollocation_tsp.airportheliportcollocationtimeslice_id = airport_heliport.airportheliportcollocation_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jvasbr on airport_heliport.airportheliportcollocation_ts.hostairport_id = airport_heliport_airportheliport_pt_jvasbr.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_uilwqr on airport_heliport.airportheliportcollocation_ts.dependentairport_id = airport_heliport_airportheliport_pt_uilwqr.id
left join master_join master_join_hgxaun on airport_heliport.airportheliportcollocation_ts.id = master_join_hgxaun.source_id
left join notes.note_view notes_note_view_lbyiun on master_join_hgxaun.target_id = notes_note_view_lbyiun.id
where airport_heliport.airportheliportcollocation.feature_status = 'APPROVED'
  and airport_heliport.airportheliportcollocation_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportheliportcollocation.id,
    airport_heliport.airportheliportcollocation_ts.id,
    airport_heliport.airportheliportcollocation_tsp.id,
    airport_heliport.airportheliportcollocation.identifier,
    airport_heliport.airportheliportcollocation_ts.interpretation,
    airport_heliport.airportheliportcollocation_ts.sequence_number,
    airport_heliport.airportheliportcollocation_ts.correction_number,
    airport_heliport.airportheliportcollocation_ts.valid_time_begin,
    airport_heliport.airportheliportcollocation_ts.valid_time_end,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_begin,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_end,
    airport_heliport.airportheliportcollocation_ts.type_value,
    airport_heliport.airportheliportcollocation_ts.type_nilreason,
    airport_heliport_airportheliport_pt_jvasbr.title,
    airport_heliport_airportheliport_pt_jvasbr.nilreason[1],
    airport_heliport_airportheliport_pt_jvasbr.href,
    airport_heliport_airportheliport_pt_uilwqr.title,
    airport_heliport_airportheliport_pt_uilwqr.nilreason[1],
    airport_heliport_airportheliport_pt_uilwqr.href
order by airportheliportcollocation.identifier, airportheliportcollocation_ts.sequence_number, airportheliportcollocation_ts.correction_number DESC;
create index on airport_heliport.airportheliportcollocation_view (id);
-- AirportHeliportTimeSliceType
-- ['airport_heliport.airportheliportavailability_view', 'geometry.elevatedpoint_view', 'airport_heliport.city_view', 'notes.note_view', 'shared.contactinformation_view', 'airport_heliport.airportheliportresponsibilityorganisation_view', 'geometry.elevatedsurface_view', 'airport_heliport.airportheliportcontamination_view']
drop materialized view if exists airport_heliport.airportheliport_view cascade;
create materialized view airport_heliport.airportheliport_view as
select distinct on (airportheliport.identifier,airportheliport_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportheliport.id,
    airport_heliport.airportheliport_ts.id as ts_id,
    airport_heliport.airportheliport_tsp.id as tsp_id,
    airport_heliport.airportheliport.identifier,
    airport_heliport.airportheliport_ts.interpretation,
    airport_heliport.airportheliport_ts.sequence_number,
    airport_heliport.airportheliport_ts.correction_number,
    airport_heliport.airportheliport_ts.valid_time_begin,
    airport_heliport.airportheliport_ts.valid_time_end,
    airport_heliport.airportheliport_ts.feature_lifetime_begin,
    airport_heliport.airportheliport_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airportheliport_ts.designator_value as varchar), '(' || airport_heliport.airportheliport_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.airportheliport_ts.name_value as varchar), '(' || airport_heliport.airportheliport_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport.airportheliport_ts.locationindicatoricao_value as varchar), '(' || airport_heliport.airportheliport_ts.locationindicatoricao_nilreason || ')') as locationindicatoricao,
    coalesce(cast(airport_heliport.airportheliport_ts.designatoriata_value as varchar), '(' || airport_heliport.airportheliport_ts.designatoriata_nilreason || ')') as designatoriata,
    coalesce(cast(airport_heliport.airportheliport_ts.type_value as varchar), '(' || airport_heliport.airportheliport_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.airportheliport_ts.certifiedicao_value as varchar), '(' || airport_heliport.airportheliport_ts.certifiedicao_nilreason || ')') as certifiedicao,
    coalesce(cast(airport_heliport.airportheliport_ts.privateuse_value as varchar), '(' || airport_heliport.airportheliport_ts.privateuse_nilreason || ')') as privateuse,
    coalesce(cast(airport_heliport.airportheliport_ts.controltype_value as varchar), '(' || airport_heliport.airportheliport_ts.controltype_nilreason || ')') as controltype,
    coalesce(cast(airport_heliport.airportheliport_ts.verticaldatum_value as varchar), '(' || airport_heliport.airportheliport_ts.verticaldatum_nilreason || ')') as verticaldatum,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariation_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariationaccuracy_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(airport_heliport.airportheliport_ts.datemagneticvariation_value as varchar), '(' || airport_heliport.airportheliport_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariationchange_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariationchange_nilreason || ')') as magneticvariationchange,
    coalesce(cast(airport_heliport.airportheliport_ts.altimeterchecklocation_value as varchar), '(' || airport_heliport.airportheliport_ts.altimeterchecklocation_nilreason || ')') as altimeterchecklocation,
    coalesce(cast(airport_heliport.airportheliport_ts.secondarypowersupply_value as varchar), '(' || airport_heliport.airportheliport_ts.secondarypowersupply_nilreason || ')') as secondarypowersupply,
    coalesce(cast(airport_heliport.airportheliport_ts.winddirectionindicator_value as varchar), '(' || airport_heliport.airportheliport_ts.winddirectionindicator_nilreason || ')') as winddirectionindicator,
    coalesce(cast(airport_heliport.airportheliport_ts.landingdirectionindicator_value as varchar), '(' || airport_heliport.airportheliport_ts.landingdirectionindicator_nilreason || ')') as landingdirectionindicator,
    coalesce(cast(airport_heliport.airportheliport_ts.abandoned_value as varchar), '(' || airport_heliport.airportheliport_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.airportheliport_ts.fieldelevation_value as varchar) || ' ' || airport_heliport.airportheliport_ts.fieldelevation_uom, '(' || airport_heliport.airportheliport_ts.fieldelevation_nilreason || ')') as fieldelevation,
    coalesce(cast(airport_heliport.airportheliport_ts.fieldelevationaccuracy_value as varchar) || ' ' || airport_heliport.airportheliport_ts.fieldelevationaccuracy_uom, '(' || airport_heliport.airportheliport_ts.fieldelevationaccuracy_nilreason || ')') as fieldelevationaccuracy,
    coalesce(cast(airport_heliport.airportheliport_ts.referencetemperature_value as varchar) || ' ' || airport_heliport.airportheliport_ts.referencetemperature_uom, '(' || airport_heliport.airportheliport_ts.referencetemperature_nilreason || ')') as referencetemperature,
    coalesce(cast(airport_heliport.airportheliport_ts.transitionaltitude_value as varchar) || ' ' || airport_heliport.airportheliport_ts.transitionaltitude_uom, '(' || airport_heliport.airportheliport_ts.transitionaltitude_nilreason || ')') as transitionaltitude,
    coalesce(cast(airport_heliport.airportheliport_ts.transitionlevel_value as varchar) || ' ' || airport_heliport.airportheliport_ts.transitionlevel_uom, '(' || airport_heliport.airportheliport_ts.transitionlevel_nilreason || ')') as transitionlevel,
    coalesce(cast(airport_heliport.airportheliport_ts.lowesttemperature_value as varchar) || ' ' || airport_heliport.airportheliport_ts.lowesttemperature_uom, '(' || airport_heliport.airportheliport_ts.lowesttemperature_nilreason || ')') as lowesttemperature,
    airport_heliport_airportheliportresponsibilityorganisation_view_ejlaex.id AS responsibleorganisation,
    geometry_elevatedpoint_view_gicaym.geom AS arp_geom,
    ST_X(geometry_elevatedpoint_view_gicaym.geom) AS arp_longitude,
    ST_Y(geometry_elevatedpoint_view_gicaym.geom) AS arp_latitude,
    geometry_elevatedpoint_view_gicaym.elevation AS arp_elevation,
    geometry_elevatedpoint_view_gicaym.geoidUndulation AS arp_geoidundulation,
    geometry_elevatedpoint_view_gicaym.verticalDatum AS arp_verticaldatum,
    geometry_elevatedpoint_view_gicaym.verticalAccuracy AS arp_verticalaccuracy,
    geometry_elevatedpoint_view_gicaym.horizontalAccuracy AS arp_horizontalaccuracy,
    geometry_elevatedsurface_view_unpcfp.geom AS aviationboundary_geom,
    geometry_elevatedsurface_view_unpcfp.elevation AS aviationboundary_elevation,
    geometry_elevatedsurface_view_unpcfp.geoidUndulation AS aviationboundary_geoidundulation,
    geometry_elevatedsurface_view_unpcfp.verticalDatum AS aviationboundary_verticaldatum,
    geometry_elevatedsurface_view_unpcfp.verticalAccuracy AS aviationboundary_verticalaccuracy,
    geometry_elevatedsurface_view_unpcfp.horizontalAccuracy AS aviationboundary_horizontalaccuracy,
    jsonb_agg(airport_heliport_airportheliportcontamination_view_lunarl.id) AS contaminant,
    jsonb_agg(airport_heliport_city_view_lhmrxv.id) AS servedcity,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_altimetersource_pt_xpnfyo.id,
    'title', coalesce(cast(airport_heliport_altimetersource_pt_xpnfyo.title AS varchar), '(' || airport_heliport_altimetersource_pt_xpnfyo.nilreason[1] || ')'),
    'href', airport_heliport_altimetersource_pt_xpnfyo.href)) AS altimetersource,
    jsonb_agg(airport_heliport_airportheliportavailability_view_svpkgq.id) AS availability,
    jsonb_agg(notes_note_view_exahzw.*) AS annotation
from airport_heliport.airportheliport 
inner join master_join mj2 on airport_heliport.airportheliport.id = mj2.source_id
inner join airport_heliport.airportheliport_tsp on mj2.target_id = airport_heliport.airportheliport_tsp.id
inner join airport_heliport.airportheliport_ts on airport_heliport.airportheliport_tsp.airportheliporttimeslice_id = airport_heliport.airportheliport_ts.id
left join airport_heliport.airportheliportresponsibilityorganisation_view airport_heliport_airportheliportresponsibilityorganisation_view_ejlaex on airport_heliport.airportheliport_ts.responsibleorganisation_id = airport_heliport_airportheliportresponsibilityorganisation_view_ejlaex.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_gicaym on airport_heliport.airportheliport_ts.arp_id = geometry_elevatedpoint_view_gicaym.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_unpcfp on airport_heliport.airportheliport_ts.aviationboundary_id = geometry_elevatedsurface_view_unpcfp.id
left join master_join master_join_ryqrcb on airport_heliport.airportheliport_ts.id = master_join_ryqrcb.source_id
left join airport_heliport.airportheliportcontamination_view airport_heliport_airportheliportcontamination_view_lunarl on master_join_ryqrcb.target_id = airport_heliport_airportheliportcontamination_view_lunarl.id
left join master_join master_join_qciufp on airport_heliport.airportheliport_ts.id = master_join_qciufp.source_id
left join airport_heliport.city_view airport_heliport_city_view_lhmrxv on master_join_qciufp.target_id = airport_heliport_city_view_lhmrxv.id
left join master_join master_join_rffqja on airport_heliport.airportheliport_ts.id = master_join_rffqja.source_id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_xpnfyo on master_join_rffqja.target_id = airport_heliport_altimetersource_pt_xpnfyo.id
left join master_join master_join_yufsod on airport_heliport.airportheliport_ts.id = master_join_yufsod.source_id
left join shared.contactinformation_view shared_contactinformation_view_ptkgic on master_join_yufsod.target_id = shared_contactinformation_view_ptkgic.id
left join master_join master_join_abplla on airport_heliport.airportheliport_ts.id = master_join_abplla.source_id
left join airport_heliport.airportheliportavailability_view airport_heliport_airportheliportavailability_view_svpkgq on master_join_abplla.target_id = airport_heliport_airportheliportavailability_view_svpkgq.id
left join master_join master_join_tmitel on airport_heliport.airportheliport_ts.id = master_join_tmitel.source_id
left join notes.note_view notes_note_view_exahzw on master_join_tmitel.target_id = notes_note_view_exahzw.id
where airport_heliport.airportheliport.feature_status = 'APPROVED'
  and airport_heliport.airportheliport_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportheliport.id,
    airport_heliport.airportheliport_ts.id,
    airport_heliport.airportheliport_tsp.id,
    airport_heliport.airportheliport.identifier,
    airport_heliport.airportheliport_ts.interpretation,
    airport_heliport.airportheliport_ts.sequence_number,
    airport_heliport.airportheliport_ts.correction_number,
    airport_heliport.airportheliport_ts.valid_time_begin,
    airport_heliport.airportheliport_ts.valid_time_end,
    airport_heliport.airportheliport_ts.feature_lifetime_begin,
    airport_heliport.airportheliport_ts.feature_lifetime_end,
    airport_heliport.airportheliport_ts.designator_value,
    airport_heliport.airportheliport_ts.designator_nilreason,
    airport_heliport.airportheliport_ts.name_value,
    airport_heliport.airportheliport_ts.name_nilreason,
    airport_heliport.airportheliport_ts.locationindicatoricao_value,
    airport_heliport.airportheliport_ts.locationindicatoricao_nilreason,
    airport_heliport.airportheliport_ts.designatoriata_value,
    airport_heliport.airportheliport_ts.designatoriata_nilreason,
    airport_heliport.airportheliport_ts.type_value,
    airport_heliport.airportheliport_ts.type_nilreason,
    airport_heliport.airportheliport_ts.certifiedicao_value,
    airport_heliport.airportheliport_ts.certifiedicao_nilreason,
    airport_heliport.airportheliport_ts.privateuse_value,
    airport_heliport.airportheliport_ts.privateuse_nilreason,
    airport_heliport.airportheliport_ts.controltype_value,
    airport_heliport.airportheliport_ts.controltype_nilreason,
    airport_heliport.airportheliport_ts.verticaldatum_value,
    airport_heliport.airportheliport_ts.verticaldatum_nilreason,
    airport_heliport.airportheliport_ts.magneticvariation_value,
    airport_heliport.airportheliport_ts.magneticvariation_nilreason,
    airport_heliport.airportheliport_ts.magneticvariationaccuracy_value,
    airport_heliport.airportheliport_ts.magneticvariationaccuracy_nilreason,
    airport_heliport.airportheliport_ts.datemagneticvariation_value,
    airport_heliport.airportheliport_ts.datemagneticvariation_nilreason,
    airport_heliport.airportheliport_ts.magneticvariationchange_value,
    airport_heliport.airportheliport_ts.magneticvariationchange_nilreason,
    airport_heliport.airportheliport_ts.altimeterchecklocation_value,
    airport_heliport.airportheliport_ts.altimeterchecklocation_nilreason,
    airport_heliport.airportheliport_ts.secondarypowersupply_value,
    airport_heliport.airportheliport_ts.secondarypowersupply_nilreason,
    airport_heliport.airportheliport_ts.winddirectionindicator_value,
    airport_heliport.airportheliport_ts.winddirectionindicator_nilreason,
    airport_heliport.airportheliport_ts.landingdirectionindicator_value,
    airport_heliport.airportheliport_ts.landingdirectionindicator_nilreason,
    airport_heliport.airportheliport_ts.abandoned_value,
    airport_heliport.airportheliport_ts.abandoned_nilreason,
    airport_heliport.airportheliport_ts.fieldelevation_value,
    airport_heliport.airportheliport_ts.fieldelevation_uom,
    airport_heliport.airportheliport_ts.fieldelevation_nilreason,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_value,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_uom,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_nilreason,
    airport_heliport.airportheliport_ts.referencetemperature_value,
    airport_heliport.airportheliport_ts.referencetemperature_uom,
    airport_heliport.airportheliport_ts.referencetemperature_nilreason,
    airport_heliport.airportheliport_ts.transitionaltitude_value,
    airport_heliport.airportheliport_ts.transitionaltitude_uom,
    airport_heliport.airportheliport_ts.transitionaltitude_nilreason,
    airport_heliport.airportheliport_ts.transitionlevel_value,
    airport_heliport.airportheliport_ts.transitionlevel_uom,
    airport_heliport.airportheliport_ts.transitionlevel_nilreason,
    airport_heliport.airportheliport_ts.lowesttemperature_value,
    airport_heliport.airportheliport_ts.lowesttemperature_uom,
    airport_heliport.airportheliport_ts.lowesttemperature_nilreason,
    airport_heliport_airportheliportresponsibilityorganisation_view_ejlaex.id,
    geometry_elevatedpoint_view_gicaym.geom,
    geometry_elevatedpoint_view_gicaym.elevation,
    geometry_elevatedpoint_view_gicaym.geoidUndulation,
    geometry_elevatedpoint_view_gicaym.verticalDatum,
    geometry_elevatedpoint_view_gicaym.verticalAccuracy,
    geometry_elevatedpoint_view_gicaym.horizontalAccuracy,
    geometry_elevatedsurface_view_unpcfp.geom,
    geometry_elevatedsurface_view_unpcfp.elevation,
    geometry_elevatedsurface_view_unpcfp.geoidUndulation,
    geometry_elevatedsurface_view_unpcfp.verticalDatum,
    geometry_elevatedsurface_view_unpcfp.verticalAccuracy,
    geometry_elevatedsurface_view_unpcfp.horizontalAccuracy
order by airportheliport.identifier, airportheliport_ts.sequence_number, airportheliport_ts.correction_number DESC;
create index on airport_heliport.airportheliport_view (id);
-- AirportHotSpotTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airporthotspot_view cascade;
create materialized view airport_heliport.airporthotspot_view as
select distinct on (airporthotspot.identifier,airporthotspot_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airporthotspot.id,
    airport_heliport.airporthotspot_ts.id as ts_id,
    airport_heliport.airporthotspot_tsp.id as tsp_id,
    airport_heliport.airporthotspot.identifier,
    airport_heliport.airporthotspot_ts.interpretation,
    airport_heliport.airporthotspot_ts.sequence_number,
    airport_heliport.airporthotspot_ts.correction_number,
    airport_heliport.airporthotspot_ts.valid_time_begin,
    airport_heliport.airporthotspot_ts.valid_time_end,
    airport_heliport.airporthotspot_ts.feature_lifetime_begin,
    airport_heliport.airporthotspot_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airporthotspot_ts.designator_value as varchar), '(' || airport_heliport.airporthotspot_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.airporthotspot_ts.instruction_value as varchar), '(' || airport_heliport.airporthotspot_ts.instruction_nilreason || ')') as instruction,
    geometry_elevatedsurface_view_fuhpge.geom AS area_geom,
    geometry_elevatedsurface_view_fuhpge.elevation AS area_elevation,
    geometry_elevatedsurface_view_fuhpge.geoidUndulation AS area_geoidundulation,
    geometry_elevatedsurface_view_fuhpge.verticalDatum AS area_verticaldatum,
    geometry_elevatedsurface_view_fuhpge.verticalAccuracy AS area_verticalaccuracy,
    geometry_elevatedsurface_view_fuhpge.horizontalAccuracy AS area_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_wfuqqq.title as varchar), '(' || airport_heliport_airportheliport_pt_wfuqqq.nilreason[1] || ')') AS affectedairport,
    airport_heliport_airportheliport_pt_wfuqqq.href AS affectedairport_href,
    jsonb_agg(notes_note_view_tbejkw.*) AS annotation
from airport_heliport.airporthotspot 
inner join master_join mj2 on airport_heliport.airporthotspot.id = mj2.source_id
inner join airport_heliport.airporthotspot_tsp on mj2.target_id = airport_heliport.airporthotspot_tsp.id
inner join airport_heliport.airporthotspot_ts on airport_heliport.airporthotspot_tsp.airporthotspottimeslice_id = airport_heliport.airporthotspot_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_fuhpge on airport_heliport.airporthotspot_ts.area_id = geometry_elevatedsurface_view_fuhpge.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_wfuqqq on airport_heliport.airporthotspot_ts.affectedairport_id = airport_heliport_airportheliport_pt_wfuqqq.id
left join master_join master_join_efedww on airport_heliport.airporthotspot_ts.id = master_join_efedww.source_id
left join notes.note_view notes_note_view_tbejkw on master_join_efedww.target_id = notes_note_view_tbejkw.id
where airport_heliport.airporthotspot.feature_status = 'APPROVED'
  and airport_heliport.airporthotspot_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airporthotspot.id,
    airport_heliport.airporthotspot_ts.id,
    airport_heliport.airporthotspot_tsp.id,
    airport_heliport.airporthotspot.identifier,
    airport_heliport.airporthotspot_ts.interpretation,
    airport_heliport.airporthotspot_ts.sequence_number,
    airport_heliport.airporthotspot_ts.correction_number,
    airport_heliport.airporthotspot_ts.valid_time_begin,
    airport_heliport.airporthotspot_ts.valid_time_end,
    airport_heliport.airporthotspot_ts.feature_lifetime_begin,
    airport_heliport.airporthotspot_ts.feature_lifetime_end,
    airport_heliport.airporthotspot_ts.designator_value,
    airport_heliport.airporthotspot_ts.designator_nilreason,
    airport_heliport.airporthotspot_ts.instruction_value,
    airport_heliport.airporthotspot_ts.instruction_nilreason,
    geometry_elevatedsurface_view_fuhpge.geom,
    geometry_elevatedsurface_view_fuhpge.elevation,
    geometry_elevatedsurface_view_fuhpge.geoidUndulation,
    geometry_elevatedsurface_view_fuhpge.verticalDatum,
    geometry_elevatedsurface_view_fuhpge.verticalAccuracy,
    geometry_elevatedsurface_view_fuhpge.horizontalAccuracy,
    airport_heliport_airportheliport_pt_wfuqqq.title,
    airport_heliport_airportheliport_pt_wfuqqq.nilreason[1],
    airport_heliport_airportheliport_pt_wfuqqq.href
order by airporthotspot.identifier, airporthotspot_ts.sequence_number, airporthotspot_ts.correction_number DESC;
create index on airport_heliport.airporthotspot_view (id);
-- AirportProtectionAreaMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.airportprotectionareamarking_view cascade;
create materialized view airport_heliport.airportprotectionareamarking_view as
select distinct on (airportprotectionareamarking.identifier,airportprotectionareamarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportprotectionareamarking.id,
    airport_heliport.airportprotectionareamarking_ts.id as ts_id,
    airport_heliport.airportprotectionareamarking_tsp.id as tsp_id,
    airport_heliport.airportprotectionareamarking.identifier,
    airport_heliport.airportprotectionareamarking_ts.interpretation,
    airport_heliport.airportprotectionareamarking_ts.sequence_number,
    airport_heliport.airportprotectionareamarking_ts.correction_number,
    airport_heliport.airportprotectionareamarking_ts.valid_time_begin,
    airport_heliport.airportprotectionareamarking_ts.valid_time_end,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_begin,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.condition_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.markinglocation_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.markinglocation_nilreason || ')') as markinglocation,
    jsonb_agg(airport_heliport_markingelement_view_ngzlfg.id) AS element,
    jsonb_agg(notes_note_view_pghxhy.*) AS annotation
from airport_heliport.airportprotectionareamarking 
inner join master_join mj2 on airport_heliport.airportprotectionareamarking.id = mj2.source_id
inner join airport_heliport.airportprotectionareamarking_tsp on mj2.target_id = airport_heliport.airportprotectionareamarking_tsp.id
inner join airport_heliport.airportprotectionareamarking_ts on airport_heliport.airportprotectionareamarking_tsp.airportprotectionareamarkingtimeslice_id = airport_heliport.airportprotectionareamarking_ts.id
left join master_join master_join_enyhpi on airport_heliport.airportprotectionareamarking_ts.id = master_join_enyhpi.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_ngzlfg on master_join_enyhpi.target_id = airport_heliport_markingelement_view_ngzlfg.id
left join master_join master_join_ohgtcy on airport_heliport.airportprotectionareamarking_ts.id = master_join_ohgtcy.source_id
left join notes.note_view notes_note_view_pghxhy on master_join_ohgtcy.target_id = notes_note_view_pghxhy.id
where airport_heliport.airportprotectionareamarking.feature_status = 'APPROVED'
  and airport_heliport.airportprotectionareamarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportprotectionareamarking.id,
    airport_heliport.airportprotectionareamarking_ts.id,
    airport_heliport.airportprotectionareamarking_tsp.id,
    airport_heliport.airportprotectionareamarking.identifier,
    airport_heliport.airportprotectionareamarking_ts.interpretation,
    airport_heliport.airportprotectionareamarking_ts.sequence_number,
    airport_heliport.airportprotectionareamarking_ts.correction_number,
    airport_heliport.airportprotectionareamarking_ts.valid_time_begin,
    airport_heliport.airportprotectionareamarking_ts.valid_time_end,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_begin,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_end,
    airport_heliport.airportprotectionareamarking_ts.markingicaostandard_value,
    airport_heliport.airportprotectionareamarking_ts.markingicaostandard_nilreason,
    airport_heliport.airportprotectionareamarking_ts.condition_value,
    airport_heliport.airportprotectionareamarking_ts.condition_nilreason,
    airport_heliport.airportprotectionareamarking_ts.markinglocation_value,
    airport_heliport.airportprotectionareamarking_ts.markinglocation_nilreason
order by airportprotectionareamarking.identifier, airportprotectionareamarking_ts.sequence_number, airportprotectionareamarking_ts.correction_number DESC;
create index on airport_heliport.airportprotectionareamarking_view (id);
-- AirportSuppliesServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view', 'service.nitrogen_view', 'service.oxygen_view', 'service.fuel_view', 'service.oil_view']
drop materialized view if exists service.airportsuppliesservice_view cascade;
create materialized view service.airportsuppliesservice_view as
select distinct on (airportsuppliesservice.identifier,airportsuppliesservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airportsuppliesservice.id,
    service.airportsuppliesservice_ts.id as ts_id,
    service.airportsuppliesservice_tsp.id as tsp_id,
    service.airportsuppliesservice.identifier,
    service.airportsuppliesservice_ts.interpretation,
    service.airportsuppliesservice_ts.sequence_number,
    service.airportsuppliesservice_ts.correction_number,
    service.airportsuppliesservice_ts.valid_time_begin,
    service.airportsuppliesservice_ts.valid_time_end,
    service.airportsuppliesservice_ts.feature_lifetime_begin,
    service.airportsuppliesservice_ts.feature_lifetime_end,
    coalesce(cast(service.airportsuppliesservice_ts.flightoperations_value as varchar), '(' || service.airportsuppliesservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airportsuppliesservice_ts.rank_value as varchar), '(' || service.airportsuppliesservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airportsuppliesservice_ts.complianticao_value as varchar), '(' || service.airportsuppliesservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airportsuppliesservice_ts.name_value as varchar), '(' || service.airportsuppliesservice_ts.name_nilreason || ')') as name,
    geometry_elevatedpoint_view_tplcak.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_tplcak.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_tplcak.geom) AS location_latitude,
    geometry_elevatedpoint_view_tplcak.elevation AS location_elevation,
    geometry_elevatedpoint_view_tplcak.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_tplcak.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_tplcak.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_tplcak.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_chkkzt.title as varchar), '(' || organisation_unit_pt_chkkzt.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_chkkzt.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_dudrfy.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_rzorpf.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_rzorpf.title AS varchar), '(' || service_radiocommunicationchannel_pt_rzorpf.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_rzorpf.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_nftoqd.id) AS availability,
    jsonb_agg(notes_note_view_lbbqyc.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_vdzgbs.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_vdzgbs.title AS varchar), '(' || airport_heliport_airportheliport_pt_vdzgbs.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_vdzgbs.href)) AS airportheliport,
    jsonb_agg(service_fuel_view_tspaho.id) AS fuelsupply,
    jsonb_agg(service_oil_view_ocfetm.id) AS oilsupply,
    jsonb_agg(service_nitrogen_view_dfgkkb.id) AS nitrogensupply,
    jsonb_agg(service_oxygen_view_ggjqmm.id) AS oxygensupply
from service.airportsuppliesservice 
inner join master_join mj2 on service.airportsuppliesservice.id = mj2.source_id
inner join service.airportsuppliesservice_tsp on mj2.target_id = service.airportsuppliesservice_tsp.id
inner join service.airportsuppliesservice_ts on service.airportsuppliesservice_tsp.airportsuppliesservicetimeslice_id = service.airportsuppliesservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_tplcak on service.airportsuppliesservice_ts.location_id = geometry_elevatedpoint_view_tplcak.id
left join organisation.unit_pt organisation_unit_pt_chkkzt on service.airportsuppliesservice_ts.serviceprovider_id = organisation_unit_pt_chkkzt.id
left join master_join master_join_zkjwux on service.airportsuppliesservice_ts.id = master_join_zkjwux.source_id
left join service.callsigndetail_view service_callsigndetail_view_dudrfy on master_join_zkjwux.target_id = service_callsigndetail_view_dudrfy.id
left join master_join master_join_tqohex on service.airportsuppliesservice_ts.id = master_join_tqohex.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_rzorpf on master_join_tqohex.target_id = service_radiocommunicationchannel_pt_rzorpf.id
left join master_join master_join_ovbsuv on service.airportsuppliesservice_ts.id = master_join_ovbsuv.source_id
left join shared.contactinformation_view shared_contactinformation_view_nwsgyj on master_join_ovbsuv.target_id = shared_contactinformation_view_nwsgyj.id
left join master_join master_join_lgpmoc on service.airportsuppliesservice_ts.id = master_join_lgpmoc.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_nftoqd on master_join_lgpmoc.target_id = service_serviceoperationalstatus_view_nftoqd.id
left join master_join master_join_ptrdfp on service.airportsuppliesservice_ts.id = master_join_ptrdfp.source_id
left join notes.note_view notes_note_view_lbbqyc on master_join_ptrdfp.target_id = notes_note_view_lbbqyc.id
left join master_join master_join_cksoeb on service.airportsuppliesservice_ts.id = master_join_cksoeb.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_vdzgbs on master_join_cksoeb.target_id = airport_heliport_airportheliport_pt_vdzgbs.id
left join master_join master_join_ozmzhl on service.airportsuppliesservice_ts.id = master_join_ozmzhl.source_id
left join service.fuel_view service_fuel_view_tspaho on master_join_ozmzhl.target_id = service_fuel_view_tspaho.id
left join master_join master_join_bobaui on service.airportsuppliesservice_ts.id = master_join_bobaui.source_id
left join service.oil_view service_oil_view_ocfetm on master_join_bobaui.target_id = service_oil_view_ocfetm.id
left join master_join master_join_wdbcrm on service.airportsuppliesservice_ts.id = master_join_wdbcrm.source_id
left join service.nitrogen_view service_nitrogen_view_dfgkkb on master_join_wdbcrm.target_id = service_nitrogen_view_dfgkkb.id
left join master_join master_join_ksbkmc on service.airportsuppliesservice_ts.id = master_join_ksbkmc.source_id
left join service.oxygen_view service_oxygen_view_ggjqmm on master_join_ksbkmc.target_id = service_oxygen_view_ggjqmm.id
where service.airportsuppliesservice.feature_status = 'APPROVED'
  and service.airportsuppliesservice_ts.feature_status = 'APPROVED'
group by
    service.airportsuppliesservice.id,
    service.airportsuppliesservice_ts.id,
    service.airportsuppliesservice_tsp.id,
    service.airportsuppliesservice.identifier,
    service.airportsuppliesservice_ts.interpretation,
    service.airportsuppliesservice_ts.sequence_number,
    service.airportsuppliesservice_ts.correction_number,
    service.airportsuppliesservice_ts.valid_time_begin,
    service.airportsuppliesservice_ts.valid_time_end,
    service.airportsuppliesservice_ts.feature_lifetime_begin,
    service.airportsuppliesservice_ts.feature_lifetime_end,
    service.airportsuppliesservice_ts.flightoperations_value,
    service.airportsuppliesservice_ts.flightoperations_nilreason,
    service.airportsuppliesservice_ts.rank_value,
    service.airportsuppliesservice_ts.rank_nilreason,
    service.airportsuppliesservice_ts.complianticao_value,
    service.airportsuppliesservice_ts.complianticao_nilreason,
    service.airportsuppliesservice_ts.name_value,
    service.airportsuppliesservice_ts.name_nilreason,
    geometry_elevatedpoint_view_tplcak.geom,
    geometry_elevatedpoint_view_tplcak.elevation,
    geometry_elevatedpoint_view_tplcak.geoidUndulation,
    geometry_elevatedpoint_view_tplcak.verticalDatum,
    geometry_elevatedpoint_view_tplcak.verticalAccuracy,
    geometry_elevatedpoint_view_tplcak.horizontalAccuracy,
    organisation_unit_pt_chkkzt.title,
    organisation_unit_pt_chkkzt.nilreason[1],
    organisation_unit_pt_chkkzt.href
order by airportsuppliesservice.identifier, airportsuppliesservice_ts.sequence_number, airportsuppliesservice_ts.correction_number DESC;
create index on service.airportsuppliesservice_view (id);
-- AirspaceBorderCrossingTimeSliceType
-- ['notes.note_view']
drop materialized view if exists routes.airspacebordercrossing_view cascade;
create materialized view routes.airspacebordercrossing_view as
select distinct on (airspacebordercrossing.identifier,airspacebordercrossing_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.airspacebordercrossing.id,
    routes.airspacebordercrossing_ts.id as ts_id,
    routes.airspacebordercrossing_tsp.id as tsp_id,
    routes.airspacebordercrossing.identifier,
    routes.airspacebordercrossing_ts.interpretation,
    routes.airspacebordercrossing_ts.sequence_number,
    routes.airspacebordercrossing_ts.correction_number,
    routes.airspacebordercrossing_ts.valid_time_begin,
    routes.airspacebordercrossing_ts.valid_time_end,
    routes.airspacebordercrossing_ts.feature_lifetime_begin,
    routes.airspacebordercrossing_ts.feature_lifetime_end,
    coalesce(cast(airspace_airspace_pt_kppwpn.title as varchar), '(' || airspace_airspace_pt_kppwpn.nilreason[1] || ')') AS exitedairspace,
    airspace_airspace_pt_kppwpn.href AS exitedairspace_href,
    coalesce(cast(airspace_airspace_pt_slkzha.title as varchar), '(' || airspace_airspace_pt_slkzha.nilreason[1] || ')') AS enteredairspace,
    airspace_airspace_pt_slkzha.href AS enteredairspace_href,
    jsonb_agg(notes_note_view_jrfshq.*) AS annotation
from routes.airspacebordercrossing 
inner join master_join mj2 on routes.airspacebordercrossing.id = mj2.source_id
inner join routes.airspacebordercrossing_tsp on mj2.target_id = routes.airspacebordercrossing_tsp.id
inner join routes.airspacebordercrossing_ts on routes.airspacebordercrossing_tsp.airspacebordercrossingtimeslice_id = routes.airspacebordercrossing_ts.id
left join airspace.airspace_pt airspace_airspace_pt_kppwpn on routes.airspacebordercrossing_ts.exitedairspace_id = airspace_airspace_pt_kppwpn.id
left join airspace.airspace_pt airspace_airspace_pt_slkzha on routes.airspacebordercrossing_ts.enteredairspace_id = airspace_airspace_pt_slkzha.id
left join master_join master_join_oophof on routes.airspacebordercrossing_ts.id = master_join_oophof.source_id
left join notes.note_view notes_note_view_jrfshq on master_join_oophof.target_id = notes_note_view_jrfshq.id
where routes.airspacebordercrossing.feature_status = 'APPROVED'
  and routes.airspacebordercrossing_ts.feature_status = 'APPROVED'
group by
    routes.airspacebordercrossing.id,
    routes.airspacebordercrossing_ts.id,
    routes.airspacebordercrossing_tsp.id,
    routes.airspacebordercrossing.identifier,
    routes.airspacebordercrossing_ts.interpretation,
    routes.airspacebordercrossing_ts.sequence_number,
    routes.airspacebordercrossing_ts.correction_number,
    routes.airspacebordercrossing_ts.valid_time_begin,
    routes.airspacebordercrossing_ts.valid_time_end,
    routes.airspacebordercrossing_ts.feature_lifetime_begin,
    routes.airspacebordercrossing_ts.feature_lifetime_end,
    airspace_airspace_pt_kppwpn.title,
    airspace_airspace_pt_kppwpn.nilreason[1],
    airspace_airspace_pt_kppwpn.href,
    airspace_airspace_pt_slkzha.title,
    airspace_airspace_pt_slkzha.nilreason[1],
    airspace_airspace_pt_slkzha.href
order by airspacebordercrossing.identifier, airspacebordercrossing_ts.sequence_number, airspacebordercrossing_ts.correction_number DESC;
create index on routes.airspacebordercrossing_view (id);
-- AirspaceTimeSliceType
-- ['notes.note_view', 'airspace.airspacelayerclass_view', 'airspace.airspaceactivation_view', 'airspace.airspacegeometrycomponent_view']
drop materialized view if exists airspace.airspace_view cascade;
create materialized view airspace.airspace_view as
select distinct on (airspace.identifier,airspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.airspace.id,
    airspace.airspace_ts.id as ts_id,
    airspace.airspace_tsp.id as tsp_id,
    airspace.airspace.identifier,
    airspace.airspace_ts.interpretation,
    airspace.airspace_ts.sequence_number,
    airspace.airspace_ts.correction_number,
    airspace.airspace_ts.valid_time_begin,
    airspace.airspace_ts.valid_time_end,
    airspace.airspace_ts.feature_lifetime_begin,
    airspace.airspace_ts.feature_lifetime_end,
    coalesce(cast(airspace.airspace_ts.type_value as varchar), '(' || airspace.airspace_ts.type_nilreason || ')') as type,
    coalesce(cast(airspace.airspace_ts.designator_value as varchar), '(' || airspace.airspace_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airspace.airspace_ts.localtype_value as varchar), '(' || airspace.airspace_ts.localtype_nilreason || ')') as localtype,
    coalesce(cast(airspace.airspace_ts.name_value as varchar), '(' || airspace.airspace_ts.name_nilreason || ')') as name,
    coalesce(cast(airspace.airspace_ts.designatoricao_value as varchar), '(' || airspace.airspace_ts.designatoricao_nilreason || ')') as designatoricao,
    coalesce(cast(airspace.airspace_ts.controltype_value as varchar), '(' || airspace.airspace_ts.controltype_nilreason || ')') as controltype,
    coalesce(cast(airspace.airspace_ts.upperlowerseparation_value as varchar) || ' ' || airspace.airspace_ts.upperlowerseparation_uom, '(' || airspace.airspace_ts.upperlowerseparation_nilreason || ')') as upperlowerseparation,
    coalesce(cast(routes_route_pt_gqdkdc.title as varchar), '(' || routes_route_pt_gqdkdc.nilreason[1] || ')') AS protectedroute,
    routes_route_pt_gqdkdc.href AS protectedroute_href,
    jsonb_agg(airspace_airspacelayerclass_view_ndxofy.id) AS clazz,
    jsonb_agg(airspace_airspacegeometrycomponent_view_khvibo.id) AS geometrycomponent,
    jsonb_agg(airspace_airspaceactivation_view_exrzbl.id) AS activation,
    jsonb_agg(notes_note_view_gzqber.*) AS annotation
from airspace.airspace 
inner join master_join mj2 on airspace.airspace.id = mj2.source_id
inner join airspace.airspace_tsp on mj2.target_id = airspace.airspace_tsp.id
inner join airspace.airspace_ts on airspace.airspace_tsp.airspacetimeslice_id = airspace.airspace_ts.id
left join routes.route_pt routes_route_pt_gqdkdc on airspace.airspace_ts.protectedroute_id = routes_route_pt_gqdkdc.id
left join master_join master_join_heqkqw on airspace.airspace_ts.id = master_join_heqkqw.source_id
left join airspace.airspacelayerclass_view airspace_airspacelayerclass_view_ndxofy on master_join_heqkqw.target_id = airspace_airspacelayerclass_view_ndxofy.id
left join master_join master_join_afgzns on airspace.airspace_ts.id = master_join_afgzns.source_id
left join airspace.airspacegeometrycomponent_view airspace_airspacegeometrycomponent_view_khvibo on master_join_afgzns.target_id = airspace_airspacegeometrycomponent_view_khvibo.id
left join master_join master_join_dwttxs on airspace.airspace_ts.id = master_join_dwttxs.source_id
left join airspace.airspaceactivation_view airspace_airspaceactivation_view_exrzbl on master_join_dwttxs.target_id = airspace_airspaceactivation_view_exrzbl.id
left join master_join master_join_xslpli on airspace.airspace_ts.id = master_join_xslpli.source_id
left join notes.note_view notes_note_view_gzqber on master_join_xslpli.target_id = notes_note_view_gzqber.id
where airspace.airspace.feature_status = 'APPROVED'
  and airspace.airspace_ts.feature_status = 'APPROVED'
group by
    airspace.airspace.id,
    airspace.airspace_ts.id,
    airspace.airspace_tsp.id,
    airspace.airspace.identifier,
    airspace.airspace_ts.interpretation,
    airspace.airspace_ts.sequence_number,
    airspace.airspace_ts.correction_number,
    airspace.airspace_ts.valid_time_begin,
    airspace.airspace_ts.valid_time_end,
    airspace.airspace_ts.feature_lifetime_begin,
    airspace.airspace_ts.feature_lifetime_end,
    airspace.airspace_ts.type_value,
    airspace.airspace_ts.type_nilreason,
    airspace.airspace_ts.designator_value,
    airspace.airspace_ts.designator_nilreason,
    airspace.airspace_ts.localtype_value,
    airspace.airspace_ts.localtype_nilreason,
    airspace.airspace_ts.name_value,
    airspace.airspace_ts.name_nilreason,
    airspace.airspace_ts.designatoricao_value,
    airspace.airspace_ts.designatoricao_nilreason,
    airspace.airspace_ts.controltype_value,
    airspace.airspace_ts.controltype_nilreason,
    airspace.airspace_ts.upperlowerseparation_value,
    airspace.airspace_ts.upperlowerseparation_uom,
    airspace.airspace_ts.upperlowerseparation_nilreason,
    routes_route_pt_gqdkdc.title,
    routes_route_pt_gqdkdc.nilreason[1],
    routes_route_pt_gqdkdc.href
order by airspace.identifier, airspace_ts.sequence_number, airspace_ts.correction_number DESC;
create index on airspace.airspace_view (id);
-- AirTrafficControlServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view', 'routes.routeportion_view']
drop materialized view if exists service.airtrafficcontrolservice_view cascade;
create materialized view service.airtrafficcontrolservice_view as
select distinct on (airtrafficcontrolservice.identifier,airtrafficcontrolservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airtrafficcontrolservice.id,
    service.airtrafficcontrolservice_ts.id as ts_id,
    service.airtrafficcontrolservice_tsp.id as tsp_id,
    service.airtrafficcontrolservice.identifier,
    service.airtrafficcontrolservice_ts.interpretation,
    service.airtrafficcontrolservice_ts.sequence_number,
    service.airtrafficcontrolservice_ts.correction_number,
    service.airtrafficcontrolservice_ts.valid_time_begin,
    service.airtrafficcontrolservice_ts.valid_time_end,
    service.airtrafficcontrolservice_ts.feature_lifetime_begin,
    service.airtrafficcontrolservice_ts.feature_lifetime_end,
    coalesce(cast(service.airtrafficcontrolservice_ts.flightoperations_value as varchar), '(' || service.airtrafficcontrolservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airtrafficcontrolservice_ts.rank_value as varchar), '(' || service.airtrafficcontrolservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airtrafficcontrolservice_ts.complianticao_value as varchar), '(' || service.airtrafficcontrolservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airtrafficcontrolservice_ts.name_value as varchar), '(' || service.airtrafficcontrolservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airtrafficcontrolservice_ts.radarassisted_value as varchar), '(' || service.airtrafficcontrolservice_ts.radarassisted_nilreason || ')') as radarassisted,
    coalesce(cast(service.airtrafficcontrolservice_ts.datalinkenabled_value as varchar), '(' || service.airtrafficcontrolservice_ts.datalinkenabled_nilreason || ')') as datalinkenabled,
    coalesce(cast(service.airtrafficcontrolservice_ts.datalinkchannel_value as varchar), '(' || service.airtrafficcontrolservice_ts.datalinkchannel_nilreason || ')') as datalinkchannel,
    coalesce(cast(service.airtrafficcontrolservice_ts.type_value as varchar), '(' || service.airtrafficcontrolservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_nukpyz.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_nukpyz.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_nukpyz.geom) AS location_latitude,
    geometry_elevatedpoint_view_nukpyz.elevation AS location_elevation,
    geometry_elevatedpoint_view_nukpyz.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_nukpyz.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_nukpyz.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_nukpyz.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_jdjqwi.title as varchar), '(' || organisation_unit_pt_jdjqwi.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_jdjqwi.href AS serviceprovider_href,
    coalesce(cast(navaids_points_directionfinder_pt_dzhckk.title as varchar), '(' || navaids_points_directionfinder_pt_dzhckk.nilreason[1] || ')') AS aircraftlocator,
    navaids_points_directionfinder_pt_dzhckk.href AS aircraftlocator_href,
    jsonb_agg(service_callsigndetail_view_eqlxdq.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_zauzvy.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_zauzvy.title AS varchar), '(' || service_radiocommunicationchannel_pt_zauzvy.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_zauzvy.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_wlygln.id) AS availability,
    jsonb_agg(notes_note_view_pbkjqd.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_evikdf.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_evikdf.title AS varchar), '(' || airport_heliport_airportheliport_pt_evikdf.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_evikdf.href)) AS clientairport,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_cvycmw.id,
    'title', coalesce(cast(airspace_airspace_pt_cvycmw.title AS varchar), '(' || airspace_airspace_pt_cvycmw.nilreason[1] || ')'),
    'href', airspace_airspace_pt_cvycmw.href)) AS clientairspace,
    jsonb_agg(routes_routeportion_view_hxgbfo.id) AS clientroute,
    jsonb_agg(DISTINCT jsonb_build_object('id', holding_holdingpattern_pt_ieuueg.id,
    'title', coalesce(cast(holding_holdingpattern_pt_ieuueg.title AS varchar), '(' || holding_holdingpattern_pt_ieuueg.nilreason[1] || ')'),
    'href', holding_holdingpattern_pt_ieuueg.href)) AS clientholding,
    jsonb_agg(DISTINCT jsonb_build_object('id', aerial_refuelling_aerialrefuelling_pt_tqdsyh.id,
    'title', coalesce(cast(aerial_refuelling_aerialrefuelling_pt_tqdsyh.title AS varchar), '(' || aerial_refuelling_aerialrefuelling_pt_tqdsyh.nilreason[1] || ')'),
    'href', aerial_refuelling_aerialrefuelling_pt_tqdsyh.href)) AS clientaerialrefuelling
from service.airtrafficcontrolservice 
inner join master_join mj2 on service.airtrafficcontrolservice.id = mj2.source_id
inner join service.airtrafficcontrolservice_tsp on mj2.target_id = service.airtrafficcontrolservice_tsp.id
inner join service.airtrafficcontrolservice_ts on service.airtrafficcontrolservice_tsp.airtrafficcontrolservicetimeslice_id = service.airtrafficcontrolservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_nukpyz on service.airtrafficcontrolservice_ts.location_id = geometry_elevatedpoint_view_nukpyz.id
left join organisation.unit_pt organisation_unit_pt_jdjqwi on service.airtrafficcontrolservice_ts.serviceprovider_id = organisation_unit_pt_jdjqwi.id
left join navaids_points.directionfinder_pt navaids_points_directionfinder_pt_dzhckk on service.airtrafficcontrolservice_ts.aircraftlocator_id = navaids_points_directionfinder_pt_dzhckk.id
left join master_join master_join_ipivhe on service.airtrafficcontrolservice_ts.id = master_join_ipivhe.source_id
left join service.callsigndetail_view service_callsigndetail_view_eqlxdq on master_join_ipivhe.target_id = service_callsigndetail_view_eqlxdq.id
left join master_join master_join_mfwcwp on service.airtrafficcontrolservice_ts.id = master_join_mfwcwp.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_zauzvy on master_join_mfwcwp.target_id = service_radiocommunicationchannel_pt_zauzvy.id
left join master_join master_join_fxzclo on service.airtrafficcontrolservice_ts.id = master_join_fxzclo.source_id
left join shared.contactinformation_view shared_contactinformation_view_wwjrae on master_join_fxzclo.target_id = shared_contactinformation_view_wwjrae.id
left join master_join master_join_skaoiw on service.airtrafficcontrolservice_ts.id = master_join_skaoiw.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_wlygln on master_join_skaoiw.target_id = service_serviceoperationalstatus_view_wlygln.id
left join master_join master_join_wzhsmd on service.airtrafficcontrolservice_ts.id = master_join_wzhsmd.source_id
left join notes.note_view notes_note_view_pbkjqd on master_join_wzhsmd.target_id = notes_note_view_pbkjqd.id
left join master_join master_join_eptfec on service.airtrafficcontrolservice_ts.id = master_join_eptfec.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_evikdf on master_join_eptfec.target_id = airport_heliport_airportheliport_pt_evikdf.id
left join master_join master_join_xvewqq on service.airtrafficcontrolservice_ts.id = master_join_xvewqq.source_id
left join airspace.airspace_pt airspace_airspace_pt_cvycmw on master_join_xvewqq.target_id = airspace_airspace_pt_cvycmw.id
left join master_join master_join_ektutb on service.airtrafficcontrolservice_ts.id = master_join_ektutb.source_id
left join routes.routeportion_view routes_routeportion_view_hxgbfo on master_join_ektutb.target_id = routes_routeportion_view_hxgbfo.id
left join master_join master_join_pzitay on service.airtrafficcontrolservice_ts.id = master_join_pzitay.source_id
left join holding.holdingpattern_pt holding_holdingpattern_pt_ieuueg on master_join_pzitay.target_id = holding_holdingpattern_pt_ieuueg.id
left join master_join master_join_uwlbfg on service.airtrafficcontrolservice_ts.id = master_join_uwlbfg.source_id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_tqdsyh on master_join_uwlbfg.target_id = aerial_refuelling_aerialrefuelling_pt_tqdsyh.id
where service.airtrafficcontrolservice.feature_status = 'APPROVED'
  and service.airtrafficcontrolservice_ts.feature_status = 'APPROVED'
group by
    service.airtrafficcontrolservice.id,
    service.airtrafficcontrolservice_ts.id,
    service.airtrafficcontrolservice_tsp.id,
    service.airtrafficcontrolservice.identifier,
    service.airtrafficcontrolservice_ts.interpretation,
    service.airtrafficcontrolservice_ts.sequence_number,
    service.airtrafficcontrolservice_ts.correction_number,
    service.airtrafficcontrolservice_ts.valid_time_begin,
    service.airtrafficcontrolservice_ts.valid_time_end,
    service.airtrafficcontrolservice_ts.feature_lifetime_begin,
    service.airtrafficcontrolservice_ts.feature_lifetime_end,
    service.airtrafficcontrolservice_ts.flightoperations_value,
    service.airtrafficcontrolservice_ts.flightoperations_nilreason,
    service.airtrafficcontrolservice_ts.rank_value,
    service.airtrafficcontrolservice_ts.rank_nilreason,
    service.airtrafficcontrolservice_ts.complianticao_value,
    service.airtrafficcontrolservice_ts.complianticao_nilreason,
    service.airtrafficcontrolservice_ts.name_value,
    service.airtrafficcontrolservice_ts.name_nilreason,
    service.airtrafficcontrolservice_ts.radarassisted_value,
    service.airtrafficcontrolservice_ts.radarassisted_nilreason,
    service.airtrafficcontrolservice_ts.datalinkenabled_value,
    service.airtrafficcontrolservice_ts.datalinkenabled_nilreason,
    service.airtrafficcontrolservice_ts.datalinkchannel_value,
    service.airtrafficcontrolservice_ts.datalinkchannel_nilreason,
    service.airtrafficcontrolservice_ts.type_value,
    service.airtrafficcontrolservice_ts.type_nilreason,
    geometry_elevatedpoint_view_nukpyz.geom,
    geometry_elevatedpoint_view_nukpyz.elevation,
    geometry_elevatedpoint_view_nukpyz.geoidUndulation,
    geometry_elevatedpoint_view_nukpyz.verticalDatum,
    geometry_elevatedpoint_view_nukpyz.verticalAccuracy,
    geometry_elevatedpoint_view_nukpyz.horizontalAccuracy,
    organisation_unit_pt_jdjqwi.title,
    organisation_unit_pt_jdjqwi.nilreason[1],
    organisation_unit_pt_jdjqwi.href,
    navaids_points_directionfinder_pt_dzhckk.title,
    navaids_points_directionfinder_pt_dzhckk.nilreason[1],
    navaids_points_directionfinder_pt_dzhckk.href
order by airtrafficcontrolservice.identifier, airtrafficcontrolservice_ts.sequence_number, airtrafficcontrolservice_ts.correction_number DESC;
create index on service.airtrafficcontrolservice_view (id);
-- AirTrafficManagementServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view', 'routes.routeportion_view']
drop materialized view if exists service.airtrafficmanagementservice_view cascade;
create materialized view service.airtrafficmanagementservice_view as
select distinct on (airtrafficmanagementservice.identifier,airtrafficmanagementservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airtrafficmanagementservice.id,
    service.airtrafficmanagementservice_ts.id as ts_id,
    service.airtrafficmanagementservice_tsp.id as tsp_id,
    service.airtrafficmanagementservice.identifier,
    service.airtrafficmanagementservice_ts.interpretation,
    service.airtrafficmanagementservice_ts.sequence_number,
    service.airtrafficmanagementservice_ts.correction_number,
    service.airtrafficmanagementservice_ts.valid_time_begin,
    service.airtrafficmanagementservice_ts.valid_time_end,
    service.airtrafficmanagementservice_ts.feature_lifetime_begin,
    service.airtrafficmanagementservice_ts.feature_lifetime_end,
    coalesce(cast(service.airtrafficmanagementservice_ts.flightoperations_value as varchar), '(' || service.airtrafficmanagementservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airtrafficmanagementservice_ts.rank_value as varchar), '(' || service.airtrafficmanagementservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airtrafficmanagementservice_ts.complianticao_value as varchar), '(' || service.airtrafficmanagementservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airtrafficmanagementservice_ts.name_value as varchar), '(' || service.airtrafficmanagementservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airtrafficmanagementservice_ts.type_value as varchar), '(' || service.airtrafficmanagementservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_byyxxj.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_byyxxj.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_byyxxj.geom) AS location_latitude,
    geometry_elevatedpoint_view_byyxxj.elevation AS location_elevation,
    geometry_elevatedpoint_view_byyxxj.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_byyxxj.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_byyxxj.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_byyxxj.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_kbckjd.title as varchar), '(' || organisation_unit_pt_kbckjd.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_kbckjd.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_hmsqwh.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_ynseru.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_ynseru.title AS varchar), '(' || service_radiocommunicationchannel_pt_ynseru.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_ynseru.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_wpbchp.id) AS availability,
    jsonb_agg(notes_note_view_cicfni.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_idkgij.id,
    'title', coalesce(cast(airspace_airspace_pt_idkgij.title AS varchar), '(' || airspace_airspace_pt_idkgij.nilreason[1] || ')'),
    'href', airspace_airspace_pt_idkgij.href)) AS clientairspace,
    jsonb_agg(DISTINCT jsonb_build_object('id', aerial_refuelling_aerialrefuelling_pt_zhfuze.id,
    'title', coalesce(cast(aerial_refuelling_aerialrefuelling_pt_zhfuze.title AS varchar), '(' || aerial_refuelling_aerialrefuelling_pt_zhfuze.nilreason[1] || ')'),
    'href', aerial_refuelling_aerialrefuelling_pt_zhfuze.href)) AS clientaerialrefuelling,
    jsonb_agg(routes_routeportion_view_ikcnot.id) AS clientroute
from service.airtrafficmanagementservice 
inner join master_join mj2 on service.airtrafficmanagementservice.id = mj2.source_id
inner join service.airtrafficmanagementservice_tsp on mj2.target_id = service.airtrafficmanagementservice_tsp.id
inner join service.airtrafficmanagementservice_ts on service.airtrafficmanagementservice_tsp.airtrafficmanagementservicetimeslice_id = service.airtrafficmanagementservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_byyxxj on service.airtrafficmanagementservice_ts.location_id = geometry_elevatedpoint_view_byyxxj.id
left join organisation.unit_pt organisation_unit_pt_kbckjd on service.airtrafficmanagementservice_ts.serviceprovider_id = organisation_unit_pt_kbckjd.id
left join master_join master_join_sztfvq on service.airtrafficmanagementservice_ts.id = master_join_sztfvq.source_id
left join service.callsigndetail_view service_callsigndetail_view_hmsqwh on master_join_sztfvq.target_id = service_callsigndetail_view_hmsqwh.id
left join master_join master_join_qjilue on service.airtrafficmanagementservice_ts.id = master_join_qjilue.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_ynseru on master_join_qjilue.target_id = service_radiocommunicationchannel_pt_ynseru.id
left join master_join master_join_itxpkz on service.airtrafficmanagementservice_ts.id = master_join_itxpkz.source_id
left join shared.contactinformation_view shared_contactinformation_view_qzdwab on master_join_itxpkz.target_id = shared_contactinformation_view_qzdwab.id
left join master_join master_join_empubh on service.airtrafficmanagementservice_ts.id = master_join_empubh.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_wpbchp on master_join_empubh.target_id = service_serviceoperationalstatus_view_wpbchp.id
left join master_join master_join_depnsz on service.airtrafficmanagementservice_ts.id = master_join_depnsz.source_id
left join notes.note_view notes_note_view_cicfni on master_join_depnsz.target_id = notes_note_view_cicfni.id
left join master_join master_join_ctanfs on service.airtrafficmanagementservice_ts.id = master_join_ctanfs.source_id
left join airspace.airspace_pt airspace_airspace_pt_idkgij on master_join_ctanfs.target_id = airspace_airspace_pt_idkgij.id
left join master_join master_join_tsmayt on service.airtrafficmanagementservice_ts.id = master_join_tsmayt.source_id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_zhfuze on master_join_tsmayt.target_id = aerial_refuelling_aerialrefuelling_pt_zhfuze.id
left join master_join master_join_ezrjmw on service.airtrafficmanagementservice_ts.id = master_join_ezrjmw.source_id
left join routes.routeportion_view routes_routeportion_view_ikcnot on master_join_ezrjmw.target_id = routes_routeportion_view_ikcnot.id
where service.airtrafficmanagementservice.feature_status = 'APPROVED'
  and service.airtrafficmanagementservice_ts.feature_status = 'APPROVED'
group by
    service.airtrafficmanagementservice.id,
    service.airtrafficmanagementservice_ts.id,
    service.airtrafficmanagementservice_tsp.id,
    service.airtrafficmanagementservice.identifier,
    service.airtrafficmanagementservice_ts.interpretation,
    service.airtrafficmanagementservice_ts.sequence_number,
    service.airtrafficmanagementservice_ts.correction_number,
    service.airtrafficmanagementservice_ts.valid_time_begin,
    service.airtrafficmanagementservice_ts.valid_time_end,
    service.airtrafficmanagementservice_ts.feature_lifetime_begin,
    service.airtrafficmanagementservice_ts.feature_lifetime_end,
    service.airtrafficmanagementservice_ts.flightoperations_value,
    service.airtrafficmanagementservice_ts.flightoperations_nilreason,
    service.airtrafficmanagementservice_ts.rank_value,
    service.airtrafficmanagementservice_ts.rank_nilreason,
    service.airtrafficmanagementservice_ts.complianticao_value,
    service.airtrafficmanagementservice_ts.complianticao_nilreason,
    service.airtrafficmanagementservice_ts.name_value,
    service.airtrafficmanagementservice_ts.name_nilreason,
    service.airtrafficmanagementservice_ts.type_value,
    service.airtrafficmanagementservice_ts.type_nilreason,
    geometry_elevatedpoint_view_byyxxj.geom,
    geometry_elevatedpoint_view_byyxxj.elevation,
    geometry_elevatedpoint_view_byyxxj.geoidUndulation,
    geometry_elevatedpoint_view_byyxxj.verticalDatum,
    geometry_elevatedpoint_view_byyxxj.verticalAccuracy,
    geometry_elevatedpoint_view_byyxxj.horizontalAccuracy,
    organisation_unit_pt_kbckjd.title,
    organisation_unit_pt_kbckjd.nilreason[1],
    organisation_unit_pt_kbckjd.href
order by airtrafficmanagementservice.identifier, airtrafficmanagementservice_ts.sequence_number, airtrafficmanagementservice_ts.correction_number DESC;
create index on service.airtrafficmanagementservice_view (id);
-- AltimeterSourceTimeSliceType
-- ['airport_heliport.altimetersourcestatus_view', 'notes.note_view']
drop materialized view if exists airport_heliport.altimetersource_view cascade;
create materialized view airport_heliport.altimetersource_view as
select distinct on (altimetersource.identifier,altimetersource_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.altimetersource.id,
    airport_heliport.altimetersource_ts.id as ts_id,
    airport_heliport.altimetersource_tsp.id as tsp_id,
    airport_heliport.altimetersource.identifier,
    airport_heliport.altimetersource_ts.interpretation,
    airport_heliport.altimetersource_ts.sequence_number,
    airport_heliport.altimetersource_ts.correction_number,
    airport_heliport.altimetersource_ts.valid_time_begin,
    airport_heliport.altimetersource_ts.valid_time_end,
    airport_heliport.altimetersource_ts.feature_lifetime_begin,
    airport_heliport.altimetersource_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.altimetersource_ts.isremote_value as varchar), '(' || airport_heliport.altimetersource_ts.isremote_nilreason || ')') as isremote,
    coalesce(cast(airport_heliport.altimetersource_ts.isprimary_value as varchar), '(' || airport_heliport.altimetersource_ts.isprimary_nilreason || ')') as isprimary,
    jsonb_agg(airport_heliport_altimetersourcestatus_view_uvhrve.id) AS availability,
    jsonb_agg(notes_note_view_vygifz.*) AS annotation
from airport_heliport.altimetersource 
inner join master_join mj2 on airport_heliport.altimetersource.id = mj2.source_id
inner join airport_heliport.altimetersource_tsp on mj2.target_id = airport_heliport.altimetersource_tsp.id
inner join airport_heliport.altimetersource_ts on airport_heliport.altimetersource_tsp.altimetersourcetimeslice_id = airport_heliport.altimetersource_ts.id
left join master_join master_join_cnvmle on airport_heliport.altimetersource_ts.id = master_join_cnvmle.source_id
left join airport_heliport.altimetersourcestatus_view airport_heliport_altimetersourcestatus_view_uvhrve on master_join_cnvmle.target_id = airport_heliport_altimetersourcestatus_view_uvhrve.id
left join master_join master_join_bjvbzx on airport_heliport.altimetersource_ts.id = master_join_bjvbzx.source_id
left join notes.note_view notes_note_view_vygifz on master_join_bjvbzx.target_id = notes_note_view_vygifz.id
where airport_heliport.altimetersource.feature_status = 'APPROVED'
  and airport_heliport.altimetersource_ts.feature_status = 'APPROVED'
group by
    airport_heliport.altimetersource.id,
    airport_heliport.altimetersource_ts.id,
    airport_heliport.altimetersource_tsp.id,
    airport_heliport.altimetersource.identifier,
    airport_heliport.altimetersource_ts.interpretation,
    airport_heliport.altimetersource_ts.sequence_number,
    airport_heliport.altimetersource_ts.correction_number,
    airport_heliport.altimetersource_ts.valid_time_begin,
    airport_heliport.altimetersource_ts.valid_time_end,
    airport_heliport.altimetersource_ts.feature_lifetime_begin,
    airport_heliport.altimetersource_ts.feature_lifetime_end,
    airport_heliport.altimetersource_ts.isremote_value,
    airport_heliport.altimetersource_ts.isremote_nilreason,
    airport_heliport.altimetersource_ts.isprimary_value,
    airport_heliport.altimetersource_ts.isprimary_nilreason
order by altimetersource.identifier, altimetersource_ts.sequence_number, altimetersource_ts.correction_number DESC;
create index on airport_heliport.altimetersource_view (id);
-- AngleIndicationTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.angleindication_view cascade;
create materialized view navaids_points.angleindication_view as
select distinct on (angleindication.identifier,angleindication_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.angleindication.id,
    navaids_points.angleindication_ts.id as ts_id,
    navaids_points.angleindication_tsp.id as tsp_id,
    navaids_points.angleindication.identifier,
    navaids_points.angleindication_ts.interpretation,
    navaids_points.angleindication_ts.sequence_number,
    navaids_points.angleindication_ts.correction_number,
    navaids_points.angleindication_ts.valid_time_begin,
    navaids_points.angleindication_ts.valid_time_end,
    navaids_points.angleindication_ts.feature_lifetime_begin,
    navaids_points.angleindication_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.angleindication_ts.angle_value as varchar), '(' || navaids_points.angleindication_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.angleindication_ts.angletype_value as varchar), '(' || navaids_points.angleindication_ts.angletype_nilreason || ')') as angletype,
    coalesce(cast(navaids_points.angleindication_ts.indicationdirection_value as varchar), '(' || navaids_points.angleindication_ts.indicationdirection_nilreason || ')') as indicationdirection,
    coalesce(cast(navaids_points.angleindication_ts.trueangle_value as varchar), '(' || navaids_points.angleindication_ts.trueangle_nilreason || ')') as trueangle,
    coalesce(cast(navaids_points.angleindication_ts.cardinaldirection_value as varchar), '(' || navaids_points.angleindication_ts.cardinaldirection_nilreason || ')') as cardinaldirection,
    coalesce(cast(navaids_points.angleindication_ts.minimumreceptionaltitude_value as varchar) || ' ' || navaids_points.angleindication_ts.minimumreceptionaltitude_uom, '(' || navaids_points.angleindication_ts.minimumreceptionaltitude_nilreason || ')') as minimumreceptionaltitude,
    coalesce(cast(navaids_points_designatedpoint_pt_gdhixs.title as varchar), '(' || navaids_points_designatedpoint_pt_gdhixs.nilreason[1] || ')') AS fix,
    navaids_points_designatedpoint_pt_gdhixs.href AS fix_href,
    coalesce(cast(navaids_points_designatedpoint_pt_jcccbt.title as varchar), '(' || navaids_points_designatedpoint_pt_jcccbt.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_jcccbt.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_dchwoc.title as varchar), '(' || navaids_points_navaid_pt_dchwoc.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_dchwoc.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_fgotpp.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_fgotpp.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_fgotpp.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_hfqkbr.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_hfqkbr.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_hfqkbr.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_uwipvi.title as varchar), '(' || airport_heliport_airportheliport_pt_uwipvi.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_uwipvi.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_jlankd.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_jlankd.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_jlankd.geom) AS pointchoiceposition_latitude,
    geometry_point_view_jlankd.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    jsonb_agg(notes_note_view_mulszp.*) AS annotation
from navaids_points.angleindication 
inner join master_join mj2 on navaids_points.angleindication.id = mj2.source_id
inner join navaids_points.angleindication_tsp on mj2.target_id = navaids_points.angleindication_tsp.id
inner join navaids_points.angleindication_ts on navaids_points.angleindication_tsp.angleindicationtimeslice_id = navaids_points.angleindication_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_gdhixs on navaids_points.angleindication_ts.fix_id = navaids_points_designatedpoint_pt_gdhixs.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_jcccbt on navaids_points.angleindication_ts.angleindication_ts_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_jcccbt.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_dchwoc on navaids_points.angleindication_ts.angleindication_ts_navaidsystem_id = navaids_points_navaid_pt_dchwoc.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_fgotpp on navaids_points.angleindication_ts.angleindication_ts_aimingpoint_id = airport_heliport_touchdownliftoff_pt_fgotpp.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_hfqkbr on navaids_points.angleindication_ts.angleindication_ts_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_hfqkbr.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_uwipvi on navaids_points.angleindication_ts.angleindication_ts_airportreferencepoint_id = airport_heliport_airportheliport_pt_uwipvi.id
left join geometry.point_view geometry_point_view_jlankd on navaids_points.angleindication_ts.angleindication_ts_position_id = geometry_point_view_jlankd.id
left join master_join master_join_efyuxf on navaids_points.angleindication_ts.id = master_join_efyuxf.source_id
left join notes.note_view notes_note_view_mulszp on master_join_efyuxf.target_id = notes_note_view_mulszp.id
where navaids_points.angleindication.feature_status = 'APPROVED'
  and navaids_points.angleindication_ts.feature_status = 'APPROVED'
group by
    navaids_points.angleindication.id,
    navaids_points.angleindication_ts.id,
    navaids_points.angleindication_tsp.id,
    navaids_points.angleindication.identifier,
    navaids_points.angleindication_ts.interpretation,
    navaids_points.angleindication_ts.sequence_number,
    navaids_points.angleindication_ts.correction_number,
    navaids_points.angleindication_ts.valid_time_begin,
    navaids_points.angleindication_ts.valid_time_end,
    navaids_points.angleindication_ts.feature_lifetime_begin,
    navaids_points.angleindication_ts.feature_lifetime_end,
    navaids_points.angleindication_ts.angle_value,
    navaids_points.angleindication_ts.angle_nilreason,
    navaids_points.angleindication_ts.angletype_value,
    navaids_points.angleindication_ts.angletype_nilreason,
    navaids_points.angleindication_ts.indicationdirection_value,
    navaids_points.angleindication_ts.indicationdirection_nilreason,
    navaids_points.angleindication_ts.trueangle_value,
    navaids_points.angleindication_ts.trueangle_nilreason,
    navaids_points.angleindication_ts.cardinaldirection_value,
    navaids_points.angleindication_ts.cardinaldirection_nilreason,
    navaids_points.angleindication_ts.minimumreceptionaltitude_value,
    navaids_points.angleindication_ts.minimumreceptionaltitude_uom,
    navaids_points.angleindication_ts.minimumreceptionaltitude_nilreason,
    navaids_points_designatedpoint_pt_gdhixs.title,
    navaids_points_designatedpoint_pt_gdhixs.nilreason[1],
    navaids_points_designatedpoint_pt_gdhixs.href,
    navaids_points_designatedpoint_pt_jcccbt.title,
    navaids_points_designatedpoint_pt_jcccbt.nilreason[1],
    navaids_points_designatedpoint_pt_jcccbt.href,
    navaids_points_navaid_pt_dchwoc.title,
    navaids_points_navaid_pt_dchwoc.nilreason[1],
    navaids_points_navaid_pt_dchwoc.href,
    airport_heliport_touchdownliftoff_pt_fgotpp.title,
    airport_heliport_touchdownliftoff_pt_fgotpp.nilreason[1],
    airport_heliport_touchdownliftoff_pt_fgotpp.href,
    airport_heliport_runwaycentrelinepoint_pt_hfqkbr.title,
    airport_heliport_runwaycentrelinepoint_pt_hfqkbr.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_hfqkbr.href,
    airport_heliport_airportheliport_pt_uwipvi.title,
    airport_heliport_airportheliport_pt_uwipvi.nilreason[1],
    airport_heliport_airportheliport_pt_uwipvi.href,
    geometry_point_view_jlankd.geom,
    geometry_point_view_jlankd.horizontalAccuracy
order by angleindication.identifier, angleindication_ts.sequence_number, angleindication_ts.correction_number DESC;
create index on navaids_points.angleindication_view (id);
-- ApproachLightingSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.approachlightingsystem_view cascade;
create materialized view airport_heliport.approachlightingsystem_view as
select distinct on (approachlightingsystem.identifier,approachlightingsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.approachlightingsystem.id,
    airport_heliport.approachlightingsystem_ts.id as ts_id,
    airport_heliport.approachlightingsystem_tsp.id as tsp_id,
    airport_heliport.approachlightingsystem.identifier,
    airport_heliport.approachlightingsystem_ts.interpretation,
    airport_heliport.approachlightingsystem_ts.sequence_number,
    airport_heliport.approachlightingsystem_ts.correction_number,
    airport_heliport.approachlightingsystem_ts.valid_time_begin,
    airport_heliport.approachlightingsystem_ts.valid_time_end,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_begin,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.colour_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.classicao_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.classicao_nilreason || ')') as classicao,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.type_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.sequencedflashing_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.sequencedflashing_nilreason || ')') as sequencedflashing,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.alignmentindicator_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.alignmentindicator_nilreason || ')') as alignmentindicator,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.length_value as varchar) || ' ' || airport_heliport.approachlightingsystem_ts.length_uom, '(' || airport_heliport.approachlightingsystem_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_runwaydirection_pt_mupqvr.title as varchar), '(' || airport_heliport_runwaydirection_pt_mupqvr.nilreason[1] || ')') AS servedrunwaydirection,
    airport_heliport_runwaydirection_pt_mupqvr.href AS servedrunwaydirection_href,
    jsonb_agg(shared_lightelement_view_xheykj.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_zgqhgk.id) AS availability,
    jsonb_agg(notes_note_view_pcmmvl.*) AS annotation
from airport_heliport.approachlightingsystem 
inner join master_join mj2 on airport_heliport.approachlightingsystem.id = mj2.source_id
inner join airport_heliport.approachlightingsystem_tsp on mj2.target_id = airport_heliport.approachlightingsystem_tsp.id
inner join airport_heliport.approachlightingsystem_ts on airport_heliport.approachlightingsystem_tsp.approachlightingsystemtimeslice_id = airport_heliport.approachlightingsystem_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_mupqvr on airport_heliport.approachlightingsystem_ts.servedrunwaydirection_id = airport_heliport_runwaydirection_pt_mupqvr.id
left join master_join master_join_yfqzgo on airport_heliport.approachlightingsystem_ts.id = master_join_yfqzgo.source_id
left join shared.lightelement_view shared_lightelement_view_xheykj on master_join_yfqzgo.target_id = shared_lightelement_view_xheykj.id
left join master_join master_join_blsnew on airport_heliport.approachlightingsystem_ts.id = master_join_blsnew.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_zgqhgk on master_join_blsnew.target_id = airport_heliport_groundlightingavailability_view_zgqhgk.id
left join master_join master_join_zubyjb on airport_heliport.approachlightingsystem_ts.id = master_join_zubyjb.source_id
left join notes.note_view notes_note_view_pcmmvl on master_join_zubyjb.target_id = notes_note_view_pcmmvl.id
where airport_heliport.approachlightingsystem.feature_status = 'APPROVED'
  and airport_heliport.approachlightingsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.approachlightingsystem.id,
    airport_heliport.approachlightingsystem_ts.id,
    airport_heliport.approachlightingsystem_tsp.id,
    airport_heliport.approachlightingsystem.identifier,
    airport_heliport.approachlightingsystem_ts.interpretation,
    airport_heliport.approachlightingsystem_ts.sequence_number,
    airport_heliport.approachlightingsystem_ts.correction_number,
    airport_heliport.approachlightingsystem_ts.valid_time_begin,
    airport_heliport.approachlightingsystem_ts.valid_time_end,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_begin,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_end,
    airport_heliport.approachlightingsystem_ts.emergencylighting_value,
    airport_heliport.approachlightingsystem_ts.emergencylighting_nilreason,
    airport_heliport.approachlightingsystem_ts.intensitylevel_value,
    airport_heliport.approachlightingsystem_ts.intensitylevel_nilreason,
    airport_heliport.approachlightingsystem_ts.colour_value,
    airport_heliport.approachlightingsystem_ts.colour_nilreason,
    airport_heliport.approachlightingsystem_ts.classicao_value,
    airport_heliport.approachlightingsystem_ts.classicao_nilreason,
    airport_heliport.approachlightingsystem_ts.type_value,
    airport_heliport.approachlightingsystem_ts.type_nilreason,
    airport_heliport.approachlightingsystem_ts.sequencedflashing_value,
    airport_heliport.approachlightingsystem_ts.sequencedflashing_nilreason,
    airport_heliport.approachlightingsystem_ts.alignmentindicator_value,
    airport_heliport.approachlightingsystem_ts.alignmentindicator_nilreason,
    airport_heliport.approachlightingsystem_ts.length_value,
    airport_heliport.approachlightingsystem_ts.length_uom,
    airport_heliport.approachlightingsystem_ts.length_nilreason,
    airport_heliport_runwaydirection_pt_mupqvr.title,
    airport_heliport_runwaydirection_pt_mupqvr.nilreason[1],
    airport_heliport_runwaydirection_pt_mupqvr.href
order by approachlightingsystem.identifier, approachlightingsystem_ts.sequence_number, approachlightingsystem_ts.correction_number DESC;
create index on airport_heliport.approachlightingsystem_view (id);
-- ApronElementTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.apronareaavailability_view', 'notes.note_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.apronelement_view cascade;
create materialized view airport_heliport.apronelement_view as
select distinct on (apronelement.identifier,apronelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronelement.id,
    airport_heliport.apronelement_ts.id as ts_id,
    airport_heliport.apronelement_tsp.id as tsp_id,
    airport_heliport.apronelement.identifier,
    airport_heliport.apronelement_ts.interpretation,
    airport_heliport.apronelement_ts.sequence_number,
    airport_heliport.apronelement_ts.correction_number,
    airport_heliport.apronelement_ts.valid_time_begin,
    airport_heliport.apronelement_ts.valid_time_end,
    airport_heliport.apronelement_ts.feature_lifetime_begin,
    airport_heliport.apronelement_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apronelement_ts.type_value as varchar), '(' || airport_heliport.apronelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.apronelement_ts.jetwayavailability_value as varchar), '(' || airport_heliport.apronelement_ts.jetwayavailability_nilreason || ')') as jetwayavailability,
    coalesce(cast(airport_heliport.apronelement_ts.towingavailability_value as varchar), '(' || airport_heliport.apronelement_ts.towingavailability_nilreason || ')') as towingavailability,
    coalesce(cast(airport_heliport.apronelement_ts.dockingavailability_value as varchar), '(' || airport_heliport.apronelement_ts.dockingavailability_nilreason || ')') as dockingavailability,
    coalesce(cast(airport_heliport.apronelement_ts.groundpoweravailability_value as varchar), '(' || airport_heliport.apronelement_ts.groundpoweravailability_nilreason || ')') as groundpoweravailability,
    coalesce(cast(airport_heliport.apronelement_ts.length_value as varchar) || ' ' || airport_heliport.apronelement_ts.length_uom, '(' || airport_heliport.apronelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.apronelement_ts.width_value as varchar) || ' ' || airport_heliport.apronelement_ts.width_uom, '(' || airport_heliport.apronelement_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport_apron_pt_ubzqpa.title as varchar), '(' || airport_heliport_apron_pt_ubzqpa.nilreason[1] || ')') AS associatedapron,
    airport_heliport_apron_pt_ubzqpa.href AS associatedapron_href,
    airport_heliport_surfacecharacteristics_view_rhqqbv.id AS surfaceproperties,
    geometry_elevatedsurface_view_acrgqm.geom AS extent_geom,
    geometry_elevatedsurface_view_acrgqm.elevation AS extent_elevation,
    geometry_elevatedsurface_view_acrgqm.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_acrgqm.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_acrgqm.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_acrgqm.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_airportsuppliesservice_pt_cttpwo.id,
    'title', coalesce(cast(service_airportsuppliesservice_pt_cttpwo.title AS varchar), '(' || service_airportsuppliesservice_pt_cttpwo.nilreason[1] || ')'),
    'href', service_airportsuppliesservice_pt_cttpwo.href)) AS supplyservice,
    jsonb_agg(notes_note_view_buimbl.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_ovlmtn.id) AS availability
from airport_heliport.apronelement 
inner join master_join mj2 on airport_heliport.apronelement.id = mj2.source_id
inner join airport_heliport.apronelement_tsp on mj2.target_id = airport_heliport.apronelement_tsp.id
inner join airport_heliport.apronelement_ts on airport_heliport.apronelement_tsp.apronelementtimeslice_id = airport_heliport.apronelement_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_ubzqpa on airport_heliport.apronelement_ts.associatedapron_id = airport_heliport_apron_pt_ubzqpa.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_rhqqbv on airport_heliport.apronelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_rhqqbv.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_acrgqm on airport_heliport.apronelement_ts.extent_id = geometry_elevatedsurface_view_acrgqm.id
left join master_join master_join_mouqov on airport_heliport.apronelement_ts.id = master_join_mouqov.source_id
left join service.airportsuppliesservice_pt service_airportsuppliesservice_pt_cttpwo on master_join_mouqov.target_id = service_airportsuppliesservice_pt_cttpwo.id
left join master_join master_join_fswesp on airport_heliport.apronelement_ts.id = master_join_fswesp.source_id
left join notes.note_view notes_note_view_buimbl on master_join_fswesp.target_id = notes_note_view_buimbl.id
left join master_join master_join_bzzmzz on airport_heliport.apronelement_ts.id = master_join_bzzmzz.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_ovlmtn on master_join_bzzmzz.target_id = airport_heliport_apronareaavailability_view_ovlmtn.id
where airport_heliport.apronelement.feature_status = 'APPROVED'
  and airport_heliport.apronelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronelement.id,
    airport_heliport.apronelement_ts.id,
    airport_heliport.apronelement_tsp.id,
    airport_heliport.apronelement.identifier,
    airport_heliport.apronelement_ts.interpretation,
    airport_heliport.apronelement_ts.sequence_number,
    airport_heliport.apronelement_ts.correction_number,
    airport_heliport.apronelement_ts.valid_time_begin,
    airport_heliport.apronelement_ts.valid_time_end,
    airport_heliport.apronelement_ts.feature_lifetime_begin,
    airport_heliport.apronelement_ts.feature_lifetime_end,
    airport_heliport.apronelement_ts.type_value,
    airport_heliport.apronelement_ts.type_nilreason,
    airport_heliport.apronelement_ts.jetwayavailability_value,
    airport_heliport.apronelement_ts.jetwayavailability_nilreason,
    airport_heliport.apronelement_ts.towingavailability_value,
    airport_heliport.apronelement_ts.towingavailability_nilreason,
    airport_heliport.apronelement_ts.dockingavailability_value,
    airport_heliport.apronelement_ts.dockingavailability_nilreason,
    airport_heliport.apronelement_ts.groundpoweravailability_value,
    airport_heliport.apronelement_ts.groundpoweravailability_nilreason,
    airport_heliport.apronelement_ts.length_value,
    airport_heliport.apronelement_ts.length_uom,
    airport_heliport.apronelement_ts.length_nilreason,
    airport_heliport.apronelement_ts.width_value,
    airport_heliport.apronelement_ts.width_uom,
    airport_heliport.apronelement_ts.width_nilreason,
    airport_heliport_apron_pt_ubzqpa.title,
    airport_heliport_apron_pt_ubzqpa.nilreason[1],
    airport_heliport_apron_pt_ubzqpa.href,
    airport_heliport_surfacecharacteristics_view_rhqqbv.id,
    geometry_elevatedsurface_view_acrgqm.geom,
    geometry_elevatedsurface_view_acrgqm.elevation,
    geometry_elevatedsurface_view_acrgqm.geoidUndulation,
    geometry_elevatedsurface_view_acrgqm.verticalDatum,
    geometry_elevatedsurface_view_acrgqm.verticalAccuracy,
    geometry_elevatedsurface_view_acrgqm.horizontalAccuracy
order by apronelement.identifier, apronelement_ts.sequence_number, apronelement_ts.correction_number DESC;
create index on airport_heliport.apronelement_view (id);
-- ApronLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.apronlightsystem_view cascade;
create materialized view airport_heliport.apronlightsystem_view as
select distinct on (apronlightsystem.identifier,apronlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronlightsystem.id,
    airport_heliport.apronlightsystem_ts.id as ts_id,
    airport_heliport.apronlightsystem_tsp.id as tsp_id,
    airport_heliport.apronlightsystem.identifier,
    airport_heliport.apronlightsystem_ts.interpretation,
    airport_heliport.apronlightsystem_ts.sequence_number,
    airport_heliport.apronlightsystem_ts.correction_number,
    airport_heliport.apronlightsystem_ts.valid_time_begin,
    airport_heliport.apronlightsystem_ts.valid_time_end,
    airport_heliport.apronlightsystem_ts.feature_lifetime_begin,
    airport_heliport.apronlightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apronlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.apronlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.apronlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.apronlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.apronlightsystem_ts.colour_value as varchar), '(' || airport_heliport.apronlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.apronlightsystem_ts.position_value as varchar), '(' || airport_heliport.apronlightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_apron_pt_qlycxu.title as varchar), '(' || airport_heliport_apron_pt_qlycxu.nilreason[1] || ')') AS lightedapron,
    airport_heliport_apron_pt_qlycxu.href AS lightedapron_href,
    jsonb_agg(shared_lightelement_view_fxcmsz.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_zqtpkc.id) AS availability,
    jsonb_agg(notes_note_view_qpwhvk.*) AS annotation
from airport_heliport.apronlightsystem 
inner join master_join mj2 on airport_heliport.apronlightsystem.id = mj2.source_id
inner join airport_heliport.apronlightsystem_tsp on mj2.target_id = airport_heliport.apronlightsystem_tsp.id
inner join airport_heliport.apronlightsystem_ts on airport_heliport.apronlightsystem_tsp.apronlightsystemtimeslice_id = airport_heliport.apronlightsystem_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_qlycxu on airport_heliport.apronlightsystem_ts.lightedapron_id = airport_heliport_apron_pt_qlycxu.id
left join master_join master_join_wcbuhf on airport_heliport.apronlightsystem_ts.id = master_join_wcbuhf.source_id
left join shared.lightelement_view shared_lightelement_view_fxcmsz on master_join_wcbuhf.target_id = shared_lightelement_view_fxcmsz.id
left join master_join master_join_vbdpbf on airport_heliport.apronlightsystem_ts.id = master_join_vbdpbf.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_zqtpkc on master_join_vbdpbf.target_id = airport_heliport_groundlightingavailability_view_zqtpkc.id
left join master_join master_join_dauslb on airport_heliport.apronlightsystem_ts.id = master_join_dauslb.source_id
left join notes.note_view notes_note_view_qpwhvk on master_join_dauslb.target_id = notes_note_view_qpwhvk.id
where airport_heliport.apronlightsystem.feature_status = 'APPROVED'
  and airport_heliport.apronlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronlightsystem.id,
    airport_heliport.apronlightsystem_ts.id,
    airport_heliport.apronlightsystem_tsp.id,
    airport_heliport.apronlightsystem.identifier,
    airport_heliport.apronlightsystem_ts.interpretation,
    airport_heliport.apronlightsystem_ts.sequence_number,
    airport_heliport.apronlightsystem_ts.correction_number,
    airport_heliport.apronlightsystem_ts.valid_time_begin,
    airport_heliport.apronlightsystem_ts.valid_time_end,
    airport_heliport.apronlightsystem_ts.feature_lifetime_begin,
    airport_heliport.apronlightsystem_ts.feature_lifetime_end,
    airport_heliport.apronlightsystem_ts.emergencylighting_value,
    airport_heliport.apronlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.apronlightsystem_ts.intensitylevel_value,
    airport_heliport.apronlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.apronlightsystem_ts.colour_value,
    airport_heliport.apronlightsystem_ts.colour_nilreason,
    airport_heliport.apronlightsystem_ts.position_value,
    airport_heliport.apronlightsystem_ts.position_nilreason,
    airport_heliport_apron_pt_qlycxu.title,
    airport_heliport_apron_pt_qlycxu.nilreason[1],
    airport_heliport_apron_pt_qlycxu.href
order by apronlightsystem.identifier, apronlightsystem_ts.sequence_number, apronlightsystem_ts.correction_number DESC;
create index on airport_heliport.apronlightsystem_view (id);
-- ApronMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.apronmarking_view cascade;
create materialized view airport_heliport.apronmarking_view as
select distinct on (apronmarking.identifier,apronmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronmarking.id,
    airport_heliport.apronmarking_ts.id as ts_id,
    airport_heliport.apronmarking_tsp.id as tsp_id,
    airport_heliport.apronmarking.identifier,
    airport_heliport.apronmarking_ts.interpretation,
    airport_heliport.apronmarking_ts.sequence_number,
    airport_heliport.apronmarking_ts.correction_number,
    airport_heliport.apronmarking_ts.valid_time_begin,
    airport_heliport.apronmarking_ts.valid_time_end,
    airport_heliport.apronmarking_ts.feature_lifetime_begin,
    airport_heliport.apronmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apronmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.apronmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.apronmarking_ts.condition_value as varchar), '(' || airport_heliport.apronmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.apronmarking_ts.markinglocation_value as varchar), '(' || airport_heliport.apronmarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_apron_pt_uaifvg.title as varchar), '(' || airport_heliport_apron_pt_uaifvg.nilreason[1] || ')') AS markedapron,
    airport_heliport_apron_pt_uaifvg.href AS markedapron_href,
    jsonb_agg(airport_heliport_markingelement_view_hsetzv.id) AS element,
    jsonb_agg(notes_note_view_rotexo.*) AS annotation
from airport_heliport.apronmarking 
inner join master_join mj2 on airport_heliport.apronmarking.id = mj2.source_id
inner join airport_heliport.apronmarking_tsp on mj2.target_id = airport_heliport.apronmarking_tsp.id
inner join airport_heliport.apronmarking_ts on airport_heliport.apronmarking_tsp.apronmarkingtimeslice_id = airport_heliport.apronmarking_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_uaifvg on airport_heliport.apronmarking_ts.markedapron_id = airport_heliport_apron_pt_uaifvg.id
left join master_join master_join_frixwo on airport_heliport.apronmarking_ts.id = master_join_frixwo.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_hsetzv on master_join_frixwo.target_id = airport_heliport_markingelement_view_hsetzv.id
left join master_join master_join_kllcvz on airport_heliport.apronmarking_ts.id = master_join_kllcvz.source_id
left join notes.note_view notes_note_view_rotexo on master_join_kllcvz.target_id = notes_note_view_rotexo.id
where airport_heliport.apronmarking.feature_status = 'APPROVED'
  and airport_heliport.apronmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronmarking.id,
    airport_heliport.apronmarking_ts.id,
    airport_heliport.apronmarking_tsp.id,
    airport_heliport.apronmarking.identifier,
    airport_heliport.apronmarking_ts.interpretation,
    airport_heliport.apronmarking_ts.sequence_number,
    airport_heliport.apronmarking_ts.correction_number,
    airport_heliport.apronmarking_ts.valid_time_begin,
    airport_heliport.apronmarking_ts.valid_time_end,
    airport_heliport.apronmarking_ts.feature_lifetime_begin,
    airport_heliport.apronmarking_ts.feature_lifetime_end,
    airport_heliport.apronmarking_ts.markingicaostandard_value,
    airport_heliport.apronmarking_ts.markingicaostandard_nilreason,
    airport_heliport.apronmarking_ts.condition_value,
    airport_heliport.apronmarking_ts.condition_nilreason,
    airport_heliport.apronmarking_ts.markinglocation_value,
    airport_heliport.apronmarking_ts.markinglocation_nilreason,
    airport_heliport_apron_pt_uaifvg.title,
    airport_heliport_apron_pt_uaifvg.nilreason[1],
    airport_heliport_apron_pt_uaifvg.href
order by apronmarking.identifier, apronmarking_ts.sequence_number, apronmarking_ts.correction_number DESC;
create index on airport_heliport.apronmarking_view (id);
-- ApronTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.apronareaavailability_view', 'notes.note_view', 'airport_heliport.aproncontamination_view']
drop materialized view if exists airport_heliport.apron_view cascade;
create materialized view airport_heliport.apron_view as
select distinct on (apron.identifier,apron_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apron.id,
    airport_heliport.apron_ts.id as ts_id,
    airport_heliport.apron_tsp.id as tsp_id,
    airport_heliport.apron.identifier,
    airport_heliport.apron_ts.interpretation,
    airport_heliport.apron_ts.sequence_number,
    airport_heliport.apron_ts.correction_number,
    airport_heliport.apron_ts.valid_time_begin,
    airport_heliport.apron_ts.valid_time_end,
    airport_heliport.apron_ts.feature_lifetime_begin,
    airport_heliport.apron_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apron_ts.name_value as varchar), '(' || airport_heliport.apron_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport.apron_ts.abandoned_value as varchar), '(' || airport_heliport.apron_ts.abandoned_nilreason || ')') as abandoned,
    airport_heliport_surfacecharacteristics_view_knfcnx.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_nzcwso.title as varchar), '(' || airport_heliport_airportheliport_pt_nzcwso.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_nzcwso.href AS associatedairportheliport_href,
    jsonb_agg(airport_heliport_aproncontamination_view_ynyntp.id) AS contaminant,
    jsonb_agg(notes_note_view_kvdwkp.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_pfcunl.id) AS availability
from airport_heliport.apron 
inner join master_join mj2 on airport_heliport.apron.id = mj2.source_id
inner join airport_heliport.apron_tsp on mj2.target_id = airport_heliport.apron_tsp.id
inner join airport_heliport.apron_ts on airport_heliport.apron_tsp.aprontimeslice_id = airport_heliport.apron_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_knfcnx on airport_heliport.apron_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_knfcnx.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_nzcwso on airport_heliport.apron_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_nzcwso.id
left join master_join master_join_unywjd on airport_heliport.apron_ts.id = master_join_unywjd.source_id
left join airport_heliport.aproncontamination_view airport_heliport_aproncontamination_view_ynyntp on master_join_unywjd.target_id = airport_heliport_aproncontamination_view_ynyntp.id
left join master_join master_join_opxhbe on airport_heliport.apron_ts.id = master_join_opxhbe.source_id
left join notes.note_view notes_note_view_kvdwkp on master_join_opxhbe.target_id = notes_note_view_kvdwkp.id
left join master_join master_join_alpnzx on airport_heliport.apron_ts.id = master_join_alpnzx.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_pfcunl on master_join_alpnzx.target_id = airport_heliport_apronareaavailability_view_pfcunl.id
where airport_heliport.apron.feature_status = 'APPROVED'
  and airport_heliport.apron_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apron.id,
    airport_heliport.apron_ts.id,
    airport_heliport.apron_tsp.id,
    airport_heliport.apron.identifier,
    airport_heliport.apron_ts.interpretation,
    airport_heliport.apron_ts.sequence_number,
    airport_heliport.apron_ts.correction_number,
    airport_heliport.apron_ts.valid_time_begin,
    airport_heliport.apron_ts.valid_time_end,
    airport_heliport.apron_ts.feature_lifetime_begin,
    airport_heliport.apron_ts.feature_lifetime_end,
    airport_heliport.apron_ts.name_value,
    airport_heliport.apron_ts.name_nilreason,
    airport_heliport.apron_ts.abandoned_value,
    airport_heliport.apron_ts.abandoned_nilreason,
    airport_heliport_surfacecharacteristics_view_knfcnx.id,
    airport_heliport_airportheliport_pt_nzcwso.title,
    airport_heliport_airportheliport_pt_nzcwso.nilreason[1],
    airport_heliport_airportheliport_pt_nzcwso.href
order by apron.identifier, apron_ts.sequence_number, apron_ts.correction_number DESC;
create index on airport_heliport.apron_view (id);
-- ArrestingGearTimeSliceType
-- ['geometry.elevatedpoint_view', 'geometry.elevatedcurve_view', 'notes.note_view', 'geometry.elevatedsurface_view', 'airport_heliport.surfacecharacteristics_view']
drop materialized view if exists airport_heliport.arrestinggear_view cascade;
create materialized view airport_heliport.arrestinggear_view as
select distinct on (arrestinggear.identifier,arrestinggear_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.arrestinggear.id,
    airport_heliport.arrestinggear_ts.id as ts_id,
    airport_heliport.arrestinggear_tsp.id as tsp_id,
    airport_heliport.arrestinggear.identifier,
    airport_heliport.arrestinggear_ts.interpretation,
    airport_heliport.arrestinggear_ts.sequence_number,
    airport_heliport.arrestinggear_ts.correction_number,
    airport_heliport.arrestinggear_ts.valid_time_begin,
    airport_heliport.arrestinggear_ts.valid_time_end,
    airport_heliport.arrestinggear_ts.feature_lifetime_begin,
    airport_heliport.arrestinggear_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.arrestinggear_ts.status_value as varchar), '(' || airport_heliport.arrestinggear_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.arrestinggear_ts.engagedevice_value as varchar), '(' || airport_heliport.arrestinggear_ts.engagedevice_nilreason || ')') as engagedevice,
    coalesce(cast(airport_heliport.arrestinggear_ts.absorbtype_value as varchar), '(' || airport_heliport.arrestinggear_ts.absorbtype_nilreason || ')') as absorbtype,
    coalesce(cast(airport_heliport.arrestinggear_ts.bidirectional_value as varchar), '(' || airport_heliport.arrestinggear_ts.bidirectional_nilreason || ')') as bidirectional,
    coalesce(cast(airport_heliport.arrestinggear_ts.length_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.length_uom, '(' || airport_heliport.arrestinggear_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.arrestinggear_ts.width_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.width_uom, '(' || airport_heliport.arrestinggear_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.arrestinggear_ts.location_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.location_uom, '(' || airport_heliport.arrestinggear_ts.location_nilreason || ')') as location,
    airport_heliport_surfacecharacteristics_view_moomqo.id AS surfaceproperties,
    geometry_elevatedcurve_view_azrbjs.geom AS extentcurveextent_geom,
    geometry_elevatedcurve_view_azrbjs.elevation AS extentcurveextent_elevation,
    geometry_elevatedcurve_view_azrbjs.geoidUndulation AS extentcurveextent_geoidundulation,
    geometry_elevatedcurve_view_azrbjs.verticalDatum AS extentcurveextent_verticaldatum,
    geometry_elevatedcurve_view_azrbjs.verticalAccuracy AS extentcurveextent_verticalaccuracy,
    geometry_elevatedcurve_view_azrbjs.horizontalAccuracy AS extentcurveextent_horizontalaccuracy,
    geometry_elevatedsurface_view_yxpfqn.geom AS extentsurfaceextent_geom,
    geometry_elevatedsurface_view_yxpfqn.elevation AS extentsurfaceextent_elevation,
    geometry_elevatedsurface_view_yxpfqn.geoidUndulation AS extentsurfaceextent_geoidundulation,
    geometry_elevatedsurface_view_yxpfqn.verticalDatum AS extentsurfaceextent_verticaldatum,
    geometry_elevatedsurface_view_yxpfqn.verticalAccuracy AS extentsurfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_yxpfqn.horizontalAccuracy AS extentsurfaceextent_horizontalaccuracy,
    geometry_elevatedpoint_view_quoato.geom AS extentpointextent_geom,
    ST_X(geometry_elevatedpoint_view_quoato.geom) AS extentpointextent_longitude,
    ST_Y(geometry_elevatedpoint_view_quoato.geom) AS extentpointextent_latitude,
    geometry_elevatedpoint_view_quoato.elevation AS extentpointextent_elevation,
    geometry_elevatedpoint_view_quoato.geoidUndulation AS extentpointextent_geoidundulation,
    geometry_elevatedpoint_view_quoato.verticalDatum AS extentpointextent_verticaldatum,
    geometry_elevatedpoint_view_quoato.verticalAccuracy AS extentpointextent_verticalaccuracy,
    geometry_elevatedpoint_view_quoato.horizontalAccuracy AS extentpointextent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_alunyr.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_alunyr.title AS varchar), '(' || airport_heliport_runwaydirection_pt_alunyr.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_alunyr.href)) AS runwaydirection,
    jsonb_agg(notes_note_view_fizrll.*) AS annotation
from airport_heliport.arrestinggear 
inner join master_join mj2 on airport_heliport.arrestinggear.id = mj2.source_id
inner join airport_heliport.arrestinggear_tsp on mj2.target_id = airport_heliport.arrestinggear_tsp.id
inner join airport_heliport.arrestinggear_ts on airport_heliport.arrestinggear_tsp.arrestinggeartimeslice_id = airport_heliport.arrestinggear_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_moomqo on airport_heliport.arrestinggear_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_moomqo.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_azrbjs on airport_heliport.arrestinggear_ts.extent_curveextent_id = geometry_elevatedcurve_view_azrbjs.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_yxpfqn on airport_heliport.arrestinggear_ts.extent_surfaceextent_id = geometry_elevatedsurface_view_yxpfqn.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_quoato on airport_heliport.arrestinggear_ts.extent_pointextent_id = geometry_elevatedpoint_view_quoato.id
left join master_join master_join_dhytvm on airport_heliport.arrestinggear_ts.id = master_join_dhytvm.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_alunyr on master_join_dhytvm.target_id = airport_heliport_runwaydirection_pt_alunyr.id
left join master_join master_join_uklhzm on airport_heliport.arrestinggear_ts.id = master_join_uklhzm.source_id
left join notes.note_view notes_note_view_fizrll on master_join_uklhzm.target_id = notes_note_view_fizrll.id
where airport_heliport.arrestinggear.feature_status = 'APPROVED'
  and airport_heliport.arrestinggear_ts.feature_status = 'APPROVED'
group by
    airport_heliport.arrestinggear.id,
    airport_heliport.arrestinggear_ts.id,
    airport_heliport.arrestinggear_tsp.id,
    airport_heliport.arrestinggear.identifier,
    airport_heliport.arrestinggear_ts.interpretation,
    airport_heliport.arrestinggear_ts.sequence_number,
    airport_heliport.arrestinggear_ts.correction_number,
    airport_heliport.arrestinggear_ts.valid_time_begin,
    airport_heliport.arrestinggear_ts.valid_time_end,
    airport_heliport.arrestinggear_ts.feature_lifetime_begin,
    airport_heliport.arrestinggear_ts.feature_lifetime_end,
    airport_heliport.arrestinggear_ts.status_value,
    airport_heliport.arrestinggear_ts.status_nilreason,
    airport_heliport.arrestinggear_ts.engagedevice_value,
    airport_heliport.arrestinggear_ts.engagedevice_nilreason,
    airport_heliport.arrestinggear_ts.absorbtype_value,
    airport_heliport.arrestinggear_ts.absorbtype_nilreason,
    airport_heliport.arrestinggear_ts.bidirectional_value,
    airport_heliport.arrestinggear_ts.bidirectional_nilreason,
    airport_heliport.arrestinggear_ts.length_value,
    airport_heliport.arrestinggear_ts.length_uom,
    airport_heliport.arrestinggear_ts.length_nilreason,
    airport_heliport.arrestinggear_ts.width_value,
    airport_heliport.arrestinggear_ts.width_uom,
    airport_heliport.arrestinggear_ts.width_nilreason,
    airport_heliport.arrestinggear_ts.location_value,
    airport_heliport.arrestinggear_ts.location_uom,
    airport_heliport.arrestinggear_ts.location_nilreason,
    airport_heliport_surfacecharacteristics_view_moomqo.id,
    geometry_elevatedcurve_view_azrbjs.geom,
    geometry_elevatedcurve_view_azrbjs.elevation,
    geometry_elevatedcurve_view_azrbjs.geoidUndulation,
    geometry_elevatedcurve_view_azrbjs.verticalDatum,
    geometry_elevatedcurve_view_azrbjs.verticalAccuracy,
    geometry_elevatedcurve_view_azrbjs.horizontalAccuracy,
    geometry_elevatedsurface_view_yxpfqn.geom,
    geometry_elevatedsurface_view_yxpfqn.elevation,
    geometry_elevatedsurface_view_yxpfqn.geoidUndulation,
    geometry_elevatedsurface_view_yxpfqn.verticalDatum,
    geometry_elevatedsurface_view_yxpfqn.verticalAccuracy,
    geometry_elevatedsurface_view_yxpfqn.horizontalAccuracy,
    geometry_elevatedpoint_view_quoato.geom,
    geometry_elevatedpoint_view_quoato.elevation,
    geometry_elevatedpoint_view_quoato.geoidUndulation,
    geometry_elevatedpoint_view_quoato.verticalDatum,
    geometry_elevatedpoint_view_quoato.verticalAccuracy,
    geometry_elevatedpoint_view_quoato.horizontalAccuracy
order by arrestinggear.identifier, arrestinggear_ts.sequence_number, arrestinggear_ts.correction_number DESC;
create index on airport_heliport.arrestinggear_view (id);
-- ArrivalFeederLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.arrivalfeederleg_view cascade;
create materialized view procedure.arrivalfeederleg_view as
select distinct on (arrivalfeederleg.identifier,arrivalfeederleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.arrivalfeederleg.id,
    procedure.arrivalfeederleg_ts.id as ts_id,
    procedure.arrivalfeederleg_tsp.id as tsp_id,
    procedure.arrivalfeederleg.identifier,
    procedure.arrivalfeederleg_ts.interpretation,
    procedure.arrivalfeederleg_ts.sequence_number,
    procedure.arrivalfeederleg_ts.correction_number,
    procedure.arrivalfeederleg_ts.valid_time_begin,
    procedure.arrivalfeederleg_ts.valid_time_end,
    procedure.arrivalfeederleg_ts.feature_lifetime_begin,
    procedure.arrivalfeederleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.arrivalfeederleg_ts.endconditiondesignator_value as varchar), '(' || procedure.arrivalfeederleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.arrivalfeederleg_ts.legpath_value as varchar), '(' || procedure.arrivalfeederleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.arrivalfeederleg_ts.legtypearinc_value as varchar), '(' || procedure.arrivalfeederleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.arrivalfeederleg_ts.course_value as varchar), '(' || procedure.arrivalfeederleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.arrivalfeederleg_ts.coursetype_value as varchar), '(' || procedure.arrivalfeederleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.arrivalfeederleg_ts.coursedirection_value as varchar), '(' || procedure.arrivalfeederleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.arrivalfeederleg_ts.turndirection_value as varchar), '(' || procedure.arrivalfeederleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedinterpretation_value as varchar), '(' || procedure.arrivalfeederleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.arrivalfeederleg_ts.bankangle_value as varchar), '(' || procedure.arrivalfeederleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.arrivalfeederleg_ts.procedureturnrequired_value as varchar), '(' || procedure.arrivalfeederleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.arrivalfeederleg_ts.upperlimitreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.lowerlimitreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.arrivalfeederleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.arrivalfeederleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.arrivalfeederleg_ts.verticalangle_value as varchar), '(' || procedure.arrivalfeederleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.arrivalfeederleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.arrivalfeederleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedlimit_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.speedlimit_uom, '(' || procedure.arrivalfeederleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.arrivalfeederleg_ts.length_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.length_uom, '(' || procedure.arrivalfeederleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.arrivalfeederleg_ts.duration_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.duration_uom, '(' || procedure.arrivalfeederleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.arrivalfeederleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.upperlimitaltitude_uom, '(' || procedure.arrivalfeederleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.arrivalfeederleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.lowerlimitaltitude_uom, '(' || procedure.arrivalfeederleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.altitudeoverrideatc_uom, '(' || procedure.arrivalfeederleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_lsaalr.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_yfqrym.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_sbptry.id AS arccentre,
    geometry_curve_view_xgkwoa.geom AS trajectory_geom,
    geometry_curve_view_xgkwoa.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_zgadzd.title as varchar), '(' || navaids_points_angleindication_pt_zgadzd.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_zgadzd.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_pumkae.title as varchar), '(' || navaids_points_distanceindication_pt_pumkae.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_pumkae.href AS distance_href,
    procedure_holdinguse_view_ihohme.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_fizbpj.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_fizbpj.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_fizbpj.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_fodmwk.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_qmnmab.id) AS designsurface,
    jsonb_agg(notes_note_view_qpwslg.*) AS annotation
from procedure.arrivalfeederleg 
inner join master_join mj2 on procedure.arrivalfeederleg.id = mj2.source_id
inner join procedure.arrivalfeederleg_tsp on mj2.target_id = procedure.arrivalfeederleg_tsp.id
inner join procedure.arrivalfeederleg_ts on procedure.arrivalfeederleg_tsp.arrivalfeederlegtimeslice_id = procedure.arrivalfeederleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_lsaalr on procedure.arrivalfeederleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_lsaalr.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_yfqrym on procedure.arrivalfeederleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_yfqrym.id
left join geometry.curve_view geometry_curve_view_xgkwoa on procedure.arrivalfeederleg_ts.trajectory_id = geometry_curve_view_xgkwoa.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_sbptry on procedure.arrivalfeederleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_sbptry.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_zgadzd on procedure.arrivalfeederleg_ts.angle_id = navaids_points_angleindication_pt_zgadzd.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_pumkae on procedure.arrivalfeederleg_ts.distance_id = navaids_points_distanceindication_pt_pumkae.id
left join procedure.holdinguse_view procedure_holdinguse_view_ihohme on procedure.arrivalfeederleg_ts.holding_id = procedure_holdinguse_view_ihohme.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_fizbpj on procedure.arrivalfeederleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_fizbpj.id
left join master_join master_join_ekkama on procedure.arrivalfeederleg_ts.id = master_join_ekkama.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_fodmwk on master_join_ekkama.target_id = shared_aircraftcharacteristic_view_fodmwk.id
left join master_join master_join_yucdzq on procedure.arrivalfeederleg_ts.id = master_join_yucdzq.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_qmnmab on master_join_yucdzq.target_id = shared_obstacleassessmentarea_view_qmnmab.id
left join master_join master_join_dikryq on procedure.arrivalfeederleg_ts.id = master_join_dikryq.source_id
left join notes.note_view notes_note_view_qpwslg on master_join_dikryq.target_id = notes_note_view_qpwslg.id
where procedure.arrivalfeederleg.feature_status = 'APPROVED'
  and procedure.arrivalfeederleg_ts.feature_status = 'APPROVED'
group by
    procedure.arrivalfeederleg.id,
    procedure.arrivalfeederleg_ts.id,
    procedure.arrivalfeederleg_tsp.id,
    procedure.arrivalfeederleg.identifier,
    procedure.arrivalfeederleg_ts.interpretation,
    procedure.arrivalfeederleg_ts.sequence_number,
    procedure.arrivalfeederleg_ts.correction_number,
    procedure.arrivalfeederleg_ts.valid_time_begin,
    procedure.arrivalfeederleg_ts.valid_time_end,
    procedure.arrivalfeederleg_ts.feature_lifetime_begin,
    procedure.arrivalfeederleg_ts.feature_lifetime_end,
    procedure.arrivalfeederleg_ts.endconditiondesignator_value,
    procedure.arrivalfeederleg_ts.endconditiondesignator_nilreason,
    procedure.arrivalfeederleg_ts.legpath_value,
    procedure.arrivalfeederleg_ts.legpath_nilreason,
    procedure.arrivalfeederleg_ts.legtypearinc_value,
    procedure.arrivalfeederleg_ts.legtypearinc_nilreason,
    procedure.arrivalfeederleg_ts.course_value,
    procedure.arrivalfeederleg_ts.course_nilreason,
    procedure.arrivalfeederleg_ts.coursetype_value,
    procedure.arrivalfeederleg_ts.coursetype_nilreason,
    procedure.arrivalfeederleg_ts.coursedirection_value,
    procedure.arrivalfeederleg_ts.coursedirection_nilreason,
    procedure.arrivalfeederleg_ts.turndirection_value,
    procedure.arrivalfeederleg_ts.turndirection_nilreason,
    procedure.arrivalfeederleg_ts.speedreference_value,
    procedure.arrivalfeederleg_ts.speedreference_nilreason,
    procedure.arrivalfeederleg_ts.speedinterpretation_value,
    procedure.arrivalfeederleg_ts.speedinterpretation_nilreason,
    procedure.arrivalfeederleg_ts.bankangle_value,
    procedure.arrivalfeederleg_ts.bankangle_nilreason,
    procedure.arrivalfeederleg_ts.procedureturnrequired_value,
    procedure.arrivalfeederleg_ts.procedureturnrequired_nilreason,
    procedure.arrivalfeederleg_ts.upperlimitreference_value,
    procedure.arrivalfeederleg_ts.upperlimitreference_nilreason,
    procedure.arrivalfeederleg_ts.lowerlimitreference_value,
    procedure.arrivalfeederleg_ts.lowerlimitreference_nilreason,
    procedure.arrivalfeederleg_ts.altitudeinterpretation_value,
    procedure.arrivalfeederleg_ts.altitudeinterpretation_nilreason,
    procedure.arrivalfeederleg_ts.altitudeoverridereference_value,
    procedure.arrivalfeederleg_ts.altitudeoverridereference_nilreason,
    procedure.arrivalfeederleg_ts.verticalangle_value,
    procedure.arrivalfeederleg_ts.verticalangle_nilreason,
    procedure.arrivalfeederleg_ts.requirednavigationperformance_value,
    procedure.arrivalfeederleg_ts.requirednavigationperformance_nilreason,
    procedure.arrivalfeederleg_ts.speedlimit_value,
    procedure.arrivalfeederleg_ts.speedlimit_uom,
    procedure.arrivalfeederleg_ts.speedlimit_nilreason,
    procedure.arrivalfeederleg_ts.length_value,
    procedure.arrivalfeederleg_ts.length_uom,
    procedure.arrivalfeederleg_ts.length_nilreason,
    procedure.arrivalfeederleg_ts.duration_value,
    procedure.arrivalfeederleg_ts.duration_uom,
    procedure.arrivalfeederleg_ts.duration_nilreason,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_value,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_uom,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_nilreason,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_value,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_uom,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_nilreason,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_value,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_uom,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_lsaalr.id,
    navaids_points_terminalsegmentpoint_view_yfqrym.id,
    geometry_curve_view_xgkwoa.geom,
    geometry_curve_view_xgkwoa.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_sbptry.id,
    navaids_points_angleindication_pt_zgadzd.title,
    navaids_points_angleindication_pt_zgadzd.nilreason[1],
    navaids_points_angleindication_pt_zgadzd.href,
    navaids_points_distanceindication_pt_pumkae.title,
    navaids_points_distanceindication_pt_pumkae.nilreason[1],
    navaids_points_distanceindication_pt_pumkae.href,
    procedure_holdinguse_view_ihohme.id,
    procedure_instrumentapproachprocedure_pt_fizbpj.title,
    procedure_instrumentapproachprocedure_pt_fizbpj.nilreason[1],
    procedure_instrumentapproachprocedure_pt_fizbpj.href
order by arrivalfeederleg.identifier, arrivalfeederleg_ts.sequence_number, arrivalfeederleg_ts.correction_number DESC;
create index on procedure.arrivalfeederleg_view (id);
-- ArrivalLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.arrivalleg_view cascade;
create materialized view procedure.arrivalleg_view as
select distinct on (arrivalleg.identifier,arrivalleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.arrivalleg.id,
    procedure.arrivalleg_ts.id as ts_id,
    procedure.arrivalleg_tsp.id as tsp_id,
    procedure.arrivalleg.identifier,
    procedure.arrivalleg_ts.interpretation,
    procedure.arrivalleg_ts.sequence_number,
    procedure.arrivalleg_ts.correction_number,
    procedure.arrivalleg_ts.valid_time_begin,
    procedure.arrivalleg_ts.valid_time_end,
    procedure.arrivalleg_ts.feature_lifetime_begin,
    procedure.arrivalleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.arrivalleg_ts.endconditiondesignator_value as varchar), '(' || procedure.arrivalleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.arrivalleg_ts.legpath_value as varchar), '(' || procedure.arrivalleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.arrivalleg_ts.legtypearinc_value as varchar), '(' || procedure.arrivalleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.arrivalleg_ts.course_value as varchar), '(' || procedure.arrivalleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.arrivalleg_ts.coursetype_value as varchar), '(' || procedure.arrivalleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.arrivalleg_ts.coursedirection_value as varchar), '(' || procedure.arrivalleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.arrivalleg_ts.turndirection_value as varchar), '(' || procedure.arrivalleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.arrivalleg_ts.speedreference_value as varchar), '(' || procedure.arrivalleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.arrivalleg_ts.speedinterpretation_value as varchar), '(' || procedure.arrivalleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.arrivalleg_ts.bankangle_value as varchar), '(' || procedure.arrivalleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.arrivalleg_ts.procedureturnrequired_value as varchar), '(' || procedure.arrivalleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.arrivalleg_ts.upperlimitreference_value as varchar), '(' || procedure.arrivalleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.arrivalleg_ts.lowerlimitreference_value as varchar), '(' || procedure.arrivalleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.arrivalleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.arrivalleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.arrivalleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.arrivalleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.arrivalleg_ts.verticalangle_value as varchar), '(' || procedure.arrivalleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.arrivalleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.arrivalleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.arrivalleg_ts.speedlimit_value as varchar) || ' ' || procedure.arrivalleg_ts.speedlimit_uom, '(' || procedure.arrivalleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.arrivalleg_ts.length_value as varchar) || ' ' || procedure.arrivalleg_ts.length_uom, '(' || procedure.arrivalleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.arrivalleg_ts.duration_value as varchar) || ' ' || procedure.arrivalleg_ts.duration_uom, '(' || procedure.arrivalleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.arrivalleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.arrivalleg_ts.upperlimitaltitude_uom, '(' || procedure.arrivalleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.arrivalleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.arrivalleg_ts.lowerlimitaltitude_uom, '(' || procedure.arrivalleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.arrivalleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.arrivalleg_ts.altitudeoverrideatc_uom, '(' || procedure.arrivalleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_ggchla.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_mdgfln.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_bencqu.id AS arccentre,
    geometry_curve_view_zvjoiv.geom AS trajectory_geom,
    geometry_curve_view_zvjoiv.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_uuhjod.title as varchar), '(' || navaids_points_angleindication_pt_uuhjod.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_uuhjod.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_pghugj.title as varchar), '(' || navaids_points_distanceindication_pt_pghugj.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_pghugj.href AS distance_href,
    procedure_holdinguse_view_whiicp.id AS holding,
    coalesce(cast(procedure_standardinstrumentarrival_pt_xklmhf.title as varchar), '(' || procedure_standardinstrumentarrival_pt_xklmhf.nilreason[1] || ')') AS arrival,
    procedure_standardinstrumentarrival_pt_xklmhf.href AS arrival_href,
    jsonb_agg(shared_aircraftcharacteristic_view_vfhzvu.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_dxdptf.id) AS designsurface,
    jsonb_agg(notes_note_view_bqcnom.*) AS annotation
from procedure.arrivalleg 
inner join master_join mj2 on procedure.arrivalleg.id = mj2.source_id
inner join procedure.arrivalleg_tsp on mj2.target_id = procedure.arrivalleg_tsp.id
inner join procedure.arrivalleg_ts on procedure.arrivalleg_tsp.arrivallegtimeslice_id = procedure.arrivalleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_ggchla on procedure.arrivalleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_ggchla.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_mdgfln on procedure.arrivalleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_mdgfln.id
left join geometry.curve_view geometry_curve_view_zvjoiv on procedure.arrivalleg_ts.trajectory_id = geometry_curve_view_zvjoiv.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_bencqu on procedure.arrivalleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_bencqu.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_uuhjod on procedure.arrivalleg_ts.angle_id = navaids_points_angleindication_pt_uuhjod.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_pghugj on procedure.arrivalleg_ts.distance_id = navaids_points_distanceindication_pt_pghugj.id
left join procedure.holdinguse_view procedure_holdinguse_view_whiicp on procedure.arrivalleg_ts.holding_id = procedure_holdinguse_view_whiicp.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_xklmhf on procedure.arrivalleg_ts.arrival_id = procedure_standardinstrumentarrival_pt_xklmhf.id
left join master_join master_join_dowfla on procedure.arrivalleg_ts.id = master_join_dowfla.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_vfhzvu on master_join_dowfla.target_id = shared_aircraftcharacteristic_view_vfhzvu.id
left join master_join master_join_pttkuf on procedure.arrivalleg_ts.id = master_join_pttkuf.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_dxdptf on master_join_pttkuf.target_id = shared_obstacleassessmentarea_view_dxdptf.id
left join master_join master_join_cqrgqe on procedure.arrivalleg_ts.id = master_join_cqrgqe.source_id
left join notes.note_view notes_note_view_bqcnom on master_join_cqrgqe.target_id = notes_note_view_bqcnom.id
where procedure.arrivalleg.feature_status = 'APPROVED'
  and procedure.arrivalleg_ts.feature_status = 'APPROVED'
group by
    procedure.arrivalleg.id,
    procedure.arrivalleg_ts.id,
    procedure.arrivalleg_tsp.id,
    procedure.arrivalleg.identifier,
    procedure.arrivalleg_ts.interpretation,
    procedure.arrivalleg_ts.sequence_number,
    procedure.arrivalleg_ts.correction_number,
    procedure.arrivalleg_ts.valid_time_begin,
    procedure.arrivalleg_ts.valid_time_end,
    procedure.arrivalleg_ts.feature_lifetime_begin,
    procedure.arrivalleg_ts.feature_lifetime_end,
    procedure.arrivalleg_ts.endconditiondesignator_value,
    procedure.arrivalleg_ts.endconditiondesignator_nilreason,
    procedure.arrivalleg_ts.legpath_value,
    procedure.arrivalleg_ts.legpath_nilreason,
    procedure.arrivalleg_ts.legtypearinc_value,
    procedure.arrivalleg_ts.legtypearinc_nilreason,
    procedure.arrivalleg_ts.course_value,
    procedure.arrivalleg_ts.course_nilreason,
    procedure.arrivalleg_ts.coursetype_value,
    procedure.arrivalleg_ts.coursetype_nilreason,
    procedure.arrivalleg_ts.coursedirection_value,
    procedure.arrivalleg_ts.coursedirection_nilreason,
    procedure.arrivalleg_ts.turndirection_value,
    procedure.arrivalleg_ts.turndirection_nilreason,
    procedure.arrivalleg_ts.speedreference_value,
    procedure.arrivalleg_ts.speedreference_nilreason,
    procedure.arrivalleg_ts.speedinterpretation_value,
    procedure.arrivalleg_ts.speedinterpretation_nilreason,
    procedure.arrivalleg_ts.bankangle_value,
    procedure.arrivalleg_ts.bankangle_nilreason,
    procedure.arrivalleg_ts.procedureturnrequired_value,
    procedure.arrivalleg_ts.procedureturnrequired_nilreason,
    procedure.arrivalleg_ts.upperlimitreference_value,
    procedure.arrivalleg_ts.upperlimitreference_nilreason,
    procedure.arrivalleg_ts.lowerlimitreference_value,
    procedure.arrivalleg_ts.lowerlimitreference_nilreason,
    procedure.arrivalleg_ts.altitudeinterpretation_value,
    procedure.arrivalleg_ts.altitudeinterpretation_nilreason,
    procedure.arrivalleg_ts.altitudeoverridereference_value,
    procedure.arrivalleg_ts.altitudeoverridereference_nilreason,
    procedure.arrivalleg_ts.verticalangle_value,
    procedure.arrivalleg_ts.verticalangle_nilreason,
    procedure.arrivalleg_ts.requirednavigationperformance_value,
    procedure.arrivalleg_ts.requirednavigationperformance_nilreason,
    procedure.arrivalleg_ts.speedlimit_value,
    procedure.arrivalleg_ts.speedlimit_uom,
    procedure.arrivalleg_ts.speedlimit_nilreason,
    procedure.arrivalleg_ts.length_value,
    procedure.arrivalleg_ts.length_uom,
    procedure.arrivalleg_ts.length_nilreason,
    procedure.arrivalleg_ts.duration_value,
    procedure.arrivalleg_ts.duration_uom,
    procedure.arrivalleg_ts.duration_nilreason,
    procedure.arrivalleg_ts.upperlimitaltitude_value,
    procedure.arrivalleg_ts.upperlimitaltitude_uom,
    procedure.arrivalleg_ts.upperlimitaltitude_nilreason,
    procedure.arrivalleg_ts.lowerlimitaltitude_value,
    procedure.arrivalleg_ts.lowerlimitaltitude_uom,
    procedure.arrivalleg_ts.lowerlimitaltitude_nilreason,
    procedure.arrivalleg_ts.altitudeoverrideatc_value,
    procedure.arrivalleg_ts.altitudeoverrideatc_uom,
    procedure.arrivalleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_ggchla.id,
    navaids_points_terminalsegmentpoint_view_mdgfln.id,
    geometry_curve_view_zvjoiv.geom,
    geometry_curve_view_zvjoiv.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_bencqu.id,
    navaids_points_angleindication_pt_uuhjod.title,
    navaids_points_angleindication_pt_uuhjod.nilreason[1],
    navaids_points_angleindication_pt_uuhjod.href,
    navaids_points_distanceindication_pt_pghugj.title,
    navaids_points_distanceindication_pt_pghugj.nilreason[1],
    navaids_points_distanceindication_pt_pghugj.href,
    procedure_holdinguse_view_whiicp.id,
    procedure_standardinstrumentarrival_pt_xklmhf.title,
    procedure_standardinstrumentarrival_pt_xklmhf.nilreason[1],
    procedure_standardinstrumentarrival_pt_xklmhf.href
order by arrivalleg.identifier, arrivalleg_ts.sequence_number, arrivalleg_ts.correction_number DESC;
create index on procedure.arrivalleg_view (id);
-- AuthorityForAirspaceTimeSliceType
-- ['notes.note_view']
drop materialized view if exists airspace.authorityforairspace_view cascade;
create materialized view airspace.authorityforairspace_view as
select distinct on (authorityforairspace.identifier,authorityforairspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.authorityforairspace.id,
    airspace.authorityforairspace_ts.id as ts_id,
    airspace.authorityforairspace_tsp.id as tsp_id,
    airspace.authorityforairspace.identifier,
    airspace.authorityforairspace_ts.interpretation,
    airspace.authorityforairspace_ts.sequence_number,
    airspace.authorityforairspace_ts.correction_number,
    airspace.authorityforairspace_ts.valid_time_begin,
    airspace.authorityforairspace_ts.valid_time_end,
    airspace.authorityforairspace_ts.feature_lifetime_begin,
    airspace.authorityforairspace_ts.feature_lifetime_end,
    coalesce(cast(airspace.authorityforairspace_ts.type_value as varchar), '(' || airspace.authorityforairspace_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_gsvkkf.title as varchar), '(' || organisation_organisationauthority_pt_gsvkkf.nilreason[1] || ')') AS responsibleorganisation,
    organisation_organisationauthority_pt_gsvkkf.href AS responsibleorganisation_href,
    coalesce(cast(airspace_airspace_pt_jkbliq.title as varchar), '(' || airspace_airspace_pt_jkbliq.nilreason[1] || ')') AS assignedairspace,
    airspace_airspace_pt_jkbliq.href AS assignedairspace_href,
    jsonb_agg(notes_note_view_duvrbf.*) AS annotation
from airspace.authorityforairspace 
inner join master_join mj2 on airspace.authorityforairspace.id = mj2.source_id
inner join airspace.authorityforairspace_tsp on mj2.target_id = airspace.authorityforairspace_tsp.id
inner join airspace.authorityforairspace_ts on airspace.authorityforairspace_tsp.authorityforairspacetimeslice_id = airspace.authorityforairspace_ts.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_gsvkkf on airspace.authorityforairspace_ts.responsibleorganisation_id = organisation_organisationauthority_pt_gsvkkf.id
left join airspace.airspace_pt airspace_airspace_pt_jkbliq on airspace.authorityforairspace_ts.assignedairspace_id = airspace_airspace_pt_jkbliq.id
left join master_join master_join_kdtfpg on airspace.authorityforairspace_ts.id = master_join_kdtfpg.source_id
left join notes.note_view notes_note_view_duvrbf on master_join_kdtfpg.target_id = notes_note_view_duvrbf.id
where airspace.authorityforairspace.feature_status = 'APPROVED'
  and airspace.authorityforairspace_ts.feature_status = 'APPROVED'
group by
    airspace.authorityforairspace.id,
    airspace.authorityforairspace_ts.id,
    airspace.authorityforairspace_tsp.id,
    airspace.authorityforairspace.identifier,
    airspace.authorityforairspace_ts.interpretation,
    airspace.authorityforairspace_ts.sequence_number,
    airspace.authorityforairspace_ts.correction_number,
    airspace.authorityforairspace_ts.valid_time_begin,
    airspace.authorityforairspace_ts.valid_time_end,
    airspace.authorityforairspace_ts.feature_lifetime_begin,
    airspace.authorityforairspace_ts.feature_lifetime_end,
    airspace.authorityforairspace_ts.type_value,
    airspace.authorityforairspace_ts.type_nilreason,
    organisation_organisationauthority_pt_gsvkkf.title,
    organisation_organisationauthority_pt_gsvkkf.nilreason[1],
    organisation_organisationauthority_pt_gsvkkf.href,
    airspace_airspace_pt_jkbliq.title,
    airspace_airspace_pt_jkbliq.nilreason[1],
    airspace_airspace_pt_jkbliq.href
order by authorityforairspace.identifier, authorityforairspace_ts.sequence_number, authorityforairspace_ts.correction_number DESC;
create index on airspace.authorityforairspace_view (id);
-- AzimuthTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.azimuth_view cascade;
create materialized view navaids_points.azimuth_view as
select distinct on (azimuth.identifier,azimuth_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.azimuth.id,
    navaids_points.azimuth_ts.id as ts_id,
    navaids_points.azimuth_tsp.id as tsp_id,
    navaids_points.azimuth.identifier,
    navaids_points.azimuth_ts.interpretation,
    navaids_points.azimuth_ts.sequence_number,
    navaids_points.azimuth_ts.correction_number,
    navaids_points.azimuth_ts.valid_time_begin,
    navaids_points.azimuth_ts.valid_time_end,
    navaids_points.azimuth_ts.feature_lifetime_begin,
    navaids_points.azimuth_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.azimuth_ts.designator_value as varchar), '(' || navaids_points.azimuth_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.azimuth_ts.name_value as varchar), '(' || navaids_points.azimuth_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.azimuth_ts.emissionclass_value as varchar), '(' || navaids_points.azimuth_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.azimuth_ts.mobile_value as varchar), '(' || navaids_points.azimuth_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.azimuth_ts.magneticvariation_value as varchar), '(' || navaids_points.azimuth_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.azimuth_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.azimuth_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.azimuth_ts.datemagneticvariation_value as varchar), '(' || navaids_points.azimuth_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.azimuth_ts.flightchecked_value as varchar), '(' || navaids_points.azimuth_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.azimuth_ts.type_value as varchar), '(' || navaids_points.azimuth_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.azimuth_ts.truebearing_value as varchar), '(' || navaids_points.azimuth_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.azimuth_ts.truebearingaccuracy_value as varchar), '(' || navaids_points.azimuth_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(navaids_points.azimuth_ts.magneticbearing_value as varchar), '(' || navaids_points.azimuth_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.azimuth_ts.angleproportionalleft_value as varchar), '(' || navaids_points.azimuth_ts.angleproportionalleft_nilreason || ')') as angleproportionalleft,
    coalesce(cast(navaids_points.azimuth_ts.angleproportionalright_value as varchar), '(' || navaids_points.azimuth_ts.angleproportionalright_nilreason || ')') as angleproportionalright,
    coalesce(cast(navaids_points.azimuth_ts.anglecoverleft_value as varchar), '(' || navaids_points.azimuth_ts.anglecoverleft_nilreason || ')') as anglecoverleft,
    coalesce(cast(navaids_points.azimuth_ts.anglecoverright_value as varchar), '(' || navaids_points.azimuth_ts.anglecoverright_nilreason || ')') as anglecoverright,
    coalesce(cast(navaids_points.azimuth_ts.channel_value as varchar), '(' || navaids_points.azimuth_ts.channel_nilreason || ')') as channel,
    geometry_elevatedpoint_view_ppltfi.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_ppltfi.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_ppltfi.geom) AS location_latitude,
    geometry_elevatedpoint_view_ppltfi.elevation AS location_elevation,
    geometry_elevatedpoint_view_ppltfi.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_ppltfi.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_ppltfi.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_ppltfi.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_bawqxk.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_xhpust.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_cdjjeq.id) AS availability,
    jsonb_agg(notes_note_view_kveete.*) AS annotation
from navaids_points.azimuth 
inner join master_join mj2 on navaids_points.azimuth.id = mj2.source_id
inner join navaids_points.azimuth_tsp on mj2.target_id = navaids_points.azimuth_tsp.id
inner join navaids_points.azimuth_ts on navaids_points.azimuth_tsp.azimuthtimeslice_id = navaids_points.azimuth_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_ppltfi on navaids_points.azimuth_ts.location_id = geometry_elevatedpoint_view_ppltfi.id
left join master_join master_join_pepbir on navaids_points.azimuth_ts.id = master_join_pepbir.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_bawqxk on master_join_pepbir.target_id = navaids_points_authorityfornavaidequipment_view_bawqxk.id
left join master_join master_join_jgpkhi on navaids_points.azimuth_ts.id = master_join_jgpkhi.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_xhpust on master_join_jgpkhi.target_id = navaids_points_navaidequipmentmonitoring_view_xhpust.id
left join master_join master_join_yhqkqe on navaids_points.azimuth_ts.id = master_join_yhqkqe.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_cdjjeq on master_join_yhqkqe.target_id = navaids_points_navaidoperationalstatus_view_cdjjeq.id
left join master_join master_join_mbbdwu on navaids_points.azimuth_ts.id = master_join_mbbdwu.source_id
left join notes.note_view notes_note_view_kveete on master_join_mbbdwu.target_id = notes_note_view_kveete.id
where navaids_points.azimuth.feature_status = 'APPROVED'
  and navaids_points.azimuth_ts.feature_status = 'APPROVED'
group by
    navaids_points.azimuth.id,
    navaids_points.azimuth_ts.id,
    navaids_points.azimuth_tsp.id,
    navaids_points.azimuth.identifier,
    navaids_points.azimuth_ts.interpretation,
    navaids_points.azimuth_ts.sequence_number,
    navaids_points.azimuth_ts.correction_number,
    navaids_points.azimuth_ts.valid_time_begin,
    navaids_points.azimuth_ts.valid_time_end,
    navaids_points.azimuth_ts.feature_lifetime_begin,
    navaids_points.azimuth_ts.feature_lifetime_end,
    navaids_points.azimuth_ts.designator_value,
    navaids_points.azimuth_ts.designator_nilreason,
    navaids_points.azimuth_ts.name_value,
    navaids_points.azimuth_ts.name_nilreason,
    navaids_points.azimuth_ts.emissionclass_value,
    navaids_points.azimuth_ts.emissionclass_nilreason,
    navaids_points.azimuth_ts.mobile_value,
    navaids_points.azimuth_ts.mobile_nilreason,
    navaids_points.azimuth_ts.magneticvariation_value,
    navaids_points.azimuth_ts.magneticvariation_nilreason,
    navaids_points.azimuth_ts.magneticvariationaccuracy_value,
    navaids_points.azimuth_ts.magneticvariationaccuracy_nilreason,
    navaids_points.azimuth_ts.datemagneticvariation_value,
    navaids_points.azimuth_ts.datemagneticvariation_nilreason,
    navaids_points.azimuth_ts.flightchecked_value,
    navaids_points.azimuth_ts.flightchecked_nilreason,
    navaids_points.azimuth_ts.type_value,
    navaids_points.azimuth_ts.type_nilreason,
    navaids_points.azimuth_ts.truebearing_value,
    navaids_points.azimuth_ts.truebearing_nilreason,
    navaids_points.azimuth_ts.truebearingaccuracy_value,
    navaids_points.azimuth_ts.truebearingaccuracy_nilreason,
    navaids_points.azimuth_ts.magneticbearing_value,
    navaids_points.azimuth_ts.magneticbearing_nilreason,
    navaids_points.azimuth_ts.angleproportionalleft_value,
    navaids_points.azimuth_ts.angleproportionalleft_nilreason,
    navaids_points.azimuth_ts.angleproportionalright_value,
    navaids_points.azimuth_ts.angleproportionalright_nilreason,
    navaids_points.azimuth_ts.anglecoverleft_value,
    navaids_points.azimuth_ts.anglecoverleft_nilreason,
    navaids_points.azimuth_ts.anglecoverright_value,
    navaids_points.azimuth_ts.anglecoverright_nilreason,
    navaids_points.azimuth_ts.channel_value,
    navaids_points.azimuth_ts.channel_nilreason,
    geometry_elevatedpoint_view_ppltfi.geom,
    geometry_elevatedpoint_view_ppltfi.elevation,
    geometry_elevatedpoint_view_ppltfi.geoidUndulation,
    geometry_elevatedpoint_view_ppltfi.verticalDatum,
    geometry_elevatedpoint_view_ppltfi.verticalAccuracy,
    geometry_elevatedpoint_view_ppltfi.horizontalAccuracy
order by azimuth.identifier, azimuth_ts.sequence_number, azimuth_ts.correction_number DESC;
create index on navaids_points.azimuth_view (id);
-- ChangeOverPointTimeSliceType
-- ['geometry.point_view', 'routes.routeportion_view', 'notes.note_view']
drop materialized view if exists routes.changeoverpoint_view cascade;
create materialized view routes.changeoverpoint_view as
select distinct on (changeoverpoint.identifier,changeoverpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.changeoverpoint.id,
    routes.changeoverpoint_ts.id as ts_id,
    routes.changeoverpoint_tsp.id as tsp_id,
    routes.changeoverpoint.identifier,
    routes.changeoverpoint_ts.interpretation,
    routes.changeoverpoint_ts.sequence_number,
    routes.changeoverpoint_ts.correction_number,
    routes.changeoverpoint_ts.valid_time_begin,
    routes.changeoverpoint_ts.valid_time_end,
    routes.changeoverpoint_ts.feature_lifetime_begin,
    routes.changeoverpoint_ts.feature_lifetime_end,
    coalesce(cast(routes.changeoverpoint_ts.distance_value as varchar) || ' ' || routes.changeoverpoint_ts.distance_uom, '(' || routes.changeoverpoint_ts.distance_nilreason || ')') as distance,
    coalesce(cast(navaids_points_designatedpoint_pt_ozuvkv.title as varchar), '(' || navaids_points_designatedpoint_pt_ozuvkv.nilreason[1] || ')') AS locationfixdesignatedpoint,
    navaids_points_designatedpoint_pt_ozuvkv.href AS locationfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_kmgzqn.title as varchar), '(' || navaids_points_navaid_pt_kmgzqn.nilreason[1] || ')') AS locationnavaidsystem,
    navaids_points_navaid_pt_kmgzqn.href AS locationnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_jycogj.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_jycogj.nilreason[1] || ')') AS locationaimingpoint,
    airport_heliport_touchdownliftoff_pt_jycogj.href AS locationaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_kofcyj.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_kofcyj.nilreason[1] || ')') AS locationrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_kofcyj.href AS locationrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_qhehac.title as varchar), '(' || airport_heliport_airportheliport_pt_qhehac.nilreason[1] || ')') AS locationairportreferencepoint,
    airport_heliport_airportheliport_pt_qhehac.href AS locationairportreferencepoint_href,
    geometry_point_view_gmwoas.geom AS locationposition_geom,
    ST_X(geometry_point_view_gmwoas.geom) AS locationposition_longitude,
    ST_Y(geometry_point_view_gmwoas.geom) AS locationposition_latitude,
    geometry_point_view_gmwoas.horizontalAccuracy AS locationposition_horizontalaccuracy,
    routes_routeportion_view_sooutr.id AS applicablerouteportion,
    jsonb_agg(notes_note_view_utfszi.*) AS annotation
from routes.changeoverpoint 
inner join master_join mj2 on routes.changeoverpoint.id = mj2.source_id
inner join routes.changeoverpoint_tsp on mj2.target_id = routes.changeoverpoint_tsp.id
inner join routes.changeoverpoint_ts on routes.changeoverpoint_tsp.changeoverpointtimeslice_id = routes.changeoverpoint_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ozuvkv on routes.changeoverpoint_ts.location_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ozuvkv.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_kmgzqn on routes.changeoverpoint_ts.location_navaidsystem_id = navaids_points_navaid_pt_kmgzqn.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_jycogj on routes.changeoverpoint_ts.location_aimingpoint_id = airport_heliport_touchdownliftoff_pt_jycogj.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_kofcyj on routes.changeoverpoint_ts.location_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_kofcyj.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_qhehac on routes.changeoverpoint_ts.location_airportreferencepoint_id = airport_heliport_airportheliport_pt_qhehac.id
left join geometry.point_view geometry_point_view_gmwoas on routes.changeoverpoint_ts.location_position_id = geometry_point_view_gmwoas.id
left join routes.routeportion_view routes_routeportion_view_sooutr on routes.changeoverpoint_ts.applicablerouteportion_id = routes_routeportion_view_sooutr.id
left join master_join master_join_eukrsd on routes.changeoverpoint_ts.id = master_join_eukrsd.source_id
left join notes.note_view notes_note_view_utfszi on master_join_eukrsd.target_id = notes_note_view_utfszi.id
where routes.changeoverpoint.feature_status = 'APPROVED'
  and routes.changeoverpoint_ts.feature_status = 'APPROVED'
group by
    routes.changeoverpoint.id,
    routes.changeoverpoint_ts.id,
    routes.changeoverpoint_tsp.id,
    routes.changeoverpoint.identifier,
    routes.changeoverpoint_ts.interpretation,
    routes.changeoverpoint_ts.sequence_number,
    routes.changeoverpoint_ts.correction_number,
    routes.changeoverpoint_ts.valid_time_begin,
    routes.changeoverpoint_ts.valid_time_end,
    routes.changeoverpoint_ts.feature_lifetime_begin,
    routes.changeoverpoint_ts.feature_lifetime_end,
    routes.changeoverpoint_ts.distance_value,
    routes.changeoverpoint_ts.distance_uom,
    routes.changeoverpoint_ts.distance_nilreason,
    navaids_points_designatedpoint_pt_ozuvkv.title,
    navaids_points_designatedpoint_pt_ozuvkv.nilreason[1],
    navaids_points_designatedpoint_pt_ozuvkv.href,
    navaids_points_navaid_pt_kmgzqn.title,
    navaids_points_navaid_pt_kmgzqn.nilreason[1],
    navaids_points_navaid_pt_kmgzqn.href,
    airport_heliport_touchdownliftoff_pt_jycogj.title,
    airport_heliport_touchdownliftoff_pt_jycogj.nilreason[1],
    airport_heliport_touchdownliftoff_pt_jycogj.href,
    airport_heliport_runwaycentrelinepoint_pt_kofcyj.title,
    airport_heliport_runwaycentrelinepoint_pt_kofcyj.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_kofcyj.href,
    airport_heliport_airportheliport_pt_qhehac.title,
    airport_heliport_airportheliport_pt_qhehac.nilreason[1],
    airport_heliport_airportheliport_pt_qhehac.href,
    geometry_point_view_gmwoas.geom,
    geometry_point_view_gmwoas.horizontalAccuracy,
    routes_routeportion_view_sooutr.id
order by changeoverpoint.identifier, changeoverpoint_ts.sequence_number, changeoverpoint_ts.correction_number DESC;
create index on routes.changeoverpoint_view (id);
-- CheckpointINSTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.checkpointins_view cascade;
create materialized view navaids_points.checkpointins_view as
select distinct on (checkpointins.identifier,checkpointins_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.checkpointins.id,
    navaids_points.checkpointins_ts.id as ts_id,
    navaids_points.checkpointins_tsp.id as tsp_id,
    navaids_points.checkpointins.identifier,
    navaids_points.checkpointins_ts.interpretation,
    navaids_points.checkpointins_ts.sequence_number,
    navaids_points.checkpointins_ts.correction_number,
    navaids_points.checkpointins_ts.valid_time_begin,
    navaids_points.checkpointins_ts.valid_time_end,
    navaids_points.checkpointins_ts.feature_lifetime_begin,
    navaids_points.checkpointins_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.checkpointins_ts.category_value as varchar), '(' || navaids_points.checkpointins_ts.category_nilreason || ')') as category,
    coalesce(cast(navaids_points.checkpointins_ts.upperlimitreference_value as varchar), '(' || navaids_points.checkpointins_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(navaids_points.checkpointins_ts.lowerlimitreference_value as varchar), '(' || navaids_points.checkpointins_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(navaids_points.checkpointins_ts.altitudeinterpretation_value as varchar), '(' || navaids_points.checkpointins_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(navaids_points.checkpointins_ts.angle_value as varchar), '(' || navaids_points.checkpointins_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.checkpointins_ts.upperlimit_value as varchar) || ' ' || navaids_points.checkpointins_ts.upperlimit_uom, '(' || navaids_points.checkpointins_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(navaids_points.checkpointins_ts.lowerlimit_value as varchar) || ' ' || navaids_points.checkpointins_ts.lowerlimit_uom, '(' || navaids_points.checkpointins_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(navaids_points.checkpointins_ts.distance_value as varchar) || ' ' || navaids_points.checkpointins_ts.distance_uom, '(' || navaids_points.checkpointins_ts.distance_nilreason || ')') as distance,
    geometry_elevatedpoint_view_wzyfgz.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_wzyfgz.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_wzyfgz.geom) AS position_latitude,
    geometry_elevatedpoint_view_wzyfgz.elevation AS position_elevation,
    geometry_elevatedpoint_view_wzyfgz.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_wzyfgz.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_wzyfgz.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_wzyfgz.horizontalAccuracy AS position_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_wvkufd.title as varchar), '(' || airport_heliport_airportheliport_pt_wvkufd.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_wvkufd.href AS airportheliport_href,
    jsonb_agg(notes_note_view_aktqga.*) AS annotation
from navaids_points.checkpointins 
inner join master_join mj2 on navaids_points.checkpointins.id = mj2.source_id
inner join navaids_points.checkpointins_tsp on mj2.target_id = navaids_points.checkpointins_tsp.id
inner join navaids_points.checkpointins_ts on navaids_points.checkpointins_tsp.checkpointinstimeslice_id = navaids_points.checkpointins_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_wzyfgz on navaids_points.checkpointins_ts.position_id = geometry_elevatedpoint_view_wzyfgz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_wvkufd on navaids_points.checkpointins_ts.airportheliport_id = airport_heliport_airportheliport_pt_wvkufd.id
left join master_join master_join_srvmnp on navaids_points.checkpointins_ts.id = master_join_srvmnp.source_id
left join notes.note_view notes_note_view_aktqga on master_join_srvmnp.target_id = notes_note_view_aktqga.id
where navaids_points.checkpointins.feature_status = 'APPROVED'
  and navaids_points.checkpointins_ts.feature_status = 'APPROVED'
group by
    navaids_points.checkpointins.id,
    navaids_points.checkpointins_ts.id,
    navaids_points.checkpointins_tsp.id,
    navaids_points.checkpointins.identifier,
    navaids_points.checkpointins_ts.interpretation,
    navaids_points.checkpointins_ts.sequence_number,
    navaids_points.checkpointins_ts.correction_number,
    navaids_points.checkpointins_ts.valid_time_begin,
    navaids_points.checkpointins_ts.valid_time_end,
    navaids_points.checkpointins_ts.feature_lifetime_begin,
    navaids_points.checkpointins_ts.feature_lifetime_end,
    navaids_points.checkpointins_ts.category_value,
    navaids_points.checkpointins_ts.category_nilreason,
    navaids_points.checkpointins_ts.upperlimitreference_value,
    navaids_points.checkpointins_ts.upperlimitreference_nilreason,
    navaids_points.checkpointins_ts.lowerlimitreference_value,
    navaids_points.checkpointins_ts.lowerlimitreference_nilreason,
    navaids_points.checkpointins_ts.altitudeinterpretation_value,
    navaids_points.checkpointins_ts.altitudeinterpretation_nilreason,
    navaids_points.checkpointins_ts.angle_value,
    navaids_points.checkpointins_ts.angle_nilreason,
    navaids_points.checkpointins_ts.upperlimit_value,
    navaids_points.checkpointins_ts.upperlimit_uom,
    navaids_points.checkpointins_ts.upperlimit_nilreason,
    navaids_points.checkpointins_ts.lowerlimit_value,
    navaids_points.checkpointins_ts.lowerlimit_uom,
    navaids_points.checkpointins_ts.lowerlimit_nilreason,
    navaids_points.checkpointins_ts.distance_value,
    navaids_points.checkpointins_ts.distance_uom,
    navaids_points.checkpointins_ts.distance_nilreason,
    geometry_elevatedpoint_view_wzyfgz.geom,
    geometry_elevatedpoint_view_wzyfgz.elevation,
    geometry_elevatedpoint_view_wzyfgz.geoidUndulation,
    geometry_elevatedpoint_view_wzyfgz.verticalDatum,
    geometry_elevatedpoint_view_wzyfgz.verticalAccuracy,
    geometry_elevatedpoint_view_wzyfgz.horizontalAccuracy,
    airport_heliport_airportheliport_pt_wvkufd.title,
    airport_heliport_airportheliport_pt_wvkufd.nilreason[1],
    airport_heliport_airportheliport_pt_wvkufd.href
order by checkpointins.identifier, checkpointins_ts.sequence_number, checkpointins_ts.correction_number DESC;
create index on navaids_points.checkpointins_view (id);
-- CheckpointVORTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.checkpointvor_view cascade;
create materialized view navaids_points.checkpointvor_view as
select distinct on (checkpointvor.identifier,checkpointvor_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.checkpointvor.id,
    navaids_points.checkpointvor_ts.id as ts_id,
    navaids_points.checkpointvor_tsp.id as tsp_id,
    navaids_points.checkpointvor.identifier,
    navaids_points.checkpointvor_ts.interpretation,
    navaids_points.checkpointvor_ts.sequence_number,
    navaids_points.checkpointvor_ts.correction_number,
    navaids_points.checkpointvor_ts.valid_time_begin,
    navaids_points.checkpointvor_ts.valid_time_end,
    navaids_points.checkpointvor_ts.feature_lifetime_begin,
    navaids_points.checkpointvor_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.checkpointvor_ts.category_value as varchar), '(' || navaids_points.checkpointvor_ts.category_nilreason || ')') as category,
    coalesce(cast(navaids_points.checkpointvor_ts.upperlimitreference_value as varchar), '(' || navaids_points.checkpointvor_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(navaids_points.checkpointvor_ts.lowerlimitreference_value as varchar), '(' || navaids_points.checkpointvor_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(navaids_points.checkpointvor_ts.altitudeinterpretation_value as varchar), '(' || navaids_points.checkpointvor_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(navaids_points.checkpointvor_ts.angle_value as varchar), '(' || navaids_points.checkpointvor_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.checkpointvor_ts.upperlimit_value as varchar) || ' ' || navaids_points.checkpointvor_ts.upperlimit_uom, '(' || navaids_points.checkpointvor_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(navaids_points.checkpointvor_ts.lowerlimit_value as varchar) || ' ' || navaids_points.checkpointvor_ts.lowerlimit_uom, '(' || navaids_points.checkpointvor_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(navaids_points.checkpointvor_ts.distance_value as varchar) || ' ' || navaids_points.checkpointvor_ts.distance_uom, '(' || navaids_points.checkpointvor_ts.distance_nilreason || ')') as distance,
    geometry_elevatedpoint_view_olgrzf.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_olgrzf.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_olgrzf.geom) AS position_latitude,
    geometry_elevatedpoint_view_olgrzf.elevation AS position_elevation,
    geometry_elevatedpoint_view_olgrzf.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_olgrzf.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_olgrzf.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_olgrzf.horizontalAccuracy AS position_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_cegcff.title as varchar), '(' || airport_heliport_airportheliport_pt_cegcff.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_cegcff.href AS airportheliport_href,
    coalesce(cast(navaids_points_vor_pt_qfhmky.title as varchar), '(' || navaids_points_vor_pt_qfhmky.nilreason[1] || ')') AS checkpointfacility,
    navaids_points_vor_pt_qfhmky.href AS checkpointfacility_href,
    jsonb_agg(notes_note_view_yhkuip.*) AS annotation
from navaids_points.checkpointvor 
inner join master_join mj2 on navaids_points.checkpointvor.id = mj2.source_id
inner join navaids_points.checkpointvor_tsp on mj2.target_id = navaids_points.checkpointvor_tsp.id
inner join navaids_points.checkpointvor_ts on navaids_points.checkpointvor_tsp.checkpointvortimeslice_id = navaids_points.checkpointvor_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_olgrzf on navaids_points.checkpointvor_ts.position_id = geometry_elevatedpoint_view_olgrzf.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cegcff on navaids_points.checkpointvor_ts.airportheliport_id = airport_heliport_airportheliport_pt_cegcff.id
left join navaids_points.vor_pt navaids_points_vor_pt_qfhmky on navaids_points.checkpointvor_ts.checkpointfacility_id = navaids_points_vor_pt_qfhmky.id
left join master_join master_join_uthotw on navaids_points.checkpointvor_ts.id = master_join_uthotw.source_id
left join notes.note_view notes_note_view_yhkuip on master_join_uthotw.target_id = notes_note_view_yhkuip.id
where navaids_points.checkpointvor.feature_status = 'APPROVED'
  and navaids_points.checkpointvor_ts.feature_status = 'APPROVED'
group by
    navaids_points.checkpointvor.id,
    navaids_points.checkpointvor_ts.id,
    navaids_points.checkpointvor_tsp.id,
    navaids_points.checkpointvor.identifier,
    navaids_points.checkpointvor_ts.interpretation,
    navaids_points.checkpointvor_ts.sequence_number,
    navaids_points.checkpointvor_ts.correction_number,
    navaids_points.checkpointvor_ts.valid_time_begin,
    navaids_points.checkpointvor_ts.valid_time_end,
    navaids_points.checkpointvor_ts.feature_lifetime_begin,
    navaids_points.checkpointvor_ts.feature_lifetime_end,
    navaids_points.checkpointvor_ts.category_value,
    navaids_points.checkpointvor_ts.category_nilreason,
    navaids_points.checkpointvor_ts.upperlimitreference_value,
    navaids_points.checkpointvor_ts.upperlimitreference_nilreason,
    navaids_points.checkpointvor_ts.lowerlimitreference_value,
    navaids_points.checkpointvor_ts.lowerlimitreference_nilreason,
    navaids_points.checkpointvor_ts.altitudeinterpretation_value,
    navaids_points.checkpointvor_ts.altitudeinterpretation_nilreason,
    navaids_points.checkpointvor_ts.angle_value,
    navaids_points.checkpointvor_ts.angle_nilreason,
    navaids_points.checkpointvor_ts.upperlimit_value,
    navaids_points.checkpointvor_ts.upperlimit_uom,
    navaids_points.checkpointvor_ts.upperlimit_nilreason,
    navaids_points.checkpointvor_ts.lowerlimit_value,
    navaids_points.checkpointvor_ts.lowerlimit_uom,
    navaids_points.checkpointvor_ts.lowerlimit_nilreason,
    navaids_points.checkpointvor_ts.distance_value,
    navaids_points.checkpointvor_ts.distance_uom,
    navaids_points.checkpointvor_ts.distance_nilreason,
    geometry_elevatedpoint_view_olgrzf.geom,
    geometry_elevatedpoint_view_olgrzf.elevation,
    geometry_elevatedpoint_view_olgrzf.geoidUndulation,
    geometry_elevatedpoint_view_olgrzf.verticalDatum,
    geometry_elevatedpoint_view_olgrzf.verticalAccuracy,
    geometry_elevatedpoint_view_olgrzf.horizontalAccuracy,
    airport_heliport_airportheliport_pt_cegcff.title,
    airport_heliport_airportheliport_pt_cegcff.nilreason[1],
    airport_heliport_airportheliport_pt_cegcff.href,
    navaids_points_vor_pt_qfhmky.title,
    navaids_points_vor_pt_qfhmky.nilreason[1],
    navaids_points_vor_pt_qfhmky.href
order by checkpointvor.identifier, checkpointvor_ts.sequence_number, checkpointvor_ts.correction_number DESC;
create index on navaids_points.checkpointvor_view (id);
-- CirclingAreaTimeSliceType
-- ['notes.note_view', 'shared.obstacleassessmentarea_view', 'geometry.surface_view', 'procedure.approachcondition_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists public.circlingarea_view cascade;
create materialized view public.circlingarea_view as
select distinct on (circlingarea.identifier,circlingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    public.circlingarea.id,
    public.circlingarea_ts.id as ts_id,
    public.circlingarea_tsp.id as tsp_id,
    public.circlingarea.identifier,
    public.circlingarea_ts.interpretation,
    public.circlingarea_ts.sequence_number,
    public.circlingarea_ts.correction_number,
    public.circlingarea_ts.valid_time_begin,
    public.circlingarea_ts.valid_time_end,
    public.circlingarea_ts.feature_lifetime_begin,
    public.circlingarea_ts.feature_lifetime_end,
    geometry_surface_view_rpjsnk.geom AS extent_geom,
    geometry_surface_view_rpjsnk.horizontalAccuracy as extent_horizontalaccuracy,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_xekrcf.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_xekrcf.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_xekrcf.href AS approach_href,
    shared_aircraftcharacteristic_view_mwuobv.id AS aircraftcategory,
    jsonb_agg(procedure_approachcondition_view_izyyxm.id) AS condition,
    jsonb_agg(shared_obstacleassessmentarea_view_zcvnym.id) AS designsurface,
    jsonb_agg(notes_note_view_hzoleh.*) AS annotation
from public.circlingarea 
inner join master_join mj2 on public.circlingarea.id = mj2.source_id
inner join public.circlingarea_tsp on mj2.target_id = public.circlingarea_tsp.id
inner join public.circlingarea_ts on public.circlingarea_tsp.circlingareatimeslice_id = public.circlingarea_ts.id
left join geometry.surface_view geometry_surface_view_rpjsnk on public.circlingarea_ts.extent_id = geometry_surface_view_rpjsnk.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_xekrcf on public.circlingarea_ts.approach_id = procedure_instrumentapproachprocedure_pt_xekrcf.id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_mwuobv on public.circlingarea_ts.aircraftcategory_id = shared_aircraftcharacteristic_view_mwuobv.id
left join master_join master_join_wcmwku on public.circlingarea_ts.id = master_join_wcmwku.source_id
left join procedure.approachcondition_view procedure_approachcondition_view_izyyxm on master_join_wcmwku.target_id = procedure_approachcondition_view_izyyxm.id
left join master_join master_join_irophm on public.circlingarea_ts.id = master_join_irophm.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_zcvnym on master_join_irophm.target_id = shared_obstacleassessmentarea_view_zcvnym.id
left join master_join master_join_auaamz on public.circlingarea_ts.id = master_join_auaamz.source_id
left join notes.note_view notes_note_view_hzoleh on master_join_auaamz.target_id = notes_note_view_hzoleh.id
where public.circlingarea.feature_status = 'APPROVED'
  and public.circlingarea_ts.feature_status = 'APPROVED'
group by
    public.circlingarea.id,
    public.circlingarea_ts.id,
    public.circlingarea_tsp.id,
    public.circlingarea.identifier,
    public.circlingarea_ts.interpretation,
    public.circlingarea_ts.sequence_number,
    public.circlingarea_ts.correction_number,
    public.circlingarea_ts.valid_time_begin,
    public.circlingarea_ts.valid_time_end,
    public.circlingarea_ts.feature_lifetime_begin,
    public.circlingarea_ts.feature_lifetime_end,
    geometry_surface_view_rpjsnk.geom,
    geometry_surface_view_rpjsnk.horizontalAccuracy,
    procedure_instrumentapproachprocedure_pt_xekrcf.title,
    procedure_instrumentapproachprocedure_pt_xekrcf.nilreason[1],
    procedure_instrumentapproachprocedure_pt_xekrcf.href,
    shared_aircraftcharacteristic_view_mwuobv.id
order by circlingarea.identifier, circlingarea_ts.sequence_number, circlingarea_ts.correction_number DESC;
create index on public.circlingarea_view (id);
-- DeicingAreaMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.deicingareamarking_view cascade;
create materialized view airport_heliport.deicingareamarking_view as
select distinct on (deicingareamarking.identifier,deicingareamarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.deicingareamarking.id,
    airport_heliport.deicingareamarking_ts.id as ts_id,
    airport_heliport.deicingareamarking_tsp.id as tsp_id,
    airport_heliport.deicingareamarking.identifier,
    airport_heliport.deicingareamarking_ts.interpretation,
    airport_heliport.deicingareamarking_ts.sequence_number,
    airport_heliport.deicingareamarking_ts.correction_number,
    airport_heliport.deicingareamarking_ts.valid_time_begin,
    airport_heliport.deicingareamarking_ts.valid_time_end,
    airport_heliport.deicingareamarking_ts.feature_lifetime_begin,
    airport_heliport.deicingareamarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.deicingareamarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.deicingareamarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.deicingareamarking_ts.condition_value as varchar), '(' || airport_heliport.deicingareamarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_deicingarea_pt_gxhbbe.title as varchar), '(' || airport_heliport_deicingarea_pt_gxhbbe.nilreason[1] || ')') AS markeddeicingarea,
    airport_heliport_deicingarea_pt_gxhbbe.href AS markeddeicingarea_href,
    jsonb_agg(airport_heliport_markingelement_view_odfdyg.id) AS element,
    jsonb_agg(notes_note_view_aoehwq.*) AS annotation
from airport_heliport.deicingareamarking 
inner join master_join mj2 on airport_heliport.deicingareamarking.id = mj2.source_id
inner join airport_heliport.deicingareamarking_tsp on mj2.target_id = airport_heliport.deicingareamarking_tsp.id
inner join airport_heliport.deicingareamarking_ts on airport_heliport.deicingareamarking_tsp.deicingareamarkingtimeslice_id = airport_heliport.deicingareamarking_ts.id
left join airport_heliport.deicingarea_pt airport_heliport_deicingarea_pt_gxhbbe on airport_heliport.deicingareamarking_ts.markeddeicingarea_id = airport_heliport_deicingarea_pt_gxhbbe.id
left join master_join master_join_oauqxd on airport_heliport.deicingareamarking_ts.id = master_join_oauqxd.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_odfdyg on master_join_oauqxd.target_id = airport_heliport_markingelement_view_odfdyg.id
left join master_join master_join_arwfdd on airport_heliport.deicingareamarking_ts.id = master_join_arwfdd.source_id
left join notes.note_view notes_note_view_aoehwq on master_join_arwfdd.target_id = notes_note_view_aoehwq.id
where airport_heliport.deicingareamarking.feature_status = 'APPROVED'
  and airport_heliport.deicingareamarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.deicingareamarking.id,
    airport_heliport.deicingareamarking_ts.id,
    airport_heliport.deicingareamarking_tsp.id,
    airport_heliport.deicingareamarking.identifier,
    airport_heliport.deicingareamarking_ts.interpretation,
    airport_heliport.deicingareamarking_ts.sequence_number,
    airport_heliport.deicingareamarking_ts.correction_number,
    airport_heliport.deicingareamarking_ts.valid_time_begin,
    airport_heliport.deicingareamarking_ts.valid_time_end,
    airport_heliport.deicingareamarking_ts.feature_lifetime_begin,
    airport_heliport.deicingareamarking_ts.feature_lifetime_end,
    airport_heliport.deicingareamarking_ts.markingicaostandard_value,
    airport_heliport.deicingareamarking_ts.markingicaostandard_nilreason,
    airport_heliport.deicingareamarking_ts.condition_value,
    airport_heliport.deicingareamarking_ts.condition_nilreason,
    airport_heliport_deicingarea_pt_gxhbbe.title,
    airport_heliport_deicingarea_pt_gxhbbe.nilreason[1],
    airport_heliport_deicingarea_pt_gxhbbe.href
order by deicingareamarking.identifier, deicingareamarking_ts.sequence_number, deicingareamarking_ts.correction_number DESC;
create index on airport_heliport.deicingareamarking_view (id);
-- DeicingAreaTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.apronareaavailability_view', 'notes.note_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.deicingarea_view cascade;
create materialized view airport_heliport.deicingarea_view as
select distinct on (deicingarea.identifier,deicingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.deicingarea.id,
    airport_heliport.deicingarea_ts.id as ts_id,
    airport_heliport.deicingarea_tsp.id as tsp_id,
    airport_heliport.deicingarea.identifier,
    airport_heliport.deicingarea_ts.interpretation,
    airport_heliport.deicingarea_ts.sequence_number,
    airport_heliport.deicingarea_ts.correction_number,
    airport_heliport.deicingarea_ts.valid_time_begin,
    airport_heliport.deicingarea_ts.valid_time_end,
    airport_heliport.deicingarea_ts.feature_lifetime_begin,
    airport_heliport.deicingarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport_apron_pt_dhserg.title as varchar), '(' || airport_heliport_apron_pt_dhserg.nilreason[1] || ')') AS associatedapron,
    airport_heliport_apron_pt_dhserg.href AS associatedapron_href,
    coalesce(cast(airport_heliport_taxiway_pt_qemovp.title as varchar), '(' || airport_heliport_taxiway_pt_qemovp.nilreason[1] || ')') AS taxiwaylocation,
    airport_heliport_taxiway_pt_qemovp.href AS taxiwaylocation_href,
    coalesce(cast(airport_heliport_aircraftstand_pt_seennz.title as varchar), '(' || airport_heliport_aircraftstand_pt_seennz.nilreason[1] || ')') AS standlocation,
    airport_heliport_aircraftstand_pt_seennz.href AS standlocation_href,
    airport_heliport_surfacecharacteristics_view_ivyewa.id AS surfaceproperties,
    geometry_elevatedsurface_view_snczuw.geom AS extent_geom,
    geometry_elevatedsurface_view_snczuw.elevation AS extent_elevation,
    geometry_elevatedsurface_view_snczuw.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_snczuw.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_snczuw.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_snczuw.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(notes_note_view_bzpnmf.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_tlnxec.id) AS availability
from airport_heliport.deicingarea 
inner join master_join mj2 on airport_heliport.deicingarea.id = mj2.source_id
inner join airport_heliport.deicingarea_tsp on mj2.target_id = airport_heliport.deicingarea_tsp.id
inner join airport_heliport.deicingarea_ts on airport_heliport.deicingarea_tsp.deicingareatimeslice_id = airport_heliport.deicingarea_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_dhserg on airport_heliport.deicingarea_ts.associatedapron_id = airport_heliport_apron_pt_dhserg.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_qemovp on airport_heliport.deicingarea_ts.taxiwaylocation_id = airport_heliport_taxiway_pt_qemovp.id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_seennz on airport_heliport.deicingarea_ts.standlocation_id = airport_heliport_aircraftstand_pt_seennz.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_ivyewa on airport_heliport.deicingarea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_ivyewa.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_snczuw on airport_heliport.deicingarea_ts.extent_id = geometry_elevatedsurface_view_snczuw.id
left join master_join master_join_uyiyyi on airport_heliport.deicingarea_ts.id = master_join_uyiyyi.source_id
left join notes.note_view notes_note_view_bzpnmf on master_join_uyiyyi.target_id = notes_note_view_bzpnmf.id
left join master_join master_join_wpcjxg on airport_heliport.deicingarea_ts.id = master_join_wpcjxg.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_tlnxec on master_join_wpcjxg.target_id = airport_heliport_apronareaavailability_view_tlnxec.id
where airport_heliport.deicingarea.feature_status = 'APPROVED'
  and airport_heliport.deicingarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.deicingarea.id,
    airport_heliport.deicingarea_ts.id,
    airport_heliport.deicingarea_tsp.id,
    airport_heliport.deicingarea.identifier,
    airport_heliport.deicingarea_ts.interpretation,
    airport_heliport.deicingarea_ts.sequence_number,
    airport_heliport.deicingarea_ts.correction_number,
    airport_heliport.deicingarea_ts.valid_time_begin,
    airport_heliport.deicingarea_ts.valid_time_end,
    airport_heliport.deicingarea_ts.feature_lifetime_begin,
    airport_heliport.deicingarea_ts.feature_lifetime_end,
    airport_heliport_apron_pt_dhserg.title,
    airport_heliport_apron_pt_dhserg.nilreason[1],
    airport_heliport_apron_pt_dhserg.href,
    airport_heliport_taxiway_pt_qemovp.title,
    airport_heliport_taxiway_pt_qemovp.nilreason[1],
    airport_heliport_taxiway_pt_qemovp.href,
    airport_heliport_aircraftstand_pt_seennz.title,
    airport_heliport_aircraftstand_pt_seennz.nilreason[1],
    airport_heliport_aircraftstand_pt_seennz.href,
    airport_heliport_surfacecharacteristics_view_ivyewa.id,
    geometry_elevatedsurface_view_snczuw.geom,
    geometry_elevatedsurface_view_snczuw.elevation,
    geometry_elevatedsurface_view_snczuw.geoidUndulation,
    geometry_elevatedsurface_view_snczuw.verticalDatum,
    geometry_elevatedsurface_view_snczuw.verticalAccuracy,
    geometry_elevatedsurface_view_snczuw.horizontalAccuracy
order by deicingarea.identifier, deicingarea_ts.sequence_number, deicingarea_ts.correction_number DESC;
create index on airport_heliport.deicingarea_view (id);
-- DepartureLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'procedure.departurearrivalcondition_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.departureleg_view cascade;
create materialized view procedure.departureleg_view as
select distinct on (departureleg.identifier,departureleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.departureleg.id,
    procedure.departureleg_ts.id as ts_id,
    procedure.departureleg_tsp.id as tsp_id,
    procedure.departureleg.identifier,
    procedure.departureleg_ts.interpretation,
    procedure.departureleg_ts.sequence_number,
    procedure.departureleg_ts.correction_number,
    procedure.departureleg_ts.valid_time_begin,
    procedure.departureleg_ts.valid_time_end,
    procedure.departureleg_ts.feature_lifetime_begin,
    procedure.departureleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.departureleg_ts.endconditiondesignator_value as varchar), '(' || procedure.departureleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.departureleg_ts.legpath_value as varchar), '(' || procedure.departureleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.departureleg_ts.legtypearinc_value as varchar), '(' || procedure.departureleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.departureleg_ts.course_value as varchar), '(' || procedure.departureleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.departureleg_ts.coursetype_value as varchar), '(' || procedure.departureleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.departureleg_ts.coursedirection_value as varchar), '(' || procedure.departureleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.departureleg_ts.turndirection_value as varchar), '(' || procedure.departureleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.departureleg_ts.speedreference_value as varchar), '(' || procedure.departureleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.departureleg_ts.speedinterpretation_value as varchar), '(' || procedure.departureleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.departureleg_ts.bankangle_value as varchar), '(' || procedure.departureleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.departureleg_ts.procedureturnrequired_value as varchar), '(' || procedure.departureleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.departureleg_ts.upperlimitreference_value as varchar), '(' || procedure.departureleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.departureleg_ts.lowerlimitreference_value as varchar), '(' || procedure.departureleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.departureleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.departureleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.departureleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.departureleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.departureleg_ts.verticalangle_value as varchar), '(' || procedure.departureleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.departureleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.departureleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.departureleg_ts.speedlimit_value as varchar) || ' ' || procedure.departureleg_ts.speedlimit_uom, '(' || procedure.departureleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.departureleg_ts.length_value as varchar) || ' ' || procedure.departureleg_ts.length_uom, '(' || procedure.departureleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.departureleg_ts.duration_value as varchar) || ' ' || procedure.departureleg_ts.duration_uom, '(' || procedure.departureleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.departureleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.departureleg_ts.upperlimitaltitude_uom, '(' || procedure.departureleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.departureleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.departureleg_ts.lowerlimitaltitude_uom, '(' || procedure.departureleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.departureleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.departureleg_ts.altitudeoverrideatc_uom, '(' || procedure.departureleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.departureleg_ts.minimumobstacleclearancealtitude_value as varchar) || ' ' || procedure.departureleg_ts.minimumobstacleclearancealtitude_uom, '(' || procedure.departureleg_ts.minimumobstacleclearancealtitude_nilreason || ')') as minimumobstacleclearancealtitude,
    navaids_points_terminalsegmentpoint_view_ovxoyl.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_zindqm.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_hdwdcq.id AS arccentre,
    geometry_curve_view_tmmrmn.geom AS trajectory_geom,
    geometry_curve_view_tmmrmn.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_ampmtf.title as varchar), '(' || navaids_points_angleindication_pt_ampmtf.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_ampmtf.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_ybyxgi.title as varchar), '(' || navaids_points_distanceindication_pt_ybyxgi.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_ybyxgi.href AS distance_href,
    procedure_holdinguse_view_hndjcy.id AS holding,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_srrngy.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_srrngy.nilreason[1] || ')') AS departure,
    procedure_standardinstrumentdeparture_pt_srrngy.href AS departure_href,
    jsonb_agg(shared_aircraftcharacteristic_view_wbawyo.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_sdozda.id) AS designsurface,
    jsonb_agg(notes_note_view_ilnxxw.*) AS annotation,
    jsonb_agg(procedure_departurearrivalcondition_view_qyivni.id) AS condition
from procedure.departureleg 
inner join master_join mj2 on procedure.departureleg.id = mj2.source_id
inner join procedure.departureleg_tsp on mj2.target_id = procedure.departureleg_tsp.id
inner join procedure.departureleg_ts on procedure.departureleg_tsp.departurelegtimeslice_id = procedure.departureleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_ovxoyl on procedure.departureleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_ovxoyl.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_zindqm on procedure.departureleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_zindqm.id
left join geometry.curve_view geometry_curve_view_tmmrmn on procedure.departureleg_ts.trajectory_id = geometry_curve_view_tmmrmn.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_hdwdcq on procedure.departureleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_hdwdcq.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_ampmtf on procedure.departureleg_ts.angle_id = navaids_points_angleindication_pt_ampmtf.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_ybyxgi on procedure.departureleg_ts.distance_id = navaids_points_distanceindication_pt_ybyxgi.id
left join procedure.holdinguse_view procedure_holdinguse_view_hndjcy on procedure.departureleg_ts.holding_id = procedure_holdinguse_view_hndjcy.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_srrngy on procedure.departureleg_ts.departure_id = procedure_standardinstrumentdeparture_pt_srrngy.id
left join master_join master_join_sioqea on procedure.departureleg_ts.id = master_join_sioqea.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_wbawyo on master_join_sioqea.target_id = shared_aircraftcharacteristic_view_wbawyo.id
left join master_join master_join_wlwutz on procedure.departureleg_ts.id = master_join_wlwutz.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_sdozda on master_join_wlwutz.target_id = shared_obstacleassessmentarea_view_sdozda.id
left join master_join master_join_tdzcwm on procedure.departureleg_ts.id = master_join_tdzcwm.source_id
left join notes.note_view notes_note_view_ilnxxw on master_join_tdzcwm.target_id = notes_note_view_ilnxxw.id
left join master_join master_join_oqehfc on procedure.departureleg_ts.id = master_join_oqehfc.source_id
left join procedure.departurearrivalcondition_view procedure_departurearrivalcondition_view_qyivni on master_join_oqehfc.target_id = procedure_departurearrivalcondition_view_qyivni.id
where procedure.departureleg.feature_status = 'APPROVED'
  and procedure.departureleg_ts.feature_status = 'APPROVED'
group by
    procedure.departureleg.id,
    procedure.departureleg_ts.id,
    procedure.departureleg_tsp.id,
    procedure.departureleg.identifier,
    procedure.departureleg_ts.interpretation,
    procedure.departureleg_ts.sequence_number,
    procedure.departureleg_ts.correction_number,
    procedure.departureleg_ts.valid_time_begin,
    procedure.departureleg_ts.valid_time_end,
    procedure.departureleg_ts.feature_lifetime_begin,
    procedure.departureleg_ts.feature_lifetime_end,
    procedure.departureleg_ts.endconditiondesignator_value,
    procedure.departureleg_ts.endconditiondesignator_nilreason,
    procedure.departureleg_ts.legpath_value,
    procedure.departureleg_ts.legpath_nilreason,
    procedure.departureleg_ts.legtypearinc_value,
    procedure.departureleg_ts.legtypearinc_nilreason,
    procedure.departureleg_ts.course_value,
    procedure.departureleg_ts.course_nilreason,
    procedure.departureleg_ts.coursetype_value,
    procedure.departureleg_ts.coursetype_nilreason,
    procedure.departureleg_ts.coursedirection_value,
    procedure.departureleg_ts.coursedirection_nilreason,
    procedure.departureleg_ts.turndirection_value,
    procedure.departureleg_ts.turndirection_nilreason,
    procedure.departureleg_ts.speedreference_value,
    procedure.departureleg_ts.speedreference_nilreason,
    procedure.departureleg_ts.speedinterpretation_value,
    procedure.departureleg_ts.speedinterpretation_nilreason,
    procedure.departureleg_ts.bankangle_value,
    procedure.departureleg_ts.bankangle_nilreason,
    procedure.departureleg_ts.procedureturnrequired_value,
    procedure.departureleg_ts.procedureturnrequired_nilreason,
    procedure.departureleg_ts.upperlimitreference_value,
    procedure.departureleg_ts.upperlimitreference_nilreason,
    procedure.departureleg_ts.lowerlimitreference_value,
    procedure.departureleg_ts.lowerlimitreference_nilreason,
    procedure.departureleg_ts.altitudeinterpretation_value,
    procedure.departureleg_ts.altitudeinterpretation_nilreason,
    procedure.departureleg_ts.altitudeoverridereference_value,
    procedure.departureleg_ts.altitudeoverridereference_nilreason,
    procedure.departureleg_ts.verticalangle_value,
    procedure.departureleg_ts.verticalangle_nilreason,
    procedure.departureleg_ts.requirednavigationperformance_value,
    procedure.departureleg_ts.requirednavigationperformance_nilreason,
    procedure.departureleg_ts.speedlimit_value,
    procedure.departureleg_ts.speedlimit_uom,
    procedure.departureleg_ts.speedlimit_nilreason,
    procedure.departureleg_ts.length_value,
    procedure.departureleg_ts.length_uom,
    procedure.departureleg_ts.length_nilreason,
    procedure.departureleg_ts.duration_value,
    procedure.departureleg_ts.duration_uom,
    procedure.departureleg_ts.duration_nilreason,
    procedure.departureleg_ts.upperlimitaltitude_value,
    procedure.departureleg_ts.upperlimitaltitude_uom,
    procedure.departureleg_ts.upperlimitaltitude_nilreason,
    procedure.departureleg_ts.lowerlimitaltitude_value,
    procedure.departureleg_ts.lowerlimitaltitude_uom,
    procedure.departureleg_ts.lowerlimitaltitude_nilreason,
    procedure.departureleg_ts.altitudeoverrideatc_value,
    procedure.departureleg_ts.altitudeoverrideatc_uom,
    procedure.departureleg_ts.altitudeoverrideatc_nilreason,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_value,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_uom,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_nilreason,
    navaids_points_terminalsegmentpoint_view_ovxoyl.id,
    navaids_points_terminalsegmentpoint_view_zindqm.id,
    geometry_curve_view_tmmrmn.geom,
    geometry_curve_view_tmmrmn.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_hdwdcq.id,
    navaids_points_angleindication_pt_ampmtf.title,
    navaids_points_angleindication_pt_ampmtf.nilreason[1],
    navaids_points_angleindication_pt_ampmtf.href,
    navaids_points_distanceindication_pt_ybyxgi.title,
    navaids_points_distanceindication_pt_ybyxgi.nilreason[1],
    navaids_points_distanceindication_pt_ybyxgi.href,
    procedure_holdinguse_view_hndjcy.id,
    procedure_standardinstrumentdeparture_pt_srrngy.title,
    procedure_standardinstrumentdeparture_pt_srrngy.nilreason[1],
    procedure_standardinstrumentdeparture_pt_srrngy.href
order by departureleg.identifier, departureleg_ts.sequence_number, departureleg_ts.correction_number DESC;
create index on procedure.departureleg_view (id);
-- DesignatedPointTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.designatedpoint_view cascade;
create materialized view navaids_points.designatedpoint_view as
select distinct on (designatedpoint.identifier,designatedpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.designatedpoint.id,
    navaids_points.designatedpoint_ts.id as ts_id,
    navaids_points.designatedpoint_tsp.id as tsp_id,
    navaids_points.designatedpoint.identifier,
    navaids_points.designatedpoint_ts.interpretation,
    navaids_points.designatedpoint_ts.sequence_number,
    navaids_points.designatedpoint_ts.correction_number,
    navaids_points.designatedpoint_ts.valid_time_begin,
    navaids_points.designatedpoint_ts.valid_time_end,
    navaids_points.designatedpoint_ts.feature_lifetime_begin,
    navaids_points.designatedpoint_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.designatedpoint_ts.designator_value as varchar), '(' || navaids_points.designatedpoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.designatedpoint_ts.type_value as varchar), '(' || navaids_points.designatedpoint_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.designatedpoint_ts.name_value as varchar), '(' || navaids_points.designatedpoint_ts.name_nilreason || ')') as name,
    geometry_point_view_ixbzwa.geom AS location_geom,
    ST_X(geometry_point_view_ixbzwa.geom) AS location_longitude,
    ST_Y(geometry_point_view_ixbzwa.geom) AS location_latitude,
    geometry_point_view_ixbzwa.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_wzyaxk.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_wzyaxk.nilreason[1] || ')') AS aimingpoint,
    airport_heliport_touchdownliftoff_pt_wzyaxk.href AS aimingpoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_mucrcn.title as varchar), '(' || airport_heliport_airportheliport_pt_mucrcn.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_mucrcn.href AS airportheliport_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_wngxcc.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_wngxcc.nilreason[1] || ')') AS runwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_wngxcc.href AS runwaypoint_href,
    jsonb_agg(notes_note_view_weilbf.*) AS annotation
from navaids_points.designatedpoint 
inner join master_join mj2 on navaids_points.designatedpoint.id = mj2.source_id
inner join navaids_points.designatedpoint_tsp on mj2.target_id = navaids_points.designatedpoint_tsp.id
inner join navaids_points.designatedpoint_ts on navaids_points.designatedpoint_tsp.designatedpointtimeslice_id = navaids_points.designatedpoint_ts.id
left join geometry.point_view geometry_point_view_ixbzwa on navaids_points.designatedpoint_ts.location_id = geometry_point_view_ixbzwa.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_wzyaxk on navaids_points.designatedpoint_ts.aimingpoint_id = airport_heliport_touchdownliftoff_pt_wzyaxk.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_mucrcn on navaids_points.designatedpoint_ts.airportheliport_id = airport_heliport_airportheliport_pt_mucrcn.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_wngxcc on navaids_points.designatedpoint_ts.runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_wngxcc.id
left join master_join master_join_yhkble on navaids_points.designatedpoint_ts.id = master_join_yhkble.source_id
left join notes.note_view notes_note_view_weilbf on master_join_yhkble.target_id = notes_note_view_weilbf.id
where navaids_points.designatedpoint.feature_status = 'APPROVED'
  and navaids_points.designatedpoint_ts.feature_status = 'APPROVED'
group by
    navaids_points.designatedpoint.id,
    navaids_points.designatedpoint_ts.id,
    navaids_points.designatedpoint_tsp.id,
    navaids_points.designatedpoint.identifier,
    navaids_points.designatedpoint_ts.interpretation,
    navaids_points.designatedpoint_ts.sequence_number,
    navaids_points.designatedpoint_ts.correction_number,
    navaids_points.designatedpoint_ts.valid_time_begin,
    navaids_points.designatedpoint_ts.valid_time_end,
    navaids_points.designatedpoint_ts.feature_lifetime_begin,
    navaids_points.designatedpoint_ts.feature_lifetime_end,
    navaids_points.designatedpoint_ts.designator_value,
    navaids_points.designatedpoint_ts.designator_nilreason,
    navaids_points.designatedpoint_ts.type_value,
    navaids_points.designatedpoint_ts.type_nilreason,
    navaids_points.designatedpoint_ts.name_value,
    navaids_points.designatedpoint_ts.name_nilreason,
    geometry_point_view_ixbzwa.geom,
    geometry_point_view_ixbzwa.horizontalAccuracy,
    airport_heliport_touchdownliftoff_pt_wzyaxk.title,
    airport_heliport_touchdownliftoff_pt_wzyaxk.nilreason[1],
    airport_heliport_touchdownliftoff_pt_wzyaxk.href,
    airport_heliport_airportheliport_pt_mucrcn.title,
    airport_heliport_airportheliport_pt_mucrcn.nilreason[1],
    airport_heliport_airportheliport_pt_mucrcn.href,
    airport_heliport_runwaycentrelinepoint_pt_wngxcc.title,
    airport_heliport_runwaycentrelinepoint_pt_wngxcc.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_wngxcc.href
order by designatedpoint.identifier, designatedpoint_ts.sequence_number, designatedpoint_ts.correction_number DESC;
create index on navaids_points.designatedpoint_view (id);
-- DirectionFinderTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.directionfinder_view cascade;
create materialized view navaids_points.directionfinder_view as
select distinct on (directionfinder.identifier,directionfinder_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.directionfinder.id,
    navaids_points.directionfinder_ts.id as ts_id,
    navaids_points.directionfinder_tsp.id as tsp_id,
    navaids_points.directionfinder.identifier,
    navaids_points.directionfinder_ts.interpretation,
    navaids_points.directionfinder_ts.sequence_number,
    navaids_points.directionfinder_ts.correction_number,
    navaids_points.directionfinder_ts.valid_time_begin,
    navaids_points.directionfinder_ts.valid_time_end,
    navaids_points.directionfinder_ts.feature_lifetime_begin,
    navaids_points.directionfinder_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.directionfinder_ts.designator_value as varchar), '(' || navaids_points.directionfinder_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.directionfinder_ts.name_value as varchar), '(' || navaids_points.directionfinder_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.directionfinder_ts.emissionclass_value as varchar), '(' || navaids_points.directionfinder_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.directionfinder_ts.mobile_value as varchar), '(' || navaids_points.directionfinder_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.directionfinder_ts.magneticvariation_value as varchar), '(' || navaids_points.directionfinder_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.directionfinder_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.directionfinder_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.directionfinder_ts.datemagneticvariation_value as varchar), '(' || navaids_points.directionfinder_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.directionfinder_ts.flightchecked_value as varchar), '(' || navaids_points.directionfinder_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.directionfinder_ts.doppler_value as varchar), '(' || navaids_points.directionfinder_ts.doppler_nilreason || ')') as doppler,
    geometry_elevatedpoint_view_csleig.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_csleig.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_csleig.geom) AS location_latitude,
    geometry_elevatedpoint_view_csleig.elevation AS location_elevation,
    geometry_elevatedpoint_view_csleig.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_csleig.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_csleig.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_csleig.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_bsctca.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_xaaihk.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_qyhyal.id) AS availability,
    jsonb_agg(notes_note_view_nqpenz.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_informationservice_pt_upddvv.id,
    'title', coalesce(cast(service_informationservice_pt_upddvv.title AS varchar), '(' || service_informationservice_pt_upddvv.nilreason[1] || ')'),
    'href', service_informationservice_pt_upddvv.href)) AS informationprovision
from navaids_points.directionfinder 
inner join master_join mj2 on navaids_points.directionfinder.id = mj2.source_id
inner join navaids_points.directionfinder_tsp on mj2.target_id = navaids_points.directionfinder_tsp.id
inner join navaids_points.directionfinder_ts on navaids_points.directionfinder_tsp.directionfindertimeslice_id = navaids_points.directionfinder_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_csleig on navaids_points.directionfinder_ts.location_id = geometry_elevatedpoint_view_csleig.id
left join master_join master_join_oorcio on navaids_points.directionfinder_ts.id = master_join_oorcio.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_bsctca on master_join_oorcio.target_id = navaids_points_authorityfornavaidequipment_view_bsctca.id
left join master_join master_join_bmtjzs on navaids_points.directionfinder_ts.id = master_join_bmtjzs.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_xaaihk on master_join_bmtjzs.target_id = navaids_points_navaidequipmentmonitoring_view_xaaihk.id
left join master_join master_join_rfvhkb on navaids_points.directionfinder_ts.id = master_join_rfvhkb.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_qyhyal on master_join_rfvhkb.target_id = navaids_points_navaidoperationalstatus_view_qyhyal.id
left join master_join master_join_drcmym on navaids_points.directionfinder_ts.id = master_join_drcmym.source_id
left join notes.note_view notes_note_view_nqpenz on master_join_drcmym.target_id = notes_note_view_nqpenz.id
left join master_join master_join_iclmum on navaids_points.directionfinder_ts.id = master_join_iclmum.source_id
left join service.informationservice_pt service_informationservice_pt_upddvv on master_join_iclmum.target_id = service_informationservice_pt_upddvv.id
where navaids_points.directionfinder.feature_status = 'APPROVED'
  and navaids_points.directionfinder_ts.feature_status = 'APPROVED'
group by
    navaids_points.directionfinder.id,
    navaids_points.directionfinder_ts.id,
    navaids_points.directionfinder_tsp.id,
    navaids_points.directionfinder.identifier,
    navaids_points.directionfinder_ts.interpretation,
    navaids_points.directionfinder_ts.sequence_number,
    navaids_points.directionfinder_ts.correction_number,
    navaids_points.directionfinder_ts.valid_time_begin,
    navaids_points.directionfinder_ts.valid_time_end,
    navaids_points.directionfinder_ts.feature_lifetime_begin,
    navaids_points.directionfinder_ts.feature_lifetime_end,
    navaids_points.directionfinder_ts.designator_value,
    navaids_points.directionfinder_ts.designator_nilreason,
    navaids_points.directionfinder_ts.name_value,
    navaids_points.directionfinder_ts.name_nilreason,
    navaids_points.directionfinder_ts.emissionclass_value,
    navaids_points.directionfinder_ts.emissionclass_nilreason,
    navaids_points.directionfinder_ts.mobile_value,
    navaids_points.directionfinder_ts.mobile_nilreason,
    navaids_points.directionfinder_ts.magneticvariation_value,
    navaids_points.directionfinder_ts.magneticvariation_nilreason,
    navaids_points.directionfinder_ts.magneticvariationaccuracy_value,
    navaids_points.directionfinder_ts.magneticvariationaccuracy_nilreason,
    navaids_points.directionfinder_ts.datemagneticvariation_value,
    navaids_points.directionfinder_ts.datemagneticvariation_nilreason,
    navaids_points.directionfinder_ts.flightchecked_value,
    navaids_points.directionfinder_ts.flightchecked_nilreason,
    navaids_points.directionfinder_ts.doppler_value,
    navaids_points.directionfinder_ts.doppler_nilreason,
    geometry_elevatedpoint_view_csleig.geom,
    geometry_elevatedpoint_view_csleig.elevation,
    geometry_elevatedpoint_view_csleig.geoidUndulation,
    geometry_elevatedpoint_view_csleig.verticalDatum,
    geometry_elevatedpoint_view_csleig.verticalAccuracy,
    geometry_elevatedpoint_view_csleig.horizontalAccuracy
order by directionfinder.identifier, directionfinder_ts.sequence_number, directionfinder_ts.correction_number DESC;
create index on navaids_points.directionfinder_view (id);
-- DistanceIndicationTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.distanceindication_view cascade;
create materialized view navaids_points.distanceindication_view as
select distinct on (distanceindication.identifier,distanceindication_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.distanceindication.id,
    navaids_points.distanceindication_ts.id as ts_id,
    navaids_points.distanceindication_tsp.id as tsp_id,
    navaids_points.distanceindication.identifier,
    navaids_points.distanceindication_ts.interpretation,
    navaids_points.distanceindication_ts.sequence_number,
    navaids_points.distanceindication_ts.correction_number,
    navaids_points.distanceindication_ts.valid_time_begin,
    navaids_points.distanceindication_ts.valid_time_end,
    navaids_points.distanceindication_ts.feature_lifetime_begin,
    navaids_points.distanceindication_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.distanceindication_ts.type_value as varchar), '(' || navaids_points.distanceindication_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.distanceindication_ts.distance_value as varchar) || ' ' || navaids_points.distanceindication_ts.distance_uom, '(' || navaids_points.distanceindication_ts.distance_nilreason || ')') as distance,
    coalesce(cast(navaids_points.distanceindication_ts.minimumreceptionaltitude_value as varchar) || ' ' || navaids_points.distanceindication_ts.minimumreceptionaltitude_uom, '(' || navaids_points.distanceindication_ts.minimumreceptionaltitude_nilreason || ')') as minimumreceptionaltitude,
    coalesce(cast(navaids_points_designatedpoint_pt_ihaufx.title as varchar), '(' || navaids_points_designatedpoint_pt_ihaufx.nilreason[1] || ')') AS fix,
    navaids_points_designatedpoint_pt_ihaufx.href AS fix_href,
    coalesce(cast(navaids_points_designatedpoint_pt_epfqdl.title as varchar), '(' || navaids_points_designatedpoint_pt_epfqdl.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_epfqdl.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_qretet.title as varchar), '(' || navaids_points_navaid_pt_qretet.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_qretet.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_jxljtk.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_jxljtk.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_jxljtk.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_avpupc.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_avpupc.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_avpupc.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_cfbrzv.title as varchar), '(' || airport_heliport_airportheliport_pt_cfbrzv.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_cfbrzv.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_yxyjok.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_yxyjok.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_yxyjok.geom) AS pointchoiceposition_latitude,
    geometry_point_view_yxyjok.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    jsonb_agg(notes_note_view_aeknet.*) AS annotation
from navaids_points.distanceindication 
inner join master_join mj2 on navaids_points.distanceindication.id = mj2.source_id
inner join navaids_points.distanceindication_tsp on mj2.target_id = navaids_points.distanceindication_tsp.id
inner join navaids_points.distanceindication_ts on navaids_points.distanceindication_tsp.distanceindicationtimeslice_id = navaids_points.distanceindication_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ihaufx on navaids_points.distanceindication_ts.fix_id = navaids_points_designatedpoint_pt_ihaufx.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_epfqdl on navaids_points.distanceindication_ts.distanceindication_ts_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_epfqdl.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_qretet on navaids_points.distanceindication_ts.distanceindication_ts_navaidsystem_id = navaids_points_navaid_pt_qretet.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_jxljtk on navaids_points.distanceindication_ts.distanceindication_ts_aimingpoint_id = airport_heliport_touchdownliftoff_pt_jxljtk.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_avpupc on navaids_points.distanceindication_ts.distanceindication_ts_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_avpupc.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cfbrzv on navaids_points.distanceindication_ts.distanceindication_ts_airportreferencepoint_id = airport_heliport_airportheliport_pt_cfbrzv.id
left join geometry.point_view geometry_point_view_yxyjok on navaids_points.distanceindication_ts.distanceindication_ts_position_id = geometry_point_view_yxyjok.id
left join master_join master_join_kwyzar on navaids_points.distanceindication_ts.id = master_join_kwyzar.source_id
left join notes.note_view notes_note_view_aeknet on master_join_kwyzar.target_id = notes_note_view_aeknet.id
where navaids_points.distanceindication.feature_status = 'APPROVED'
  and navaids_points.distanceindication_ts.feature_status = 'APPROVED'
group by
    navaids_points.distanceindication.id,
    navaids_points.distanceindication_ts.id,
    navaids_points.distanceindication_tsp.id,
    navaids_points.distanceindication.identifier,
    navaids_points.distanceindication_ts.interpretation,
    navaids_points.distanceindication_ts.sequence_number,
    navaids_points.distanceindication_ts.correction_number,
    navaids_points.distanceindication_ts.valid_time_begin,
    navaids_points.distanceindication_ts.valid_time_end,
    navaids_points.distanceindication_ts.feature_lifetime_begin,
    navaids_points.distanceindication_ts.feature_lifetime_end,
    navaids_points.distanceindication_ts.type_value,
    navaids_points.distanceindication_ts.type_nilreason,
    navaids_points.distanceindication_ts.distance_value,
    navaids_points.distanceindication_ts.distance_uom,
    navaids_points.distanceindication_ts.distance_nilreason,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_value,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_uom,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_nilreason,
    navaids_points_designatedpoint_pt_ihaufx.title,
    navaids_points_designatedpoint_pt_ihaufx.nilreason[1],
    navaids_points_designatedpoint_pt_ihaufx.href,
    navaids_points_designatedpoint_pt_epfqdl.title,
    navaids_points_designatedpoint_pt_epfqdl.nilreason[1],
    navaids_points_designatedpoint_pt_epfqdl.href,
    navaids_points_navaid_pt_qretet.title,
    navaids_points_navaid_pt_qretet.nilreason[1],
    navaids_points_navaid_pt_qretet.href,
    airport_heliport_touchdownliftoff_pt_jxljtk.title,
    airport_heliport_touchdownliftoff_pt_jxljtk.nilreason[1],
    airport_heliport_touchdownliftoff_pt_jxljtk.href,
    airport_heliport_runwaycentrelinepoint_pt_avpupc.title,
    airport_heliport_runwaycentrelinepoint_pt_avpupc.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_avpupc.href,
    airport_heliport_airportheliport_pt_cfbrzv.title,
    airport_heliport_airportheliport_pt_cfbrzv.nilreason[1],
    airport_heliport_airportheliport_pt_cfbrzv.href,
    geometry_point_view_yxyjok.geom,
    geometry_point_view_yxyjok.horizontalAccuracy
order by distanceindication.identifier, distanceindication_ts.sequence_number, distanceindication_ts.correction_number DESC;
create index on navaids_points.distanceindication_view (id);
-- DMETimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.dme_view cascade;
create materialized view navaids_points.dme_view as
select distinct on (dme.identifier,dme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.dme.id,
    navaids_points.dme_ts.id as ts_id,
    navaids_points.dme_tsp.id as tsp_id,
    navaids_points.dme.identifier,
    navaids_points.dme_ts.interpretation,
    navaids_points.dme_ts.sequence_number,
    navaids_points.dme_ts.correction_number,
    navaids_points.dme_ts.valid_time_begin,
    navaids_points.dme_ts.valid_time_end,
    navaids_points.dme_ts.feature_lifetime_begin,
    navaids_points.dme_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.dme_ts.designator_value as varchar), '(' || navaids_points.dme_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.dme_ts.name_value as varchar), '(' || navaids_points.dme_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.dme_ts.emissionclass_value as varchar), '(' || navaids_points.dme_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.dme_ts.mobile_value as varchar), '(' || navaids_points.dme_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.dme_ts.magneticvariation_value as varchar), '(' || navaids_points.dme_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.dme_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.dme_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.dme_ts.datemagneticvariation_value as varchar), '(' || navaids_points.dme_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.dme_ts.flightchecked_value as varchar), '(' || navaids_points.dme_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.dme_ts.type_value as varchar), '(' || navaids_points.dme_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.dme_ts.channel_value as varchar), '(' || navaids_points.dme_ts.channel_nilreason || ')') as channel,
    coalesce(cast(navaids_points.dme_ts.ghostfrequency_value as varchar) || ' ' || navaids_points.dme_ts.ghostfrequency_uom, '(' || navaids_points.dme_ts.ghostfrequency_nilreason || ')') as ghostfrequency,
    coalesce(cast(navaids_points.dme_ts.displace_value as varchar) || ' ' || navaids_points.dme_ts.displace_uom, '(' || navaids_points.dme_ts.displace_nilreason || ')') as displace,
    geometry_elevatedpoint_view_pydymd.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_pydymd.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_pydymd.geom) AS location_latitude,
    geometry_elevatedpoint_view_pydymd.elevation AS location_elevation,
    geometry_elevatedpoint_view_pydymd.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_pydymd.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_pydymd.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_pydymd.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_wwsrgr.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_tdtdqx.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_qetkwq.id) AS availability,
    jsonb_agg(notes_note_view_cjxweh.*) AS annotation
from navaids_points.dme 
inner join master_join mj2 on navaids_points.dme.id = mj2.source_id
inner join navaids_points.dme_tsp on mj2.target_id = navaids_points.dme_tsp.id
inner join navaids_points.dme_ts on navaids_points.dme_tsp.dmetimeslice_id = navaids_points.dme_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_pydymd on navaids_points.dme_ts.location_id = geometry_elevatedpoint_view_pydymd.id
left join master_join master_join_wbxpje on navaids_points.dme_ts.id = master_join_wbxpje.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_wwsrgr on master_join_wbxpje.target_id = navaids_points_authorityfornavaidequipment_view_wwsrgr.id
left join master_join master_join_vmfueg on navaids_points.dme_ts.id = master_join_vmfueg.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_tdtdqx on master_join_vmfueg.target_id = navaids_points_navaidequipmentmonitoring_view_tdtdqx.id
left join master_join master_join_znwloj on navaids_points.dme_ts.id = master_join_znwloj.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_qetkwq on master_join_znwloj.target_id = navaids_points_navaidoperationalstatus_view_qetkwq.id
left join master_join master_join_ajadkn on navaids_points.dme_ts.id = master_join_ajadkn.source_id
left join notes.note_view notes_note_view_cjxweh on master_join_ajadkn.target_id = notes_note_view_cjxweh.id
where navaids_points.dme.feature_status = 'APPROVED'
  and navaids_points.dme_ts.feature_status = 'APPROVED'
group by
    navaids_points.dme.id,
    navaids_points.dme_ts.id,
    navaids_points.dme_tsp.id,
    navaids_points.dme.identifier,
    navaids_points.dme_ts.interpretation,
    navaids_points.dme_ts.sequence_number,
    navaids_points.dme_ts.correction_number,
    navaids_points.dme_ts.valid_time_begin,
    navaids_points.dme_ts.valid_time_end,
    navaids_points.dme_ts.feature_lifetime_begin,
    navaids_points.dme_ts.feature_lifetime_end,
    navaids_points.dme_ts.designator_value,
    navaids_points.dme_ts.designator_nilreason,
    navaids_points.dme_ts.name_value,
    navaids_points.dme_ts.name_nilreason,
    navaids_points.dme_ts.emissionclass_value,
    navaids_points.dme_ts.emissionclass_nilreason,
    navaids_points.dme_ts.mobile_value,
    navaids_points.dme_ts.mobile_nilreason,
    navaids_points.dme_ts.magneticvariation_value,
    navaids_points.dme_ts.magneticvariation_nilreason,
    navaids_points.dme_ts.magneticvariationaccuracy_value,
    navaids_points.dme_ts.magneticvariationaccuracy_nilreason,
    navaids_points.dme_ts.datemagneticvariation_value,
    navaids_points.dme_ts.datemagneticvariation_nilreason,
    navaids_points.dme_ts.flightchecked_value,
    navaids_points.dme_ts.flightchecked_nilreason,
    navaids_points.dme_ts.type_value,
    navaids_points.dme_ts.type_nilreason,
    navaids_points.dme_ts.channel_value,
    navaids_points.dme_ts.channel_nilreason,
    navaids_points.dme_ts.ghostfrequency_value,
    navaids_points.dme_ts.ghostfrequency_uom,
    navaids_points.dme_ts.ghostfrequency_nilreason,
    navaids_points.dme_ts.displace_value,
    navaids_points.dme_ts.displace_uom,
    navaids_points.dme_ts.displace_nilreason,
    geometry_elevatedpoint_view_pydymd.geom,
    geometry_elevatedpoint_view_pydymd.elevation,
    geometry_elevatedpoint_view_pydymd.geoidUndulation,
    geometry_elevatedpoint_view_pydymd.verticalDatum,
    geometry_elevatedpoint_view_pydymd.verticalAccuracy,
    geometry_elevatedpoint_view_pydymd.horizontalAccuracy
order by dme.identifier, dme_ts.sequence_number, dme_ts.correction_number DESC;
create index on navaids_points.dme_view (id);
-- ElevationTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.elevation_view cascade;
create materialized view navaids_points.elevation_view as
select distinct on (elevation.identifier,elevation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.elevation.id,
    navaids_points.elevation_ts.id as ts_id,
    navaids_points.elevation_tsp.id as tsp_id,
    navaids_points.elevation.identifier,
    navaids_points.elevation_ts.interpretation,
    navaids_points.elevation_ts.sequence_number,
    navaids_points.elevation_ts.correction_number,
    navaids_points.elevation_ts.valid_time_begin,
    navaids_points.elevation_ts.valid_time_end,
    navaids_points.elevation_ts.feature_lifetime_begin,
    navaids_points.elevation_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.elevation_ts.designator_value as varchar), '(' || navaids_points.elevation_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.elevation_ts.name_value as varchar), '(' || navaids_points.elevation_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.elevation_ts.emissionclass_value as varchar), '(' || navaids_points.elevation_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.elevation_ts.mobile_value as varchar), '(' || navaids_points.elevation_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.elevation_ts.magneticvariation_value as varchar), '(' || navaids_points.elevation_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.elevation_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.elevation_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.elevation_ts.datemagneticvariation_value as varchar), '(' || navaids_points.elevation_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.elevation_ts.flightchecked_value as varchar), '(' || navaids_points.elevation_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.elevation_ts.anglenominal_value as varchar), '(' || navaids_points.elevation_ts.anglenominal_nilreason || ')') as anglenominal,
    coalesce(cast(navaids_points.elevation_ts.angleminimum_value as varchar), '(' || navaids_points.elevation_ts.angleminimum_nilreason || ')') as angleminimum,
    coalesce(cast(navaids_points.elevation_ts.anglespan_value as varchar), '(' || navaids_points.elevation_ts.anglespan_nilreason || ')') as anglespan,
    coalesce(cast(navaids_points.elevation_ts.angleaccuracy_value as varchar), '(' || navaids_points.elevation_ts.angleaccuracy_nilreason || ')') as angleaccuracy,
    geometry_elevatedpoint_view_ninaif.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_ninaif.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_ninaif.geom) AS location_latitude,
    geometry_elevatedpoint_view_ninaif.elevation AS location_elevation,
    geometry_elevatedpoint_view_ninaif.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_ninaif.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_ninaif.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_ninaif.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_daifji.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_edmdjo.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_uxlxuk.id) AS availability,
    jsonb_agg(notes_note_view_zrdidm.*) AS annotation
from navaids_points.elevation 
inner join master_join mj2 on navaids_points.elevation.id = mj2.source_id
inner join navaids_points.elevation_tsp on mj2.target_id = navaids_points.elevation_tsp.id
inner join navaids_points.elevation_ts on navaids_points.elevation_tsp.elevationtimeslice_id = navaids_points.elevation_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_ninaif on navaids_points.elevation_ts.location_id = geometry_elevatedpoint_view_ninaif.id
left join master_join master_join_wwuxjw on navaids_points.elevation_ts.id = master_join_wwuxjw.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_daifji on master_join_wwuxjw.target_id = navaids_points_authorityfornavaidequipment_view_daifji.id
left join master_join master_join_vpzyjc on navaids_points.elevation_ts.id = master_join_vpzyjc.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_edmdjo on master_join_vpzyjc.target_id = navaids_points_navaidequipmentmonitoring_view_edmdjo.id
left join master_join master_join_gwqunl on navaids_points.elevation_ts.id = master_join_gwqunl.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_uxlxuk on master_join_gwqunl.target_id = navaids_points_navaidoperationalstatus_view_uxlxuk.id
left join master_join master_join_gyukll on navaids_points.elevation_ts.id = master_join_gyukll.source_id
left join notes.note_view notes_note_view_zrdidm on master_join_gyukll.target_id = notes_note_view_zrdidm.id
where navaids_points.elevation.feature_status = 'APPROVED'
  and navaids_points.elevation_ts.feature_status = 'APPROVED'
group by
    navaids_points.elevation.id,
    navaids_points.elevation_ts.id,
    navaids_points.elevation_tsp.id,
    navaids_points.elevation.identifier,
    navaids_points.elevation_ts.interpretation,
    navaids_points.elevation_ts.sequence_number,
    navaids_points.elevation_ts.correction_number,
    navaids_points.elevation_ts.valid_time_begin,
    navaids_points.elevation_ts.valid_time_end,
    navaids_points.elevation_ts.feature_lifetime_begin,
    navaids_points.elevation_ts.feature_lifetime_end,
    navaids_points.elevation_ts.designator_value,
    navaids_points.elevation_ts.designator_nilreason,
    navaids_points.elevation_ts.name_value,
    navaids_points.elevation_ts.name_nilreason,
    navaids_points.elevation_ts.emissionclass_value,
    navaids_points.elevation_ts.emissionclass_nilreason,
    navaids_points.elevation_ts.mobile_value,
    navaids_points.elevation_ts.mobile_nilreason,
    navaids_points.elevation_ts.magneticvariation_value,
    navaids_points.elevation_ts.magneticvariation_nilreason,
    navaids_points.elevation_ts.magneticvariationaccuracy_value,
    navaids_points.elevation_ts.magneticvariationaccuracy_nilreason,
    navaids_points.elevation_ts.datemagneticvariation_value,
    navaids_points.elevation_ts.datemagneticvariation_nilreason,
    navaids_points.elevation_ts.flightchecked_value,
    navaids_points.elevation_ts.flightchecked_nilreason,
    navaids_points.elevation_ts.anglenominal_value,
    navaids_points.elevation_ts.anglenominal_nilreason,
    navaids_points.elevation_ts.angleminimum_value,
    navaids_points.elevation_ts.angleminimum_nilreason,
    navaids_points.elevation_ts.anglespan_value,
    navaids_points.elevation_ts.anglespan_nilreason,
    navaids_points.elevation_ts.angleaccuracy_value,
    navaids_points.elevation_ts.angleaccuracy_nilreason,
    geometry_elevatedpoint_view_ninaif.geom,
    geometry_elevatedpoint_view_ninaif.elevation,
    geometry_elevatedpoint_view_ninaif.geoidUndulation,
    geometry_elevatedpoint_view_ninaif.verticalDatum,
    geometry_elevatedpoint_view_ninaif.verticalAccuracy,
    geometry_elevatedpoint_view_ninaif.horizontalAccuracy
order by elevation.identifier, elevation_ts.sequence_number, elevation_ts.correction_number DESC;
create index on navaids_points.elevation_view (id);
-- FinalLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'public.fasdatablock_view', 'notes.note_view', 'geometry.point_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'procedure.approachcondition_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.finalleg_view cascade;
create materialized view procedure.finalleg_view as
select distinct on (finalleg.identifier,finalleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.finalleg.id,
    procedure.finalleg_ts.id as ts_id,
    procedure.finalleg_tsp.id as tsp_id,
    procedure.finalleg.identifier,
    procedure.finalleg_ts.interpretation,
    procedure.finalleg_ts.sequence_number,
    procedure.finalleg_ts.correction_number,
    procedure.finalleg_ts.valid_time_begin,
    procedure.finalleg_ts.valid_time_end,
    procedure.finalleg_ts.feature_lifetime_begin,
    procedure.finalleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.finalleg_ts.endconditiondesignator_value as varchar), '(' || procedure.finalleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.finalleg_ts.legpath_value as varchar), '(' || procedure.finalleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.finalleg_ts.legtypearinc_value as varchar), '(' || procedure.finalleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.finalleg_ts.course_value as varchar), '(' || procedure.finalleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.finalleg_ts.coursetype_value as varchar), '(' || procedure.finalleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.finalleg_ts.coursedirection_value as varchar), '(' || procedure.finalleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.finalleg_ts.turndirection_value as varchar), '(' || procedure.finalleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.finalleg_ts.speedreference_value as varchar), '(' || procedure.finalleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.finalleg_ts.speedinterpretation_value as varchar), '(' || procedure.finalleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.finalleg_ts.bankangle_value as varchar), '(' || procedure.finalleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.finalleg_ts.procedureturnrequired_value as varchar), '(' || procedure.finalleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.finalleg_ts.upperlimitreference_value as varchar), '(' || procedure.finalleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.finalleg_ts.lowerlimitreference_value as varchar), '(' || procedure.finalleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.finalleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.finalleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.finalleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.finalleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.finalleg_ts.verticalangle_value as varchar), '(' || procedure.finalleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.finalleg_ts.guidancesystem_value as varchar), '(' || procedure.finalleg_ts.guidancesystem_nilreason || ')') as guidancesystem,
    coalesce(cast(procedure.finalleg_ts.landingsystemcategory_value as varchar), '(' || procedure.finalleg_ts.landingsystemcategory_nilreason || ')') as landingsystemcategory,
    coalesce(cast(procedure.finalleg_ts.rnpdmeauthorized_value as varchar), '(' || procedure.finalleg_ts.rnpdmeauthorized_nilreason || ')') as rnpdmeauthorized,
    coalesce(cast(procedure.finalleg_ts.courseoffsetangle_value as varchar), '(' || procedure.finalleg_ts.courseoffsetangle_nilreason || ')') as courseoffsetangle,
    coalesce(cast(procedure.finalleg_ts.courseoffsetside_value as varchar), '(' || procedure.finalleg_ts.courseoffsetside_nilreason || ')') as courseoffsetside,
    coalesce(cast(procedure.finalleg_ts.coursecentrelineintersect_value as varchar), '(' || procedure.finalleg_ts.coursecentrelineintersect_nilreason || ')') as coursecentrelineintersect,
    coalesce(cast(procedure.finalleg_ts.speedlimit_value as varchar) || ' ' || procedure.finalleg_ts.speedlimit_uom, '(' || procedure.finalleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.finalleg_ts.length_value as varchar) || ' ' || procedure.finalleg_ts.length_uom, '(' || procedure.finalleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.finalleg_ts.duration_value as varchar) || ' ' || procedure.finalleg_ts.duration_uom, '(' || procedure.finalleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.finalleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.finalleg_ts.upperlimitaltitude_uom, '(' || procedure.finalleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.finalleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.finalleg_ts.lowerlimitaltitude_uom, '(' || procedure.finalleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.finalleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.finalleg_ts.altitudeoverrideatc_uom, '(' || procedure.finalleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.finalleg_ts.minimumbarovnavtemperature_value as varchar) || ' ' || procedure.finalleg_ts.minimumbarovnavtemperature_uom, '(' || procedure.finalleg_ts.minimumbarovnavtemperature_nilreason || ')') as minimumbarovnavtemperature,
    coalesce(cast(procedure.finalleg_ts.coursecentrelinedistance_value as varchar) || ' ' || procedure.finalleg_ts.coursecentrelinedistance_uom, '(' || procedure.finalleg_ts.coursecentrelinedistance_nilreason || ')') as coursecentrelinedistance,
    coalesce(cast(procedure.finalleg_ts.courseoffsetdistance_value as varchar) || ' ' || procedure.finalleg_ts.courseoffsetdistance_uom, '(' || procedure.finalleg_ts.courseoffsetdistance_nilreason || ')') as courseoffsetdistance,
    navaids_points_terminalsegmentpoint_view_zxjzfs.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_lvogxx.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_cqzxgt.id AS arccentre,
    navaids_points_terminalsegmentpoint_view_ynfqxw.id AS visualdescentpoint,
    geometry_curve_view_azbimb.geom AS trajectory_geom,
    geometry_curve_view_azbimb.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_wlnmyq.title as varchar), '(' || navaids_points_angleindication_pt_wlnmyq.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_wlnmyq.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_ymutzj.title as varchar), '(' || navaids_points_distanceindication_pt_ymutzj.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_ymutzj.href AS distance_href,
    procedure_holdinguse_view_vblyzz.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_aldhsd.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_aldhsd.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_aldhsd.href AS approach_href,
    coalesce(cast(navaids_points_designatedpoint_pt_mjfwpo.title as varchar), '(' || navaids_points_designatedpoint_pt_mjfwpo.nilreason[1] || ')') AS finalpathalignmentpointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_mjfwpo.href AS finalpathalignmentpointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_bwqaje.title as varchar), '(' || navaids_points_navaid_pt_bwqaje.nilreason[1] || ')') AS finalpathalignmentpointnavaidsystem,
    navaids_points_navaid_pt_bwqaje.href AS finalpathalignmentpointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_avwwdj.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_avwwdj.nilreason[1] || ')') AS finalpathalignmentpointaimingpoint,
    airport_heliport_touchdownliftoff_pt_avwwdj.href AS finalpathalignmentpointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_qxgcal.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_qxgcal.nilreason[1] || ')') AS finalpathalignmentpointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_qxgcal.href AS finalpathalignmentpointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_pixaos.title as varchar), '(' || airport_heliport_airportheliport_pt_pixaos.nilreason[1] || ')') AS finalpathalignmentpointairportreferencepoint,
    airport_heliport_airportheliport_pt_pixaos.href AS finalpathalignmentpointairportreferencepoint_href,
    geometry_point_view_rdiwtq.geom AS finalpathalignmentpointposition_geom,
    ST_X(geometry_point_view_rdiwtq.geom) AS finalpathalignmentpointposition_longitude,
    ST_Y(geometry_point_view_rdiwtq.geom) AS finalpathalignmentpointposition_latitude,
    geometry_point_view_rdiwtq.horizontalAccuracy AS finalpathalignmentpointposition_horizontalaccuracy,
    public_fasdatablock_view_qzagpm.id AS fasdata,
    jsonb_agg(shared_aircraftcharacteristic_view_laehws.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_whyuyn.id) AS designsurface,
    jsonb_agg(notes_note_view_riapto.*) AS annotation,
    jsonb_agg(procedure_approachcondition_view_uoiovm.id) AS condition
from procedure.finalleg 
inner join master_join mj2 on procedure.finalleg.id = mj2.source_id
inner join procedure.finalleg_tsp on mj2.target_id = procedure.finalleg_tsp.id
inner join procedure.finalleg_ts on procedure.finalleg_tsp.finallegtimeslice_id = procedure.finalleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_zxjzfs on procedure.finalleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_zxjzfs.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_lvogxx on procedure.finalleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_lvogxx.id
left join geometry.curve_view geometry_curve_view_azbimb on procedure.finalleg_ts.trajectory_id = geometry_curve_view_azbimb.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_cqzxgt on procedure.finalleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_cqzxgt.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_wlnmyq on procedure.finalleg_ts.angle_id = navaids_points_angleindication_pt_wlnmyq.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_ymutzj on procedure.finalleg_ts.distance_id = navaids_points_distanceindication_pt_ymutzj.id
left join procedure.holdinguse_view procedure_holdinguse_view_vblyzz on procedure.finalleg_ts.holding_id = procedure_holdinguse_view_vblyzz.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_aldhsd on procedure.finalleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_aldhsd.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_mjfwpo on procedure.finalleg_ts.finalpathalignmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_mjfwpo.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_bwqaje on procedure.finalleg_ts.finalpathalignmentpoint_navaidsystem_id = navaids_points_navaid_pt_bwqaje.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_avwwdj on procedure.finalleg_ts.finalpathalignmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_avwwdj.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_qxgcal on procedure.finalleg_ts.finalpathalignmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_qxgcal.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pixaos on procedure.finalleg_ts.finalpathalignmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_pixaos.id
left join geometry.point_view geometry_point_view_rdiwtq on procedure.finalleg_ts.finalpathalignmentpoint_position_id = geometry_point_view_rdiwtq.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_ynfqxw on procedure.finalleg_ts.visualdescentpoint_id = navaids_points_terminalsegmentpoint_view_ynfqxw.id
left join public.fasdatablock_view public_fasdatablock_view_qzagpm on procedure.finalleg_ts.fasdata_id = public_fasdatablock_view_qzagpm.id
left join master_join master_join_ovcknh on procedure.finalleg_ts.id = master_join_ovcknh.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_laehws on master_join_ovcknh.target_id = shared_aircraftcharacteristic_view_laehws.id
left join master_join master_join_jywqsb on procedure.finalleg_ts.id = master_join_jywqsb.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_whyuyn on master_join_jywqsb.target_id = shared_obstacleassessmentarea_view_whyuyn.id
left join master_join master_join_uwjodw on procedure.finalleg_ts.id = master_join_uwjodw.source_id
left join notes.note_view notes_note_view_riapto on master_join_uwjodw.target_id = notes_note_view_riapto.id
left join master_join master_join_crjrbp on procedure.finalleg_ts.id = master_join_crjrbp.source_id
left join procedure.approachcondition_view procedure_approachcondition_view_uoiovm on master_join_crjrbp.target_id = procedure_approachcondition_view_uoiovm.id
where procedure.finalleg.feature_status = 'APPROVED'
  and procedure.finalleg_ts.feature_status = 'APPROVED'
group by
    procedure.finalleg.id,
    procedure.finalleg_ts.id,
    procedure.finalleg_tsp.id,
    procedure.finalleg.identifier,
    procedure.finalleg_ts.interpretation,
    procedure.finalleg_ts.sequence_number,
    procedure.finalleg_ts.correction_number,
    procedure.finalleg_ts.valid_time_begin,
    procedure.finalleg_ts.valid_time_end,
    procedure.finalleg_ts.feature_lifetime_begin,
    procedure.finalleg_ts.feature_lifetime_end,
    procedure.finalleg_ts.endconditiondesignator_value,
    procedure.finalleg_ts.endconditiondesignator_nilreason,
    procedure.finalleg_ts.legpath_value,
    procedure.finalleg_ts.legpath_nilreason,
    procedure.finalleg_ts.legtypearinc_value,
    procedure.finalleg_ts.legtypearinc_nilreason,
    procedure.finalleg_ts.course_value,
    procedure.finalleg_ts.course_nilreason,
    procedure.finalleg_ts.coursetype_value,
    procedure.finalleg_ts.coursetype_nilreason,
    procedure.finalleg_ts.coursedirection_value,
    procedure.finalleg_ts.coursedirection_nilreason,
    procedure.finalleg_ts.turndirection_value,
    procedure.finalleg_ts.turndirection_nilreason,
    procedure.finalleg_ts.speedreference_value,
    procedure.finalleg_ts.speedreference_nilreason,
    procedure.finalleg_ts.speedinterpretation_value,
    procedure.finalleg_ts.speedinterpretation_nilreason,
    procedure.finalleg_ts.bankangle_value,
    procedure.finalleg_ts.bankangle_nilreason,
    procedure.finalleg_ts.procedureturnrequired_value,
    procedure.finalleg_ts.procedureturnrequired_nilreason,
    procedure.finalleg_ts.upperlimitreference_value,
    procedure.finalleg_ts.upperlimitreference_nilreason,
    procedure.finalleg_ts.lowerlimitreference_value,
    procedure.finalleg_ts.lowerlimitreference_nilreason,
    procedure.finalleg_ts.altitudeinterpretation_value,
    procedure.finalleg_ts.altitudeinterpretation_nilreason,
    procedure.finalleg_ts.altitudeoverridereference_value,
    procedure.finalleg_ts.altitudeoverridereference_nilreason,
    procedure.finalleg_ts.verticalangle_value,
    procedure.finalleg_ts.verticalangle_nilreason,
    procedure.finalleg_ts.guidancesystem_value,
    procedure.finalleg_ts.guidancesystem_nilreason,
    procedure.finalleg_ts.landingsystemcategory_value,
    procedure.finalleg_ts.landingsystemcategory_nilreason,
    procedure.finalleg_ts.rnpdmeauthorized_value,
    procedure.finalleg_ts.rnpdmeauthorized_nilreason,
    procedure.finalleg_ts.courseoffsetangle_value,
    procedure.finalleg_ts.courseoffsetangle_nilreason,
    procedure.finalleg_ts.courseoffsetside_value,
    procedure.finalleg_ts.courseoffsetside_nilreason,
    procedure.finalleg_ts.coursecentrelineintersect_value,
    procedure.finalleg_ts.coursecentrelineintersect_nilreason,
    procedure.finalleg_ts.speedlimit_value,
    procedure.finalleg_ts.speedlimit_uom,
    procedure.finalleg_ts.speedlimit_nilreason,
    procedure.finalleg_ts.length_value,
    procedure.finalleg_ts.length_uom,
    procedure.finalleg_ts.length_nilreason,
    procedure.finalleg_ts.duration_value,
    procedure.finalleg_ts.duration_uom,
    procedure.finalleg_ts.duration_nilreason,
    procedure.finalleg_ts.upperlimitaltitude_value,
    procedure.finalleg_ts.upperlimitaltitude_uom,
    procedure.finalleg_ts.upperlimitaltitude_nilreason,
    procedure.finalleg_ts.lowerlimitaltitude_value,
    procedure.finalleg_ts.lowerlimitaltitude_uom,
    procedure.finalleg_ts.lowerlimitaltitude_nilreason,
    procedure.finalleg_ts.altitudeoverrideatc_value,
    procedure.finalleg_ts.altitudeoverrideatc_uom,
    procedure.finalleg_ts.altitudeoverrideatc_nilreason,
    procedure.finalleg_ts.minimumbarovnavtemperature_value,
    procedure.finalleg_ts.minimumbarovnavtemperature_uom,
    procedure.finalleg_ts.minimumbarovnavtemperature_nilreason,
    procedure.finalleg_ts.coursecentrelinedistance_value,
    procedure.finalleg_ts.coursecentrelinedistance_uom,
    procedure.finalleg_ts.coursecentrelinedistance_nilreason,
    procedure.finalleg_ts.courseoffsetdistance_value,
    procedure.finalleg_ts.courseoffsetdistance_uom,
    procedure.finalleg_ts.courseoffsetdistance_nilreason,
    navaids_points_terminalsegmentpoint_view_zxjzfs.id,
    navaids_points_terminalsegmentpoint_view_lvogxx.id,
    geometry_curve_view_azbimb.geom,
    geometry_curve_view_azbimb.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_cqzxgt.id,
    navaids_points_angleindication_pt_wlnmyq.title,
    navaids_points_angleindication_pt_wlnmyq.nilreason[1],
    navaids_points_angleindication_pt_wlnmyq.href,
    navaids_points_distanceindication_pt_ymutzj.title,
    navaids_points_distanceindication_pt_ymutzj.nilreason[1],
    navaids_points_distanceindication_pt_ymutzj.href,
    procedure_holdinguse_view_vblyzz.id,
    procedure_instrumentapproachprocedure_pt_aldhsd.title,
    procedure_instrumentapproachprocedure_pt_aldhsd.nilreason[1],
    procedure_instrumentapproachprocedure_pt_aldhsd.href,
    navaids_points_designatedpoint_pt_mjfwpo.title,
    navaids_points_designatedpoint_pt_mjfwpo.nilreason[1],
    navaids_points_designatedpoint_pt_mjfwpo.href,
    navaids_points_navaid_pt_bwqaje.title,
    navaids_points_navaid_pt_bwqaje.nilreason[1],
    navaids_points_navaid_pt_bwqaje.href,
    airport_heliport_touchdownliftoff_pt_avwwdj.title,
    airport_heliport_touchdownliftoff_pt_avwwdj.nilreason[1],
    airport_heliport_touchdownliftoff_pt_avwwdj.href,
    airport_heliport_runwaycentrelinepoint_pt_qxgcal.title,
    airport_heliport_runwaycentrelinepoint_pt_qxgcal.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_qxgcal.href,
    airport_heliport_airportheliport_pt_pixaos.title,
    airport_heliport_airportheliport_pt_pixaos.nilreason[1],
    airport_heliport_airportheliport_pt_pixaos.href,
    geometry_point_view_rdiwtq.geom,
    geometry_point_view_rdiwtq.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_ynfqxw.id,
    public_fasdatablock_view_qzagpm.id
order by finalleg.identifier, finalleg_ts.sequence_number, finalleg_ts.correction_number DESC;
create index on procedure.finalleg_view (id);
-- FireFightingServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view']
drop materialized view if exists service.firefightingservice_view cascade;
create materialized view service.firefightingservice_view as
select distinct on (firefightingservice.identifier,firefightingservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.firefightingservice.id,
    service.firefightingservice_ts.id as ts_id,
    service.firefightingservice_tsp.id as tsp_id,
    service.firefightingservice.identifier,
    service.firefightingservice_ts.interpretation,
    service.firefightingservice_ts.sequence_number,
    service.firefightingservice_ts.correction_number,
    service.firefightingservice_ts.valid_time_begin,
    service.firefightingservice_ts.valid_time_end,
    service.firefightingservice_ts.feature_lifetime_begin,
    service.firefightingservice_ts.feature_lifetime_end,
    coalesce(cast(service.firefightingservice_ts.flightoperations_value as varchar), '(' || service.firefightingservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.firefightingservice_ts.rank_value as varchar), '(' || service.firefightingservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.firefightingservice_ts.complianticao_value as varchar), '(' || service.firefightingservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.firefightingservice_ts.name_value as varchar), '(' || service.firefightingservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.firefightingservice_ts.category_value as varchar), '(' || service.firefightingservice_ts.category_nilreason || ')') as category,
    coalesce(cast(service.firefightingservice_ts.standard_value as varchar), '(' || service.firefightingservice_ts.standard_nilreason || ')') as standard,
    geometry_elevatedpoint_view_pkkwsn.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_pkkwsn.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_pkkwsn.geom) AS location_latitude,
    geometry_elevatedpoint_view_pkkwsn.elevation AS location_elevation,
    geometry_elevatedpoint_view_pkkwsn.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_pkkwsn.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_pkkwsn.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_pkkwsn.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_pcltbi.title as varchar), '(' || organisation_unit_pt_pcltbi.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_pcltbi.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_pmqdey.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_hmycfx.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_hmycfx.title AS varchar), '(' || service_radiocommunicationchannel_pt_hmycfx.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_hmycfx.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_ydknaf.id) AS availability,
    jsonb_agg(notes_note_view_fwfmdr.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_fawfeu.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_fawfeu.title AS varchar), '(' || airport_heliport_airportheliport_pt_fawfeu.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_fawfeu.href)) AS airportheliport
from service.firefightingservice 
inner join master_join mj2 on service.firefightingservice.id = mj2.source_id
inner join service.firefightingservice_tsp on mj2.target_id = service.firefightingservice_tsp.id
inner join service.firefightingservice_ts on service.firefightingservice_tsp.firefightingservicetimeslice_id = service.firefightingservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_pkkwsn on service.firefightingservice_ts.location_id = geometry_elevatedpoint_view_pkkwsn.id
left join organisation.unit_pt organisation_unit_pt_pcltbi on service.firefightingservice_ts.serviceprovider_id = organisation_unit_pt_pcltbi.id
left join master_join master_join_vkmggz on service.firefightingservice_ts.id = master_join_vkmggz.source_id
left join service.callsigndetail_view service_callsigndetail_view_pmqdey on master_join_vkmggz.target_id = service_callsigndetail_view_pmqdey.id
left join master_join master_join_pcrhyx on service.firefightingservice_ts.id = master_join_pcrhyx.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_hmycfx on master_join_pcrhyx.target_id = service_radiocommunicationchannel_pt_hmycfx.id
left join master_join master_join_sqqwik on service.firefightingservice_ts.id = master_join_sqqwik.source_id
left join shared.contactinformation_view shared_contactinformation_view_ctqamt on master_join_sqqwik.target_id = shared_contactinformation_view_ctqamt.id
left join master_join master_join_vwltzp on service.firefightingservice_ts.id = master_join_vwltzp.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_ydknaf on master_join_vwltzp.target_id = service_serviceoperationalstatus_view_ydknaf.id
left join master_join master_join_wlorzh on service.firefightingservice_ts.id = master_join_wlorzh.source_id
left join notes.note_view notes_note_view_fwfmdr on master_join_wlorzh.target_id = notes_note_view_fwfmdr.id
left join master_join master_join_ecorao on service.firefightingservice_ts.id = master_join_ecorao.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_fawfeu on master_join_ecorao.target_id = airport_heliport_airportheliport_pt_fawfeu.id
where service.firefightingservice.feature_status = 'APPROVED'
  and service.firefightingservice_ts.feature_status = 'APPROVED'
group by
    service.firefightingservice.id,
    service.firefightingservice_ts.id,
    service.firefightingservice_tsp.id,
    service.firefightingservice.identifier,
    service.firefightingservice_ts.interpretation,
    service.firefightingservice_ts.sequence_number,
    service.firefightingservice_ts.correction_number,
    service.firefightingservice_ts.valid_time_begin,
    service.firefightingservice_ts.valid_time_end,
    service.firefightingservice_ts.feature_lifetime_begin,
    service.firefightingservice_ts.feature_lifetime_end,
    service.firefightingservice_ts.flightoperations_value,
    service.firefightingservice_ts.flightoperations_nilreason,
    service.firefightingservice_ts.rank_value,
    service.firefightingservice_ts.rank_nilreason,
    service.firefightingservice_ts.complianticao_value,
    service.firefightingservice_ts.complianticao_nilreason,
    service.firefightingservice_ts.name_value,
    service.firefightingservice_ts.name_nilreason,
    service.firefightingservice_ts.category_value,
    service.firefightingservice_ts.category_nilreason,
    service.firefightingservice_ts.standard_value,
    service.firefightingservice_ts.standard_nilreason,
    geometry_elevatedpoint_view_pkkwsn.geom,
    geometry_elevatedpoint_view_pkkwsn.elevation,
    geometry_elevatedpoint_view_pkkwsn.geoidUndulation,
    geometry_elevatedpoint_view_pkkwsn.verticalDatum,
    geometry_elevatedpoint_view_pkkwsn.verticalAccuracy,
    geometry_elevatedpoint_view_pkkwsn.horizontalAccuracy,
    organisation_unit_pt_pcltbi.title,
    organisation_unit_pt_pcltbi.nilreason[1],
    organisation_unit_pt_pcltbi.href
order by firefightingservice.identifier, firefightingservice_ts.sequence_number, firefightingservice_ts.correction_number DESC;
create index on service.firefightingservice_view (id);
-- FlightRestrictionTimeSliceType
-- ['routes.flightrestrictionroute_view', 'notes.note_view', 'routes.flightconditioncombination_view']
drop materialized view if exists routes.flightrestriction_view cascade;
create materialized view routes.flightrestriction_view as
select distinct on (flightrestriction.identifier,flightrestriction_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.flightrestriction.id,
    routes.flightrestriction_ts.id as ts_id,
    routes.flightrestriction_tsp.id as tsp_id,
    routes.flightrestriction.identifier,
    routes.flightrestriction_ts.interpretation,
    routes.flightrestriction_ts.sequence_number,
    routes.flightrestriction_ts.correction_number,
    routes.flightrestriction_ts.valid_time_begin,
    routes.flightrestriction_ts.valid_time_end,
    routes.flightrestriction_ts.feature_lifetime_begin,
    routes.flightrestriction_ts.feature_lifetime_end,
    coalesce(cast(routes.flightrestriction_ts.designator_value as varchar), '(' || routes.flightrestriction_ts.designator_nilreason || ')') as designator,
    coalesce(cast(routes.flightrestriction_ts.type_value as varchar), '(' || routes.flightrestriction_ts.type_nilreason || ')') as type,
    coalesce(cast(routes.flightrestriction_ts.instruction_value as varchar), '(' || routes.flightrestriction_ts.instruction_nilreason || ')') as instruction,
    routes_flightconditioncombination_view_gdbsek.id AS flight,
    jsonb_agg(routes_flightrestrictionroute_view_crpfoo.id) AS regulatedroute,
    jsonb_agg(notes_note_view_uknnnx.*) AS annotation
from routes.flightrestriction 
inner join master_join mj2 on routes.flightrestriction.id = mj2.source_id
inner join routes.flightrestriction_tsp on mj2.target_id = routes.flightrestriction_tsp.id
inner join routes.flightrestriction_ts on routes.flightrestriction_tsp.flightrestrictiontimeslice_id = routes.flightrestriction_ts.id
left join routes.flightconditioncombination_view routes_flightconditioncombination_view_gdbsek on routes.flightrestriction_ts.flight_id = routes_flightconditioncombination_view_gdbsek.id
left join master_join master_join_gaggaf on routes.flightrestriction_ts.id = master_join_gaggaf.source_id
left join routes.flightrestrictionroute_view routes_flightrestrictionroute_view_crpfoo on master_join_gaggaf.target_id = routes_flightrestrictionroute_view_crpfoo.id
left join master_join master_join_yqkrob on routes.flightrestriction_ts.id = master_join_yqkrob.source_id
left join notes.note_view notes_note_view_uknnnx on master_join_yqkrob.target_id = notes_note_view_uknnnx.id
where routes.flightrestriction.feature_status = 'APPROVED'
  and routes.flightrestriction_ts.feature_status = 'APPROVED'
group by
    routes.flightrestriction.id,
    routes.flightrestriction_ts.id,
    routes.flightrestriction_tsp.id,
    routes.flightrestriction.identifier,
    routes.flightrestriction_ts.interpretation,
    routes.flightrestriction_ts.sequence_number,
    routes.flightrestriction_ts.correction_number,
    routes.flightrestriction_ts.valid_time_begin,
    routes.flightrestriction_ts.valid_time_end,
    routes.flightrestriction_ts.feature_lifetime_begin,
    routes.flightrestriction_ts.feature_lifetime_end,
    routes.flightrestriction_ts.designator_value,
    routes.flightrestriction_ts.designator_nilreason,
    routes.flightrestriction_ts.type_value,
    routes.flightrestriction_ts.type_nilreason,
    routes.flightrestriction_ts.instruction_value,
    routes.flightrestriction_ts.instruction_nilreason,
    routes_flightconditioncombination_view_gdbsek.id
order by flightrestriction.identifier, flightrestriction_ts.sequence_number, flightrestriction_ts.correction_number DESC;
create index on routes.flightrestriction_view (id);
-- FloatingDockSiteTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.floatingdocksite_view cascade;
create materialized view airport_heliport.floatingdocksite_view as
select distinct on (floatingdocksite.identifier,floatingdocksite_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.floatingdocksite.id,
    airport_heliport.floatingdocksite_ts.id as ts_id,
    airport_heliport.floatingdocksite_tsp.id as tsp_id,
    airport_heliport.floatingdocksite.identifier,
    airport_heliport.floatingdocksite_ts.interpretation,
    airport_heliport.floatingdocksite_ts.sequence_number,
    airport_heliport.floatingdocksite_ts.correction_number,
    airport_heliport.floatingdocksite_ts.valid_time_begin,
    airport_heliport.floatingdocksite_ts.valid_time_end,
    airport_heliport.floatingdocksite_ts.feature_lifetime_begin,
    airport_heliport.floatingdocksite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_zzhidr.geom AS extent_geom,
    geometry_elevatedsurface_view_zzhidr.elevation AS extent_elevation,
    geometry_elevatedsurface_view_zzhidr.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_zzhidr.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_zzhidr.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_zzhidr.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(notes_note_view_hjwmdv.*) AS annotation
from airport_heliport.floatingdocksite 
inner join master_join mj2 on airport_heliport.floatingdocksite.id = mj2.source_id
inner join airport_heliport.floatingdocksite_tsp on mj2.target_id = airport_heliport.floatingdocksite_tsp.id
inner join airport_heliport.floatingdocksite_ts on airport_heliport.floatingdocksite_tsp.floatingdocksitetimeslice_id = airport_heliport.floatingdocksite_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_zzhidr on airport_heliport.floatingdocksite_ts.extent_id = geometry_elevatedsurface_view_zzhidr.id
left join master_join master_join_ebzpwp on airport_heliport.floatingdocksite_ts.id = master_join_ebzpwp.source_id
left join notes.note_view notes_note_view_hjwmdv on master_join_ebzpwp.target_id = notes_note_view_hjwmdv.id
where airport_heliport.floatingdocksite.feature_status = 'APPROVED'
  and airport_heliport.floatingdocksite_ts.feature_status = 'APPROVED'
group by
    airport_heliport.floatingdocksite.id,
    airport_heliport.floatingdocksite_ts.id,
    airport_heliport.floatingdocksite_tsp.id,
    airport_heliport.floatingdocksite.identifier,
    airport_heliport.floatingdocksite_ts.interpretation,
    airport_heliport.floatingdocksite_ts.sequence_number,
    airport_heliport.floatingdocksite_ts.correction_number,
    airport_heliport.floatingdocksite_ts.valid_time_begin,
    airport_heliport.floatingdocksite_ts.valid_time_end,
    airport_heliport.floatingdocksite_ts.feature_lifetime_begin,
    airport_heliport.floatingdocksite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_zzhidr.geom,
    geometry_elevatedsurface_view_zzhidr.elevation,
    geometry_elevatedsurface_view_zzhidr.geoidUndulation,
    geometry_elevatedsurface_view_zzhidr.verticalDatum,
    geometry_elevatedsurface_view_zzhidr.verticalAccuracy,
    geometry_elevatedsurface_view_zzhidr.horizontalAccuracy
order by floatingdocksite.identifier, floatingdocksite_ts.sequence_number, floatingdocksite_ts.correction_number DESC;
create index on airport_heliport.floatingdocksite_view (id);
-- GeoBorderTimeSliceType
-- ['geometry.curve_view', 'notes.note_view']
drop materialized view if exists airspace.geoborder_view cascade;
create materialized view airspace.geoborder_view as
select distinct on (geoborder.identifier,geoborder_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.geoborder.id,
    airspace.geoborder_ts.id as ts_id,
    airspace.geoborder_tsp.id as tsp_id,
    airspace.geoborder.identifier,
    airspace.geoborder_ts.interpretation,
    airspace.geoborder_ts.sequence_number,
    airspace.geoborder_ts.correction_number,
    airspace.geoborder_ts.valid_time_begin,
    airspace.geoborder_ts.valid_time_end,
    airspace.geoborder_ts.feature_lifetime_begin,
    airspace.geoborder_ts.feature_lifetime_end,
    coalesce(cast(airspace.geoborder_ts.name_value as varchar), '(' || airspace.geoborder_ts.name_nilreason || ')') as name,
    coalesce(cast(airspace.geoborder_ts.type_value as varchar), '(' || airspace.geoborder_ts.type_nilreason || ')') as type,
    geometry_curve_view_ritlef.geom AS border_geom,
    geometry_curve_view_ritlef.horizontalAccuracy as border_horizontalaccuracy,
    jsonb_agg(notes_note_view_bssyih.*) AS annotation
from airspace.geoborder 
inner join master_join mj2 on airspace.geoborder.id = mj2.source_id
inner join airspace.geoborder_tsp on mj2.target_id = airspace.geoborder_tsp.id
inner join airspace.geoborder_ts on airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
left join geometry.curve_view geometry_curve_view_ritlef on airspace.geoborder_ts.border_id = geometry_curve_view_ritlef.id
left join master_join master_join_jqrvkq on airspace.geoborder_ts.id = master_join_jqrvkq.source_id
left join notes.note_view notes_note_view_bssyih on master_join_jqrvkq.target_id = notes_note_view_bssyih.id
where airspace.geoborder.feature_status = 'APPROVED'
  and airspace.geoborder_ts.feature_status = 'APPROVED'
group by
    airspace.geoborder.id,
    airspace.geoborder_ts.id,
    airspace.geoborder_tsp.id,
    airspace.geoborder.identifier,
    airspace.geoborder_ts.interpretation,
    airspace.geoborder_ts.sequence_number,
    airspace.geoborder_ts.correction_number,
    airspace.geoborder_ts.valid_time_begin,
    airspace.geoborder_ts.valid_time_end,
    airspace.geoborder_ts.feature_lifetime_begin,
    airspace.geoborder_ts.feature_lifetime_end,
    airspace.geoborder_ts.name_value,
    airspace.geoborder_ts.name_nilreason,
    airspace.geoborder_ts.type_value,
    airspace.geoborder_ts.type_nilreason,
    geometry_curve_view_ritlef.geom,
    geometry_curve_view_ritlef.horizontalAccuracy
order by geoborder.identifier, geoborder_ts.sequence_number, geoborder_ts.correction_number DESC;
create index on airspace.geoborder_view (id);
-- GlidepathTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.glidepath_view cascade;
create materialized view navaids_points.glidepath_view as
select distinct on (glidepath.identifier,glidepath_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.glidepath.id,
    navaids_points.glidepath_ts.id as ts_id,
    navaids_points.glidepath_tsp.id as tsp_id,
    navaids_points.glidepath.identifier,
    navaids_points.glidepath_ts.interpretation,
    navaids_points.glidepath_ts.sequence_number,
    navaids_points.glidepath_ts.correction_number,
    navaids_points.glidepath_ts.valid_time_begin,
    navaids_points.glidepath_ts.valid_time_end,
    navaids_points.glidepath_ts.feature_lifetime_begin,
    navaids_points.glidepath_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.glidepath_ts.designator_value as varchar), '(' || navaids_points.glidepath_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.glidepath_ts.name_value as varchar), '(' || navaids_points.glidepath_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.glidepath_ts.emissionclass_value as varchar), '(' || navaids_points.glidepath_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.glidepath_ts.mobile_value as varchar), '(' || navaids_points.glidepath_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.glidepath_ts.magneticvariation_value as varchar), '(' || navaids_points.glidepath_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.glidepath_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.glidepath_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.glidepath_ts.datemagneticvariation_value as varchar), '(' || navaids_points.glidepath_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.glidepath_ts.flightchecked_value as varchar), '(' || navaids_points.glidepath_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.glidepath_ts.slope_value as varchar), '(' || navaids_points.glidepath_ts.slope_nilreason || ')') as slope,
    coalesce(cast(navaids_points.glidepath_ts.angleaccuracy_value as varchar), '(' || navaids_points.glidepath_ts.angleaccuracy_nilreason || ')') as angleaccuracy,
    coalesce(cast(navaids_points.glidepath_ts.frequency_value as varchar) || ' ' || navaids_points.glidepath_ts.frequency_uom, '(' || navaids_points.glidepath_ts.frequency_nilreason || ')') as frequency,
    coalesce(cast(navaids_points.glidepath_ts.rdh_value as varchar) || ' ' || navaids_points.glidepath_ts.rdh_uom, '(' || navaids_points.glidepath_ts.rdh_nilreason || ')') as rdh,
    coalesce(cast(navaids_points.glidepath_ts.rdhaccuracy_value as varchar) || ' ' || navaids_points.glidepath_ts.rdhaccuracy_uom, '(' || navaids_points.glidepath_ts.rdhaccuracy_nilreason || ')') as rdhaccuracy,
    geometry_elevatedpoint_view_cjdyvl.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_cjdyvl.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_cjdyvl.geom) AS location_latitude,
    geometry_elevatedpoint_view_cjdyvl.elevation AS location_elevation,
    geometry_elevatedpoint_view_cjdyvl.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_cjdyvl.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_cjdyvl.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_cjdyvl.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_oyyxnm.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_yhthjl.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_zgdomy.id) AS availability,
    jsonb_agg(notes_note_view_zseqio.*) AS annotation
from navaids_points.glidepath 
inner join master_join mj2 on navaids_points.glidepath.id = mj2.source_id
inner join navaids_points.glidepath_tsp on mj2.target_id = navaids_points.glidepath_tsp.id
inner join navaids_points.glidepath_ts on navaids_points.glidepath_tsp.glidepathtimeslice_id = navaids_points.glidepath_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_cjdyvl on navaids_points.glidepath_ts.location_id = geometry_elevatedpoint_view_cjdyvl.id
left join master_join master_join_lgavhh on navaids_points.glidepath_ts.id = master_join_lgavhh.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_oyyxnm on master_join_lgavhh.target_id = navaids_points_authorityfornavaidequipment_view_oyyxnm.id
left join master_join master_join_jdbnik on navaids_points.glidepath_ts.id = master_join_jdbnik.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_yhthjl on master_join_jdbnik.target_id = navaids_points_navaidequipmentmonitoring_view_yhthjl.id
left join master_join master_join_szuztg on navaids_points.glidepath_ts.id = master_join_szuztg.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_zgdomy on master_join_szuztg.target_id = navaids_points_navaidoperationalstatus_view_zgdomy.id
left join master_join master_join_xulwtt on navaids_points.glidepath_ts.id = master_join_xulwtt.source_id
left join notes.note_view notes_note_view_zseqio on master_join_xulwtt.target_id = notes_note_view_zseqio.id
where navaids_points.glidepath.feature_status = 'APPROVED'
  and navaids_points.glidepath_ts.feature_status = 'APPROVED'
group by
    navaids_points.glidepath.id,
    navaids_points.glidepath_ts.id,
    navaids_points.glidepath_tsp.id,
    navaids_points.glidepath.identifier,
    navaids_points.glidepath_ts.interpretation,
    navaids_points.glidepath_ts.sequence_number,
    navaids_points.glidepath_ts.correction_number,
    navaids_points.glidepath_ts.valid_time_begin,
    navaids_points.glidepath_ts.valid_time_end,
    navaids_points.glidepath_ts.feature_lifetime_begin,
    navaids_points.glidepath_ts.feature_lifetime_end,
    navaids_points.glidepath_ts.designator_value,
    navaids_points.glidepath_ts.designator_nilreason,
    navaids_points.glidepath_ts.name_value,
    navaids_points.glidepath_ts.name_nilreason,
    navaids_points.glidepath_ts.emissionclass_value,
    navaids_points.glidepath_ts.emissionclass_nilreason,
    navaids_points.glidepath_ts.mobile_value,
    navaids_points.glidepath_ts.mobile_nilreason,
    navaids_points.glidepath_ts.magneticvariation_value,
    navaids_points.glidepath_ts.magneticvariation_nilreason,
    navaids_points.glidepath_ts.magneticvariationaccuracy_value,
    navaids_points.glidepath_ts.magneticvariationaccuracy_nilreason,
    navaids_points.glidepath_ts.datemagneticvariation_value,
    navaids_points.glidepath_ts.datemagneticvariation_nilreason,
    navaids_points.glidepath_ts.flightchecked_value,
    navaids_points.glidepath_ts.flightchecked_nilreason,
    navaids_points.glidepath_ts.slope_value,
    navaids_points.glidepath_ts.slope_nilreason,
    navaids_points.glidepath_ts.angleaccuracy_value,
    navaids_points.glidepath_ts.angleaccuracy_nilreason,
    navaids_points.glidepath_ts.frequency_value,
    navaids_points.glidepath_ts.frequency_uom,
    navaids_points.glidepath_ts.frequency_nilreason,
    navaids_points.glidepath_ts.rdh_value,
    navaids_points.glidepath_ts.rdh_uom,
    navaids_points.glidepath_ts.rdh_nilreason,
    navaids_points.glidepath_ts.rdhaccuracy_value,
    navaids_points.glidepath_ts.rdhaccuracy_uom,
    navaids_points.glidepath_ts.rdhaccuracy_nilreason,
    geometry_elevatedpoint_view_cjdyvl.geom,
    geometry_elevatedpoint_view_cjdyvl.elevation,
    geometry_elevatedpoint_view_cjdyvl.geoidUndulation,
    geometry_elevatedpoint_view_cjdyvl.verticalDatum,
    geometry_elevatedpoint_view_cjdyvl.verticalAccuracy,
    geometry_elevatedpoint_view_cjdyvl.horizontalAccuracy
order by glidepath.identifier, glidepath_ts.sequence_number, glidepath_ts.correction_number DESC;
create index on navaids_points.glidepath_view (id);
-- GroundTrafficControlServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view']
drop materialized view if exists service.groundtrafficcontrolservice_view cascade;
create materialized view service.groundtrafficcontrolservice_view as
select distinct on (groundtrafficcontrolservice.identifier,groundtrafficcontrolservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.groundtrafficcontrolservice.id,
    service.groundtrafficcontrolservice_ts.id as ts_id,
    service.groundtrafficcontrolservice_tsp.id as tsp_id,
    service.groundtrafficcontrolservice.identifier,
    service.groundtrafficcontrolservice_ts.interpretation,
    service.groundtrafficcontrolservice_ts.sequence_number,
    service.groundtrafficcontrolservice_ts.correction_number,
    service.groundtrafficcontrolservice_ts.valid_time_begin,
    service.groundtrafficcontrolservice_ts.valid_time_end,
    service.groundtrafficcontrolservice_ts.feature_lifetime_begin,
    service.groundtrafficcontrolservice_ts.feature_lifetime_end,
    coalesce(cast(service.groundtrafficcontrolservice_ts.flightoperations_value as varchar), '(' || service.groundtrafficcontrolservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.groundtrafficcontrolservice_ts.rank_value as varchar), '(' || service.groundtrafficcontrolservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.groundtrafficcontrolservice_ts.complianticao_value as varchar), '(' || service.groundtrafficcontrolservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.groundtrafficcontrolservice_ts.name_value as varchar), '(' || service.groundtrafficcontrolservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.groundtrafficcontrolservice_ts.radarassisted_value as varchar), '(' || service.groundtrafficcontrolservice_ts.radarassisted_nilreason || ')') as radarassisted,
    coalesce(cast(service.groundtrafficcontrolservice_ts.datalinkenabled_value as varchar), '(' || service.groundtrafficcontrolservice_ts.datalinkenabled_nilreason || ')') as datalinkenabled,
    coalesce(cast(service.groundtrafficcontrolservice_ts.datalinkchannel_value as varchar), '(' || service.groundtrafficcontrolservice_ts.datalinkchannel_nilreason || ')') as datalinkchannel,
    coalesce(cast(service.groundtrafficcontrolservice_ts.type_value as varchar), '(' || service.groundtrafficcontrolservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_fhxfrh.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_fhxfrh.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_fhxfrh.geom) AS location_latitude,
    geometry_elevatedpoint_view_fhxfrh.elevation AS location_elevation,
    geometry_elevatedpoint_view_fhxfrh.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_fhxfrh.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_fhxfrh.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_fhxfrh.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_svmgmo.title as varchar), '(' || organisation_unit_pt_svmgmo.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_svmgmo.href AS serviceprovider_href,
    coalesce(cast(airport_heliport_airportheliport_pt_hbjsqx.title as varchar), '(' || airport_heliport_airportheliport_pt_hbjsqx.nilreason[1] || ')') AS clientairport,
    airport_heliport_airportheliport_pt_hbjsqx.href AS clientairport_href,
    jsonb_agg(service_callsigndetail_view_dkhlpk.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_yiwxjh.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_yiwxjh.title AS varchar), '(' || service_radiocommunicationchannel_pt_yiwxjh.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_yiwxjh.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_cyxdgm.id) AS availability,
    jsonb_agg(notes_note_view_fphtze.*) AS annotation
from service.groundtrafficcontrolservice 
inner join master_join mj2 on service.groundtrafficcontrolservice.id = mj2.source_id
inner join service.groundtrafficcontrolservice_tsp on mj2.target_id = service.groundtrafficcontrolservice_tsp.id
inner join service.groundtrafficcontrolservice_ts on service.groundtrafficcontrolservice_tsp.groundtrafficcontrolservicetimeslice_id = service.groundtrafficcontrolservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_fhxfrh on service.groundtrafficcontrolservice_ts.location_id = geometry_elevatedpoint_view_fhxfrh.id
left join organisation.unit_pt organisation_unit_pt_svmgmo on service.groundtrafficcontrolservice_ts.serviceprovider_id = organisation_unit_pt_svmgmo.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hbjsqx on service.groundtrafficcontrolservice_ts.clientairport_id = airport_heliport_airportheliport_pt_hbjsqx.id
left join master_join master_join_tsoqwj on service.groundtrafficcontrolservice_ts.id = master_join_tsoqwj.source_id
left join service.callsigndetail_view service_callsigndetail_view_dkhlpk on master_join_tsoqwj.target_id = service_callsigndetail_view_dkhlpk.id
left join master_join master_join_rtbdxb on service.groundtrafficcontrolservice_ts.id = master_join_rtbdxb.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_yiwxjh on master_join_rtbdxb.target_id = service_radiocommunicationchannel_pt_yiwxjh.id
left join master_join master_join_mtvydh on service.groundtrafficcontrolservice_ts.id = master_join_mtvydh.source_id
left join shared.contactinformation_view shared_contactinformation_view_sgvign on master_join_mtvydh.target_id = shared_contactinformation_view_sgvign.id
left join master_join master_join_trdkbc on service.groundtrafficcontrolservice_ts.id = master_join_trdkbc.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_cyxdgm on master_join_trdkbc.target_id = service_serviceoperationalstatus_view_cyxdgm.id
left join master_join master_join_jksuyg on service.groundtrafficcontrolservice_ts.id = master_join_jksuyg.source_id
left join notes.note_view notes_note_view_fphtze on master_join_jksuyg.target_id = notes_note_view_fphtze.id
where service.groundtrafficcontrolservice.feature_status = 'APPROVED'
  and service.groundtrafficcontrolservice_ts.feature_status = 'APPROVED'
group by
    service.groundtrafficcontrolservice.id,
    service.groundtrafficcontrolservice_ts.id,
    service.groundtrafficcontrolservice_tsp.id,
    service.groundtrafficcontrolservice.identifier,
    service.groundtrafficcontrolservice_ts.interpretation,
    service.groundtrafficcontrolservice_ts.sequence_number,
    service.groundtrafficcontrolservice_ts.correction_number,
    service.groundtrafficcontrolservice_ts.valid_time_begin,
    service.groundtrafficcontrolservice_ts.valid_time_end,
    service.groundtrafficcontrolservice_ts.feature_lifetime_begin,
    service.groundtrafficcontrolservice_ts.feature_lifetime_end,
    service.groundtrafficcontrolservice_ts.flightoperations_value,
    service.groundtrafficcontrolservice_ts.flightoperations_nilreason,
    service.groundtrafficcontrolservice_ts.rank_value,
    service.groundtrafficcontrolservice_ts.rank_nilreason,
    service.groundtrafficcontrolservice_ts.complianticao_value,
    service.groundtrafficcontrolservice_ts.complianticao_nilreason,
    service.groundtrafficcontrolservice_ts.name_value,
    service.groundtrafficcontrolservice_ts.name_nilreason,
    service.groundtrafficcontrolservice_ts.radarassisted_value,
    service.groundtrafficcontrolservice_ts.radarassisted_nilreason,
    service.groundtrafficcontrolservice_ts.datalinkenabled_value,
    service.groundtrafficcontrolservice_ts.datalinkenabled_nilreason,
    service.groundtrafficcontrolservice_ts.datalinkchannel_value,
    service.groundtrafficcontrolservice_ts.datalinkchannel_nilreason,
    service.groundtrafficcontrolservice_ts.type_value,
    service.groundtrafficcontrolservice_ts.type_nilreason,
    geometry_elevatedpoint_view_fhxfrh.geom,
    geometry_elevatedpoint_view_fhxfrh.elevation,
    geometry_elevatedpoint_view_fhxfrh.geoidUndulation,
    geometry_elevatedpoint_view_fhxfrh.verticalDatum,
    geometry_elevatedpoint_view_fhxfrh.verticalAccuracy,
    geometry_elevatedpoint_view_fhxfrh.horizontalAccuracy,
    organisation_unit_pt_svmgmo.title,
    organisation_unit_pt_svmgmo.nilreason[1],
    organisation_unit_pt_svmgmo.href,
    airport_heliport_airportheliport_pt_hbjsqx.title,
    airport_heliport_airportheliport_pt_hbjsqx.nilreason[1],
    airport_heliport_airportheliport_pt_hbjsqx.href
order by groundtrafficcontrolservice.identifier, groundtrafficcontrolservice_ts.sequence_number, groundtrafficcontrolservice_ts.correction_number DESC;
create index on service.groundtrafficcontrolservice_view (id);
-- GuidanceLineLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.guidancelinelightsystem_view cascade;
create materialized view airport_heliport.guidancelinelightsystem_view as
select distinct on (guidancelinelightsystem.identifier,guidancelinelightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidancelinelightsystem.id,
    airport_heliport.guidancelinelightsystem_ts.id as ts_id,
    airport_heliport.guidancelinelightsystem_tsp.id as tsp_id,
    airport_heliport.guidancelinelightsystem.identifier,
    airport_heliport.guidancelinelightsystem_ts.interpretation,
    airport_heliport.guidancelinelightsystem_ts.sequence_number,
    airport_heliport.guidancelinelightsystem_ts.correction_number,
    airport_heliport.guidancelinelightsystem_ts.valid_time_begin,
    airport_heliport.guidancelinelightsystem_ts.valid_time_end,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_begin,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.colour_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport_guidanceline_pt_dkrwfw.title as varchar), '(' || airport_heliport_guidanceline_pt_dkrwfw.nilreason[1] || ')') AS lightedguidanceline,
    airport_heliport_guidanceline_pt_dkrwfw.href AS lightedguidanceline_href,
    jsonb_agg(shared_lightelement_view_bpbsrg.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_rngjmu.id) AS availability,
    jsonb_agg(notes_note_view_kcceuc.*) AS annotation
from airport_heliport.guidancelinelightsystem 
inner join master_join mj2 on airport_heliport.guidancelinelightsystem.id = mj2.source_id
inner join airport_heliport.guidancelinelightsystem_tsp on mj2.target_id = airport_heliport.guidancelinelightsystem_tsp.id
inner join airport_heliport.guidancelinelightsystem_ts on airport_heliport.guidancelinelightsystem_tsp.guidancelinelightsystemtimeslice_id = airport_heliport.guidancelinelightsystem_ts.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_dkrwfw on airport_heliport.guidancelinelightsystem_ts.lightedguidanceline_id = airport_heliport_guidanceline_pt_dkrwfw.id
left join master_join master_join_ueqrte on airport_heliport.guidancelinelightsystem_ts.id = master_join_ueqrte.source_id
left join shared.lightelement_view shared_lightelement_view_bpbsrg on master_join_ueqrte.target_id = shared_lightelement_view_bpbsrg.id
left join master_join master_join_oujivr on airport_heliport.guidancelinelightsystem_ts.id = master_join_oujivr.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_rngjmu on master_join_oujivr.target_id = airport_heliport_groundlightingavailability_view_rngjmu.id
left join master_join master_join_xrwrnf on airport_heliport.guidancelinelightsystem_ts.id = master_join_xrwrnf.source_id
left join notes.note_view notes_note_view_kcceuc on master_join_xrwrnf.target_id = notes_note_view_kcceuc.id
where airport_heliport.guidancelinelightsystem.feature_status = 'APPROVED'
  and airport_heliport.guidancelinelightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidancelinelightsystem.id,
    airport_heliport.guidancelinelightsystem_ts.id,
    airport_heliport.guidancelinelightsystem_tsp.id,
    airport_heliport.guidancelinelightsystem.identifier,
    airport_heliport.guidancelinelightsystem_ts.interpretation,
    airport_heliport.guidancelinelightsystem_ts.sequence_number,
    airport_heliport.guidancelinelightsystem_ts.correction_number,
    airport_heliport.guidancelinelightsystem_ts.valid_time_begin,
    airport_heliport.guidancelinelightsystem_ts.valid_time_end,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_begin,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_end,
    airport_heliport.guidancelinelightsystem_ts.emergencylighting_value,
    airport_heliport.guidancelinelightsystem_ts.emergencylighting_nilreason,
    airport_heliport.guidancelinelightsystem_ts.intensitylevel_value,
    airport_heliport.guidancelinelightsystem_ts.intensitylevel_nilreason,
    airport_heliport.guidancelinelightsystem_ts.colour_value,
    airport_heliport.guidancelinelightsystem_ts.colour_nilreason,
    airport_heliport_guidanceline_pt_dkrwfw.title,
    airport_heliport_guidanceline_pt_dkrwfw.nilreason[1],
    airport_heliport_guidanceline_pt_dkrwfw.href
order by guidancelinelightsystem.identifier, guidancelinelightsystem_ts.sequence_number, guidancelinelightsystem_ts.correction_number DESC;
create index on airport_heliport.guidancelinelightsystem_view (id);
-- GuidanceLineMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.guidancelinemarking_view cascade;
create materialized view airport_heliport.guidancelinemarking_view as
select distinct on (guidancelinemarking.identifier,guidancelinemarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidancelinemarking.id,
    airport_heliport.guidancelinemarking_ts.id as ts_id,
    airport_heliport.guidancelinemarking_tsp.id as tsp_id,
    airport_heliport.guidancelinemarking.identifier,
    airport_heliport.guidancelinemarking_ts.interpretation,
    airport_heliport.guidancelinemarking_ts.sequence_number,
    airport_heliport.guidancelinemarking_ts.correction_number,
    airport_heliport.guidancelinemarking_ts.valid_time_begin,
    airport_heliport.guidancelinemarking_ts.valid_time_end,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_begin,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.guidancelinemarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.guidancelinemarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.guidancelinemarking_ts.condition_value as varchar), '(' || airport_heliport.guidancelinemarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_guidanceline_pt_hbdocg.title as varchar), '(' || airport_heliport_guidanceline_pt_hbdocg.nilreason[1] || ')') AS markedguidanceline,
    airport_heliport_guidanceline_pt_hbdocg.href AS markedguidanceline_href,
    jsonb_agg(airport_heliport_markingelement_view_gxmihz.id) AS element,
    jsonb_agg(notes_note_view_szyjig.*) AS annotation
from airport_heliport.guidancelinemarking 
inner join master_join mj2 on airport_heliport.guidancelinemarking.id = mj2.source_id
inner join airport_heliport.guidancelinemarking_tsp on mj2.target_id = airport_heliport.guidancelinemarking_tsp.id
inner join airport_heliport.guidancelinemarking_ts on airport_heliport.guidancelinemarking_tsp.guidancelinemarkingtimeslice_id = airport_heliport.guidancelinemarking_ts.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_hbdocg on airport_heliport.guidancelinemarking_ts.markedguidanceline_id = airport_heliport_guidanceline_pt_hbdocg.id
left join master_join master_join_bagibb on airport_heliport.guidancelinemarking_ts.id = master_join_bagibb.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_gxmihz on master_join_bagibb.target_id = airport_heliport_markingelement_view_gxmihz.id
left join master_join master_join_qrzevu on airport_heliport.guidancelinemarking_ts.id = master_join_qrzevu.source_id
left join notes.note_view notes_note_view_szyjig on master_join_qrzevu.target_id = notes_note_view_szyjig.id
where airport_heliport.guidancelinemarking.feature_status = 'APPROVED'
  and airport_heliport.guidancelinemarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidancelinemarking.id,
    airport_heliport.guidancelinemarking_ts.id,
    airport_heliport.guidancelinemarking_tsp.id,
    airport_heliport.guidancelinemarking.identifier,
    airport_heliport.guidancelinemarking_ts.interpretation,
    airport_heliport.guidancelinemarking_ts.sequence_number,
    airport_heliport.guidancelinemarking_ts.correction_number,
    airport_heliport.guidancelinemarking_ts.valid_time_begin,
    airport_heliport.guidancelinemarking_ts.valid_time_end,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_begin,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_end,
    airport_heliport.guidancelinemarking_ts.markingicaostandard_value,
    airport_heliport.guidancelinemarking_ts.markingicaostandard_nilreason,
    airport_heliport.guidancelinemarking_ts.condition_value,
    airport_heliport.guidancelinemarking_ts.condition_nilreason,
    airport_heliport_guidanceline_pt_hbdocg.title,
    airport_heliport_guidanceline_pt_hbdocg.nilreason[1],
    airport_heliport_guidanceline_pt_hbdocg.href
order by guidancelinemarking.identifier, guidancelinemarking_ts.sequence_number, guidancelinemarking_ts.correction_number DESC;
create index on airport_heliport.guidancelinemarking_view (id);
-- GuidanceLineTimeSliceType
-- ['geometry.elevatedcurve_view', 'notes.note_view']
drop materialized view if exists airport_heliport.guidanceline_view cascade;
create materialized view airport_heliport.guidanceline_view as
select distinct on (guidanceline.identifier,guidanceline_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidanceline.id,
    airport_heliport.guidanceline_ts.id as ts_id,
    airport_heliport.guidanceline_tsp.id as tsp_id,
    airport_heliport.guidanceline.identifier,
    airport_heliport.guidanceline_ts.interpretation,
    airport_heliport.guidanceline_ts.sequence_number,
    airport_heliport.guidanceline_ts.correction_number,
    airport_heliport.guidanceline_ts.valid_time_begin,
    airport_heliport.guidanceline_ts.valid_time_end,
    airport_heliport.guidanceline_ts.feature_lifetime_begin,
    airport_heliport.guidanceline_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.guidanceline_ts.designator_value as varchar), '(' || airport_heliport.guidanceline_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.guidanceline_ts.type_value as varchar), '(' || airport_heliport.guidanceline_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.guidanceline_ts.usagedirection_value as varchar), '(' || airport_heliport.guidanceline_ts.usagedirection_nilreason || ')') as usagedirection,
    coalesce(cast(airport_heliport.guidanceline_ts.maxspeed_value as varchar) || ' ' || airport_heliport.guidanceline_ts.maxspeed_uom, '(' || airport_heliport.guidanceline_ts.maxspeed_nilreason || ')') as maxspeed,
    geometry_elevatedcurve_view_wqqqkn.geom AS extent_geom,
    geometry_elevatedcurve_view_wqqqkn.elevation AS extent_elevation,
    geometry_elevatedcurve_view_wqqqkn.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedcurve_view_wqqqkn.verticalDatum AS extent_verticaldatum,
    geometry_elevatedcurve_view_wqqqkn.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedcurve_view_wqqqkn.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_touchdownliftoff_pt_ntgvef.id,
    'title', coalesce(cast(airport_heliport_touchdownliftoff_pt_ntgvef.title AS varchar), '(' || airport_heliport_touchdownliftoff_pt_ntgvef.nilreason[1] || ')'),
    'href', airport_heliport_touchdownliftoff_pt_ntgvef.href)) AS connectedtouchdownliftoff,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaycentrelinepoint_pt_djnmmo.id,
    'title', coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_djnmmo.title AS varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_djnmmo.nilreason[1] || ')'),
    'href', airport_heliport_runwaycentrelinepoint_pt_djnmmo.href)) AS connectedrunwaycentrelinepoint,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_apron_pt_idxcud.id,
    'title', coalesce(cast(airport_heliport_apron_pt_idxcud.title AS varchar), '(' || airport_heliport_apron_pt_idxcud.nilreason[1] || ')'),
    'href', airport_heliport_apron_pt_idxcud.href)) AS connectedapron,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_aircraftstand_pt_rhsbxc.id,
    'title', coalesce(cast(airport_heliport_aircraftstand_pt_rhsbxc.title AS varchar), '(' || airport_heliport_aircraftstand_pt_rhsbxc.nilreason[1] || ')'),
    'href', airport_heliport_aircraftstand_pt_rhsbxc.href)) AS connectedstand,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_taxiway_pt_dbyfsa.id,
    'title', coalesce(cast(airport_heliport_taxiway_pt_dbyfsa.title AS varchar), '(' || airport_heliport_taxiway_pt_dbyfsa.nilreason[1] || ')'),
    'href', airport_heliport_taxiway_pt_dbyfsa.href)) AS connectedtaxiway,
    jsonb_agg(notes_note_view_utjeqi.*) AS annotation
from airport_heliport.guidanceline 
inner join master_join mj2 on airport_heliport.guidanceline.id = mj2.source_id
inner join airport_heliport.guidanceline_tsp on mj2.target_id = airport_heliport.guidanceline_tsp.id
inner join airport_heliport.guidanceline_ts on airport_heliport.guidanceline_tsp.guidancelinetimeslice_id = airport_heliport.guidanceline_ts.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_wqqqkn on airport_heliport.guidanceline_ts.extent_id = geometry_elevatedcurve_view_wqqqkn.id
left join master_join master_join_jazlab on airport_heliport.guidanceline_ts.id = master_join_jazlab.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ntgvef on master_join_jazlab.target_id = airport_heliport_touchdownliftoff_pt_ntgvef.id
left join master_join master_join_iielar on airport_heliport.guidanceline_ts.id = master_join_iielar.source_id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_djnmmo on master_join_iielar.target_id = airport_heliport_runwaycentrelinepoint_pt_djnmmo.id
left join master_join master_join_qffijr on airport_heliport.guidanceline_ts.id = master_join_qffijr.source_id
left join airport_heliport.apron_pt airport_heliport_apron_pt_idxcud on master_join_qffijr.target_id = airport_heliport_apron_pt_idxcud.id
left join master_join master_join_dxczhq on airport_heliport.guidanceline_ts.id = master_join_dxczhq.source_id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_rhsbxc on master_join_dxczhq.target_id = airport_heliport_aircraftstand_pt_rhsbxc.id
left join master_join master_join_tfowsl on airport_heliport.guidanceline_ts.id = master_join_tfowsl.source_id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_dbyfsa on master_join_tfowsl.target_id = airport_heliport_taxiway_pt_dbyfsa.id
left join master_join master_join_tqbvcb on airport_heliport.guidanceline_ts.id = master_join_tqbvcb.source_id
left join notes.note_view notes_note_view_utjeqi on master_join_tqbvcb.target_id = notes_note_view_utjeqi.id
where airport_heliport.guidanceline.feature_status = 'APPROVED'
  and airport_heliport.guidanceline_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidanceline.id,
    airport_heliport.guidanceline_ts.id,
    airport_heliport.guidanceline_tsp.id,
    airport_heliport.guidanceline.identifier,
    airport_heliport.guidanceline_ts.interpretation,
    airport_heliport.guidanceline_ts.sequence_number,
    airport_heliport.guidanceline_ts.correction_number,
    airport_heliport.guidanceline_ts.valid_time_begin,
    airport_heliport.guidanceline_ts.valid_time_end,
    airport_heliport.guidanceline_ts.feature_lifetime_begin,
    airport_heliport.guidanceline_ts.feature_lifetime_end,
    airport_heliport.guidanceline_ts.designator_value,
    airport_heliport.guidanceline_ts.designator_nilreason,
    airport_heliport.guidanceline_ts.type_value,
    airport_heliport.guidanceline_ts.type_nilreason,
    airport_heliport.guidanceline_ts.usagedirection_value,
    airport_heliport.guidanceline_ts.usagedirection_nilreason,
    airport_heliport.guidanceline_ts.maxspeed_value,
    airport_heliport.guidanceline_ts.maxspeed_uom,
    airport_heliport.guidanceline_ts.maxspeed_nilreason,
    geometry_elevatedcurve_view_wqqqkn.geom,
    geometry_elevatedcurve_view_wqqqkn.elevation,
    geometry_elevatedcurve_view_wqqqkn.geoidUndulation,
    geometry_elevatedcurve_view_wqqqkn.verticalDatum,
    geometry_elevatedcurve_view_wqqqkn.verticalAccuracy,
    geometry_elevatedcurve_view_wqqqkn.horizontalAccuracy
order by guidanceline.identifier, guidanceline_ts.sequence_number, guidanceline_ts.correction_number DESC;
create index on airport_heliport.guidanceline_view (id);
-- HoldingAssessmentTimeSliceType
-- ['notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists shared.holdingassessment_view cascade;
create materialized view shared.holdingassessment_view as
select distinct on (holdingassessment.identifier,holdingassessment_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.holdingassessment.id,
    shared.holdingassessment_ts.id as ts_id,
    shared.holdingassessment_tsp.id as tsp_id,
    shared.holdingassessment.identifier,
    shared.holdingassessment_ts.interpretation,
    shared.holdingassessment_ts.sequence_number,
    shared.holdingassessment_ts.correction_number,
    shared.holdingassessment_ts.valid_time_begin,
    shared.holdingassessment_ts.valid_time_end,
    shared.holdingassessment_ts.feature_lifetime_begin,
    shared.holdingassessment_ts.feature_lifetime_end,
    coalesce(cast(shared.holdingassessment_ts.upperlimitreference_value as varchar), '(' || shared.holdingassessment_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.holdingassessment_ts.lowerlimitreference_value as varchar), '(' || shared.holdingassessment_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.holdingassessment_ts.patterntemplate_value as varchar), '(' || shared.holdingassessment_ts.patterntemplate_nilreason || ')') as patterntemplate,
    coalesce(cast(shared.holdingassessment_ts.turbulentair_value as varchar), '(' || shared.holdingassessment_ts.turbulentair_nilreason || ')') as turbulentair,
    coalesce(cast(shared.holdingassessment_ts.upperlimit_value as varchar) || ' ' || shared.holdingassessment_ts.upperlimit_uom, '(' || shared.holdingassessment_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.holdingassessment_ts.lowerlimit_value as varchar) || ' ' || shared.holdingassessment_ts.lowerlimit_uom, '(' || shared.holdingassessment_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(shared.holdingassessment_ts.speedlimit_value as varchar) || ' ' || shared.holdingassessment_ts.speedlimit_uom, '(' || shared.holdingassessment_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(shared.holdingassessment_ts.leglengthtoward_value as varchar) || ' ' || shared.holdingassessment_ts.leglengthtoward_uom, '(' || shared.holdingassessment_ts.leglengthtoward_nilreason || ')') as leglengthtoward,
    coalesce(cast(shared.holdingassessment_ts.leglengthaway_value as varchar) || ' ' || shared.holdingassessment_ts.leglengthaway_uom, '(' || shared.holdingassessment_ts.leglengthaway_nilreason || ')') as leglengthaway,
    coalesce(cast(holding_unplannedholding_pt_fxsmbx.title as varchar), '(' || holding_unplannedholding_pt_fxsmbx.nilreason[1] || ')') AS unplannedholding,
    holding_unplannedholding_pt_fxsmbx.href AS unplannedholding_href,
    coalesce(cast(holding_holdingpattern_pt_yclknh.title as varchar), '(' || holding_holdingpattern_pt_yclknh.nilreason[1] || ')') AS assessedholdingpattern,
    holding_holdingpattern_pt_yclknh.href AS assessedholdingpattern_href,
    jsonb_agg(shared_obstacleassessmentarea_view_ctedwp.id) AS obstacleassessment,
    jsonb_agg(notes_note_view_gjwhlz.*) AS annotation
from shared.holdingassessment 
inner join master_join mj2 on shared.holdingassessment.id = mj2.source_id
inner join shared.holdingassessment_tsp on mj2.target_id = shared.holdingassessment_tsp.id
inner join shared.holdingassessment_ts on shared.holdingassessment_tsp.holdingassessmenttimeslice_id = shared.holdingassessment_ts.id
left join holding.unplannedholding_pt holding_unplannedholding_pt_fxsmbx on shared.holdingassessment_ts.unplannedholding_id = holding_unplannedholding_pt_fxsmbx.id
left join holding.holdingpattern_pt holding_holdingpattern_pt_yclknh on shared.holdingassessment_ts.assessedholdingpattern_id = holding_holdingpattern_pt_yclknh.id
left join master_join master_join_qbdxyh on shared.holdingassessment_ts.id = master_join_qbdxyh.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_ctedwp on master_join_qbdxyh.target_id = shared_obstacleassessmentarea_view_ctedwp.id
left join master_join master_join_iryajs on shared.holdingassessment_ts.id = master_join_iryajs.source_id
left join notes.note_view notes_note_view_gjwhlz on master_join_iryajs.target_id = notes_note_view_gjwhlz.id
where shared.holdingassessment.feature_status = 'APPROVED'
  and shared.holdingassessment_ts.feature_status = 'APPROVED'
group by
    shared.holdingassessment.id,
    shared.holdingassessment_ts.id,
    shared.holdingassessment_tsp.id,
    shared.holdingassessment.identifier,
    shared.holdingassessment_ts.interpretation,
    shared.holdingassessment_ts.sequence_number,
    shared.holdingassessment_ts.correction_number,
    shared.holdingassessment_ts.valid_time_begin,
    shared.holdingassessment_ts.valid_time_end,
    shared.holdingassessment_ts.feature_lifetime_begin,
    shared.holdingassessment_ts.feature_lifetime_end,
    shared.holdingassessment_ts.upperlimitreference_value,
    shared.holdingassessment_ts.upperlimitreference_nilreason,
    shared.holdingassessment_ts.lowerlimitreference_value,
    shared.holdingassessment_ts.lowerlimitreference_nilreason,
    shared.holdingassessment_ts.patterntemplate_value,
    shared.holdingassessment_ts.patterntemplate_nilreason,
    shared.holdingassessment_ts.turbulentair_value,
    shared.holdingassessment_ts.turbulentair_nilreason,
    shared.holdingassessment_ts.upperlimit_value,
    shared.holdingassessment_ts.upperlimit_uom,
    shared.holdingassessment_ts.upperlimit_nilreason,
    shared.holdingassessment_ts.lowerlimit_value,
    shared.holdingassessment_ts.lowerlimit_uom,
    shared.holdingassessment_ts.lowerlimit_nilreason,
    shared.holdingassessment_ts.speedlimit_value,
    shared.holdingassessment_ts.speedlimit_uom,
    shared.holdingassessment_ts.speedlimit_nilreason,
    shared.holdingassessment_ts.leglengthtoward_value,
    shared.holdingassessment_ts.leglengthtoward_uom,
    shared.holdingassessment_ts.leglengthtoward_nilreason,
    shared.holdingassessment_ts.leglengthaway_value,
    shared.holdingassessment_ts.leglengthaway_uom,
    shared.holdingassessment_ts.leglengthaway_nilreason,
    holding_unplannedholding_pt_fxsmbx.title,
    holding_unplannedholding_pt_fxsmbx.nilreason[1],
    holding_unplannedholding_pt_fxsmbx.href,
    holding_holdingpattern_pt_yclknh.title,
    holding_holdingpattern_pt_yclknh.nilreason[1],
    holding_holdingpattern_pt_yclknh.href
order by holdingassessment.identifier, holdingassessment_ts.sequence_number, holdingassessment_ts.correction_number DESC;
create index on shared.holdingassessment_view (id);
-- HoldingPatternTimeSliceType
-- ['holding.holdingpatterndistance_view', 'geometry.curve_view', 'notes.note_view', 'holding.holdingpatternduration_view']
drop materialized view if exists holding.holdingpattern_view cascade;
create materialized view holding.holdingpattern_view as
select distinct on (holdingpattern.identifier,holdingpattern_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    holding.holdingpattern.id,
    holding.holdingpattern_ts.id as ts_id,
    holding.holdingpattern_tsp.id as tsp_id,
    holding.holdingpattern.identifier,
    holding.holdingpattern_ts.interpretation,
    holding.holdingpattern_ts.sequence_number,
    holding.holdingpattern_ts.correction_number,
    holding.holdingpattern_ts.valid_time_begin,
    holding.holdingpattern_ts.valid_time_end,
    holding.holdingpattern_ts.feature_lifetime_begin,
    holding.holdingpattern_ts.feature_lifetime_end,
    coalesce(cast(holding.holdingpattern_ts.type_value as varchar), '(' || holding.holdingpattern_ts.type_nilreason || ')') as type,
    coalesce(cast(holding.holdingpattern_ts.outboundcourse_value as varchar), '(' || holding.holdingpattern_ts.outboundcourse_nilreason || ')') as outboundcourse,
    coalesce(cast(holding.holdingpattern_ts.outboundcoursetype_value as varchar), '(' || holding.holdingpattern_ts.outboundcoursetype_nilreason || ')') as outboundcoursetype,
    coalesce(cast(holding.holdingpattern_ts.inboundcourse_value as varchar), '(' || holding.holdingpattern_ts.inboundcourse_nilreason || ')') as inboundcourse,
    coalesce(cast(holding.holdingpattern_ts.turndirection_value as varchar), '(' || holding.holdingpattern_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(holding.holdingpattern_ts.upperlimitreference_value as varchar), '(' || holding.holdingpattern_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(holding.holdingpattern_ts.lowerlimitreference_value as varchar), '(' || holding.holdingpattern_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(holding.holdingpattern_ts.instruction_value as varchar), '(' || holding.holdingpattern_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(holding.holdingpattern_ts.nonstandardholding_value as varchar), '(' || holding.holdingpattern_ts.nonstandardholding_nilreason || ')') as nonstandardholding,
    coalesce(cast(holding.holdingpattern_ts.upperlimit_value as varchar) || ' ' || holding.holdingpattern_ts.upperlimit_uom, '(' || holding.holdingpattern_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(holding.holdingpattern_ts.lowerlimit_value as varchar) || ' ' || holding.holdingpattern_ts.lowerlimit_uom, '(' || holding.holdingpattern_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(holding.holdingpattern_ts.speedlimit_value as varchar) || ' ' || holding.holdingpattern_ts.speedlimit_uom, '(' || holding.holdingpattern_ts.speedlimit_nilreason || ')') as speedlimit,
    holding_holdingpatternduration_view_ysiqao.id AS outboundlegspanendtime,
    holding_holdingpatterndistance_view_ajpztw.id AS outboundlegspanenddistance,
    geometry_curve_view_drbnmh.geom AS extent_geom,
    geometry_curve_view_drbnmh.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(notes_note_view_cpyduy.*) AS annotation
from holding.holdingpattern 
inner join master_join mj2 on holding.holdingpattern.id = mj2.source_id
inner join holding.holdingpattern_tsp on mj2.target_id = holding.holdingpattern_tsp.id
inner join holding.holdingpattern_ts on holding.holdingpattern_tsp.holdingpatterntimeslice_id = holding.holdingpattern_ts.id
left join holding.holdingpatternduration_view holding_holdingpatternduration_view_ysiqao on holding.holdingpattern_ts.outboundlegspan_endtime_id = holding_holdingpatternduration_view_ysiqao.id
left join holding.holdingpatterndistance_view holding_holdingpatterndistance_view_ajpztw on holding.holdingpattern_ts.outboundlegspan_enddistance_id = holding_holdingpatterndistance_view_ajpztw.id
left join geometry.curve_view geometry_curve_view_drbnmh on holding.holdingpattern_ts.extent_id = geometry_curve_view_drbnmh.id
left join master_join master_join_vyriwg on holding.holdingpattern_ts.id = master_join_vyriwg.source_id
left join notes.note_view notes_note_view_cpyduy on master_join_vyriwg.target_id = notes_note_view_cpyduy.id
where holding.holdingpattern.feature_status = 'APPROVED'
  and holding.holdingpattern_ts.feature_status = 'APPROVED'
group by
    holding.holdingpattern.id,
    holding.holdingpattern_ts.id,
    holding.holdingpattern_tsp.id,
    holding.holdingpattern.identifier,
    holding.holdingpattern_ts.interpretation,
    holding.holdingpattern_ts.sequence_number,
    holding.holdingpattern_ts.correction_number,
    holding.holdingpattern_ts.valid_time_begin,
    holding.holdingpattern_ts.valid_time_end,
    holding.holdingpattern_ts.feature_lifetime_begin,
    holding.holdingpattern_ts.feature_lifetime_end,
    holding.holdingpattern_ts.type_value,
    holding.holdingpattern_ts.type_nilreason,
    holding.holdingpattern_ts.outboundcourse_value,
    holding.holdingpattern_ts.outboundcourse_nilreason,
    holding.holdingpattern_ts.outboundcoursetype_value,
    holding.holdingpattern_ts.outboundcoursetype_nilreason,
    holding.holdingpattern_ts.inboundcourse_value,
    holding.holdingpattern_ts.inboundcourse_nilreason,
    holding.holdingpattern_ts.turndirection_value,
    holding.holdingpattern_ts.turndirection_nilreason,
    holding.holdingpattern_ts.upperlimitreference_value,
    holding.holdingpattern_ts.upperlimitreference_nilreason,
    holding.holdingpattern_ts.lowerlimitreference_value,
    holding.holdingpattern_ts.lowerlimitreference_nilreason,
    holding.holdingpattern_ts.instruction_value,
    holding.holdingpattern_ts.instruction_nilreason,
    holding.holdingpattern_ts.nonstandardholding_value,
    holding.holdingpattern_ts.nonstandardholding_nilreason,
    holding.holdingpattern_ts.upperlimit_value,
    holding.holdingpattern_ts.upperlimit_uom,
    holding.holdingpattern_ts.upperlimit_nilreason,
    holding.holdingpattern_ts.lowerlimit_value,
    holding.holdingpattern_ts.lowerlimit_uom,
    holding.holdingpattern_ts.lowerlimit_nilreason,
    holding.holdingpattern_ts.speedlimit_value,
    holding.holdingpattern_ts.speedlimit_uom,
    holding.holdingpattern_ts.speedlimit_nilreason,
    holding_holdingpatternduration_view_ysiqao.id,
    holding_holdingpatterndistance_view_ajpztw.id,
    geometry_curve_view_drbnmh.geom,
    geometry_curve_view_drbnmh.horizontalAccuracy
order by holdingpattern.identifier, holdingpattern_ts.sequence_number, holdingpattern_ts.correction_number DESC;
create index on holding.holdingpattern_view (id);
-- InformationServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view', 'routes.routeportion_view']
drop materialized view if exists service.informationservice_view cascade;
create materialized view service.informationservice_view as
select distinct on (informationservice.identifier,informationservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.informationservice.id,
    service.informationservice_ts.id as ts_id,
    service.informationservice_tsp.id as tsp_id,
    service.informationservice.identifier,
    service.informationservice_ts.interpretation,
    service.informationservice_ts.sequence_number,
    service.informationservice_ts.correction_number,
    service.informationservice_ts.valid_time_begin,
    service.informationservice_ts.valid_time_end,
    service.informationservice_ts.feature_lifetime_begin,
    service.informationservice_ts.feature_lifetime_end,
    coalesce(cast(service.informationservice_ts.flightoperations_value as varchar), '(' || service.informationservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.informationservice_ts.rank_value as varchar), '(' || service.informationservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.informationservice_ts.complianticao_value as varchar), '(' || service.informationservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.informationservice_ts.name_value as varchar), '(' || service.informationservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.informationservice_ts.type_value as varchar), '(' || service.informationservice_ts.type_nilreason || ')') as type,
    coalesce(cast(service.informationservice_ts.voice_value as varchar), '(' || service.informationservice_ts.voice_nilreason || ')') as voice,
    coalesce(cast(service.informationservice_ts.datalink_value as varchar), '(' || service.informationservice_ts.datalink_nilreason || ')') as datalink,
    coalesce(cast(service.informationservice_ts.recorded_value as varchar), '(' || service.informationservice_ts.recorded_nilreason || ')') as recorded,
    geometry_elevatedpoint_view_shajrw.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_shajrw.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_shajrw.geom) AS location_latitude,
    geometry_elevatedpoint_view_shajrw.elevation AS location_elevation,
    geometry_elevatedpoint_view_shajrw.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_shajrw.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_shajrw.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_shajrw.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_usgsxt.title as varchar), '(' || organisation_unit_pt_usgsxt.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_usgsxt.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_osenlw.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_ejuzqq.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_ejuzqq.title AS varchar), '(' || service_radiocommunicationchannel_pt_ejuzqq.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_ejuzqq.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_fpgyds.id) AS availability,
    jsonb_agg(notes_note_view_cxumoq.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', navaids_points_vor_pt_stzeyc.id,
    'title', coalesce(cast(navaids_points_vor_pt_stzeyc.title AS varchar), '(' || navaids_points_vor_pt_stzeyc.nilreason[1] || ')'),
    'href', navaids_points_vor_pt_stzeyc.href)) AS navaidbroadcast,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_ciayuu.id,
    'title', coalesce(cast(airspace_airspace_pt_ciayuu.title AS varchar), '(' || airspace_airspace_pt_ciayuu.nilreason[1] || ')'),
    'href', airspace_airspace_pt_ciayuu.href)) AS clientairspace,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_vdkmnh.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_vdkmnh.title AS varchar), '(' || airport_heliport_airportheliport_pt_vdkmnh.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_vdkmnh.href)) AS clientairport,
    jsonb_agg(routes_routeportion_view_ugejty.id) AS clientroute,
    jsonb_agg(DISTINCT jsonb_build_object('id', holding_holdingpattern_pt_qauspm.id,
    'title', coalesce(cast(holding_holdingpattern_pt_qauspm.title AS varchar), '(' || holding_holdingpattern_pt_qauspm.nilreason[1] || ')'),
    'href', holding_holdingpattern_pt_qauspm.href)) AS clientholding,
    jsonb_agg(DISTINCT jsonb_build_object('id', aerial_refuelling_aerialrefuelling_pt_ewwzsx.id,
    'title', coalesce(cast(aerial_refuelling_aerialrefuelling_pt_ewwzsx.title AS varchar), '(' || aerial_refuelling_aerialrefuelling_pt_ewwzsx.nilreason[1] || ')'),
    'href', aerial_refuelling_aerialrefuelling_pt_ewwzsx.href)) AS clientaerialrefuelling
from service.informationservice 
inner join master_join mj2 on service.informationservice.id = mj2.source_id
inner join service.informationservice_tsp on mj2.target_id = service.informationservice_tsp.id
inner join service.informationservice_ts on service.informationservice_tsp.informationservicetimeslice_id = service.informationservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_shajrw on service.informationservice_ts.location_id = geometry_elevatedpoint_view_shajrw.id
left join organisation.unit_pt organisation_unit_pt_usgsxt on service.informationservice_ts.serviceprovider_id = organisation_unit_pt_usgsxt.id
left join master_join master_join_yctpza on service.informationservice_ts.id = master_join_yctpza.source_id
left join service.callsigndetail_view service_callsigndetail_view_osenlw on master_join_yctpza.target_id = service_callsigndetail_view_osenlw.id
left join master_join master_join_ibbxtd on service.informationservice_ts.id = master_join_ibbxtd.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_ejuzqq on master_join_ibbxtd.target_id = service_radiocommunicationchannel_pt_ejuzqq.id
left join master_join master_join_czbuty on service.informationservice_ts.id = master_join_czbuty.source_id
left join shared.contactinformation_view shared_contactinformation_view_veucdf on master_join_czbuty.target_id = shared_contactinformation_view_veucdf.id
left join master_join master_join_cuxjho on service.informationservice_ts.id = master_join_cuxjho.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_fpgyds on master_join_cuxjho.target_id = service_serviceoperationalstatus_view_fpgyds.id
left join master_join master_join_gdnnrp on service.informationservice_ts.id = master_join_gdnnrp.source_id
left join notes.note_view notes_note_view_cxumoq on master_join_gdnnrp.target_id = notes_note_view_cxumoq.id
left join master_join master_join_miayzc on service.informationservice_ts.id = master_join_miayzc.source_id
left join navaids_points.vor_pt navaids_points_vor_pt_stzeyc on master_join_miayzc.target_id = navaids_points_vor_pt_stzeyc.id
left join master_join master_join_mlqsnm on service.informationservice_ts.id = master_join_mlqsnm.source_id
left join airspace.airspace_pt airspace_airspace_pt_ciayuu on master_join_mlqsnm.target_id = airspace_airspace_pt_ciayuu.id
left join master_join master_join_mmqrzu on service.informationservice_ts.id = master_join_mmqrzu.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_vdkmnh on master_join_mmqrzu.target_id = airport_heliport_airportheliport_pt_vdkmnh.id
left join master_join master_join_kekrfk on service.informationservice_ts.id = master_join_kekrfk.source_id
left join routes.routeportion_view routes_routeportion_view_ugejty on master_join_kekrfk.target_id = routes_routeportion_view_ugejty.id
left join master_join master_join_eofyie on service.informationservice_ts.id = master_join_eofyie.source_id
left join holding.holdingpattern_pt holding_holdingpattern_pt_qauspm on master_join_eofyie.target_id = holding_holdingpattern_pt_qauspm.id
left join master_join master_join_nuwcfg on service.informationservice_ts.id = master_join_nuwcfg.source_id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_ewwzsx on master_join_nuwcfg.target_id = aerial_refuelling_aerialrefuelling_pt_ewwzsx.id
where service.informationservice.feature_status = 'APPROVED'
  and service.informationservice_ts.feature_status = 'APPROVED'
group by
    service.informationservice.id,
    service.informationservice_ts.id,
    service.informationservice_tsp.id,
    service.informationservice.identifier,
    service.informationservice_ts.interpretation,
    service.informationservice_ts.sequence_number,
    service.informationservice_ts.correction_number,
    service.informationservice_ts.valid_time_begin,
    service.informationservice_ts.valid_time_end,
    service.informationservice_ts.feature_lifetime_begin,
    service.informationservice_ts.feature_lifetime_end,
    service.informationservice_ts.flightoperations_value,
    service.informationservice_ts.flightoperations_nilreason,
    service.informationservice_ts.rank_value,
    service.informationservice_ts.rank_nilreason,
    service.informationservice_ts.complianticao_value,
    service.informationservice_ts.complianticao_nilreason,
    service.informationservice_ts.name_value,
    service.informationservice_ts.name_nilreason,
    service.informationservice_ts.type_value,
    service.informationservice_ts.type_nilreason,
    service.informationservice_ts.voice_value,
    service.informationservice_ts.voice_nilreason,
    service.informationservice_ts.datalink_value,
    service.informationservice_ts.datalink_nilreason,
    service.informationservice_ts.recorded_value,
    service.informationservice_ts.recorded_nilreason,
    geometry_elevatedpoint_view_shajrw.geom,
    geometry_elevatedpoint_view_shajrw.elevation,
    geometry_elevatedpoint_view_shajrw.geoidUndulation,
    geometry_elevatedpoint_view_shajrw.verticalDatum,
    geometry_elevatedpoint_view_shajrw.verticalAccuracy,
    geometry_elevatedpoint_view_shajrw.horizontalAccuracy,
    organisation_unit_pt_usgsxt.title,
    organisation_unit_pt_usgsxt.nilreason[1],
    organisation_unit_pt_usgsxt.href
order by informationservice.identifier, informationservice_ts.sequence_number, informationservice_ts.correction_number DESC;
create index on service.informationservice_view (id);
-- InitialLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.initialleg_view cascade;
create materialized view procedure.initialleg_view as
select distinct on (initialleg.identifier,initialleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.initialleg.id,
    procedure.initialleg_ts.id as ts_id,
    procedure.initialleg_tsp.id as tsp_id,
    procedure.initialleg.identifier,
    procedure.initialleg_ts.interpretation,
    procedure.initialleg_ts.sequence_number,
    procedure.initialleg_ts.correction_number,
    procedure.initialleg_ts.valid_time_begin,
    procedure.initialleg_ts.valid_time_end,
    procedure.initialleg_ts.feature_lifetime_begin,
    procedure.initialleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.initialleg_ts.endconditiondesignator_value as varchar), '(' || procedure.initialleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.initialleg_ts.legpath_value as varchar), '(' || procedure.initialleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.initialleg_ts.legtypearinc_value as varchar), '(' || procedure.initialleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.initialleg_ts.course_value as varchar), '(' || procedure.initialleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.initialleg_ts.coursetype_value as varchar), '(' || procedure.initialleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.initialleg_ts.coursedirection_value as varchar), '(' || procedure.initialleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.initialleg_ts.turndirection_value as varchar), '(' || procedure.initialleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.initialleg_ts.speedreference_value as varchar), '(' || procedure.initialleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.initialleg_ts.speedinterpretation_value as varchar), '(' || procedure.initialleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.initialleg_ts.bankangle_value as varchar), '(' || procedure.initialleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.initialleg_ts.procedureturnrequired_value as varchar), '(' || procedure.initialleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.initialleg_ts.upperlimitreference_value as varchar), '(' || procedure.initialleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.initialleg_ts.lowerlimitreference_value as varchar), '(' || procedure.initialleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.initialleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.initialleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.initialleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.initialleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.initialleg_ts.verticalangle_value as varchar), '(' || procedure.initialleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.initialleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.initialleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.initialleg_ts.speedlimit_value as varchar) || ' ' || procedure.initialleg_ts.speedlimit_uom, '(' || procedure.initialleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.initialleg_ts.length_value as varchar) || ' ' || procedure.initialleg_ts.length_uom, '(' || procedure.initialleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.initialleg_ts.duration_value as varchar) || ' ' || procedure.initialleg_ts.duration_uom, '(' || procedure.initialleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.initialleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.initialleg_ts.upperlimitaltitude_uom, '(' || procedure.initialleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.initialleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.initialleg_ts.lowerlimitaltitude_uom, '(' || procedure.initialleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.initialleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.initialleg_ts.altitudeoverrideatc_uom, '(' || procedure.initialleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_wyzwap.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_xcxpyr.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_cxgzza.id AS arccentre,
    geometry_curve_view_dfcsdw.geom AS trajectory_geom,
    geometry_curve_view_dfcsdw.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_fyemyx.title as varchar), '(' || navaids_points_angleindication_pt_fyemyx.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_fyemyx.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_gispbj.title as varchar), '(' || navaids_points_distanceindication_pt_gispbj.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_gispbj.href AS distance_href,
    procedure_holdinguse_view_zylqit.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_avhtfe.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_avhtfe.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_avhtfe.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_ewxmlp.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_wlfnau.id) AS designsurface,
    jsonb_agg(notes_note_view_vrbdfl.*) AS annotation
from procedure.initialleg 
inner join master_join mj2 on procedure.initialleg.id = mj2.source_id
inner join procedure.initialleg_tsp on mj2.target_id = procedure.initialleg_tsp.id
inner join procedure.initialleg_ts on procedure.initialleg_tsp.initiallegtimeslice_id = procedure.initialleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_wyzwap on procedure.initialleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_wyzwap.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_xcxpyr on procedure.initialleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_xcxpyr.id
left join geometry.curve_view geometry_curve_view_dfcsdw on procedure.initialleg_ts.trajectory_id = geometry_curve_view_dfcsdw.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_cxgzza on procedure.initialleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_cxgzza.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_fyemyx on procedure.initialleg_ts.angle_id = navaids_points_angleindication_pt_fyemyx.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_gispbj on procedure.initialleg_ts.distance_id = navaids_points_distanceindication_pt_gispbj.id
left join procedure.holdinguse_view procedure_holdinguse_view_zylqit on procedure.initialleg_ts.holding_id = procedure_holdinguse_view_zylqit.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_avhtfe on procedure.initialleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_avhtfe.id
left join master_join master_join_mmnfpr on procedure.initialleg_ts.id = master_join_mmnfpr.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_ewxmlp on master_join_mmnfpr.target_id = shared_aircraftcharacteristic_view_ewxmlp.id
left join master_join master_join_gxyxjd on procedure.initialleg_ts.id = master_join_gxyxjd.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_wlfnau on master_join_gxyxjd.target_id = shared_obstacleassessmentarea_view_wlfnau.id
left join master_join master_join_xorctx on procedure.initialleg_ts.id = master_join_xorctx.source_id
left join notes.note_view notes_note_view_vrbdfl on master_join_xorctx.target_id = notes_note_view_vrbdfl.id
where procedure.initialleg.feature_status = 'APPROVED'
  and procedure.initialleg_ts.feature_status = 'APPROVED'
group by
    procedure.initialleg.id,
    procedure.initialleg_ts.id,
    procedure.initialleg_tsp.id,
    procedure.initialleg.identifier,
    procedure.initialleg_ts.interpretation,
    procedure.initialleg_ts.sequence_number,
    procedure.initialleg_ts.correction_number,
    procedure.initialleg_ts.valid_time_begin,
    procedure.initialleg_ts.valid_time_end,
    procedure.initialleg_ts.feature_lifetime_begin,
    procedure.initialleg_ts.feature_lifetime_end,
    procedure.initialleg_ts.endconditiondesignator_value,
    procedure.initialleg_ts.endconditiondesignator_nilreason,
    procedure.initialleg_ts.legpath_value,
    procedure.initialleg_ts.legpath_nilreason,
    procedure.initialleg_ts.legtypearinc_value,
    procedure.initialleg_ts.legtypearinc_nilreason,
    procedure.initialleg_ts.course_value,
    procedure.initialleg_ts.course_nilreason,
    procedure.initialleg_ts.coursetype_value,
    procedure.initialleg_ts.coursetype_nilreason,
    procedure.initialleg_ts.coursedirection_value,
    procedure.initialleg_ts.coursedirection_nilreason,
    procedure.initialleg_ts.turndirection_value,
    procedure.initialleg_ts.turndirection_nilreason,
    procedure.initialleg_ts.speedreference_value,
    procedure.initialleg_ts.speedreference_nilreason,
    procedure.initialleg_ts.speedinterpretation_value,
    procedure.initialleg_ts.speedinterpretation_nilreason,
    procedure.initialleg_ts.bankangle_value,
    procedure.initialleg_ts.bankangle_nilreason,
    procedure.initialleg_ts.procedureturnrequired_value,
    procedure.initialleg_ts.procedureturnrequired_nilreason,
    procedure.initialleg_ts.upperlimitreference_value,
    procedure.initialleg_ts.upperlimitreference_nilreason,
    procedure.initialleg_ts.lowerlimitreference_value,
    procedure.initialleg_ts.lowerlimitreference_nilreason,
    procedure.initialleg_ts.altitudeinterpretation_value,
    procedure.initialleg_ts.altitudeinterpretation_nilreason,
    procedure.initialleg_ts.altitudeoverridereference_value,
    procedure.initialleg_ts.altitudeoverridereference_nilreason,
    procedure.initialleg_ts.verticalangle_value,
    procedure.initialleg_ts.verticalangle_nilreason,
    procedure.initialleg_ts.requirednavigationperformance_value,
    procedure.initialleg_ts.requirednavigationperformance_nilreason,
    procedure.initialleg_ts.speedlimit_value,
    procedure.initialleg_ts.speedlimit_uom,
    procedure.initialleg_ts.speedlimit_nilreason,
    procedure.initialleg_ts.length_value,
    procedure.initialleg_ts.length_uom,
    procedure.initialleg_ts.length_nilreason,
    procedure.initialleg_ts.duration_value,
    procedure.initialleg_ts.duration_uom,
    procedure.initialleg_ts.duration_nilreason,
    procedure.initialleg_ts.upperlimitaltitude_value,
    procedure.initialleg_ts.upperlimitaltitude_uom,
    procedure.initialleg_ts.upperlimitaltitude_nilreason,
    procedure.initialleg_ts.lowerlimitaltitude_value,
    procedure.initialleg_ts.lowerlimitaltitude_uom,
    procedure.initialleg_ts.lowerlimitaltitude_nilreason,
    procedure.initialleg_ts.altitudeoverrideatc_value,
    procedure.initialleg_ts.altitudeoverrideatc_uom,
    procedure.initialleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_wyzwap.id,
    navaids_points_terminalsegmentpoint_view_xcxpyr.id,
    geometry_curve_view_dfcsdw.geom,
    geometry_curve_view_dfcsdw.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_cxgzza.id,
    navaids_points_angleindication_pt_fyemyx.title,
    navaids_points_angleindication_pt_fyemyx.nilreason[1],
    navaids_points_angleindication_pt_fyemyx.href,
    navaids_points_distanceindication_pt_gispbj.title,
    navaids_points_distanceindication_pt_gispbj.nilreason[1],
    navaids_points_distanceindication_pt_gispbj.href,
    procedure_holdinguse_view_zylqit.id,
    procedure_instrumentapproachprocedure_pt_avhtfe.title,
    procedure_instrumentapproachprocedure_pt_avhtfe.nilreason[1],
    procedure_instrumentapproachprocedure_pt_avhtfe.href
order by initialleg.identifier, initialleg_ts.sequence_number, initialleg_ts.correction_number DESC;
create index on procedure.initialleg_view (id);
-- InstrumentApproachProcedureTimeSliceType
-- ['procedure.proceduretransition_view', 'notes.note_view', 'procedure.procedureavailability_view', 'procedure.landingtakeoffareacollection_view', 'procedure.finalprofile_view', 'shared.aircraftcharacteristic_view', 'procedure.missedapproachgroup_view']
drop materialized view if exists procedure.instrumentapproachprocedure_view cascade;
create materialized view procedure.instrumentapproachprocedure_view as
select distinct on (instrumentapproachprocedure.identifier,instrumentapproachprocedure_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.instrumentapproachprocedure.id,
    procedure.instrumentapproachprocedure_ts.id as ts_id,
    procedure.instrumentapproachprocedure_tsp.id as tsp_id,
    procedure.instrumentapproachprocedure.identifier,
    procedure.instrumentapproachprocedure_ts.interpretation,
    procedure.instrumentapproachprocedure_ts.sequence_number,
    procedure.instrumentapproachprocedure_ts.correction_number,
    procedure.instrumentapproachprocedure_ts.valid_time_begin,
    procedure.instrumentapproachprocedure_ts.valid_time_end,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_begin,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_end,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.instruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.designcriteria_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.codingstandard_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.flightchecked_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.name_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.rnav_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.approachprefix_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.approachprefix_nilreason || ')') as approachprefix,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.approachtype_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.approachtype_nilreason || ')') as approachtype,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.multipleidentification_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.multipleidentification_nilreason || ')') as multipleidentification,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.coptertrack_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.coptertrack_nilreason || ')') as coptertrack,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.circlingidentification_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.circlingidentification_nilreason || ')') as circlingidentification,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.coursereversalinstruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.coursereversalinstruction_nilreason || ')') as coursereversalinstruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.additionalequipment_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.additionalequipment_nilreason || ')') as additionalequipment,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.channelgnss_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.channelgnss_nilreason || ')') as channelgnss,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.waasreliable_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.waasreliable_nilreason || ')') as waasreliable,
    coalesce(cast(navaids_points_navaid_pt_lyetwr.title as varchar), '(' || navaids_points_navaid_pt_lyetwr.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_lyetwr.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_dvpfwe.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_dvpfwe.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_dvpfwe.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_zxqgla.title as varchar), '(' || surveillance_radarsystem_pt_zxqgla.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_zxqgla.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_zgwtat.title as varchar), '(' || procedure_safealtitudearea_pt_zgwtat.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_zgwtat.href AS safealtitude_href,
    procedure_landingtakeoffareacollection_view_cqtxfi.id AS landing,
    procedure_finalprofile_view_pjnuwu.id AS finalprofile,
    jsonb_agg(procedure_procedureavailability_view_ycqiku.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_drasuf.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_drasuf.title AS varchar), '(' || airport_heliport_airportheliport_pt_drasuf.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_drasuf.href)) AS airportheliport,
    jsonb_agg(shared_aircraftcharacteristic_view_lhyxdq.id) AS aircraftcharacteristic,
    jsonb_agg(procedure_proceduretransition_view_aoyils.id) AS flighttransition,
    jsonb_agg(notes_note_view_ecblol.*) AS annotation,
    jsonb_agg(procedure_missedapproachgroup_view_aruzlo.id) AS missedinstruction
from procedure.instrumentapproachprocedure 
inner join master_join mj2 on procedure.instrumentapproachprocedure.id = mj2.source_id
inner join procedure.instrumentapproachprocedure_tsp on mj2.target_id = procedure.instrumentapproachprocedure_tsp.id
inner join procedure.instrumentapproachprocedure_ts on procedure.instrumentapproachprocedure_tsp.instrumentapproachproceduretimeslice_id = procedure.instrumentapproachprocedure_ts.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_lyetwr on procedure.instrumentapproachprocedure_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_lyetwr.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_dvpfwe on procedure.instrumentapproachprocedure_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_dvpfwe.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_zxqgla on procedure.instrumentapproachprocedure_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_zxqgla.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_zgwtat on procedure.instrumentapproachprocedure_ts.safealtitude_id = procedure_safealtitudearea_pt_zgwtat.id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_cqtxfi on procedure.instrumentapproachprocedure_ts.landing_id = procedure_landingtakeoffareacollection_view_cqtxfi.id
left join procedure.finalprofile_view procedure_finalprofile_view_pjnuwu on procedure.instrumentapproachprocedure_ts.finalprofile_id = procedure_finalprofile_view_pjnuwu.id
left join master_join master_join_tublwa on procedure.instrumentapproachprocedure_ts.id = master_join_tublwa.source_id
left join procedure.procedureavailability_view procedure_procedureavailability_view_ycqiku on master_join_tublwa.target_id = procedure_procedureavailability_view_ycqiku.id
left join master_join master_join_xqxxnc on procedure.instrumentapproachprocedure_ts.id = master_join_xqxxnc.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_drasuf on master_join_xqxxnc.target_id = airport_heliport_airportheliport_pt_drasuf.id
left join master_join master_join_fcaqho on procedure.instrumentapproachprocedure_ts.id = master_join_fcaqho.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_lhyxdq on master_join_fcaqho.target_id = shared_aircraftcharacteristic_view_lhyxdq.id
left join master_join master_join_udkkim on procedure.instrumentapproachprocedure_ts.id = master_join_udkkim.source_id
left join procedure.proceduretransition_view procedure_proceduretransition_view_aoyils on master_join_udkkim.target_id = procedure_proceduretransition_view_aoyils.id
left join master_join master_join_htemph on procedure.instrumentapproachprocedure_ts.id = master_join_htemph.source_id
left join notes.note_view notes_note_view_ecblol on master_join_htemph.target_id = notes_note_view_ecblol.id
left join master_join master_join_hnsccz on procedure.instrumentapproachprocedure_ts.id = master_join_hnsccz.source_id
left join procedure.missedapproachgroup_view procedure_missedapproachgroup_view_aruzlo on master_join_hnsccz.target_id = procedure_missedapproachgroup_view_aruzlo.id
where procedure.instrumentapproachprocedure.feature_status = 'APPROVED'
  and procedure.instrumentapproachprocedure_ts.feature_status = 'APPROVED'
group by
    procedure.instrumentapproachprocedure.id,
    procedure.instrumentapproachprocedure_ts.id,
    procedure.instrumentapproachprocedure_tsp.id,
    procedure.instrumentapproachprocedure.identifier,
    procedure.instrumentapproachprocedure_ts.interpretation,
    procedure.instrumentapproachprocedure_ts.sequence_number,
    procedure.instrumentapproachprocedure_ts.correction_number,
    procedure.instrumentapproachprocedure_ts.valid_time_begin,
    procedure.instrumentapproachprocedure_ts.valid_time_end,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_begin,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_end,
    procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_value,
    procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_nilreason,
    procedure.instrumentapproachprocedure_ts.instruction_value,
    procedure.instrumentapproachprocedure_ts.instruction_nilreason,
    procedure.instrumentapproachprocedure_ts.designcriteria_value,
    procedure.instrumentapproachprocedure_ts.designcriteria_nilreason,
    procedure.instrumentapproachprocedure_ts.codingstandard_value,
    procedure.instrumentapproachprocedure_ts.codingstandard_nilreason,
    procedure.instrumentapproachprocedure_ts.flightchecked_value,
    procedure.instrumentapproachprocedure_ts.flightchecked_nilreason,
    procedure.instrumentapproachprocedure_ts.name_value,
    procedure.instrumentapproachprocedure_ts.name_nilreason,
    procedure.instrumentapproachprocedure_ts.rnav_value,
    procedure.instrumentapproachprocedure_ts.rnav_nilreason,
    procedure.instrumentapproachprocedure_ts.approachprefix_value,
    procedure.instrumentapproachprocedure_ts.approachprefix_nilreason,
    procedure.instrumentapproachprocedure_ts.approachtype_value,
    procedure.instrumentapproachprocedure_ts.approachtype_nilreason,
    procedure.instrumentapproachprocedure_ts.multipleidentification_value,
    procedure.instrumentapproachprocedure_ts.multipleidentification_nilreason,
    procedure.instrumentapproachprocedure_ts.coptertrack_value,
    procedure.instrumentapproachprocedure_ts.coptertrack_nilreason,
    procedure.instrumentapproachprocedure_ts.circlingidentification_value,
    procedure.instrumentapproachprocedure_ts.circlingidentification_nilreason,
    procedure.instrumentapproachprocedure_ts.coursereversalinstruction_value,
    procedure.instrumentapproachprocedure_ts.coursereversalinstruction_nilreason,
    procedure.instrumentapproachprocedure_ts.additionalequipment_value,
    procedure.instrumentapproachprocedure_ts.additionalequipment_nilreason,
    procedure.instrumentapproachprocedure_ts.channelgnss_value,
    procedure.instrumentapproachprocedure_ts.channelgnss_nilreason,
    procedure.instrumentapproachprocedure_ts.waasreliable_value,
    procedure.instrumentapproachprocedure_ts.waasreliable_nilreason,
    navaids_points_navaid_pt_lyetwr.title,
    navaids_points_navaid_pt_lyetwr.nilreason[1],
    navaids_points_navaid_pt_lyetwr.href,
    navaids_points_specialnavigationsystem_pt_dvpfwe.title,
    navaids_points_specialnavigationsystem_pt_dvpfwe.nilreason[1],
    navaids_points_specialnavigationsystem_pt_dvpfwe.href,
    surveillance_radarsystem_pt_zxqgla.title,
    surveillance_radarsystem_pt_zxqgla.nilreason[1],
    surveillance_radarsystem_pt_zxqgla.href,
    procedure_safealtitudearea_pt_zgwtat.title,
    procedure_safealtitudearea_pt_zgwtat.nilreason[1],
    procedure_safealtitudearea_pt_zgwtat.href,
    procedure_landingtakeoffareacollection_view_cqtxfi.id,
    procedure_finalprofile_view_pjnuwu.id
order by instrumentapproachprocedure.identifier, instrumentapproachprocedure_ts.sequence_number, instrumentapproachprocedure_ts.correction_number DESC;
create index on procedure.instrumentapproachprocedure_view (id);
-- IntermediateLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.intermediateleg_view cascade;
create materialized view procedure.intermediateleg_view as
select distinct on (intermediateleg.identifier,intermediateleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.intermediateleg.id,
    procedure.intermediateleg_ts.id as ts_id,
    procedure.intermediateleg_tsp.id as tsp_id,
    procedure.intermediateleg.identifier,
    procedure.intermediateleg_ts.interpretation,
    procedure.intermediateleg_ts.sequence_number,
    procedure.intermediateleg_ts.correction_number,
    procedure.intermediateleg_ts.valid_time_begin,
    procedure.intermediateleg_ts.valid_time_end,
    procedure.intermediateleg_ts.feature_lifetime_begin,
    procedure.intermediateleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.intermediateleg_ts.endconditiondesignator_value as varchar), '(' || procedure.intermediateleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.intermediateleg_ts.legpath_value as varchar), '(' || procedure.intermediateleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.intermediateleg_ts.legtypearinc_value as varchar), '(' || procedure.intermediateleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.intermediateleg_ts.course_value as varchar), '(' || procedure.intermediateleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.intermediateleg_ts.coursetype_value as varchar), '(' || procedure.intermediateleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.intermediateleg_ts.coursedirection_value as varchar), '(' || procedure.intermediateleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.intermediateleg_ts.turndirection_value as varchar), '(' || procedure.intermediateleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.intermediateleg_ts.speedreference_value as varchar), '(' || procedure.intermediateleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.intermediateleg_ts.speedinterpretation_value as varchar), '(' || procedure.intermediateleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.intermediateleg_ts.bankangle_value as varchar), '(' || procedure.intermediateleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.intermediateleg_ts.procedureturnrequired_value as varchar), '(' || procedure.intermediateleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.intermediateleg_ts.upperlimitreference_value as varchar), '(' || procedure.intermediateleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.intermediateleg_ts.lowerlimitreference_value as varchar), '(' || procedure.intermediateleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.intermediateleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.intermediateleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.intermediateleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.intermediateleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.intermediateleg_ts.verticalangle_value as varchar), '(' || procedure.intermediateleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.intermediateleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.intermediateleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.intermediateleg_ts.speedlimit_value as varchar) || ' ' || procedure.intermediateleg_ts.speedlimit_uom, '(' || procedure.intermediateleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.intermediateleg_ts.length_value as varchar) || ' ' || procedure.intermediateleg_ts.length_uom, '(' || procedure.intermediateleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.intermediateleg_ts.duration_value as varchar) || ' ' || procedure.intermediateleg_ts.duration_uom, '(' || procedure.intermediateleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.intermediateleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.intermediateleg_ts.upperlimitaltitude_uom, '(' || procedure.intermediateleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.intermediateleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.intermediateleg_ts.lowerlimitaltitude_uom, '(' || procedure.intermediateleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.intermediateleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.intermediateleg_ts.altitudeoverrideatc_uom, '(' || procedure.intermediateleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_obdbca.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_nptddl.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_kdcwdv.id AS arccentre,
    geometry_curve_view_lqptgo.geom AS trajectory_geom,
    geometry_curve_view_lqptgo.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_fqtnji.title as varchar), '(' || navaids_points_angleindication_pt_fqtnji.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_fqtnji.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_ikslbk.title as varchar), '(' || navaids_points_distanceindication_pt_ikslbk.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_ikslbk.href AS distance_href,
    procedure_holdinguse_view_dtzkpd.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_lpyjrm.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_lpyjrm.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_lpyjrm.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_ubqpah.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_bzuljt.id) AS designsurface,
    jsonb_agg(notes_note_view_tqpuwb.*) AS annotation
from procedure.intermediateleg 
inner join master_join mj2 on procedure.intermediateleg.id = mj2.source_id
inner join procedure.intermediateleg_tsp on mj2.target_id = procedure.intermediateleg_tsp.id
inner join procedure.intermediateleg_ts on procedure.intermediateleg_tsp.intermediatelegtimeslice_id = procedure.intermediateleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_obdbca on procedure.intermediateleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_obdbca.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_nptddl on procedure.intermediateleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_nptddl.id
left join geometry.curve_view geometry_curve_view_lqptgo on procedure.intermediateleg_ts.trajectory_id = geometry_curve_view_lqptgo.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_kdcwdv on procedure.intermediateleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_kdcwdv.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_fqtnji on procedure.intermediateleg_ts.angle_id = navaids_points_angleindication_pt_fqtnji.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_ikslbk on procedure.intermediateleg_ts.distance_id = navaids_points_distanceindication_pt_ikslbk.id
left join procedure.holdinguse_view procedure_holdinguse_view_dtzkpd on procedure.intermediateleg_ts.holding_id = procedure_holdinguse_view_dtzkpd.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_lpyjrm on procedure.intermediateleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_lpyjrm.id
left join master_join master_join_amapin on procedure.intermediateleg_ts.id = master_join_amapin.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_ubqpah on master_join_amapin.target_id = shared_aircraftcharacteristic_view_ubqpah.id
left join master_join master_join_lzzngk on procedure.intermediateleg_ts.id = master_join_lzzngk.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_bzuljt on master_join_lzzngk.target_id = shared_obstacleassessmentarea_view_bzuljt.id
left join master_join master_join_zoaype on procedure.intermediateleg_ts.id = master_join_zoaype.source_id
left join notes.note_view notes_note_view_tqpuwb on master_join_zoaype.target_id = notes_note_view_tqpuwb.id
where procedure.intermediateleg.feature_status = 'APPROVED'
  and procedure.intermediateleg_ts.feature_status = 'APPROVED'
group by
    procedure.intermediateleg.id,
    procedure.intermediateleg_ts.id,
    procedure.intermediateleg_tsp.id,
    procedure.intermediateleg.identifier,
    procedure.intermediateleg_ts.interpretation,
    procedure.intermediateleg_ts.sequence_number,
    procedure.intermediateleg_ts.correction_number,
    procedure.intermediateleg_ts.valid_time_begin,
    procedure.intermediateleg_ts.valid_time_end,
    procedure.intermediateleg_ts.feature_lifetime_begin,
    procedure.intermediateleg_ts.feature_lifetime_end,
    procedure.intermediateleg_ts.endconditiondesignator_value,
    procedure.intermediateleg_ts.endconditiondesignator_nilreason,
    procedure.intermediateleg_ts.legpath_value,
    procedure.intermediateleg_ts.legpath_nilreason,
    procedure.intermediateleg_ts.legtypearinc_value,
    procedure.intermediateleg_ts.legtypearinc_nilreason,
    procedure.intermediateleg_ts.course_value,
    procedure.intermediateleg_ts.course_nilreason,
    procedure.intermediateleg_ts.coursetype_value,
    procedure.intermediateleg_ts.coursetype_nilreason,
    procedure.intermediateleg_ts.coursedirection_value,
    procedure.intermediateleg_ts.coursedirection_nilreason,
    procedure.intermediateleg_ts.turndirection_value,
    procedure.intermediateleg_ts.turndirection_nilreason,
    procedure.intermediateleg_ts.speedreference_value,
    procedure.intermediateleg_ts.speedreference_nilreason,
    procedure.intermediateleg_ts.speedinterpretation_value,
    procedure.intermediateleg_ts.speedinterpretation_nilreason,
    procedure.intermediateleg_ts.bankangle_value,
    procedure.intermediateleg_ts.bankangle_nilreason,
    procedure.intermediateleg_ts.procedureturnrequired_value,
    procedure.intermediateleg_ts.procedureturnrequired_nilreason,
    procedure.intermediateleg_ts.upperlimitreference_value,
    procedure.intermediateleg_ts.upperlimitreference_nilreason,
    procedure.intermediateleg_ts.lowerlimitreference_value,
    procedure.intermediateleg_ts.lowerlimitreference_nilreason,
    procedure.intermediateleg_ts.altitudeinterpretation_value,
    procedure.intermediateleg_ts.altitudeinterpretation_nilreason,
    procedure.intermediateleg_ts.altitudeoverridereference_value,
    procedure.intermediateleg_ts.altitudeoverridereference_nilreason,
    procedure.intermediateleg_ts.verticalangle_value,
    procedure.intermediateleg_ts.verticalangle_nilreason,
    procedure.intermediateleg_ts.requirednavigationperformance_value,
    procedure.intermediateleg_ts.requirednavigationperformance_nilreason,
    procedure.intermediateleg_ts.speedlimit_value,
    procedure.intermediateleg_ts.speedlimit_uom,
    procedure.intermediateleg_ts.speedlimit_nilreason,
    procedure.intermediateleg_ts.length_value,
    procedure.intermediateleg_ts.length_uom,
    procedure.intermediateleg_ts.length_nilreason,
    procedure.intermediateleg_ts.duration_value,
    procedure.intermediateleg_ts.duration_uom,
    procedure.intermediateleg_ts.duration_nilreason,
    procedure.intermediateleg_ts.upperlimitaltitude_value,
    procedure.intermediateleg_ts.upperlimitaltitude_uom,
    procedure.intermediateleg_ts.upperlimitaltitude_nilreason,
    procedure.intermediateleg_ts.lowerlimitaltitude_value,
    procedure.intermediateleg_ts.lowerlimitaltitude_uom,
    procedure.intermediateleg_ts.lowerlimitaltitude_nilreason,
    procedure.intermediateleg_ts.altitudeoverrideatc_value,
    procedure.intermediateleg_ts.altitudeoverrideatc_uom,
    procedure.intermediateleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_obdbca.id,
    navaids_points_terminalsegmentpoint_view_nptddl.id,
    geometry_curve_view_lqptgo.geom,
    geometry_curve_view_lqptgo.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_kdcwdv.id,
    navaids_points_angleindication_pt_fqtnji.title,
    navaids_points_angleindication_pt_fqtnji.nilreason[1],
    navaids_points_angleindication_pt_fqtnji.href,
    navaids_points_distanceindication_pt_ikslbk.title,
    navaids_points_distanceindication_pt_ikslbk.nilreason[1],
    navaids_points_distanceindication_pt_ikslbk.href,
    procedure_holdinguse_view_dtzkpd.id,
    procedure_instrumentapproachprocedure_pt_lpyjrm.title,
    procedure_instrumentapproachprocedure_pt_lpyjrm.nilreason[1],
    procedure_instrumentapproachprocedure_pt_lpyjrm.href
order by intermediateleg.identifier, intermediateleg_ts.sequence_number, intermediateleg_ts.correction_number DESC;
create index on procedure.intermediateleg_view (id);
-- LocalizerTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.localizer_view cascade;
create materialized view navaids_points.localizer_view as
select distinct on (localizer.identifier,localizer_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.localizer.id,
    navaids_points.localizer_ts.id as ts_id,
    navaids_points.localizer_tsp.id as tsp_id,
    navaids_points.localizer.identifier,
    navaids_points.localizer_ts.interpretation,
    navaids_points.localizer_ts.sequence_number,
    navaids_points.localizer_ts.correction_number,
    navaids_points.localizer_ts.valid_time_begin,
    navaids_points.localizer_ts.valid_time_end,
    navaids_points.localizer_ts.feature_lifetime_begin,
    navaids_points.localizer_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.localizer_ts.designator_value as varchar), '(' || navaids_points.localizer_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.localizer_ts.name_value as varchar), '(' || navaids_points.localizer_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.localizer_ts.emissionclass_value as varchar), '(' || navaids_points.localizer_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.localizer_ts.mobile_value as varchar), '(' || navaids_points.localizer_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.localizer_ts.magneticvariation_value as varchar), '(' || navaids_points.localizer_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.localizer_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.localizer_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.localizer_ts.datemagneticvariation_value as varchar), '(' || navaids_points.localizer_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.localizer_ts.flightchecked_value as varchar), '(' || navaids_points.localizer_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.localizer_ts.magneticbearing_value as varchar), '(' || navaids_points.localizer_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.localizer_ts.magneticbearingaccuracy_value as varchar), '(' || navaids_points.localizer_ts.magneticbearingaccuracy_nilreason || ')') as magneticbearingaccuracy,
    coalesce(cast(navaids_points.localizer_ts.truebearing_value as varchar), '(' || navaids_points.localizer_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.localizer_ts.truebearingaccuracy_value as varchar), '(' || navaids_points.localizer_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(navaids_points.localizer_ts.declination_value as varchar), '(' || navaids_points.localizer_ts.declination_nilreason || ')') as declination,
    coalesce(cast(navaids_points.localizer_ts.widthcourse_value as varchar), '(' || navaids_points.localizer_ts.widthcourse_nilreason || ')') as widthcourse,
    coalesce(cast(navaids_points.localizer_ts.widthcourseaccuracy_value as varchar), '(' || navaids_points.localizer_ts.widthcourseaccuracy_nilreason || ')') as widthcourseaccuracy,
    coalesce(cast(navaids_points.localizer_ts.backcourseusable_value as varchar), '(' || navaids_points.localizer_ts.backcourseusable_nilreason || ')') as backcourseusable,
    coalesce(cast(navaids_points.localizer_ts.frequency_value as varchar) || ' ' || navaids_points.localizer_ts.frequency_uom, '(' || navaids_points.localizer_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_krjwas.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_krjwas.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_krjwas.geom) AS location_latitude,
    geometry_elevatedpoint_view_krjwas.elevation AS location_elevation,
    geometry_elevatedpoint_view_krjwas.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_krjwas.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_krjwas.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_krjwas.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_vvtjsl.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_ahckws.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_elsleu.id) AS availability,
    jsonb_agg(notes_note_view_dyunoz.*) AS annotation
from navaids_points.localizer 
inner join master_join mj2 on navaids_points.localizer.id = mj2.source_id
inner join navaids_points.localizer_tsp on mj2.target_id = navaids_points.localizer_tsp.id
inner join navaids_points.localizer_ts on navaids_points.localizer_tsp.localizertimeslice_id = navaids_points.localizer_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_krjwas on navaids_points.localizer_ts.location_id = geometry_elevatedpoint_view_krjwas.id
left join master_join master_join_oatdfl on navaids_points.localizer_ts.id = master_join_oatdfl.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_vvtjsl on master_join_oatdfl.target_id = navaids_points_authorityfornavaidequipment_view_vvtjsl.id
left join master_join master_join_ldxfyw on navaids_points.localizer_ts.id = master_join_ldxfyw.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_ahckws on master_join_ldxfyw.target_id = navaids_points_navaidequipmentmonitoring_view_ahckws.id
left join master_join master_join_fuwade on navaids_points.localizer_ts.id = master_join_fuwade.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_elsleu on master_join_fuwade.target_id = navaids_points_navaidoperationalstatus_view_elsleu.id
left join master_join master_join_ttxvuh on navaids_points.localizer_ts.id = master_join_ttxvuh.source_id
left join notes.note_view notes_note_view_dyunoz on master_join_ttxvuh.target_id = notes_note_view_dyunoz.id
where navaids_points.localizer.feature_status = 'APPROVED'
  and navaids_points.localizer_ts.feature_status = 'APPROVED'
group by
    navaids_points.localizer.id,
    navaids_points.localizer_ts.id,
    navaids_points.localizer_tsp.id,
    navaids_points.localizer.identifier,
    navaids_points.localizer_ts.interpretation,
    navaids_points.localizer_ts.sequence_number,
    navaids_points.localizer_ts.correction_number,
    navaids_points.localizer_ts.valid_time_begin,
    navaids_points.localizer_ts.valid_time_end,
    navaids_points.localizer_ts.feature_lifetime_begin,
    navaids_points.localizer_ts.feature_lifetime_end,
    navaids_points.localizer_ts.designator_value,
    navaids_points.localizer_ts.designator_nilreason,
    navaids_points.localizer_ts.name_value,
    navaids_points.localizer_ts.name_nilreason,
    navaids_points.localizer_ts.emissionclass_value,
    navaids_points.localizer_ts.emissionclass_nilreason,
    navaids_points.localizer_ts.mobile_value,
    navaids_points.localizer_ts.mobile_nilreason,
    navaids_points.localizer_ts.magneticvariation_value,
    navaids_points.localizer_ts.magneticvariation_nilreason,
    navaids_points.localizer_ts.magneticvariationaccuracy_value,
    navaids_points.localizer_ts.magneticvariationaccuracy_nilreason,
    navaids_points.localizer_ts.datemagneticvariation_value,
    navaids_points.localizer_ts.datemagneticvariation_nilreason,
    navaids_points.localizer_ts.flightchecked_value,
    navaids_points.localizer_ts.flightchecked_nilreason,
    navaids_points.localizer_ts.magneticbearing_value,
    navaids_points.localizer_ts.magneticbearing_nilreason,
    navaids_points.localizer_ts.magneticbearingaccuracy_value,
    navaids_points.localizer_ts.magneticbearingaccuracy_nilreason,
    navaids_points.localizer_ts.truebearing_value,
    navaids_points.localizer_ts.truebearing_nilreason,
    navaids_points.localizer_ts.truebearingaccuracy_value,
    navaids_points.localizer_ts.truebearingaccuracy_nilreason,
    navaids_points.localizer_ts.declination_value,
    navaids_points.localizer_ts.declination_nilreason,
    navaids_points.localizer_ts.widthcourse_value,
    navaids_points.localizer_ts.widthcourse_nilreason,
    navaids_points.localizer_ts.widthcourseaccuracy_value,
    navaids_points.localizer_ts.widthcourseaccuracy_nilreason,
    navaids_points.localizer_ts.backcourseusable_value,
    navaids_points.localizer_ts.backcourseusable_nilreason,
    navaids_points.localizer_ts.frequency_value,
    navaids_points.localizer_ts.frequency_uom,
    navaids_points.localizer_ts.frequency_nilreason,
    geometry_elevatedpoint_view_krjwas.geom,
    geometry_elevatedpoint_view_krjwas.elevation,
    geometry_elevatedpoint_view_krjwas.geoidUndulation,
    geometry_elevatedpoint_view_krjwas.verticalDatum,
    geometry_elevatedpoint_view_krjwas.verticalAccuracy,
    geometry_elevatedpoint_view_krjwas.horizontalAccuracy
order by localizer.identifier, localizer_ts.sequence_number, localizer_ts.correction_number DESC;
create index on navaids_points.localizer_view (id);
-- MarkerBeaconTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.markerbeacon_view cascade;
create materialized view navaids_points.markerbeacon_view as
select distinct on (markerbeacon.identifier,markerbeacon_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.markerbeacon.id,
    navaids_points.markerbeacon_ts.id as ts_id,
    navaids_points.markerbeacon_tsp.id as tsp_id,
    navaids_points.markerbeacon.identifier,
    navaids_points.markerbeacon_ts.interpretation,
    navaids_points.markerbeacon_ts.sequence_number,
    navaids_points.markerbeacon_ts.correction_number,
    navaids_points.markerbeacon_ts.valid_time_begin,
    navaids_points.markerbeacon_ts.valid_time_end,
    navaids_points.markerbeacon_ts.feature_lifetime_begin,
    navaids_points.markerbeacon_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.markerbeacon_ts.designator_value as varchar), '(' || navaids_points.markerbeacon_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.markerbeacon_ts.name_value as varchar), '(' || navaids_points.markerbeacon_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.markerbeacon_ts.emissionclass_value as varchar), '(' || navaids_points.markerbeacon_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.markerbeacon_ts.mobile_value as varchar), '(' || navaids_points.markerbeacon_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.markerbeacon_ts.magneticvariation_value as varchar), '(' || navaids_points.markerbeacon_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.markerbeacon_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.markerbeacon_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.markerbeacon_ts.datemagneticvariation_value as varchar), '(' || navaids_points.markerbeacon_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.markerbeacon_ts.flightchecked_value as varchar), '(' || navaids_points.markerbeacon_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.markerbeacon_ts.class_value as varchar), '(' || navaids_points.markerbeacon_ts.class_nilreason || ')') as class,
    coalesce(cast(navaids_points.markerbeacon_ts.axisbearing_value as varchar), '(' || navaids_points.markerbeacon_ts.axisbearing_nilreason || ')') as axisbearing,
    coalesce(cast(navaids_points.markerbeacon_ts.auralmorsecode_value as varchar), '(' || navaids_points.markerbeacon_ts.auralmorsecode_nilreason || ')') as auralmorsecode,
    coalesce(cast(navaids_points.markerbeacon_ts.frequency_value as varchar) || ' ' || navaids_points.markerbeacon_ts.frequency_uom, '(' || navaids_points.markerbeacon_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_zngyvb.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_zngyvb.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_zngyvb.geom) AS location_latitude,
    geometry_elevatedpoint_view_zngyvb.elevation AS location_elevation,
    geometry_elevatedpoint_view_zngyvb.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_zngyvb.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_zngyvb.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_zngyvb.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_mzznks.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_wzbpdl.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_tpjebm.id) AS availability,
    jsonb_agg(notes_note_view_trlgaj.*) AS annotation
from navaids_points.markerbeacon 
inner join master_join mj2 on navaids_points.markerbeacon.id = mj2.source_id
inner join navaids_points.markerbeacon_tsp on mj2.target_id = navaids_points.markerbeacon_tsp.id
inner join navaids_points.markerbeacon_ts on navaids_points.markerbeacon_tsp.markerbeacontimeslice_id = navaids_points.markerbeacon_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_zngyvb on navaids_points.markerbeacon_ts.location_id = geometry_elevatedpoint_view_zngyvb.id
left join master_join master_join_rgxwjb on navaids_points.markerbeacon_ts.id = master_join_rgxwjb.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_mzznks on master_join_rgxwjb.target_id = navaids_points_authorityfornavaidequipment_view_mzznks.id
left join master_join master_join_umwutv on navaids_points.markerbeacon_ts.id = master_join_umwutv.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_wzbpdl on master_join_umwutv.target_id = navaids_points_navaidequipmentmonitoring_view_wzbpdl.id
left join master_join master_join_yyyqwf on navaids_points.markerbeacon_ts.id = master_join_yyyqwf.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_tpjebm on master_join_yyyqwf.target_id = navaids_points_navaidoperationalstatus_view_tpjebm.id
left join master_join master_join_eisqbm on navaids_points.markerbeacon_ts.id = master_join_eisqbm.source_id
left join notes.note_view notes_note_view_trlgaj on master_join_eisqbm.target_id = notes_note_view_trlgaj.id
where navaids_points.markerbeacon.feature_status = 'APPROVED'
  and navaids_points.markerbeacon_ts.feature_status = 'APPROVED'
group by
    navaids_points.markerbeacon.id,
    navaids_points.markerbeacon_ts.id,
    navaids_points.markerbeacon_tsp.id,
    navaids_points.markerbeacon.identifier,
    navaids_points.markerbeacon_ts.interpretation,
    navaids_points.markerbeacon_ts.sequence_number,
    navaids_points.markerbeacon_ts.correction_number,
    navaids_points.markerbeacon_ts.valid_time_begin,
    navaids_points.markerbeacon_ts.valid_time_end,
    navaids_points.markerbeacon_ts.feature_lifetime_begin,
    navaids_points.markerbeacon_ts.feature_lifetime_end,
    navaids_points.markerbeacon_ts.designator_value,
    navaids_points.markerbeacon_ts.designator_nilreason,
    navaids_points.markerbeacon_ts.name_value,
    navaids_points.markerbeacon_ts.name_nilreason,
    navaids_points.markerbeacon_ts.emissionclass_value,
    navaids_points.markerbeacon_ts.emissionclass_nilreason,
    navaids_points.markerbeacon_ts.mobile_value,
    navaids_points.markerbeacon_ts.mobile_nilreason,
    navaids_points.markerbeacon_ts.magneticvariation_value,
    navaids_points.markerbeacon_ts.magneticvariation_nilreason,
    navaids_points.markerbeacon_ts.magneticvariationaccuracy_value,
    navaids_points.markerbeacon_ts.magneticvariationaccuracy_nilreason,
    navaids_points.markerbeacon_ts.datemagneticvariation_value,
    navaids_points.markerbeacon_ts.datemagneticvariation_nilreason,
    navaids_points.markerbeacon_ts.flightchecked_value,
    navaids_points.markerbeacon_ts.flightchecked_nilreason,
    navaids_points.markerbeacon_ts.class_value,
    navaids_points.markerbeacon_ts.class_nilreason,
    navaids_points.markerbeacon_ts.axisbearing_value,
    navaids_points.markerbeacon_ts.axisbearing_nilreason,
    navaids_points.markerbeacon_ts.auralmorsecode_value,
    navaids_points.markerbeacon_ts.auralmorsecode_nilreason,
    navaids_points.markerbeacon_ts.frequency_value,
    navaids_points.markerbeacon_ts.frequency_uom,
    navaids_points.markerbeacon_ts.frequency_nilreason,
    geometry_elevatedpoint_view_zngyvb.geom,
    geometry_elevatedpoint_view_zngyvb.elevation,
    geometry_elevatedpoint_view_zngyvb.geoidUndulation,
    geometry_elevatedpoint_view_zngyvb.verticalDatum,
    geometry_elevatedpoint_view_zngyvb.verticalAccuracy,
    geometry_elevatedpoint_view_zngyvb.horizontalAccuracy
order by markerbeacon.identifier, markerbeacon_ts.sequence_number, markerbeacon_ts.correction_number DESC;
create index on navaids_points.markerbeacon_view (id);
-- MarkingBuoyTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.markingbuoy_view cascade;
create materialized view airport_heliport.markingbuoy_view as
select distinct on (markingbuoy.identifier,markingbuoy_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.markingbuoy.id,
    airport_heliport.markingbuoy_ts.id as ts_id,
    airport_heliport.markingbuoy_tsp.id as tsp_id,
    airport_heliport.markingbuoy.identifier,
    airport_heliport.markingbuoy_ts.interpretation,
    airport_heliport.markingbuoy_ts.sequence_number,
    airport_heliport.markingbuoy_ts.correction_number,
    airport_heliport.markingbuoy_ts.valid_time_begin,
    airport_heliport.markingbuoy_ts.valid_time_end,
    airport_heliport.markingbuoy_ts.feature_lifetime_begin,
    airport_heliport.markingbuoy_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.markingbuoy_ts.type_value as varchar), '(' || airport_heliport.markingbuoy_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.markingbuoy_ts.colour_value as varchar), '(' || airport_heliport.markingbuoy_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport_seaplanelandingarea_pt_lhzbyy.title as varchar), '(' || airport_heliport_seaplanelandingarea_pt_lhzbyy.nilreason[1] || ')') AS theseaplanelandingarea,
    airport_heliport_seaplanelandingarea_pt_lhzbyy.href AS theseaplanelandingarea_href,
    geometry_elevatedpoint_view_loqsev.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_loqsev.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_loqsev.geom) AS location_latitude,
    geometry_elevatedpoint_view_loqsev.elevation AS location_elevation,
    geometry_elevatedpoint_view_loqsev.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_loqsev.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_loqsev.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_loqsev.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_lmmicv.*) AS annotation
from airport_heliport.markingbuoy 
inner join master_join mj2 on airport_heliport.markingbuoy.id = mj2.source_id
inner join airport_heliport.markingbuoy_tsp on mj2.target_id = airport_heliport.markingbuoy_tsp.id
inner join airport_heliport.markingbuoy_ts on airport_heliport.markingbuoy_tsp.markingbuoytimeslice_id = airport_heliport.markingbuoy_ts.id
left join airport_heliport.seaplanelandingarea_pt airport_heliport_seaplanelandingarea_pt_lhzbyy on airport_heliport.markingbuoy_ts.theseaplanelandingarea_id = airport_heliport_seaplanelandingarea_pt_lhzbyy.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_loqsev on airport_heliport.markingbuoy_ts.location_id = geometry_elevatedpoint_view_loqsev.id
left join master_join master_join_ouproi on airport_heliport.markingbuoy_ts.id = master_join_ouproi.source_id
left join notes.note_view notes_note_view_lmmicv on master_join_ouproi.target_id = notes_note_view_lmmicv.id
where airport_heliport.markingbuoy.feature_status = 'APPROVED'
  and airport_heliport.markingbuoy_ts.feature_status = 'APPROVED'
group by
    airport_heliport.markingbuoy.id,
    airport_heliport.markingbuoy_ts.id,
    airport_heliport.markingbuoy_tsp.id,
    airport_heliport.markingbuoy.identifier,
    airport_heliport.markingbuoy_ts.interpretation,
    airport_heliport.markingbuoy_ts.sequence_number,
    airport_heliport.markingbuoy_ts.correction_number,
    airport_heliport.markingbuoy_ts.valid_time_begin,
    airport_heliport.markingbuoy_ts.valid_time_end,
    airport_heliport.markingbuoy_ts.feature_lifetime_begin,
    airport_heliport.markingbuoy_ts.feature_lifetime_end,
    airport_heliport.markingbuoy_ts.type_value,
    airport_heliport.markingbuoy_ts.type_nilreason,
    airport_heliport.markingbuoy_ts.colour_value,
    airport_heliport.markingbuoy_ts.colour_nilreason,
    airport_heliport_seaplanelandingarea_pt_lhzbyy.title,
    airport_heliport_seaplanelandingarea_pt_lhzbyy.nilreason[1],
    airport_heliport_seaplanelandingarea_pt_lhzbyy.href,
    geometry_elevatedpoint_view_loqsev.geom,
    geometry_elevatedpoint_view_loqsev.elevation,
    geometry_elevatedpoint_view_loqsev.geoidUndulation,
    geometry_elevatedpoint_view_loqsev.verticalDatum,
    geometry_elevatedpoint_view_loqsev.verticalAccuracy,
    geometry_elevatedpoint_view_loqsev.horizontalAccuracy
order by markingbuoy.identifier, markingbuoy_ts.sequence_number, markingbuoy_ts.correction_number DESC;
create index on airport_heliport.markingbuoy_view (id);
-- MissedApproachLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view', 'procedure.holdinguse_view', 'procedure.approachcondition_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.missedapproachleg_view cascade;
create materialized view procedure.missedapproachleg_view as
select distinct on (missedapproachleg.identifier,missedapproachleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.missedapproachleg.id,
    procedure.missedapproachleg_ts.id as ts_id,
    procedure.missedapproachleg_tsp.id as tsp_id,
    procedure.missedapproachleg.identifier,
    procedure.missedapproachleg_ts.interpretation,
    procedure.missedapproachleg_ts.sequence_number,
    procedure.missedapproachleg_ts.correction_number,
    procedure.missedapproachleg_ts.valid_time_begin,
    procedure.missedapproachleg_ts.valid_time_end,
    procedure.missedapproachleg_ts.feature_lifetime_begin,
    procedure.missedapproachleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.missedapproachleg_ts.endconditiondesignator_value as varchar), '(' || procedure.missedapproachleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.missedapproachleg_ts.legpath_value as varchar), '(' || procedure.missedapproachleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.missedapproachleg_ts.legtypearinc_value as varchar), '(' || procedure.missedapproachleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.missedapproachleg_ts.course_value as varchar), '(' || procedure.missedapproachleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.missedapproachleg_ts.coursetype_value as varchar), '(' || procedure.missedapproachleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.missedapproachleg_ts.coursedirection_value as varchar), '(' || procedure.missedapproachleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.missedapproachleg_ts.turndirection_value as varchar), '(' || procedure.missedapproachleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.missedapproachleg_ts.speedreference_value as varchar), '(' || procedure.missedapproachleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.missedapproachleg_ts.speedinterpretation_value as varchar), '(' || procedure.missedapproachleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.missedapproachleg_ts.bankangle_value as varchar), '(' || procedure.missedapproachleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.missedapproachleg_ts.procedureturnrequired_value as varchar), '(' || procedure.missedapproachleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.missedapproachleg_ts.upperlimitreference_value as varchar), '(' || procedure.missedapproachleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.missedapproachleg_ts.lowerlimitreference_value as varchar), '(' || procedure.missedapproachleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.missedapproachleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.missedapproachleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.missedapproachleg_ts.verticalangle_value as varchar), '(' || procedure.missedapproachleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.missedapproachleg_ts.type_value as varchar), '(' || procedure.missedapproachleg_ts.type_nilreason || ')') as type,
    coalesce(cast(procedure.missedapproachleg_ts.thresholdaftermapt_value as varchar), '(' || procedure.missedapproachleg_ts.thresholdaftermapt_nilreason || ')') as thresholdaftermapt,
    coalesce(cast(procedure.missedapproachleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.missedapproachleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.missedapproachleg_ts.speedlimit_value as varchar) || ' ' || procedure.missedapproachleg_ts.speedlimit_uom, '(' || procedure.missedapproachleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.missedapproachleg_ts.length_value as varchar) || ' ' || procedure.missedapproachleg_ts.length_uom, '(' || procedure.missedapproachleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.missedapproachleg_ts.duration_value as varchar) || ' ' || procedure.missedapproachleg_ts.duration_uom, '(' || procedure.missedapproachleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.missedapproachleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.missedapproachleg_ts.upperlimitaltitude_uom, '(' || procedure.missedapproachleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.missedapproachleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.missedapproachleg_ts.lowerlimitaltitude_uom, '(' || procedure.missedapproachleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.missedapproachleg_ts.altitudeoverrideatc_uom, '(' || procedure.missedapproachleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.missedapproachleg_ts.heightmapt_value as varchar) || ' ' || procedure.missedapproachleg_ts.heightmapt_uom, '(' || procedure.missedapproachleg_ts.heightmapt_nilreason || ')') as heightmapt,
    navaids_points_terminalsegmentpoint_view_bwgijo.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_aqwrdw.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_hmpmxs.id AS arccentre,
    geometry_curve_view_zwafvt.geom AS trajectory_geom,
    geometry_curve_view_zwafvt.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_nnxavg.title as varchar), '(' || navaids_points_angleindication_pt_nnxavg.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_nnxavg.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_wdjlkt.title as varchar), '(' || navaids_points_distanceindication_pt_wdjlkt.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_wdjlkt.href AS distance_href,
    procedure_holdinguse_view_noixqv.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_jckaar.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_jckaar.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_jckaar.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_fjptgn.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_nxpgxp.id) AS designsurface,
    jsonb_agg(notes_note_view_fvuymi.*) AS annotation,
    jsonb_agg(procedure_approachcondition_view_hbaeux.id) AS condition
from procedure.missedapproachleg 
inner join master_join mj2 on procedure.missedapproachleg.id = mj2.source_id
inner join procedure.missedapproachleg_tsp on mj2.target_id = procedure.missedapproachleg_tsp.id
inner join procedure.missedapproachleg_ts on procedure.missedapproachleg_tsp.missedapproachlegtimeslice_id = procedure.missedapproachleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_bwgijo on procedure.missedapproachleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_bwgijo.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_aqwrdw on procedure.missedapproachleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_aqwrdw.id
left join geometry.curve_view geometry_curve_view_zwafvt on procedure.missedapproachleg_ts.trajectory_id = geometry_curve_view_zwafvt.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_hmpmxs on procedure.missedapproachleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_hmpmxs.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_nnxavg on procedure.missedapproachleg_ts.angle_id = navaids_points_angleindication_pt_nnxavg.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_wdjlkt on procedure.missedapproachleg_ts.distance_id = navaids_points_distanceindication_pt_wdjlkt.id
left join procedure.holdinguse_view procedure_holdinguse_view_noixqv on procedure.missedapproachleg_ts.holding_id = procedure_holdinguse_view_noixqv.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_jckaar on procedure.missedapproachleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_jckaar.id
left join master_join master_join_afnqtt on procedure.missedapproachleg_ts.id = master_join_afnqtt.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_fjptgn on master_join_afnqtt.target_id = shared_aircraftcharacteristic_view_fjptgn.id
left join master_join master_join_biowch on procedure.missedapproachleg_ts.id = master_join_biowch.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_nxpgxp on master_join_biowch.target_id = shared_obstacleassessmentarea_view_nxpgxp.id
left join master_join master_join_sczdky on procedure.missedapproachleg_ts.id = master_join_sczdky.source_id
left join notes.note_view notes_note_view_fvuymi on master_join_sczdky.target_id = notes_note_view_fvuymi.id
left join master_join master_join_oamfsl on procedure.missedapproachleg_ts.id = master_join_oamfsl.source_id
left join procedure.approachcondition_view procedure_approachcondition_view_hbaeux on master_join_oamfsl.target_id = procedure_approachcondition_view_hbaeux.id
where procedure.missedapproachleg.feature_status = 'APPROVED'
  and procedure.missedapproachleg_ts.feature_status = 'APPROVED'
group by
    procedure.missedapproachleg.id,
    procedure.missedapproachleg_ts.id,
    procedure.missedapproachleg_tsp.id,
    procedure.missedapproachleg.identifier,
    procedure.missedapproachleg_ts.interpretation,
    procedure.missedapproachleg_ts.sequence_number,
    procedure.missedapproachleg_ts.correction_number,
    procedure.missedapproachleg_ts.valid_time_begin,
    procedure.missedapproachleg_ts.valid_time_end,
    procedure.missedapproachleg_ts.feature_lifetime_begin,
    procedure.missedapproachleg_ts.feature_lifetime_end,
    procedure.missedapproachleg_ts.endconditiondesignator_value,
    procedure.missedapproachleg_ts.endconditiondesignator_nilreason,
    procedure.missedapproachleg_ts.legpath_value,
    procedure.missedapproachleg_ts.legpath_nilreason,
    procedure.missedapproachleg_ts.legtypearinc_value,
    procedure.missedapproachleg_ts.legtypearinc_nilreason,
    procedure.missedapproachleg_ts.course_value,
    procedure.missedapproachleg_ts.course_nilreason,
    procedure.missedapproachleg_ts.coursetype_value,
    procedure.missedapproachleg_ts.coursetype_nilreason,
    procedure.missedapproachleg_ts.coursedirection_value,
    procedure.missedapproachleg_ts.coursedirection_nilreason,
    procedure.missedapproachleg_ts.turndirection_value,
    procedure.missedapproachleg_ts.turndirection_nilreason,
    procedure.missedapproachleg_ts.speedreference_value,
    procedure.missedapproachleg_ts.speedreference_nilreason,
    procedure.missedapproachleg_ts.speedinterpretation_value,
    procedure.missedapproachleg_ts.speedinterpretation_nilreason,
    procedure.missedapproachleg_ts.bankangle_value,
    procedure.missedapproachleg_ts.bankangle_nilreason,
    procedure.missedapproachleg_ts.procedureturnrequired_value,
    procedure.missedapproachleg_ts.procedureturnrequired_nilreason,
    procedure.missedapproachleg_ts.upperlimitreference_value,
    procedure.missedapproachleg_ts.upperlimitreference_nilreason,
    procedure.missedapproachleg_ts.lowerlimitreference_value,
    procedure.missedapproachleg_ts.lowerlimitreference_nilreason,
    procedure.missedapproachleg_ts.altitudeinterpretation_value,
    procedure.missedapproachleg_ts.altitudeinterpretation_nilreason,
    procedure.missedapproachleg_ts.altitudeoverridereference_value,
    procedure.missedapproachleg_ts.altitudeoverridereference_nilreason,
    procedure.missedapproachleg_ts.verticalangle_value,
    procedure.missedapproachleg_ts.verticalangle_nilreason,
    procedure.missedapproachleg_ts.type_value,
    procedure.missedapproachleg_ts.type_nilreason,
    procedure.missedapproachleg_ts.thresholdaftermapt_value,
    procedure.missedapproachleg_ts.thresholdaftermapt_nilreason,
    procedure.missedapproachleg_ts.requirednavigationperformance_value,
    procedure.missedapproachleg_ts.requirednavigationperformance_nilreason,
    procedure.missedapproachleg_ts.speedlimit_value,
    procedure.missedapproachleg_ts.speedlimit_uom,
    procedure.missedapproachleg_ts.speedlimit_nilreason,
    procedure.missedapproachleg_ts.length_value,
    procedure.missedapproachleg_ts.length_uom,
    procedure.missedapproachleg_ts.length_nilreason,
    procedure.missedapproachleg_ts.duration_value,
    procedure.missedapproachleg_ts.duration_uom,
    procedure.missedapproachleg_ts.duration_nilreason,
    procedure.missedapproachleg_ts.upperlimitaltitude_value,
    procedure.missedapproachleg_ts.upperlimitaltitude_uom,
    procedure.missedapproachleg_ts.upperlimitaltitude_nilreason,
    procedure.missedapproachleg_ts.lowerlimitaltitude_value,
    procedure.missedapproachleg_ts.lowerlimitaltitude_uom,
    procedure.missedapproachleg_ts.lowerlimitaltitude_nilreason,
    procedure.missedapproachleg_ts.altitudeoverrideatc_value,
    procedure.missedapproachleg_ts.altitudeoverrideatc_uom,
    procedure.missedapproachleg_ts.altitudeoverrideatc_nilreason,
    procedure.missedapproachleg_ts.heightmapt_value,
    procedure.missedapproachleg_ts.heightmapt_uom,
    procedure.missedapproachleg_ts.heightmapt_nilreason,
    navaids_points_terminalsegmentpoint_view_bwgijo.id,
    navaids_points_terminalsegmentpoint_view_aqwrdw.id,
    geometry_curve_view_zwafvt.geom,
    geometry_curve_view_zwafvt.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_hmpmxs.id,
    navaids_points_angleindication_pt_nnxavg.title,
    navaids_points_angleindication_pt_nnxavg.nilreason[1],
    navaids_points_angleindication_pt_nnxavg.href,
    navaids_points_distanceindication_pt_wdjlkt.title,
    navaids_points_distanceindication_pt_wdjlkt.nilreason[1],
    navaids_points_distanceindication_pt_wdjlkt.href,
    procedure_holdinguse_view_noixqv.id,
    procedure_instrumentapproachprocedure_pt_jckaar.title,
    procedure_instrumentapproachprocedure_pt_jckaar.nilreason[1],
    procedure_instrumentapproachprocedure_pt_jckaar.href
order by missedapproachleg.identifier, missedapproachleg_ts.sequence_number, missedapproachleg_ts.correction_number DESC;
create index on procedure.missedapproachleg_view (id);
-- NavaidTimeSliceType
-- ['navaids_points.navaidcomponent_view', 'geometry.elevatedpoint_view', 'notes.note_view', 'navaids_points.navaidoperationalstatus_view']
drop materialized view if exists navaids_points.navaid_view cascade;
create materialized view navaids_points.navaid_view as
select distinct on (navaid.identifier,navaid_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.navaid.id,
    navaids_points.navaid_ts.id as ts_id,
    navaids_points.navaid_tsp.id as tsp_id,
    navaids_points.navaid.identifier,
    navaids_points.navaid_ts.interpretation,
    navaids_points.navaid_ts.sequence_number,
    navaids_points.navaid_ts.correction_number,
    navaids_points.navaid_ts.valid_time_begin,
    navaids_points.navaid_ts.valid_time_end,
    navaids_points.navaid_ts.feature_lifetime_begin,
    navaids_points.navaid_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.navaid_ts.type_value as varchar), '(' || navaids_points.navaid_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.navaid_ts.designator_value as varchar), '(' || navaids_points.navaid_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.navaid_ts.name_value as varchar), '(' || navaids_points.navaid_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.navaid_ts.flightchecked_value as varchar), '(' || navaids_points.navaid_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.navaid_ts.purpose_value as varchar), '(' || navaids_points.navaid_ts.purpose_nilreason || ')') as purpose,
    coalesce(cast(navaids_points.navaid_ts.signalperformance_value as varchar), '(' || navaids_points.navaid_ts.signalperformance_nilreason || ')') as signalperformance,
    coalesce(cast(navaids_points.navaid_ts.coursequality_value as varchar), '(' || navaids_points.navaid_ts.coursequality_nilreason || ')') as coursequality,
    coalesce(cast(navaids_points.navaid_ts.integritylevel_value as varchar), '(' || navaids_points.navaid_ts.integritylevel_nilreason || ')') as integritylevel,
    geometry_elevatedpoint_view_hdnpzq.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_hdnpzq.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_hdnpzq.geom) AS location_latitude,
    geometry_elevatedpoint_view_hdnpzq.elevation AS location_elevation,
    geometry_elevatedpoint_view_hdnpzq.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_hdnpzq.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_hdnpzq.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_hdnpzq.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_touchdownliftoff_pt_yhtzyt.id,
    'title', coalesce(cast(airport_heliport_touchdownliftoff_pt_yhtzyt.title AS varchar), '(' || airport_heliport_touchdownliftoff_pt_yhtzyt.nilreason[1] || ')'),
    'href', airport_heliport_touchdownliftoff_pt_yhtzyt.href)) AS touchdownliftoff,
    jsonb_agg(navaids_points_navaidcomponent_view_uwcnzn.id) AS navaidequipment,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_jzcybi.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_jzcybi.title AS varchar), '(' || airport_heliport_runwaydirection_pt_jzcybi.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_jzcybi.href)) AS runwaydirection,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_jonnqt.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_jonnqt.title AS varchar), '(' || airport_heliport_airportheliport_pt_jonnqt.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_jonnqt.href)) AS servedairport,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_qyojun.id) AS availability,
    jsonb_agg(notes_note_view_wmyndy.*) AS annotation
from navaids_points.navaid 
inner join master_join mj2 on navaids_points.navaid.id = mj2.source_id
inner join navaids_points.navaid_tsp on mj2.target_id = navaids_points.navaid_tsp.id
inner join navaids_points.navaid_ts on navaids_points.navaid_tsp.navaidtimeslice_id = navaids_points.navaid_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_hdnpzq on navaids_points.navaid_ts.location_id = geometry_elevatedpoint_view_hdnpzq.id
left join master_join master_join_lsliyk on navaids_points.navaid_ts.id = master_join_lsliyk.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_yhtzyt on master_join_lsliyk.target_id = airport_heliport_touchdownliftoff_pt_yhtzyt.id
left join master_join master_join_aubgmb on navaids_points.navaid_ts.id = master_join_aubgmb.source_id
left join navaids_points.navaidcomponent_view navaids_points_navaidcomponent_view_uwcnzn on master_join_aubgmb.target_id = navaids_points_navaidcomponent_view_uwcnzn.id
left join master_join master_join_qvefle on navaids_points.navaid_ts.id = master_join_qvefle.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_jzcybi on master_join_qvefle.target_id = airport_heliport_runwaydirection_pt_jzcybi.id
left join master_join master_join_gbzenp on navaids_points.navaid_ts.id = master_join_gbzenp.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jonnqt on master_join_gbzenp.target_id = airport_heliport_airportheliport_pt_jonnqt.id
left join master_join master_join_rtthuj on navaids_points.navaid_ts.id = master_join_rtthuj.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_qyojun on master_join_rtthuj.target_id = navaids_points_navaidoperationalstatus_view_qyojun.id
left join master_join master_join_yxznkc on navaids_points.navaid_ts.id = master_join_yxznkc.source_id
left join notes.note_view notes_note_view_wmyndy on master_join_yxznkc.target_id = notes_note_view_wmyndy.id
where navaids_points.navaid.feature_status = 'APPROVED'
  and navaids_points.navaid_ts.feature_status = 'APPROVED'
group by
    navaids_points.navaid.id,
    navaids_points.navaid_ts.id,
    navaids_points.navaid_tsp.id,
    navaids_points.navaid.identifier,
    navaids_points.navaid_ts.interpretation,
    navaids_points.navaid_ts.sequence_number,
    navaids_points.navaid_ts.correction_number,
    navaids_points.navaid_ts.valid_time_begin,
    navaids_points.navaid_ts.valid_time_end,
    navaids_points.navaid_ts.feature_lifetime_begin,
    navaids_points.navaid_ts.feature_lifetime_end,
    navaids_points.navaid_ts.type_value,
    navaids_points.navaid_ts.type_nilreason,
    navaids_points.navaid_ts.designator_value,
    navaids_points.navaid_ts.designator_nilreason,
    navaids_points.navaid_ts.name_value,
    navaids_points.navaid_ts.name_nilreason,
    navaids_points.navaid_ts.flightchecked_value,
    navaids_points.navaid_ts.flightchecked_nilreason,
    navaids_points.navaid_ts.purpose_value,
    navaids_points.navaid_ts.purpose_nilreason,
    navaids_points.navaid_ts.signalperformance_value,
    navaids_points.navaid_ts.signalperformance_nilreason,
    navaids_points.navaid_ts.coursequality_value,
    navaids_points.navaid_ts.coursequality_nilreason,
    navaids_points.navaid_ts.integritylevel_value,
    navaids_points.navaid_ts.integritylevel_nilreason,
    geometry_elevatedpoint_view_hdnpzq.geom,
    geometry_elevatedpoint_view_hdnpzq.elevation,
    geometry_elevatedpoint_view_hdnpzq.geoidUndulation,
    geometry_elevatedpoint_view_hdnpzq.verticalDatum,
    geometry_elevatedpoint_view_hdnpzq.verticalAccuracy,
    geometry_elevatedpoint_view_hdnpzq.horizontalAccuracy
order by navaid.identifier, navaid_ts.sequence_number, navaid_ts.correction_number DESC;
create index on navaids_points.navaid_view (id);
-- NavigationAreaRestrictionTimeSliceType
-- ['notes.note_view', 'shared.obstacleassessmentarea_view', 'shared.circlesector_view']
drop materialized view if exists procedure.navigationarearestriction_view cascade;
create materialized view procedure.navigationarearestriction_view as
select distinct on (navigationarearestriction.identifier,navigationarearestriction_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.navigationarearestriction.id,
    procedure.navigationarearestriction_ts.id as ts_id,
    procedure.navigationarearestriction_tsp.id as tsp_id,
    procedure.navigationarearestriction.identifier,
    procedure.navigationarearestriction_ts.interpretation,
    procedure.navigationarearestriction_ts.sequence_number,
    procedure.navigationarearestriction_ts.correction_number,
    procedure.navigationarearestriction_ts.valid_time_begin,
    procedure.navigationarearestriction_ts.valid_time_end,
    procedure.navigationarearestriction_ts.feature_lifetime_begin,
    procedure.navigationarearestriction_ts.feature_lifetime_end,
    coalesce(cast(procedure.navigationarearestriction_ts.type_value as varchar), '(' || procedure.navigationarearestriction_ts.type_nilreason || ')') as type,
    shared_obstacleassessmentarea_view_fcdxoq.id AS designsurface,
    shared_circlesector_view_yatdrr.id AS sectordefinition,
    jsonb_agg(notes_note_view_scomne.*) AS annotation
from procedure.navigationarearestriction 
inner join master_join mj2 on procedure.navigationarearestriction.id = mj2.source_id
inner join procedure.navigationarearestriction_tsp on mj2.target_id = procedure.navigationarearestriction_tsp.id
inner join procedure.navigationarearestriction_ts on procedure.navigationarearestriction_tsp.navigationarearestrictiontimeslice_id = procedure.navigationarearestriction_ts.id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_fcdxoq on procedure.navigationarearestriction_ts.designsurface_id = shared_obstacleassessmentarea_view_fcdxoq.id
left join shared.circlesector_view shared_circlesector_view_yatdrr on procedure.navigationarearestriction_ts.sectordefinition_id = shared_circlesector_view_yatdrr.id
left join master_join master_join_jeewrw on procedure.navigationarearestriction_ts.id = master_join_jeewrw.source_id
left join notes.note_view notes_note_view_scomne on master_join_jeewrw.target_id = notes_note_view_scomne.id
where procedure.navigationarearestriction.feature_status = 'APPROVED'
  and procedure.navigationarearestriction_ts.feature_status = 'APPROVED'
group by
    procedure.navigationarearestriction.id,
    procedure.navigationarearestriction_ts.id,
    procedure.navigationarearestriction_tsp.id,
    procedure.navigationarearestriction.identifier,
    procedure.navigationarearestriction_ts.interpretation,
    procedure.navigationarearestriction_ts.sequence_number,
    procedure.navigationarearestriction_ts.correction_number,
    procedure.navigationarearestriction_ts.valid_time_begin,
    procedure.navigationarearestriction_ts.valid_time_end,
    procedure.navigationarearestriction_ts.feature_lifetime_begin,
    procedure.navigationarearestriction_ts.feature_lifetime_end,
    procedure.navigationarearestriction_ts.type_value,
    procedure.navigationarearestriction_ts.type_nilreason,
    shared_obstacleassessmentarea_view_fcdxoq.id,
    shared_circlesector_view_yatdrr.id
order by navigationarearestriction.identifier, navigationarearestriction_ts.sequence_number, navigationarearestriction_ts.correction_number DESC;
create index on procedure.navigationarearestriction_view (id);
-- NavigationAreaTimeSliceType
-- ['geometry.point_view', 'notes.note_view', 'procedure.navigationareasector_view']
drop materialized view if exists procedure.navigationarea_view cascade;
create materialized view procedure.navigationarea_view as
select distinct on (navigationarea.identifier,navigationarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.navigationarea.id,
    procedure.navigationarea_ts.id as ts_id,
    procedure.navigationarea_tsp.id as tsp_id,
    procedure.navigationarea.identifier,
    procedure.navigationarea_ts.interpretation,
    procedure.navigationarea_ts.sequence_number,
    procedure.navigationarea_ts.correction_number,
    procedure.navigationarea_ts.valid_time_begin,
    procedure.navigationarea_ts.valid_time_end,
    procedure.navigationarea_ts.feature_lifetime_begin,
    procedure.navigationarea_ts.feature_lifetime_end,
    coalesce(cast(procedure.navigationarea_ts.navigationareatype_value as varchar), '(' || procedure.navigationarea_ts.navigationareatype_nilreason || ')') as navigationareatype,
    coalesce(cast(procedure.navigationarea_ts.minimumceiling_value as varchar) || ' ' || procedure.navigationarea_ts.minimumceiling_uom, '(' || procedure.navigationarea_ts.minimumceiling_nilreason || ')') as minimumceiling,
    coalesce(cast(procedure.navigationarea_ts.minimumvisibility_value as varchar) || ' ' || procedure.navigationarea_ts.minimumvisibility_uom, '(' || procedure.navigationarea_ts.minimumvisibility_nilreason || ')') as minimumvisibility,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_daqohx.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_daqohx.nilreason[1] || ')') AS departure,
    procedure_standardinstrumentdeparture_pt_daqohx.href AS departure_href,
    coalesce(cast(navaids_points_designatedpoint_pt_ifpfhr.title as varchar), '(' || navaids_points_designatedpoint_pt_ifpfhr.nilreason[1] || ')') AS centrepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_ifpfhr.href AS centrepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_wdcotu.title as varchar), '(' || navaids_points_navaid_pt_wdcotu.nilreason[1] || ')') AS centrepointnavaidsystem,
    navaids_points_navaid_pt_wdcotu.href AS centrepointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ifnlhe.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ifnlhe.nilreason[1] || ')') AS centrepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_ifnlhe.href AS centrepointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_geczgs.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_geczgs.nilreason[1] || ')') AS centrepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_geczgs.href AS centrepointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_yssctz.title as varchar), '(' || airport_heliport_airportheliport_pt_yssctz.nilreason[1] || ')') AS centrepointairportreferencepoint,
    airport_heliport_airportheliport_pt_yssctz.href AS centrepointairportreferencepoint_href,
    geometry_point_view_wwvfec.geom AS centrepointposition_geom,
    ST_X(geometry_point_view_wwvfec.geom) AS centrepointposition_longitude,
    ST_Y(geometry_point_view_wwvfec.geom) AS centrepointposition_latitude,
    geometry_point_view_wwvfec.horizontalAccuracy AS centrepointposition_horizontalaccuracy,
    jsonb_agg(procedure_navigationareasector_view_yihobq.id) AS sector,
    jsonb_agg(notes_note_view_rixhvt.*) AS annotation
from procedure.navigationarea 
inner join master_join mj2 on procedure.navigationarea.id = mj2.source_id
inner join procedure.navigationarea_tsp on mj2.target_id = procedure.navigationarea_tsp.id
inner join procedure.navigationarea_ts on procedure.navigationarea_tsp.navigationareatimeslice_id = procedure.navigationarea_ts.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_daqohx on procedure.navigationarea_ts.departure_id = procedure_standardinstrumentdeparture_pt_daqohx.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ifpfhr on procedure.navigationarea_ts.centrepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ifpfhr.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_wdcotu on procedure.navigationarea_ts.centrepoint_navaidsystem_id = navaids_points_navaid_pt_wdcotu.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ifnlhe on procedure.navigationarea_ts.centrepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_ifnlhe.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_geczgs on procedure.navigationarea_ts.centrepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_geczgs.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_yssctz on procedure.navigationarea_ts.centrepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_yssctz.id
left join geometry.point_view geometry_point_view_wwvfec on procedure.navigationarea_ts.centrepoint_position_id = geometry_point_view_wwvfec.id
left join master_join master_join_gsqzgb on procedure.navigationarea_ts.id = master_join_gsqzgb.source_id
left join procedure.navigationareasector_view procedure_navigationareasector_view_yihobq on master_join_gsqzgb.target_id = procedure_navigationareasector_view_yihobq.id
left join master_join master_join_ryxogq on procedure.navigationarea_ts.id = master_join_ryxogq.source_id
left join notes.note_view notes_note_view_rixhvt on master_join_ryxogq.target_id = notes_note_view_rixhvt.id
where procedure.navigationarea.feature_status = 'APPROVED'
  and procedure.navigationarea_ts.feature_status = 'APPROVED'
group by
    procedure.navigationarea.id,
    procedure.navigationarea_ts.id,
    procedure.navigationarea_tsp.id,
    procedure.navigationarea.identifier,
    procedure.navigationarea_ts.interpretation,
    procedure.navigationarea_ts.sequence_number,
    procedure.navigationarea_ts.correction_number,
    procedure.navigationarea_ts.valid_time_begin,
    procedure.navigationarea_ts.valid_time_end,
    procedure.navigationarea_ts.feature_lifetime_begin,
    procedure.navigationarea_ts.feature_lifetime_end,
    procedure.navigationarea_ts.navigationareatype_value,
    procedure.navigationarea_ts.navigationareatype_nilreason,
    procedure.navigationarea_ts.minimumceiling_value,
    procedure.navigationarea_ts.minimumceiling_uom,
    procedure.navigationarea_ts.minimumceiling_nilreason,
    procedure.navigationarea_ts.minimumvisibility_value,
    procedure.navigationarea_ts.minimumvisibility_uom,
    procedure.navigationarea_ts.minimumvisibility_nilreason,
    procedure_standardinstrumentdeparture_pt_daqohx.title,
    procedure_standardinstrumentdeparture_pt_daqohx.nilreason[1],
    procedure_standardinstrumentdeparture_pt_daqohx.href,
    navaids_points_designatedpoint_pt_ifpfhr.title,
    navaids_points_designatedpoint_pt_ifpfhr.nilreason[1],
    navaids_points_designatedpoint_pt_ifpfhr.href,
    navaids_points_navaid_pt_wdcotu.title,
    navaids_points_navaid_pt_wdcotu.nilreason[1],
    navaids_points_navaid_pt_wdcotu.href,
    airport_heliport_touchdownliftoff_pt_ifnlhe.title,
    airport_heliport_touchdownliftoff_pt_ifnlhe.nilreason[1],
    airport_heliport_touchdownliftoff_pt_ifnlhe.href,
    airport_heliport_runwaycentrelinepoint_pt_geczgs.title,
    airport_heliport_runwaycentrelinepoint_pt_geczgs.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_geczgs.href,
    airport_heliport_airportheliport_pt_yssctz.title,
    airport_heliport_airportheliport_pt_yssctz.nilreason[1],
    airport_heliport_airportheliport_pt_yssctz.href,
    geometry_point_view_wwvfec.geom,
    geometry_point_view_wwvfec.horizontalAccuracy
order by navigationarea.identifier, navigationarea_ts.sequence_number, navigationarea_ts.correction_number DESC;
create index on procedure.navigationarea_view (id);
-- NDBTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.ndb_view cascade;
create materialized view navaids_points.ndb_view as
select distinct on (ndb.identifier,ndb_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.ndb.id,
    navaids_points.ndb_ts.id as ts_id,
    navaids_points.ndb_tsp.id as tsp_id,
    navaids_points.ndb.identifier,
    navaids_points.ndb_ts.interpretation,
    navaids_points.ndb_ts.sequence_number,
    navaids_points.ndb_ts.correction_number,
    navaids_points.ndb_ts.valid_time_begin,
    navaids_points.ndb_ts.valid_time_end,
    navaids_points.ndb_ts.feature_lifetime_begin,
    navaids_points.ndb_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.ndb_ts.designator_value as varchar), '(' || navaids_points.ndb_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.ndb_ts.name_value as varchar), '(' || navaids_points.ndb_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.ndb_ts.emissionclass_value as varchar), '(' || navaids_points.ndb_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.ndb_ts.mobile_value as varchar), '(' || navaids_points.ndb_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.ndb_ts.magneticvariation_value as varchar), '(' || navaids_points.ndb_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.ndb_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.ndb_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.ndb_ts.datemagneticvariation_value as varchar), '(' || navaids_points.ndb_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.ndb_ts.flightchecked_value as varchar), '(' || navaids_points.ndb_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.ndb_ts.class_value as varchar), '(' || navaids_points.ndb_ts.class_nilreason || ')') as class,
    coalesce(cast(navaids_points.ndb_ts.emissionband_value as varchar), '(' || navaids_points.ndb_ts.emissionband_nilreason || ')') as emissionband,
    coalesce(cast(navaids_points.ndb_ts.frequency_value as varchar) || ' ' || navaids_points.ndb_ts.frequency_uom, '(' || navaids_points.ndb_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_fgvmiz.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_fgvmiz.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_fgvmiz.geom) AS location_latitude,
    geometry_elevatedpoint_view_fgvmiz.elevation AS location_elevation,
    geometry_elevatedpoint_view_fgvmiz.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_fgvmiz.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_fgvmiz.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_fgvmiz.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_mcpnvy.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_pmjaea.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_xfjjtp.id) AS availability,
    jsonb_agg(notes_note_view_ygjeqg.*) AS annotation
from navaids_points.ndb 
inner join master_join mj2 on navaids_points.ndb.id = mj2.source_id
inner join navaids_points.ndb_tsp on mj2.target_id = navaids_points.ndb_tsp.id
inner join navaids_points.ndb_ts on navaids_points.ndb_tsp.ndbtimeslice_id = navaids_points.ndb_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_fgvmiz on navaids_points.ndb_ts.location_id = geometry_elevatedpoint_view_fgvmiz.id
left join master_join master_join_dcjgim on navaids_points.ndb_ts.id = master_join_dcjgim.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_mcpnvy on master_join_dcjgim.target_id = navaids_points_authorityfornavaidequipment_view_mcpnvy.id
left join master_join master_join_esuqdg on navaids_points.ndb_ts.id = master_join_esuqdg.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_pmjaea on master_join_esuqdg.target_id = navaids_points_navaidequipmentmonitoring_view_pmjaea.id
left join master_join master_join_sibkts on navaids_points.ndb_ts.id = master_join_sibkts.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_xfjjtp on master_join_sibkts.target_id = navaids_points_navaidoperationalstatus_view_xfjjtp.id
left join master_join master_join_wytvfo on navaids_points.ndb_ts.id = master_join_wytvfo.source_id
left join notes.note_view notes_note_view_ygjeqg on master_join_wytvfo.target_id = notes_note_view_ygjeqg.id
where navaids_points.ndb.feature_status = 'APPROVED'
  and navaids_points.ndb_ts.feature_status = 'APPROVED'
group by
    navaids_points.ndb.id,
    navaids_points.ndb_ts.id,
    navaids_points.ndb_tsp.id,
    navaids_points.ndb.identifier,
    navaids_points.ndb_ts.interpretation,
    navaids_points.ndb_ts.sequence_number,
    navaids_points.ndb_ts.correction_number,
    navaids_points.ndb_ts.valid_time_begin,
    navaids_points.ndb_ts.valid_time_end,
    navaids_points.ndb_ts.feature_lifetime_begin,
    navaids_points.ndb_ts.feature_lifetime_end,
    navaids_points.ndb_ts.designator_value,
    navaids_points.ndb_ts.designator_nilreason,
    navaids_points.ndb_ts.name_value,
    navaids_points.ndb_ts.name_nilreason,
    navaids_points.ndb_ts.emissionclass_value,
    navaids_points.ndb_ts.emissionclass_nilreason,
    navaids_points.ndb_ts.mobile_value,
    navaids_points.ndb_ts.mobile_nilreason,
    navaids_points.ndb_ts.magneticvariation_value,
    navaids_points.ndb_ts.magneticvariation_nilreason,
    navaids_points.ndb_ts.magneticvariationaccuracy_value,
    navaids_points.ndb_ts.magneticvariationaccuracy_nilreason,
    navaids_points.ndb_ts.datemagneticvariation_value,
    navaids_points.ndb_ts.datemagneticvariation_nilreason,
    navaids_points.ndb_ts.flightchecked_value,
    navaids_points.ndb_ts.flightchecked_nilreason,
    navaids_points.ndb_ts.class_value,
    navaids_points.ndb_ts.class_nilreason,
    navaids_points.ndb_ts.emissionband_value,
    navaids_points.ndb_ts.emissionband_nilreason,
    navaids_points.ndb_ts.frequency_value,
    navaids_points.ndb_ts.frequency_uom,
    navaids_points.ndb_ts.frequency_nilreason,
    geometry_elevatedpoint_view_fgvmiz.geom,
    geometry_elevatedpoint_view_fgvmiz.elevation,
    geometry_elevatedpoint_view_fgvmiz.geoidUndulation,
    geometry_elevatedpoint_view_fgvmiz.verticalDatum,
    geometry_elevatedpoint_view_fgvmiz.verticalAccuracy,
    geometry_elevatedpoint_view_fgvmiz.horizontalAccuracy
order by ndb.identifier, ndb_ts.sequence_number, ndb_ts.correction_number DESC;
create index on navaids_points.ndb_view (id);
-- NonMovementAreaTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.nonmovementarea_view cascade;
create materialized view airport_heliport.nonmovementarea_view as
select distinct on (nonmovementarea.identifier,nonmovementarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.nonmovementarea.id,
    airport_heliport.nonmovementarea_ts.id as ts_id,
    airport_heliport.nonmovementarea_tsp.id as tsp_id,
    airport_heliport.nonmovementarea.identifier,
    airport_heliport.nonmovementarea_ts.interpretation,
    airport_heliport.nonmovementarea_ts.sequence_number,
    airport_heliport.nonmovementarea_ts.correction_number,
    airport_heliport.nonmovementarea_ts.valid_time_begin,
    airport_heliport.nonmovementarea_ts.valid_time_end,
    airport_heliport.nonmovementarea_ts.feature_lifetime_begin,
    airport_heliport.nonmovementarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport_airportheliport_pt_kbjgpl.title as varchar), '(' || airport_heliport_airportheliport_pt_kbjgpl.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_kbjgpl.href AS associatedairportheliport_href,
    geometry_elevatedsurface_view_wxfygt.geom AS extent_geom,
    geometry_elevatedsurface_view_wxfygt.elevation AS extent_elevation,
    geometry_elevatedsurface_view_wxfygt.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_wxfygt.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_wxfygt.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_wxfygt.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(notes_note_view_zjhewd.*) AS annotation
from airport_heliport.nonmovementarea 
inner join master_join mj2 on airport_heliport.nonmovementarea.id = mj2.source_id
inner join airport_heliport.nonmovementarea_tsp on mj2.target_id = airport_heliport.nonmovementarea_tsp.id
inner join airport_heliport.nonmovementarea_ts on airport_heliport.nonmovementarea_tsp.nonmovementareatimeslice_id = airport_heliport.nonmovementarea_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_kbjgpl on airport_heliport.nonmovementarea_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_kbjgpl.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_wxfygt on airport_heliport.nonmovementarea_ts.extent_id = geometry_elevatedsurface_view_wxfygt.id
left join master_join master_join_tsjpxi on airport_heliport.nonmovementarea_ts.id = master_join_tsjpxi.source_id
left join notes.note_view notes_note_view_zjhewd on master_join_tsjpxi.target_id = notes_note_view_zjhewd.id
where airport_heliport.nonmovementarea.feature_status = 'APPROVED'
  and airport_heliport.nonmovementarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.nonmovementarea.id,
    airport_heliport.nonmovementarea_ts.id,
    airport_heliport.nonmovementarea_tsp.id,
    airport_heliport.nonmovementarea.identifier,
    airport_heliport.nonmovementarea_ts.interpretation,
    airport_heliport.nonmovementarea_ts.sequence_number,
    airport_heliport.nonmovementarea_ts.correction_number,
    airport_heliport.nonmovementarea_ts.valid_time_begin,
    airport_heliport.nonmovementarea_ts.valid_time_end,
    airport_heliport.nonmovementarea_ts.feature_lifetime_begin,
    airport_heliport.nonmovementarea_ts.feature_lifetime_end,
    airport_heliport_airportheliport_pt_kbjgpl.title,
    airport_heliport_airportheliport_pt_kbjgpl.nilreason[1],
    airport_heliport_airportheliport_pt_kbjgpl.href,
    geometry_elevatedsurface_view_wxfygt.geom,
    geometry_elevatedsurface_view_wxfygt.elevation,
    geometry_elevatedsurface_view_wxfygt.geoidUndulation,
    geometry_elevatedsurface_view_wxfygt.verticalDatum,
    geometry_elevatedsurface_view_wxfygt.verticalAccuracy,
    geometry_elevatedsurface_view_wxfygt.horizontalAccuracy
order by nonmovementarea.identifier, nonmovementarea_ts.sequence_number, nonmovementarea_ts.correction_number DESC;
create index on airport_heliport.nonmovementarea_view (id);
-- ObstacleAreaTimeSliceType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists obstacles.obstaclearea_view cascade;
create materialized view obstacles.obstaclearea_view as
select distinct on (obstaclearea.identifier,obstaclearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    obstacles.obstaclearea.id,
    obstacles.obstaclearea_ts.id as ts_id,
    obstacles.obstaclearea_tsp.id as tsp_id,
    obstacles.obstaclearea.identifier,
    obstacles.obstaclearea_ts.interpretation,
    obstacles.obstaclearea_ts.sequence_number,
    obstacles.obstaclearea_ts.correction_number,
    obstacles.obstaclearea_ts.valid_time_begin,
    obstacles.obstaclearea_ts.valid_time_end,
    obstacles.obstaclearea_ts.feature_lifetime_begin,
    obstacles.obstaclearea_ts.feature_lifetime_end,
    coalesce(cast(obstacles.obstaclearea_ts.type_value as varchar), '(' || obstacles.obstaclearea_ts.type_nilreason || ')') as type,
    coalesce(cast(obstacles.obstaclearea_ts.obstructionidsurfacecondition_value as varchar), '(' || obstacles.obstaclearea_ts.obstructionidsurfacecondition_nilreason || ')') as obstructionidsurfacecondition,
    coalesce(cast(airport_heliport_airportheliport_pt_fylamw.title as varchar), '(' || airport_heliport_airportheliport_pt_fylamw.nilreason[1] || ')') AS referenceownerairport,
    airport_heliport_airportheliport_pt_fylamw.href AS referenceownerairport_href,
    coalesce(cast(airport_heliport_runwaydirection_pt_yoziqh.title as varchar), '(' || airport_heliport_runwaydirection_pt_yoziqh.nilreason[1] || ')') AS referenceownerrunway,
    airport_heliport_runwaydirection_pt_yoziqh.href AS referenceownerrunway_href,
    coalesce(cast(organisation_organisationauthority_pt_kmkrqk.title as varchar), '(' || organisation_organisationauthority_pt_kmkrqk.nilreason[1] || ')') AS referenceownerorganisation,
    organisation_organisationauthority_pt_kmkrqk.href AS referenceownerorganisation_href,
    geometry_surface_view_leuryq.geom AS surfaceextent_geom,
    geometry_surface_view_leuryq.horizontalAccuracy as surfaceextent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', obstacles_verticalstructure_pt_vmkaxa.id,
    'title', coalesce(cast(obstacles_verticalstructure_pt_vmkaxa.title AS varchar), '(' || obstacles_verticalstructure_pt_vmkaxa.nilreason[1] || ')'),
    'href', obstacles_verticalstructure_pt_vmkaxa.href)) AS obstacle,
    jsonb_agg(notes_note_view_hneepl.*) AS annotation
from obstacles.obstaclearea 
inner join master_join mj2 on obstacles.obstaclearea.id = mj2.source_id
inner join obstacles.obstaclearea_tsp on mj2.target_id = obstacles.obstaclearea_tsp.id
inner join obstacles.obstaclearea_ts on obstacles.obstaclearea_tsp.obstacleareatimeslice_id = obstacles.obstaclearea_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_fylamw on obstacles.obstaclearea_ts.reference_ownerairport_id = airport_heliport_airportheliport_pt_fylamw.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_yoziqh on obstacles.obstaclearea_ts.reference_ownerrunway_id = airport_heliport_runwaydirection_pt_yoziqh.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_kmkrqk on obstacles.obstaclearea_ts.reference_ownerorganisation_id = organisation_organisationauthority_pt_kmkrqk.id
left join geometry.surface_view geometry_surface_view_leuryq on obstacles.obstaclearea_ts.surfaceextent_id = geometry_surface_view_leuryq.id
left join master_join master_join_rdprui on obstacles.obstaclearea_ts.id = master_join_rdprui.source_id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_vmkaxa on master_join_rdprui.target_id = obstacles_verticalstructure_pt_vmkaxa.id
left join master_join master_join_uqeetf on obstacles.obstaclearea_ts.id = master_join_uqeetf.source_id
left join notes.note_view notes_note_view_hneepl on master_join_uqeetf.target_id = notes_note_view_hneepl.id
where obstacles.obstaclearea.feature_status = 'APPROVED'
  and obstacles.obstaclearea_ts.feature_status = 'APPROVED'
group by
    obstacles.obstaclearea.id,
    obstacles.obstaclearea_ts.id,
    obstacles.obstaclearea_tsp.id,
    obstacles.obstaclearea.identifier,
    obstacles.obstaclearea_ts.interpretation,
    obstacles.obstaclearea_ts.sequence_number,
    obstacles.obstaclearea_ts.correction_number,
    obstacles.obstaclearea_ts.valid_time_begin,
    obstacles.obstaclearea_ts.valid_time_end,
    obstacles.obstaclearea_ts.feature_lifetime_begin,
    obstacles.obstaclearea_ts.feature_lifetime_end,
    obstacles.obstaclearea_ts.type_value,
    obstacles.obstaclearea_ts.type_nilreason,
    obstacles.obstaclearea_ts.obstructionidsurfacecondition_value,
    obstacles.obstaclearea_ts.obstructionidsurfacecondition_nilreason,
    airport_heliport_airportheliport_pt_fylamw.title,
    airport_heliport_airportheliport_pt_fylamw.nilreason[1],
    airport_heliport_airportheliport_pt_fylamw.href,
    airport_heliport_runwaydirection_pt_yoziqh.title,
    airport_heliport_runwaydirection_pt_yoziqh.nilreason[1],
    airport_heliport_runwaydirection_pt_yoziqh.href,
    organisation_organisationauthority_pt_kmkrqk.title,
    organisation_organisationauthority_pt_kmkrqk.nilreason[1],
    organisation_organisationauthority_pt_kmkrqk.href,
    geometry_surface_view_leuryq.geom,
    geometry_surface_view_leuryq.horizontalAccuracy
order by obstaclearea.identifier, obstaclearea_ts.sequence_number, obstaclearea_ts.correction_number DESC;
create index on obstacles.obstaclearea_view (id);
-- OrganisationAuthorityTimeSliceType
-- ['organisation.organisationauthorityassociation_view', 'notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists organisation.organisationauthority_view cascade;
create materialized view organisation.organisationauthority_view as
select distinct on (organisationauthority.identifier,organisationauthority_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    organisation.organisationauthority.id,
    organisation.organisationauthority_ts.id as ts_id,
    organisation.organisationauthority_tsp.id as tsp_id,
    organisation.organisationauthority.identifier,
    organisation.organisationauthority_ts.interpretation,
    organisation.organisationauthority_ts.sequence_number,
    organisation.organisationauthority_ts.correction_number,
    organisation.organisationauthority_ts.valid_time_begin,
    organisation.organisationauthority_ts.valid_time_end,
    organisation.organisationauthority_ts.feature_lifetime_begin,
    organisation.organisationauthority_ts.feature_lifetime_end,
    coalesce(cast(organisation.organisationauthority_ts.name_value as varchar), '(' || organisation.organisationauthority_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation.organisationauthority_ts.designator_value as varchar), '(' || organisation.organisationauthority_ts.designator_nilreason || ')') as designator,
    coalesce(cast(organisation.organisationauthority_ts.type_value as varchar), '(' || organisation.organisationauthority_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation.organisationauthority_ts.military_value as varchar), '(' || organisation.organisationauthority_ts.military_nilreason || ')') as military,
    jsonb_agg(organisation_organisationauthorityassociation_view_dtfqrf.id) AS relatedorganisationauthority,
    jsonb_agg(notes_note_view_gwkyku.*) AS annotation
from organisation.organisationauthority 
inner join master_join mj2 on organisation.organisationauthority.id = mj2.source_id
inner join organisation.organisationauthority_tsp on mj2.target_id = organisation.organisationauthority_tsp.id
inner join organisation.organisationauthority_ts on organisation.organisationauthority_tsp.organisationauthoritytimeslice_id = organisation.organisationauthority_ts.id
left join master_join master_join_agpwmm on organisation.organisationauthority_ts.id = master_join_agpwmm.source_id
left join shared.contactinformation_view shared_contactinformation_view_bfwexh on master_join_agpwmm.target_id = shared_contactinformation_view_bfwexh.id
left join master_join master_join_figywb on organisation.organisationauthority_ts.id = master_join_figywb.source_id
left join organisation.organisationauthorityassociation_view organisation_organisationauthorityassociation_view_dtfqrf on master_join_figywb.target_id = organisation_organisationauthorityassociation_view_dtfqrf.id
left join master_join master_join_vpzixv on organisation.organisationauthority_ts.id = master_join_vpzixv.source_id
left join notes.note_view notes_note_view_gwkyku on master_join_vpzixv.target_id = notes_note_view_gwkyku.id
where organisation.organisationauthority.feature_status = 'APPROVED'
  and organisation.organisationauthority_ts.feature_status = 'APPROVED'
group by
    organisation.organisationauthority.id,
    organisation.organisationauthority_ts.id,
    organisation.organisationauthority_tsp.id,
    organisation.organisationauthority.identifier,
    organisation.organisationauthority_ts.interpretation,
    organisation.organisationauthority_ts.sequence_number,
    organisation.organisationauthority_ts.correction_number,
    organisation.organisationauthority_ts.valid_time_begin,
    organisation.organisationauthority_ts.valid_time_end,
    organisation.organisationauthority_ts.feature_lifetime_begin,
    organisation.organisationauthority_ts.feature_lifetime_end,
    organisation.organisationauthority_ts.name_value,
    organisation.organisationauthority_ts.name_nilreason,
    organisation.organisationauthority_ts.designator_value,
    organisation.organisationauthority_ts.designator_nilreason,
    organisation.organisationauthority_ts.type_value,
    organisation.organisationauthority_ts.type_nilreason,
    organisation.organisationauthority_ts.military_value,
    organisation.organisationauthority_ts.military_nilreason
order by organisationauthority.identifier, organisationauthority_ts.sequence_number, organisationauthority_ts.correction_number DESC;
create index on organisation.organisationauthority_view (id);
-- PassengerLoadingBridgeTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.passengerloadingbridge_view cascade;
create materialized view airport_heliport.passengerloadingbridge_view as
select distinct on (passengerloadingbridge.identifier,passengerloadingbridge_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.passengerloadingbridge.id,
    airport_heliport.passengerloadingbridge_ts.id as ts_id,
    airport_heliport.passengerloadingbridge_tsp.id as tsp_id,
    airport_heliport.passengerloadingbridge.identifier,
    airport_heliport.passengerloadingbridge_ts.interpretation,
    airport_heliport.passengerloadingbridge_ts.sequence_number,
    airport_heliport.passengerloadingbridge_ts.correction_number,
    airport_heliport.passengerloadingbridge_ts.valid_time_begin,
    airport_heliport.passengerloadingbridge_ts.valid_time_end,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_begin,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.passengerloadingbridge_ts.type_value as varchar), '(' || airport_heliport.passengerloadingbridge_ts.type_nilreason || ')') as type,
    geometry_elevatedsurface_view_wutvkc.geom AS extent_geom,
    geometry_elevatedsurface_view_wutvkc.elevation AS extent_elevation,
    geometry_elevatedsurface_view_wutvkc.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_wutvkc.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_wutvkc.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_wutvkc.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_aircraftstand_pt_szetnl.id,
    'title', coalesce(cast(airport_heliport_aircraftstand_pt_szetnl.title AS varchar), '(' || airport_heliport_aircraftstand_pt_szetnl.nilreason[1] || ')'),
    'href', airport_heliport_aircraftstand_pt_szetnl.href)) AS associatedstand,
    jsonb_agg(notes_note_view_nepfgh.*) AS annotation
from airport_heliport.passengerloadingbridge 
inner join master_join mj2 on airport_heliport.passengerloadingbridge.id = mj2.source_id
inner join airport_heliport.passengerloadingbridge_tsp on mj2.target_id = airport_heliport.passengerloadingbridge_tsp.id
inner join airport_heliport.passengerloadingbridge_ts on airport_heliport.passengerloadingbridge_tsp.passengerloadingbridgetimeslice_id = airport_heliport.passengerloadingbridge_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_wutvkc on airport_heliport.passengerloadingbridge_ts.extent_id = geometry_elevatedsurface_view_wutvkc.id
left join master_join master_join_gqzrpf on airport_heliport.passengerloadingbridge_ts.id = master_join_gqzrpf.source_id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_szetnl on master_join_gqzrpf.target_id = airport_heliport_aircraftstand_pt_szetnl.id
left join master_join master_join_zunnzq on airport_heliport.passengerloadingbridge_ts.id = master_join_zunnzq.source_id
left join notes.note_view notes_note_view_nepfgh on master_join_zunnzq.target_id = notes_note_view_nepfgh.id
where airport_heliport.passengerloadingbridge.feature_status = 'APPROVED'
  and airport_heliport.passengerloadingbridge_ts.feature_status = 'APPROVED'
group by
    airport_heliport.passengerloadingbridge.id,
    airport_heliport.passengerloadingbridge_ts.id,
    airport_heliport.passengerloadingbridge_tsp.id,
    airport_heliport.passengerloadingbridge.identifier,
    airport_heliport.passengerloadingbridge_ts.interpretation,
    airport_heliport.passengerloadingbridge_ts.sequence_number,
    airport_heliport.passengerloadingbridge_ts.correction_number,
    airport_heliport.passengerloadingbridge_ts.valid_time_begin,
    airport_heliport.passengerloadingbridge_ts.valid_time_end,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_begin,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_end,
    airport_heliport.passengerloadingbridge_ts.type_value,
    airport_heliport.passengerloadingbridge_ts.type_nilreason,
    geometry_elevatedsurface_view_wutvkc.geom,
    geometry_elevatedsurface_view_wutvkc.elevation,
    geometry_elevatedsurface_view_wutvkc.geoidUndulation,
    geometry_elevatedsurface_view_wutvkc.verticalDatum,
    geometry_elevatedsurface_view_wutvkc.verticalAccuracy,
    geometry_elevatedsurface_view_wutvkc.horizontalAccuracy
order by passengerloadingbridge.identifier, passengerloadingbridge_ts.sequence_number, passengerloadingbridge_ts.correction_number DESC;
create index on airport_heliport.passengerloadingbridge_view (id);
-- PassengerServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view']
drop materialized view if exists service.passengerservice_view cascade;
create materialized view service.passengerservice_view as
select distinct on (passengerservice.identifier,passengerservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.passengerservice.id,
    service.passengerservice_ts.id as ts_id,
    service.passengerservice_tsp.id as tsp_id,
    service.passengerservice.identifier,
    service.passengerservice_ts.interpretation,
    service.passengerservice_ts.sequence_number,
    service.passengerservice_ts.correction_number,
    service.passengerservice_ts.valid_time_begin,
    service.passengerservice_ts.valid_time_end,
    service.passengerservice_ts.feature_lifetime_begin,
    service.passengerservice_ts.feature_lifetime_end,
    coalesce(cast(service.passengerservice_ts.flightoperations_value as varchar), '(' || service.passengerservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.passengerservice_ts.rank_value as varchar), '(' || service.passengerservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.passengerservice_ts.complianticao_value as varchar), '(' || service.passengerservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.passengerservice_ts.name_value as varchar), '(' || service.passengerservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.passengerservice_ts.type_value as varchar), '(' || service.passengerservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_kvvehp.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_kvvehp.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_kvvehp.geom) AS location_latitude,
    geometry_elevatedpoint_view_kvvehp.elevation AS location_elevation,
    geometry_elevatedpoint_view_kvvehp.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_kvvehp.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_kvvehp.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_kvvehp.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_desgug.title as varchar), '(' || organisation_unit_pt_desgug.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_desgug.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_hzirpj.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_xdrkut.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_xdrkut.title AS varchar), '(' || service_radiocommunicationchannel_pt_xdrkut.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_xdrkut.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_ynktil.id) AS availability,
    jsonb_agg(notes_note_view_crahqk.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_lxpybr.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_lxpybr.title AS varchar), '(' || airport_heliport_airportheliport_pt_lxpybr.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_lxpybr.href)) AS airportheliport
from service.passengerservice 
inner join master_join mj2 on service.passengerservice.id = mj2.source_id
inner join service.passengerservice_tsp on mj2.target_id = service.passengerservice_tsp.id
inner join service.passengerservice_ts on service.passengerservice_tsp.passengerservicetimeslice_id = service.passengerservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_kvvehp on service.passengerservice_ts.location_id = geometry_elevatedpoint_view_kvvehp.id
left join organisation.unit_pt organisation_unit_pt_desgug on service.passengerservice_ts.serviceprovider_id = organisation_unit_pt_desgug.id
left join master_join master_join_ucjmxg on service.passengerservice_ts.id = master_join_ucjmxg.source_id
left join service.callsigndetail_view service_callsigndetail_view_hzirpj on master_join_ucjmxg.target_id = service_callsigndetail_view_hzirpj.id
left join master_join master_join_lonlvy on service.passengerservice_ts.id = master_join_lonlvy.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_xdrkut on master_join_lonlvy.target_id = service_radiocommunicationchannel_pt_xdrkut.id
left join master_join master_join_xiiiri on service.passengerservice_ts.id = master_join_xiiiri.source_id
left join shared.contactinformation_view shared_contactinformation_view_vtnezg on master_join_xiiiri.target_id = shared_contactinformation_view_vtnezg.id
left join master_join master_join_moovys on service.passengerservice_ts.id = master_join_moovys.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_ynktil on master_join_moovys.target_id = service_serviceoperationalstatus_view_ynktil.id
left join master_join master_join_kchego on service.passengerservice_ts.id = master_join_kchego.source_id
left join notes.note_view notes_note_view_crahqk on master_join_kchego.target_id = notes_note_view_crahqk.id
left join master_join master_join_kxjjdw on service.passengerservice_ts.id = master_join_kxjjdw.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_lxpybr on master_join_kxjjdw.target_id = airport_heliport_airportheliport_pt_lxpybr.id
where service.passengerservice.feature_status = 'APPROVED'
  and service.passengerservice_ts.feature_status = 'APPROVED'
group by
    service.passengerservice.id,
    service.passengerservice_ts.id,
    service.passengerservice_tsp.id,
    service.passengerservice.identifier,
    service.passengerservice_ts.interpretation,
    service.passengerservice_ts.sequence_number,
    service.passengerservice_ts.correction_number,
    service.passengerservice_ts.valid_time_begin,
    service.passengerservice_ts.valid_time_end,
    service.passengerservice_ts.feature_lifetime_begin,
    service.passengerservice_ts.feature_lifetime_end,
    service.passengerservice_ts.flightoperations_value,
    service.passengerservice_ts.flightoperations_nilreason,
    service.passengerservice_ts.rank_value,
    service.passengerservice_ts.rank_nilreason,
    service.passengerservice_ts.complianticao_value,
    service.passengerservice_ts.complianticao_nilreason,
    service.passengerservice_ts.name_value,
    service.passengerservice_ts.name_nilreason,
    service.passengerservice_ts.type_value,
    service.passengerservice_ts.type_nilreason,
    geometry_elevatedpoint_view_kvvehp.geom,
    geometry_elevatedpoint_view_kvvehp.elevation,
    geometry_elevatedpoint_view_kvvehp.geoidUndulation,
    geometry_elevatedpoint_view_kvvehp.verticalDatum,
    geometry_elevatedpoint_view_kvvehp.verticalAccuracy,
    geometry_elevatedpoint_view_kvvehp.horizontalAccuracy,
    organisation_unit_pt_desgug.title,
    organisation_unit_pt_desgug.nilreason[1],
    organisation_unit_pt_desgug.href
order by passengerservice.identifier, passengerservice_ts.sequence_number, passengerservice_ts.correction_number DESC;
create index on service.passengerservice_view (id);
-- PilotControlledLightingTimeSliceType
-- ['notes.note_view', 'airport_heliport.lightactivation_view']
drop materialized view if exists service.pilotcontrolledlighting_view cascade;
create materialized view service.pilotcontrolledlighting_view as
select distinct on (pilotcontrolledlighting.identifier,pilotcontrolledlighting_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.pilotcontrolledlighting.id,
    service.pilotcontrolledlighting_ts.id as ts_id,
    service.pilotcontrolledlighting_tsp.id as tsp_id,
    service.pilotcontrolledlighting.identifier,
    service.pilotcontrolledlighting_ts.interpretation,
    service.pilotcontrolledlighting_ts.sequence_number,
    service.pilotcontrolledlighting_ts.correction_number,
    service.pilotcontrolledlighting_ts.valid_time_begin,
    service.pilotcontrolledlighting_ts.valid_time_end,
    service.pilotcontrolledlighting_ts.feature_lifetime_begin,
    service.pilotcontrolledlighting_ts.feature_lifetime_end,
    coalesce(cast(service.pilotcontrolledlighting_ts.type_value as varchar), '(' || service.pilotcontrolledlighting_ts.type_nilreason || ')') as type,
    coalesce(cast(service.pilotcontrolledlighting_ts.intensitysteps_value as varchar), '(' || service.pilotcontrolledlighting_ts.intensitysteps_nilreason || ')') as intensitysteps,
    coalesce(cast(service.pilotcontrolledlighting_ts.standbyintensity_value as varchar), '(' || service.pilotcontrolledlighting_ts.standbyintensity_nilreason || ')') as standbyintensity,
    coalesce(cast(service.pilotcontrolledlighting_ts.activationinstruction_value as varchar), '(' || service.pilotcontrolledlighting_ts.activationinstruction_nilreason || ')') as activationinstruction,
    coalesce(cast(service.pilotcontrolledlighting_ts.duration_value as varchar) || ' ' || service.pilotcontrolledlighting_ts.duration_uom, '(' || service.pilotcontrolledlighting_ts.duration_nilreason || ')') as duration,
    coalesce(cast(service.pilotcontrolledlighting_ts.radiofrequency_value as varchar) || ' ' || service.pilotcontrolledlighting_ts.radiofrequency_uom, '(' || service.pilotcontrolledlighting_ts.radiofrequency_nilreason || ')') as radiofrequency,
    jsonb_agg(airport_heliport_lightactivation_view_vermvj.id) AS controlledlightintensity,
    jsonb_agg(notes_note_view_gdwmsb.*) AS annotation
from service.pilotcontrolledlighting 
inner join master_join mj2 on service.pilotcontrolledlighting.id = mj2.source_id
inner join service.pilotcontrolledlighting_tsp on mj2.target_id = service.pilotcontrolledlighting_tsp.id
inner join service.pilotcontrolledlighting_ts on service.pilotcontrolledlighting_tsp.pilotcontrolledlightingtimeslice_id = service.pilotcontrolledlighting_ts.id
left join master_join master_join_avfesy on service.pilotcontrolledlighting_ts.id = master_join_avfesy.source_id
left join airport_heliport.lightactivation_view airport_heliport_lightactivation_view_vermvj on master_join_avfesy.target_id = airport_heliport_lightactivation_view_vermvj.id
left join master_join master_join_jsemtb on service.pilotcontrolledlighting_ts.id = master_join_jsemtb.source_id
left join notes.note_view notes_note_view_gdwmsb on master_join_jsemtb.target_id = notes_note_view_gdwmsb.id
where service.pilotcontrolledlighting.feature_status = 'APPROVED'
  and service.pilotcontrolledlighting_ts.feature_status = 'APPROVED'
group by
    service.pilotcontrolledlighting.id,
    service.pilotcontrolledlighting_ts.id,
    service.pilotcontrolledlighting_tsp.id,
    service.pilotcontrolledlighting.identifier,
    service.pilotcontrolledlighting_ts.interpretation,
    service.pilotcontrolledlighting_ts.sequence_number,
    service.pilotcontrolledlighting_ts.correction_number,
    service.pilotcontrolledlighting_ts.valid_time_begin,
    service.pilotcontrolledlighting_ts.valid_time_end,
    service.pilotcontrolledlighting_ts.feature_lifetime_begin,
    service.pilotcontrolledlighting_ts.feature_lifetime_end,
    service.pilotcontrolledlighting_ts.type_value,
    service.pilotcontrolledlighting_ts.type_nilreason,
    service.pilotcontrolledlighting_ts.intensitysteps_value,
    service.pilotcontrolledlighting_ts.intensitysteps_nilreason,
    service.pilotcontrolledlighting_ts.standbyintensity_value,
    service.pilotcontrolledlighting_ts.standbyintensity_nilreason,
    service.pilotcontrolledlighting_ts.activationinstruction_value,
    service.pilotcontrolledlighting_ts.activationinstruction_nilreason,
    service.pilotcontrolledlighting_ts.duration_value,
    service.pilotcontrolledlighting_ts.duration_uom,
    service.pilotcontrolledlighting_ts.duration_nilreason,
    service.pilotcontrolledlighting_ts.radiofrequency_value,
    service.pilotcontrolledlighting_ts.radiofrequency_uom,
    service.pilotcontrolledlighting_ts.radiofrequency_nilreason
order by pilotcontrolledlighting.identifier, pilotcontrolledlighting_ts.sequence_number, pilotcontrolledlighting_ts.correction_number DESC;
create index on service.pilotcontrolledlighting_view (id);
-- PrecisionApproachRadarTimeSliceType
-- ['surveillance.reflector_view', 'geometry.elevatedpoint_view', 'notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists surveillance.precisionapproachradar_view cascade;
create materialized view surveillance.precisionapproachradar_view as
select distinct on (precisionapproachradar.identifier,precisionapproachradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.precisionapproachradar.id,
    surveillance.precisionapproachradar_ts.id as ts_id,
    surveillance.precisionapproachradar_tsp.id as tsp_id,
    surveillance.precisionapproachradar.identifier,
    surveillance.precisionapproachradar_ts.interpretation,
    surveillance.precisionapproachradar_ts.sequence_number,
    surveillance.precisionapproachradar_ts.correction_number,
    surveillance.precisionapproachradar_ts.valid_time_begin,
    surveillance.precisionapproachradar_ts.valid_time_end,
    surveillance.precisionapproachradar_ts.feature_lifetime_begin,
    surveillance.precisionapproachradar_ts.feature_lifetime_end,
    coalesce(cast(surveillance.precisionapproachradar_ts.name_value as varchar), '(' || surveillance.precisionapproachradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.precisionapproachradar_ts.serialnumber_value as varchar), '(' || surveillance.precisionapproachradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.precisionapproachradar_ts.dualchannel_value as varchar), '(' || surveillance.precisionapproachradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.precisionapproachradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.precisionapproachradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.precisionapproachradar_ts.standbypower_value as varchar), '(' || surveillance.precisionapproachradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.precisionapproachradar_ts.digital_value as varchar), '(' || surveillance.precisionapproachradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.precisionapproachradar_ts.militaryuseonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.specialuseonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.magneticvariation_value as varchar), '(' || surveillance.precisionapproachradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.precisionapproachradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.precisionapproachradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.precisionapproachradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.precisionapproachradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.precisionapproachradar_ts.precisionapproachradartype_value as varchar), '(' || surveillance.precisionapproachradar_ts.precisionapproachradartype_nilreason || ')') as precisionapproachradartype,
    coalesce(cast(surveillance.precisionapproachradar_ts.slope_value as varchar), '(' || surveillance.precisionapproachradar_ts.slope_nilreason || ')') as slope,
    coalesce(cast(surveillance.precisionapproachradar_ts.slopeaccuracy_value as varchar), '(' || surveillance.precisionapproachradar_ts.slopeaccuracy_nilreason || ')') as slopeaccuracy,
    coalesce(cast(surveillance.precisionapproachradar_ts.range_value as varchar) || ' ' || surveillance.precisionapproachradar_ts.range_uom, '(' || surveillance.precisionapproachradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.precisionapproachradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.precisionapproachradar_ts.rangeaccuracy_uom, '(' || surveillance.precisionapproachradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    geometry_elevatedpoint_view_ldxeos.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_ldxeos.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_ldxeos.geom) AS location_latitude,
    geometry_elevatedpoint_view_ldxeos.elevation AS location_elevation,
    geometry_elevatedpoint_view_ldxeos.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_ldxeos.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_ldxeos.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_ldxeos.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_ymcfal.*) AS annotation,
    jsonb_agg(surveillance_reflector_view_nzbwrf.id) AS reflector
from surveillance.precisionapproachradar 
inner join master_join mj2 on surveillance.precisionapproachradar.id = mj2.source_id
inner join surveillance.precisionapproachradar_tsp on mj2.target_id = surveillance.precisionapproachradar_tsp.id
inner join surveillance.precisionapproachradar_ts on surveillance.precisionapproachradar_tsp.precisionapproachradartimeslice_id = surveillance.precisionapproachradar_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_ldxeos on surveillance.precisionapproachradar_ts.location_id = geometry_elevatedpoint_view_ldxeos.id
left join master_join master_join_vjpofz on surveillance.precisionapproachradar_ts.id = master_join_vjpofz.source_id
left join shared.contactinformation_view shared_contactinformation_view_giwvpj on master_join_vjpofz.target_id = shared_contactinformation_view_giwvpj.id
left join master_join master_join_gmhhfk on surveillance.precisionapproachradar_ts.id = master_join_gmhhfk.source_id
left join notes.note_view notes_note_view_ymcfal on master_join_gmhhfk.target_id = notes_note_view_ymcfal.id
left join master_join master_join_atjoms on surveillance.precisionapproachradar_ts.id = master_join_atjoms.source_id
left join surveillance.reflector_view surveillance_reflector_view_nzbwrf on master_join_atjoms.target_id = surveillance_reflector_view_nzbwrf.id
where surveillance.precisionapproachradar.feature_status = 'APPROVED'
  and surveillance.precisionapproachradar_ts.feature_status = 'APPROVED'
group by
    surveillance.precisionapproachradar.id,
    surveillance.precisionapproachradar_ts.id,
    surveillance.precisionapproachradar_tsp.id,
    surveillance.precisionapproachradar.identifier,
    surveillance.precisionapproachradar_ts.interpretation,
    surveillance.precisionapproachradar_ts.sequence_number,
    surveillance.precisionapproachradar_ts.correction_number,
    surveillance.precisionapproachradar_ts.valid_time_begin,
    surveillance.precisionapproachradar_ts.valid_time_end,
    surveillance.precisionapproachradar_ts.feature_lifetime_begin,
    surveillance.precisionapproachradar_ts.feature_lifetime_end,
    surveillance.precisionapproachradar_ts.name_value,
    surveillance.precisionapproachradar_ts.name_nilreason,
    surveillance.precisionapproachradar_ts.serialnumber_value,
    surveillance.precisionapproachradar_ts.serialnumber_nilreason,
    surveillance.precisionapproachradar_ts.dualchannel_value,
    surveillance.precisionapproachradar_ts.dualchannel_nilreason,
    surveillance.precisionapproachradar_ts.movingtargetindicator_value,
    surveillance.precisionapproachradar_ts.movingtargetindicator_nilreason,
    surveillance.precisionapproachradar_ts.standbypower_value,
    surveillance.precisionapproachradar_ts.standbypower_nilreason,
    surveillance.precisionapproachradar_ts.digital_value,
    surveillance.precisionapproachradar_ts.digital_nilreason,
    surveillance.precisionapproachradar_ts.militaryuseonly_value,
    surveillance.precisionapproachradar_ts.militaryuseonly_nilreason,
    surveillance.precisionapproachradar_ts.specialuseonly_value,
    surveillance.precisionapproachradar_ts.specialuseonly_nilreason,
    surveillance.precisionapproachradar_ts.specialaircraftonly_value,
    surveillance.precisionapproachradar_ts.specialaircraftonly_nilreason,
    surveillance.precisionapproachradar_ts.magneticvariation_value,
    surveillance.precisionapproachradar_ts.magneticvariation_nilreason,
    surveillance.precisionapproachradar_ts.magneticvariationaccuracy_value,
    surveillance.precisionapproachradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.precisionapproachradar_ts.datemagneticvariation_value,
    surveillance.precisionapproachradar_ts.datemagneticvariation_nilreason,
    surveillance.precisionapproachradar_ts.precisionapproachradartype_value,
    surveillance.precisionapproachradar_ts.precisionapproachradartype_nilreason,
    surveillance.precisionapproachradar_ts.slope_value,
    surveillance.precisionapproachradar_ts.slope_nilreason,
    surveillance.precisionapproachradar_ts.slopeaccuracy_value,
    surveillance.precisionapproachradar_ts.slopeaccuracy_nilreason,
    surveillance.precisionapproachradar_ts.range_value,
    surveillance.precisionapproachradar_ts.range_uom,
    surveillance.precisionapproachradar_ts.range_nilreason,
    surveillance.precisionapproachradar_ts.rangeaccuracy_value,
    surveillance.precisionapproachradar_ts.rangeaccuracy_uom,
    surveillance.precisionapproachradar_ts.rangeaccuracy_nilreason,
    geometry_elevatedpoint_view_ldxeos.geom,
    geometry_elevatedpoint_view_ldxeos.elevation,
    geometry_elevatedpoint_view_ldxeos.geoidUndulation,
    geometry_elevatedpoint_view_ldxeos.verticalDatum,
    geometry_elevatedpoint_view_ldxeos.verticalAccuracy,
    geometry_elevatedpoint_view_ldxeos.horizontalAccuracy
order by precisionapproachradar.identifier, precisionapproachradar_ts.sequence_number, precisionapproachradar_ts.correction_number DESC;
create index on surveillance.precisionapproachradar_view (id);
-- PrimarySurveillanceRadarTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view', 'surveillance.surveillancegroundstation_view', 'shared.contactinformation_view']
drop materialized view if exists surveillance.primarysurveillanceradar_view cascade;
create materialized view surveillance.primarysurveillanceradar_view as
select distinct on (primarysurveillanceradar.identifier,primarysurveillanceradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.primarysurveillanceradar.id,
    surveillance.primarysurveillanceradar_ts.id as ts_id,
    surveillance.primarysurveillanceradar_tsp.id as tsp_id,
    surveillance.primarysurveillanceradar.identifier,
    surveillance.primarysurveillanceradar_ts.interpretation,
    surveillance.primarysurveillanceradar_ts.sequence_number,
    surveillance.primarysurveillanceradar_ts.correction_number,
    surveillance.primarysurveillanceradar_ts.valid_time_begin,
    surveillance.primarysurveillanceradar_ts.valid_time_end,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_end,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.name_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.serialnumber_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.dualchannel_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.standbypower_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.digital_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.militaryuseonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.specialuseonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.magneticvariation_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_nilreason || ')') as verticalcoverageazimuth,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.antennatiltfixed_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.antennatiltfixed_nilreason || ')') as antennatiltfixed,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.tiltangle_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.tiltangle_nilreason || ')') as tiltangle,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_nilreason || ')') as automatedradarterminalsystem,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.type_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.type_nilreason || ')') as type,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.range_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.range_uom, '(' || surveillance.primarysurveillanceradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.rangeaccuracy_uom, '(' || surveillance.primarysurveillanceradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_uom, '(' || surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_nilreason || ')') as verticalcoveragealtitude,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_uom, '(' || surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_nilreason || ')') as verticalcoveragedistance,
    geometry_elevatedpoint_view_girqfe.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_girqfe.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_girqfe.geom) AS location_latitude,
    geometry_elevatedpoint_view_girqfe.elevation AS location_elevation,
    geometry_elevatedpoint_view_girqfe.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_girqfe.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_girqfe.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_girqfe.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_zlqvgk.*) AS annotation,
    jsonb_agg(surveillance_surveillancegroundstation_view_gtugvu.id) AS groundstation
from surveillance.primarysurveillanceradar 
inner join master_join mj2 on surveillance.primarysurveillanceradar.id = mj2.source_id
inner join surveillance.primarysurveillanceradar_tsp on mj2.target_id = surveillance.primarysurveillanceradar_tsp.id
inner join surveillance.primarysurveillanceradar_ts on surveillance.primarysurveillanceradar_tsp.primarysurveillanceradartimeslice_id = surveillance.primarysurveillanceradar_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_girqfe on surveillance.primarysurveillanceradar_ts.location_id = geometry_elevatedpoint_view_girqfe.id
left join master_join master_join_vteadc on surveillance.primarysurveillanceradar_ts.id = master_join_vteadc.source_id
left join shared.contactinformation_view shared_contactinformation_view_bpokyr on master_join_vteadc.target_id = shared_contactinformation_view_bpokyr.id
left join master_join master_join_maizsw on surveillance.primarysurveillanceradar_ts.id = master_join_maizsw.source_id
left join notes.note_view notes_note_view_zlqvgk on master_join_maizsw.target_id = notes_note_view_zlqvgk.id
left join master_join master_join_vvnaif on surveillance.primarysurveillanceradar_ts.id = master_join_vvnaif.source_id
left join surveillance.surveillancegroundstation_view surveillance_surveillancegroundstation_view_gtugvu on master_join_vvnaif.target_id = surveillance_surveillancegroundstation_view_gtugvu.id
where surveillance.primarysurveillanceradar.feature_status = 'APPROVED'
  and surveillance.primarysurveillanceradar_ts.feature_status = 'APPROVED'
group by
    surveillance.primarysurveillanceradar.id,
    surveillance.primarysurveillanceradar_ts.id,
    surveillance.primarysurveillanceradar_tsp.id,
    surveillance.primarysurveillanceradar.identifier,
    surveillance.primarysurveillanceradar_ts.interpretation,
    surveillance.primarysurveillanceradar_ts.sequence_number,
    surveillance.primarysurveillanceradar_ts.correction_number,
    surveillance.primarysurveillanceradar_ts.valid_time_begin,
    surveillance.primarysurveillanceradar_ts.valid_time_end,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_end,
    surveillance.primarysurveillanceradar_ts.name_value,
    surveillance.primarysurveillanceradar_ts.name_nilreason,
    surveillance.primarysurveillanceradar_ts.serialnumber_value,
    surveillance.primarysurveillanceradar_ts.serialnumber_nilreason,
    surveillance.primarysurveillanceradar_ts.dualchannel_value,
    surveillance.primarysurveillanceradar_ts.dualchannel_nilreason,
    surveillance.primarysurveillanceradar_ts.movingtargetindicator_value,
    surveillance.primarysurveillanceradar_ts.movingtargetindicator_nilreason,
    surveillance.primarysurveillanceradar_ts.standbypower_value,
    surveillance.primarysurveillanceradar_ts.standbypower_nilreason,
    surveillance.primarysurveillanceradar_ts.digital_value,
    surveillance.primarysurveillanceradar_ts.digital_nilreason,
    surveillance.primarysurveillanceradar_ts.militaryuseonly_value,
    surveillance.primarysurveillanceradar_ts.militaryuseonly_nilreason,
    surveillance.primarysurveillanceradar_ts.specialuseonly_value,
    surveillance.primarysurveillanceradar_ts.specialuseonly_nilreason,
    surveillance.primarysurveillanceradar_ts.specialaircraftonly_value,
    surveillance.primarysurveillanceradar_ts.specialaircraftonly_nilreason,
    surveillance.primarysurveillanceradar_ts.magneticvariation_value,
    surveillance.primarysurveillanceradar_ts.magneticvariation_nilreason,
    surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_value,
    surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.primarysurveillanceradar_ts.datemagneticvariation_value,
    surveillance.primarysurveillanceradar_ts.datemagneticvariation_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_value,
    surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_nilreason,
    surveillance.primarysurveillanceradar_ts.antennatiltfixed_value,
    surveillance.primarysurveillanceradar_ts.antennatiltfixed_nilreason,
    surveillance.primarysurveillanceradar_ts.tiltangle_value,
    surveillance.primarysurveillanceradar_ts.tiltangle_nilreason,
    surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_value,
    surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_nilreason,
    surveillance.primarysurveillanceradar_ts.type_value,
    surveillance.primarysurveillanceradar_ts.type_nilreason,
    surveillance.primarysurveillanceradar_ts.range_value,
    surveillance.primarysurveillanceradar_ts.range_uom,
    surveillance.primarysurveillanceradar_ts.range_nilreason,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_value,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_uom,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_value,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_uom,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_value,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_uom,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_nilreason,
    geometry_elevatedpoint_view_girqfe.geom,
    geometry_elevatedpoint_view_girqfe.elevation,
    geometry_elevatedpoint_view_girqfe.geoidUndulation,
    geometry_elevatedpoint_view_girqfe.verticalDatum,
    geometry_elevatedpoint_view_girqfe.verticalAccuracy,
    geometry_elevatedpoint_view_girqfe.horizontalAccuracy
order by primarysurveillanceradar.identifier, primarysurveillanceradar_ts.sequence_number, primarysurveillanceradar_ts.correction_number DESC;
create index on surveillance.primarysurveillanceradar_view (id);
-- ProcedureDMETimeSliceType
-- ['notes.note_view']
drop materialized view if exists procedure.proceduredme_view cascade;
create materialized view procedure.proceduredme_view as
select distinct on (proceduredme.identifier,proceduredme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.proceduredme.id,
    procedure.proceduredme_ts.id as ts_id,
    procedure.proceduredme_tsp.id as tsp_id,
    procedure.proceduredme.identifier,
    procedure.proceduredme_ts.interpretation,
    procedure.proceduredme_ts.sequence_number,
    procedure.proceduredme_ts.correction_number,
    procedure.proceduredme_ts.valid_time_begin,
    procedure.proceduredme_ts.valid_time_end,
    procedure.proceduredme_ts.feature_lifetime_begin,
    procedure.proceduredme_ts.feature_lifetime_end,
    coalesce(cast(procedure.proceduredme_ts.criticaldme_value as varchar), '(' || procedure.proceduredme_ts.criticaldme_nilreason || ')') as criticaldme,
    coalesce(cast(procedure.proceduredme_ts.satisfactory_value as varchar), '(' || procedure.proceduredme_ts.satisfactory_nilreason || ')') as satisfactory,
    coalesce(cast(navaids_points_dme_pt_icjwzr.title as varchar), '(' || navaids_points_dme_pt_icjwzr.nilreason[1] || ')') AS dme,
    navaids_points_dme_pt_icjwzr.href AS dme_href,
    jsonb_agg(notes_note_view_njfwcb.*) AS annotation
from procedure.proceduredme 
inner join master_join mj2 on procedure.proceduredme.id = mj2.source_id
inner join procedure.proceduredme_tsp on mj2.target_id = procedure.proceduredme_tsp.id
inner join procedure.proceduredme_ts on procedure.proceduredme_tsp.proceduredmetimeslice_id = procedure.proceduredme_ts.id
left join navaids_points.dme_pt navaids_points_dme_pt_icjwzr on procedure.proceduredme_ts.dme_id = navaids_points_dme_pt_icjwzr.id
left join master_join master_join_dkbieq on procedure.proceduredme_ts.id = master_join_dkbieq.source_id
left join notes.note_view notes_note_view_njfwcb on master_join_dkbieq.target_id = notes_note_view_njfwcb.id
where procedure.proceduredme.feature_status = 'APPROVED'
  and procedure.proceduredme_ts.feature_status = 'APPROVED'
group by
    procedure.proceduredme.id,
    procedure.proceduredme_ts.id,
    procedure.proceduredme_tsp.id,
    procedure.proceduredme.identifier,
    procedure.proceduredme_ts.interpretation,
    procedure.proceduredme_ts.sequence_number,
    procedure.proceduredme_ts.correction_number,
    procedure.proceduredme_ts.valid_time_begin,
    procedure.proceduredme_ts.valid_time_end,
    procedure.proceduredme_ts.feature_lifetime_begin,
    procedure.proceduredme_ts.feature_lifetime_end,
    procedure.proceduredme_ts.criticaldme_value,
    procedure.proceduredme_ts.criticaldme_nilreason,
    procedure.proceduredme_ts.satisfactory_value,
    procedure.proceduredme_ts.satisfactory_nilreason,
    navaids_points_dme_pt_icjwzr.title,
    navaids_points_dme_pt_icjwzr.nilreason[1],
    navaids_points_dme_pt_icjwzr.href
order by proceduredme.identifier, proceduredme_ts.sequence_number, proceduredme_ts.correction_number DESC;
create index on procedure.proceduredme_view (id);
-- RadarSystemTimeSliceType
-- ['geometry.elevatedpoint_view', 'surveillance.radarcomponent_view', 'notes.note_view']
drop materialized view if exists surveillance.radarsystem_view cascade;
create materialized view surveillance.radarsystem_view as
select distinct on (radarsystem.identifier,radarsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.radarsystem.id,
    surveillance.radarsystem_ts.id as ts_id,
    surveillance.radarsystem_tsp.id as tsp_id,
    surveillance.radarsystem.identifier,
    surveillance.radarsystem_ts.interpretation,
    surveillance.radarsystem_ts.sequence_number,
    surveillance.radarsystem_ts.correction_number,
    surveillance.radarsystem_ts.valid_time_begin,
    surveillance.radarsystem_ts.valid_time_end,
    surveillance.radarsystem_ts.feature_lifetime_begin,
    surveillance.radarsystem_ts.feature_lifetime_end,
    coalesce(cast(surveillance.radarsystem_ts.type_value as varchar), '(' || surveillance.radarsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(surveillance.radarsystem_ts.model_value as varchar), '(' || surveillance.radarsystem_ts.model_nilreason || ')') as model,
    coalesce(cast(surveillance.radarsystem_ts.generalterrainmonitor_value as varchar), '(' || surveillance.radarsystem_ts.generalterrainmonitor_nilreason || ')') as generalterrainmonitor,
    coalesce(cast(surveillance.radarsystem_ts.broadcastidentifier_value as varchar), '(' || surveillance.radarsystem_ts.broadcastidentifier_nilreason || ')') as broadcastidentifier,
    coalesce(cast(airport_heliport_airportheliport_pt_qtrllh.title as varchar), '(' || airport_heliport_airportheliport_pt_qtrllh.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_qtrllh.href AS airportheliport_href,
    geometry_elevatedpoint_view_uyojhu.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_uyojhu.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_uyojhu.geom) AS location_latitude,
    geometry_elevatedpoint_view_uyojhu.elevation AS location_elevation,
    geometry_elevatedpoint_view_uyojhu.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_uyojhu.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_uyojhu.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_uyojhu.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(surveillance_radarcomponent_view_dugfck.id) AS radarequipment,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ccvhey.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ccvhey.title AS varchar), '(' || organisation_organisationauthority_pt_ccvhey.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ccvhey.href)) AS office,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runway_pt_wnnqie.id,
    'title', coalesce(cast(airport_heliport_runway_pt_wnnqie.title AS varchar), '(' || airport_heliport_runway_pt_wnnqie.nilreason[1] || ')'),
    'href', airport_heliport_runway_pt_wnnqie.href)) AS parrunway,
    jsonb_agg(notes_note_view_mwrutm.*) AS annotation
from surveillance.radarsystem 
inner join master_join mj2 on surveillance.radarsystem.id = mj2.source_id
inner join surveillance.radarsystem_tsp on mj2.target_id = surveillance.radarsystem_tsp.id
inner join surveillance.radarsystem_ts on surveillance.radarsystem_tsp.radarsystemtimeslice_id = surveillance.radarsystem_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_qtrllh on surveillance.radarsystem_ts.airportheliport_id = airport_heliport_airportheliport_pt_qtrllh.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_uyojhu on surveillance.radarsystem_ts.location_id = geometry_elevatedpoint_view_uyojhu.id
left join master_join master_join_nbbyzk on surveillance.radarsystem_ts.id = master_join_nbbyzk.source_id
left join surveillance.radarcomponent_view surveillance_radarcomponent_view_dugfck on master_join_nbbyzk.target_id = surveillance_radarcomponent_view_dugfck.id
left join master_join master_join_scwpgm on surveillance.radarsystem_ts.id = master_join_scwpgm.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ccvhey on master_join_scwpgm.target_id = organisation_organisationauthority_pt_ccvhey.id
left join master_join master_join_rgpyaj on surveillance.radarsystem_ts.id = master_join_rgpyaj.source_id
left join airport_heliport.runway_pt airport_heliport_runway_pt_wnnqie on master_join_rgpyaj.target_id = airport_heliport_runway_pt_wnnqie.id
left join master_join master_join_djbuld on surveillance.radarsystem_ts.id = master_join_djbuld.source_id
left join notes.note_view notes_note_view_mwrutm on master_join_djbuld.target_id = notes_note_view_mwrutm.id
where surveillance.radarsystem.feature_status = 'APPROVED'
  and surveillance.radarsystem_ts.feature_status = 'APPROVED'
group by
    surveillance.radarsystem.id,
    surveillance.radarsystem_ts.id,
    surveillance.radarsystem_tsp.id,
    surveillance.radarsystem.identifier,
    surveillance.radarsystem_ts.interpretation,
    surveillance.radarsystem_ts.sequence_number,
    surveillance.radarsystem_ts.correction_number,
    surveillance.radarsystem_ts.valid_time_begin,
    surveillance.radarsystem_ts.valid_time_end,
    surveillance.radarsystem_ts.feature_lifetime_begin,
    surveillance.radarsystem_ts.feature_lifetime_end,
    surveillance.radarsystem_ts.type_value,
    surveillance.radarsystem_ts.type_nilreason,
    surveillance.radarsystem_ts.model_value,
    surveillance.radarsystem_ts.model_nilreason,
    surveillance.radarsystem_ts.generalterrainmonitor_value,
    surveillance.radarsystem_ts.generalterrainmonitor_nilreason,
    surveillance.radarsystem_ts.broadcastidentifier_value,
    surveillance.radarsystem_ts.broadcastidentifier_nilreason,
    airport_heliport_airportheliport_pt_qtrllh.title,
    airport_heliport_airportheliport_pt_qtrllh.nilreason[1],
    airport_heliport_airportheliport_pt_qtrllh.href,
    geometry_elevatedpoint_view_uyojhu.geom,
    geometry_elevatedpoint_view_uyojhu.elevation,
    geometry_elevatedpoint_view_uyojhu.geoidUndulation,
    geometry_elevatedpoint_view_uyojhu.verticalDatum,
    geometry_elevatedpoint_view_uyojhu.verticalAccuracy,
    geometry_elevatedpoint_view_uyojhu.horizontalAccuracy
order by radarsystem.identifier, radarsystem_ts.sequence_number, radarsystem_ts.correction_number DESC;
create index on surveillance.radarsystem_view (id);
-- RadioCommunicationChannelTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.radiocommunicationoperationalstatus_view', 'notes.note_view']
drop materialized view if exists service.radiocommunicationchannel_view cascade;
create materialized view service.radiocommunicationchannel_view as
select distinct on (radiocommunicationchannel.identifier,radiocommunicationchannel_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.radiocommunicationchannel.id,
    service.radiocommunicationchannel_ts.id as ts_id,
    service.radiocommunicationchannel_tsp.id as tsp_id,
    service.radiocommunicationchannel.identifier,
    service.radiocommunicationchannel_ts.interpretation,
    service.radiocommunicationchannel_ts.sequence_number,
    service.radiocommunicationchannel_ts.correction_number,
    service.radiocommunicationchannel_ts.valid_time_begin,
    service.radiocommunicationchannel_ts.valid_time_end,
    service.radiocommunicationchannel_ts.feature_lifetime_begin,
    service.radiocommunicationchannel_ts.feature_lifetime_end,
    coalesce(cast(service.radiocommunicationchannel_ts.mode_value as varchar), '(' || service.radiocommunicationchannel_ts.mode_nilreason || ')') as mode,
    coalesce(cast(service.radiocommunicationchannel_ts.rank_value as varchar), '(' || service.radiocommunicationchannel_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.radiocommunicationchannel_ts.channel_value as varchar), '(' || service.radiocommunicationchannel_ts.channel_nilreason || ')') as channel,
    coalesce(cast(service.radiocommunicationchannel_ts.logon_value as varchar), '(' || service.radiocommunicationchannel_ts.logon_nilreason || ')') as logon,
    coalesce(cast(service.radiocommunicationchannel_ts.emissiontype_value as varchar), '(' || service.radiocommunicationchannel_ts.emissiontype_nilreason || ')') as emissiontype,
    coalesce(cast(service.radiocommunicationchannel_ts.selectivecall_value as varchar), '(' || service.radiocommunicationchannel_ts.selectivecall_nilreason || ')') as selectivecall,
    coalesce(cast(service.radiocommunicationchannel_ts.flightchecked_value as varchar), '(' || service.radiocommunicationchannel_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(service.radiocommunicationchannel_ts.trafficdirection_value as varchar), '(' || service.radiocommunicationchannel_ts.trafficdirection_nilreason || ')') as trafficdirection,
    coalesce(cast(service.radiocommunicationchannel_ts.frequencytransmission_value as varchar) || ' ' || service.radiocommunicationchannel_ts.frequencytransmission_uom, '(' || service.radiocommunicationchannel_ts.frequencytransmission_nilreason || ')') as frequencytransmission,
    coalesce(cast(service.radiocommunicationchannel_ts.frequencyreception_value as varchar) || ' ' || service.radiocommunicationchannel_ts.frequencyreception_uom, '(' || service.radiocommunicationchannel_ts.frequencyreception_nilreason || ')') as frequencyreception,
    ST_Collect(geometry_elevatedpoint_view_shhfod.geom) AS location_geom,
    jsonb_agg(service_radiocommunicationoperationalstatus_view_gcohny.id) AS availability,
    jsonb_agg(notes_note_view_upzsmx.*) AS annotation
from service.radiocommunicationchannel 
inner join master_join mj2 on service.radiocommunicationchannel.id = mj2.source_id
inner join service.radiocommunicationchannel_tsp on mj2.target_id = service.radiocommunicationchannel_tsp.id
inner join service.radiocommunicationchannel_ts on service.radiocommunicationchannel_tsp.radiocommunicationchanneltimeslice_id = service.radiocommunicationchannel_ts.id
left join master_join master_join_vohlgf on service.radiocommunicationchannel_ts.id = master_join_vohlgf.source_id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_shhfod on master_join_vohlgf.target_id = geometry_elevatedpoint_view_shhfod.id
left join master_join master_join_sewklp on service.radiocommunicationchannel_ts.id = master_join_sewklp.source_id
left join service.radiocommunicationoperationalstatus_view service_radiocommunicationoperationalstatus_view_gcohny on master_join_sewklp.target_id = service_radiocommunicationoperationalstatus_view_gcohny.id
left join master_join master_join_jqunig on service.radiocommunicationchannel_ts.id = master_join_jqunig.source_id
left join notes.note_view notes_note_view_upzsmx on master_join_jqunig.target_id = notes_note_view_upzsmx.id
where service.radiocommunicationchannel.feature_status = 'APPROVED'
  and service.radiocommunicationchannel_ts.feature_status = 'APPROVED'
group by
    service.radiocommunicationchannel.id,
    service.radiocommunicationchannel_ts.id,
    service.radiocommunicationchannel_tsp.id,
    service.radiocommunicationchannel.identifier,
    service.radiocommunicationchannel_ts.interpretation,
    service.radiocommunicationchannel_ts.sequence_number,
    service.radiocommunicationchannel_ts.correction_number,
    service.radiocommunicationchannel_ts.valid_time_begin,
    service.radiocommunicationchannel_ts.valid_time_end,
    service.radiocommunicationchannel_ts.feature_lifetime_begin,
    service.radiocommunicationchannel_ts.feature_lifetime_end,
    service.radiocommunicationchannel_ts.mode_value,
    service.radiocommunicationchannel_ts.mode_nilreason,
    service.radiocommunicationchannel_ts.rank_value,
    service.radiocommunicationchannel_ts.rank_nilreason,
    service.radiocommunicationchannel_ts.channel_value,
    service.radiocommunicationchannel_ts.channel_nilreason,
    service.radiocommunicationchannel_ts.logon_value,
    service.radiocommunicationchannel_ts.logon_nilreason,
    service.radiocommunicationchannel_ts.emissiontype_value,
    service.radiocommunicationchannel_ts.emissiontype_nilreason,
    service.radiocommunicationchannel_ts.selectivecall_value,
    service.radiocommunicationchannel_ts.selectivecall_nilreason,
    service.radiocommunicationchannel_ts.flightchecked_value,
    service.radiocommunicationchannel_ts.flightchecked_nilreason,
    service.radiocommunicationchannel_ts.trafficdirection_value,
    service.radiocommunicationchannel_ts.trafficdirection_nilreason,
    service.radiocommunicationchannel_ts.frequencytransmission_value,
    service.radiocommunicationchannel_ts.frequencytransmission_uom,
    service.radiocommunicationchannel_ts.frequencytransmission_nilreason,
    service.radiocommunicationchannel_ts.frequencyreception_value,
    service.radiocommunicationchannel_ts.frequencyreception_uom,
    service.radiocommunicationchannel_ts.frequencyreception_nilreason
order by radiocommunicationchannel.identifier, radiocommunicationchannel_ts.sequence_number, radiocommunicationchannel_ts.correction_number DESC;
create index on service.radiocommunicationchannel_view (id);
-- RadioFrequencyAreaTimeSliceType
-- ['geometry.surface_view', 'notes.note_view', 'shared.circlesector_view']
drop materialized view if exists shared.radiofrequencyarea_view cascade;
create materialized view shared.radiofrequencyarea_view as
select distinct on (radiofrequencyarea.identifier,radiofrequencyarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.radiofrequencyarea.id,
    shared.radiofrequencyarea_ts.id as ts_id,
    shared.radiofrequencyarea_tsp.id as tsp_id,
    shared.radiofrequencyarea.identifier,
    shared.radiofrequencyarea_ts.interpretation,
    shared.radiofrequencyarea_ts.sequence_number,
    shared.radiofrequencyarea_ts.correction_number,
    shared.radiofrequencyarea_ts.valid_time_begin,
    shared.radiofrequencyarea_ts.valid_time_end,
    shared.radiofrequencyarea_ts.feature_lifetime_begin,
    shared.radiofrequencyarea_ts.feature_lifetime_end,
    coalesce(cast(shared.radiofrequencyarea_ts.type_value as varchar), '(' || shared.radiofrequencyarea_ts.type_nilreason || ')') as type,
    coalesce(cast(shared.radiofrequencyarea_ts.anglescallop_value as varchar), '(' || shared.radiofrequencyarea_ts.anglescallop_nilreason || ')') as anglescallop,
    coalesce(cast(shared.radiofrequencyarea_ts.signaltype_value as varchar), '(' || shared.radiofrequencyarea_ts.signaltype_nilreason || ')') as signaltype,
    coalesce(cast(service_radiocommunicationchannel_pt_avfvba.title as varchar), '(' || service_radiocommunicationchannel_pt_avfvba.nilreason[1] || ')') AS equipmentfrequency,
    service_radiocommunicationchannel_pt_avfvba.href AS equipmentfrequency_href,
    coalesce(cast(navaids_points_specialnavigationstation_pt_tnbdhz.title as varchar), '(' || navaids_points_specialnavigationstation_pt_tnbdhz.nilreason[1] || ')') AS equipmentspecialnavigationstation,
    navaids_points_specialnavigationstation_pt_tnbdhz.href AS equipmentspecialnavigationstation_href,
    coalesce(cast(surveillance_precisionapproachradar_pt_ozoxhl.title as varchar), '(' || surveillance_precisionapproachradar_pt_ozoxhl.nilreason[1] || ')') AS equipmentprecisionapproachradar,
    surveillance_precisionapproachradar_pt_ozoxhl.href AS equipmentprecisionapproachradar_href,
    coalesce(cast(surveillance_secondarysurveillanceradar_pt_scsmhl.title as varchar), '(' || surveillance_secondarysurveillanceradar_pt_scsmhl.nilreason[1] || ')') AS equipmentradar,
    surveillance_secondarysurveillanceradar_pt_scsmhl.href AS equipmentradar_href,
    jsonb_agg(shared_circlesector_view_ojlnfc.id) AS sector,
    ST_Collect(geometry_surface_view_rgtjgz.geom) AS extent_geom,
    jsonb_agg(notes_note_view_qflfka.*) AS annotation
from shared.radiofrequencyarea 
inner join master_join mj2 on shared.radiofrequencyarea.id = mj2.source_id
inner join shared.radiofrequencyarea_tsp on mj2.target_id = shared.radiofrequencyarea_tsp.id
inner join shared.radiofrequencyarea_ts on shared.radiofrequencyarea_tsp.radiofrequencyareatimeslice_id = shared.radiofrequencyarea_ts.id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_avfvba on shared.radiofrequencyarea_ts.equipment_frequency_id = service_radiocommunicationchannel_pt_avfvba.id
left join navaids_points.specialnavigationstation_pt navaids_points_specialnavigationstation_pt_tnbdhz on shared.radiofrequencyarea_ts.equipment_specialnavigationstation_id = navaids_points_specialnavigationstation_pt_tnbdhz.id
left join surveillance.precisionapproachradar_pt surveillance_precisionapproachradar_pt_ozoxhl on shared.radiofrequencyarea_ts.equipment_precisionapproachradar_id = surveillance_precisionapproachradar_pt_ozoxhl.id
left join surveillance.secondarysurveillanceradar_pt surveillance_secondarysurveillanceradar_pt_scsmhl on shared.radiofrequencyarea_ts.equipment_radar_id = surveillance_secondarysurveillanceradar_pt_scsmhl.id
left join master_join master_join_opfklp on shared.radiofrequencyarea_ts.id = master_join_opfklp.source_id
left join shared.circlesector_view shared_circlesector_view_ojlnfc on master_join_opfklp.target_id = shared_circlesector_view_ojlnfc.id
left join master_join master_join_blxdmk on shared.radiofrequencyarea_ts.id = master_join_blxdmk.source_id
left join geometry.surface_view geometry_surface_view_rgtjgz on master_join_blxdmk.target_id = geometry_surface_view_rgtjgz.id
left join master_join master_join_piykmr on shared.radiofrequencyarea_ts.id = master_join_piykmr.source_id
left join notes.note_view notes_note_view_qflfka on master_join_piykmr.target_id = notes_note_view_qflfka.id
where shared.radiofrequencyarea.feature_status = 'APPROVED'
  and shared.radiofrequencyarea_ts.feature_status = 'APPROVED'
group by
    shared.radiofrequencyarea.id,
    shared.radiofrequencyarea_ts.id,
    shared.radiofrequencyarea_tsp.id,
    shared.radiofrequencyarea.identifier,
    shared.radiofrequencyarea_ts.interpretation,
    shared.radiofrequencyarea_ts.sequence_number,
    shared.radiofrequencyarea_ts.correction_number,
    shared.radiofrequencyarea_ts.valid_time_begin,
    shared.radiofrequencyarea_ts.valid_time_end,
    shared.radiofrequencyarea_ts.feature_lifetime_begin,
    shared.radiofrequencyarea_ts.feature_lifetime_end,
    shared.radiofrequencyarea_ts.type_value,
    shared.radiofrequencyarea_ts.type_nilreason,
    shared.radiofrequencyarea_ts.anglescallop_value,
    shared.radiofrequencyarea_ts.anglescallop_nilreason,
    shared.radiofrequencyarea_ts.signaltype_value,
    shared.radiofrequencyarea_ts.signaltype_nilreason,
    service_radiocommunicationchannel_pt_avfvba.title,
    service_radiocommunicationchannel_pt_avfvba.nilreason[1],
    service_radiocommunicationchannel_pt_avfvba.href,
    navaids_points_specialnavigationstation_pt_tnbdhz.title,
    navaids_points_specialnavigationstation_pt_tnbdhz.nilreason[1],
    navaids_points_specialnavigationstation_pt_tnbdhz.href,
    surveillance_precisionapproachradar_pt_ozoxhl.title,
    surveillance_precisionapproachradar_pt_ozoxhl.nilreason[1],
    surveillance_precisionapproachradar_pt_ozoxhl.href,
    surveillance_secondarysurveillanceradar_pt_scsmhl.title,
    surveillance_secondarysurveillanceradar_pt_scsmhl.nilreason[1],
    surveillance_secondarysurveillanceradar_pt_scsmhl.href
order by radiofrequencyarea.identifier, radiofrequencyarea_ts.sequence_number, radiofrequencyarea_ts.correction_number DESC;
create index on shared.radiofrequencyarea_view (id);
-- RoadTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.road_view cascade;
create materialized view airport_heliport.road_view as
select distinct on (road.identifier,road_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.road.id,
    airport_heliport.road_ts.id as ts_id,
    airport_heliport.road_tsp.id as tsp_id,
    airport_heliport.road.identifier,
    airport_heliport.road_ts.interpretation,
    airport_heliport.road_ts.sequence_number,
    airport_heliport.road_ts.correction_number,
    airport_heliport.road_ts.valid_time_begin,
    airport_heliport.road_ts.valid_time_end,
    airport_heliport.road_ts.feature_lifetime_begin,
    airport_heliport.road_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.road_ts.designator_value as varchar), '(' || airport_heliport.road_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.road_ts.status_value as varchar), '(' || airport_heliport.road_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.road_ts.type_value as varchar), '(' || airport_heliport.road_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.road_ts.abandoned_value as varchar), '(' || airport_heliport.road_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport_airportheliport_pt_oyhyqi.title as varchar), '(' || airport_heliport_airportheliport_pt_oyhyqi.nilreason[1] || ')') AS associatedairport,
    airport_heliport_airportheliport_pt_oyhyqi.href AS associatedairport_href,
    airport_heliport_surfacecharacteristics_view_tpsttw.id AS surfaceproperties,
    geometry_elevatedsurface_view_eewida.geom AS surfaceextent_geom,
    geometry_elevatedsurface_view_eewida.elevation AS surfaceextent_elevation,
    geometry_elevatedsurface_view_eewida.geoidUndulation AS surfaceextent_geoidundulation,
    geometry_elevatedsurface_view_eewida.verticalDatum AS surfaceextent_verticaldatum,
    geometry_elevatedsurface_view_eewida.verticalAccuracy AS surfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_eewida.horizontalAccuracy AS surfaceextent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_aircraftstand_pt_mzvbfu.id,
    'title', coalesce(cast(airport_heliport_aircraftstand_pt_mzvbfu.title AS varchar), '(' || airport_heliport_aircraftstand_pt_mzvbfu.nilreason[1] || ')'),
    'href', airport_heliport_aircraftstand_pt_mzvbfu.href)) AS accessiblestand,
    jsonb_agg(notes_note_view_jhbovd.*) AS annotation
from airport_heliport.road 
inner join master_join mj2 on airport_heliport.road.id = mj2.source_id
inner join airport_heliport.road_tsp on mj2.target_id = airport_heliport.road_tsp.id
inner join airport_heliport.road_ts on airport_heliport.road_tsp.roadtimeslice_id = airport_heliport.road_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_oyhyqi on airport_heliport.road_ts.associatedairport_id = airport_heliport_airportheliport_pt_oyhyqi.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_tpsttw on airport_heliport.road_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_tpsttw.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_eewida on airport_heliport.road_ts.surfaceextent_id = geometry_elevatedsurface_view_eewida.id
left join master_join master_join_pvdjor on airport_heliport.road_ts.id = master_join_pvdjor.source_id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_mzvbfu on master_join_pvdjor.target_id = airport_heliport_aircraftstand_pt_mzvbfu.id
left join master_join master_join_pgoktw on airport_heliport.road_ts.id = master_join_pgoktw.source_id
left join notes.note_view notes_note_view_jhbovd on master_join_pgoktw.target_id = notes_note_view_jhbovd.id
where airport_heliport.road.feature_status = 'APPROVED'
  and airport_heliport.road_ts.feature_status = 'APPROVED'
group by
    airport_heliport.road.id,
    airport_heliport.road_ts.id,
    airport_heliport.road_tsp.id,
    airport_heliport.road.identifier,
    airport_heliport.road_ts.interpretation,
    airport_heliport.road_ts.sequence_number,
    airport_heliport.road_ts.correction_number,
    airport_heliport.road_ts.valid_time_begin,
    airport_heliport.road_ts.valid_time_end,
    airport_heliport.road_ts.feature_lifetime_begin,
    airport_heliport.road_ts.feature_lifetime_end,
    airport_heliport.road_ts.designator_value,
    airport_heliport.road_ts.designator_nilreason,
    airport_heliport.road_ts.status_value,
    airport_heliport.road_ts.status_nilreason,
    airport_heliport.road_ts.type_value,
    airport_heliport.road_ts.type_nilreason,
    airport_heliport.road_ts.abandoned_value,
    airport_heliport.road_ts.abandoned_nilreason,
    airport_heliport_airportheliport_pt_oyhyqi.title,
    airport_heliport_airportheliport_pt_oyhyqi.nilreason[1],
    airport_heliport_airportheliport_pt_oyhyqi.href,
    airport_heliport_surfacecharacteristics_view_tpsttw.id,
    geometry_elevatedsurface_view_eewida.geom,
    geometry_elevatedsurface_view_eewida.elevation,
    geometry_elevatedsurface_view_eewida.geoidUndulation,
    geometry_elevatedsurface_view_eewida.verticalDatum,
    geometry_elevatedsurface_view_eewida.verticalAccuracy,
    geometry_elevatedsurface_view_eewida.horizontalAccuracy
order by road.identifier, road_ts.sequence_number, road_ts.correction_number DESC;
create index on airport_heliport.road_view (id);
-- RouteDMETimeSliceType
-- ['routes.routeportion_view', 'notes.note_view']
drop materialized view if exists routes.routedme_view cascade;
create materialized view routes.routedme_view as
select distinct on (routedme.identifier,routedme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.routedme.id,
    routes.routedme_ts.id as ts_id,
    routes.routedme_tsp.id as tsp_id,
    routes.routedme.identifier,
    routes.routedme_ts.interpretation,
    routes.routedme_ts.sequence_number,
    routes.routedme_ts.correction_number,
    routes.routedme_ts.valid_time_begin,
    routes.routedme_ts.valid_time_end,
    routes.routedme_ts.feature_lifetime_begin,
    routes.routedme_ts.feature_lifetime_end,
    coalesce(cast(routes.routedme_ts.criticaldme_value as varchar), '(' || routes.routedme_ts.criticaldme_nilreason || ')') as criticaldme,
    coalesce(cast(routes.routedme_ts.satisfactory_value as varchar), '(' || routes.routedme_ts.satisfactory_nilreason || ')') as satisfactory,
    coalesce(cast(navaids_points_dme_pt_wgxhqr.title as varchar), '(' || navaids_points_dme_pt_wgxhqr.nilreason[1] || ')') AS referenceddme,
    navaids_points_dme_pt_wgxhqr.href AS referenceddme_href,
    routes_routeportion_view_yhrvnf.id AS applicablerouteportion,
    jsonb_agg(notes_note_view_uywalx.*) AS annotation
from routes.routedme 
inner join master_join mj2 on routes.routedme.id = mj2.source_id
inner join routes.routedme_tsp on mj2.target_id = routes.routedme_tsp.id
inner join routes.routedme_ts on routes.routedme_tsp.routedmetimeslice_id = routes.routedme_ts.id
left join navaids_points.dme_pt navaids_points_dme_pt_wgxhqr on routes.routedme_ts.referenceddme_id = navaids_points_dme_pt_wgxhqr.id
left join routes.routeportion_view routes_routeportion_view_yhrvnf on routes.routedme_ts.applicablerouteportion_id = routes_routeportion_view_yhrvnf.id
left join master_join master_join_rmizbn on routes.routedme_ts.id = master_join_rmizbn.source_id
left join notes.note_view notes_note_view_uywalx on master_join_rmizbn.target_id = notes_note_view_uywalx.id
where routes.routedme.feature_status = 'APPROVED'
  and routes.routedme_ts.feature_status = 'APPROVED'
group by
    routes.routedme.id,
    routes.routedme_ts.id,
    routes.routedme_tsp.id,
    routes.routedme.identifier,
    routes.routedme_ts.interpretation,
    routes.routedme_ts.sequence_number,
    routes.routedme_ts.correction_number,
    routes.routedme_ts.valid_time_begin,
    routes.routedme_ts.valid_time_end,
    routes.routedme_ts.feature_lifetime_begin,
    routes.routedme_ts.feature_lifetime_end,
    routes.routedme_ts.criticaldme_value,
    routes.routedme_ts.criticaldme_nilreason,
    routes.routedme_ts.satisfactory_value,
    routes.routedme_ts.satisfactory_nilreason,
    navaids_points_dme_pt_wgxhqr.title,
    navaids_points_dme_pt_wgxhqr.nilreason[1],
    navaids_points_dme_pt_wgxhqr.href,
    routes_routeportion_view_yhrvnf.id
order by routedme.identifier, routedme_ts.sequence_number, routedme_ts.correction_number DESC;
create index on routes.routedme_view (id);
-- RouteSegmentTimeSliceType
-- ['navaids_points.enroutesegmentpoint_view', 'geometry.curve_view', 'notes.note_view', 'routes.routeavailability_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists routes.routesegment_view cascade;
create materialized view routes.routesegment_view as
select distinct on (routesegment.identifier,routesegment_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.routesegment.id,
    routes.routesegment_ts.id as ts_id,
    routes.routesegment_tsp.id as tsp_id,
    routes.routesegment.identifier,
    routes.routesegment_ts.interpretation,
    routes.routesegment_ts.sequence_number,
    routes.routesegment_ts.correction_number,
    routes.routesegment_ts.valid_time_begin,
    routes.routesegment_ts.valid_time_end,
    routes.routesegment_ts.feature_lifetime_begin,
    routes.routesegment_ts.feature_lifetime_end,
    coalesce(cast(routes.routesegment_ts.level_value as varchar), '(' || routes.routesegment_ts.level_nilreason || ')') as level,
    coalesce(cast(routes.routesegment_ts.upperlimitreference_value as varchar), '(' || routes.routesegment_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(routes.routesegment_ts.lowerlimitreference_value as varchar), '(' || routes.routesegment_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(routes.routesegment_ts.pathtype_value as varchar), '(' || routes.routesegment_ts.pathtype_nilreason || ')') as pathtype,
    coalesce(cast(routes.routesegment_ts.truetrack_value as varchar), '(' || routes.routesegment_ts.truetrack_nilreason || ')') as truetrack,
    coalesce(cast(routes.routesegment_ts.magnetictrack_value as varchar), '(' || routes.routesegment_ts.magnetictrack_nilreason || ')') as magnetictrack,
    coalesce(cast(routes.routesegment_ts.reversetruetrack_value as varchar), '(' || routes.routesegment_ts.reversetruetrack_nilreason || ')') as reversetruetrack,
    coalesce(cast(routes.routesegment_ts.reversemagnetictrack_value as varchar), '(' || routes.routesegment_ts.reversemagnetictrack_nilreason || ')') as reversemagnetictrack,
    coalesce(cast(routes.routesegment_ts.turndirection_value as varchar), '(' || routes.routesegment_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(routes.routesegment_ts.signalgap_value as varchar), '(' || routes.routesegment_ts.signalgap_nilreason || ')') as signalgap,
    coalesce(cast(routes.routesegment_ts.minimumcrossingatendreference_value as varchar), '(' || routes.routesegment_ts.minimumcrossingatendreference_nilreason || ')') as minimumcrossingatendreference,
    coalesce(cast(routes.routesegment_ts.maximumcrossingatendreference_value as varchar), '(' || routes.routesegment_ts.maximumcrossingatendreference_nilreason || ')') as maximumcrossingatendreference,
    coalesce(cast(routes.routesegment_ts.navigationtype_value as varchar), '(' || routes.routesegment_ts.navigationtype_nilreason || ')') as navigationtype,
    coalesce(cast(routes.routesegment_ts.requirednavigationperformance_value as varchar), '(' || routes.routesegment_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(routes.routesegment_ts.designatorsuffix_value as varchar), '(' || routes.routesegment_ts.designatorsuffix_nilreason || ')') as designatorsuffix,
    coalesce(cast(routes.routesegment_ts.upperlimit_value as varchar) || ' ' || routes.routesegment_ts.upperlimit_uom, '(' || routes.routesegment_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(routes.routesegment_ts.lowerlimit_value as varchar) || ' ' || routes.routesegment_ts.lowerlimit_uom, '(' || routes.routesegment_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(routes.routesegment_ts.minimumobstacleclearancealtitude_value as varchar) || ' ' || routes.routesegment_ts.minimumobstacleclearancealtitude_uom, '(' || routes.routesegment_ts.minimumobstacleclearancealtitude_nilreason || ')') as minimumobstacleclearancealtitude,
    coalesce(cast(routes.routesegment_ts.length_value as varchar) || ' ' || routes.routesegment_ts.length_uom, '(' || routes.routesegment_ts.length_nilreason || ')') as length,
    coalesce(cast(routes.routesegment_ts.widthleft_value as varchar) || ' ' || routes.routesegment_ts.widthleft_uom, '(' || routes.routesegment_ts.widthleft_nilreason || ')') as widthleft,
    coalesce(cast(routes.routesegment_ts.widthright_value as varchar) || ' ' || routes.routesegment_ts.widthright_uom, '(' || routes.routesegment_ts.widthright_nilreason || ')') as widthright,
    coalesce(cast(routes.routesegment_ts.minimumenroutealtitude_value as varchar) || ' ' || routes.routesegment_ts.minimumenroutealtitude_uom, '(' || routes.routesegment_ts.minimumenroutealtitude_nilreason || ')') as minimumenroutealtitude,
    coalesce(cast(routes.routesegment_ts.minimumcrossingatend_value as varchar) || ' ' || routes.routesegment_ts.minimumcrossingatend_uom, '(' || routes.routesegment_ts.minimumcrossingatend_nilreason || ')') as minimumcrossingatend,
    coalesce(cast(routes.routesegment_ts.maximumcrossingatend_value as varchar) || ' ' || routes.routesegment_ts.maximumcrossingatend_uom, '(' || routes.routesegment_ts.maximumcrossingatend_nilreason || ')') as maximumcrossingatend,
    navaids_points_enroutesegmentpoint_view_pnrskj.id AS start,
    navaids_points_enroutesegmentpoint_view_tsgkao.id AS end,
    coalesce(cast(routes_route_pt_ragrbr.title as varchar), '(' || routes_route_pt_ragrbr.nilreason[1] || ')') AS routeformed,
    routes_route_pt_ragrbr.href AS routeformed_href,
    shared_obstacleassessmentarea_view_kzbgrz.id AS evaluationarea,
    geometry_curve_view_lswlcp.geom AS curveextent_geom,
    geometry_curve_view_lswlcp.horizontalAccuracy as curveextent_horizontalaccuracy,
    jsonb_agg(routes_routeavailability_view_yhlgtw.id) AS availability,
    jsonb_agg(notes_note_view_lerzlv.*) AS annotation
from routes.routesegment 
inner join master_join mj2 on routes.routesegment.id = mj2.source_id
inner join routes.routesegment_tsp on mj2.target_id = routes.routesegment_tsp.id
inner join routes.routesegment_ts on routes.routesegment_tsp.routesegmenttimeslice_id = routes.routesegment_ts.id
left join navaids_points.enroutesegmentpoint_view navaids_points_enroutesegmentpoint_view_pnrskj on routes.routesegment_ts.start_id = navaids_points_enroutesegmentpoint_view_pnrskj.id
left join routes.route_pt routes_route_pt_ragrbr on routes.routesegment_ts.routeformed_id = routes_route_pt_ragrbr.id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_kzbgrz on routes.routesegment_ts.evaluationarea_id = shared_obstacleassessmentarea_view_kzbgrz.id
left join geometry.curve_view geometry_curve_view_lswlcp on routes.routesegment_ts.curveextent_id = geometry_curve_view_lswlcp.id
left join navaids_points.enroutesegmentpoint_view navaids_points_enroutesegmentpoint_view_tsgkao on routes.routesegment_ts.end_id = navaids_points_enroutesegmentpoint_view_tsgkao.id
left join master_join master_join_eokyrz on routes.routesegment_ts.id = master_join_eokyrz.source_id
left join routes.routeavailability_view routes_routeavailability_view_yhlgtw on master_join_eokyrz.target_id = routes_routeavailability_view_yhlgtw.id
left join master_join master_join_kuntep on routes.routesegment_ts.id = master_join_kuntep.source_id
left join notes.note_view notes_note_view_lerzlv on master_join_kuntep.target_id = notes_note_view_lerzlv.id
where routes.routesegment.feature_status = 'APPROVED'
  and routes.routesegment_ts.feature_status = 'APPROVED'
group by
    routes.routesegment.id,
    routes.routesegment_ts.id,
    routes.routesegment_tsp.id,
    routes.routesegment.identifier,
    routes.routesegment_ts.interpretation,
    routes.routesegment_ts.sequence_number,
    routes.routesegment_ts.correction_number,
    routes.routesegment_ts.valid_time_begin,
    routes.routesegment_ts.valid_time_end,
    routes.routesegment_ts.feature_lifetime_begin,
    routes.routesegment_ts.feature_lifetime_end,
    routes.routesegment_ts.level_value,
    routes.routesegment_ts.level_nilreason,
    routes.routesegment_ts.upperlimitreference_value,
    routes.routesegment_ts.upperlimitreference_nilreason,
    routes.routesegment_ts.lowerlimitreference_value,
    routes.routesegment_ts.lowerlimitreference_nilreason,
    routes.routesegment_ts.pathtype_value,
    routes.routesegment_ts.pathtype_nilreason,
    routes.routesegment_ts.truetrack_value,
    routes.routesegment_ts.truetrack_nilreason,
    routes.routesegment_ts.magnetictrack_value,
    routes.routesegment_ts.magnetictrack_nilreason,
    routes.routesegment_ts.reversetruetrack_value,
    routes.routesegment_ts.reversetruetrack_nilreason,
    routes.routesegment_ts.reversemagnetictrack_value,
    routes.routesegment_ts.reversemagnetictrack_nilreason,
    routes.routesegment_ts.turndirection_value,
    routes.routesegment_ts.turndirection_nilreason,
    routes.routesegment_ts.signalgap_value,
    routes.routesegment_ts.signalgap_nilreason,
    routes.routesegment_ts.minimumcrossingatendreference_value,
    routes.routesegment_ts.minimumcrossingatendreference_nilreason,
    routes.routesegment_ts.maximumcrossingatendreference_value,
    routes.routesegment_ts.maximumcrossingatendreference_nilreason,
    routes.routesegment_ts.navigationtype_value,
    routes.routesegment_ts.navigationtype_nilreason,
    routes.routesegment_ts.requirednavigationperformance_value,
    routes.routesegment_ts.requirednavigationperformance_nilreason,
    routes.routesegment_ts.designatorsuffix_value,
    routes.routesegment_ts.designatorsuffix_nilreason,
    routes.routesegment_ts.upperlimit_value,
    routes.routesegment_ts.upperlimit_uom,
    routes.routesegment_ts.upperlimit_nilreason,
    routes.routesegment_ts.lowerlimit_value,
    routes.routesegment_ts.lowerlimit_uom,
    routes.routesegment_ts.lowerlimit_nilreason,
    routes.routesegment_ts.minimumobstacleclearancealtitude_value,
    routes.routesegment_ts.minimumobstacleclearancealtitude_uom,
    routes.routesegment_ts.minimumobstacleclearancealtitude_nilreason,
    routes.routesegment_ts.length_value,
    routes.routesegment_ts.length_uom,
    routes.routesegment_ts.length_nilreason,
    routes.routesegment_ts.widthleft_value,
    routes.routesegment_ts.widthleft_uom,
    routes.routesegment_ts.widthleft_nilreason,
    routes.routesegment_ts.widthright_value,
    routes.routesegment_ts.widthright_uom,
    routes.routesegment_ts.widthright_nilreason,
    routes.routesegment_ts.minimumenroutealtitude_value,
    routes.routesegment_ts.minimumenroutealtitude_uom,
    routes.routesegment_ts.minimumenroutealtitude_nilreason,
    routes.routesegment_ts.minimumcrossingatend_value,
    routes.routesegment_ts.minimumcrossingatend_uom,
    routes.routesegment_ts.minimumcrossingatend_nilreason,
    routes.routesegment_ts.maximumcrossingatend_value,
    routes.routesegment_ts.maximumcrossingatend_uom,
    routes.routesegment_ts.maximumcrossingatend_nilreason,
    navaids_points_enroutesegmentpoint_view_pnrskj.id,
    routes_route_pt_ragrbr.title,
    routes_route_pt_ragrbr.nilreason[1],
    routes_route_pt_ragrbr.href,
    shared_obstacleassessmentarea_view_kzbgrz.id,
    geometry_curve_view_lswlcp.geom,
    geometry_curve_view_lswlcp.horizontalAccuracy,
    navaids_points_enroutesegmentpoint_view_tsgkao.id
order by routesegment.identifier, routesegment_ts.sequence_number, routesegment_ts.correction_number DESC;
create index on routes.routesegment_view (id);
-- RouteTimeSliceType
-- ['notes.note_view']
drop materialized view if exists routes.route_view cascade;
create materialized view routes.route_view as
select distinct on (route.identifier,route_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.route.id,
    routes.route_ts.id as ts_id,
    routes.route_tsp.id as tsp_id,
    routes.route.identifier,
    routes.route_ts.interpretation,
    routes.route_ts.sequence_number,
    routes.route_ts.correction_number,
    routes.route_ts.valid_time_begin,
    routes.route_ts.valid_time_end,
    routes.route_ts.feature_lifetime_begin,
    routes.route_ts.feature_lifetime_end,
    coalesce(cast(routes.route_ts.designatorprefix_value as varchar), '(' || routes.route_ts.designatorprefix_nilreason || ')') as designatorprefix,
    coalesce(cast(routes.route_ts.designatorsecondletter_value as varchar), '(' || routes.route_ts.designatorsecondletter_nilreason || ')') as designatorsecondletter,
    coalesce(cast(routes.route_ts.designatornumber_value as varchar), '(' || routes.route_ts.designatornumber_nilreason || ')') as designatornumber,
    coalesce(cast(routes.route_ts.multipleidentifier_value as varchar), '(' || routes.route_ts.multipleidentifier_nilreason || ')') as multipleidentifier,
    coalesce(cast(routes.route_ts.locationdesignator_value as varchar), '(' || routes.route_ts.locationdesignator_nilreason || ')') as locationdesignator,
    coalesce(cast(routes.route_ts.name_value as varchar), '(' || routes.route_ts.name_nilreason || ')') as name,
    coalesce(cast(routes.route_ts.type_value as varchar), '(' || routes.route_ts.type_nilreason || ')') as type,
    coalesce(cast(routes.route_ts.flightrule_value as varchar), '(' || routes.route_ts.flightrule_nilreason || ')') as flightrule,
    coalesce(cast(routes.route_ts.internationaluse_value as varchar), '(' || routes.route_ts.internationaluse_nilreason || ')') as internationaluse,
    coalesce(cast(routes.route_ts.militaryuse_value as varchar), '(' || routes.route_ts.militaryuse_nilreason || ')') as militaryuse,
    coalesce(cast(routes.route_ts.militarytrainingtype_value as varchar), '(' || routes.route_ts.militarytrainingtype_nilreason || ')') as militarytrainingtype,
    coalesce(cast(organisation_organisationauthority_pt_fxcwkf.title as varchar), '(' || organisation_organisationauthority_pt_fxcwkf.nilreason[1] || ')') AS userorganisation,
    organisation_organisationauthority_pt_fxcwkf.href AS userorganisation_href,
    jsonb_agg(notes_note_view_zshyed.*) AS annotation
from routes.route 
inner join master_join mj2 on routes.route.id = mj2.source_id
inner join routes.route_tsp on mj2.target_id = routes.route_tsp.id
inner join routes.route_ts on routes.route_tsp.routetimeslice_id = routes.route_ts.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_fxcwkf on routes.route_ts.userorganisation_id = organisation_organisationauthority_pt_fxcwkf.id
left join master_join master_join_hldqmn on routes.route_ts.id = master_join_hldqmn.source_id
left join notes.note_view notes_note_view_zshyed on master_join_hldqmn.target_id = notes_note_view_zshyed.id
where routes.route.feature_status = 'APPROVED'
  and routes.route_ts.feature_status = 'APPROVED'
group by
    routes.route.id,
    routes.route_ts.id,
    routes.route_tsp.id,
    routes.route.identifier,
    routes.route_ts.interpretation,
    routes.route_ts.sequence_number,
    routes.route_ts.correction_number,
    routes.route_ts.valid_time_begin,
    routes.route_ts.valid_time_end,
    routes.route_ts.feature_lifetime_begin,
    routes.route_ts.feature_lifetime_end,
    routes.route_ts.designatorprefix_value,
    routes.route_ts.designatorprefix_nilreason,
    routes.route_ts.designatorsecondletter_value,
    routes.route_ts.designatorsecondletter_nilreason,
    routes.route_ts.designatornumber_value,
    routes.route_ts.designatornumber_nilreason,
    routes.route_ts.multipleidentifier_value,
    routes.route_ts.multipleidentifier_nilreason,
    routes.route_ts.locationdesignator_value,
    routes.route_ts.locationdesignator_nilreason,
    routes.route_ts.name_value,
    routes.route_ts.name_nilreason,
    routes.route_ts.type_value,
    routes.route_ts.type_nilreason,
    routes.route_ts.flightrule_value,
    routes.route_ts.flightrule_nilreason,
    routes.route_ts.internationaluse_value,
    routes.route_ts.internationaluse_nilreason,
    routes.route_ts.militaryuse_value,
    routes.route_ts.militaryuse_nilreason,
    routes.route_ts.militarytrainingtype_value,
    routes.route_ts.militarytrainingtype_nilreason,
    organisation_organisationauthority_pt_fxcwkf.title,
    organisation_organisationauthority_pt_fxcwkf.nilreason[1],
    organisation_organisationauthority_pt_fxcwkf.href
order by route.identifier, route_ts.sequence_number, route_ts.correction_number DESC;
create index on routes.route_view (id);
-- RulesProceduresTimeSliceType
-- ['notes.note_view']
drop materialized view if exists rules_procedures.rulesprocedures_view cascade;
create materialized view rules_procedures.rulesprocedures_view as
select distinct on (rulesprocedures.identifier,rulesprocedures_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    rules_procedures.rulesprocedures.id,
    rules_procedures.rulesprocedures_ts.id as ts_id,
    rules_procedures.rulesprocedures_tsp.id as tsp_id,
    rules_procedures.rulesprocedures.identifier,
    rules_procedures.rulesprocedures_ts.interpretation,
    rules_procedures.rulesprocedures_ts.sequence_number,
    rules_procedures.rulesprocedures_ts.correction_number,
    rules_procedures.rulesprocedures_ts.valid_time_begin,
    rules_procedures.rulesprocedures_ts.valid_time_end,
    rules_procedures.rulesprocedures_ts.feature_lifetime_begin,
    rules_procedures.rulesprocedures_ts.feature_lifetime_end,
    coalesce(cast(rules_procedures.rulesprocedures_ts.category_value as varchar), '(' || rules_procedures.rulesprocedures_ts.category_nilreason || ')') as category,
    coalesce(cast(rules_procedures.rulesprocedures_ts.title_value as varchar), '(' || rules_procedures.rulesprocedures_ts.title_nilreason || ')') as title,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_kwxeno.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_kwxeno.title AS varchar), '(' || airport_heliport_airportheliport_pt_kwxeno.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_kwxeno.href)) AS affectedlocation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_wxfnqy.id,
    'title', coalesce(cast(airspace_airspace_pt_wxfnqy.title AS varchar), '(' || airspace_airspace_pt_wxfnqy.nilreason[1] || ')'),
    'href', airspace_airspace_pt_wxfnqy.href)) AS affectedarea,
    jsonb_agg(notes_note_view_yehjgu.*) AS annotation
from rules_procedures.rulesprocedures 
inner join master_join mj2 on rules_procedures.rulesprocedures.id = mj2.source_id
inner join rules_procedures.rulesprocedures_tsp on mj2.target_id = rules_procedures.rulesprocedures_tsp.id
inner join rules_procedures.rulesprocedures_ts on rules_procedures.rulesprocedures_tsp.rulesprocedurestimeslice_id = rules_procedures.rulesprocedures_ts.id
left join master_join master_join_cfxrps on rules_procedures.rulesprocedures_ts.id = master_join_cfxrps.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_kwxeno on master_join_cfxrps.target_id = airport_heliport_airportheliport_pt_kwxeno.id
left join master_join master_join_lxbvme on rules_procedures.rulesprocedures_ts.id = master_join_lxbvme.source_id
left join airspace.airspace_pt airspace_airspace_pt_wxfnqy on master_join_lxbvme.target_id = airspace_airspace_pt_wxfnqy.id
left join master_join master_join_kutjji on rules_procedures.rulesprocedures_ts.id = master_join_kutjji.source_id
left join notes.note_view notes_note_view_yehjgu on master_join_kutjji.target_id = notes_note_view_yehjgu.id
where rules_procedures.rulesprocedures.feature_status = 'APPROVED'
  and rules_procedures.rulesprocedures_ts.feature_status = 'APPROVED'
group by
    rules_procedures.rulesprocedures.id,
    rules_procedures.rulesprocedures_ts.id,
    rules_procedures.rulesprocedures_tsp.id,
    rules_procedures.rulesprocedures.identifier,
    rules_procedures.rulesprocedures_ts.interpretation,
    rules_procedures.rulesprocedures_ts.sequence_number,
    rules_procedures.rulesprocedures_ts.correction_number,
    rules_procedures.rulesprocedures_ts.valid_time_begin,
    rules_procedures.rulesprocedures_ts.valid_time_end,
    rules_procedures.rulesprocedures_ts.feature_lifetime_begin,
    rules_procedures.rulesprocedures_ts.feature_lifetime_end,
    rules_procedures.rulesprocedures_ts.category_value,
    rules_procedures.rulesprocedures_ts.category_nilreason,
    rules_procedures.rulesprocedures_ts.title_value,
    rules_procedures.rulesprocedures_ts.title_nilreason
order by rulesprocedures.identifier, rulesprocedures_ts.sequence_number, rulesprocedures_ts.correction_number DESC;
create index on rules_procedures.rulesprocedures_view (id);
-- RunwayBlastPadTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view', 'airport_heliport.surfacecharacteristics_view']
drop materialized view if exists airport_heliport.runwayblastpad_view cascade;
create materialized view airport_heliport.runwayblastpad_view as
select distinct on (runwayblastpad.identifier,runwayblastpad_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayblastpad.id,
    airport_heliport.runwayblastpad_ts.id as ts_id,
    airport_heliport.runwayblastpad_tsp.id as tsp_id,
    airport_heliport.runwayblastpad.identifier,
    airport_heliport.runwayblastpad_ts.interpretation,
    airport_heliport.runwayblastpad_ts.sequence_number,
    airport_heliport.runwayblastpad_ts.correction_number,
    airport_heliport.runwayblastpad_ts.valid_time_begin,
    airport_heliport.runwayblastpad_ts.valid_time_end,
    airport_heliport.runwayblastpad_ts.feature_lifetime_begin,
    airport_heliport.runwayblastpad_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayblastpad_ts.status_value as varchar), '(' || airport_heliport.runwayblastpad_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.runwayblastpad_ts.length_value as varchar) || ' ' || airport_heliport.runwayblastpad_ts.length_uom, '(' || airport_heliport.runwayblastpad_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_runwaydirection_pt_veigwx.title as varchar), '(' || airport_heliport_runwaydirection_pt_veigwx.nilreason[1] || ')') AS usedrunwaydirection,
    airport_heliport_runwaydirection_pt_veigwx.href AS usedrunwaydirection_href,
    geometry_elevatedsurface_view_eosjyd.geom AS extent_geom,
    geometry_elevatedsurface_view_eosjyd.elevation AS extent_elevation,
    geometry_elevatedsurface_view_eosjyd.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_eosjyd.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_eosjyd.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_eosjyd.horizontalAccuracy AS extent_horizontalaccuracy,
    airport_heliport_surfacecharacteristics_view_hqnkbs.id AS surfaceproperties,
    jsonb_agg(notes_note_view_vdwhad.*) AS annotation
from airport_heliport.runwayblastpad 
inner join master_join mj2 on airport_heliport.runwayblastpad.id = mj2.source_id
inner join airport_heliport.runwayblastpad_tsp on mj2.target_id = airport_heliport.runwayblastpad_tsp.id
inner join airport_heliport.runwayblastpad_ts on airport_heliport.runwayblastpad_tsp.runwayblastpadtimeslice_id = airport_heliport.runwayblastpad_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_veigwx on airport_heliport.runwayblastpad_ts.usedrunwaydirection_id = airport_heliport_runwaydirection_pt_veigwx.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_eosjyd on airport_heliport.runwayblastpad_ts.extent_id = geometry_elevatedsurface_view_eosjyd.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_hqnkbs on airport_heliport.runwayblastpad_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_hqnkbs.id
left join master_join master_join_qkhwld on airport_heliport.runwayblastpad_ts.id = master_join_qkhwld.source_id
left join notes.note_view notes_note_view_vdwhad on master_join_qkhwld.target_id = notes_note_view_vdwhad.id
where airport_heliport.runwayblastpad.feature_status = 'APPROVED'
  and airport_heliport.runwayblastpad_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayblastpad.id,
    airport_heliport.runwayblastpad_ts.id,
    airport_heliport.runwayblastpad_tsp.id,
    airport_heliport.runwayblastpad.identifier,
    airport_heliport.runwayblastpad_ts.interpretation,
    airport_heliport.runwayblastpad_ts.sequence_number,
    airport_heliport.runwayblastpad_ts.correction_number,
    airport_heliport.runwayblastpad_ts.valid_time_begin,
    airport_heliport.runwayblastpad_ts.valid_time_end,
    airport_heliport.runwayblastpad_ts.feature_lifetime_begin,
    airport_heliport.runwayblastpad_ts.feature_lifetime_end,
    airport_heliport.runwayblastpad_ts.status_value,
    airport_heliport.runwayblastpad_ts.status_nilreason,
    airport_heliport.runwayblastpad_ts.length_value,
    airport_heliport.runwayblastpad_ts.length_uom,
    airport_heliport.runwayblastpad_ts.length_nilreason,
    airport_heliport_runwaydirection_pt_veigwx.title,
    airport_heliport_runwaydirection_pt_veigwx.nilreason[1],
    airport_heliport_runwaydirection_pt_veigwx.href,
    geometry_elevatedsurface_view_eosjyd.geom,
    geometry_elevatedsurface_view_eosjyd.elevation,
    geometry_elevatedsurface_view_eosjyd.geoidUndulation,
    geometry_elevatedsurface_view_eosjyd.verticalDatum,
    geometry_elevatedsurface_view_eosjyd.verticalAccuracy,
    geometry_elevatedsurface_view_eosjyd.horizontalAccuracy,
    airport_heliport_surfacecharacteristics_view_hqnkbs.id
order by runwayblastpad.identifier, runwayblastpad_ts.sequence_number, runwayblastpad_ts.correction_number DESC;
create index on airport_heliport.runwayblastpad_view (id);
-- RunwayCentrelinePointTimeSliceType
-- ['airport_heliport.runwaydeclareddistance_view', 'airport_heliport.navaidequipmentdistance_view', 'geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwaycentrelinepoint_view cascade;
create materialized view airport_heliport.runwaycentrelinepoint_view as
select distinct on (runwaycentrelinepoint.identifier,runwaycentrelinepoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaycentrelinepoint.id,
    airport_heliport.runwaycentrelinepoint_ts.id as ts_id,
    airport_heliport.runwaycentrelinepoint_tsp.id as tsp_id,
    airport_heliport.runwaycentrelinepoint.identifier,
    airport_heliport.runwaycentrelinepoint_ts.interpretation,
    airport_heliport.runwaycentrelinepoint_ts.sequence_number,
    airport_heliport.runwaycentrelinepoint_ts.correction_number,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_begin,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_end,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_begin,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaycentrelinepoint_ts.role_value as varchar), '(' || airport_heliport.runwaycentrelinepoint_ts.role_nilreason || ')') as role,
    coalesce(cast(airport_heliport.runwaycentrelinepoint_ts.designator_value as varchar), '(' || airport_heliport.runwaycentrelinepoint_ts.designator_nilreason || ')') as designator,
    geometry_elevatedpoint_view_jghdvl.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_jghdvl.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_jghdvl.geom) AS location_latitude,
    geometry_elevatedpoint_view_jghdvl.elevation AS location_elevation,
    geometry_elevatedpoint_view_jghdvl.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_jghdvl.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_jghdvl.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_jghdvl.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(airport_heliport_runwaydirection_pt_twtfhv.title as varchar), '(' || airport_heliport_runwaydirection_pt_twtfhv.nilreason[1] || ')') AS onrunway,
    airport_heliport_runwaydirection_pt_twtfhv.href AS onrunway_href,
    jsonb_agg(airport_heliport_runwaydeclareddistance_view_kdntxb.id) AS associateddeclareddistance,
    jsonb_agg(airport_heliport_navaidequipmentdistance_view_mnzkym.id) AS navaidequipment,
    jsonb_agg(notes_note_view_pzudyt.*) AS annotation
from airport_heliport.runwaycentrelinepoint 
inner join master_join mj2 on airport_heliport.runwaycentrelinepoint.id = mj2.source_id
inner join airport_heliport.runwaycentrelinepoint_tsp on mj2.target_id = airport_heliport.runwaycentrelinepoint_tsp.id
inner join airport_heliport.runwaycentrelinepoint_ts on airport_heliport.runwaycentrelinepoint_tsp.runwaycentrelinepointtimeslice_id = airport_heliport.runwaycentrelinepoint_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_jghdvl on airport_heliport.runwaycentrelinepoint_ts.location_id = geometry_elevatedpoint_view_jghdvl.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_twtfhv on airport_heliport.runwaycentrelinepoint_ts.onrunway_id = airport_heliport_runwaydirection_pt_twtfhv.id
left join master_join master_join_zhexyr on airport_heliport.runwaycentrelinepoint_ts.id = master_join_zhexyr.source_id
left join airport_heliport.runwaydeclareddistance_view airport_heliport_runwaydeclareddistance_view_kdntxb on master_join_zhexyr.target_id = airport_heliport_runwaydeclareddistance_view_kdntxb.id
left join master_join master_join_cibzxb on airport_heliport.runwaycentrelinepoint_ts.id = master_join_cibzxb.source_id
left join airport_heliport.navaidequipmentdistance_view airport_heliport_navaidequipmentdistance_view_mnzkym on master_join_cibzxb.target_id = airport_heliport_navaidequipmentdistance_view_mnzkym.id
left join master_join master_join_aurfjr on airport_heliport.runwaycentrelinepoint_ts.id = master_join_aurfjr.source_id
left join notes.note_view notes_note_view_pzudyt on master_join_aurfjr.target_id = notes_note_view_pzudyt.id
where airport_heliport.runwaycentrelinepoint.feature_status = 'APPROVED'
  and airport_heliport.runwaycentrelinepoint_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaycentrelinepoint.id,
    airport_heliport.runwaycentrelinepoint_ts.id,
    airport_heliport.runwaycentrelinepoint_tsp.id,
    airport_heliport.runwaycentrelinepoint.identifier,
    airport_heliport.runwaycentrelinepoint_ts.interpretation,
    airport_heliport.runwaycentrelinepoint_ts.sequence_number,
    airport_heliport.runwaycentrelinepoint_ts.correction_number,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_begin,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_end,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_begin,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_end,
    airport_heliport.runwaycentrelinepoint_ts.role_value,
    airport_heliport.runwaycentrelinepoint_ts.role_nilreason,
    airport_heliport.runwaycentrelinepoint_ts.designator_value,
    airport_heliport.runwaycentrelinepoint_ts.designator_nilreason,
    geometry_elevatedpoint_view_jghdvl.geom,
    geometry_elevatedpoint_view_jghdvl.elevation,
    geometry_elevatedpoint_view_jghdvl.geoidUndulation,
    geometry_elevatedpoint_view_jghdvl.verticalDatum,
    geometry_elevatedpoint_view_jghdvl.verticalAccuracy,
    geometry_elevatedpoint_view_jghdvl.horizontalAccuracy,
    airport_heliport_runwaydirection_pt_twtfhv.title,
    airport_heliport_runwaydirection_pt_twtfhv.nilreason[1],
    airport_heliport_runwaydirection_pt_twtfhv.href
order by runwaycentrelinepoint.identifier, runwaycentrelinepoint_ts.sequence_number, runwaycentrelinepoint_ts.correction_number DESC;
create index on airport_heliport.runwaycentrelinepoint_view (id);
-- RunwayDirectionLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwaydirectionlightsystem_view cascade;
create materialized view airport_heliport.runwaydirectionlightsystem_view as
select distinct on (runwaydirectionlightsystem.identifier,runwaydirectionlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaydirectionlightsystem.id,
    airport_heliport.runwaydirectionlightsystem_ts.id as ts_id,
    airport_heliport.runwaydirectionlightsystem_tsp.id as tsp_id,
    airport_heliport.runwaydirectionlightsystem.identifier,
    airport_heliport.runwaydirectionlightsystem_ts.interpretation,
    airport_heliport.runwaydirectionlightsystem_ts.sequence_number,
    airport_heliport.runwaydirectionlightsystem_ts.correction_number,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_begin,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_end,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.colour_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.position_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_runwaydirection_pt_dswbki.title as varchar), '(' || airport_heliport_runwaydirection_pt_dswbki.nilreason[1] || ')') AS associatedrunwaydirection,
    airport_heliport_runwaydirection_pt_dswbki.href AS associatedrunwaydirection_href,
    jsonb_agg(shared_lightelement_view_svvrqo.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_exvuac.id) AS availability,
    jsonb_agg(notes_note_view_iweapj.*) AS annotation
from airport_heliport.runwaydirectionlightsystem 
inner join master_join mj2 on airport_heliport.runwaydirectionlightsystem.id = mj2.source_id
inner join airport_heliport.runwaydirectionlightsystem_tsp on mj2.target_id = airport_heliport.runwaydirectionlightsystem_tsp.id
inner join airport_heliport.runwaydirectionlightsystem_ts on airport_heliport.runwaydirectionlightsystem_tsp.runwaydirectionlightsystemtimeslice_id = airport_heliport.runwaydirectionlightsystem_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_dswbki on airport_heliport.runwaydirectionlightsystem_ts.associatedrunwaydirection_id = airport_heliport_runwaydirection_pt_dswbki.id
left join master_join master_join_ckjmrr on airport_heliport.runwaydirectionlightsystem_ts.id = master_join_ckjmrr.source_id
left join shared.lightelement_view shared_lightelement_view_svvrqo on master_join_ckjmrr.target_id = shared_lightelement_view_svvrqo.id
left join master_join master_join_sqllsz on airport_heliport.runwaydirectionlightsystem_ts.id = master_join_sqllsz.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_exvuac on master_join_sqllsz.target_id = airport_heliport_groundlightingavailability_view_exvuac.id
left join master_join master_join_isacwc on airport_heliport.runwaydirectionlightsystem_ts.id = master_join_isacwc.source_id
left join notes.note_view notes_note_view_iweapj on master_join_isacwc.target_id = notes_note_view_iweapj.id
where airport_heliport.runwaydirectionlightsystem.feature_status = 'APPROVED'
  and airport_heliport.runwaydirectionlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaydirectionlightsystem.id,
    airport_heliport.runwaydirectionlightsystem_ts.id,
    airport_heliport.runwaydirectionlightsystem_tsp.id,
    airport_heliport.runwaydirectionlightsystem.identifier,
    airport_heliport.runwaydirectionlightsystem_ts.interpretation,
    airport_heliport.runwaydirectionlightsystem_ts.sequence_number,
    airport_heliport.runwaydirectionlightsystem_ts.correction_number,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_begin,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_end,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_end,
    airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_value,
    airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_value,
    airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.colour_value,
    airport_heliport.runwaydirectionlightsystem_ts.colour_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.position_value,
    airport_heliport.runwaydirectionlightsystem_ts.position_nilreason,
    airport_heliport_runwaydirection_pt_dswbki.title,
    airport_heliport_runwaydirection_pt_dswbki.nilreason[1],
    airport_heliport_runwaydirection_pt_dswbki.href
order by runwaydirectionlightsystem.identifier, runwaydirectionlightsystem_ts.sequence_number, runwaydirectionlightsystem_ts.correction_number DESC;
create index on airport_heliport.runwaydirectionlightsystem_view (id);
-- RunwayDirectionTimeSliceType
-- ['notes.note_view', 'airport_heliport.manoeuvringareaavailability_view']
drop materialized view if exists airport_heliport.runwaydirection_view cascade;
create materialized view airport_heliport.runwaydirection_view as
select distinct on (runwaydirection.identifier,runwaydirection_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaydirection.id,
    airport_heliport.runwaydirection_ts.id as ts_id,
    airport_heliport.runwaydirection_tsp.id as tsp_id,
    airport_heliport.runwaydirection.identifier,
    airport_heliport.runwaydirection_ts.interpretation,
    airport_heliport.runwaydirection_ts.sequence_number,
    airport_heliport.runwaydirection_ts.correction_number,
    airport_heliport.runwaydirection_ts.valid_time_begin,
    airport_heliport.runwaydirection_ts.valid_time_end,
    airport_heliport.runwaydirection_ts.feature_lifetime_begin,
    airport_heliport.runwaydirection_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaydirection_ts.designator_value as varchar), '(' || airport_heliport.runwaydirection_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.runwaydirection_ts.truebearing_value as varchar), '(' || airport_heliport.runwaydirection_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(airport_heliport.runwaydirection_ts.truebearingaccuracy_value as varchar), '(' || airport_heliport.runwaydirection_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(airport_heliport.runwaydirection_ts.magneticbearing_value as varchar), '(' || airport_heliport.runwaydirection_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(airport_heliport.runwaydirection_ts.patternvfr_value as varchar), '(' || airport_heliport.runwaydirection_ts.patternvfr_nilreason || ')') as patternvfr,
    coalesce(cast(airport_heliport.runwaydirection_ts.slopetdz_value as varchar), '(' || airport_heliport.runwaydirection_ts.slopetdz_nilreason || ')') as slopetdz,
    coalesce(cast(airport_heliport.runwaydirection_ts.approachmarkingtype_value as varchar), '(' || airport_heliport.runwaydirection_ts.approachmarkingtype_nilreason || ')') as approachmarkingtype,
    coalesce(cast(airport_heliport.runwaydirection_ts.approachmarkingcondition_value as varchar), '(' || airport_heliport.runwaydirection_ts.approachmarkingcondition_nilreason || ')') as approachmarkingcondition,
    coalesce(cast(airport_heliport.runwaydirection_ts.classlightingjar_value as varchar), '(' || airport_heliport.runwaydirection_ts.classlightingjar_nilreason || ')') as classlightingjar,
    coalesce(cast(airport_heliport.runwaydirection_ts.precisionapproachguidance_value as varchar), '(' || airport_heliport.runwaydirection_ts.precisionapproachguidance_nilreason || ')') as precisionapproachguidance,
    coalesce(cast(airport_heliport.runwaydirection_ts.elevationtdz_value as varchar) || ' ' || airport_heliport.runwaydirection_ts.elevationtdz_uom, '(' || airport_heliport.runwaydirection_ts.elevationtdz_nilreason || ')') as elevationtdz,
    coalesce(cast(airport_heliport.runwaydirection_ts.elevationtdzaccuracy_value as varchar) || ' ' || airport_heliport.runwaydirection_ts.elevationtdzaccuracy_uom, '(' || airport_heliport.runwaydirection_ts.elevationtdzaccuracy_nilreason || ')') as elevationtdzaccuracy,
    coalesce(cast(airport_heliport_runway_pt_tdxsqi.title as varchar), '(' || airport_heliport_runway_pt_tdxsqi.nilreason[1] || ')') AS usedrunway,
    airport_heliport_runway_pt_tdxsqi.href AS usedrunway_href,
    coalesce(cast(airport_heliport_runwayelement_pt_gciwpb.title as varchar), '(' || airport_heliport_runwayelement_pt_gciwpb.nilreason[1] || ')') AS startingelement,
    airport_heliport_runwayelement_pt_gciwpb.href AS startingelement_href,
    jsonb_agg(notes_note_view_ybnvrv.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_tkrbdl.id) AS availability
from airport_heliport.runwaydirection 
inner join master_join mj2 on airport_heliport.runwaydirection.id = mj2.source_id
inner join airport_heliport.runwaydirection_tsp on mj2.target_id = airport_heliport.runwaydirection_tsp.id
inner join airport_heliport.runwaydirection_ts on airport_heliport.runwaydirection_tsp.runwaydirectiontimeslice_id = airport_heliport.runwaydirection_ts.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_tdxsqi on airport_heliport.runwaydirection_ts.usedrunway_id = airport_heliport_runway_pt_tdxsqi.id
left join airport_heliport.runwayelement_pt airport_heliport_runwayelement_pt_gciwpb on airport_heliport.runwaydirection_ts.startingelement_id = airport_heliport_runwayelement_pt_gciwpb.id
left join master_join master_join_lxztdi on airport_heliport.runwaydirection_ts.id = master_join_lxztdi.source_id
left join notes.note_view notes_note_view_ybnvrv on master_join_lxztdi.target_id = notes_note_view_ybnvrv.id
left join master_join master_join_vtdicp on airport_heliport.runwaydirection_ts.id = master_join_vtdicp.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_tkrbdl on master_join_vtdicp.target_id = airport_heliport_manoeuvringareaavailability_view_tkrbdl.id
where airport_heliport.runwaydirection.feature_status = 'APPROVED'
  and airport_heliport.runwaydirection_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaydirection.id,
    airport_heliport.runwaydirection_ts.id,
    airport_heliport.runwaydirection_tsp.id,
    airport_heliport.runwaydirection.identifier,
    airport_heliport.runwaydirection_ts.interpretation,
    airport_heliport.runwaydirection_ts.sequence_number,
    airport_heliport.runwaydirection_ts.correction_number,
    airport_heliport.runwaydirection_ts.valid_time_begin,
    airport_heliport.runwaydirection_ts.valid_time_end,
    airport_heliport.runwaydirection_ts.feature_lifetime_begin,
    airport_heliport.runwaydirection_ts.feature_lifetime_end,
    airport_heliport.runwaydirection_ts.designator_value,
    airport_heliport.runwaydirection_ts.designator_nilreason,
    airport_heliport.runwaydirection_ts.truebearing_value,
    airport_heliport.runwaydirection_ts.truebearing_nilreason,
    airport_heliport.runwaydirection_ts.truebearingaccuracy_value,
    airport_heliport.runwaydirection_ts.truebearingaccuracy_nilreason,
    airport_heliport.runwaydirection_ts.magneticbearing_value,
    airport_heliport.runwaydirection_ts.magneticbearing_nilreason,
    airport_heliport.runwaydirection_ts.patternvfr_value,
    airport_heliport.runwaydirection_ts.patternvfr_nilreason,
    airport_heliport.runwaydirection_ts.slopetdz_value,
    airport_heliport.runwaydirection_ts.slopetdz_nilreason,
    airport_heliport.runwaydirection_ts.approachmarkingtype_value,
    airport_heliport.runwaydirection_ts.approachmarkingtype_nilreason,
    airport_heliport.runwaydirection_ts.approachmarkingcondition_value,
    airport_heliport.runwaydirection_ts.approachmarkingcondition_nilreason,
    airport_heliport.runwaydirection_ts.classlightingjar_value,
    airport_heliport.runwaydirection_ts.classlightingjar_nilreason,
    airport_heliport.runwaydirection_ts.precisionapproachguidance_value,
    airport_heliport.runwaydirection_ts.precisionapproachguidance_nilreason,
    airport_heliport.runwaydirection_ts.elevationtdz_value,
    airport_heliport.runwaydirection_ts.elevationtdz_uom,
    airport_heliport.runwaydirection_ts.elevationtdz_nilreason,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_value,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_uom,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_nilreason,
    airport_heliport_runway_pt_tdxsqi.title,
    airport_heliport_runway_pt_tdxsqi.nilreason[1],
    airport_heliport_runway_pt_tdxsqi.href,
    airport_heliport_runwayelement_pt_gciwpb.title,
    airport_heliport_runwayelement_pt_gciwpb.nilreason[1],
    airport_heliport_runwayelement_pt_gciwpb.href
order by runwaydirection.identifier, runwaydirection_ts.sequence_number, runwaydirection_ts.correction_number DESC;
create index on airport_heliport.runwaydirection_view (id);
-- RunwayElementTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'airport_heliport.manoeuvringareaavailability_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.runwayelement_view cascade;
create materialized view airport_heliport.runwayelement_view as
select distinct on (runwayelement.identifier,runwayelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayelement.id,
    airport_heliport.runwayelement_ts.id as ts_id,
    airport_heliport.runwayelement_tsp.id as tsp_id,
    airport_heliport.runwayelement.identifier,
    airport_heliport.runwayelement_ts.interpretation,
    airport_heliport.runwayelement_ts.sequence_number,
    airport_heliport.runwayelement_ts.correction_number,
    airport_heliport.runwayelement_ts.valid_time_begin,
    airport_heliport.runwayelement_ts.valid_time_end,
    airport_heliport.runwayelement_ts.feature_lifetime_begin,
    airport_heliport.runwayelement_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayelement_ts.type_value as varchar), '(' || airport_heliport.runwayelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runwayelement_ts.gradeseparation_value as varchar), '(' || airport_heliport.runwayelement_ts.gradeseparation_nilreason || ')') as gradeseparation,
    coalesce(cast(airport_heliport.runwayelement_ts.length_value as varchar) || ' ' || airport_heliport.runwayelement_ts.length_uom, '(' || airport_heliport.runwayelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.runwayelement_ts.width_value as varchar) || ' ' || airport_heliport.runwayelement_ts.width_uom, '(' || airport_heliport.runwayelement_ts.width_nilreason || ')') as width,
    airport_heliport_surfacecharacteristics_view_ghghly.id AS surfaceproperties,
    geometry_elevatedsurface_view_qrdpzx.geom AS extent_geom,
    geometry_elevatedsurface_view_qrdpzx.elevation AS extent_elevation,
    geometry_elevatedsurface_view_qrdpzx.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_qrdpzx.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_qrdpzx.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_qrdpzx.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runway_pt_ftjbhy.id,
    'title', coalesce(cast(airport_heliport_runway_pt_ftjbhy.title AS varchar), '(' || airport_heliport_runway_pt_ftjbhy.nilreason[1] || ')'),
    'href', airport_heliport_runway_pt_ftjbhy.href)) AS associatedrunway,
    jsonb_agg(notes_note_view_ampzgq.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_zwgfnq.id) AS availability
from airport_heliport.runwayelement 
inner join master_join mj2 on airport_heliport.runwayelement.id = mj2.source_id
inner join airport_heliport.runwayelement_tsp on mj2.target_id = airport_heliport.runwayelement_tsp.id
inner join airport_heliport.runwayelement_ts on airport_heliport.runwayelement_tsp.runwayelementtimeslice_id = airport_heliport.runwayelement_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_ghghly on airport_heliport.runwayelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_ghghly.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_qrdpzx on airport_heliport.runwayelement_ts.extent_id = geometry_elevatedsurface_view_qrdpzx.id
left join master_join master_join_vbkyyn on airport_heliport.runwayelement_ts.id = master_join_vbkyyn.source_id
left join airport_heliport.runway_pt airport_heliport_runway_pt_ftjbhy on master_join_vbkyyn.target_id = airport_heliport_runway_pt_ftjbhy.id
left join master_join master_join_gqnyom on airport_heliport.runwayelement_ts.id = master_join_gqnyom.source_id
left join notes.note_view notes_note_view_ampzgq on master_join_gqnyom.target_id = notes_note_view_ampzgq.id
left join master_join master_join_synzyx on airport_heliport.runwayelement_ts.id = master_join_synzyx.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_zwgfnq on master_join_synzyx.target_id = airport_heliport_manoeuvringareaavailability_view_zwgfnq.id
where airport_heliport.runwayelement.feature_status = 'APPROVED'
  and airport_heliport.runwayelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayelement.id,
    airport_heliport.runwayelement_ts.id,
    airport_heliport.runwayelement_tsp.id,
    airport_heliport.runwayelement.identifier,
    airport_heliport.runwayelement_ts.interpretation,
    airport_heliport.runwayelement_ts.sequence_number,
    airport_heliport.runwayelement_ts.correction_number,
    airport_heliport.runwayelement_ts.valid_time_begin,
    airport_heliport.runwayelement_ts.valid_time_end,
    airport_heliport.runwayelement_ts.feature_lifetime_begin,
    airport_heliport.runwayelement_ts.feature_lifetime_end,
    airport_heliport.runwayelement_ts.type_value,
    airport_heliport.runwayelement_ts.type_nilreason,
    airport_heliport.runwayelement_ts.gradeseparation_value,
    airport_heliport.runwayelement_ts.gradeseparation_nilreason,
    airport_heliport.runwayelement_ts.length_value,
    airport_heliport.runwayelement_ts.length_uom,
    airport_heliport.runwayelement_ts.length_nilreason,
    airport_heliport.runwayelement_ts.width_value,
    airport_heliport.runwayelement_ts.width_uom,
    airport_heliport.runwayelement_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_view_ghghly.id,
    geometry_elevatedsurface_view_qrdpzx.geom,
    geometry_elevatedsurface_view_qrdpzx.elevation,
    geometry_elevatedsurface_view_qrdpzx.geoidUndulation,
    geometry_elevatedsurface_view_qrdpzx.verticalDatum,
    geometry_elevatedsurface_view_qrdpzx.verticalAccuracy,
    geometry_elevatedsurface_view_qrdpzx.horizontalAccuracy
order by runwayelement.identifier, runwayelement_ts.sequence_number, runwayelement_ts.correction_number DESC;
create index on airport_heliport.runwayelement_view (id);
-- RunwayMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.runwaymarking_view cascade;
create materialized view airport_heliport.runwaymarking_view as
select distinct on (runwaymarking.identifier,runwaymarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaymarking.id,
    airport_heliport.runwaymarking_ts.id as ts_id,
    airport_heliport.runwaymarking_tsp.id as tsp_id,
    airport_heliport.runwaymarking.identifier,
    airport_heliport.runwaymarking_ts.interpretation,
    airport_heliport.runwaymarking_ts.sequence_number,
    airport_heliport.runwaymarking_ts.correction_number,
    airport_heliport.runwaymarking_ts.valid_time_begin,
    airport_heliport.runwaymarking_ts.valid_time_end,
    airport_heliport.runwaymarking_ts.feature_lifetime_begin,
    airport_heliport.runwaymarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaymarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.runwaymarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.runwaymarking_ts.condition_value as varchar), '(' || airport_heliport.runwaymarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.runwaymarking_ts.markinglocation_value as varchar), '(' || airport_heliport.runwaymarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_runway_pt_eoxwub.title as varchar), '(' || airport_heliport_runway_pt_eoxwub.nilreason[1] || ')') AS markedrunway,
    airport_heliport_runway_pt_eoxwub.href AS markedrunway_href,
    jsonb_agg(airport_heliport_markingelement_view_npdvyp.id) AS element,
    jsonb_agg(notes_note_view_dwiszp.*) AS annotation
from airport_heliport.runwaymarking 
inner join master_join mj2 on airport_heliport.runwaymarking.id = mj2.source_id
inner join airport_heliport.runwaymarking_tsp on mj2.target_id = airport_heliport.runwaymarking_tsp.id
inner join airport_heliport.runwaymarking_ts on airport_heliport.runwaymarking_tsp.runwaymarkingtimeslice_id = airport_heliport.runwaymarking_ts.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_eoxwub on airport_heliport.runwaymarking_ts.markedrunway_id = airport_heliport_runway_pt_eoxwub.id
left join master_join master_join_faabkq on airport_heliport.runwaymarking_ts.id = master_join_faabkq.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_npdvyp on master_join_faabkq.target_id = airport_heliport_markingelement_view_npdvyp.id
left join master_join master_join_ilgkjl on airport_heliport.runwaymarking_ts.id = master_join_ilgkjl.source_id
left join notes.note_view notes_note_view_dwiszp on master_join_ilgkjl.target_id = notes_note_view_dwiszp.id
where airport_heliport.runwaymarking.feature_status = 'APPROVED'
  and airport_heliport.runwaymarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaymarking.id,
    airport_heliport.runwaymarking_ts.id,
    airport_heliport.runwaymarking_tsp.id,
    airport_heliport.runwaymarking.identifier,
    airport_heliport.runwaymarking_ts.interpretation,
    airport_heliport.runwaymarking_ts.sequence_number,
    airport_heliport.runwaymarking_ts.correction_number,
    airport_heliport.runwaymarking_ts.valid_time_begin,
    airport_heliport.runwaymarking_ts.valid_time_end,
    airport_heliport.runwaymarking_ts.feature_lifetime_begin,
    airport_heliport.runwaymarking_ts.feature_lifetime_end,
    airport_heliport.runwaymarking_ts.markingicaostandard_value,
    airport_heliport.runwaymarking_ts.markingicaostandard_nilreason,
    airport_heliport.runwaymarking_ts.condition_value,
    airport_heliport.runwaymarking_ts.condition_nilreason,
    airport_heliport.runwaymarking_ts.markinglocation_value,
    airport_heliport.runwaymarking_ts.markinglocation_nilreason,
    airport_heliport_runway_pt_eoxwub.title,
    airport_heliport_runway_pt_eoxwub.nilreason[1],
    airport_heliport_runway_pt_eoxwub.href
order by runwaymarking.identifier, runwaymarking_ts.sequence_number, runwaymarking_ts.correction_number DESC;
create index on airport_heliport.runwaymarking_view (id);
-- RunwayProtectAreaLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwayprotectarealightsystem_view cascade;
create materialized view airport_heliport.runwayprotectarealightsystem_view as
select distinct on (runwayprotectarealightsystem.identifier,runwayprotectarealightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayprotectarealightsystem.id,
    airport_heliport.runwayprotectarealightsystem_ts.id as ts_id,
    airport_heliport.runwayprotectarealightsystem_tsp.id as tsp_id,
    airport_heliport.runwayprotectarealightsystem.identifier,
    airport_heliport.runwayprotectarealightsystem_ts.interpretation,
    airport_heliport.runwayprotectarealightsystem_ts.sequence_number,
    airport_heliport.runwayprotectarealightsystem_ts.correction_number,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_begin,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_end,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.colour_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.position_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_runwayprotectarea_pt_zsbbaw.title as varchar), '(' || airport_heliport_runwayprotectarea_pt_zsbbaw.nilreason[1] || ')') AS lightedarea,
    airport_heliport_runwayprotectarea_pt_zsbbaw.href AS lightedarea_href,
    jsonb_agg(shared_lightelement_view_wztdjj.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_noityb.id) AS availability,
    jsonb_agg(notes_note_view_xsbfvt.*) AS annotation
from airport_heliport.runwayprotectarealightsystem 
inner join master_join mj2 on airport_heliport.runwayprotectarealightsystem.id = mj2.source_id
inner join airport_heliport.runwayprotectarealightsystem_tsp on mj2.target_id = airport_heliport.runwayprotectarealightsystem_tsp.id
inner join airport_heliport.runwayprotectarealightsystem_ts on airport_heliport.runwayprotectarealightsystem_tsp.runwayprotectarealightsystemtimeslice_id = airport_heliport.runwayprotectarealightsystem_ts.id
left join airport_heliport.runwayprotectarea_pt airport_heliport_runwayprotectarea_pt_zsbbaw on airport_heliport.runwayprotectarealightsystem_ts.lightedarea_id = airport_heliport_runwayprotectarea_pt_zsbbaw.id
left join master_join master_join_jnqmpj on airport_heliport.runwayprotectarealightsystem_ts.id = master_join_jnqmpj.source_id
left join shared.lightelement_view shared_lightelement_view_wztdjj on master_join_jnqmpj.target_id = shared_lightelement_view_wztdjj.id
left join master_join master_join_wxfczo on airport_heliport.runwayprotectarealightsystem_ts.id = master_join_wxfczo.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_noityb on master_join_wxfczo.target_id = airport_heliport_groundlightingavailability_view_noityb.id
left join master_join master_join_jvknce on airport_heliport.runwayprotectarealightsystem_ts.id = master_join_jvknce.source_id
left join notes.note_view notes_note_view_xsbfvt on master_join_jvknce.target_id = notes_note_view_xsbfvt.id
where airport_heliport.runwayprotectarealightsystem.feature_status = 'APPROVED'
  and airport_heliport.runwayprotectarealightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayprotectarealightsystem.id,
    airport_heliport.runwayprotectarealightsystem_ts.id,
    airport_heliport.runwayprotectarealightsystem_tsp.id,
    airport_heliport.runwayprotectarealightsystem.identifier,
    airport_heliport.runwayprotectarealightsystem_ts.interpretation,
    airport_heliport.runwayprotectarealightsystem_ts.sequence_number,
    airport_heliport.runwayprotectarealightsystem_ts.correction_number,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_begin,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_end,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_end,
    airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_value,
    airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_value,
    airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.colour_value,
    airport_heliport.runwayprotectarealightsystem_ts.colour_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.position_value,
    airport_heliport.runwayprotectarealightsystem_ts.position_nilreason,
    airport_heliport_runwayprotectarea_pt_zsbbaw.title,
    airport_heliport_runwayprotectarea_pt_zsbbaw.nilreason[1],
    airport_heliport_runwayprotectarea_pt_zsbbaw.href
order by runwayprotectarealightsystem.identifier, runwayprotectarealightsystem_ts.sequence_number, runwayprotectarealightsystem_ts.correction_number DESC;
create index on airport_heliport.runwayprotectarealightsystem_view (id);
-- RunwayProtectAreaTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.runwayprotectarea_view cascade;
create materialized view airport_heliport.runwayprotectarea_view as
select distinct on (runwayprotectarea.identifier,runwayprotectarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayprotectarea.id,
    airport_heliport.runwayprotectarea_ts.id as ts_id,
    airport_heliport.runwayprotectarea_tsp.id as tsp_id,
    airport_heliport.runwayprotectarea.identifier,
    airport_heliport.runwayprotectarea_ts.interpretation,
    airport_heliport.runwayprotectarea_ts.sequence_number,
    airport_heliport.runwayprotectarea_ts.correction_number,
    airport_heliport.runwayprotectarea_ts.valid_time_begin,
    airport_heliport.runwayprotectarea_ts.valid_time_end,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.lighting_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.lighting_nilreason || ')') as lighting,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.obstaclefree_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.obstaclefree_nilreason || ')') as obstaclefree,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.type_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.status_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.width_value as varchar) || ' ' || airport_heliport.runwayprotectarea_ts.width_uom, '(' || airport_heliport.runwayprotectarea_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.length_value as varchar) || ' ' || airport_heliport.runwayprotectarea_ts.length_uom, '(' || airport_heliport.runwayprotectarea_ts.length_nilreason || ')') as length,
    airport_heliport_surfacecharacteristics_view_nlxaxq.id AS surfaceproperties,
    geometry_elevatedsurface_view_mgizac.geom AS extent_geom,
    geometry_elevatedsurface_view_mgizac.elevation AS extent_elevation,
    geometry_elevatedsurface_view_mgizac.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_mgizac.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_mgizac.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_mgizac.horizontalAccuracy AS extent_horizontalaccuracy,
    coalesce(cast(airport_heliport_runwaydirection_pt_slmkrl.title as varchar), '(' || airport_heliport_runwaydirection_pt_slmkrl.nilreason[1] || ')') AS protectedrunwaydirection,
    airport_heliport_runwaydirection_pt_slmkrl.href AS protectedrunwaydirection_href,
    jsonb_agg(notes_note_view_idgskp.*) AS annotation
from airport_heliport.runwayprotectarea 
inner join master_join mj2 on airport_heliport.runwayprotectarea.id = mj2.source_id
inner join airport_heliport.runwayprotectarea_tsp on mj2.target_id = airport_heliport.runwayprotectarea_tsp.id
inner join airport_heliport.runwayprotectarea_ts on airport_heliport.runwayprotectarea_tsp.runwayprotectareatimeslice_id = airport_heliport.runwayprotectarea_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_nlxaxq on airport_heliport.runwayprotectarea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_nlxaxq.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_mgizac on airport_heliport.runwayprotectarea_ts.extent_id = geometry_elevatedsurface_view_mgizac.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_slmkrl on airport_heliport.runwayprotectarea_ts.protectedrunwaydirection_id = airport_heliport_runwaydirection_pt_slmkrl.id
left join master_join master_join_iuahsj on airport_heliport.runwayprotectarea_ts.id = master_join_iuahsj.source_id
left join notes.note_view notes_note_view_idgskp on master_join_iuahsj.target_id = notes_note_view_idgskp.id
where airport_heliport.runwayprotectarea.feature_status = 'APPROVED'
  and airport_heliport.runwayprotectarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayprotectarea.id,
    airport_heliport.runwayprotectarea_ts.id,
    airport_heliport.runwayprotectarea_tsp.id,
    airport_heliport.runwayprotectarea.identifier,
    airport_heliport.runwayprotectarea_ts.interpretation,
    airport_heliport.runwayprotectarea_ts.sequence_number,
    airport_heliport.runwayprotectarea_ts.correction_number,
    airport_heliport.runwayprotectarea_ts.valid_time_begin,
    airport_heliport.runwayprotectarea_ts.valid_time_end,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_end,
    airport_heliport.runwayprotectarea_ts.lighting_value,
    airport_heliport.runwayprotectarea_ts.lighting_nilreason,
    airport_heliport.runwayprotectarea_ts.obstaclefree_value,
    airport_heliport.runwayprotectarea_ts.obstaclefree_nilreason,
    airport_heliport.runwayprotectarea_ts.type_value,
    airport_heliport.runwayprotectarea_ts.type_nilreason,
    airport_heliport.runwayprotectarea_ts.status_value,
    airport_heliport.runwayprotectarea_ts.status_nilreason,
    airport_heliport.runwayprotectarea_ts.width_value,
    airport_heliport.runwayprotectarea_ts.width_uom,
    airport_heliport.runwayprotectarea_ts.width_nilreason,
    airport_heliport.runwayprotectarea_ts.length_value,
    airport_heliport.runwayprotectarea_ts.length_uom,
    airport_heliport.runwayprotectarea_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_view_nlxaxq.id,
    geometry_elevatedsurface_view_mgizac.geom,
    geometry_elevatedsurface_view_mgizac.elevation,
    geometry_elevatedsurface_view_mgizac.geoidUndulation,
    geometry_elevatedsurface_view_mgizac.verticalDatum,
    geometry_elevatedsurface_view_mgizac.verticalAccuracy,
    geometry_elevatedsurface_view_mgizac.horizontalAccuracy,
    airport_heliport_runwaydirection_pt_slmkrl.title,
    airport_heliport_runwaydirection_pt_slmkrl.nilreason[1],
    airport_heliport_runwaydirection_pt_slmkrl.href
order by runwayprotectarea.identifier, runwayprotectarea_ts.sequence_number, runwayprotectarea_ts.correction_number DESC;
create index on airport_heliport.runwayprotectarea_view (id);
-- RunwayTimeSliceType
-- ['airport_heliport.runwaysectioncontamination_view', 'airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'airport_heliport.runwaycontamination_view']
drop materialized view if exists airport_heliport.runway_view cascade;
create materialized view airport_heliport.runway_view as
select distinct on (runway.identifier,runway_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runway.id,
    airport_heliport.runway_ts.id as ts_id,
    airport_heliport.runway_tsp.id as tsp_id,
    airport_heliport.runway.identifier,
    airport_heliport.runway_ts.interpretation,
    airport_heliport.runway_ts.sequence_number,
    airport_heliport.runway_ts.correction_number,
    airport_heliport.runway_ts.valid_time_begin,
    airport_heliport.runway_ts.valid_time_end,
    airport_heliport.runway_ts.feature_lifetime_begin,
    airport_heliport.runway_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runway_ts.designator_value as varchar), '(' || airport_heliport.runway_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.runway_ts.type_value as varchar), '(' || airport_heliport.runway_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runway_ts.abandoned_value as varchar), '(' || airport_heliport.runway_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.runway_ts.nominallength_value as varchar) || ' ' || airport_heliport.runway_ts.nominallength_uom, '(' || airport_heliport.runway_ts.nominallength_nilreason || ')') as nominallength,
    coalesce(cast(airport_heliport.runway_ts.lengthaccuracy_value as varchar) || ' ' || airport_heliport.runway_ts.lengthaccuracy_uom, '(' || airport_heliport.runway_ts.lengthaccuracy_nilreason || ')') as lengthaccuracy,
    coalesce(cast(airport_heliport.runway_ts.nominalwidth_value as varchar) || ' ' || airport_heliport.runway_ts.nominalwidth_uom, '(' || airport_heliport.runway_ts.nominalwidth_nilreason || ')') as nominalwidth,
    coalesce(cast(airport_heliport.runway_ts.widthaccuracy_value as varchar) || ' ' || airport_heliport.runway_ts.widthaccuracy_uom, '(' || airport_heliport.runway_ts.widthaccuracy_nilreason || ')') as widthaccuracy,
    coalesce(cast(airport_heliport.runway_ts.widthshoulder_value as varchar) || ' ' || airport_heliport.runway_ts.widthshoulder_uom, '(' || airport_heliport.runway_ts.widthshoulder_nilreason || ')') as widthshoulder,
    coalesce(cast(airport_heliport.runway_ts.lengthstrip_value as varchar) || ' ' || airport_heliport.runway_ts.lengthstrip_uom, '(' || airport_heliport.runway_ts.lengthstrip_nilreason || ')') as lengthstrip,
    coalesce(cast(airport_heliport.runway_ts.widthstrip_value as varchar) || ' ' || airport_heliport.runway_ts.widthstrip_uom, '(' || airport_heliport.runway_ts.widthstrip_nilreason || ')') as widthstrip,
    coalesce(cast(airport_heliport.runway_ts.lengthoffset_value as varchar) || ' ' || airport_heliport.runway_ts.lengthoffset_uom, '(' || airport_heliport.runway_ts.lengthoffset_nilreason || ')') as lengthoffset,
    coalesce(cast(airport_heliport.runway_ts.widthoffset_value as varchar) || ' ' || airport_heliport.runway_ts.widthoffset_uom, '(' || airport_heliport.runway_ts.widthoffset_nilreason || ')') as widthoffset,
    airport_heliport_surfacecharacteristics_view_gtalif.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_poqvmv.title as varchar), '(' || airport_heliport_airportheliport_pt_poqvmv.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_poqvmv.href AS associatedairportheliport_href,
    jsonb_agg(airport_heliport_runwaycontamination_view_nwiyhd.id) AS overallcontaminant,
    jsonb_agg(notes_note_view_gwdmsr.*) AS annotation,
    jsonb_agg(airport_heliport_runwaysectioncontamination_view_xkzwun.id) AS areacontaminant
from airport_heliport.runway 
inner join master_join mj2 on airport_heliport.runway.id = mj2.source_id
inner join airport_heliport.runway_tsp on mj2.target_id = airport_heliport.runway_tsp.id
inner join airport_heliport.runway_ts on airport_heliport.runway_tsp.runwaytimeslice_id = airport_heliport.runway_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_gtalif on airport_heliport.runway_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_gtalif.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_poqvmv on airport_heliport.runway_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_poqvmv.id
left join master_join master_join_hmcjuw on airport_heliport.runway_ts.id = master_join_hmcjuw.source_id
left join airport_heliport.runwaycontamination_view airport_heliport_runwaycontamination_view_nwiyhd on master_join_hmcjuw.target_id = airport_heliport_runwaycontamination_view_nwiyhd.id
left join master_join master_join_dyfxun on airport_heliport.runway_ts.id = master_join_dyfxun.source_id
left join notes.note_view notes_note_view_gwdmsr on master_join_dyfxun.target_id = notes_note_view_gwdmsr.id
left join master_join master_join_kadsge on airport_heliport.runway_ts.id = master_join_kadsge.source_id
left join airport_heliport.runwaysectioncontamination_view airport_heliport_runwaysectioncontamination_view_xkzwun on master_join_kadsge.target_id = airport_heliport_runwaysectioncontamination_view_xkzwun.id
where airport_heliport.runway.feature_status = 'APPROVED'
  and airport_heliport.runway_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runway.id,
    airport_heliport.runway_ts.id,
    airport_heliport.runway_tsp.id,
    airport_heliport.runway.identifier,
    airport_heliport.runway_ts.interpretation,
    airport_heliport.runway_ts.sequence_number,
    airport_heliport.runway_ts.correction_number,
    airport_heliport.runway_ts.valid_time_begin,
    airport_heliport.runway_ts.valid_time_end,
    airport_heliport.runway_ts.feature_lifetime_begin,
    airport_heliport.runway_ts.feature_lifetime_end,
    airport_heliport.runway_ts.designator_value,
    airport_heliport.runway_ts.designator_nilreason,
    airport_heliport.runway_ts.type_value,
    airport_heliport.runway_ts.type_nilreason,
    airport_heliport.runway_ts.abandoned_value,
    airport_heliport.runway_ts.abandoned_nilreason,
    airport_heliport.runway_ts.nominallength_value,
    airport_heliport.runway_ts.nominallength_uom,
    airport_heliport.runway_ts.nominallength_nilreason,
    airport_heliport.runway_ts.lengthaccuracy_value,
    airport_heliport.runway_ts.lengthaccuracy_uom,
    airport_heliport.runway_ts.lengthaccuracy_nilreason,
    airport_heliport.runway_ts.nominalwidth_value,
    airport_heliport.runway_ts.nominalwidth_uom,
    airport_heliport.runway_ts.nominalwidth_nilreason,
    airport_heliport.runway_ts.widthaccuracy_value,
    airport_heliport.runway_ts.widthaccuracy_uom,
    airport_heliport.runway_ts.widthaccuracy_nilreason,
    airport_heliport.runway_ts.widthshoulder_value,
    airport_heliport.runway_ts.widthshoulder_uom,
    airport_heliport.runway_ts.widthshoulder_nilreason,
    airport_heliport.runway_ts.lengthstrip_value,
    airport_heliport.runway_ts.lengthstrip_uom,
    airport_heliport.runway_ts.lengthstrip_nilreason,
    airport_heliport.runway_ts.widthstrip_value,
    airport_heliport.runway_ts.widthstrip_uom,
    airport_heliport.runway_ts.widthstrip_nilreason,
    airport_heliport.runway_ts.lengthoffset_value,
    airport_heliport.runway_ts.lengthoffset_uom,
    airport_heliport.runway_ts.lengthoffset_nilreason,
    airport_heliport.runway_ts.widthoffset_value,
    airport_heliport.runway_ts.widthoffset_uom,
    airport_heliport.runway_ts.widthoffset_nilreason,
    airport_heliport_surfacecharacteristics_view_gtalif.id,
    airport_heliport_airportheliport_pt_poqvmv.title,
    airport_heliport_airportheliport_pt_poqvmv.nilreason[1],
    airport_heliport_airportheliport_pt_poqvmv.href
order by runway.identifier, runway_ts.sequence_number, runway_ts.correction_number DESC;
create index on airport_heliport.runway_view (id);
-- RunwayVisualRangeTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwayvisualrange_view cascade;
create materialized view airport_heliport.runwayvisualrange_view as
select distinct on (runwayvisualrange.identifier,runwayvisualrange_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayvisualrange.id,
    airport_heliport.runwayvisualrange_ts.id as ts_id,
    airport_heliport.runwayvisualrange_tsp.id as tsp_id,
    airport_heliport.runwayvisualrange.identifier,
    airport_heliport.runwayvisualrange_ts.interpretation,
    airport_heliport.runwayvisualrange_ts.sequence_number,
    airport_heliport.runwayvisualrange_ts.correction_number,
    airport_heliport.runwayvisualrange_ts.valid_time_begin,
    airport_heliport.runwayvisualrange_ts.valid_time_end,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_begin,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayvisualrange_ts.readingposition_value as varchar), '(' || airport_heliport.runwayvisualrange_ts.readingposition_nilreason || ')') as readingposition,
    geometry_elevatedpoint_view_uvvwrv.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_uvvwrv.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_uvvwrv.geom) AS location_latitude,
    geometry_elevatedpoint_view_uvvwrv.elevation AS location_elevation,
    geometry_elevatedpoint_view_uvvwrv.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_uvvwrv.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_uvvwrv.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_uvvwrv.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_eycnio.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_eycnio.title AS varchar), '(' || airport_heliport_runwaydirection_pt_eycnio.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_eycnio.href)) AS associatedrunwaydirection,
    jsonb_agg(notes_note_view_oonhzu.*) AS annotation
from airport_heliport.runwayvisualrange 
inner join master_join mj2 on airport_heliport.runwayvisualrange.id = mj2.source_id
inner join airport_heliport.runwayvisualrange_tsp on mj2.target_id = airport_heliport.runwayvisualrange_tsp.id
inner join airport_heliport.runwayvisualrange_ts on airport_heliport.runwayvisualrange_tsp.runwayvisualrangetimeslice_id = airport_heliport.runwayvisualrange_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_uvvwrv on airport_heliport.runwayvisualrange_ts.location_id = geometry_elevatedpoint_view_uvvwrv.id
left join master_join master_join_vtbxgm on airport_heliport.runwayvisualrange_ts.id = master_join_vtbxgm.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_eycnio on master_join_vtbxgm.target_id = airport_heliport_runwaydirection_pt_eycnio.id
left join master_join master_join_clmgfk on airport_heliport.runwayvisualrange_ts.id = master_join_clmgfk.source_id
left join notes.note_view notes_note_view_oonhzu on master_join_clmgfk.target_id = notes_note_view_oonhzu.id
where airport_heliport.runwayvisualrange.feature_status = 'APPROVED'
  and airport_heliport.runwayvisualrange_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayvisualrange.id,
    airport_heliport.runwayvisualrange_ts.id,
    airport_heliport.runwayvisualrange_tsp.id,
    airport_heliport.runwayvisualrange.identifier,
    airport_heliport.runwayvisualrange_ts.interpretation,
    airport_heliport.runwayvisualrange_ts.sequence_number,
    airport_heliport.runwayvisualrange_ts.correction_number,
    airport_heliport.runwayvisualrange_ts.valid_time_begin,
    airport_heliport.runwayvisualrange_ts.valid_time_end,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_begin,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_end,
    airport_heliport.runwayvisualrange_ts.readingposition_value,
    airport_heliport.runwayvisualrange_ts.readingposition_nilreason,
    geometry_elevatedpoint_view_uvvwrv.geom,
    geometry_elevatedpoint_view_uvvwrv.elevation,
    geometry_elevatedpoint_view_uvvwrv.geoidUndulation,
    geometry_elevatedpoint_view_uvvwrv.verticalDatum,
    geometry_elevatedpoint_view_uvvwrv.verticalAccuracy,
    geometry_elevatedpoint_view_uvvwrv.horizontalAccuracy
order by runwayvisualrange.identifier, runwayvisualrange_ts.sequence_number, runwayvisualrange_ts.correction_number DESC;
create index on airport_heliport.runwayvisualrange_view (id);
-- SafeAltitudeAreaTimeSliceType
-- ['procedure.safealtitudeareasector_view', 'geometry.point_view', 'notes.note_view']
drop materialized view if exists procedure.safealtitudearea_view cascade;
create materialized view procedure.safealtitudearea_view as
select distinct on (safealtitudearea.identifier,safealtitudearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.safealtitudearea.id,
    procedure.safealtitudearea_ts.id as ts_id,
    procedure.safealtitudearea_tsp.id as tsp_id,
    procedure.safealtitudearea.identifier,
    procedure.safealtitudearea_ts.interpretation,
    procedure.safealtitudearea_ts.sequence_number,
    procedure.safealtitudearea_ts.correction_number,
    procedure.safealtitudearea_ts.valid_time_begin,
    procedure.safealtitudearea_ts.valid_time_end,
    procedure.safealtitudearea_ts.feature_lifetime_begin,
    procedure.safealtitudearea_ts.feature_lifetime_end,
    coalesce(cast(procedure.safealtitudearea_ts.safeareatype_value as varchar), '(' || procedure.safealtitudearea_ts.safeareatype_nilreason || ')') as safeareatype,
    coalesce(cast(navaids_points_designatedpoint_pt_nfguqr.title as varchar), '(' || navaids_points_designatedpoint_pt_nfguqr.nilreason[1] || ')') AS centrepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_nfguqr.href AS centrepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_jiooay.title as varchar), '(' || navaids_points_navaid_pt_jiooay.nilreason[1] || ')') AS centrepointnavaidsystem,
    navaids_points_navaid_pt_jiooay.href AS centrepointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_jgtkqe.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_jgtkqe.nilreason[1] || ')') AS centrepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_jgtkqe.href AS centrepointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_wjxchq.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_wjxchq.nilreason[1] || ')') AS centrepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_wjxchq.href AS centrepointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_caewah.title as varchar), '(' || airport_heliport_airportheliport_pt_caewah.nilreason[1] || ')') AS centrepointairportreferencepoint,
    airport_heliport_airportheliport_pt_caewah.href AS centrepointairportreferencepoint_href,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_dzqdcy.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_dzqdcy.title AS varchar), '(' || airport_heliport_airportheliport_pt_dzqdcy.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_dzqdcy.href)) AS location,
    geometry_point_view_injlmg.geom AS centrepointposition_geom,
    ST_X(geometry_point_view_injlmg.geom) AS centrepointposition_longitude,
    ST_Y(geometry_point_view_injlmg.geom) AS centrepointposition_latitude,
    geometry_point_view_injlmg.horizontalAccuracy AS centrepointposition_horizontalaccuracy,
    jsonb_agg(procedure_safealtitudeareasector_view_bzcspk.id) AS sector,
    jsonb_agg(notes_note_view_itolxk.*) AS annotation
from procedure.safealtitudearea 
inner join master_join mj2 on procedure.safealtitudearea.id = mj2.source_id
inner join procedure.safealtitudearea_tsp on mj2.target_id = procedure.safealtitudearea_tsp.id
inner join procedure.safealtitudearea_ts on procedure.safealtitudearea_tsp.safealtitudeareatimeslice_id = procedure.safealtitudearea_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_nfguqr on procedure.safealtitudearea_ts.centrepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_nfguqr.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_jiooay on procedure.safealtitudearea_ts.centrepoint_navaidsystem_id = navaids_points_navaid_pt_jiooay.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_jgtkqe on procedure.safealtitudearea_ts.centrepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_jgtkqe.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_wjxchq on procedure.safealtitudearea_ts.centrepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_wjxchq.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_caewah on procedure.safealtitudearea_ts.centrepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_caewah.id
left join geometry.point_view geometry_point_view_injlmg on procedure.safealtitudearea_ts.centrepoint_position_id = geometry_point_view_injlmg.id
left join master_join master_join_hbqyqx on procedure.safealtitudearea_ts.id = master_join_hbqyqx.source_id
left join procedure.safealtitudeareasector_view procedure_safealtitudeareasector_view_bzcspk on master_join_hbqyqx.target_id = procedure_safealtitudeareasector_view_bzcspk.id
left join master_join master_join_fjlqfp on procedure.safealtitudearea_ts.id = master_join_fjlqfp.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_dzqdcy on master_join_fjlqfp.target_id = airport_heliport_airportheliport_pt_dzqdcy.id
left join master_join master_join_wccmgd on procedure.safealtitudearea_ts.id = master_join_wccmgd.source_id
left join notes.note_view notes_note_view_itolxk on master_join_wccmgd.target_id = notes_note_view_itolxk.id
where procedure.safealtitudearea.feature_status = 'APPROVED'
  and procedure.safealtitudearea_ts.feature_status = 'APPROVED'
group by
    procedure.safealtitudearea.id,
    procedure.safealtitudearea_ts.id,
    procedure.safealtitudearea_tsp.id,
    procedure.safealtitudearea.identifier,
    procedure.safealtitudearea_ts.interpretation,
    procedure.safealtitudearea_ts.sequence_number,
    procedure.safealtitudearea_ts.correction_number,
    procedure.safealtitudearea_ts.valid_time_begin,
    procedure.safealtitudearea_ts.valid_time_end,
    procedure.safealtitudearea_ts.feature_lifetime_begin,
    procedure.safealtitudearea_ts.feature_lifetime_end,
    procedure.safealtitudearea_ts.safeareatype_value,
    procedure.safealtitudearea_ts.safeareatype_nilreason,
    navaids_points_designatedpoint_pt_nfguqr.title,
    navaids_points_designatedpoint_pt_nfguqr.nilreason[1],
    navaids_points_designatedpoint_pt_nfguqr.href,
    navaids_points_navaid_pt_jiooay.title,
    navaids_points_navaid_pt_jiooay.nilreason[1],
    navaids_points_navaid_pt_jiooay.href,
    airport_heliport_touchdownliftoff_pt_jgtkqe.title,
    airport_heliport_touchdownliftoff_pt_jgtkqe.nilreason[1],
    airport_heliport_touchdownliftoff_pt_jgtkqe.href,
    airport_heliport_runwaycentrelinepoint_pt_wjxchq.title,
    airport_heliport_runwaycentrelinepoint_pt_wjxchq.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_wjxchq.href,
    airport_heliport_airportheliport_pt_caewah.title,
    airport_heliport_airportheliport_pt_caewah.nilreason[1],
    airport_heliport_airportheliport_pt_caewah.href,
    geometry_point_view_injlmg.geom,
    geometry_point_view_injlmg.horizontalAccuracy
order by safealtitudearea.identifier, safealtitudearea_ts.sequence_number, safealtitudearea_ts.correction_number DESC;
create index on procedure.safealtitudearea_view (id);
-- SDFTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.sdf_view cascade;
create materialized view navaids_points.sdf_view as
select distinct on (sdf.identifier,sdf_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.sdf.id,
    navaids_points.sdf_ts.id as ts_id,
    navaids_points.sdf_tsp.id as tsp_id,
    navaids_points.sdf.identifier,
    navaids_points.sdf_ts.interpretation,
    navaids_points.sdf_ts.sequence_number,
    navaids_points.sdf_ts.correction_number,
    navaids_points.sdf_ts.valid_time_begin,
    navaids_points.sdf_ts.valid_time_end,
    navaids_points.sdf_ts.feature_lifetime_begin,
    navaids_points.sdf_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.sdf_ts.designator_value as varchar), '(' || navaids_points.sdf_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.sdf_ts.name_value as varchar), '(' || navaids_points.sdf_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.sdf_ts.emissionclass_value as varchar), '(' || navaids_points.sdf_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.sdf_ts.mobile_value as varchar), '(' || navaids_points.sdf_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.sdf_ts.magneticvariation_value as varchar), '(' || navaids_points.sdf_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.sdf_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.sdf_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.sdf_ts.datemagneticvariation_value as varchar), '(' || navaids_points.sdf_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.sdf_ts.flightchecked_value as varchar), '(' || navaids_points.sdf_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.sdf_ts.magneticbearing_value as varchar), '(' || navaids_points.sdf_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.sdf_ts.truebearing_value as varchar), '(' || navaids_points.sdf_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.sdf_ts.frequency_value as varchar) || ' ' || navaids_points.sdf_ts.frequency_uom, '(' || navaids_points.sdf_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_kznwof.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_kznwof.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_kznwof.geom) AS location_latitude,
    geometry_elevatedpoint_view_kznwof.elevation AS location_elevation,
    geometry_elevatedpoint_view_kznwof.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_kznwof.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_kznwof.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_kznwof.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_yazmtu.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_nmhlzz.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_vdcybn.id) AS availability,
    jsonb_agg(notes_note_view_szcgji.*) AS annotation
from navaids_points.sdf 
inner join master_join mj2 on navaids_points.sdf.id = mj2.source_id
inner join navaids_points.sdf_tsp on mj2.target_id = navaids_points.sdf_tsp.id
inner join navaids_points.sdf_ts on navaids_points.sdf_tsp.sdftimeslice_id = navaids_points.sdf_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_kznwof on navaids_points.sdf_ts.location_id = geometry_elevatedpoint_view_kznwof.id
left join master_join master_join_unnxcm on navaids_points.sdf_ts.id = master_join_unnxcm.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_yazmtu on master_join_unnxcm.target_id = navaids_points_authorityfornavaidequipment_view_yazmtu.id
left join master_join master_join_qbekiq on navaids_points.sdf_ts.id = master_join_qbekiq.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_nmhlzz on master_join_qbekiq.target_id = navaids_points_navaidequipmentmonitoring_view_nmhlzz.id
left join master_join master_join_jkepsp on navaids_points.sdf_ts.id = master_join_jkepsp.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_vdcybn on master_join_jkepsp.target_id = navaids_points_navaidoperationalstatus_view_vdcybn.id
left join master_join master_join_mgnjbx on navaids_points.sdf_ts.id = master_join_mgnjbx.source_id
left join notes.note_view notes_note_view_szcgji on master_join_mgnjbx.target_id = notes_note_view_szcgji.id
where navaids_points.sdf.feature_status = 'APPROVED'
  and navaids_points.sdf_ts.feature_status = 'APPROVED'
group by
    navaids_points.sdf.id,
    navaids_points.sdf_ts.id,
    navaids_points.sdf_tsp.id,
    navaids_points.sdf.identifier,
    navaids_points.sdf_ts.interpretation,
    navaids_points.sdf_ts.sequence_number,
    navaids_points.sdf_ts.correction_number,
    navaids_points.sdf_ts.valid_time_begin,
    navaids_points.sdf_ts.valid_time_end,
    navaids_points.sdf_ts.feature_lifetime_begin,
    navaids_points.sdf_ts.feature_lifetime_end,
    navaids_points.sdf_ts.designator_value,
    navaids_points.sdf_ts.designator_nilreason,
    navaids_points.sdf_ts.name_value,
    navaids_points.sdf_ts.name_nilreason,
    navaids_points.sdf_ts.emissionclass_value,
    navaids_points.sdf_ts.emissionclass_nilreason,
    navaids_points.sdf_ts.mobile_value,
    navaids_points.sdf_ts.mobile_nilreason,
    navaids_points.sdf_ts.magneticvariation_value,
    navaids_points.sdf_ts.magneticvariation_nilreason,
    navaids_points.sdf_ts.magneticvariationaccuracy_value,
    navaids_points.sdf_ts.magneticvariationaccuracy_nilreason,
    navaids_points.sdf_ts.datemagneticvariation_value,
    navaids_points.sdf_ts.datemagneticvariation_nilreason,
    navaids_points.sdf_ts.flightchecked_value,
    navaids_points.sdf_ts.flightchecked_nilreason,
    navaids_points.sdf_ts.magneticbearing_value,
    navaids_points.sdf_ts.magneticbearing_nilreason,
    navaids_points.sdf_ts.truebearing_value,
    navaids_points.sdf_ts.truebearing_nilreason,
    navaids_points.sdf_ts.frequency_value,
    navaids_points.sdf_ts.frequency_uom,
    navaids_points.sdf_ts.frequency_nilreason,
    geometry_elevatedpoint_view_kznwof.geom,
    geometry_elevatedpoint_view_kznwof.elevation,
    geometry_elevatedpoint_view_kznwof.geoidUndulation,
    geometry_elevatedpoint_view_kznwof.verticalDatum,
    geometry_elevatedpoint_view_kznwof.verticalAccuracy,
    geometry_elevatedpoint_view_kznwof.horizontalAccuracy
order by sdf.identifier, sdf_ts.sequence_number, sdf_ts.correction_number DESC;
create index on navaids_points.sdf_view (id);
-- SeaplaneLandingAreaTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view', 'airport_heliport.manoeuvringareaavailability_view']
drop materialized view if exists airport_heliport.seaplanelandingarea_view cascade;
create materialized view airport_heliport.seaplanelandingarea_view as
select distinct on (seaplanelandingarea.identifier,seaplanelandingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.seaplanelandingarea.id,
    airport_heliport.seaplanelandingarea_ts.id as ts_id,
    airport_heliport.seaplanelandingarea_tsp.id as tsp_id,
    airport_heliport.seaplanelandingarea.identifier,
    airport_heliport.seaplanelandingarea_ts.interpretation,
    airport_heliport.seaplanelandingarea_ts.sequence_number,
    airport_heliport.seaplanelandingarea_ts.correction_number,
    airport_heliport.seaplanelandingarea_ts.valid_time_begin,
    airport_heliport.seaplanelandingarea_ts.valid_time_end,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_begin,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_dlwnqj.geom AS extent_geom,
    geometry_elevatedsurface_view_dlwnqj.elevation AS extent_elevation,
    geometry_elevatedsurface_view_dlwnqj.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_dlwnqj.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_dlwnqj.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_dlwnqj.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_seaplanerampsite_pt_xclpll.id,
    'title', coalesce(cast(airport_heliport_seaplanerampsite_pt_xclpll.title AS varchar), '(' || airport_heliport_seaplanerampsite_pt_xclpll.nilreason[1] || ')'),
    'href', airport_heliport_seaplanerampsite_pt_xclpll.href)) AS rampsite,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_floatingdocksite_pt_mcbecw.id,
    'title', coalesce(cast(airport_heliport_floatingdocksite_pt_mcbecw.title AS varchar), '(' || airport_heliport_floatingdocksite_pt_mcbecw.nilreason[1] || ')'),
    'href', airport_heliport_floatingdocksite_pt_mcbecw.href)) AS docksite,
    jsonb_agg(notes_note_view_kxfhfq.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_toijqr.id) AS availability
from airport_heliport.seaplanelandingarea 
inner join master_join mj2 on airport_heliport.seaplanelandingarea.id = mj2.source_id
inner join airport_heliport.seaplanelandingarea_tsp on mj2.target_id = airport_heliport.seaplanelandingarea_tsp.id
inner join airport_heliport.seaplanelandingarea_ts on airport_heliport.seaplanelandingarea_tsp.seaplanelandingareatimeslice_id = airport_heliport.seaplanelandingarea_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_dlwnqj on airport_heliport.seaplanelandingarea_ts.extent_id = geometry_elevatedsurface_view_dlwnqj.id
left join master_join master_join_maoflp on airport_heliport.seaplanelandingarea_ts.id = master_join_maoflp.source_id
left join airport_heliport.seaplanerampsite_pt airport_heliport_seaplanerampsite_pt_xclpll on master_join_maoflp.target_id = airport_heliport_seaplanerampsite_pt_xclpll.id
left join master_join master_join_magxng on airport_heliport.seaplanelandingarea_ts.id = master_join_magxng.source_id
left join airport_heliport.floatingdocksite_pt airport_heliport_floatingdocksite_pt_mcbecw on master_join_magxng.target_id = airport_heliport_floatingdocksite_pt_mcbecw.id
left join master_join master_join_rprgrn on airport_heliport.seaplanelandingarea_ts.id = master_join_rprgrn.source_id
left join notes.note_view notes_note_view_kxfhfq on master_join_rprgrn.target_id = notes_note_view_kxfhfq.id
left join master_join master_join_dyxivd on airport_heliport.seaplanelandingarea_ts.id = master_join_dyxivd.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_toijqr on master_join_dyxivd.target_id = airport_heliport_manoeuvringareaavailability_view_toijqr.id
where airport_heliport.seaplanelandingarea.feature_status = 'APPROVED'
  and airport_heliport.seaplanelandingarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.seaplanelandingarea.id,
    airport_heliport.seaplanelandingarea_ts.id,
    airport_heliport.seaplanelandingarea_tsp.id,
    airport_heliport.seaplanelandingarea.identifier,
    airport_heliport.seaplanelandingarea_ts.interpretation,
    airport_heliport.seaplanelandingarea_ts.sequence_number,
    airport_heliport.seaplanelandingarea_ts.correction_number,
    airport_heliport.seaplanelandingarea_ts.valid_time_begin,
    airport_heliport.seaplanelandingarea_ts.valid_time_end,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_begin,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_dlwnqj.geom,
    geometry_elevatedsurface_view_dlwnqj.elevation,
    geometry_elevatedsurface_view_dlwnqj.geoidUndulation,
    geometry_elevatedsurface_view_dlwnqj.verticalDatum,
    geometry_elevatedsurface_view_dlwnqj.verticalAccuracy,
    geometry_elevatedsurface_view_dlwnqj.horizontalAccuracy
order by seaplanelandingarea.identifier, seaplanelandingarea_ts.sequence_number, seaplanelandingarea_ts.correction_number DESC;
create index on airport_heliport.seaplanelandingarea_view (id);
-- SeaplaneRampSiteTimeSliceType
-- ['geometry.elevatedsurface_view', 'geometry.elevatedcurve_view', 'notes.note_view']
drop materialized view if exists airport_heliport.seaplanerampsite_view cascade;
create materialized view airport_heliport.seaplanerampsite_view as
select distinct on (seaplanerampsite.identifier,seaplanerampsite_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.seaplanerampsite.id,
    airport_heliport.seaplanerampsite_ts.id as ts_id,
    airport_heliport.seaplanerampsite_tsp.id as tsp_id,
    airport_heliport.seaplanerampsite.identifier,
    airport_heliport.seaplanerampsite_ts.interpretation,
    airport_heliport.seaplanerampsite_ts.sequence_number,
    airport_heliport.seaplanerampsite_ts.correction_number,
    airport_heliport.seaplanerampsite_ts.valid_time_begin,
    airport_heliport.seaplanerampsite_ts.valid_time_end,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_begin,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_ejgyay.geom AS extent_geom,
    geometry_elevatedsurface_view_ejgyay.elevation AS extent_elevation,
    geometry_elevatedsurface_view_ejgyay.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_ejgyay.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_ejgyay.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_ejgyay.horizontalAccuracy AS extent_horizontalaccuracy,
    geometry_elevatedcurve_view_wnapfy.geom AS centreline_geom,
    geometry_elevatedcurve_view_wnapfy.elevation AS centreline_elevation,
    geometry_elevatedcurve_view_wnapfy.geoidUndulation AS centreline_geoidundulation,
    geometry_elevatedcurve_view_wnapfy.verticalDatum AS centreline_verticaldatum,
    geometry_elevatedcurve_view_wnapfy.verticalAccuracy AS centreline_verticalaccuracy,
    geometry_elevatedcurve_view_wnapfy.horizontalAccuracy AS centreline_horizontalaccuracy,
    jsonb_agg(notes_note_view_chxtrj.*) AS annotation
from airport_heliport.seaplanerampsite 
inner join master_join mj2 on airport_heliport.seaplanerampsite.id = mj2.source_id
inner join airport_heliport.seaplanerampsite_tsp on mj2.target_id = airport_heliport.seaplanerampsite_tsp.id
inner join airport_heliport.seaplanerampsite_ts on airport_heliport.seaplanerampsite_tsp.seaplanerampsitetimeslice_id = airport_heliport.seaplanerampsite_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_ejgyay on airport_heliport.seaplanerampsite_ts.extent_id = geometry_elevatedsurface_view_ejgyay.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_wnapfy on airport_heliport.seaplanerampsite_ts.centreline_id = geometry_elevatedcurve_view_wnapfy.id
left join master_join master_join_odtbdy on airport_heliport.seaplanerampsite_ts.id = master_join_odtbdy.source_id
left join notes.note_view notes_note_view_chxtrj on master_join_odtbdy.target_id = notes_note_view_chxtrj.id
where airport_heliport.seaplanerampsite.feature_status = 'APPROVED'
  and airport_heliport.seaplanerampsite_ts.feature_status = 'APPROVED'
group by
    airport_heliport.seaplanerampsite.id,
    airport_heliport.seaplanerampsite_ts.id,
    airport_heliport.seaplanerampsite_tsp.id,
    airport_heliport.seaplanerampsite.identifier,
    airport_heliport.seaplanerampsite_ts.interpretation,
    airport_heliport.seaplanerampsite_ts.sequence_number,
    airport_heliport.seaplanerampsite_ts.correction_number,
    airport_heliport.seaplanerampsite_ts.valid_time_begin,
    airport_heliport.seaplanerampsite_ts.valid_time_end,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_begin,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_ejgyay.geom,
    geometry_elevatedsurface_view_ejgyay.elevation,
    geometry_elevatedsurface_view_ejgyay.geoidUndulation,
    geometry_elevatedsurface_view_ejgyay.verticalDatum,
    geometry_elevatedsurface_view_ejgyay.verticalAccuracy,
    geometry_elevatedsurface_view_ejgyay.horizontalAccuracy,
    geometry_elevatedcurve_view_wnapfy.geom,
    geometry_elevatedcurve_view_wnapfy.elevation,
    geometry_elevatedcurve_view_wnapfy.geoidUndulation,
    geometry_elevatedcurve_view_wnapfy.verticalDatum,
    geometry_elevatedcurve_view_wnapfy.verticalAccuracy,
    geometry_elevatedcurve_view_wnapfy.horizontalAccuracy
order by seaplanerampsite.identifier, seaplanerampsite_ts.sequence_number, seaplanerampsite_ts.correction_number DESC;
create index on airport_heliport.seaplanerampsite_view (id);
-- SearchRescueServiceTimeSliceType
-- ['geometry.elevatedpoint_view', 'service.callsigndetail_view', 'notes.note_view', 'service.serviceoperationalstatus_view', 'shared.contactinformation_view', 'routes.routeportion_view']
drop materialized view if exists service.searchrescueservice_view cascade;
create materialized view service.searchrescueservice_view as
select distinct on (searchrescueservice.identifier,searchrescueservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.searchrescueservice.id,
    service.searchrescueservice_ts.id as ts_id,
    service.searchrescueservice_tsp.id as tsp_id,
    service.searchrescueservice.identifier,
    service.searchrescueservice_ts.interpretation,
    service.searchrescueservice_ts.sequence_number,
    service.searchrescueservice_ts.correction_number,
    service.searchrescueservice_ts.valid_time_begin,
    service.searchrescueservice_ts.valid_time_end,
    service.searchrescueservice_ts.feature_lifetime_begin,
    service.searchrescueservice_ts.feature_lifetime_end,
    coalesce(cast(service.searchrescueservice_ts.flightoperations_value as varchar), '(' || service.searchrescueservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.searchrescueservice_ts.rank_value as varchar), '(' || service.searchrescueservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.searchrescueservice_ts.complianticao_value as varchar), '(' || service.searchrescueservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.searchrescueservice_ts.name_value as varchar), '(' || service.searchrescueservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.searchrescueservice_ts.type_value as varchar), '(' || service.searchrescueservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_tzgmcr.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_tzgmcr.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_tzgmcr.geom) AS location_latitude,
    geometry_elevatedpoint_view_tzgmcr.elevation AS location_elevation,
    geometry_elevatedpoint_view_tzgmcr.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_tzgmcr.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_tzgmcr.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_tzgmcr.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_npgwau.title as varchar), '(' || organisation_unit_pt_npgwau.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_npgwau.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_hjzapa.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_vlvngr.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_vlvngr.title AS varchar), '(' || service_radiocommunicationchannel_pt_vlvngr.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_vlvngr.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_wotqmb.id) AS availability,
    jsonb_agg(notes_note_view_ocntqv.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_jkodjb.id,
    'title', coalesce(cast(airspace_airspace_pt_jkodjb.title AS varchar), '(' || airspace_airspace_pt_jkodjb.nilreason[1] || ')'),
    'href', airspace_airspace_pt_jkodjb.href)) AS clientairspace,
    jsonb_agg(routes_routeportion_view_bogpit.id) AS clientroute
from service.searchrescueservice 
inner join master_join mj2 on service.searchrescueservice.id = mj2.source_id
inner join service.searchrescueservice_tsp on mj2.target_id = service.searchrescueservice_tsp.id
inner join service.searchrescueservice_ts on service.searchrescueservice_tsp.searchrescueservicetimeslice_id = service.searchrescueservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_tzgmcr on service.searchrescueservice_ts.location_id = geometry_elevatedpoint_view_tzgmcr.id
left join organisation.unit_pt organisation_unit_pt_npgwau on service.searchrescueservice_ts.serviceprovider_id = organisation_unit_pt_npgwau.id
left join master_join master_join_yelibf on service.searchrescueservice_ts.id = master_join_yelibf.source_id
left join service.callsigndetail_view service_callsigndetail_view_hjzapa on master_join_yelibf.target_id = service_callsigndetail_view_hjzapa.id
left join master_join master_join_ktapmk on service.searchrescueservice_ts.id = master_join_ktapmk.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_vlvngr on master_join_ktapmk.target_id = service_radiocommunicationchannel_pt_vlvngr.id
left join master_join master_join_utgrtp on service.searchrescueservice_ts.id = master_join_utgrtp.source_id
left join shared.contactinformation_view shared_contactinformation_view_acgffq on master_join_utgrtp.target_id = shared_contactinformation_view_acgffq.id
left join master_join master_join_fnlmhf on service.searchrescueservice_ts.id = master_join_fnlmhf.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_wotqmb on master_join_fnlmhf.target_id = service_serviceoperationalstatus_view_wotqmb.id
left join master_join master_join_pcfkxy on service.searchrescueservice_ts.id = master_join_pcfkxy.source_id
left join notes.note_view notes_note_view_ocntqv on master_join_pcfkxy.target_id = notes_note_view_ocntqv.id
left join master_join master_join_krjips on service.searchrescueservice_ts.id = master_join_krjips.source_id
left join airspace.airspace_pt airspace_airspace_pt_jkodjb on master_join_krjips.target_id = airspace_airspace_pt_jkodjb.id
left join master_join master_join_juneli on service.searchrescueservice_ts.id = master_join_juneli.source_id
left join routes.routeportion_view routes_routeportion_view_bogpit on master_join_juneli.target_id = routes_routeportion_view_bogpit.id
where service.searchrescueservice.feature_status = 'APPROVED'
  and service.searchrescueservice_ts.feature_status = 'APPROVED'
group by
    service.searchrescueservice.id,
    service.searchrescueservice_ts.id,
    service.searchrescueservice_tsp.id,
    service.searchrescueservice.identifier,
    service.searchrescueservice_ts.interpretation,
    service.searchrescueservice_ts.sequence_number,
    service.searchrescueservice_ts.correction_number,
    service.searchrescueservice_ts.valid_time_begin,
    service.searchrescueservice_ts.valid_time_end,
    service.searchrescueservice_ts.feature_lifetime_begin,
    service.searchrescueservice_ts.feature_lifetime_end,
    service.searchrescueservice_ts.flightoperations_value,
    service.searchrescueservice_ts.flightoperations_nilreason,
    service.searchrescueservice_ts.rank_value,
    service.searchrescueservice_ts.rank_nilreason,
    service.searchrescueservice_ts.complianticao_value,
    service.searchrescueservice_ts.complianticao_nilreason,
    service.searchrescueservice_ts.name_value,
    service.searchrescueservice_ts.name_nilreason,
    service.searchrescueservice_ts.type_value,
    service.searchrescueservice_ts.type_nilreason,
    geometry_elevatedpoint_view_tzgmcr.geom,
    geometry_elevatedpoint_view_tzgmcr.elevation,
    geometry_elevatedpoint_view_tzgmcr.geoidUndulation,
    geometry_elevatedpoint_view_tzgmcr.verticalDatum,
    geometry_elevatedpoint_view_tzgmcr.verticalAccuracy,
    geometry_elevatedpoint_view_tzgmcr.horizontalAccuracy,
    organisation_unit_pt_npgwau.title,
    organisation_unit_pt_npgwau.nilreason[1],
    organisation_unit_pt_npgwau.href
order by searchrescueservice.identifier, searchrescueservice_ts.sequence_number, searchrescueservice_ts.correction_number DESC;
create index on service.searchrescueservice_view (id);
-- SecondarySurveillanceRadarTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view', 'surveillance.surveillancegroundstation_view', 'shared.contactinformation_view']
drop materialized view if exists surveillance.secondarysurveillanceradar_view cascade;
create materialized view surveillance.secondarysurveillanceradar_view as
select distinct on (secondarysurveillanceradar.identifier,secondarysurveillanceradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.secondarysurveillanceradar.id,
    surveillance.secondarysurveillanceradar_ts.id as ts_id,
    surveillance.secondarysurveillanceradar_tsp.id as tsp_id,
    surveillance.secondarysurveillanceradar.identifier,
    surveillance.secondarysurveillanceradar_ts.interpretation,
    surveillance.secondarysurveillanceradar_ts.sequence_number,
    surveillance.secondarysurveillanceradar_ts.correction_number,
    surveillance.secondarysurveillanceradar_ts.valid_time_begin,
    surveillance.secondarysurveillanceradar_ts.valid_time_end,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_end,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.name_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.serialnumber_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.dualchannel_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.standbypower_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.digital_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.militaryuseonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.specialuseonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.magneticvariation_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_nilreason || ')') as verticalcoverageazimuth,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.antennatiltfixed_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.antennatiltfixed_nilreason || ')') as antennatiltfixed,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.tiltangle_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.tiltangle_nilreason || ')') as tiltangle,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_nilreason || ')') as automatedradarterminalsystem,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.transponder_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.transponder_nilreason || ')') as transponder,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.autonomous_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.autonomous_nilreason || ')') as autonomous,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.monopulse_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.monopulse_nilreason || ')') as monopulse,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.range_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.range_uom, '(' || surveillance.secondarysurveillanceradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.rangeaccuracy_uom, '(' || surveillance.secondarysurveillanceradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_uom, '(' || surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_nilreason || ')') as verticalcoveragealtitude,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_uom, '(' || surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_nilreason || ')') as verticalcoveragedistance,
    geometry_elevatedpoint_view_buqwyk.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_buqwyk.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_buqwyk.geom) AS location_latitude,
    geometry_elevatedpoint_view_buqwyk.elevation AS location_elevation,
    geometry_elevatedpoint_view_buqwyk.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_buqwyk.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_buqwyk.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_buqwyk.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_vrkxax.*) AS annotation,
    jsonb_agg(surveillance_surveillancegroundstation_view_lfzdlc.id) AS groundstation
from surveillance.secondarysurveillanceradar 
inner join master_join mj2 on surveillance.secondarysurveillanceradar.id = mj2.source_id
inner join surveillance.secondarysurveillanceradar_tsp on mj2.target_id = surveillance.secondarysurveillanceradar_tsp.id
inner join surveillance.secondarysurveillanceradar_ts on surveillance.secondarysurveillanceradar_tsp.secondarysurveillanceradartimeslice_id = surveillance.secondarysurveillanceradar_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_buqwyk on surveillance.secondarysurveillanceradar_ts.location_id = geometry_elevatedpoint_view_buqwyk.id
left join master_join master_join_cttvrp on surveillance.secondarysurveillanceradar_ts.id = master_join_cttvrp.source_id
left join shared.contactinformation_view shared_contactinformation_view_nfpkfw on master_join_cttvrp.target_id = shared_contactinformation_view_nfpkfw.id
left join master_join master_join_hfuskk on surveillance.secondarysurveillanceradar_ts.id = master_join_hfuskk.source_id
left join notes.note_view notes_note_view_vrkxax on master_join_hfuskk.target_id = notes_note_view_vrkxax.id
left join master_join master_join_mspeji on surveillance.secondarysurveillanceradar_ts.id = master_join_mspeji.source_id
left join surveillance.surveillancegroundstation_view surveillance_surveillancegroundstation_view_lfzdlc on master_join_mspeji.target_id = surveillance_surveillancegroundstation_view_lfzdlc.id
where surveillance.secondarysurveillanceradar.feature_status = 'APPROVED'
  and surveillance.secondarysurveillanceradar_ts.feature_status = 'APPROVED'
group by
    surveillance.secondarysurveillanceradar.id,
    surveillance.secondarysurveillanceradar_ts.id,
    surveillance.secondarysurveillanceradar_tsp.id,
    surveillance.secondarysurveillanceradar.identifier,
    surveillance.secondarysurveillanceradar_ts.interpretation,
    surveillance.secondarysurveillanceradar_ts.sequence_number,
    surveillance.secondarysurveillanceradar_ts.correction_number,
    surveillance.secondarysurveillanceradar_ts.valid_time_begin,
    surveillance.secondarysurveillanceradar_ts.valid_time_end,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_end,
    surveillance.secondarysurveillanceradar_ts.name_value,
    surveillance.secondarysurveillanceradar_ts.name_nilreason,
    surveillance.secondarysurveillanceradar_ts.serialnumber_value,
    surveillance.secondarysurveillanceradar_ts.serialnumber_nilreason,
    surveillance.secondarysurveillanceradar_ts.dualchannel_value,
    surveillance.secondarysurveillanceradar_ts.dualchannel_nilreason,
    surveillance.secondarysurveillanceradar_ts.movingtargetindicator_value,
    surveillance.secondarysurveillanceradar_ts.movingtargetindicator_nilreason,
    surveillance.secondarysurveillanceradar_ts.standbypower_value,
    surveillance.secondarysurveillanceradar_ts.standbypower_nilreason,
    surveillance.secondarysurveillanceradar_ts.digital_value,
    surveillance.secondarysurveillanceradar_ts.digital_nilreason,
    surveillance.secondarysurveillanceradar_ts.militaryuseonly_value,
    surveillance.secondarysurveillanceradar_ts.militaryuseonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.specialuseonly_value,
    surveillance.secondarysurveillanceradar_ts.specialuseonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.specialaircraftonly_value,
    surveillance.secondarysurveillanceradar_ts.specialaircraftonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.magneticvariation_value,
    surveillance.secondarysurveillanceradar_ts.magneticvariation_nilreason,
    surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_value,
    surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.secondarysurveillanceradar_ts.datemagneticvariation_value,
    surveillance.secondarysurveillanceradar_ts.datemagneticvariation_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_nilreason,
    surveillance.secondarysurveillanceradar_ts.antennatiltfixed_value,
    surveillance.secondarysurveillanceradar_ts.antennatiltfixed_nilreason,
    surveillance.secondarysurveillanceradar_ts.tiltangle_value,
    surveillance.secondarysurveillanceradar_ts.tiltangle_nilreason,
    surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_value,
    surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_nilreason,
    surveillance.secondarysurveillanceradar_ts.transponder_value,
    surveillance.secondarysurveillanceradar_ts.transponder_nilreason,
    surveillance.secondarysurveillanceradar_ts.autonomous_value,
    surveillance.secondarysurveillanceradar_ts.autonomous_nilreason,
    surveillance.secondarysurveillanceradar_ts.monopulse_value,
    surveillance.secondarysurveillanceradar_ts.monopulse_nilreason,
    surveillance.secondarysurveillanceradar_ts.range_value,
    surveillance.secondarysurveillanceradar_ts.range_uom,
    surveillance.secondarysurveillanceradar_ts.range_nilreason,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_value,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_uom,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_uom,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_uom,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_nilreason,
    geometry_elevatedpoint_view_buqwyk.geom,
    geometry_elevatedpoint_view_buqwyk.elevation,
    geometry_elevatedpoint_view_buqwyk.geoidUndulation,
    geometry_elevatedpoint_view_buqwyk.verticalDatum,
    geometry_elevatedpoint_view_buqwyk.verticalAccuracy,
    geometry_elevatedpoint_view_buqwyk.horizontalAccuracy
order by secondarysurveillanceradar.identifier, secondarysurveillanceradar_ts.sequence_number, secondarysurveillanceradar_ts.correction_number DESC;
create index on surveillance.secondarysurveillanceradar_view (id);
-- SignificantPointInAirspaceTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.significantpointinairspace_view cascade;
create materialized view navaids_points.significantpointinairspace_view as
select distinct on (significantpointinairspace.identifier,significantpointinairspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.significantpointinairspace.id,
    navaids_points.significantpointinairspace_ts.id as ts_id,
    navaids_points.significantpointinairspace_tsp.id as tsp_id,
    navaids_points.significantpointinairspace.identifier,
    navaids_points.significantpointinairspace_ts.interpretation,
    navaids_points.significantpointinairspace_ts.sequence_number,
    navaids_points.significantpointinairspace_ts.correction_number,
    navaids_points.significantpointinairspace_ts.valid_time_begin,
    navaids_points.significantpointinairspace_ts.valid_time_end,
    navaids_points.significantpointinairspace_ts.feature_lifetime_begin,
    navaids_points.significantpointinairspace_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.significantpointinairspace_ts.type_value as varchar), '(' || navaids_points.significantpointinairspace_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.significantpointinairspace_ts.relativelocation_value as varchar), '(' || navaids_points.significantpointinairspace_ts.relativelocation_nilreason || ')') as relativelocation,
    coalesce(cast(airspace_airspace_pt_vctuos.title as varchar), '(' || airspace_airspace_pt_vctuos.nilreason[1] || ')') AS containingairspace,
    airspace_airspace_pt_vctuos.href AS containingairspace_href,
    coalesce(cast(navaids_points_designatedpoint_pt_dpxqxq.title as varchar), '(' || navaids_points_designatedpoint_pt_dpxqxq.nilreason[1] || ')') AS locationfixdesignatedpoint,
    navaids_points_designatedpoint_pt_dpxqxq.href AS locationfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_qbkvuj.title as varchar), '(' || navaids_points_navaid_pt_qbkvuj.nilreason[1] || ')') AS locationnavaidsystem,
    navaids_points_navaid_pt_qbkvuj.href AS locationnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_qcvuiv.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_qcvuiv.nilreason[1] || ')') AS locationaimingpoint,
    airport_heliport_touchdownliftoff_pt_qcvuiv.href AS locationaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_mwbzxb.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_mwbzxb.nilreason[1] || ')') AS locationrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_mwbzxb.href AS locationrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_gxybbi.title as varchar), '(' || airport_heliport_airportheliport_pt_gxybbi.nilreason[1] || ')') AS locationairportreferencepoint,
    airport_heliport_airportheliport_pt_gxybbi.href AS locationairportreferencepoint_href,
    geometry_point_view_vmirmf.geom AS locationposition_geom,
    ST_X(geometry_point_view_vmirmf.geom) AS locationposition_longitude,
    ST_Y(geometry_point_view_vmirmf.geom) AS locationposition_latitude,
    geometry_point_view_vmirmf.horizontalAccuracy AS locationposition_horizontalaccuracy,
    jsonb_agg(notes_note_view_hkjvjc.*) AS annotation
from navaids_points.significantpointinairspace 
inner join master_join mj2 on navaids_points.significantpointinairspace.id = mj2.source_id
inner join navaids_points.significantpointinairspace_tsp on mj2.target_id = navaids_points.significantpointinairspace_tsp.id
inner join navaids_points.significantpointinairspace_ts on navaids_points.significantpointinairspace_tsp.significantpointinairspacetimeslice_id = navaids_points.significantpointinairspace_ts.id
left join airspace.airspace_pt airspace_airspace_pt_vctuos on navaids_points.significantpointinairspace_ts.containingairspace_id = airspace_airspace_pt_vctuos.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_dpxqxq on navaids_points.significantpointinairspace_ts.location_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_dpxqxq.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_qbkvuj on navaids_points.significantpointinairspace_ts.location_navaidsystem_id = navaids_points_navaid_pt_qbkvuj.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_qcvuiv on navaids_points.significantpointinairspace_ts.location_aimingpoint_id = airport_heliport_touchdownliftoff_pt_qcvuiv.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_mwbzxb on navaids_points.significantpointinairspace_ts.location_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_mwbzxb.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_gxybbi on navaids_points.significantpointinairspace_ts.location_airportreferencepoint_id = airport_heliport_airportheliport_pt_gxybbi.id
left join geometry.point_view geometry_point_view_vmirmf on navaids_points.significantpointinairspace_ts.location_position_id = geometry_point_view_vmirmf.id
left join master_join master_join_esdopn on navaids_points.significantpointinairspace_ts.id = master_join_esdopn.source_id
left join notes.note_view notes_note_view_hkjvjc on master_join_esdopn.target_id = notes_note_view_hkjvjc.id
where navaids_points.significantpointinairspace.feature_status = 'APPROVED'
  and navaids_points.significantpointinairspace_ts.feature_status = 'APPROVED'
group by
    navaids_points.significantpointinairspace.id,
    navaids_points.significantpointinairspace_ts.id,
    navaids_points.significantpointinairspace_tsp.id,
    navaids_points.significantpointinairspace.identifier,
    navaids_points.significantpointinairspace_ts.interpretation,
    navaids_points.significantpointinairspace_ts.sequence_number,
    navaids_points.significantpointinairspace_ts.correction_number,
    navaids_points.significantpointinairspace_ts.valid_time_begin,
    navaids_points.significantpointinairspace_ts.valid_time_end,
    navaids_points.significantpointinairspace_ts.feature_lifetime_begin,
    navaids_points.significantpointinairspace_ts.feature_lifetime_end,
    navaids_points.significantpointinairspace_ts.type_value,
    navaids_points.significantpointinairspace_ts.type_nilreason,
    navaids_points.significantpointinairspace_ts.relativelocation_value,
    navaids_points.significantpointinairspace_ts.relativelocation_nilreason,
    airspace_airspace_pt_vctuos.title,
    airspace_airspace_pt_vctuos.nilreason[1],
    airspace_airspace_pt_vctuos.href,
    navaids_points_designatedpoint_pt_dpxqxq.title,
    navaids_points_designatedpoint_pt_dpxqxq.nilreason[1],
    navaids_points_designatedpoint_pt_dpxqxq.href,
    navaids_points_navaid_pt_qbkvuj.title,
    navaids_points_navaid_pt_qbkvuj.nilreason[1],
    navaids_points_navaid_pt_qbkvuj.href,
    airport_heliport_touchdownliftoff_pt_qcvuiv.title,
    airport_heliport_touchdownliftoff_pt_qcvuiv.nilreason[1],
    airport_heliport_touchdownliftoff_pt_qcvuiv.href,
    airport_heliport_runwaycentrelinepoint_pt_mwbzxb.title,
    airport_heliport_runwaycentrelinepoint_pt_mwbzxb.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_mwbzxb.href,
    airport_heliport_airportheliport_pt_gxybbi.title,
    airport_heliport_airportheliport_pt_gxybbi.nilreason[1],
    airport_heliport_airportheliport_pt_gxybbi.href,
    geometry_point_view_vmirmf.geom,
    geometry_point_view_vmirmf.horizontalAccuracy
order by significantpointinairspace.identifier, significantpointinairspace_ts.sequence_number, significantpointinairspace_ts.correction_number DESC;
create index on navaids_points.significantpointinairspace_view (id);
-- SpecialDateTimeSliceType
-- ['notes.note_view']
drop materialized view if exists shared.specialdate_view cascade;
create materialized view shared.specialdate_view as
select distinct on (specialdate.identifier,specialdate_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.specialdate.id,
    shared.specialdate_ts.id as ts_id,
    shared.specialdate_tsp.id as tsp_id,
    shared.specialdate.identifier,
    shared.specialdate_ts.interpretation,
    shared.specialdate_ts.sequence_number,
    shared.specialdate_ts.correction_number,
    shared.specialdate_ts.valid_time_begin,
    shared.specialdate_ts.valid_time_end,
    shared.specialdate_ts.feature_lifetime_begin,
    shared.specialdate_ts.feature_lifetime_end,
    coalesce(cast(shared.specialdate_ts.type_value as varchar), '(' || shared.specialdate_ts.type_nilreason || ')') as type,
    coalesce(cast(shared.specialdate_ts.dateday_value as varchar), '(' || shared.specialdate_ts.dateday_nilreason || ')') as dateday,
    coalesce(cast(shared.specialdate_ts.dateyear_value as varchar), '(' || shared.specialdate_ts.dateyear_nilreason || ')') as dateyear,
    coalesce(cast(shared.specialdate_ts.name_value as varchar), '(' || shared.specialdate_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation_organisationauthority_pt_hpturf.title as varchar), '(' || organisation_organisationauthority_pt_hpturf.nilreason[1] || ')') AS authority,
    organisation_organisationauthority_pt_hpturf.href AS authority_href,
    jsonb_agg(notes_note_view_sinxwq.*) AS annotation
from shared.specialdate 
inner join master_join mj2 on shared.specialdate.id = mj2.source_id
inner join shared.specialdate_tsp on mj2.target_id = shared.specialdate_tsp.id
inner join shared.specialdate_ts on shared.specialdate_tsp.specialdatetimeslice_id = shared.specialdate_ts.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_hpturf on shared.specialdate_ts.authority_id = organisation_organisationauthority_pt_hpturf.id
left join master_join master_join_dpgnmf on shared.specialdate_ts.id = master_join_dpgnmf.source_id
left join notes.note_view notes_note_view_sinxwq on master_join_dpgnmf.target_id = notes_note_view_sinxwq.id
where shared.specialdate.feature_status = 'APPROVED'
  and shared.specialdate_ts.feature_status = 'APPROVED'
group by
    shared.specialdate.id,
    shared.specialdate_ts.id,
    shared.specialdate_tsp.id,
    shared.specialdate.identifier,
    shared.specialdate_ts.interpretation,
    shared.specialdate_ts.sequence_number,
    shared.specialdate_ts.correction_number,
    shared.specialdate_ts.valid_time_begin,
    shared.specialdate_ts.valid_time_end,
    shared.specialdate_ts.feature_lifetime_begin,
    shared.specialdate_ts.feature_lifetime_end,
    shared.specialdate_ts.type_value,
    shared.specialdate_ts.type_nilreason,
    shared.specialdate_ts.dateday_value,
    shared.specialdate_ts.dateday_nilreason,
    shared.specialdate_ts.dateyear_value,
    shared.specialdate_ts.dateyear_nilreason,
    shared.specialdate_ts.name_value,
    shared.specialdate_ts.name_nilreason,
    organisation_organisationauthority_pt_hpturf.title,
    organisation_organisationauthority_pt_hpturf.nilreason[1],
    organisation_organisationauthority_pt_hpturf.href
order by specialdate.identifier, specialdate_ts.sequence_number, specialdate_ts.correction_number DESC;
create index on shared.specialdate_view (id);
-- SpecialNavigationStationTimeSliceType
-- ['navaids_points.specialnavigationstationstatus_view', 'geometry.elevatedpoint_view', 'notes.note_view', 'navaids_points.authorityforspecialnavigationstation_view']
drop materialized view if exists navaids_points.specialnavigationstation_view cascade;
create materialized view navaids_points.specialnavigationstation_view as
select distinct on (specialnavigationstation.identifier,specialnavigationstation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.specialnavigationstation.id,
    navaids_points.specialnavigationstation_ts.id as ts_id,
    navaids_points.specialnavigationstation_tsp.id as tsp_id,
    navaids_points.specialnavigationstation.identifier,
    navaids_points.specialnavigationstation_ts.interpretation,
    navaids_points.specialnavigationstation_ts.sequence_number,
    navaids_points.specialnavigationstation_ts.correction_number,
    navaids_points.specialnavigationstation_ts.valid_time_begin,
    navaids_points.specialnavigationstation_ts.valid_time_end,
    navaids_points.specialnavigationstation_ts.feature_lifetime_begin,
    navaids_points.specialnavigationstation_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.specialnavigationstation_ts.name_value as varchar), '(' || navaids_points.specialnavigationstation_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.specialnavigationstation_ts.type_value as varchar), '(' || navaids_points.specialnavigationstation_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.specialnavigationstation_ts.emission_value as varchar), '(' || navaids_points.specialnavigationstation_ts.emission_nilreason || ')') as emission,
    coalesce(cast(navaids_points.specialnavigationstation_ts.frequency_value as varchar) || ' ' || navaids_points.specialnavigationstation_ts.frequency_uom, '(' || navaids_points.specialnavigationstation_ts.frequency_nilreason || ')') as frequency,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_sfhcjq.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_sfhcjq.nilreason[1] || ')') AS systemchain,
    navaids_points_specialnavigationsystem_pt_sfhcjq.href AS systemchain_href,
    navaids_points_authorityforspecialnavigationstation_view_krfrzq.id AS responsibleorganisation,
    geometry_elevatedpoint_view_gqivxi.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_gqivxi.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_gqivxi.geom) AS position_latitude,
    geometry_elevatedpoint_view_gqivxi.elevation AS position_elevation,
    geometry_elevatedpoint_view_gqivxi.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_gqivxi.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_gqivxi.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_gqivxi.horizontalAccuracy AS position_horizontalaccuracy,
    jsonb_agg(navaids_points_specialnavigationstationstatus_view_agpbaq.id) AS availability,
    jsonb_agg(notes_note_view_rgocgv.*) AS annotation
from navaids_points.specialnavigationstation 
inner join master_join mj2 on navaids_points.specialnavigationstation.id = mj2.source_id
inner join navaids_points.specialnavigationstation_tsp on mj2.target_id = navaids_points.specialnavigationstation_tsp.id
inner join navaids_points.specialnavigationstation_ts on navaids_points.specialnavigationstation_tsp.specialnavigationstationtimeslice_id = navaids_points.specialnavigationstation_ts.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_sfhcjq on navaids_points.specialnavigationstation_ts.systemchain_id = navaids_points_specialnavigationsystem_pt_sfhcjq.id
left join navaids_points.authorityforspecialnavigationstation_view navaids_points_authorityforspecialnavigationstation_view_krfrzq on navaids_points.specialnavigationstation_ts.responsibleorganisation_id = navaids_points_authorityforspecialnavigationstation_view_krfrzq.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_gqivxi on navaids_points.specialnavigationstation_ts.position_id = geometry_elevatedpoint_view_gqivxi.id
left join master_join master_join_denzed on navaids_points.specialnavigationstation_ts.id = master_join_denzed.source_id
left join navaids_points.specialnavigationstationstatus_view navaids_points_specialnavigationstationstatus_view_agpbaq on master_join_denzed.target_id = navaids_points_specialnavigationstationstatus_view_agpbaq.id
left join master_join master_join_fkyeve on navaids_points.specialnavigationstation_ts.id = master_join_fkyeve.source_id
left join notes.note_view notes_note_view_rgocgv on master_join_fkyeve.target_id = notes_note_view_rgocgv.id
where navaids_points.specialnavigationstation.feature_status = 'APPROVED'
  and navaids_points.specialnavigationstation_ts.feature_status = 'APPROVED'
group by
    navaids_points.specialnavigationstation.id,
    navaids_points.specialnavigationstation_ts.id,
    navaids_points.specialnavigationstation_tsp.id,
    navaids_points.specialnavigationstation.identifier,
    navaids_points.specialnavigationstation_ts.interpretation,
    navaids_points.specialnavigationstation_ts.sequence_number,
    navaids_points.specialnavigationstation_ts.correction_number,
    navaids_points.specialnavigationstation_ts.valid_time_begin,
    navaids_points.specialnavigationstation_ts.valid_time_end,
    navaids_points.specialnavigationstation_ts.feature_lifetime_begin,
    navaids_points.specialnavigationstation_ts.feature_lifetime_end,
    navaids_points.specialnavigationstation_ts.name_value,
    navaids_points.specialnavigationstation_ts.name_nilreason,
    navaids_points.specialnavigationstation_ts.type_value,
    navaids_points.specialnavigationstation_ts.type_nilreason,
    navaids_points.specialnavigationstation_ts.emission_value,
    navaids_points.specialnavigationstation_ts.emission_nilreason,
    navaids_points.specialnavigationstation_ts.frequency_value,
    navaids_points.specialnavigationstation_ts.frequency_uom,
    navaids_points.specialnavigationstation_ts.frequency_nilreason,
    navaids_points_specialnavigationsystem_pt_sfhcjq.title,
    navaids_points_specialnavigationsystem_pt_sfhcjq.nilreason[1],
    navaids_points_specialnavigationsystem_pt_sfhcjq.href,
    navaids_points_authorityforspecialnavigationstation_view_krfrzq.id,
    geometry_elevatedpoint_view_gqivxi.geom,
    geometry_elevatedpoint_view_gqivxi.elevation,
    geometry_elevatedpoint_view_gqivxi.geoidUndulation,
    geometry_elevatedpoint_view_gqivxi.verticalDatum,
    geometry_elevatedpoint_view_gqivxi.verticalAccuracy,
    geometry_elevatedpoint_view_gqivxi.horizontalAccuracy
order by specialnavigationstation.identifier, specialnavigationstation_ts.sequence_number, specialnavigationstation_ts.correction_number DESC;
create index on navaids_points.specialnavigationstation_view (id);
-- SpecialNavigationSystemTimeSliceType
-- ['navaids_points.authorityforspecialnavigationsystem_view', 'notes.note_view']
drop materialized view if exists navaids_points.specialnavigationsystem_view cascade;
create materialized view navaids_points.specialnavigationsystem_view as
select distinct on (specialnavigationsystem.identifier,specialnavigationsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.specialnavigationsystem.id,
    navaids_points.specialnavigationsystem_ts.id as ts_id,
    navaids_points.specialnavigationsystem_tsp.id as tsp_id,
    navaids_points.specialnavigationsystem.identifier,
    navaids_points.specialnavigationsystem_ts.interpretation,
    navaids_points.specialnavigationsystem_ts.sequence_number,
    navaids_points.specialnavigationsystem_ts.correction_number,
    navaids_points.specialnavigationsystem_ts.valid_time_begin,
    navaids_points.specialnavigationsystem_ts.valid_time_end,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_begin,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.type_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.designator_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.name_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.name_nilreason || ')') as name,
    navaids_points_authorityforspecialnavigationsystem_view_fwogln.id AS responsibleorganisation,
    jsonb_agg(notes_note_view_vdljef.*) AS annotation
from navaids_points.specialnavigationsystem 
inner join master_join mj2 on navaids_points.specialnavigationsystem.id = mj2.source_id
inner join navaids_points.specialnavigationsystem_tsp on mj2.target_id = navaids_points.specialnavigationsystem_tsp.id
inner join navaids_points.specialnavigationsystem_ts on navaids_points.specialnavigationsystem_tsp.specialnavigationsystemtimeslice_id = navaids_points.specialnavigationsystem_ts.id
left join navaids_points.authorityforspecialnavigationsystem_view navaids_points_authorityforspecialnavigationsystem_view_fwogln on navaids_points.specialnavigationsystem_ts.responsibleorganisation_id = navaids_points_authorityforspecialnavigationsystem_view_fwogln.id
left join master_join master_join_icqtlb on navaids_points.specialnavigationsystem_ts.id = master_join_icqtlb.source_id
left join notes.note_view notes_note_view_vdljef on master_join_icqtlb.target_id = notes_note_view_vdljef.id
where navaids_points.specialnavigationsystem.feature_status = 'APPROVED'
  and navaids_points.specialnavigationsystem_ts.feature_status = 'APPROVED'
group by
    navaids_points.specialnavigationsystem.id,
    navaids_points.specialnavigationsystem_ts.id,
    navaids_points.specialnavigationsystem_tsp.id,
    navaids_points.specialnavigationsystem.identifier,
    navaids_points.specialnavigationsystem_ts.interpretation,
    navaids_points.specialnavigationsystem_ts.sequence_number,
    navaids_points.specialnavigationsystem_ts.correction_number,
    navaids_points.specialnavigationsystem_ts.valid_time_begin,
    navaids_points.specialnavigationsystem_ts.valid_time_end,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_begin,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_end,
    navaids_points.specialnavigationsystem_ts.type_value,
    navaids_points.specialnavigationsystem_ts.type_nilreason,
    navaids_points.specialnavigationsystem_ts.designator_value,
    navaids_points.specialnavigationsystem_ts.designator_nilreason,
    navaids_points.specialnavigationsystem_ts.name_value,
    navaids_points.specialnavigationsystem_ts.name_nilreason,
    navaids_points_authorityforspecialnavigationsystem_view_fwogln.id
order by specialnavigationsystem.identifier, specialnavigationsystem_ts.sequence_number, specialnavigationsystem_ts.correction_number DESC;
create index on navaids_points.specialnavigationsystem_view (id);
-- StandardInstrumentArrivalTimeSliceType
-- ['procedure.proceduretransition_view', 'notes.note_view', 'procedure.procedureavailability_view', 'procedure.landingtakeoffareacollection_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.standardinstrumentarrival_view cascade;
create materialized view procedure.standardinstrumentarrival_view as
select distinct on (standardinstrumentarrival.identifier,standardinstrumentarrival_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.standardinstrumentarrival.id,
    procedure.standardinstrumentarrival_ts.id as ts_id,
    procedure.standardinstrumentarrival_tsp.id as tsp_id,
    procedure.standardinstrumentarrival.identifier,
    procedure.standardinstrumentarrival_ts.interpretation,
    procedure.standardinstrumentarrival_ts.sequence_number,
    procedure.standardinstrumentarrival_ts.correction_number,
    procedure.standardinstrumentarrival_ts.valid_time_begin,
    procedure.standardinstrumentarrival_ts.valid_time_end,
    procedure.standardinstrumentarrival_ts.feature_lifetime_begin,
    procedure.standardinstrumentarrival_ts.feature_lifetime_end,
    coalesce(cast(procedure.standardinstrumentarrival_ts.communicationfailureinstruction_value as varchar), '(' || procedure.standardinstrumentarrival_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.standardinstrumentarrival_ts.instruction_value as varchar), '(' || procedure.standardinstrumentarrival_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.standardinstrumentarrival_ts.designcriteria_value as varchar), '(' || procedure.standardinstrumentarrival_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.standardinstrumentarrival_ts.codingstandard_value as varchar), '(' || procedure.standardinstrumentarrival_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.standardinstrumentarrival_ts.flightchecked_value as varchar), '(' || procedure.standardinstrumentarrival_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.standardinstrumentarrival_ts.name_value as varchar), '(' || procedure.standardinstrumentarrival_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.standardinstrumentarrival_ts.rnav_value as varchar), '(' || procedure.standardinstrumentarrival_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.standardinstrumentarrival_ts.designator_value as varchar), '(' || procedure.standardinstrumentarrival_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points_navaid_pt_nqqhxc.title as varchar), '(' || navaids_points_navaid_pt_nqqhxc.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_nqqhxc.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_qcobqc.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_qcobqc.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_qcobqc.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_ixusvi.title as varchar), '(' || surveillance_radarsystem_pt_ixusvi.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_ixusvi.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_sbimie.title as varchar), '(' || procedure_safealtitudearea_pt_sbimie.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_sbimie.href AS safealtitude_href,
    procedure_landingtakeoffareacollection_view_qcocrp.id AS arrival,
    jsonb_agg(procedure_procedureavailability_view_yvksap.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_pjovny.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_pjovny.title AS varchar), '(' || airport_heliport_airportheliport_pt_pjovny.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_pjovny.href)) AS airportheliport,
    jsonb_agg(shared_aircraftcharacteristic_view_brkudr.id) AS aircraftcharacteristic,
    jsonb_agg(procedure_proceduretransition_view_jaspft.id) AS flighttransition,
    jsonb_agg(notes_note_view_kpdskt.*) AS annotation
from procedure.standardinstrumentarrival 
inner join master_join mj2 on procedure.standardinstrumentarrival.id = mj2.source_id
inner join procedure.standardinstrumentarrival_tsp on mj2.target_id = procedure.standardinstrumentarrival_tsp.id
inner join procedure.standardinstrumentarrival_ts on procedure.standardinstrumentarrival_tsp.standardinstrumentarrivaltimeslice_id = procedure.standardinstrumentarrival_ts.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_nqqhxc on procedure.standardinstrumentarrival_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_nqqhxc.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_qcobqc on procedure.standardinstrumentarrival_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_qcobqc.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_ixusvi on procedure.standardinstrumentarrival_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_ixusvi.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_sbimie on procedure.standardinstrumentarrival_ts.safealtitude_id = procedure_safealtitudearea_pt_sbimie.id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_qcocrp on procedure.standardinstrumentarrival_ts.arrival_id = procedure_landingtakeoffareacollection_view_qcocrp.id
left join master_join master_join_ylxocg on procedure.standardinstrumentarrival_ts.id = master_join_ylxocg.source_id
left join procedure.procedureavailability_view procedure_procedureavailability_view_yvksap on master_join_ylxocg.target_id = procedure_procedureavailability_view_yvksap.id
left join master_join master_join_fesfti on procedure.standardinstrumentarrival_ts.id = master_join_fesfti.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pjovny on master_join_fesfti.target_id = airport_heliport_airportheliport_pt_pjovny.id
left join master_join master_join_qfwnvg on procedure.standardinstrumentarrival_ts.id = master_join_qfwnvg.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_brkudr on master_join_qfwnvg.target_id = shared_aircraftcharacteristic_view_brkudr.id
left join master_join master_join_szvaru on procedure.standardinstrumentarrival_ts.id = master_join_szvaru.source_id
left join procedure.proceduretransition_view procedure_proceduretransition_view_jaspft on master_join_szvaru.target_id = procedure_proceduretransition_view_jaspft.id
left join master_join master_join_ybeggb on procedure.standardinstrumentarrival_ts.id = master_join_ybeggb.source_id
left join notes.note_view notes_note_view_kpdskt on master_join_ybeggb.target_id = notes_note_view_kpdskt.id
where procedure.standardinstrumentarrival.feature_status = 'APPROVED'
  and procedure.standardinstrumentarrival_ts.feature_status = 'APPROVED'
group by
    procedure.standardinstrumentarrival.id,
    procedure.standardinstrumentarrival_ts.id,
    procedure.standardinstrumentarrival_tsp.id,
    procedure.standardinstrumentarrival.identifier,
    procedure.standardinstrumentarrival_ts.interpretation,
    procedure.standardinstrumentarrival_ts.sequence_number,
    procedure.standardinstrumentarrival_ts.correction_number,
    procedure.standardinstrumentarrival_ts.valid_time_begin,
    procedure.standardinstrumentarrival_ts.valid_time_end,
    procedure.standardinstrumentarrival_ts.feature_lifetime_begin,
    procedure.standardinstrumentarrival_ts.feature_lifetime_end,
    procedure.standardinstrumentarrival_ts.communicationfailureinstruction_value,
    procedure.standardinstrumentarrival_ts.communicationfailureinstruction_nilreason,
    procedure.standardinstrumentarrival_ts.instruction_value,
    procedure.standardinstrumentarrival_ts.instruction_nilreason,
    procedure.standardinstrumentarrival_ts.designcriteria_value,
    procedure.standardinstrumentarrival_ts.designcriteria_nilreason,
    procedure.standardinstrumentarrival_ts.codingstandard_value,
    procedure.standardinstrumentarrival_ts.codingstandard_nilreason,
    procedure.standardinstrumentarrival_ts.flightchecked_value,
    procedure.standardinstrumentarrival_ts.flightchecked_nilreason,
    procedure.standardinstrumentarrival_ts.name_value,
    procedure.standardinstrumentarrival_ts.name_nilreason,
    procedure.standardinstrumentarrival_ts.rnav_value,
    procedure.standardinstrumentarrival_ts.rnav_nilreason,
    procedure.standardinstrumentarrival_ts.designator_value,
    procedure.standardinstrumentarrival_ts.designator_nilreason,
    navaids_points_navaid_pt_nqqhxc.title,
    navaids_points_navaid_pt_nqqhxc.nilreason[1],
    navaids_points_navaid_pt_nqqhxc.href,
    navaids_points_specialnavigationsystem_pt_qcobqc.title,
    navaids_points_specialnavigationsystem_pt_qcobqc.nilreason[1],
    navaids_points_specialnavigationsystem_pt_qcobqc.href,
    surveillance_radarsystem_pt_ixusvi.title,
    surveillance_radarsystem_pt_ixusvi.nilreason[1],
    surveillance_radarsystem_pt_ixusvi.href,
    procedure_safealtitudearea_pt_sbimie.title,
    procedure_safealtitudearea_pt_sbimie.nilreason[1],
    procedure_safealtitudearea_pt_sbimie.href,
    procedure_landingtakeoffareacollection_view_qcocrp.id
order by standardinstrumentarrival.identifier, standardinstrumentarrival_ts.sequence_number, standardinstrumentarrival_ts.correction_number DESC;
create index on procedure.standardinstrumentarrival_view (id);
-- StandardInstrumentDepartureTimeSliceType
-- ['procedure.proceduretransition_view', 'notes.note_view', 'procedure.procedureavailability_view', 'procedure.landingtakeoffareacollection_view', 'shared.aircraftcharacteristic_view']
drop materialized view if exists procedure.standardinstrumentdeparture_view cascade;
create materialized view procedure.standardinstrumentdeparture_view as
select distinct on (standardinstrumentdeparture.identifier,standardinstrumentdeparture_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.standardinstrumentdeparture.id,
    procedure.standardinstrumentdeparture_ts.id as ts_id,
    procedure.standardinstrumentdeparture_tsp.id as tsp_id,
    procedure.standardinstrumentdeparture.identifier,
    procedure.standardinstrumentdeparture_ts.interpretation,
    procedure.standardinstrumentdeparture_ts.sequence_number,
    procedure.standardinstrumentdeparture_ts.correction_number,
    procedure.standardinstrumentdeparture_ts.valid_time_begin,
    procedure.standardinstrumentdeparture_ts.valid_time_end,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_begin,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_end,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.instruction_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.designcriteria_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.codingstandard_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.flightchecked_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.name_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.rnav_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.designator_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.designator_nilreason || ')') as designator,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.contingencyroute_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.contingencyroute_nilreason || ')') as contingencyroute,
    coalesce(cast(navaids_points_navaid_pt_bzalrf.title as varchar), '(' || navaids_points_navaid_pt_bzalrf.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_bzalrf.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_iowdvm.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_iowdvm.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_iowdvm.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_chpzgv.title as varchar), '(' || surveillance_radarsystem_pt_chpzgv.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_chpzgv.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_tcaqde.title as varchar), '(' || procedure_safealtitudearea_pt_tcaqde.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_tcaqde.href AS safealtitude_href,
    procedure_landingtakeoffareacollection_view_hompue.id AS takeoff,
    jsonb_agg(procedure_procedureavailability_view_egwxdw.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_dpnjxy.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_dpnjxy.title AS varchar), '(' || airport_heliport_airportheliport_pt_dpnjxy.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_dpnjxy.href)) AS airportheliport,
    jsonb_agg(shared_aircraftcharacteristic_view_nkusxz.id) AS aircraftcharacteristic,
    jsonb_agg(procedure_proceduretransition_view_aggwsx.id) AS flighttransition,
    jsonb_agg(notes_note_view_iqcdso.*) AS annotation
from procedure.standardinstrumentdeparture 
inner join master_join mj2 on procedure.standardinstrumentdeparture.id = mj2.source_id
inner join procedure.standardinstrumentdeparture_tsp on mj2.target_id = procedure.standardinstrumentdeparture_tsp.id
inner join procedure.standardinstrumentdeparture_ts on procedure.standardinstrumentdeparture_tsp.standardinstrumentdeparturetimeslice_id = procedure.standardinstrumentdeparture_ts.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_bzalrf on procedure.standardinstrumentdeparture_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_bzalrf.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_iowdvm on procedure.standardinstrumentdeparture_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_iowdvm.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_chpzgv on procedure.standardinstrumentdeparture_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_chpzgv.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_tcaqde on procedure.standardinstrumentdeparture_ts.safealtitude_id = procedure_safealtitudearea_pt_tcaqde.id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_hompue on procedure.standardinstrumentdeparture_ts.takeoff_id = procedure_landingtakeoffareacollection_view_hompue.id
left join master_join master_join_icnsem on procedure.standardinstrumentdeparture_ts.id = master_join_icnsem.source_id
left join procedure.procedureavailability_view procedure_procedureavailability_view_egwxdw on master_join_icnsem.target_id = procedure_procedureavailability_view_egwxdw.id
left join master_join master_join_cctwws on procedure.standardinstrumentdeparture_ts.id = master_join_cctwws.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_dpnjxy on master_join_cctwws.target_id = airport_heliport_airportheliport_pt_dpnjxy.id
left join master_join master_join_zfbanv on procedure.standardinstrumentdeparture_ts.id = master_join_zfbanv.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_nkusxz on master_join_zfbanv.target_id = shared_aircraftcharacteristic_view_nkusxz.id
left join master_join master_join_dtcayu on procedure.standardinstrumentdeparture_ts.id = master_join_dtcayu.source_id
left join procedure.proceduretransition_view procedure_proceduretransition_view_aggwsx on master_join_dtcayu.target_id = procedure_proceduretransition_view_aggwsx.id
left join master_join master_join_krmkdt on procedure.standardinstrumentdeparture_ts.id = master_join_krmkdt.source_id
left join notes.note_view notes_note_view_iqcdso on master_join_krmkdt.target_id = notes_note_view_iqcdso.id
where procedure.standardinstrumentdeparture.feature_status = 'APPROVED'
  and procedure.standardinstrumentdeparture_ts.feature_status = 'APPROVED'
group by
    procedure.standardinstrumentdeparture.id,
    procedure.standardinstrumentdeparture_ts.id,
    procedure.standardinstrumentdeparture_tsp.id,
    procedure.standardinstrumentdeparture.identifier,
    procedure.standardinstrumentdeparture_ts.interpretation,
    procedure.standardinstrumentdeparture_ts.sequence_number,
    procedure.standardinstrumentdeparture_ts.correction_number,
    procedure.standardinstrumentdeparture_ts.valid_time_begin,
    procedure.standardinstrumentdeparture_ts.valid_time_end,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_begin,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_end,
    procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_value,
    procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_nilreason,
    procedure.standardinstrumentdeparture_ts.instruction_value,
    procedure.standardinstrumentdeparture_ts.instruction_nilreason,
    procedure.standardinstrumentdeparture_ts.designcriteria_value,
    procedure.standardinstrumentdeparture_ts.designcriteria_nilreason,
    procedure.standardinstrumentdeparture_ts.codingstandard_value,
    procedure.standardinstrumentdeparture_ts.codingstandard_nilreason,
    procedure.standardinstrumentdeparture_ts.flightchecked_value,
    procedure.standardinstrumentdeparture_ts.flightchecked_nilreason,
    procedure.standardinstrumentdeparture_ts.name_value,
    procedure.standardinstrumentdeparture_ts.name_nilreason,
    procedure.standardinstrumentdeparture_ts.rnav_value,
    procedure.standardinstrumentdeparture_ts.rnav_nilreason,
    procedure.standardinstrumentdeparture_ts.designator_value,
    procedure.standardinstrumentdeparture_ts.designator_nilreason,
    procedure.standardinstrumentdeparture_ts.contingencyroute_value,
    procedure.standardinstrumentdeparture_ts.contingencyroute_nilreason,
    navaids_points_navaid_pt_bzalrf.title,
    navaids_points_navaid_pt_bzalrf.nilreason[1],
    navaids_points_navaid_pt_bzalrf.href,
    navaids_points_specialnavigationsystem_pt_iowdvm.title,
    navaids_points_specialnavigationsystem_pt_iowdvm.nilreason[1],
    navaids_points_specialnavigationsystem_pt_iowdvm.href,
    surveillance_radarsystem_pt_chpzgv.title,
    surveillance_radarsystem_pt_chpzgv.nilreason[1],
    surveillance_radarsystem_pt_chpzgv.href,
    procedure_safealtitudearea_pt_tcaqde.title,
    procedure_safealtitudearea_pt_tcaqde.nilreason[1],
    procedure_safealtitudearea_pt_tcaqde.href,
    procedure_landingtakeoffareacollection_view_hompue.id
order by standardinstrumentdeparture.identifier, standardinstrumentdeparture_ts.sequence_number, standardinstrumentdeparture_ts.correction_number DESC;
create index on procedure.standardinstrumentdeparture_view (id);
-- StandardLevelColumnTimeSliceType
-- ['shared.standardlevel_view', 'notes.note_view']
drop materialized view if exists shared.standardlevelcolumn_view cascade;
create materialized view shared.standardlevelcolumn_view as
select distinct on (standardlevelcolumn.identifier,standardlevelcolumn_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardlevelcolumn.id,
    shared.standardlevelcolumn_ts.id as ts_id,
    shared.standardlevelcolumn_tsp.id as tsp_id,
    shared.standardlevelcolumn.identifier,
    shared.standardlevelcolumn_ts.interpretation,
    shared.standardlevelcolumn_ts.sequence_number,
    shared.standardlevelcolumn_ts.correction_number,
    shared.standardlevelcolumn_ts.valid_time_begin,
    shared.standardlevelcolumn_ts.valid_time_end,
    shared.standardlevelcolumn_ts.feature_lifetime_begin,
    shared.standardlevelcolumn_ts.feature_lifetime_end,
    coalesce(cast(shared.standardlevelcolumn_ts.series_value as varchar), '(' || shared.standardlevelcolumn_ts.series_nilreason || ')') as series,
    coalesce(cast(shared.standardlevelcolumn_ts.separation_value as varchar), '(' || shared.standardlevelcolumn_ts.separation_nilreason || ')') as separation,
    coalesce(cast(shared_standardleveltable_pt_jmxdqo.title as varchar), '(' || shared_standardleveltable_pt_jmxdqo.nilreason[1] || ')') AS leveltable,
    shared_standardleveltable_pt_jmxdqo.href AS leveltable_href,
    jsonb_agg(shared_standardlevel_view_bgaiup.id) AS level,
    jsonb_agg(notes_note_view_qcwvjz.*) AS annotation
from shared.standardlevelcolumn 
inner join master_join mj2 on shared.standardlevelcolumn.id = mj2.source_id
inner join shared.standardlevelcolumn_tsp on mj2.target_id = shared.standardlevelcolumn_tsp.id
inner join shared.standardlevelcolumn_ts on shared.standardlevelcolumn_tsp.standardlevelcolumntimeslice_id = shared.standardlevelcolumn_ts.id
left join shared.standardleveltable_pt shared_standardleveltable_pt_jmxdqo on shared.standardlevelcolumn_ts.leveltable_id = shared_standardleveltable_pt_jmxdqo.id
left join master_join master_join_rnyroi on shared.standardlevelcolumn_ts.id = master_join_rnyroi.source_id
left join shared.standardlevel_view shared_standardlevel_view_bgaiup on master_join_rnyroi.target_id = shared_standardlevel_view_bgaiup.id
left join master_join master_join_hwuleq on shared.standardlevelcolumn_ts.id = master_join_hwuleq.source_id
left join notes.note_view notes_note_view_qcwvjz on master_join_hwuleq.target_id = notes_note_view_qcwvjz.id
where shared.standardlevelcolumn.feature_status = 'APPROVED'
  and shared.standardlevelcolumn_ts.feature_status = 'APPROVED'
group by
    shared.standardlevelcolumn.id,
    shared.standardlevelcolumn_ts.id,
    shared.standardlevelcolumn_tsp.id,
    shared.standardlevelcolumn.identifier,
    shared.standardlevelcolumn_ts.interpretation,
    shared.standardlevelcolumn_ts.sequence_number,
    shared.standardlevelcolumn_ts.correction_number,
    shared.standardlevelcolumn_ts.valid_time_begin,
    shared.standardlevelcolumn_ts.valid_time_end,
    shared.standardlevelcolumn_ts.feature_lifetime_begin,
    shared.standardlevelcolumn_ts.feature_lifetime_end,
    shared.standardlevelcolumn_ts.series_value,
    shared.standardlevelcolumn_ts.series_nilreason,
    shared.standardlevelcolumn_ts.separation_value,
    shared.standardlevelcolumn_ts.separation_nilreason,
    shared_standardleveltable_pt_jmxdqo.title,
    shared_standardleveltable_pt_jmxdqo.nilreason[1],
    shared_standardleveltable_pt_jmxdqo.href
order by standardlevelcolumn.identifier, standardlevelcolumn_ts.sequence_number, standardlevelcolumn_ts.correction_number DESC;
create index on shared.standardlevelcolumn_view (id);
-- StandardLevelSectorTimeSliceType
-- ['notes.note_view']
drop materialized view if exists shared.standardlevelsector_view cascade;
create materialized view shared.standardlevelsector_view as
select distinct on (standardlevelsector.identifier,standardlevelsector_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardlevelsector.id,
    shared.standardlevelsector_ts.id as ts_id,
    shared.standardlevelsector_tsp.id as tsp_id,
    shared.standardlevelsector.identifier,
    shared.standardlevelsector_ts.interpretation,
    shared.standardlevelsector_ts.sequence_number,
    shared.standardlevelsector_ts.correction_number,
    shared.standardlevelsector_ts.valid_time_begin,
    shared.standardlevelsector_ts.valid_time_end,
    shared.standardlevelsector_ts.feature_lifetime_begin,
    shared.standardlevelsector_ts.feature_lifetime_end,
    coalesce(cast(shared.standardlevelsector_ts.flightrule_value as varchar), '(' || shared.standardlevelsector_ts.flightrule_nilreason || ')') as flightrule,
    coalesce(cast(shared.standardlevelsector_ts.fromtrack_value as varchar), '(' || shared.standardlevelsector_ts.fromtrack_nilreason || ')') as fromtrack,
    coalesce(cast(shared.standardlevelsector_ts.totrack_value as varchar), '(' || shared.standardlevelsector_ts.totrack_nilreason || ')') as totrack,
    coalesce(cast(shared.standardlevelsector_ts.angletype_value as varchar), '(' || shared.standardlevelsector_ts.angletype_nilreason || ')') as angletype,
    coalesce(cast(shared_standardlevelcolumn_pt_sqfnvh.title as varchar), '(' || shared_standardlevelcolumn_pt_sqfnvh.nilreason[1] || ')') AS applicablelevelcolumn,
    shared_standardlevelcolumn_pt_sqfnvh.href AS applicablelevelcolumn_href,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_asfphj.id,
    'title', coalesce(cast(airspace_airspace_pt_asfphj.title AS varchar), '(' || airspace_airspace_pt_asfphj.nilreason[1] || ')'),
    'href', airspace_airspace_pt_asfphj.href)) AS applicableairspace,
    jsonb_agg(notes_note_view_iwmbxd.*) AS annotation
from shared.standardlevelsector 
inner join master_join mj2 on shared.standardlevelsector.id = mj2.source_id
inner join shared.standardlevelsector_tsp on mj2.target_id = shared.standardlevelsector_tsp.id
inner join shared.standardlevelsector_ts on shared.standardlevelsector_tsp.standardlevelsectortimeslice_id = shared.standardlevelsector_ts.id
left join shared.standardlevelcolumn_pt shared_standardlevelcolumn_pt_sqfnvh on shared.standardlevelsector_ts.applicablelevelcolumn_id = shared_standardlevelcolumn_pt_sqfnvh.id
left join master_join master_join_nnydqe on shared.standardlevelsector_ts.id = master_join_nnydqe.source_id
left join airspace.airspace_pt airspace_airspace_pt_asfphj on master_join_nnydqe.target_id = airspace_airspace_pt_asfphj.id
left join master_join master_join_mwlnqp on shared.standardlevelsector_ts.id = master_join_mwlnqp.source_id
left join notes.note_view notes_note_view_iwmbxd on master_join_mwlnqp.target_id = notes_note_view_iwmbxd.id
where shared.standardlevelsector.feature_status = 'APPROVED'
  and shared.standardlevelsector_ts.feature_status = 'APPROVED'
group by
    shared.standardlevelsector.id,
    shared.standardlevelsector_ts.id,
    shared.standardlevelsector_tsp.id,
    shared.standardlevelsector.identifier,
    shared.standardlevelsector_ts.interpretation,
    shared.standardlevelsector_ts.sequence_number,
    shared.standardlevelsector_ts.correction_number,
    shared.standardlevelsector_ts.valid_time_begin,
    shared.standardlevelsector_ts.valid_time_end,
    shared.standardlevelsector_ts.feature_lifetime_begin,
    shared.standardlevelsector_ts.feature_lifetime_end,
    shared.standardlevelsector_ts.flightrule_value,
    shared.standardlevelsector_ts.flightrule_nilreason,
    shared.standardlevelsector_ts.fromtrack_value,
    shared.standardlevelsector_ts.fromtrack_nilreason,
    shared.standardlevelsector_ts.totrack_value,
    shared.standardlevelsector_ts.totrack_nilreason,
    shared.standardlevelsector_ts.angletype_value,
    shared.standardlevelsector_ts.angletype_nilreason,
    shared_standardlevelcolumn_pt_sqfnvh.title,
    shared_standardlevelcolumn_pt_sqfnvh.nilreason[1],
    shared_standardlevelcolumn_pt_sqfnvh.href
order by standardlevelsector.identifier, standardlevelsector_ts.sequence_number, standardlevelsector_ts.correction_number DESC;
create index on shared.standardlevelsector_view (id);
-- StandardLevelTableTimeSliceType
-- ['notes.note_view']
drop materialized view if exists shared.standardleveltable_view cascade;
create materialized view shared.standardleveltable_view as
select distinct on (standardleveltable.identifier,standardleveltable_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardleveltable.id,
    shared.standardleveltable_ts.id as ts_id,
    shared.standardleveltable_tsp.id as tsp_id,
    shared.standardleveltable.identifier,
    shared.standardleveltable_ts.interpretation,
    shared.standardleveltable_ts.sequence_number,
    shared.standardleveltable_ts.correction_number,
    shared.standardleveltable_ts.valid_time_begin,
    shared.standardleveltable_ts.valid_time_end,
    shared.standardleveltable_ts.feature_lifetime_begin,
    shared.standardleveltable_ts.feature_lifetime_end,
    coalesce(cast(shared.standardleveltable_ts.name_value as varchar), '(' || shared.standardleveltable_ts.name_nilreason || ')') as name,
    coalesce(cast(shared.standardleveltable_ts.standardicao_value as varchar), '(' || shared.standardleveltable_ts.standardicao_nilreason || ')') as standardicao,
    jsonb_agg(notes_note_view_jyrdzt.*) AS annotation
from shared.standardleveltable 
inner join master_join mj2 on shared.standardleveltable.id = mj2.source_id
inner join shared.standardleveltable_tsp on mj2.target_id = shared.standardleveltable_tsp.id
inner join shared.standardleveltable_ts on shared.standardleveltable_tsp.standardleveltabletimeslice_id = shared.standardleveltable_ts.id
left join master_join master_join_uidyyf on shared.standardleveltable_ts.id = master_join_uidyyf.source_id
left join notes.note_view notes_note_view_jyrdzt on master_join_uidyyf.target_id = notes_note_view_jyrdzt.id
where shared.standardleveltable.feature_status = 'APPROVED'
  and shared.standardleveltable_ts.feature_status = 'APPROVED'
group by
    shared.standardleveltable.id,
    shared.standardleveltable_ts.id,
    shared.standardleveltable_tsp.id,
    shared.standardleveltable.identifier,
    shared.standardleveltable_ts.interpretation,
    shared.standardleveltable_ts.sequence_number,
    shared.standardleveltable_ts.correction_number,
    shared.standardleveltable_ts.valid_time_begin,
    shared.standardleveltable_ts.valid_time_end,
    shared.standardleveltable_ts.feature_lifetime_begin,
    shared.standardleveltable_ts.feature_lifetime_end,
    shared.standardleveltable_ts.name_value,
    shared.standardleveltable_ts.name_nilreason,
    shared.standardleveltable_ts.standardicao_value,
    shared.standardleveltable_ts.standardicao_nilreason
order by standardleveltable.identifier, standardleveltable_ts.sequence_number, standardleveltable_ts.correction_number DESC;
create index on shared.standardleveltable_view (id);
-- StandMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.standmarking_view cascade;
create materialized view airport_heliport.standmarking_view as
select distinct on (standmarking.identifier,standmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.standmarking.id,
    airport_heliport.standmarking_ts.id as ts_id,
    airport_heliport.standmarking_tsp.id as tsp_id,
    airport_heliport.standmarking.identifier,
    airport_heliport.standmarking_ts.interpretation,
    airport_heliport.standmarking_ts.sequence_number,
    airport_heliport.standmarking_ts.correction_number,
    airport_heliport.standmarking_ts.valid_time_begin,
    airport_heliport.standmarking_ts.valid_time_end,
    airport_heliport.standmarking_ts.feature_lifetime_begin,
    airport_heliport.standmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.standmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.standmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.standmarking_ts.condition_value as varchar), '(' || airport_heliport.standmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_aircraftstand_pt_bqhkov.title as varchar), '(' || airport_heliport_aircraftstand_pt_bqhkov.nilreason[1] || ')') AS markedstand,
    airport_heliport_aircraftstand_pt_bqhkov.href AS markedstand_href,
    jsonb_agg(airport_heliport_markingelement_view_cwqjoh.id) AS element,
    jsonb_agg(notes_note_view_qjvecg.*) AS annotation
from airport_heliport.standmarking 
inner join master_join mj2 on airport_heliport.standmarking.id = mj2.source_id
inner join airport_heliport.standmarking_tsp on mj2.target_id = airport_heliport.standmarking_tsp.id
inner join airport_heliport.standmarking_ts on airport_heliport.standmarking_tsp.standmarkingtimeslice_id = airport_heliport.standmarking_ts.id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_bqhkov on airport_heliport.standmarking_ts.markedstand_id = airport_heliport_aircraftstand_pt_bqhkov.id
left join master_join master_join_uxadyq on airport_heliport.standmarking_ts.id = master_join_uxadyq.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_cwqjoh on master_join_uxadyq.target_id = airport_heliport_markingelement_view_cwqjoh.id
left join master_join master_join_vytofr on airport_heliport.standmarking_ts.id = master_join_vytofr.source_id
left join notes.note_view notes_note_view_qjvecg on master_join_vytofr.target_id = notes_note_view_qjvecg.id
where airport_heliport.standmarking.feature_status = 'APPROVED'
  and airport_heliport.standmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.standmarking.id,
    airport_heliport.standmarking_ts.id,
    airport_heliport.standmarking_tsp.id,
    airport_heliport.standmarking.identifier,
    airport_heliport.standmarking_ts.interpretation,
    airport_heliport.standmarking_ts.sequence_number,
    airport_heliport.standmarking_ts.correction_number,
    airport_heliport.standmarking_ts.valid_time_begin,
    airport_heliport.standmarking_ts.valid_time_end,
    airport_heliport.standmarking_ts.feature_lifetime_begin,
    airport_heliport.standmarking_ts.feature_lifetime_end,
    airport_heliport.standmarking_ts.markingicaostandard_value,
    airport_heliport.standmarking_ts.markingicaostandard_nilreason,
    airport_heliport.standmarking_ts.condition_value,
    airport_heliport.standmarking_ts.condition_nilreason,
    airport_heliport_aircraftstand_pt_bqhkov.title,
    airport_heliport_aircraftstand_pt_bqhkov.nilreason[1],
    airport_heliport_aircraftstand_pt_bqhkov.href
order by standmarking.identifier, standmarking_ts.sequence_number, standmarking_ts.correction_number DESC;
create index on airport_heliport.standmarking_view (id);
-- SurveyControlPointTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.surveycontrolpoint_view cascade;
create materialized view airport_heliport.surveycontrolpoint_view as
select distinct on (surveycontrolpoint.identifier,surveycontrolpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.surveycontrolpoint.id,
    airport_heliport.surveycontrolpoint_ts.id as ts_id,
    airport_heliport.surveycontrolpoint_tsp.id as tsp_id,
    airport_heliport.surveycontrolpoint.identifier,
    airport_heliport.surveycontrolpoint_ts.interpretation,
    airport_heliport.surveycontrolpoint_ts.sequence_number,
    airport_heliport.surveycontrolpoint_ts.correction_number,
    airport_heliport.surveycontrolpoint_ts.valid_time_begin,
    airport_heliport.surveycontrolpoint_ts.valid_time_end,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_begin,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.surveycontrolpoint_ts.designator_value as varchar), '(' || airport_heliport.surveycontrolpoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport_airportheliport_pt_bjxvip.title as varchar), '(' || airport_heliport_airportheliport_pt_bjxvip.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_bjxvip.href AS associatedairportheliport_href,
    geometry_elevatedpoint_view_kaoibi.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_kaoibi.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_kaoibi.geom) AS location_latitude,
    geometry_elevatedpoint_view_kaoibi.elevation AS location_elevation,
    geometry_elevatedpoint_view_kaoibi.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_kaoibi.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_kaoibi.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_kaoibi.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(notes_note_view_tmohkk.*) AS annotation
from airport_heliport.surveycontrolpoint 
inner join master_join mj2 on airport_heliport.surveycontrolpoint.id = mj2.source_id
inner join airport_heliport.surveycontrolpoint_tsp on mj2.target_id = airport_heliport.surveycontrolpoint_tsp.id
inner join airport_heliport.surveycontrolpoint_ts on airport_heliport.surveycontrolpoint_tsp.surveycontrolpointtimeslice_id = airport_heliport.surveycontrolpoint_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_bjxvip on airport_heliport.surveycontrolpoint_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_bjxvip.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_kaoibi on airport_heliport.surveycontrolpoint_ts.location_id = geometry_elevatedpoint_view_kaoibi.id
left join master_join master_join_bnhqci on airport_heliport.surveycontrolpoint_ts.id = master_join_bnhqci.source_id
left join notes.note_view notes_note_view_tmohkk on master_join_bnhqci.target_id = notes_note_view_tmohkk.id
where airport_heliport.surveycontrolpoint.feature_status = 'APPROVED'
  and airport_heliport.surveycontrolpoint_ts.feature_status = 'APPROVED'
group by
    airport_heliport.surveycontrolpoint.id,
    airport_heliport.surveycontrolpoint_ts.id,
    airport_heliport.surveycontrolpoint_tsp.id,
    airport_heliport.surveycontrolpoint.identifier,
    airport_heliport.surveycontrolpoint_ts.interpretation,
    airport_heliport.surveycontrolpoint_ts.sequence_number,
    airport_heliport.surveycontrolpoint_ts.correction_number,
    airport_heliport.surveycontrolpoint_ts.valid_time_begin,
    airport_heliport.surveycontrolpoint_ts.valid_time_end,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_begin,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_end,
    airport_heliport.surveycontrolpoint_ts.designator_value,
    airport_heliport.surveycontrolpoint_ts.designator_nilreason,
    airport_heliport_airportheliport_pt_bjxvip.title,
    airport_heliport_airportheliport_pt_bjxvip.nilreason[1],
    airport_heliport_airportheliport_pt_bjxvip.href,
    geometry_elevatedpoint_view_kaoibi.geom,
    geometry_elevatedpoint_view_kaoibi.elevation,
    geometry_elevatedpoint_view_kaoibi.geoidUndulation,
    geometry_elevatedpoint_view_kaoibi.verticalDatum,
    geometry_elevatedpoint_view_kaoibi.verticalAccuracy,
    geometry_elevatedpoint_view_kaoibi.horizontalAccuracy
order by surveycontrolpoint.identifier, surveycontrolpoint_ts.sequence_number, surveycontrolpoint_ts.correction_number DESC;
create index on airport_heliport.surveycontrolpoint_view (id);
-- TACANTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.tacan_view cascade;
create materialized view navaids_points.tacan_view as
select distinct on (tacan.identifier,tacan_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.tacan.id,
    navaids_points.tacan_ts.id as ts_id,
    navaids_points.tacan_tsp.id as tsp_id,
    navaids_points.tacan.identifier,
    navaids_points.tacan_ts.interpretation,
    navaids_points.tacan_ts.sequence_number,
    navaids_points.tacan_ts.correction_number,
    navaids_points.tacan_ts.valid_time_begin,
    navaids_points.tacan_ts.valid_time_end,
    navaids_points.tacan_ts.feature_lifetime_begin,
    navaids_points.tacan_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.tacan_ts.designator_value as varchar), '(' || navaids_points.tacan_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.tacan_ts.name_value as varchar), '(' || navaids_points.tacan_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.tacan_ts.emissionclass_value as varchar), '(' || navaids_points.tacan_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.tacan_ts.mobile_value as varchar), '(' || navaids_points.tacan_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.tacan_ts.magneticvariation_value as varchar), '(' || navaids_points.tacan_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.tacan_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.tacan_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.tacan_ts.datemagneticvariation_value as varchar), '(' || navaids_points.tacan_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.tacan_ts.flightchecked_value as varchar), '(' || navaids_points.tacan_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.tacan_ts.channel_value as varchar), '(' || navaids_points.tacan_ts.channel_nilreason || ')') as channel,
    coalesce(cast(navaids_points.tacan_ts.declination_value as varchar), '(' || navaids_points.tacan_ts.declination_nilreason || ')') as declination,
    geometry_elevatedpoint_view_wzsjts.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_wzsjts.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_wzsjts.geom) AS location_latitude,
    geometry_elevatedpoint_view_wzsjts.elevation AS location_elevation,
    geometry_elevatedpoint_view_wzsjts.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_wzsjts.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_wzsjts.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_wzsjts.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_yazhdo.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_pokdci.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_bslryz.id) AS availability,
    jsonb_agg(notes_note_view_prkqvk.*) AS annotation
from navaids_points.tacan 
inner join master_join mj2 on navaids_points.tacan.id = mj2.source_id
inner join navaids_points.tacan_tsp on mj2.target_id = navaids_points.tacan_tsp.id
inner join navaids_points.tacan_ts on navaids_points.tacan_tsp.tacantimeslice_id = navaids_points.tacan_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_wzsjts on navaids_points.tacan_ts.location_id = geometry_elevatedpoint_view_wzsjts.id
left join master_join master_join_rujpfp on navaids_points.tacan_ts.id = master_join_rujpfp.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_yazhdo on master_join_rujpfp.target_id = navaids_points_authorityfornavaidequipment_view_yazhdo.id
left join master_join master_join_hoxdfz on navaids_points.tacan_ts.id = master_join_hoxdfz.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_pokdci on master_join_hoxdfz.target_id = navaids_points_navaidequipmentmonitoring_view_pokdci.id
left join master_join master_join_sdagam on navaids_points.tacan_ts.id = master_join_sdagam.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_bslryz on master_join_sdagam.target_id = navaids_points_navaidoperationalstatus_view_bslryz.id
left join master_join master_join_otznzi on navaids_points.tacan_ts.id = master_join_otznzi.source_id
left join notes.note_view notes_note_view_prkqvk on master_join_otznzi.target_id = notes_note_view_prkqvk.id
where navaids_points.tacan.feature_status = 'APPROVED'
  and navaids_points.tacan_ts.feature_status = 'APPROVED'
group by
    navaids_points.tacan.id,
    navaids_points.tacan_ts.id,
    navaids_points.tacan_tsp.id,
    navaids_points.tacan.identifier,
    navaids_points.tacan_ts.interpretation,
    navaids_points.tacan_ts.sequence_number,
    navaids_points.tacan_ts.correction_number,
    navaids_points.tacan_ts.valid_time_begin,
    navaids_points.tacan_ts.valid_time_end,
    navaids_points.tacan_ts.feature_lifetime_begin,
    navaids_points.tacan_ts.feature_lifetime_end,
    navaids_points.tacan_ts.designator_value,
    navaids_points.tacan_ts.designator_nilreason,
    navaids_points.tacan_ts.name_value,
    navaids_points.tacan_ts.name_nilreason,
    navaids_points.tacan_ts.emissionclass_value,
    navaids_points.tacan_ts.emissionclass_nilreason,
    navaids_points.tacan_ts.mobile_value,
    navaids_points.tacan_ts.mobile_nilreason,
    navaids_points.tacan_ts.magneticvariation_value,
    navaids_points.tacan_ts.magneticvariation_nilreason,
    navaids_points.tacan_ts.magneticvariationaccuracy_value,
    navaids_points.tacan_ts.magneticvariationaccuracy_nilreason,
    navaids_points.tacan_ts.datemagneticvariation_value,
    navaids_points.tacan_ts.datemagneticvariation_nilreason,
    navaids_points.tacan_ts.flightchecked_value,
    navaids_points.tacan_ts.flightchecked_nilreason,
    navaids_points.tacan_ts.channel_value,
    navaids_points.tacan_ts.channel_nilreason,
    navaids_points.tacan_ts.declination_value,
    navaids_points.tacan_ts.declination_nilreason,
    geometry_elevatedpoint_view_wzsjts.geom,
    geometry_elevatedpoint_view_wzsjts.elevation,
    geometry_elevatedpoint_view_wzsjts.geoidUndulation,
    geometry_elevatedpoint_view_wzsjts.verticalDatum,
    geometry_elevatedpoint_view_wzsjts.verticalAccuracy,
    geometry_elevatedpoint_view_wzsjts.horizontalAccuracy
order by tacan.identifier, tacan_ts.sequence_number, tacan_ts.correction_number DESC;
create index on navaids_points.tacan_view (id);
-- TaxiHoldingPositionLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiholdingpositionlightsystem_view cascade;
create materialized view airport_heliport.taxiholdingpositionlightsystem_view as
select distinct on (taxiholdingpositionlightsystem.identifier,taxiholdingpositionlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingpositionlightsystem.id,
    airport_heliport.taxiholdingpositionlightsystem_ts.id as ts_id,
    airport_heliport.taxiholdingpositionlightsystem_tsp.id as tsp_id,
    airport_heliport.taxiholdingpositionlightsystem.identifier,
    airport_heliport.taxiholdingpositionlightsystem_ts.interpretation,
    airport_heliport.taxiholdingpositionlightsystem_ts.sequence_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.correction_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.colour_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.type_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_taxiholdingposition_pt_mbrmby.title as varchar), '(' || airport_heliport_taxiholdingposition_pt_mbrmby.nilreason[1] || ')') AS taxiholding,
    airport_heliport_taxiholdingposition_pt_mbrmby.href AS taxiholding_href,
    jsonb_agg(shared_lightelement_view_yprlna.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_nuizge.id) AS availability,
    jsonb_agg(notes_note_view_lumzyh.*) AS annotation
from airport_heliport.taxiholdingpositionlightsystem 
inner join master_join mj2 on airport_heliport.taxiholdingpositionlightsystem.id = mj2.source_id
inner join airport_heliport.taxiholdingpositionlightsystem_tsp on mj2.target_id = airport_heliport.taxiholdingpositionlightsystem_tsp.id
inner join airport_heliport.taxiholdingpositionlightsystem_ts on airport_heliport.taxiholdingpositionlightsystem_tsp.taxiholdingpositionlightsystemtimeslice_id = airport_heliport.taxiholdingpositionlightsystem_ts.id
left join airport_heliport.taxiholdingposition_pt airport_heliport_taxiholdingposition_pt_mbrmby on airport_heliport.taxiholdingpositionlightsystem_ts.taxiholding_id = airport_heliport_taxiholdingposition_pt_mbrmby.id
left join master_join master_join_wmmrls on airport_heliport.taxiholdingpositionlightsystem_ts.id = master_join_wmmrls.source_id
left join shared.lightelement_view shared_lightelement_view_yprlna on master_join_wmmrls.target_id = shared_lightelement_view_yprlna.id
left join master_join master_join_mnqhgz on airport_heliport.taxiholdingpositionlightsystem_ts.id = master_join_mnqhgz.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_nuizge on master_join_mnqhgz.target_id = airport_heliport_groundlightingavailability_view_nuizge.id
left join master_join master_join_gwfcba on airport_heliport.taxiholdingpositionlightsystem_ts.id = master_join_gwfcba.source_id
left join notes.note_view notes_note_view_lumzyh on master_join_gwfcba.target_id = notes_note_view_lumzyh.id
where airport_heliport.taxiholdingpositionlightsystem.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingpositionlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingpositionlightsystem.id,
    airport_heliport.taxiholdingpositionlightsystem_ts.id,
    airport_heliport.taxiholdingpositionlightsystem_tsp.id,
    airport_heliport.taxiholdingpositionlightsystem.identifier,
    airport_heliport.taxiholdingpositionlightsystem_ts.interpretation,
    airport_heliport.taxiholdingpositionlightsystem_ts.sequence_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.correction_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.colour_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.colour_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.type_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.type_nilreason,
    airport_heliport_taxiholdingposition_pt_mbrmby.title,
    airport_heliport_taxiholdingposition_pt_mbrmby.nilreason[1],
    airport_heliport_taxiholdingposition_pt_mbrmby.href
order by taxiholdingpositionlightsystem.identifier, taxiholdingpositionlightsystem_ts.sequence_number, taxiholdingpositionlightsystem_ts.correction_number DESC;
create index on airport_heliport.taxiholdingpositionlightsystem_view (id);
-- TaxiHoldingPositionMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.taxiholdingpositionmarking_view cascade;
create materialized view airport_heliport.taxiholdingpositionmarking_view as
select distinct on (taxiholdingpositionmarking.identifier,taxiholdingpositionmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingpositionmarking.id,
    airport_heliport.taxiholdingpositionmarking_ts.id as ts_id,
    airport_heliport.taxiholdingpositionmarking_tsp.id as tsp_id,
    airport_heliport.taxiholdingpositionmarking.identifier,
    airport_heliport.taxiholdingpositionmarking_ts.interpretation,
    airport_heliport.taxiholdingpositionmarking_ts.sequence_number,
    airport_heliport.taxiholdingpositionmarking_ts.correction_number,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_end,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.taxiholdingpositionmarking_ts.condition_value as varchar), '(' || airport_heliport.taxiholdingpositionmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_taxiholdingposition_pt_tflxdk.title as varchar), '(' || airport_heliport_taxiholdingposition_pt_tflxdk.nilreason[1] || ')') AS markedtaxihold,
    airport_heliport_taxiholdingposition_pt_tflxdk.href AS markedtaxihold_href,
    jsonb_agg(airport_heliport_markingelement_view_vhgauk.id) AS element,
    jsonb_agg(notes_note_view_fjuaqc.*) AS annotation
from airport_heliport.taxiholdingpositionmarking 
inner join master_join mj2 on airport_heliport.taxiholdingpositionmarking.id = mj2.source_id
inner join airport_heliport.taxiholdingpositionmarking_tsp on mj2.target_id = airport_heliport.taxiholdingpositionmarking_tsp.id
inner join airport_heliport.taxiholdingpositionmarking_ts on airport_heliport.taxiholdingpositionmarking_tsp.taxiholdingpositionmarkingtimeslice_id = airport_heliport.taxiholdingpositionmarking_ts.id
left join airport_heliport.taxiholdingposition_pt airport_heliport_taxiholdingposition_pt_tflxdk on airport_heliport.taxiholdingpositionmarking_ts.markedtaxihold_id = airport_heliport_taxiholdingposition_pt_tflxdk.id
left join master_join master_join_zhflij on airport_heliport.taxiholdingpositionmarking_ts.id = master_join_zhflij.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_vhgauk on master_join_zhflij.target_id = airport_heliport_markingelement_view_vhgauk.id
left join master_join master_join_fytikp on airport_heliport.taxiholdingpositionmarking_ts.id = master_join_fytikp.source_id
left join notes.note_view notes_note_view_fjuaqc on master_join_fytikp.target_id = notes_note_view_fjuaqc.id
where airport_heliport.taxiholdingpositionmarking.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingpositionmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingpositionmarking.id,
    airport_heliport.taxiholdingpositionmarking_ts.id,
    airport_heliport.taxiholdingpositionmarking_tsp.id,
    airport_heliport.taxiholdingpositionmarking.identifier,
    airport_heliport.taxiholdingpositionmarking_ts.interpretation,
    airport_heliport.taxiholdingpositionmarking_ts.sequence_number,
    airport_heliport.taxiholdingpositionmarking_ts.correction_number,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_end,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_end,
    airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_value,
    airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_nilreason,
    airport_heliport.taxiholdingpositionmarking_ts.condition_value,
    airport_heliport.taxiholdingpositionmarking_ts.condition_nilreason,
    airport_heliport_taxiholdingposition_pt_tflxdk.title,
    airport_heliport_taxiholdingposition_pt_tflxdk.nilreason[1],
    airport_heliport_taxiholdingposition_pt_tflxdk.href
order by taxiholdingpositionmarking.identifier, taxiholdingpositionmarking_ts.sequence_number, taxiholdingpositionmarking_ts.correction_number DESC;
create index on airport_heliport.taxiholdingpositionmarking_view (id);
-- TaxiHoldingPositionTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiholdingposition_view cascade;
create materialized view airport_heliport.taxiholdingposition_view as
select distinct on (taxiholdingposition.identifier,taxiholdingposition_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingposition.id,
    airport_heliport.taxiholdingposition_ts.id as ts_id,
    airport_heliport.taxiholdingposition_tsp.id as tsp_id,
    airport_heliport.taxiholdingposition.identifier,
    airport_heliport.taxiholdingposition_ts.interpretation,
    airport_heliport.taxiholdingposition_ts.sequence_number,
    airport_heliport.taxiholdingposition_ts.correction_number,
    airport_heliport.taxiholdingposition_ts.valid_time_begin,
    airport_heliport.taxiholdingposition_ts.valid_time_end,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiholdingposition_ts.landingcategory_value as varchar), '(' || airport_heliport.taxiholdingposition_ts.landingcategory_nilreason || ')') as landingcategory,
    coalesce(cast(airport_heliport.taxiholdingposition_ts.status_value as varchar), '(' || airport_heliport.taxiholdingposition_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport_guidanceline_pt_iutlqq.title as varchar), '(' || airport_heliport_guidanceline_pt_iutlqq.nilreason[1] || ')') AS associatedguidanceline,
    airport_heliport_guidanceline_pt_iutlqq.href AS associatedguidanceline_href,
    geometry_elevatedpoint_view_hnxbah.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_hnxbah.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_hnxbah.geom) AS location_latitude,
    geometry_elevatedpoint_view_hnxbah.elevation AS location_elevation,
    geometry_elevatedpoint_view_hnxbah.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_hnxbah.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_hnxbah.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_hnxbah.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runway_pt_yzqeve.id,
    'title', coalesce(cast(airport_heliport_runway_pt_yzqeve.title AS varchar), '(' || airport_heliport_runway_pt_yzqeve.nilreason[1] || ')'),
    'href', airport_heliport_runway_pt_yzqeve.href)) AS protectedrunway,
    jsonb_agg(notes_note_view_awppmy.*) AS annotation
from airport_heliport.taxiholdingposition 
inner join master_join mj2 on airport_heliport.taxiholdingposition.id = mj2.source_id
inner join airport_heliport.taxiholdingposition_tsp on mj2.target_id = airport_heliport.taxiholdingposition_tsp.id
inner join airport_heliport.taxiholdingposition_ts on airport_heliport.taxiholdingposition_tsp.taxiholdingpositiontimeslice_id = airport_heliport.taxiholdingposition_ts.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_iutlqq on airport_heliport.taxiholdingposition_ts.associatedguidanceline_id = airport_heliport_guidanceline_pt_iutlqq.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_hnxbah on airport_heliport.taxiholdingposition_ts.location_id = geometry_elevatedpoint_view_hnxbah.id
left join master_join master_join_rfeyrx on airport_heliport.taxiholdingposition_ts.id = master_join_rfeyrx.source_id
left join airport_heliport.runway_pt airport_heliport_runway_pt_yzqeve on master_join_rfeyrx.target_id = airport_heliport_runway_pt_yzqeve.id
left join master_join master_join_mswoyn on airport_heliport.taxiholdingposition_ts.id = master_join_mswoyn.source_id
left join notes.note_view notes_note_view_awppmy on master_join_mswoyn.target_id = notes_note_view_awppmy.id
where airport_heliport.taxiholdingposition.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingposition_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingposition.id,
    airport_heliport.taxiholdingposition_ts.id,
    airport_heliport.taxiholdingposition_tsp.id,
    airport_heliport.taxiholdingposition.identifier,
    airport_heliport.taxiholdingposition_ts.interpretation,
    airport_heliport.taxiholdingposition_ts.sequence_number,
    airport_heliport.taxiholdingposition_ts.correction_number,
    airport_heliport.taxiholdingposition_ts.valid_time_begin,
    airport_heliport.taxiholdingposition_ts.valid_time_end,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_end,
    airport_heliport.taxiholdingposition_ts.landingcategory_value,
    airport_heliport.taxiholdingposition_ts.landingcategory_nilreason,
    airport_heliport.taxiholdingposition_ts.status_value,
    airport_heliport.taxiholdingposition_ts.status_nilreason,
    airport_heliport_guidanceline_pt_iutlqq.title,
    airport_heliport_guidanceline_pt_iutlqq.nilreason[1],
    airport_heliport_guidanceline_pt_iutlqq.href,
    geometry_elevatedpoint_view_hnxbah.geom,
    geometry_elevatedpoint_view_hnxbah.elevation,
    geometry_elevatedpoint_view_hnxbah.geoidUndulation,
    geometry_elevatedpoint_view_hnxbah.verticalDatum,
    geometry_elevatedpoint_view_hnxbah.verticalAccuracy,
    geometry_elevatedpoint_view_hnxbah.horizontalAccuracy
order by taxiholdingposition.identifier, taxiholdingposition_ts.sequence_number, taxiholdingposition_ts.correction_number DESC;
create index on airport_heliport.taxiholdingposition_view (id);
-- TaxiwayElementTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'airport_heliport.manoeuvringareaavailability_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.taxiwayelement_view cascade;
create materialized view airport_heliport.taxiwayelement_view as
select distinct on (taxiwayelement.identifier,taxiwayelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwayelement.id,
    airport_heliport.taxiwayelement_ts.id as ts_id,
    airport_heliport.taxiwayelement_tsp.id as tsp_id,
    airport_heliport.taxiwayelement.identifier,
    airport_heliport.taxiwayelement_ts.interpretation,
    airport_heliport.taxiwayelement_ts.sequence_number,
    airport_heliport.taxiwayelement_ts.correction_number,
    airport_heliport.taxiwayelement_ts.valid_time_begin,
    airport_heliport.taxiwayelement_ts.valid_time_end,
    airport_heliport.taxiwayelement_ts.feature_lifetime_begin,
    airport_heliport.taxiwayelement_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiwayelement_ts.type_value as varchar), '(' || airport_heliport.taxiwayelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.taxiwayelement_ts.gradeseparation_value as varchar), '(' || airport_heliport.taxiwayelement_ts.gradeseparation_nilreason || ')') as gradeseparation,
    coalesce(cast(airport_heliport.taxiwayelement_ts.length_value as varchar) || ' ' || airport_heliport.taxiwayelement_ts.length_uom, '(' || airport_heliport.taxiwayelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.taxiwayelement_ts.width_value as varchar) || ' ' || airport_heliport.taxiwayelement_ts.width_uom, '(' || airport_heliport.taxiwayelement_ts.width_nilreason || ')') as width,
    airport_heliport_surfacecharacteristics_view_jnwebg.id AS surfaceproperties,
    coalesce(cast(airport_heliport_taxiway_pt_vtiekz.title as varchar), '(' || airport_heliport_taxiway_pt_vtiekz.nilreason[1] || ')') AS associatedtaxiway,
    airport_heliport_taxiway_pt_vtiekz.href AS associatedtaxiway_href,
    geometry_elevatedsurface_view_jbwjiw.geom AS extent_geom,
    geometry_elevatedsurface_view_jbwjiw.elevation AS extent_elevation,
    geometry_elevatedsurface_view_jbwjiw.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_jbwjiw.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_jbwjiw.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_jbwjiw.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(notes_note_view_tsmpar.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_ccolee.id) AS availability
from airport_heliport.taxiwayelement 
inner join master_join mj2 on airport_heliport.taxiwayelement.id = mj2.source_id
inner join airport_heliport.taxiwayelement_tsp on mj2.target_id = airport_heliport.taxiwayelement_tsp.id
inner join airport_heliport.taxiwayelement_ts on airport_heliport.taxiwayelement_tsp.taxiwayelementtimeslice_id = airport_heliport.taxiwayelement_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_jnwebg on airport_heliport.taxiwayelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_jnwebg.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_vtiekz on airport_heliport.taxiwayelement_ts.associatedtaxiway_id = airport_heliport_taxiway_pt_vtiekz.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_jbwjiw on airport_heliport.taxiwayelement_ts.extent_id = geometry_elevatedsurface_view_jbwjiw.id
left join master_join master_join_oqvaza on airport_heliport.taxiwayelement_ts.id = master_join_oqvaza.source_id
left join notes.note_view notes_note_view_tsmpar on master_join_oqvaza.target_id = notes_note_view_tsmpar.id
left join master_join master_join_mxelro on airport_heliport.taxiwayelement_ts.id = master_join_mxelro.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_ccolee on master_join_mxelro.target_id = airport_heliport_manoeuvringareaavailability_view_ccolee.id
where airport_heliport.taxiwayelement.feature_status = 'APPROVED'
  and airport_heliport.taxiwayelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwayelement.id,
    airport_heliport.taxiwayelement_ts.id,
    airport_heliport.taxiwayelement_tsp.id,
    airport_heliport.taxiwayelement.identifier,
    airport_heliport.taxiwayelement_ts.interpretation,
    airport_heliport.taxiwayelement_ts.sequence_number,
    airport_heliport.taxiwayelement_ts.correction_number,
    airport_heliport.taxiwayelement_ts.valid_time_begin,
    airport_heliport.taxiwayelement_ts.valid_time_end,
    airport_heliport.taxiwayelement_ts.feature_lifetime_begin,
    airport_heliport.taxiwayelement_ts.feature_lifetime_end,
    airport_heliport.taxiwayelement_ts.type_value,
    airport_heliport.taxiwayelement_ts.type_nilreason,
    airport_heliport.taxiwayelement_ts.gradeseparation_value,
    airport_heliport.taxiwayelement_ts.gradeseparation_nilreason,
    airport_heliport.taxiwayelement_ts.length_value,
    airport_heliport.taxiwayelement_ts.length_uom,
    airport_heliport.taxiwayelement_ts.length_nilreason,
    airport_heliport.taxiwayelement_ts.width_value,
    airport_heliport.taxiwayelement_ts.width_uom,
    airport_heliport.taxiwayelement_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_view_jnwebg.id,
    airport_heliport_taxiway_pt_vtiekz.title,
    airport_heliport_taxiway_pt_vtiekz.nilreason[1],
    airport_heliport_taxiway_pt_vtiekz.href,
    geometry_elevatedsurface_view_jbwjiw.geom,
    geometry_elevatedsurface_view_jbwjiw.elevation,
    geometry_elevatedsurface_view_jbwjiw.geoidUndulation,
    geometry_elevatedsurface_view_jbwjiw.verticalDatum,
    geometry_elevatedsurface_view_jbwjiw.verticalAccuracy,
    geometry_elevatedsurface_view_jbwjiw.horizontalAccuracy
order by taxiwayelement.identifier, taxiwayelement_ts.sequence_number, taxiwayelement_ts.correction_number DESC;
create index on airport_heliport.taxiwayelement_view (id);
-- TaxiwayLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiwaylightsystem_view cascade;
create materialized view airport_heliport.taxiwaylightsystem_view as
select distinct on (taxiwaylightsystem.identifier,taxiwaylightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwaylightsystem.id,
    airport_heliport.taxiwaylightsystem_ts.id as ts_id,
    airport_heliport.taxiwaylightsystem_tsp.id as tsp_id,
    airport_heliport.taxiwaylightsystem.identifier,
    airport_heliport.taxiwaylightsystem_ts.interpretation,
    airport_heliport.taxiwaylightsystem_ts.sequence_number,
    airport_heliport.taxiwaylightsystem_ts.correction_number,
    airport_heliport.taxiwaylightsystem_ts.valid_time_begin,
    airport_heliport.taxiwaylightsystem_ts.valid_time_end,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.colour_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.position_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_taxiway_pt_iehdkc.title as varchar), '(' || airport_heliport_taxiway_pt_iehdkc.nilreason[1] || ')') AS lightedtaxiway,
    airport_heliport_taxiway_pt_iehdkc.href AS lightedtaxiway_href,
    jsonb_agg(shared_lightelement_view_wzvgzz.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_qkmssx.id) AS availability,
    jsonb_agg(notes_note_view_szbipr.*) AS annotation
from airport_heliport.taxiwaylightsystem 
inner join master_join mj2 on airport_heliport.taxiwaylightsystem.id = mj2.source_id
inner join airport_heliport.taxiwaylightsystem_tsp on mj2.target_id = airport_heliport.taxiwaylightsystem_tsp.id
inner join airport_heliport.taxiwaylightsystem_ts on airport_heliport.taxiwaylightsystem_tsp.taxiwaylightsystemtimeslice_id = airport_heliport.taxiwaylightsystem_ts.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_iehdkc on airport_heliport.taxiwaylightsystem_ts.lightedtaxiway_id = airport_heliport_taxiway_pt_iehdkc.id
left join master_join master_join_wlmfpr on airport_heliport.taxiwaylightsystem_ts.id = master_join_wlmfpr.source_id
left join shared.lightelement_view shared_lightelement_view_wzvgzz on master_join_wlmfpr.target_id = shared_lightelement_view_wzvgzz.id
left join master_join master_join_jenpvk on airport_heliport.taxiwaylightsystem_ts.id = master_join_jenpvk.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_qkmssx on master_join_jenpvk.target_id = airport_heliport_groundlightingavailability_view_qkmssx.id
left join master_join master_join_dvyrfh on airport_heliport.taxiwaylightsystem_ts.id = master_join_dvyrfh.source_id
left join notes.note_view notes_note_view_szbipr on master_join_dvyrfh.target_id = notes_note_view_szbipr.id
where airport_heliport.taxiwaylightsystem.feature_status = 'APPROVED'
  and airport_heliport.taxiwaylightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwaylightsystem.id,
    airport_heliport.taxiwaylightsystem_ts.id,
    airport_heliport.taxiwaylightsystem_tsp.id,
    airport_heliport.taxiwaylightsystem.identifier,
    airport_heliport.taxiwaylightsystem_ts.interpretation,
    airport_heliport.taxiwaylightsystem_ts.sequence_number,
    airport_heliport.taxiwaylightsystem_ts.correction_number,
    airport_heliport.taxiwaylightsystem_ts.valid_time_begin,
    airport_heliport.taxiwaylightsystem_ts.valid_time_end,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_end,
    airport_heliport.taxiwaylightsystem_ts.emergencylighting_value,
    airport_heliport.taxiwaylightsystem_ts.emergencylighting_nilreason,
    airport_heliport.taxiwaylightsystem_ts.intensitylevel_value,
    airport_heliport.taxiwaylightsystem_ts.intensitylevel_nilreason,
    airport_heliport.taxiwaylightsystem_ts.colour_value,
    airport_heliport.taxiwaylightsystem_ts.colour_nilreason,
    airport_heliport.taxiwaylightsystem_ts.position_value,
    airport_heliport.taxiwaylightsystem_ts.position_nilreason,
    airport_heliport_taxiway_pt_iehdkc.title,
    airport_heliport_taxiway_pt_iehdkc.nilreason[1],
    airport_heliport_taxiway_pt_iehdkc.href
order by taxiwaylightsystem.identifier, taxiwaylightsystem_ts.sequence_number, taxiwaylightsystem_ts.correction_number DESC;
create index on airport_heliport.taxiwaylightsystem_view (id);
-- TaxiwayMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.taxiwaymarking_view cascade;
create materialized view airport_heliport.taxiwaymarking_view as
select distinct on (taxiwaymarking.identifier,taxiwaymarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwaymarking.id,
    airport_heliport.taxiwaymarking_ts.id as ts_id,
    airport_heliport.taxiwaymarking_tsp.id as tsp_id,
    airport_heliport.taxiwaymarking.identifier,
    airport_heliport.taxiwaymarking_ts.interpretation,
    airport_heliport.taxiwaymarking_ts.sequence_number,
    airport_heliport.taxiwaymarking_ts.correction_number,
    airport_heliport.taxiwaymarking_ts.valid_time_begin,
    airport_heliport.taxiwaymarking_ts.valid_time_end,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_begin,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.condition_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.markinglocation_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_taxiway_pt_ghdawz.title as varchar), '(' || airport_heliport_taxiway_pt_ghdawz.nilreason[1] || ')') AS markedtaxiway,
    airport_heliport_taxiway_pt_ghdawz.href AS markedtaxiway_href,
    coalesce(cast(airport_heliport_taxiwayelement_pt_nxcjrm.title as varchar), '(' || airport_heliport_taxiwayelement_pt_nxcjrm.nilreason[1] || ')') AS markedelement,
    airport_heliport_taxiwayelement_pt_nxcjrm.href AS markedelement_href,
    jsonb_agg(airport_heliport_markingelement_view_rgeerm.id) AS element,
    jsonb_agg(notes_note_view_drtauw.*) AS annotation
from airport_heliport.taxiwaymarking 
inner join master_join mj2 on airport_heliport.taxiwaymarking.id = mj2.source_id
inner join airport_heliport.taxiwaymarking_tsp on mj2.target_id = airport_heliport.taxiwaymarking_tsp.id
inner join airport_heliport.taxiwaymarking_ts on airport_heliport.taxiwaymarking_tsp.taxiwaymarkingtimeslice_id = airport_heliport.taxiwaymarking_ts.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_ghdawz on airport_heliport.taxiwaymarking_ts.markedtaxiway_id = airport_heliport_taxiway_pt_ghdawz.id
left join airport_heliport.taxiwayelement_pt airport_heliport_taxiwayelement_pt_nxcjrm on airport_heliport.taxiwaymarking_ts.markedelement_id = airport_heliport_taxiwayelement_pt_nxcjrm.id
left join master_join master_join_gnuase on airport_heliport.taxiwaymarking_ts.id = master_join_gnuase.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_rgeerm on master_join_gnuase.target_id = airport_heliport_markingelement_view_rgeerm.id
left join master_join master_join_lafpdo on airport_heliport.taxiwaymarking_ts.id = master_join_lafpdo.source_id
left join notes.note_view notes_note_view_drtauw on master_join_lafpdo.target_id = notes_note_view_drtauw.id
where airport_heliport.taxiwaymarking.feature_status = 'APPROVED'
  and airport_heliport.taxiwaymarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwaymarking.id,
    airport_heliport.taxiwaymarking_ts.id,
    airport_heliport.taxiwaymarking_tsp.id,
    airport_heliport.taxiwaymarking.identifier,
    airport_heliport.taxiwaymarking_ts.interpretation,
    airport_heliport.taxiwaymarking_ts.sequence_number,
    airport_heliport.taxiwaymarking_ts.correction_number,
    airport_heliport.taxiwaymarking_ts.valid_time_begin,
    airport_heliport.taxiwaymarking_ts.valid_time_end,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_begin,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_end,
    airport_heliport.taxiwaymarking_ts.markingicaostandard_value,
    airport_heliport.taxiwaymarking_ts.markingicaostandard_nilreason,
    airport_heliport.taxiwaymarking_ts.condition_value,
    airport_heliport.taxiwaymarking_ts.condition_nilreason,
    airport_heliport.taxiwaymarking_ts.markinglocation_value,
    airport_heliport.taxiwaymarking_ts.markinglocation_nilreason,
    airport_heliport_taxiway_pt_ghdawz.title,
    airport_heliport_taxiway_pt_ghdawz.nilreason[1],
    airport_heliport_taxiway_pt_ghdawz.href,
    airport_heliport_taxiwayelement_pt_nxcjrm.title,
    airport_heliport_taxiwayelement_pt_nxcjrm.nilreason[1],
    airport_heliport_taxiwayelement_pt_nxcjrm.href
order by taxiwaymarking.identifier, taxiwaymarking_ts.sequence_number, taxiwaymarking_ts.correction_number DESC;
create index on airport_heliport.taxiwaymarking_view (id);
-- TaxiwayTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'airport_heliport.manoeuvringareaavailability_view', 'airport_heliport.taxiwaycontamination_view']
drop materialized view if exists airport_heliport.taxiway_view cascade;
create materialized view airport_heliport.taxiway_view as
select distinct on (taxiway.identifier,taxiway_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiway.id,
    airport_heliport.taxiway_ts.id as ts_id,
    airport_heliport.taxiway_tsp.id as tsp_id,
    airport_heliport.taxiway.identifier,
    airport_heliport.taxiway_ts.interpretation,
    airport_heliport.taxiway_ts.sequence_number,
    airport_heliport.taxiway_ts.correction_number,
    airport_heliport.taxiway_ts.valid_time_begin,
    airport_heliport.taxiway_ts.valid_time_end,
    airport_heliport.taxiway_ts.feature_lifetime_begin,
    airport_heliport.taxiway_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiway_ts.designator_value as varchar), '(' || airport_heliport.taxiway_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.taxiway_ts.type_value as varchar), '(' || airport_heliport.taxiway_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.taxiway_ts.abandoned_value as varchar), '(' || airport_heliport.taxiway_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.taxiway_ts.width_value as varchar) || ' ' || airport_heliport.taxiway_ts.width_uom, '(' || airport_heliport.taxiway_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.taxiway_ts.widthshoulder_value as varchar) || ' ' || airport_heliport.taxiway_ts.widthshoulder_uom, '(' || airport_heliport.taxiway_ts.widthshoulder_nilreason || ')') as widthshoulder,
    coalesce(cast(airport_heliport.taxiway_ts.length_value as varchar) || ' ' || airport_heliport.taxiway_ts.length_uom, '(' || airport_heliport.taxiway_ts.length_nilreason || ')') as length,
    airport_heliport_surfacecharacteristics_view_ocakbo.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_ejhqub.title as varchar), '(' || airport_heliport_airportheliport_pt_ejhqub.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ejhqub.href AS associatedairportheliport_href,
    jsonb_agg(airport_heliport_taxiwaycontamination_view_hmbwro.id) AS contaminant,
    jsonb_agg(notes_note_view_jnkaml.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_pafjsw.id) AS availability
from airport_heliport.taxiway 
inner join master_join mj2 on airport_heliport.taxiway.id = mj2.source_id
inner join airport_heliport.taxiway_tsp on mj2.target_id = airport_heliport.taxiway_tsp.id
inner join airport_heliport.taxiway_ts on airport_heliport.taxiway_tsp.taxiwaytimeslice_id = airport_heliport.taxiway_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_ocakbo on airport_heliport.taxiway_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_ocakbo.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ejhqub on airport_heliport.taxiway_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ejhqub.id
left join master_join master_join_swoogx on airport_heliport.taxiway_ts.id = master_join_swoogx.source_id
left join airport_heliport.taxiwaycontamination_view airport_heliport_taxiwaycontamination_view_hmbwro on master_join_swoogx.target_id = airport_heliport_taxiwaycontamination_view_hmbwro.id
left join master_join master_join_ydorxf on airport_heliport.taxiway_ts.id = master_join_ydorxf.source_id
left join notes.note_view notes_note_view_jnkaml on master_join_ydorxf.target_id = notes_note_view_jnkaml.id
left join master_join master_join_hsblyq on airport_heliport.taxiway_ts.id = master_join_hsblyq.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_pafjsw on master_join_hsblyq.target_id = airport_heliport_manoeuvringareaavailability_view_pafjsw.id
where airport_heliport.taxiway.feature_status = 'APPROVED'
  and airport_heliport.taxiway_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiway.id,
    airport_heliport.taxiway_ts.id,
    airport_heliport.taxiway_tsp.id,
    airport_heliport.taxiway.identifier,
    airport_heliport.taxiway_ts.interpretation,
    airport_heliport.taxiway_ts.sequence_number,
    airport_heliport.taxiway_ts.correction_number,
    airport_heliport.taxiway_ts.valid_time_begin,
    airport_heliport.taxiway_ts.valid_time_end,
    airport_heliport.taxiway_ts.feature_lifetime_begin,
    airport_heliport.taxiway_ts.feature_lifetime_end,
    airport_heliport.taxiway_ts.designator_value,
    airport_heliport.taxiway_ts.designator_nilreason,
    airport_heliport.taxiway_ts.type_value,
    airport_heliport.taxiway_ts.type_nilreason,
    airport_heliport.taxiway_ts.abandoned_value,
    airport_heliport.taxiway_ts.abandoned_nilreason,
    airport_heliport.taxiway_ts.width_value,
    airport_heliport.taxiway_ts.width_uom,
    airport_heliport.taxiway_ts.width_nilreason,
    airport_heliport.taxiway_ts.widthshoulder_value,
    airport_heliport.taxiway_ts.widthshoulder_uom,
    airport_heliport.taxiway_ts.widthshoulder_nilreason,
    airport_heliport.taxiway_ts.length_value,
    airport_heliport.taxiway_ts.length_uom,
    airport_heliport.taxiway_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_view_ocakbo.id,
    airport_heliport_airportheliport_pt_ejhqub.title,
    airport_heliport_airportheliport_pt_ejhqub.nilreason[1],
    airport_heliport_airportheliport_pt_ejhqub.href
order by taxiway.identifier, taxiway_ts.sequence_number, taxiway_ts.correction_number DESC;
create index on airport_heliport.taxiway_view (id);
-- TerminalArrivalAreaTimeSliceType
-- ['procedure.terminalarrivalareasector_view', 'geometry.point_view', 'geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.terminalarrivalarea_view cascade;
create materialized view procedure.terminalarrivalarea_view as
select distinct on (terminalarrivalarea.identifier,terminalarrivalarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.terminalarrivalarea.id,
    procedure.terminalarrivalarea_ts.id as ts_id,
    procedure.terminalarrivalarea_tsp.id as tsp_id,
    procedure.terminalarrivalarea.identifier,
    procedure.terminalarrivalarea_ts.interpretation,
    procedure.terminalarrivalarea_ts.sequence_number,
    procedure.terminalarrivalarea_ts.correction_number,
    procedure.terminalarrivalarea_ts.valid_time_begin,
    procedure.terminalarrivalarea_ts.valid_time_end,
    procedure.terminalarrivalarea_ts.feature_lifetime_begin,
    procedure.terminalarrivalarea_ts.feature_lifetime_end,
    coalesce(cast(procedure.terminalarrivalarea_ts.arrivalareatype_value as varchar), '(' || procedure.terminalarrivalarea_ts.arrivalareatype_nilreason || ')') as arrivalareatype,
    coalesce(cast(procedure.terminalarrivalarea_ts.outerbufferwidth_value as varchar) || ' ' || procedure.terminalarrivalarea_ts.outerbufferwidth_uom, '(' || procedure.terminalarrivalarea_ts.outerbufferwidth_nilreason || ')') as outerbufferwidth,
    coalesce(cast(procedure.terminalarrivalarea_ts.lateralbufferwidth_value as varchar) || ' ' || procedure.terminalarrivalarea_ts.lateralbufferwidth_uom, '(' || procedure.terminalarrivalarea_ts.lateralbufferwidth_nilreason || ')') as lateralbufferwidth,
    coalesce(cast(navaids_points_designatedpoint_pt_ftvnzz.title as varchar), '(' || navaids_points_designatedpoint_pt_ftvnzz.nilreason[1] || ')') AS iffixdesignatedpoint,
    navaids_points_designatedpoint_pt_ftvnzz.href AS iffixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_rfaxdf.title as varchar), '(' || navaids_points_designatedpoint_pt_rfaxdf.nilreason[1] || ')') AS iaffixdesignatedpoint,
    navaids_points_designatedpoint_pt_rfaxdf.href AS iaffixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_djgqir.title as varchar), '(' || navaids_points_navaid_pt_djgqir.nilreason[1] || ')') AS ifnavaidsystem,
    navaids_points_navaid_pt_djgqir.href AS ifnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_eovthk.title as varchar), '(' || navaids_points_navaid_pt_eovthk.nilreason[1] || ')') AS iafnavaidsystem,
    navaids_points_navaid_pt_eovthk.href AS iafnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ailuzj.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ailuzj.nilreason[1] || ')') AS ifaimingpoint,
    airport_heliport_touchdownliftoff_pt_ailuzj.href AS ifaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_tgyorq.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_tgyorq.nilreason[1] || ')') AS iafaimingpoint,
    airport_heliport_touchdownliftoff_pt_tgyorq.href AS iafaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_pkobvp.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_pkobvp.nilreason[1] || ')') AS ifrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_pkobvp.href AS ifrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_khltrd.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_khltrd.nilreason[1] || ')') AS iafrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_khltrd.href AS iafrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_jhjqlf.title as varchar), '(' || airport_heliport_airportheliport_pt_jhjqlf.nilreason[1] || ')') AS ifairportreferencepoint,
    airport_heliport_airportheliport_pt_jhjqlf.href AS ifairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_rwpnlq.title as varchar), '(' || airport_heliport_airportheliport_pt_rwpnlq.nilreason[1] || ')') AS iafairportreferencepoint,
    airport_heliport_airportheliport_pt_rwpnlq.href AS iafairportreferencepoint_href,
    geometry_point_view_vcuqep.geom AS ifposition_geom,
    ST_X(geometry_point_view_vcuqep.geom) AS ifposition_longitude,
    ST_Y(geometry_point_view_vcuqep.geom) AS ifposition_latitude,
    geometry_point_view_vcuqep.horizontalAccuracy AS ifposition_horizontalaccuracy,
    geometry_point_view_xihwop.geom AS iafposition_geom,
    ST_X(geometry_point_view_xihwop.geom) AS iafposition_longitude,
    ST_Y(geometry_point_view_xihwop.geom) AS iafposition_latitude,
    geometry_point_view_xihwop.horizontalAccuracy AS iafposition_horizontalaccuracy,
    geometry_surface_view_tpexlm.geom AS buffer_geom,
    geometry_surface_view_tpexlm.horizontalAccuracy as buffer_horizontalaccuracy,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_cpmicy.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_cpmicy.nilreason[1] || ')') AS approachrnav,
    procedure_instrumentapproachprocedure_pt_cpmicy.href AS approachrnav_href,
    jsonb_agg(procedure_terminalarrivalareasector_view_ekpplj.id) AS sector,
    jsonb_agg(notes_note_view_tlfwli.*) AS annotation
from procedure.terminalarrivalarea 
inner join master_join mj2 on procedure.terminalarrivalarea.id = mj2.source_id
inner join procedure.terminalarrivalarea_tsp on mj2.target_id = procedure.terminalarrivalarea_tsp.id
inner join procedure.terminalarrivalarea_ts on procedure.terminalarrivalarea_tsp.terminalarrivalareatimeslice_id = procedure.terminalarrivalarea_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ftvnzz on procedure.terminalarrivalarea_ts.if_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ftvnzz.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_djgqir on procedure.terminalarrivalarea_ts.if_navaidsystem_id = navaids_points_navaid_pt_djgqir.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ailuzj on procedure.terminalarrivalarea_ts.if_aimingpoint_id = airport_heliport_touchdownliftoff_pt_ailuzj.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_pkobvp on procedure.terminalarrivalarea_ts.if_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_pkobvp.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jhjqlf on procedure.terminalarrivalarea_ts.if_airportreferencepoint_id = airport_heliport_airportheliport_pt_jhjqlf.id
left join geometry.point_view geometry_point_view_vcuqep on procedure.terminalarrivalarea_ts.if_position_id = geometry_point_view_vcuqep.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_rfaxdf on procedure.terminalarrivalarea_ts.iaf_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_rfaxdf.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_eovthk on procedure.terminalarrivalarea_ts.iaf_navaidsystem_id = navaids_points_navaid_pt_eovthk.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_tgyorq on procedure.terminalarrivalarea_ts.iaf_aimingpoint_id = airport_heliport_touchdownliftoff_pt_tgyorq.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_khltrd on procedure.terminalarrivalarea_ts.iaf_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_khltrd.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_rwpnlq on procedure.terminalarrivalarea_ts.iaf_airportreferencepoint_id = airport_heliport_airportheliport_pt_rwpnlq.id
left join geometry.point_view geometry_point_view_xihwop on procedure.terminalarrivalarea_ts.iaf_position_id = geometry_point_view_xihwop.id
left join geometry.surface_view geometry_surface_view_tpexlm on procedure.terminalarrivalarea_ts.buffer_id = geometry_surface_view_tpexlm.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_cpmicy on procedure.terminalarrivalarea_ts.approachrnav_id = procedure_instrumentapproachprocedure_pt_cpmicy.id
left join master_join master_join_eaxkta on procedure.terminalarrivalarea_ts.id = master_join_eaxkta.source_id
left join procedure.terminalarrivalareasector_view procedure_terminalarrivalareasector_view_ekpplj on master_join_eaxkta.target_id = procedure_terminalarrivalareasector_view_ekpplj.id
left join master_join master_join_yfvkng on procedure.terminalarrivalarea_ts.id = master_join_yfvkng.source_id
left join notes.note_view notes_note_view_tlfwli on master_join_yfvkng.target_id = notes_note_view_tlfwli.id
where procedure.terminalarrivalarea.feature_status = 'APPROVED'
  and procedure.terminalarrivalarea_ts.feature_status = 'APPROVED'
group by
    procedure.terminalarrivalarea.id,
    procedure.terminalarrivalarea_ts.id,
    procedure.terminalarrivalarea_tsp.id,
    procedure.terminalarrivalarea.identifier,
    procedure.terminalarrivalarea_ts.interpretation,
    procedure.terminalarrivalarea_ts.sequence_number,
    procedure.terminalarrivalarea_ts.correction_number,
    procedure.terminalarrivalarea_ts.valid_time_begin,
    procedure.terminalarrivalarea_ts.valid_time_end,
    procedure.terminalarrivalarea_ts.feature_lifetime_begin,
    procedure.terminalarrivalarea_ts.feature_lifetime_end,
    procedure.terminalarrivalarea_ts.arrivalareatype_value,
    procedure.terminalarrivalarea_ts.arrivalareatype_nilreason,
    procedure.terminalarrivalarea_ts.outerbufferwidth_value,
    procedure.terminalarrivalarea_ts.outerbufferwidth_uom,
    procedure.terminalarrivalarea_ts.outerbufferwidth_nilreason,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_value,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_uom,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_nilreason,
    navaids_points_designatedpoint_pt_ftvnzz.title,
    navaids_points_designatedpoint_pt_ftvnzz.nilreason[1],
    navaids_points_designatedpoint_pt_ftvnzz.href,
    navaids_points_navaid_pt_djgqir.title,
    navaids_points_navaid_pt_djgqir.nilreason[1],
    navaids_points_navaid_pt_djgqir.href,
    airport_heliport_touchdownliftoff_pt_ailuzj.title,
    airport_heliport_touchdownliftoff_pt_ailuzj.nilreason[1],
    airport_heliport_touchdownliftoff_pt_ailuzj.href,
    airport_heliport_runwaycentrelinepoint_pt_pkobvp.title,
    airport_heliport_runwaycentrelinepoint_pt_pkobvp.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_pkobvp.href,
    airport_heliport_airportheliport_pt_jhjqlf.title,
    airport_heliport_airportheliport_pt_jhjqlf.nilreason[1],
    airport_heliport_airportheliport_pt_jhjqlf.href,
    geometry_point_view_vcuqep.geom,
    geometry_point_view_vcuqep.horizontalAccuracy,
    navaids_points_designatedpoint_pt_rfaxdf.title,
    navaids_points_designatedpoint_pt_rfaxdf.nilreason[1],
    navaids_points_designatedpoint_pt_rfaxdf.href,
    navaids_points_navaid_pt_eovthk.title,
    navaids_points_navaid_pt_eovthk.nilreason[1],
    navaids_points_navaid_pt_eovthk.href,
    airport_heliport_touchdownliftoff_pt_tgyorq.title,
    airport_heliport_touchdownliftoff_pt_tgyorq.nilreason[1],
    airport_heliport_touchdownliftoff_pt_tgyorq.href,
    airport_heliport_runwaycentrelinepoint_pt_khltrd.title,
    airport_heliport_runwaycentrelinepoint_pt_khltrd.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_khltrd.href,
    airport_heliport_airportheliport_pt_rwpnlq.title,
    airport_heliport_airportheliport_pt_rwpnlq.nilreason[1],
    airport_heliport_airportheliport_pt_rwpnlq.href,
    geometry_point_view_xihwop.geom,
    geometry_point_view_xihwop.horizontalAccuracy,
    geometry_surface_view_tpexlm.geom,
    geometry_surface_view_tpexlm.horizontalAccuracy,
    procedure_instrumentapproachprocedure_pt_cpmicy.title,
    procedure_instrumentapproachprocedure_pt_cpmicy.nilreason[1],
    procedure_instrumentapproachprocedure_pt_cpmicy.href
order by terminalarrivalarea.identifier, terminalarrivalarea_ts.sequence_number, terminalarrivalarea_ts.correction_number DESC;
create index on procedure.terminalarrivalarea_view (id);
-- TouchDownLiftOffLightSystemTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.touchdownliftofflightsystem_view cascade;
create materialized view airport_heliport.touchdownliftofflightsystem_view as
select distinct on (touchdownliftofflightsystem.identifier,touchdownliftofflightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftofflightsystem.id,
    airport_heliport.touchdownliftofflightsystem_ts.id as ts_id,
    airport_heliport.touchdownliftofflightsystem_tsp.id as tsp_id,
    airport_heliport.touchdownliftofflightsystem.identifier,
    airport_heliport.touchdownliftofflightsystem_ts.interpretation,
    airport_heliport.touchdownliftofflightsystem_ts.sequence_number,
    airport_heliport.touchdownliftofflightsystem_ts.correction_number,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_begin,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_end,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.colour_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.position_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_kcdfnh.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_kcdfnh.nilreason[1] || ')') AS lightedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_kcdfnh.href AS lightedtouchdownliftoff_href,
    jsonb_agg(shared_lightelement_view_lywebv.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_orfpjo.id) AS availability,
    jsonb_agg(notes_note_view_pduebe.*) AS annotation
from airport_heliport.touchdownliftofflightsystem 
inner join master_join mj2 on airport_heliport.touchdownliftofflightsystem.id = mj2.source_id
inner join airport_heliport.touchdownliftofflightsystem_tsp on mj2.target_id = airport_heliport.touchdownliftofflightsystem_tsp.id
inner join airport_heliport.touchdownliftofflightsystem_ts on airport_heliport.touchdownliftofflightsystem_tsp.touchdownliftofflightsystemtimeslice_id = airport_heliport.touchdownliftofflightsystem_ts.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_kcdfnh on airport_heliport.touchdownliftofflightsystem_ts.lightedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_kcdfnh.id
left join master_join master_join_bheukw on airport_heliport.touchdownliftofflightsystem_ts.id = master_join_bheukw.source_id
left join shared.lightelement_view shared_lightelement_view_lywebv on master_join_bheukw.target_id = shared_lightelement_view_lywebv.id
left join master_join master_join_kskmri on airport_heliport.touchdownliftofflightsystem_ts.id = master_join_kskmri.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_orfpjo on master_join_kskmri.target_id = airport_heliport_groundlightingavailability_view_orfpjo.id
left join master_join master_join_tpamrx on airport_heliport.touchdownliftofflightsystem_ts.id = master_join_tpamrx.source_id
left join notes.note_view notes_note_view_pduebe on master_join_tpamrx.target_id = notes_note_view_pduebe.id
where airport_heliport.touchdownliftofflightsystem.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftofflightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftofflightsystem.id,
    airport_heliport.touchdownliftofflightsystem_ts.id,
    airport_heliport.touchdownliftofflightsystem_tsp.id,
    airport_heliport.touchdownliftofflightsystem.identifier,
    airport_heliport.touchdownliftofflightsystem_ts.interpretation,
    airport_heliport.touchdownliftofflightsystem_ts.sequence_number,
    airport_heliport.touchdownliftofflightsystem_ts.correction_number,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_begin,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_end,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_end,
    airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_value,
    airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_value,
    airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.colour_value,
    airport_heliport.touchdownliftofflightsystem_ts.colour_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.position_value,
    airport_heliport.touchdownliftofflightsystem_ts.position_nilreason,
    airport_heliport_touchdownliftoff_pt_kcdfnh.title,
    airport_heliport_touchdownliftoff_pt_kcdfnh.nilreason[1],
    airport_heliport_touchdownliftoff_pt_kcdfnh.href
order by touchdownliftofflightsystem.identifier, touchdownliftofflightsystem_ts.sequence_number, touchdownliftofflightsystem_ts.correction_number DESC;
create index on airport_heliport.touchdownliftofflightsystem_view (id);
-- TouchDownLiftOffMarkingTimeSliceType
-- ['notes.note_view', 'airport_heliport.markingelement_view']
drop materialized view if exists airport_heliport.touchdownliftoffmarking_view cascade;
create materialized view airport_heliport.touchdownliftoffmarking_view as
select distinct on (touchdownliftoffmarking.identifier,touchdownliftoffmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoffmarking.id,
    airport_heliport.touchdownliftoffmarking_ts.id as ts_id,
    airport_heliport.touchdownliftoffmarking_tsp.id as tsp_id,
    airport_heliport.touchdownliftoffmarking.identifier,
    airport_heliport.touchdownliftoffmarking_ts.interpretation,
    airport_heliport.touchdownliftoffmarking_ts.sequence_number,
    airport_heliport.touchdownliftoffmarking_ts.correction_number,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_begin,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_end,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.condition_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.markinglocation_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_vudnpl.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_vudnpl.nilreason[1] || ')') AS markedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_vudnpl.href AS markedtouchdownliftoff_href,
    jsonb_agg(airport_heliport_markingelement_view_qxwaxy.id) AS element,
    jsonb_agg(notes_note_view_hmwrcb.*) AS annotation
from airport_heliport.touchdownliftoffmarking 
inner join master_join mj2 on airport_heliport.touchdownliftoffmarking.id = mj2.source_id
inner join airport_heliport.touchdownliftoffmarking_tsp on mj2.target_id = airport_heliport.touchdownliftoffmarking_tsp.id
inner join airport_heliport.touchdownliftoffmarking_ts on airport_heliport.touchdownliftoffmarking_tsp.touchdownliftoffmarkingtimeslice_id = airport_heliport.touchdownliftoffmarking_ts.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_vudnpl on airport_heliport.touchdownliftoffmarking_ts.markedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_vudnpl.id
left join master_join master_join_qcjkwk on airport_heliport.touchdownliftoffmarking_ts.id = master_join_qcjkwk.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_qxwaxy on master_join_qcjkwk.target_id = airport_heliport_markingelement_view_qxwaxy.id
left join master_join master_join_mufqor on airport_heliport.touchdownliftoffmarking_ts.id = master_join_mufqor.source_id
left join notes.note_view notes_note_view_hmwrcb on master_join_mufqor.target_id = notes_note_view_hmwrcb.id
where airport_heliport.touchdownliftoffmarking.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoffmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoffmarking.id,
    airport_heliport.touchdownliftoffmarking_ts.id,
    airport_heliport.touchdownliftoffmarking_tsp.id,
    airport_heliport.touchdownliftoffmarking.identifier,
    airport_heliport.touchdownliftoffmarking_ts.interpretation,
    airport_heliport.touchdownliftoffmarking_ts.sequence_number,
    airport_heliport.touchdownliftoffmarking_ts.correction_number,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_begin,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_end,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_value,
    airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_nilreason,
    airport_heliport.touchdownliftoffmarking_ts.condition_value,
    airport_heliport.touchdownliftoffmarking_ts.condition_nilreason,
    airport_heliport.touchdownliftoffmarking_ts.markinglocation_value,
    airport_heliport.touchdownliftoffmarking_ts.markinglocation_nilreason,
    airport_heliport_touchdownliftoff_pt_vudnpl.title,
    airport_heliport_touchdownliftoff_pt_vudnpl.nilreason[1],
    airport_heliport_touchdownliftoff_pt_vudnpl.href
order by touchdownliftoffmarking.identifier, touchdownliftoffmarking_ts.sequence_number, touchdownliftoffmarking_ts.correction_number DESC;
create index on airport_heliport.touchdownliftoffmarking_view (id);
-- TouchDownLiftOffSafeAreaTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'notes.note_view', 'geometry.elevatedsurface_view']
drop materialized view if exists airport_heliport.touchdownliftoffsafearea_view cascade;
create materialized view airport_heliport.touchdownliftoffsafearea_view as
select distinct on (touchdownliftoffsafearea.identifier,touchdownliftoffsafearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoffsafearea.id,
    airport_heliport.touchdownliftoffsafearea_ts.id as ts_id,
    airport_heliport.touchdownliftoffsafearea_tsp.id as tsp_id,
    airport_heliport.touchdownliftoffsafearea.identifier,
    airport_heliport.touchdownliftoffsafearea_ts.interpretation,
    airport_heliport.touchdownliftoffsafearea_ts.sequence_number,
    airport_heliport.touchdownliftoffsafearea_ts.correction_number,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_begin,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_end,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.lighting_value as varchar), '(' || airport_heliport.touchdownliftoffsafearea_ts.lighting_nilreason || ')') as lighting,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_value as varchar), '(' || airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_nilreason || ')') as obstaclefree,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.width_value as varchar) || ' ' || airport_heliport.touchdownliftoffsafearea_ts.width_uom, '(' || airport_heliport.touchdownliftoffsafearea_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.length_value as varchar) || ' ' || airport_heliport.touchdownliftoffsafearea_ts.length_uom, '(' || airport_heliport.touchdownliftoffsafearea_ts.length_nilreason || ')') as length,
    airport_heliport_surfacecharacteristics_view_wwqehl.id AS surfaceproperties,
    geometry_elevatedsurface_view_zbfjvc.geom AS extent_geom,
    geometry_elevatedsurface_view_zbfjvc.elevation AS extent_elevation,
    geometry_elevatedsurface_view_zbfjvc.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_zbfjvc.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_zbfjvc.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_zbfjvc.horizontalAccuracy AS extent_horizontalaccuracy,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_nfixuq.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_nfixuq.nilreason[1] || ')') AS protectedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_nfixuq.href AS protectedtouchdownliftoff_href,
    jsonb_agg(notes_note_view_clatrk.*) AS annotation
from airport_heliport.touchdownliftoffsafearea 
inner join master_join mj2 on airport_heliport.touchdownliftoffsafearea.id = mj2.source_id
inner join airport_heliport.touchdownliftoffsafearea_tsp on mj2.target_id = airport_heliport.touchdownliftoffsafearea_tsp.id
inner join airport_heliport.touchdownliftoffsafearea_ts on airport_heliport.touchdownliftoffsafearea_tsp.touchdownliftoffsafeareatimeslice_id = airport_heliport.touchdownliftoffsafearea_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_wwqehl on airport_heliport.touchdownliftoffsafearea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_wwqehl.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_zbfjvc on airport_heliport.touchdownliftoffsafearea_ts.extent_id = geometry_elevatedsurface_view_zbfjvc.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_nfixuq on airport_heliport.touchdownliftoffsafearea_ts.protectedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_nfixuq.id
left join master_join master_join_agcucj on airport_heliport.touchdownliftoffsafearea_ts.id = master_join_agcucj.source_id
left join notes.note_view notes_note_view_clatrk on master_join_agcucj.target_id = notes_note_view_clatrk.id
where airport_heliport.touchdownliftoffsafearea.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoffsafearea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoffsafearea.id,
    airport_heliport.touchdownliftoffsafearea_ts.id,
    airport_heliport.touchdownliftoffsafearea_tsp.id,
    airport_heliport.touchdownliftoffsafearea.identifier,
    airport_heliport.touchdownliftoffsafearea_ts.interpretation,
    airport_heliport.touchdownliftoffsafearea_ts.sequence_number,
    airport_heliport.touchdownliftoffsafearea_ts.correction_number,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_begin,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_end,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoffsafearea_ts.lighting_value,
    airport_heliport.touchdownliftoffsafearea_ts.lighting_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_value,
    airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.width_value,
    airport_heliport.touchdownliftoffsafearea_ts.width_uom,
    airport_heliport.touchdownliftoffsafearea_ts.width_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.length_value,
    airport_heliport.touchdownliftoffsafearea_ts.length_uom,
    airport_heliport.touchdownliftoffsafearea_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_view_wwqehl.id,
    geometry_elevatedsurface_view_zbfjvc.geom,
    geometry_elevatedsurface_view_zbfjvc.elevation,
    geometry_elevatedsurface_view_zbfjvc.geoidUndulation,
    geometry_elevatedsurface_view_zbfjvc.verticalDatum,
    geometry_elevatedsurface_view_zbfjvc.verticalAccuracy,
    geometry_elevatedsurface_view_zbfjvc.horizontalAccuracy,
    airport_heliport_touchdownliftoff_pt_nfixuq.title,
    airport_heliport_touchdownliftoff_pt_nfixuq.nilreason[1],
    airport_heliport_touchdownliftoff_pt_nfixuq.href
order by touchdownliftoffsafearea.identifier, touchdownliftoffsafearea_ts.sequence_number, touchdownliftoffsafearea_ts.correction_number DESC;
create index on airport_heliport.touchdownliftoffsafearea_view (id);
-- TouchDownLiftOffTimeSliceType
-- ['geometry.elevatedpoint_view', 'airport_heliport.touchdownliftoffcontamination_view', 'notes.note_view', 'geometry.elevatedsurface_view', 'airport_heliport.manoeuvringareaavailability_view', 'airport_heliport.surfacecharacteristics_view']
drop materialized view if exists airport_heliport.touchdownliftoff_view cascade;
create materialized view airport_heliport.touchdownliftoff_view as
select distinct on (touchdownliftoff.identifier,touchdownliftoff_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoff.id,
    airport_heliport.touchdownliftoff_ts.id as ts_id,
    airport_heliport.touchdownliftoff_tsp.id as tsp_id,
    airport_heliport.touchdownliftoff.identifier,
    airport_heliport.touchdownliftoff_ts.interpretation,
    airport_heliport.touchdownliftoff_ts.sequence_number,
    airport_heliport.touchdownliftoff_ts.correction_number,
    airport_heliport.touchdownliftoff_ts.valid_time_begin,
    airport_heliport.touchdownliftoff_ts.valid_time_end,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.designator_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.slope_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.slope_nilreason || ')') as slope,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.helicopterclass_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.helicopterclass_nilreason || ')') as helicopterclass,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.abandoned_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.length_value as varchar) || ' ' || airport_heliport.touchdownliftoff_ts.length_uom, '(' || airport_heliport.touchdownliftoff_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.width_value as varchar) || ' ' || airport_heliport.touchdownliftoff_ts.width_uom, '(' || airport_heliport.touchdownliftoff_ts.width_nilreason || ')') as width,
    geometry_elevatedpoint_view_uxlumi.geom AS aimingpoint_geom,
    ST_X(geometry_elevatedpoint_view_uxlumi.geom) AS aimingpoint_longitude,
    ST_Y(geometry_elevatedpoint_view_uxlumi.geom) AS aimingpoint_latitude,
    geometry_elevatedpoint_view_uxlumi.elevation AS aimingpoint_elevation,
    geometry_elevatedpoint_view_uxlumi.geoidUndulation AS aimingpoint_geoidundulation,
    geometry_elevatedpoint_view_uxlumi.verticalDatum AS aimingpoint_verticaldatum,
    geometry_elevatedpoint_view_uxlumi.verticalAccuracy AS aimingpoint_verticalaccuracy,
    geometry_elevatedpoint_view_uxlumi.horizontalAccuracy AS aimingpoint_horizontalaccuracy,
    geometry_elevatedsurface_view_kgzfid.geom AS extent_geom,
    geometry_elevatedsurface_view_kgzfid.elevation AS extent_elevation,
    geometry_elevatedsurface_view_kgzfid.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_kgzfid.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_kgzfid.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_kgzfid.horizontalAccuracy AS extent_horizontalaccuracy,
    airport_heliport_surfacecharacteristics_view_mibndy.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_fqxaks.title as varchar), '(' || airport_heliport_airportheliport_pt_fqxaks.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_fqxaks.href AS associatedairportheliport_href,
    coalesce(cast(airport_heliport_runway_pt_azopin.title as varchar), '(' || airport_heliport_runway_pt_azopin.nilreason[1] || ')') AS approachtakeoffarea,
    airport_heliport_runway_pt_azopin.href AS approachtakeoffarea_href,
    jsonb_agg(airport_heliport_touchdownliftoffcontamination_view_kfmrfz.id) AS contaminant,
    jsonb_agg(notes_note_view_hgytrx.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_xfyuky.id) AS availability
from airport_heliport.touchdownliftoff 
inner join master_join mj2 on airport_heliport.touchdownliftoff.id = mj2.source_id
inner join airport_heliport.touchdownliftoff_tsp on mj2.target_id = airport_heliport.touchdownliftoff_tsp.id
inner join airport_heliport.touchdownliftoff_ts on airport_heliport.touchdownliftoff_tsp.touchdownliftofftimeslice_id = airport_heliport.touchdownliftoff_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_uxlumi on airport_heliport.touchdownliftoff_ts.aimingpoint_id = geometry_elevatedpoint_view_uxlumi.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_kgzfid on airport_heliport.touchdownliftoff_ts.extent_id = geometry_elevatedsurface_view_kgzfid.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_mibndy on airport_heliport.touchdownliftoff_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_mibndy.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_fqxaks on airport_heliport.touchdownliftoff_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_fqxaks.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_azopin on airport_heliport.touchdownliftoff_ts.approachtakeoffarea_id = airport_heliport_runway_pt_azopin.id
left join master_join master_join_jadqtu on airport_heliport.touchdownliftoff_ts.id = master_join_jadqtu.source_id
left join airport_heliport.touchdownliftoffcontamination_view airport_heliport_touchdownliftoffcontamination_view_kfmrfz on master_join_jadqtu.target_id = airport_heliport_touchdownliftoffcontamination_view_kfmrfz.id
left join master_join master_join_aptdaj on airport_heliport.touchdownliftoff_ts.id = master_join_aptdaj.source_id
left join notes.note_view notes_note_view_hgytrx on master_join_aptdaj.target_id = notes_note_view_hgytrx.id
left join master_join master_join_gkeztu on airport_heliport.touchdownliftoff_ts.id = master_join_gkeztu.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_xfyuky on master_join_gkeztu.target_id = airport_heliport_manoeuvringareaavailability_view_xfyuky.id
where airport_heliport.touchdownliftoff.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoff_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoff.id,
    airport_heliport.touchdownliftoff_ts.id,
    airport_heliport.touchdownliftoff_tsp.id,
    airport_heliport.touchdownliftoff.identifier,
    airport_heliport.touchdownliftoff_ts.interpretation,
    airport_heliport.touchdownliftoff_ts.sequence_number,
    airport_heliport.touchdownliftoff_ts.correction_number,
    airport_heliport.touchdownliftoff_ts.valid_time_begin,
    airport_heliport.touchdownliftoff_ts.valid_time_end,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoff_ts.designator_value,
    airport_heliport.touchdownliftoff_ts.designator_nilreason,
    airport_heliport.touchdownliftoff_ts.slope_value,
    airport_heliport.touchdownliftoff_ts.slope_nilreason,
    airport_heliport.touchdownliftoff_ts.helicopterclass_value,
    airport_heliport.touchdownliftoff_ts.helicopterclass_nilreason,
    airport_heliport.touchdownliftoff_ts.abandoned_value,
    airport_heliport.touchdownliftoff_ts.abandoned_nilreason,
    airport_heliport.touchdownliftoff_ts.length_value,
    airport_heliport.touchdownliftoff_ts.length_uom,
    airport_heliport.touchdownliftoff_ts.length_nilreason,
    airport_heliport.touchdownliftoff_ts.width_value,
    airport_heliport.touchdownliftoff_ts.width_uom,
    airport_heliport.touchdownliftoff_ts.width_nilreason,
    geometry_elevatedpoint_view_uxlumi.geom,
    geometry_elevatedpoint_view_uxlumi.elevation,
    geometry_elevatedpoint_view_uxlumi.geoidUndulation,
    geometry_elevatedpoint_view_uxlumi.verticalDatum,
    geometry_elevatedpoint_view_uxlumi.verticalAccuracy,
    geometry_elevatedpoint_view_uxlumi.horizontalAccuracy,
    geometry_elevatedsurface_view_kgzfid.geom,
    geometry_elevatedsurface_view_kgzfid.elevation,
    geometry_elevatedsurface_view_kgzfid.geoidUndulation,
    geometry_elevatedsurface_view_kgzfid.verticalDatum,
    geometry_elevatedsurface_view_kgzfid.verticalAccuracy,
    geometry_elevatedsurface_view_kgzfid.horizontalAccuracy,
    airport_heliport_surfacecharacteristics_view_mibndy.id,
    airport_heliport_airportheliport_pt_fqxaks.title,
    airport_heliport_airportheliport_pt_fqxaks.nilreason[1],
    airport_heliport_airportheliport_pt_fqxaks.href,
    airport_heliport_runway_pt_azopin.title,
    airport_heliport_runway_pt_azopin.nilreason[1],
    airport_heliport_runway_pt_azopin.href
order by touchdownliftoff.identifier, touchdownliftoff_ts.sequence_number, touchdownliftoff_ts.correction_number DESC;
create index on airport_heliport.touchdownliftoff_view (id);
-- UnitTimeSliceType
-- ['organisation.unitavailability_view', 'geometry.elevatedpoint_view', 'organisation.unitdependency_view', 'notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists organisation.unit_view cascade;
create materialized view organisation.unit_view as
select distinct on (unit.identifier,unit_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    organisation.unit.id,
    organisation.unit_ts.id as ts_id,
    organisation.unit_tsp.id as tsp_id,
    organisation.unit.identifier,
    organisation.unit_ts.interpretation,
    organisation.unit_ts.sequence_number,
    organisation.unit_ts.correction_number,
    organisation.unit_ts.valid_time_begin,
    organisation.unit_ts.valid_time_end,
    organisation.unit_ts.feature_lifetime_begin,
    organisation.unit_ts.feature_lifetime_end,
    coalesce(cast(organisation.unit_ts.name_value as varchar), '(' || organisation.unit_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation.unit_ts.type_value as varchar), '(' || organisation.unit_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation.unit_ts.complianticao_value as varchar), '(' || organisation.unit_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(organisation.unit_ts.designator_value as varchar), '(' || organisation.unit_ts.designator_nilreason || ')') as designator,
    coalesce(cast(organisation.unit_ts.military_value as varchar), '(' || organisation.unit_ts.military_nilreason || ')') as military,
    geometry_elevatedpoint_view_grxsvs.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_grxsvs.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_grxsvs.geom) AS position_latitude,
    geometry_elevatedpoint_view_grxsvs.elevation AS position_elevation,
    geometry_elevatedpoint_view_grxsvs.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_grxsvs.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_grxsvs.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_grxsvs.horizontalAccuracy AS position_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_wsgveo.title as varchar), '(' || airport_heliport_airportheliport_pt_wsgveo.nilreason[1] || ')') AS airportlocation,
    airport_heliport_airportheliport_pt_wsgveo.href AS airportlocation_href,
    coalesce(cast(organisation_organisationauthority_pt_fqmnco.title as varchar), '(' || organisation_organisationauthority_pt_fqmnco.nilreason[1] || ')') AS ownerorganisation,
    organisation_organisationauthority_pt_fqmnco.href AS ownerorganisation_href,
    jsonb_agg(organisation_unitdependency_view_iglojo.id) AS relatedunit,
    jsonb_agg(organisation_unitavailability_view_klqrfn.id) AS availability,
    jsonb_agg(notes_note_view_jxkkhp.*) AS annotation
from organisation.unit 
inner join master_join mj2 on organisation.unit.id = mj2.source_id
inner join organisation.unit_tsp on mj2.target_id = organisation.unit_tsp.id
inner join organisation.unit_ts on organisation.unit_tsp.unittimeslice_id = organisation.unit_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_grxsvs on organisation.unit_ts.position_id = geometry_elevatedpoint_view_grxsvs.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_wsgveo on organisation.unit_ts.airportlocation_id = airport_heliport_airportheliport_pt_wsgveo.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_fqmnco on organisation.unit_ts.ownerorganisation_id = organisation_organisationauthority_pt_fqmnco.id
left join master_join master_join_fricsk on organisation.unit_ts.id = master_join_fricsk.source_id
left join shared.contactinformation_view shared_contactinformation_view_zmfaac on master_join_fricsk.target_id = shared_contactinformation_view_zmfaac.id
left join master_join master_join_xoszgt on organisation.unit_ts.id = master_join_xoszgt.source_id
left join organisation.unitdependency_view organisation_unitdependency_view_iglojo on master_join_xoszgt.target_id = organisation_unitdependency_view_iglojo.id
left join master_join master_join_vuiuiv on organisation.unit_ts.id = master_join_vuiuiv.source_id
left join organisation.unitavailability_view organisation_unitavailability_view_klqrfn on master_join_vuiuiv.target_id = organisation_unitavailability_view_klqrfn.id
left join master_join master_join_auvuej on organisation.unit_ts.id = master_join_auvuej.source_id
left join notes.note_view notes_note_view_jxkkhp on master_join_auvuej.target_id = notes_note_view_jxkkhp.id
where organisation.unit.feature_status = 'APPROVED'
  and organisation.unit_ts.feature_status = 'APPROVED'
group by
    organisation.unit.id,
    organisation.unit_ts.id,
    organisation.unit_tsp.id,
    organisation.unit.identifier,
    organisation.unit_ts.interpretation,
    organisation.unit_ts.sequence_number,
    organisation.unit_ts.correction_number,
    organisation.unit_ts.valid_time_begin,
    organisation.unit_ts.valid_time_end,
    organisation.unit_ts.feature_lifetime_begin,
    organisation.unit_ts.feature_lifetime_end,
    organisation.unit_ts.name_value,
    organisation.unit_ts.name_nilreason,
    organisation.unit_ts.type_value,
    organisation.unit_ts.type_nilreason,
    organisation.unit_ts.complianticao_value,
    organisation.unit_ts.complianticao_nilreason,
    organisation.unit_ts.designator_value,
    organisation.unit_ts.designator_nilreason,
    organisation.unit_ts.military_value,
    organisation.unit_ts.military_nilreason,
    geometry_elevatedpoint_view_grxsvs.geom,
    geometry_elevatedpoint_view_grxsvs.elevation,
    geometry_elevatedpoint_view_grxsvs.geoidUndulation,
    geometry_elevatedpoint_view_grxsvs.verticalDatum,
    geometry_elevatedpoint_view_grxsvs.verticalAccuracy,
    geometry_elevatedpoint_view_grxsvs.horizontalAccuracy,
    airport_heliport_airportheliport_pt_wsgveo.title,
    airport_heliport_airportheliport_pt_wsgveo.nilreason[1],
    airport_heliport_airportheliport_pt_wsgveo.href,
    organisation_organisationauthority_pt_fqmnco.title,
    organisation_organisationauthority_pt_fqmnco.nilreason[1],
    organisation_organisationauthority_pt_fqmnco.href
order by unit.identifier, unit_ts.sequence_number, unit_ts.correction_number DESC;
create index on organisation.unit_view (id);
-- UnplannedHoldingTimeSliceType
-- ['notes.note_view']
drop materialized view if exists holding.unplannedholding_view cascade;
create materialized view holding.unplannedholding_view as
select distinct on (unplannedholding.identifier,unplannedholding_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    holding.unplannedholding.id,
    holding.unplannedholding_ts.id as ts_id,
    holding.unplannedholding_tsp.id as tsp_id,
    holding.unplannedholding.identifier,
    holding.unplannedholding_ts.interpretation,
    holding.unplannedholding_ts.sequence_number,
    holding.unplannedholding_ts.correction_number,
    holding.unplannedholding_ts.valid_time_begin,
    holding.unplannedholding_ts.valid_time_end,
    holding.unplannedholding_ts.feature_lifetime_begin,
    holding.unplannedholding_ts.feature_lifetime_end,
    coalesce(cast(holding.unplannedholding_ts.unplannedholding_value as varchar), '(' || holding.unplannedholding_ts.unplannedholding_nilreason || ')') as unplannedholding,
    coalesce(cast(holding.unplannedholding_ts.altitudereference_value as varchar), '(' || holding.unplannedholding_ts.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(holding.unplannedholding_ts.controlledairspace_value as varchar), '(' || holding.unplannedholding_ts.controlledairspace_nilreason || ')') as controlledairspace,
    coalesce(cast(holding.unplannedholding_ts.authorizedaltitude_value as varchar) || ' ' || holding.unplannedholding_ts.authorizedaltitude_uom, '(' || holding.unplannedholding_ts.authorizedaltitude_nilreason || ')') as authorizedaltitude,
    jsonb_agg(notes_note_view_hpfkcf.*) AS annotation
from holding.unplannedholding 
inner join master_join mj2 on holding.unplannedholding.id = mj2.source_id
inner join holding.unplannedholding_tsp on mj2.target_id = holding.unplannedholding_tsp.id
inner join holding.unplannedholding_ts on holding.unplannedholding_tsp.unplannedholdingtimeslice_id = holding.unplannedholding_ts.id
left join master_join master_join_iecdja on holding.unplannedholding_ts.id = master_join_iecdja.source_id
left join notes.note_view notes_note_view_hpfkcf on master_join_iecdja.target_id = notes_note_view_hpfkcf.id
where holding.unplannedholding.feature_status = 'APPROVED'
  and holding.unplannedholding_ts.feature_status = 'APPROVED'
group by
    holding.unplannedholding.id,
    holding.unplannedholding_ts.id,
    holding.unplannedholding_tsp.id,
    holding.unplannedholding.identifier,
    holding.unplannedholding_ts.interpretation,
    holding.unplannedholding_ts.sequence_number,
    holding.unplannedholding_ts.correction_number,
    holding.unplannedholding_ts.valid_time_begin,
    holding.unplannedholding_ts.valid_time_end,
    holding.unplannedholding_ts.feature_lifetime_begin,
    holding.unplannedholding_ts.feature_lifetime_end,
    holding.unplannedholding_ts.unplannedholding_value,
    holding.unplannedholding_ts.unplannedholding_nilreason,
    holding.unplannedholding_ts.altitudereference_value,
    holding.unplannedholding_ts.altitudereference_nilreason,
    holding.unplannedholding_ts.controlledairspace_value,
    holding.unplannedholding_ts.controlledairspace_nilreason,
    holding.unplannedholding_ts.authorizedaltitude_value,
    holding.unplannedholding_ts.authorizedaltitude_uom,
    holding.unplannedholding_ts.authorizedaltitude_nilreason
order by unplannedholding.identifier, unplannedholding_ts.sequence_number, unplannedholding_ts.correction_number DESC;
create index on holding.unplannedholding_view (id);
-- VerticalStructureTimeSliceType
-- ['obstacles.verticalstructurepart_view', 'notes.note_view', 'obstacles.verticalstructurelightingstatus_view']
drop materialized view if exists obstacles.verticalstructure_view cascade;
create materialized view obstacles.verticalstructure_view as
select distinct on (verticalstructure.identifier,verticalstructure_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    obstacles.verticalstructure.id,
    obstacles.verticalstructure_ts.id as ts_id,
    obstacles.verticalstructure_tsp.id as tsp_id,
    obstacles.verticalstructure.identifier,
    obstacles.verticalstructure_ts.interpretation,
    obstacles.verticalstructure_ts.sequence_number,
    obstacles.verticalstructure_ts.correction_number,
    obstacles.verticalstructure_ts.valid_time_begin,
    obstacles.verticalstructure_ts.valid_time_end,
    obstacles.verticalstructure_ts.feature_lifetime_begin,
    obstacles.verticalstructure_ts.feature_lifetime_end,
    coalesce(cast(obstacles.verticalstructure_ts.name_value as varchar), '(' || obstacles.verticalstructure_ts.name_nilreason || ')') as name,
    coalesce(cast(obstacles.verticalstructure_ts.type_value as varchar), '(' || obstacles.verticalstructure_ts.type_nilreason || ')') as type,
    coalesce(cast(obstacles.verticalstructure_ts.lighted_value as varchar), '(' || obstacles.verticalstructure_ts.lighted_nilreason || ')') as lighted,
    coalesce(cast(obstacles.verticalstructure_ts.markingicaostandard_value as varchar), '(' || obstacles.verticalstructure_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(obstacles.verticalstructure_ts.group_value as varchar), '(' || obstacles.verticalstructure_ts.group_nilreason || ')') as group,
    coalesce(cast(obstacles.verticalstructure_ts.lightingicaostandard_value as varchar), '(' || obstacles.verticalstructure_ts.lightingicaostandard_nilreason || ')') as lightingicaostandard,
    coalesce(cast(obstacles.verticalstructure_ts.synchronisedlighting_value as varchar), '(' || obstacles.verticalstructure_ts.synchronisedlighting_nilreason || ')') as synchronisedlighting,
    coalesce(cast(obstacles.verticalstructure_ts.length_value as varchar) || ' ' || obstacles.verticalstructure_ts.length_uom, '(' || obstacles.verticalstructure_ts.length_nilreason || ')') as length,
    coalesce(cast(obstacles.verticalstructure_ts.width_value as varchar) || ' ' || obstacles.verticalstructure_ts.width_uom, '(' || obstacles.verticalstructure_ts.width_nilreason || ')') as width,
    coalesce(cast(obstacles.verticalstructure_ts.radius_value as varchar) || ' ' || obstacles.verticalstructure_ts.radius_uom, '(' || obstacles.verticalstructure_ts.radius_nilreason || ')') as radius,
    coalesce(cast(navaids_points_markerbeacon_pt_wrjxut.title as varchar), '(' || navaids_points_markerbeacon_pt_wrjxut.nilreason[1] || ')') AS marker,
    navaids_points_markerbeacon_pt_wrjxut.href AS marker_href,
    jsonb_agg(obstacles_verticalstructurepart_view_ekgbxm.id) AS part,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_passengerservice_pt_gfyvls.id,
    'title', coalesce(cast(service_passengerservice_pt_gfyvls.title AS varchar), '(' || service_passengerservice_pt_gfyvls.nilreason[1] || ')'),
    'href', service_passengerservice_pt_gfyvls.href)) AS hostedpassengerservice,
    jsonb_agg(DISTINCT jsonb_build_object('id', navaids_points_specialnavigationstation_pt_ynjaww.id,
    'title', coalesce(cast(navaids_points_specialnavigationstation_pt_ynjaww.title AS varchar), '(' || navaids_points_specialnavigationstation_pt_ynjaww.nilreason[1] || ')'),
    'href', navaids_points_specialnavigationstation_pt_ynjaww.href)) AS hostedspecialnavstation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_unit_pt_ugkjcj.id,
    'title', coalesce(cast(organisation_unit_pt_ugkjcj.title AS varchar), '(' || organisation_unit_pt_ugkjcj.nilreason[1] || ')'),
    'href', organisation_unit_pt_ugkjcj.href)) AS hostedunit,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_aqxiop.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_aqxiop.title AS varchar), '(' || organisation_organisationauthority_pt_aqxiop.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_aqxiop.href)) AS hostedorganisation,
    jsonb_agg(notes_note_view_cxbyao.*) AS annotation,
    jsonb_agg(obstacles_verticalstructurelightingstatus_view_ocqnhd.id) AS lightingavailability
from obstacles.verticalstructure 
inner join master_join mj2 on obstacles.verticalstructure.id = mj2.source_id
inner join obstacles.verticalstructure_tsp on mj2.target_id = obstacles.verticalstructure_tsp.id
inner join obstacles.verticalstructure_ts on obstacles.verticalstructure_tsp.verticalstructuretimeslice_id = obstacles.verticalstructure_ts.id
left join navaids_points.markerbeacon_pt navaids_points_markerbeacon_pt_wrjxut on obstacles.verticalstructure_ts.marker_id = navaids_points_markerbeacon_pt_wrjxut.id
left join master_join master_join_upfdyb on obstacles.verticalstructure_ts.id = master_join_upfdyb.source_id
left join obstacles.verticalstructurepart_view obstacles_verticalstructurepart_view_ekgbxm on master_join_upfdyb.target_id = obstacles_verticalstructurepart_view_ekgbxm.id
left join master_join master_join_omtopv on obstacles.verticalstructure_ts.id = master_join_omtopv.source_id
left join service.passengerservice_pt service_passengerservice_pt_gfyvls on master_join_omtopv.target_id = service_passengerservice_pt_gfyvls.id
left join master_join master_join_aceypq on obstacles.verticalstructure_ts.id = master_join_aceypq.source_id
left join navaids_points.specialnavigationstation_pt navaids_points_specialnavigationstation_pt_ynjaww on master_join_aceypq.target_id = navaids_points_specialnavigationstation_pt_ynjaww.id
left join master_join master_join_qlbwyi on obstacles.verticalstructure_ts.id = master_join_qlbwyi.source_id
left join organisation.unit_pt organisation_unit_pt_ugkjcj on master_join_qlbwyi.target_id = organisation_unit_pt_ugkjcj.id
left join master_join master_join_phtxwj on obstacles.verticalstructure_ts.id = master_join_phtxwj.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_aqxiop on master_join_phtxwj.target_id = organisation_organisationauthority_pt_aqxiop.id
left join master_join master_join_wodmwo on obstacles.verticalstructure_ts.id = master_join_wodmwo.source_id
left join notes.note_view notes_note_view_cxbyao on master_join_wodmwo.target_id = notes_note_view_cxbyao.id
left join master_join master_join_gyghdp on obstacles.verticalstructure_ts.id = master_join_gyghdp.source_id
left join obstacles.verticalstructurelightingstatus_view obstacles_verticalstructurelightingstatus_view_ocqnhd on master_join_gyghdp.target_id = obstacles_verticalstructurelightingstatus_view_ocqnhd.id
where obstacles.verticalstructure.feature_status = 'APPROVED'
  and obstacles.verticalstructure_ts.feature_status = 'APPROVED'
group by
    obstacles.verticalstructure.id,
    obstacles.verticalstructure_ts.id,
    obstacles.verticalstructure_tsp.id,
    obstacles.verticalstructure.identifier,
    obstacles.verticalstructure_ts.interpretation,
    obstacles.verticalstructure_ts.sequence_number,
    obstacles.verticalstructure_ts.correction_number,
    obstacles.verticalstructure_ts.valid_time_begin,
    obstacles.verticalstructure_ts.valid_time_end,
    obstacles.verticalstructure_ts.feature_lifetime_begin,
    obstacles.verticalstructure_ts.feature_lifetime_end,
    obstacles.verticalstructure_ts.name_value,
    obstacles.verticalstructure_ts.name_nilreason,
    obstacles.verticalstructure_ts.type_value,
    obstacles.verticalstructure_ts.type_nilreason,
    obstacles.verticalstructure_ts.lighted_value,
    obstacles.verticalstructure_ts.lighted_nilreason,
    obstacles.verticalstructure_ts.markingicaostandard_value,
    obstacles.verticalstructure_ts.markingicaostandard_nilreason,
    obstacles.verticalstructure_ts.group_value,
    obstacles.verticalstructure_ts.group_nilreason,
    obstacles.verticalstructure_ts.lightingicaostandard_value,
    obstacles.verticalstructure_ts.lightingicaostandard_nilreason,
    obstacles.verticalstructure_ts.synchronisedlighting_value,
    obstacles.verticalstructure_ts.synchronisedlighting_nilreason,
    obstacles.verticalstructure_ts.length_value,
    obstacles.verticalstructure_ts.length_uom,
    obstacles.verticalstructure_ts.length_nilreason,
    obstacles.verticalstructure_ts.width_value,
    obstacles.verticalstructure_ts.width_uom,
    obstacles.verticalstructure_ts.width_nilreason,
    obstacles.verticalstructure_ts.radius_value,
    obstacles.verticalstructure_ts.radius_uom,
    obstacles.verticalstructure_ts.radius_nilreason,
    navaids_points_markerbeacon_pt_wrjxut.title,
    navaids_points_markerbeacon_pt_wrjxut.nilreason[1],
    navaids_points_markerbeacon_pt_wrjxut.href
order by verticalstructure.identifier, verticalstructure_ts.sequence_number, verticalstructure_ts.correction_number DESC;
create index on obstacles.verticalstructure_view (id);
-- VisualGlideSlopeIndicatorTimeSliceType
-- ['shared.lightelement_view', 'airport_heliport.groundlightingavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.visualglideslopeindicator_view cascade;
create materialized view airport_heliport.visualglideslopeindicator_view as
select distinct on (visualglideslopeindicator.identifier,visualglideslopeindicator_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.visualglideslopeindicator.id,
    airport_heliport.visualglideslopeindicator_ts.id as ts_id,
    airport_heliport.visualglideslopeindicator_tsp.id as tsp_id,
    airport_heliport.visualglideslopeindicator.identifier,
    airport_heliport.visualglideslopeindicator_ts.interpretation,
    airport_heliport.visualglideslopeindicator_ts.sequence_number,
    airport_heliport.visualglideslopeindicator_ts.correction_number,
    airport_heliport.visualglideslopeindicator_ts.valid_time_begin,
    airport_heliport.visualglideslopeindicator_ts.valid_time_end,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_begin,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.emergencylighting_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.intensitylevel_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.colour_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.type_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.position_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.numberbox_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.numberbox_nilreason || ')') as numberbox,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.portable_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.portable_nilreason || ')') as portable,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.slopeangle_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.slopeangle_nilreason || ')') as slopeangle,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_value as varchar) || ' ' || airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_uom, '(' || airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_nilreason || ')') as minimumeyeheightoverthreshold,
    coalesce(cast(airport_heliport_runwaydirection_pt_obugaf.title as varchar), '(' || airport_heliport_runwaydirection_pt_obugaf.nilreason[1] || ')') AS runwaydirection,
    airport_heliport_runwaydirection_pt_obugaf.href AS runwaydirection_href,
    jsonb_agg(shared_lightelement_view_xvmzck.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_ngczos.id) AS availability,
    jsonb_agg(notes_note_view_fvaqxr.*) AS annotation
from airport_heliport.visualglideslopeindicator 
inner join master_join mj2 on airport_heliport.visualglideslopeindicator.id = mj2.source_id
inner join airport_heliport.visualglideslopeindicator_tsp on mj2.target_id = airport_heliport.visualglideslopeindicator_tsp.id
inner join airport_heliport.visualglideslopeindicator_ts on airport_heliport.visualglideslopeindicator_tsp.visualglideslopeindicatortimeslice_id = airport_heliport.visualglideslopeindicator_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_obugaf on airport_heliport.visualglideslopeindicator_ts.runwaydirection_id = airport_heliport_runwaydirection_pt_obugaf.id
left join master_join master_join_tvthwj on airport_heliport.visualglideslopeindicator_ts.id = master_join_tvthwj.source_id
left join shared.lightelement_view shared_lightelement_view_xvmzck on master_join_tvthwj.target_id = shared_lightelement_view_xvmzck.id
left join master_join master_join_qzdeub on airport_heliport.visualglideslopeindicator_ts.id = master_join_qzdeub.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_ngczos on master_join_qzdeub.target_id = airport_heliport_groundlightingavailability_view_ngczos.id
left join master_join master_join_jqzgwk on airport_heliport.visualglideslopeindicator_ts.id = master_join_jqzgwk.source_id
left join notes.note_view notes_note_view_fvaqxr on master_join_jqzgwk.target_id = notes_note_view_fvaqxr.id
where airport_heliport.visualglideslopeindicator.feature_status = 'APPROVED'
  and airport_heliport.visualglideslopeindicator_ts.feature_status = 'APPROVED'
group by
    airport_heliport.visualglideslopeindicator.id,
    airport_heliport.visualglideslopeindicator_ts.id,
    airport_heliport.visualglideslopeindicator_tsp.id,
    airport_heliport.visualglideslopeindicator.identifier,
    airport_heliport.visualglideslopeindicator_ts.interpretation,
    airport_heliport.visualglideslopeindicator_ts.sequence_number,
    airport_heliport.visualglideslopeindicator_ts.correction_number,
    airport_heliport.visualglideslopeindicator_ts.valid_time_begin,
    airport_heliport.visualglideslopeindicator_ts.valid_time_end,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_begin,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_end,
    airport_heliport.visualglideslopeindicator_ts.emergencylighting_value,
    airport_heliport.visualglideslopeindicator_ts.emergencylighting_nilreason,
    airport_heliport.visualglideslopeindicator_ts.intensitylevel_value,
    airport_heliport.visualglideslopeindicator_ts.intensitylevel_nilreason,
    airport_heliport.visualglideslopeindicator_ts.colour_value,
    airport_heliport.visualglideslopeindicator_ts.colour_nilreason,
    airport_heliport.visualglideslopeindicator_ts.type_value,
    airport_heliport.visualglideslopeindicator_ts.type_nilreason,
    airport_heliport.visualglideslopeindicator_ts.position_value,
    airport_heliport.visualglideslopeindicator_ts.position_nilreason,
    airport_heliport.visualglideslopeindicator_ts.numberbox_value,
    airport_heliport.visualglideslopeindicator_ts.numberbox_nilreason,
    airport_heliport.visualglideslopeindicator_ts.portable_value,
    airport_heliport.visualglideslopeindicator_ts.portable_nilreason,
    airport_heliport.visualglideslopeindicator_ts.slopeangle_value,
    airport_heliport.visualglideslopeindicator_ts.slopeangle_nilreason,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_value,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_uom,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_nilreason,
    airport_heliport_runwaydirection_pt_obugaf.title,
    airport_heliport_runwaydirection_pt_obugaf.nilreason[1],
    airport_heliport_runwaydirection_pt_obugaf.href
order by visualglideslopeindicator.identifier, visualglideslopeindicator_ts.sequence_number, visualglideslopeindicator_ts.correction_number DESC;
create index on airport_heliport.visualglideslopeindicator_view (id);
-- VORTimeSliceType
-- ['geometry.elevatedpoint_view', 'navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'notes.note_view', 'navaids_points.authorityfornavaidequipment_view']
drop materialized view if exists navaids_points.vor_view cascade;
create materialized view navaids_points.vor_view as
select distinct on (vor.identifier,vor_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.vor.id,
    navaids_points.vor_ts.id as ts_id,
    navaids_points.vor_tsp.id as tsp_id,
    navaids_points.vor.identifier,
    navaids_points.vor_ts.interpretation,
    navaids_points.vor_ts.sequence_number,
    navaids_points.vor_ts.correction_number,
    navaids_points.vor_ts.valid_time_begin,
    navaids_points.vor_ts.valid_time_end,
    navaids_points.vor_ts.feature_lifetime_begin,
    navaids_points.vor_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.vor_ts.designator_value as varchar), '(' || navaids_points.vor_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.vor_ts.name_value as varchar), '(' || navaids_points.vor_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.vor_ts.emissionclass_value as varchar), '(' || navaids_points.vor_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.vor_ts.mobile_value as varchar), '(' || navaids_points.vor_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.vor_ts.magneticvariation_value as varchar), '(' || navaids_points.vor_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.vor_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.vor_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.vor_ts.datemagneticvariation_value as varchar), '(' || navaids_points.vor_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.vor_ts.flightchecked_value as varchar), '(' || navaids_points.vor_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.vor_ts.type_value as varchar), '(' || navaids_points.vor_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.vor_ts.zerobearingdirection_value as varchar), '(' || navaids_points.vor_ts.zerobearingdirection_nilreason || ')') as zerobearingdirection,
    coalesce(cast(navaids_points.vor_ts.declination_value as varchar), '(' || navaids_points.vor_ts.declination_nilreason || ')') as declination,
    coalesce(cast(navaids_points.vor_ts.frequency_value as varchar) || ' ' || navaids_points.vor_ts.frequency_uom, '(' || navaids_points.vor_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_bqmxda.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_bqmxda.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_bqmxda.geom) AS location_latitude,
    geometry_elevatedpoint_view_bqmxda.elevation AS location_elevation,
    geometry_elevatedpoint_view_bqmxda.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_bqmxda.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_bqmxda.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_bqmxda.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_wsggfs.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_byluxx.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_tehnvy.id) AS availability,
    jsonb_agg(notes_note_view_tqrhkb.*) AS annotation
from navaids_points.vor 
inner join master_join mj2 on navaids_points.vor.id = mj2.source_id
inner join navaids_points.vor_tsp on mj2.target_id = navaids_points.vor_tsp.id
inner join navaids_points.vor_ts on navaids_points.vor_tsp.vortimeslice_id = navaids_points.vor_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_bqmxda on navaids_points.vor_ts.location_id = geometry_elevatedpoint_view_bqmxda.id
left join master_join master_join_wrhoon on navaids_points.vor_ts.id = master_join_wrhoon.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_wsggfs on master_join_wrhoon.target_id = navaids_points_authorityfornavaidequipment_view_wsggfs.id
left join master_join master_join_yxsdlf on navaids_points.vor_ts.id = master_join_yxsdlf.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_byluxx on master_join_yxsdlf.target_id = navaids_points_navaidequipmentmonitoring_view_byluxx.id
left join master_join master_join_klcswi on navaids_points.vor_ts.id = master_join_klcswi.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_tehnvy on master_join_klcswi.target_id = navaids_points_navaidoperationalstatus_view_tehnvy.id
left join master_join master_join_arrpkn on navaids_points.vor_ts.id = master_join_arrpkn.source_id
left join notes.note_view notes_note_view_tqrhkb on master_join_arrpkn.target_id = notes_note_view_tqrhkb.id
where navaids_points.vor.feature_status = 'APPROVED'
  and navaids_points.vor_ts.feature_status = 'APPROVED'
group by
    navaids_points.vor.id,
    navaids_points.vor_ts.id,
    navaids_points.vor_tsp.id,
    navaids_points.vor.identifier,
    navaids_points.vor_ts.interpretation,
    navaids_points.vor_ts.sequence_number,
    navaids_points.vor_ts.correction_number,
    navaids_points.vor_ts.valid_time_begin,
    navaids_points.vor_ts.valid_time_end,
    navaids_points.vor_ts.feature_lifetime_begin,
    navaids_points.vor_ts.feature_lifetime_end,
    navaids_points.vor_ts.designator_value,
    navaids_points.vor_ts.designator_nilreason,
    navaids_points.vor_ts.name_value,
    navaids_points.vor_ts.name_nilreason,
    navaids_points.vor_ts.emissionclass_value,
    navaids_points.vor_ts.emissionclass_nilreason,
    navaids_points.vor_ts.mobile_value,
    navaids_points.vor_ts.mobile_nilreason,
    navaids_points.vor_ts.magneticvariation_value,
    navaids_points.vor_ts.magneticvariation_nilreason,
    navaids_points.vor_ts.magneticvariationaccuracy_value,
    navaids_points.vor_ts.magneticvariationaccuracy_nilreason,
    navaids_points.vor_ts.datemagneticvariation_value,
    navaids_points.vor_ts.datemagneticvariation_nilreason,
    navaids_points.vor_ts.flightchecked_value,
    navaids_points.vor_ts.flightchecked_nilreason,
    navaids_points.vor_ts.type_value,
    navaids_points.vor_ts.type_nilreason,
    navaids_points.vor_ts.zerobearingdirection_value,
    navaids_points.vor_ts.zerobearingdirection_nilreason,
    navaids_points.vor_ts.declination_value,
    navaids_points.vor_ts.declination_nilreason,
    navaids_points.vor_ts.frequency_value,
    navaids_points.vor_ts.frequency_uom,
    navaids_points.vor_ts.frequency_nilreason,
    geometry_elevatedpoint_view_bqmxda.geom,
    geometry_elevatedpoint_view_bqmxda.elevation,
    geometry_elevatedpoint_view_bqmxda.geoidUndulation,
    geometry_elevatedpoint_view_bqmxda.verticalDatum,
    geometry_elevatedpoint_view_bqmxda.verticalAccuracy,
    geometry_elevatedpoint_view_bqmxda.horizontalAccuracy
order by vor.identifier, vor_ts.sequence_number, vor_ts.correction_number DESC;
create index on navaids_points.vor_view (id);
-- WorkAreaTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view', 'airport_heliport.workareaactivity_view']
drop materialized view if exists airport_heliport.workarea_view cascade;
create materialized view airport_heliport.workarea_view as
select distinct on (workarea.identifier,workarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.workarea.id,
    airport_heliport.workarea_ts.id as ts_id,
    airport_heliport.workarea_tsp.id as tsp_id,
    airport_heliport.workarea.identifier,
    airport_heliport.workarea_ts.interpretation,
    airport_heliport.workarea_ts.sequence_number,
    airport_heliport.workarea_ts.correction_number,
    airport_heliport.workarea_ts.valid_time_begin,
    airport_heliport.workarea_ts.valid_time_end,
    airport_heliport.workarea_ts.feature_lifetime_begin,
    airport_heliport.workarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.workarea_ts.plannedOperational_value as varchar), '(' || airport_heliport.workarea_ts.plannedOperational_nilreason || ')') as plannedOperational,
    coalesce(cast(airport_heliport.workarea_ts.type_value as varchar), '(' || airport_heliport.workarea_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_airportheliport_pt_zkkocv.title as varchar), '(' || airport_heliport_airportheliport_pt_zkkocv.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_zkkocv.href AS associatedairportheliport_href,
    geometry_elevatedsurface_view_hbslht.geom AS extent_geom,
    geometry_elevatedsurface_view_hbslht.elevation AS extent_elevation,
    geometry_elevatedsurface_view_hbslht.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_hbslht.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_hbslht.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_hbslht.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(airport_heliport_workareaactivity_view_szhpun.id) AS activation,
    jsonb_agg(notes_note_view_qbuiza.*) AS annotation
from airport_heliport.workarea 
inner join master_join mj2 on airport_heliport.workarea.id = mj2.source_id
inner join airport_heliport.workarea_tsp on mj2.target_id = airport_heliport.workarea_tsp.id
inner join airport_heliport.workarea_ts on airport_heliport.workarea_tsp.workareatimeslice_id = airport_heliport.workarea_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_zkkocv on airport_heliport.workarea_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_zkkocv.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_hbslht on airport_heliport.workarea_ts.extent_id = geometry_elevatedsurface_view_hbslht.id
left join master_join master_join_jxsibc on airport_heliport.workarea_ts.id = master_join_jxsibc.source_id
left join airport_heliport.workareaactivity_view airport_heliport_workareaactivity_view_szhpun on master_join_jxsibc.target_id = airport_heliport_workareaactivity_view_szhpun.id
left join master_join master_join_muxvwx on airport_heliport.workarea_ts.id = master_join_muxvwx.source_id
left join notes.note_view notes_note_view_qbuiza on master_join_muxvwx.target_id = notes_note_view_qbuiza.id
where airport_heliport.workarea.feature_status = 'APPROVED'
  and airport_heliport.workarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.workarea.id,
    airport_heliport.workarea_ts.id,
    airport_heliport.workarea_tsp.id,
    airport_heliport.workarea.identifier,
    airport_heliport.workarea_ts.interpretation,
    airport_heliport.workarea_ts.sequence_number,
    airport_heliport.workarea_ts.correction_number,
    airport_heliport.workarea_ts.valid_time_begin,
    airport_heliport.workarea_ts.valid_time_end,
    airport_heliport.workarea_ts.feature_lifetime_begin,
    airport_heliport.workarea_ts.feature_lifetime_end,
    airport_heliport.workarea_ts.plannedOperational_value,
    airport_heliport.workarea_ts.plannedOperational_nilreason,
    airport_heliport.workarea_ts.type_value,
    airport_heliport.workarea_ts.type_nilreason,
    airport_heliport_airportheliport_pt_zkkocv.title,
    airport_heliport_airportheliport_pt_zkkocv.nilreason[1],
    airport_heliport_airportheliport_pt_zkkocv.href,
    geometry_elevatedsurface_view_hbslht.geom,
    geometry_elevatedsurface_view_hbslht.elevation,
    geometry_elevatedsurface_view_hbslht.geoidUndulation,
    geometry_elevatedsurface_view_hbslht.verticalDatum,
    geometry_elevatedsurface_view_hbslht.verticalAccuracy,
    geometry_elevatedsurface_view_hbslht.horizontalAccuracy
order by workarea.identifier, workarea_ts.sequence_number, workarea_ts.correction_number DESC;
create index on airport_heliport.workarea_view (id);
