
-- Snowflake SQL : CurvePropertyType 

CREATE MATERIALIZED VIEW geometry.curve_view AS
WITH 
center AS (
    SELECT 
		id, 
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 100 AS step_size
    FROM public.linestring_segment 
	WHERE public.linestring_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 100 AS step_size
    FROM public.linestring_segment 
	WHERE public.linestring_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 100) AS n, 	
        center
),
arc_line AS (
    SELECT 
        interpolated_points.id,
        ST_MakeLine(point_geom) AS arc_geom
    FROM interpolated_points
    GROUP BY id
),
segment_union AS (
    SELECT 
		id, 
		ST_ReducePrecision(linestring,0.000000000000001) AS geom
    FROM
		public.linestring_segment 
    WHERE 
		public.linestring_segment.interpretation = 0
    UNION ALL 
    SELECT 
		id, 
		ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 1000)::geometry AS geom
    FROM 
		public.linestring_segment 
    WHERE 
		public.linestring_segment.interpretation = 1
    UNION ALL 
    SELECT 
		id, 
		ST_ReducePrecision(arc_geom, 0.000000000000001) AS geom
    FROM 
		arc_line
),
merged_segments AS (
    SELECT 
        public.curve_pt.id,
        ST_LineMerge(ST_Collect(segment_union.geom)) AS merged_geom,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        public.curve_pt
    INNER JOIN 
        public.curve_pt_linestring_segment ON public.curve_pt.id = public.curve_pt_linestring_segment.curvepropertytype_id
    INNER JOIN 
        segment_union ON public.curve_pt_linestring_segment.segments_id = segment_union.id
    GROUP BY public.curve_pt.id
)
SELECT 
    merged_segments.id, 
	merged_geom as geom,
	COALESCE(merged_segments.horizontalaccuracy || ' ' || merged_segments.horizontalaccuracy_uom, '(' || merged_segments.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM merged_segments;
create or replace view routes.directflight_view as
select
    routes.directflight_pt.id,
    jsonb_agg(notes.note_view.note) AS directflight_annotation,
    routes.directflight_pt.nilreason AS directflight_annotation
from routes.directflight_pt 
inner join routes.directflight on routes.directflight_pt.directflight_id = routes.directflight.id
left join master_join mj1 on routes.directflight.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
group by
    routes.directflight_pt.id,
    routes.directflight_pt.nilreason;
-- Snowflake SQL : ElevatedCurvePropertyType 

CREATE MATERIALIZED VIEW geometry.elevated_curve_view AS
WITH 
center AS (
    SELECT 
		id, 
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 100 AS step_size
    FROM public.linestring_segment 
	WHERE public.linestring_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 100 AS step_size
    FROM public.linestring_segment 
	WHERE public.linestring_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 100) AS n, 	
        center
),
arc_line AS (
    SELECT 
        id,
        ST_MakeLine(point_geom) AS arc_geom
    FROM interpolated_points
    GROUP BY id
),
segment_union AS (
    SELECT 
		id, 
		ST_ReducePrecision(linestring,0.000000000000001) AS geom
    FROM
		public.linestring_segment 
    WHERE 
		public.linestring_segment.interpretation = 0
    UNION ALL 
    SELECT 
		id, 
		ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 1000)::geometry AS geom
    FROM 
		public.linestring_segment 
    WHERE 
		public.linestring_segment.interpretation = 1
    UNION ALL 
    SELECT 
		id, 
		ST_ReducePrecision(arc_geom, 0.000000000000001) AS geom
    FROM 
		arc_line
),
merged_segments AS (
    SELECT 
        public.elevated_curve_pt.id,
        ST_LineMerge(ST_Collect(segment_union.geom)) AS merged_geom,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        public.elevated_curve_pt
    INNER JOIN 
        public.elevated_curve_pt_linestring_segment ON public.elevated_curve_pt.id = public.elevated_curve_pt_linestring_segment.elevatedcurvepropertytype_id
    INNER JOIN 
        segment_union ON public.elevated_curve_pt_linestring_segment.segments_id = segment_union.id
    GROUP BY public.elevated_curve_pt.id
)
SELECT 
    merged_segments.id,
	merged_geom as geom,
	COALESCE(merged_segments.elevation || ' ' || merged_segments.elevation_uom, '(' || merged_segments.elevation_nilreason || ')') AS elevation,
	COALESCE(merged_segments.geoidundulation || ' ' || merged_segments.geoidundulation_uom, '(' || merged_segments.geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(merged_segments.verticaldatum || ' ' || merged_segments.geoidundulation_uom, '(' || merged_segments.geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(CAST(merged_segments.verticalaccuracy AS varchar), '(' || merged_segments.verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(merged_segments.horizontalaccuracy || ' ' || merged_segments.horizontalaccuracy_uom, '(' || merged_segments.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM merged_segments;
-- Snowflake SQL : ElevatedPointPropertyType

CREATE MATERIALIZED VIEW geometry.elevated_point_view AS
SELECT 
    id, 
    point as geom,
	COALESCE(elevation || ' ' || elevation_uom, '(' || elevation_nilreason || ')') AS elevation,
	COALESCE(geoidundulation || ' ' || geoidundulation_uom, '(' || geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(verticaldatum || ' ' || geoidundulation_uom, '(' || geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(verticalaccuracy || ' ' || horizontalaccuracy_uom, '(' || verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(horizontalaccuracy || ' ' || horizontalaccuracy_uom, '(' || horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM elevated_point_pt;
-- Snowflake SQL : ElevatedSurfacePropertyType

CREATE MATERIALIZED VIEW partial_elevated_surface_view AS
WITH  
segment_ref AS(
	SELECT 
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		SUBSTRING(
	        curve_ref 
	        FROM '([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$'
	    ) AS uuid
    FROM public.polygon_segment 
	WHERE public.polygon_segment.interpretation = 4
),
segment_value AS(
	SELECT 
		airspace.geoborder.identifier AS uuid,
		geom
	FROM airspace.geoborder
	INNER JOIN public.geoborder_timeslice
		ON airspace.geoborder.id = public.geoborder_timeslice.geoborder_id
	INNER JOIN airspace.geoborder_tsp
		ON public.geoborder_timeslice.geoborder_tsp_id = airspace.geoborder_tsp.id
	INNER JOIN airspace.geoborder_ts
		ON airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
	INNER JOIN public.curve_pt
		ON airspace.geoborder_ts.border_id = public.curve_pt.id
	INNER JOIN geometry.curve_view
		ON public.curve_pt.id = geometry.curve_view.id
),
center AS (
    SELECT 
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 256 AS step_size
    FROM public.polygon_segment 
	WHERE public.polygon_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 256 AS step_size
    FROM public.polygon_segment 
	WHERE public.polygon_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 256) AS n, 	
        center
),
arc_line AS (
    SELECT 
        id,
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
        ST_MakeLine(point_geom) AS geom
    FROM interpolated_points
    GROUP BY 
		id, 
		curve_xml_id,
		part, 
		member, 
		sequence, 
		interpretation
),
segment_union AS (
    SELECT 
        id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_ReducePrecision(linestring, 0.000000000000001) AS geom,
		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
    FROM 
        public.polygon_segment 
    WHERE 
        public.polygon_segment.interpretation = 0
    UNION ALL 
    SELECT 
        id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
        ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 10000)::geometry as geom,
		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
    FROM 
        public.polygon_segment 
    WHERE 
        public.polygon_segment.interpretation = 1
	UNION ALL
	SELECT
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
	FROM
		arc_line
	UNION ALL
	SELECT
		id,
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
	FROM segment_ref
	INNER JOIN segment_value
	ON segment_ref.uuid = segment_value.uuid		
),
segement_ownership AS (
	SELECT 
		public.elevated_surface_pt.id,
        public.elevated_surface_pt.xml_id,
		segment_union.curve_xml_id,
		segment_union.part AS part,
		segment_union.member AS member,
		segment_union.sequence AS sequence,
		segment_union.interpretation AS interpretation,
		segment_union.geom AS geom,
		segment_union.first_point as first_point,
		segment_union.last_point as last_point,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        public.elevated_surface_pt
    INNER JOIN 
        public.elevatedsurface_exterior 
        ON public.elevated_surface_pt.id = public.elevatedsurface_exterior.elevatedsurfacepropertytype_id
    INNER JOIN 
        segment_union 
        ON public.elevatedsurface_exterior.exteriorlinestring_id = segment_union.id
	UNION ALL
	SELECT 
		public.elevated_surface_pt.id,
        public.elevated_surface_pt.xml_id,
		segment_union.curve_xml_id,
		segment_union.part AS part,
		segment_union.member AS member,
		segment_union.sequence AS sequence,
		segment_union.interpretation AS interpretation,
		segment_union.geom AS geom,
		segment_union.first_point AS first_point,
		segment_union.last_point AS last_point,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        public.elevated_surface_pt
    INNER JOIN 
        public.elevatedsurface_interior 
        ON public.elevated_surface_pt.id = public.elevatedsurface_interior.elevatedsurfacepropertytype_id
    INNER JOIN 
        segment_union 
        ON public.elevatedsurface_interior.interiorlinestring_id = segment_union.id
),
ordered_segments AS (
    SELECT 
		id,
        xml_id, 
		curve_xml_id,
        part,
		member,
        sequence,
		interpretation,
        geom,
        first_point, 
        last_point,
		ST_IsClosed(segement_ownership.geom) AS closed,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        segement_ownership
    ORDER BY 
        xml_id, 
		part, 
		member, 
		sequence
),
connecting_segments AS (
    SELECT 
        id,
		xml_id,
		curve_xml_id,
        part,
		member,
        sequence,
		interpretation,
        geom,
        first_point,
        last_point,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        ordered_segments
    UNION ALL
    SELECT 
        curr.id,
		curr.xml_id,
		Null AS curve_xml_id,
        curr.part,
		curr.member,
        curr.sequence + 0.5 AS sequence,
		1,
        ST_MakeLine(curr.last_point, next.first_point) AS geom,
        curr.last_point AS first_point,
        next.first_point AS last_point,
		NULL AS elevation,
		NULL AS elevation_uom,
		NULL AS elevation_nilreason,
		NULL AS geoidundulation,
		NULL AS geoidundulation_uom,
		NULL AS geoidundulation_nilreason,
		NULL AS horizontalaccuracy,
		NULL AS horizontalaccuracy_uom,
		NULL AS horizontalaccuracy_nilreason,
		NULL AS verticalaccuracy,
		NULL AS verticalaccuracy_uom,
		NULL AS verticalaccuracy_nilreason,
		NULL AS verticaldatum,
		NULL AS verticaldatum_nilreason,
		NULL AS nilreason
    FROM 
        ordered_segments curr
    JOIN 
        ordered_segments next
    ON 
        curr.xml_id = next.xml_id
        AND curr.part = next.part
        AND curr.sequence + 1 = next.sequence
		AND curr.member = next.member
	WHERE 
		ST_IsClosed(curr.geom) = false
		AND
		curr.interpretation != 4
		AND
		next.interpretation != 4
    UNION ALL
    SELECT 
        curr.id,
		curr.xml_id,
		Null AS curve_xml_id,
        curr.part,
		curr.member + 0.5 AS member,
        curr.sequence,
		1,
        ST_MakeLine(curr.last_point, next.first_point) AS geom,
        curr.last_point AS first_point,
        next.first_point AS last_point,
		NULL AS elevation,
		NULL AS elevation_uom,
		NULL AS elevation_nilreason,
		NULL AS geoidundulation,
		NULL AS geoidundulation_uom,
		NULL AS geoidundulation_nilreason,
		NULL AS horizontalaccuracy,
		NULL AS horizontalaccuracy_uom,
		NULL AS horizontalaccuracy_nilreason,
		NULL AS verticalaccuracy,
		NULL AS verticalaccuracy_uom,
		NULL AS verticalaccuracy_nilreason,
		NULL AS verticaldatum,
		NULL AS verticaldatum_nilreason,
		NULL AS nilreason
    FROM 
        ordered_segments curr
    JOIN 
        ordered_segments next
    ON 
        curr.xml_id = next.xml_id
        AND curr.part = next.part
        AND curr.member + 1 = next.member
	WHERE 
		ST_IsClosed(curr.geom) = false
		AND
		curr.interpretation != 4
		AND
		next.interpretation != 4
    ORDER BY 
        xml_id, 
        part, 
        member,
        sequence
),
clustered_segments AS (
    SELECT 
        id, 
        xml_id,
		curve_xml_id,
        part,
        member,
		interpretation,
        geom,
		ST_ClusterDBSCAN(geom, eps := 0, minpoints := 1) OVER (PARTITION BY xml_id, part)  AS cluster_id,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        connecting_segments
    WHERE 
        interpretation != 4
	UNION ALL
    SELECT 
        id, 
		xml_id,
		curve_xml_id,
        part,
        member,
		interpretation,
        geom,
		Null AS cluster_id,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        connecting_segments
    WHERE 
        interpretation = 4
	ORDER BY
		xml_id,
		part, 
		member
),
partial_ring AS (
    SELECT 
        id, 
        xml_id,
		ARRAY_AGG(curve_xml_id) as curve_xml_id,
        part,
        MIN(member) AS member,
		MIN(interpretation) AS interpretation,
        ST_IsClosed(ST_LineMerge(ST_Collect(geom))) AS closed,
        ST_GeometryType(ST_LineMerge(ST_Collect(geom))) AS type, 
        ST_LineMerge(ST_Collect(geom)) AS geom,
        NULL::geometry AS points,
		MAX(elevation) AS elevation,
		MAX(elevation_uom) AS elevation_uom,
		MAX(elevation_nilreason) AS elevation_nilreason,
		MAX(geoidundulation) AS geoidundulation,
		MAX(geoidundulation_uom) AS geoidundulation_uom,
		MAX(geoidundulation_nilreason) AS geoidundulation_nilreason,
		MAX(horizontalaccuracy) AS horizontalaccuracy,
		MAX(horizontalaccuracy_uom) AS horizontalaccuracy_uom,
		MAX(horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
		MAX(verticalaccuracy) AS verticalaccuracy,
		MAX(verticalaccuracy_uom) AS verticalaccuracy_uom,
		MAX(verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
		MAX(verticaldatum) AS verticaldatum,
		MAX(verticaldatum_nilreason) AS verticaldatum_nilreason,
		MAX(nilreason) AS nilreason
    FROM 
        clustered_segments
	WHERE 
		interpretation != 4
    GROUP BY 
		id,
        xml_id, 
        part, 
        cluster_id,
        horizontalaccuracy, 
        horizontalaccuracy_uom, 
        horizontalaccuracy_nilreason,	
        nilreason
	UNION ALL
    SELECT 
        id, 
        xml_id,
		ARRAY[curve_xml_id] AS curve_xml_id,
        part,
        member,
		interpretation,
        ST_IsClosed(geom) AS closed,
        ST_GeometryType(geom) AS type, 
		geom AS geom,
		ST_Points(geom) AS points,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        clustered_segments
	WHERE 
		interpretation = 4
	ORDER BY 
        xml_id, 
		part, 
		member
),
output AS (
    SELECT 
        pr.id, 
        pr.xml_id,
		pr.curve_xml_id,
        pr.part,
		ROW_NUMBER() OVER (PARTITION BY xml_id, part ORDER BY id) - 1 AS increment,
		COUNT(*) OVER (PARTITION BY xml_id, part ) AS total_count,
		pr.interpretation,
		pr.points,
        COALESCE(dumped.geom, pr.geom) AS geom,
		pr.elevation,
		pr.elevation_uom,
		pr.elevation_nilreason,
		pr.geoidundulation,
		pr.geoidundulation_uom,
		pr.geoidundulation_nilreason,
		pr.horizontalaccuracy,
		pr.horizontalaccuracy_uom,
		pr.horizontalaccuracy_nilreason,
		pr.verticalaccuracy,
		pr.verticalaccuracy_uom,
		pr.verticalaccuracy_nilreason,
		pr.verticaldatum,
		pr.verticaldatum_nilreason,
		pr.nilreason
    FROM 
        partial_ring pr
    LEFT JOIN LATERAL (
        SELECT (ST_Dump(pr.geom)).geom
        WHERE ST_GeometryType(pr.geom) = 'ST_MultiLineString'
    ) dumped ON true
	ORDER BY
		xml_id, 
		part, 
		member
)
SELECT 
	ST_GeometryType(geom),
	output.id, 
	to_jsonb(output.xml_id) AS xml_id,
	to_jsonb(output.curve_xml_id) AS curve_xml_id,
	output.part,
	output.increment,
	output.total_count,
	output.interpretation,
	output.geom,
	output.points,
	output.elevation,
	output.elevation_uom,
	output.elevation_nilreason,
	output.geoidundulation,
	output.geoidundulation_uom,
	output.geoidundulation_nilreason,
	output.horizontalaccuracy,
	output.horizontalaccuracy_uom,
	output.horizontalaccuracy_nilreason,
	output.verticalaccuracy,
	output.verticalaccuracy_uom,
	output.verticalaccuracy_nilreason,
	output.verticaldatum,
	output.verticaldatum_nilreason,
	output.nilreason
FROM
output;

-- R1 : Simple feature, closed
-- R2 : Simple feature, unclosed
-- G1 : Complex feature wiht a single geoborder, 
-- G2 : Complex feature with multiple geoborder,
CREATE MATERIALIZED VIEW geometry.elevated_surface_view AS
WITH 
g1_segment AS (
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		(ST_Dump(
		  ST_Split(
			geoborder.geom,
			ST_Union(
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)),
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(ring.geom))
			)
		  )
		)).geom AS geom,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)) AS  start_segment,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(ring.geom)) AS end_segment,
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	FROM 
		partial_elevated_surface_view geoborder
	JOIN
		partial_elevated_surface_view ring
	ON 
        ring.xml_id = geoborder.xml_id
		AND
		ring.part = geoborder.part
		AND 
		ring.increment <> geoborder.increment
	WHERE 
		geoborder.total_count = 2
		AND
		geoborder.interpretation = 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.geom, 
		geoborder.increment,
		geoborder.interpretation,
		geoborder.geom, 
		ring.geom,
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	UNION ALL
	SELECT
		partial_elevated_surface_view.id, 
		partial_elevated_surface_view.xml_id,
		partial_elevated_surface_view.curve_xml_id,
		partial_elevated_surface_view.part,
		partial_elevated_surface_view.increment,
		partial_elevated_surface_view.interpretation,
		partial_elevated_surface_view.geom,
		Null::geometry AS start_segment,
		Null::geometry AS end_segment,
		partial_elevated_surface_view.elevation,
		partial_elevated_surface_view.elevation_uom,
		partial_elevated_surface_view.elevation_nilreason,
		partial_elevated_surface_view.geoidundulation,
		partial_elevated_surface_view.geoidundulation_uom,
		partial_elevated_surface_view.geoidundulation_nilreason,
		partial_elevated_surface_view.horizontalaccuracy,
		partial_elevated_surface_view.horizontalaccuracy_uom,
		partial_elevated_surface_view.horizontalaccuracy_nilreason,
		partial_elevated_surface_view.verticalaccuracy,
		partial_elevated_surface_view.verticalaccuracy_uom,
		partial_elevated_surface_view.verticalaccuracy_nilreason,
		partial_elevated_surface_view.verticaldatum,
		partial_elevated_surface_view.verticaldatum_nilreason,
		partial_elevated_surface_view.nilreason
	FROM 
		partial_elevated_surface_view
	WHERE 
		partial_elevated_surface_view.total_count = 2 
		AND
		partial_elevated_surface_view.interpretation != 4
	ORDER BY
		id, 
		xml_id, 
		part,
		increment
),
g2_segment AS (
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		geoborder.geom AS geom,
		Null::geometry AS  start_segment,
		Null::geometry AS end_segment,
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	FROM 
		partial_elevated_surface_view geoborder
	JOIN
		partial_elevated_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_elevated_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation = 4
		AND 
		after.interpretation = 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	UNION ALL
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		(ST_Dump(
		  ST_Split(
			geoborder.geom,
			ST_Union(
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom)),
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
			)
		  )
		)).geom AS geom,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	FROM 
		partial_elevated_surface_view geoborder
	JOIN
		partial_elevated_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_elevated_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation != 4
		AND 
		after.interpretation != 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	UNION ALL
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		(ST_Dump(
		  ST_Split(
			geoborder.geom, ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom))
			)
		  )
		).geom AS geom,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
		Null::geometry AS end_segment,
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	FROM 
		partial_elevated_surface_view geoborder
	JOIN
		partial_elevated_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_elevated_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation != 4
		AND 
		after.interpretation = 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	UNION ALL
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		(ST_Dump(
		  ST_Split(
			geoborder.geom,	ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
			)
		  )
		).geom AS geom,
		Null::geometry AS  start_segment,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	FROM 
		partial_elevated_surface_view geoborder
	JOIN
		partial_elevated_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_elevated_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation = 4
		AND 
		after.interpretation != 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.elevation,
		geoborder.elevation_uom,
		geoborder.elevation_nilreason,
		geoborder.geoidundulation,
		geoborder.geoidundulation_uom,
		geoborder.geoidundulation_nilreason,
		geoborder.horizontalaccuracy,
		geoborder.horizontalaccuracy_uom,
		geoborder.horizontalaccuracy_nilreason,
		geoborder.verticalaccuracy,
		geoborder.verticalaccuracy_uom,
		geoborder.verticalaccuracy_nilreason,
		geoborder.verticaldatum,
		geoborder.verticaldatum_nilreason,
		geoborder.nilreason
	UNION ALL
	SELECT
		partial_elevated_surface_view.id, 
		partial_elevated_surface_view.xml_id,
		partial_elevated_surface_view.curve_xml_id,
		partial_elevated_surface_view.part,
		partial_elevated_surface_view.increment,
		partial_elevated_surface_view.interpretation,
		partial_elevated_surface_view.total_count,
		partial_elevated_surface_view.geom,
		Null::geometry AS start_segment,
		Null::geometry AS end_segment,
		partial_elevated_surface_view.elevation,
		partial_elevated_surface_view.elevation_uom,
		partial_elevated_surface_view.elevation_nilreason,
		partial_elevated_surface_view.geoidundulation,
		partial_elevated_surface_view.geoidundulation_uom,
		partial_elevated_surface_view.geoidundulation_nilreason,
		partial_elevated_surface_view.horizontalaccuracy,
		partial_elevated_surface_view.horizontalaccuracy_uom,
		partial_elevated_surface_view.horizontalaccuracy_nilreason,
		partial_elevated_surface_view.verticalaccuracy,
		partial_elevated_surface_view.verticalaccuracy_uom,
		partial_elevated_surface_view.verticalaccuracy_nilreason,
		partial_elevated_surface_view.verticaldatum,
		partial_elevated_surface_view.verticaldatum_nilreason,
		partial_elevated_surface_view.nilreason
	FROM 
		partial_elevated_surface_view
	WHERE 
		partial_elevated_surface_view.total_count > 2 
		AND
		partial_elevated_surface_view.interpretation != 4
	ORDER BY
		id, 
		xml_id, 
		part,
		increment
),
g2_segment_filtered AS (
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		curr.geom AS geom,
		curr.elevation,
		curr.elevation_uom,
		curr.elevation_nilreason,
		curr.geoidundulation,
		curr.geoidundulation_uom,
		curr.geoidundulation_nilreason,
		curr.horizontalaccuracy,
		curr.horizontalaccuracy_uom,
		curr.horizontalaccuracy_nilreason,
		curr.verticalaccuracy,
		curr.verticalaccuracy_uom,
		curr.verticalaccuracy_nilreason,
		curr.verticaldatum,
		curr.verticaldatum_nilreason,
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
		g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, before.geom) 
		AND 
		ST_Intersects(curr.geom, after.geom)
		AND 
		before.interpretation = 4
		AND 
		after.interpretation = 4
	UNION ALL
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.start_segment])) AS geom,
		curr.elevation,
		curr.elevation_uom,
		curr.elevation_nilreason,
		curr.geoidundulation,
		curr.geoidundulation_uom,
		curr.geoidundulation_nilreason,
		curr.horizontalaccuracy,
		curr.horizontalaccuracy_uom,
		curr.horizontalaccuracy_nilreason,
		curr.verticalaccuracy,
		curr.verticalaccuracy_uom,
		curr.verticalaccuracy_nilreason,
		curr.verticaldatum,
		curr.verticaldatum_nilreason,
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
		g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, curr.start_segment)  
		AND 
		ST_Intersects(curr.geom, after.geom)
		AND 
		before.interpretation != 4
		AND 
		after.interpretation = 4
	UNION ALL
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment])) AS geom,
		curr.elevation,
		curr.elevation_uom,
		curr.elevation_nilreason,
		curr.geoidundulation,
		curr.geoidundulation_uom,
		curr.geoidundulation_nilreason,
		curr.horizontalaccuracy,
		curr.horizontalaccuracy_uom,
		curr.horizontalaccuracy_nilreason,
		curr.verticalaccuracy,
		curr.verticalaccuracy_uom,
		curr.verticalaccuracy_nilreason,
		curr.verticaldatum,
		curr.verticaldatum_nilreason,
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
		g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, before.geom) 
		AND 
		ST_Intersects(curr.geom, curr.end_segment)
		AND 
		before.interpretation = 4
		AND 
		after.interpretation != 4
	UNION ALL
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment, curr.start_segment])) AS geom,
		curr.elevation,
		curr.elevation_uom,
		curr.elevation_nilreason,
		curr.geoidundulation,
		curr.geoidundulation_uom,
		curr.geoidundulation_nilreason,
		curr.horizontalaccuracy,
		curr.horizontalaccuracy_uom,
		curr.horizontalaccuracy_nilreason,
		curr.verticalaccuracy,
		curr.verticalaccuracy_uom,
		curr.verticalaccuracy_nilreason,
		curr.verticaldatum,
		curr.verticaldatum_nilreason,
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
	g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, curr.start_segment) 
		AND 
		ST_Intersects(curr.geom, curr.end_segment)
		AND 
		before.interpretation != 4
		AND 
		after.interpretation != 4
	UNION ALL
	SELECT
		g2_segment.id, 
		g2_segment.xml_id,
		g2_segment.curve_xml_id,
		g2_segment.part,
		g2_segment.increment,
		g2_segment.geom,
		g2_segment.elevation,
		g2_segment.elevation_uom,
		g2_segment.elevation_nilreason,
		g2_segment.geoidundulation,
		g2_segment.geoidundulation_uom,
		g2_segment.geoidundulation_nilreason,
		g2_segment.horizontalaccuracy,
		g2_segment.horizontalaccuracy_uom,
		g2_segment.horizontalaccuracy_nilreason,
		g2_segment.verticalaccuracy,
		g2_segment.verticalaccuracy_uom,
		g2_segment.verticalaccuracy_nilreason,
		g2_segment.verticaldatum,
		g2_segment.verticaldatum_nilreason,
		g2_segment.nilreason
	FROM 
		g2_segment
	WHERE 
		g2_segment.interpretation != 4
	ORDER BY
		id, 
		xml_id, 
		part,
		increment
),
r1 AS (
	SELECT
		partial_elevated_surface_view.id,
		partial_elevated_surface_view.xml_id,
		partial_elevated_surface_view.curve_xml_id,
		partial_elevated_surface_view.part,
		partial_elevated_surface_view.geom,
		partial_elevated_surface_view.elevation,
		partial_elevated_surface_view.elevation_uom,
		partial_elevated_surface_view.elevation_nilreason,
		partial_elevated_surface_view.geoidundulation,
		partial_elevated_surface_view.geoidundulation_uom,
		partial_elevated_surface_view.geoidundulation_nilreason,
		partial_elevated_surface_view.horizontalaccuracy,
		partial_elevated_surface_view.horizontalaccuracy_uom,
		partial_elevated_surface_view.horizontalaccuracy_nilreason,
		partial_elevated_surface_view.verticalaccuracy,
		partial_elevated_surface_view.verticalaccuracy_uom,
		partial_elevated_surface_view.verticalaccuracy_nilreason,
		partial_elevated_surface_view.verticaldatum,
		partial_elevated_surface_view.verticaldatum_nilreason,
		partial_elevated_surface_view.nilreason
	FROM
		partial_elevated_surface_view
	WHERE
		ST_IsClosed(partial_elevated_surface_view.geom) = true
		AND 
		partial_elevated_surface_view.total_count = 1
		AND 
		ST_NPoints(geom) >= 4
),
r2 AS (
	SELECT
		partial_elevated_surface_view.id,
		partial_elevated_surface_view.xml_id,
		partial_elevated_surface_view.curve_xml_id,
		partial_elevated_surface_view.part,
		ST_AddPoint(partial_elevated_surface_view.geom, ST_StartPoint(partial_elevated_surface_view.geom)) AS geom,
		partial_elevated_surface_view.elevation,
		partial_elevated_surface_view.elevation_uom,
		partial_elevated_surface_view.elevation_nilreason,
		partial_elevated_surface_view.geoidundulation,
		partial_elevated_surface_view.geoidundulation_uom,
		partial_elevated_surface_view.geoidundulation_nilreason,
		partial_elevated_surface_view.horizontalaccuracy,
		partial_elevated_surface_view.horizontalaccuracy_uom,
		partial_elevated_surface_view.horizontalaccuracy_nilreason,
		partial_elevated_surface_view.verticalaccuracy,
		partial_elevated_surface_view.verticalaccuracy_uom,
		partial_elevated_surface_view.verticalaccuracy_nilreason,
		partial_elevated_surface_view.verticaldatum,
		partial_elevated_surface_view.verticaldatum_nilreason,
		partial_elevated_surface_view.nilreason
	FROM
		partial_elevated_surface_view
	WHERE
		ST_IsClosed(partial_elevated_surface_view.geom) = false
		AND 
		partial_elevated_surface_view.total_count = 1
		AND 
		ST_NPoints(ST_AddPoint(partial_elevated_surface_view.geom, ST_StartPoint(partial_elevated_surface_view.geom))) >= 4		
),
g1 AS (
	SELECT 
		ring.id,
		ring.xml_id || geoborder.xml_id AS xml_id,
		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
		ring.part,
		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
		ring.elevation,
		ring.elevation_uom,
		ring.elevation_nilreason,
		ring.geoidundulation,
		ring.geoidundulation_uom,
		ring.geoidundulation_nilreason,
		ring.horizontalaccuracy,
		ring.horizontalaccuracy_uom,
		ring.horizontalaccuracy_nilreason,
		ring.verticalaccuracy,
		ring.verticalaccuracy_uom,
		ring.verticalaccuracy_nilreason,
		ring.verticaldatum,
		ring.verticaldatum_nilreason,
		ring.nilreason
	FROM
	g1_segment ring
	JOIN
	g1_segment geoborder
	ON 
		ring.xml_id = geoborder.xml_id
		AND
		geoborder.part = geoborder.part
		AND 
		ring.increment <> geoborder.increment
	WHERE
		ST_Intersects(geoborder.geom, geoborder.start_segment) 
		AND 
		ST_Intersects(geoborder.geom, geoborder.end_segment)
		AND 
		NOT ST_Intersects(geoborder.start_segment, geoborder.end_segment)
		AND
		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
	UNION ALL
	SELECT DISTINCT 
		ring.id,
		ring.xml_id || geoborder.xml_id AS xml_id,
		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
		ring.part,
		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
		ring.elevation,
		ring.elevation_uom,
		ring.elevation_nilreason,
		ring.geoidundulation,
		ring.geoidundulation_uom,
		ring.geoidundulation_nilreason,
		ring.horizontalaccuracy,
		ring.horizontalaccuracy_uom,
		ring.horizontalaccuracy_nilreason,
		ring.verticalaccuracy,
		ring.verticalaccuracy_uom,
		ring.verticalaccuracy_nilreason,
		ring.verticaldatum,
		ring.verticaldatum_nilreason,
		ring.nilreason
	FROM
	g1_segment ring
	JOIN
	g1_segment geoborder
	ON 
		ring.xml_id = geoborder.xml_id
		AND
		geoborder.part = geoborder.part
		AND 
		ring.increment <> geoborder.increment
	WHERE
		ST_Intersects(geoborder.geom, geoborder.start_segment) 
		AND 
		ST_Intersects(geoborder.geom, geoborder.end_segment)
		AND 
		ST_Intersects(geoborder.start_segment, geoborder.end_segment)
		AND
		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
),
g2 AS (	
	SELECT 
		MIN(g2_segment_filtered.id) AS id,
		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
		MIN(g2_segment_filtered.part) AS part,
		ST_LineMerge(ST_Collect(g2_segment_filtered.geom)) AS geom,
		MAX(g2_segment_filtered.elevation) AS elevation,
		MAX(g2_segment_filtered.elevation_uom) AS elevation_uom,
		MAX(g2_segment_filtered.elevation_nilreason) AS elevation_nilreason,
		MAX(g2_segment_filtered.geoidundulation) AS geoidundulation,
		MAX(g2_segment_filtered.geoidundulation_uom) AS geoidundulation_uom,
		MAX(g2_segment_filtered.geoidundulation_nilreason) AS geoidundulation_nilreason,
		MAX(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
		MAX(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
		MAX(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
		MAX(g2_segment_filtered.verticalaccuracy) AS verticalaccuracy,
		MAX(g2_segment_filtered.verticalaccuracy_uom) AS verticalaccuracy_uom,
		MAX(g2_segment_filtered.verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
		MAX(g2_segment_filtered.verticaldatum) AS verticaldatum,
		MAX(g2_segment_filtered.verticaldatum_nilreason) AS verticaldatum_nilreason,
		MAX(g2_segment_filtered.nilreason) AS nilreason
	FROM
		g2_segment_filtered
	GROUP BY
		g2_segment_filtered.id,
		g2_segment_filtered.xml_id,
		g2_segment_filtered.part
	HAVING
		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = true
		AND
		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
		AND 
		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
	UNION ALL
	SELECT 
		MIN(g2_segment_filtered.id) AS id,
		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
		MIN(g2_segment_filtered.part) AS part,
		ST_AddPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)), ST_StartPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)))) AS geom,
		MAX(g2_segment_filtered.elevation) AS elevation,
		MAX(g2_segment_filtered.elevation_uom) AS elevation_uom,
		MAX(g2_segment_filtered.elevation_nilreason) AS elevation_nilreason,
		MAX(g2_segment_filtered.geoidundulation) AS geoidundulation,
		MAX(g2_segment_filtered.geoidundulation_uom) AS geoidundulation_uom,
		MAX(g2_segment_filtered.geoidundulation_nilreason) AS geoidundulation_nilreason,
		MAX(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
		MAX(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
		MAX(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
		MAX(g2_segment_filtered.verticalaccuracy) AS verticalaccuracy,
		MAX(g2_segment_filtered.verticalaccuracy_uom) AS verticalaccuracy_uom,
		MAX(g2_segment_filtered.verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
		MAX(g2_segment_filtered.verticaldatum) AS verticaldatum,
		MAX(g2_segment_filtered.verticaldatum_nilreason) AS verticaldatum_nilreason,
		MAX(g2_segment_filtered.nilreason) AS nilreason
	FROM
		g2_segment_filtered
	GROUP BY
		g2_segment_filtered.id,
		g2_segment_filtered.xml_id,
		g2_segment_filtered.part
	HAVING
		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = false
		AND
		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
		AND 
		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
),
combined_data AS (
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
		geom,
		part,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        r1
    UNION ALL
    SELECT 
        id, 
        xml_id,
		curve_xml_id,
        geom,
        part,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        r2
    UNION ALL
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        geom,
        part,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        g1
    UNION ALL
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        geom,
        part,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        g2
),
outer_shells AS (
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        ST_MakePolygon(geom) AS geom,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        combined_data
    WHERE 
        part = 0
),
inner_shells AS (
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        geom,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        combined_data
    WHERE 
        part <> 0
)
SELECT 
    outer_shells.id, 
    ST_MakePolygon(
        ST_ExteriorRing(outer_shells.geom),
        ARRAY(
            SELECT ST_ExteriorRing(inner_shells.geom)
            FROM inner_shells 
            WHERE inner_shells.id = outer_shells.id
        )
    ) AS geom,
	COALESCE(outer_shells.elevation || ' ' || outer_shells.elevation_uom, '(' || outer_shells.elevation_nilreason || ')') AS elevation,
	COALESCE(outer_shells.geoidundulation || ' ' || outer_shells.geoidundulation_uom, '(' || outer_shells.geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(outer_shells.verticaldatum || ' ' || outer_shells.outer_shells.geoidundulation_uom, '(' || outer_shells.geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(CAST(outer_shells.verticalaccuracy AS varchar), '(' || outer_shells.verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(outer_shells.horizontalaccuracy || ' ' || outer_shells.horizontalaccuracy_uom, '(' || outer_shells.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM 
outer_shells;
create or replace view notes.linguisticnote_view as
select
    notes.linguisticnote_pt.id,
    jsonb_agg(notes.note_view.note) AS linguisticnote_annotation,
    notes.linguisticnote_pt.nilreason AS linguisticnote_annotation,
    coalesce(cast(notes.linguisticnote.note_value as varchar) || ' ' || notes.linguisticnote.note_nilreason, '(' || notes.linguisticnote.note_lang || ')') as note
from notes.linguisticnote_pt 
inner join notes.linguisticnote on notes.linguisticnote_pt.linguisticnote_id = notes.linguisticnote.id
left join master_join mj1 on notes.linguisticnote.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
group by
    notes.linguisticnote_pt.id,
    notes.linguisticnote_pt.nilreason,
    notes.linguisticnote.note_value,
    notes.linguisticnote.note_nilreason,
    notes.linguisticnote.note_lang;
-- Snowflake SQL : PointPropertyType

CREATE MATERIALIZED VIEW geometry.point_view AS
SELECT
    id, 
	point as geom,
	COALESCE(horizontalaccuracy || ' ' || horizontalaccuracy_uom, '(' || horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM point_pt;
create or replace view shared.propertieswithschedule_view as
select
    shared.propertieswithschedule_pt.id,
    jsonb_agg(notes.note_view.note) AS propertieswithschedule_annotation,
    shared.propertieswithschedule_pt.nilreason AS propertieswithschedule_annotation
from shared.propertieswithschedule_pt 
inner join shared.propertieswithschedule on shared.propertieswithschedule_pt.propertieswithschedule_id = shared.propertieswithschedule.id
left join master_join mj1 on shared.propertieswithschedule.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
group by
    shared.propertieswithschedule_pt.id,
    shared.propertieswithschedule_pt.nilreason;
create or replace view navaids_points.segmentpoint_view as
select
    navaids_points.segmentpoint_pt.id,
    jsonb_agg(notes.note_view.note) AS segmentpoint_annotation,
    navaids_points.segmentpoint_pt.nilreason AS segmentpoint_annotation
from navaids_points.segmentpoint_pt 
inner join navaids_points.segmentpoint on navaids_points.segmentpoint_pt.segmentpoint_id = navaids_points.segmentpoint.id
left join master_join mj1 on navaids_points.segmentpoint.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
group by
    navaids_points.segmentpoint_pt.id,
    navaids_points.segmentpoint_pt.nilreason;
create or replace view airport_heliport.surfacecontamination_view as
select
    airport_heliport.surfacecontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS surfacecontamination_annotation,
    airport_heliport.surfacecontamination_pt.nilreason AS surfacecontamination_annotation
from airport_heliport.surfacecontamination_pt 
inner join airport_heliport.surfacecontamination on airport_heliport.surfacecontamination_pt.surfacecontamination_id = airport_heliport.surfacecontamination.id
left join master_join mj1 on airport_heliport.surfacecontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
group by
    airport_heliport.surfacecontamination_pt.id,
    airport_heliport.surfacecontamination_pt.nilreason;
-- Snowflake SQL : SurfacePropertyType

CREATE MATERIALIZED VIEW partial_surface_view AS
WITH  
segment_ref AS(
	SELECT 
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		SUBSTRING(
	        curve_ref 
	        FROM '([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$'
	    ) AS uuid
    FROM public.polygon_segment 
	WHERE public.polygon_segment.interpretation = 4
),
segment_value AS(
	SELECT 
		airspace.geoborder.identifier AS uuid,
		geom
	FROM airspace.geoborder
	INNER JOIN public.geoborder_timeslice
		ON airspace.geoborder.id = public.geoborder_timeslice.geoborder_id
	INNER JOIN airspace.geoborder_tsp
		ON public.geoborder_timeslice.geoborder_tsp_id = airspace.geoborder_tsp.id
	INNER JOIN airspace.geoborder_ts
		ON airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
	INNER JOIN public.curve_pt
		ON airspace.geoborder_ts.border_id = public.curve_pt.id
	INNER JOIN geometry.curve_view
		ON public.curve_pt.id = geometry.curve_view.id
),
center AS (
    SELECT 
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 256 AS step_size
    FROM public.polygon_segment 
	WHERE public.polygon_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 256 AS step_size
    FROM public.polygon_segment 
	WHERE public.polygon_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 256) AS n, 	
        center
),
arc_line AS (
    SELECT 
        id,
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
        ST_MakeLine(point_geom) AS geom
    FROM interpolated_points
    GROUP BY 
		id, 
		curve_xml_id,
		part, 
		member, 
		sequence, 
		interpretation
),
segment_union AS (
    SELECT 
        id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_ReducePrecision(linestring, 0.000000000000001) AS geom,
		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
    FROM 
        public.polygon_segment 
    WHERE 
        public.polygon_segment.interpretation = 0
    UNION ALL 
    SELECT 
        id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
        ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 10000)::geometry as geom,
		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
    FROM 
        public.polygon_segment 
    WHERE 
        public.polygon_segment.interpretation = 1
	UNION ALL
	SELECT
		id, 
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
	FROM
		arc_line
	UNION ALL
	SELECT
		id,
		curve_xml_id,
		part,
		member,
		sequence,
		interpretation,
		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
	FROM segment_ref
	INNER JOIN segment_value
	ON segment_ref.uuid = segment_value.uuid		
),
segement_ownership AS (
	SELECT 
		public.surface_pt.id,
        public.surface_pt.xml_id,
		segment_union.curve_xml_id,
		segment_union.part AS part,
		segment_union.member AS member,
		segment_union.sequence AS sequence,
		segment_union.interpretation AS interpretation,
		segment_union.geom AS geom,
		segment_union.first_point as first_point,
		segment_union.last_point as last_point,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        public.surface_pt
    INNER JOIN 
        public.surface_exterior 
        ON public.surface_pt.id = public.surface_exterior.surfacepropertytype_id
    INNER JOIN 
        segment_union 
        ON public.surface_exterior.exteriorlinestring_id = segment_union.id
	UNION ALL
	SELECT 
		public.surface_pt.id,
        public.surface_pt.xml_id,
		segment_union.curve_xml_id,
		segment_union.part AS part,
		segment_union.member AS member,
		segment_union.sequence AS sequence,
		segment_union.interpretation AS interpretation,
		segment_union.geom AS geom,
		segment_union.first_point AS first_point,
		segment_union.last_point AS last_point,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        public.surface_pt
    INNER JOIN 
        public.surface_interior 
        ON public.surface_pt.id = public.surface_interior.surfacepropertytype_id
    INNER JOIN 
        segment_union 
        ON public.surface_interior.interiorlinestring_id = segment_union.id
),
ordered_segments AS (
    SELECT 
		id,
        xml_id, 
		curve_xml_id,
        part,
		member,
        sequence,
		interpretation,
        geom,
        first_point, 
        last_point,
		ST_IsClosed(segement_ownership.geom) AS closed,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        segement_ownership
    ORDER BY 
        xml_id, 
		part, 
		member, 
		sequence
),
connecting_segments AS (
    SELECT 
        id,
		xml_id,
		curve_xml_id,
        part,
		member,
        sequence,
		interpretation,
        geom,
        first_point,
        last_point,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        ordered_segments
    UNION ALL
    SELECT 
        curr.id,
		curr.xml_id,
		Null AS curve_xml_id,
        curr.part,
		curr.member,
        curr.sequence + 0.5 AS sequence,
		1,
        ST_MakeLine(curr.last_point, next.first_point) AS geom,
        curr.last_point AS first_point,
        next.first_point AS last_point,
		curr.horizontalaccuracy,
		curr.horizontalaccuracy_uom,
		curr.horizontalaccuracy_nilreason,
		curr.nilreason
    FROM 
        ordered_segments curr
    JOIN 
        ordered_segments next
    ON 
        curr.xml_id = next.xml_id
        AND curr.part = next.part
        AND curr.sequence + 1 = next.sequence
		AND curr.member = next.member
	WHERE 
		ST_IsClosed(curr.geom) = false
		AND
		curr.interpretation != 4
		AND
		next.interpretation != 4
    UNION ALL
    SELECT 
        curr.id,
		curr.xml_id,
		Null AS curve_xml_id,
        curr.part,
		curr.member + 0.5 AS member,
        curr.sequence,
		1,
        ST_MakeLine(curr.last_point, next.first_point) AS geom,
        curr.last_point AS first_point,
        next.first_point AS last_point,
		curr.horizontalaccuracy,
		curr.horizontalaccuracy_uom,
		curr.horizontalaccuracy_nilreason,
		curr.nilreason
    FROM 
        ordered_segments curr
    JOIN 
        ordered_segments next
    ON 
        curr.xml_id = next.xml_id
        AND curr.part = next.part
        AND curr.member + 1 = next.member
	WHERE 
		ST_IsClosed(curr.geom) = false
		AND
		curr.interpretation != 4
		AND
		next.interpretation != 4
    ORDER BY 
        xml_id, 
        part, 
        member,
        sequence
),
clustered_segments AS (
    SELECT 
        id, 
        xml_id,
		curve_xml_id,
        part,
        member,
        geom,
		interpretation,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
        nilreason,
        ST_ClusterDBSCAN(geom, eps := 0, minpoints := 1) OVER (PARTITION BY xml_id, part)  AS cluster_id
    FROM 
        connecting_segments
    WHERE 
        interpretation != 4
	UNION ALL
    SELECT 
        id, 
		xml_id,
		curve_xml_id,
        part,
        member,
        geom,
		interpretation,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
        nilreason,
        Null AS cluster_id
    FROM 
        connecting_segments
    WHERE 
        interpretation = 4
	ORDER BY
		xml_id,
		part, 
		member
),
partial_ring AS (
    SELECT 
        id, 
        xml_id,
		ARRAY_AGG(curve_xml_id) as curve_xml_id,
        part,
        MIN(member) AS member,
		MIN(interpretation) AS interpretation,
        ST_IsClosed(ST_LineMerge(ST_Collect(geom))) AS closed,
        ST_GeometryType(ST_LineMerge(ST_Collect(geom))) AS type, 
        ST_LineMerge(ST_Collect(geom)) AS geom,
        NULL::geometry AS points,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
        nilreason
    FROM 
        clustered_segments
	WHERE 
		interpretation != 4
    GROUP BY 
		id,
        xml_id, 
        part, 
        cluster_id,
        horizontalaccuracy, 
        horizontalaccuracy_uom, 
        horizontalaccuracy_nilreason,	
        nilreason
	UNION ALL
    SELECT 
        id, 
        xml_id,
		ARRAY[curve_xml_id] AS curve_xml_id,
        part,
        member,
		interpretation,
        ST_IsClosed(geom) AS closed,
        ST_GeometryType(geom) AS type, 
		geom AS geom,
		ST_Points(geom) AS points,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
        nilreason
    FROM 
        clustered_segments
	WHERE 
		interpretation = 4
	ORDER BY 
        xml_id, 
		part, 
		member
),
output AS (
    SELECT 
        pr.id, 
        pr.xml_id,
		pr.curve_xml_id,
        pr.part,
		ROW_NUMBER() OVER (PARTITION BY xml_id, part ORDER BY id) - 1 AS increment,
		COUNT(*) OVER (PARTITION BY xml_id, part ) AS total_count,
		pr.interpretation,
		pr.points,
        COALESCE(dumped.geom, pr.geom) AS geom,
        pr.horizontalaccuracy,
        pr.horizontalaccuracy_uom,
        pr.horizontalaccuracy_nilreason,
        pr.nilreason
    FROM 
        partial_ring pr
    LEFT JOIN LATERAL (
        SELECT (ST_Dump(pr.geom)).geom
        WHERE ST_GeometryType(pr.geom) = 'ST_MultiLineString'
    ) dumped ON true
	ORDER BY
		xml_id, 
		part, 
		member
)
SELECT 
	ST_GeometryType(geom),
	output.id, 
	to_jsonb(output.xml_id) AS xml_id,
	to_jsonb(output.curve_xml_id) AS curve_xml_id,
	output.part,
	output.increment,
	output.total_count,
	output.interpretation,
	output.geom,
	output.points,
	output.horizontalaccuracy,
	output.horizontalaccuracy_uom,
	output.horizontalaccuracy_nilreason,
	output.nilreason
FROM
	output;

-- R1 : Simple feature, closed
-- R2 : Simple feature, unclosed
-- G1 : Complex feature wiht a single geoborder, 
-- G2 : Complex feature with multiple geoborder,
CREATE MATERIALIZED VIEW geometry.surface_view AS
WITH 
g1_segment AS (
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		(ST_Dump(
		  ST_Split(
			geoborder.geom,
			ST_Union(
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)),
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(ring.geom))
			)
		  )
		)).geom AS geom,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)) AS  start_segment,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(ring.geom)) AS end_segment,
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	FROM 
		partial_surface_view geoborder
	JOIN
		partial_surface_view ring
	ON 
        ring.xml_id = geoborder.xml_id
		AND
		ring.part = geoborder.part
		AND 
		ring.increment <> geoborder.increment
	WHERE 
		geoborder.total_count = 2
		AND
		geoborder.interpretation = 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.geom, 
		geoborder.increment,
		geoborder.interpretation,
		geoborder.geom, 
		ring.geom,
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	UNION ALL
	SELECT
		partial_surface_view.id, 
		partial_surface_view.xml_id,
		partial_surface_view.curve_xml_id,
		partial_surface_view.part,
		partial_surface_view.increment,
		partial_surface_view.interpretation,
		partial_surface_view.geom,
		Null::geometry AS start_segment,
		Null::geometry AS end_segment,
		partial_surface_view.horizontalaccuracy, 
		partial_surface_view.horizontalaccuracy_uom, 
		partial_surface_view.horizontalaccuracy_nilreason, 
		partial_surface_view.nilreason
	FROM 
		partial_surface_view
	WHERE 
		partial_surface_view.total_count = 2 
		AND
		partial_surface_view.interpretation != 4
	ORDER BY
		id, 
		xml_id, 
		part,
		increment
),
g2_segment AS (
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		geoborder.geom AS geom,
		Null::geometry AS  start_segment,
		Null::geometry AS end_segment,
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	FROM 
		partial_surface_view geoborder
	JOIN
		partial_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation = 4
		AND 
		after.interpretation = 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	UNION ALL
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		(ST_Dump(
		  ST_Split(
			geoborder.geom,
			ST_Union(
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom)),
				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
			)
		  )
		)).geom AS geom,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	FROM 
		partial_surface_view geoborder
	JOIN
		partial_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation != 4
		AND 
		after.interpretation != 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	UNION ALL
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		(ST_Dump(
		  ST_Split(
			geoborder.geom, ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom))
			)
		  )
		).geom AS geom,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
		Null::geometry AS end_segment,
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	FROM 
		partial_surface_view geoborder
	JOIN
		partial_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation != 4
		AND 
		after.interpretation = 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id, 
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	UNION ALL
	SELECT
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		(ST_Dump(
		  ST_Split(
			geoborder.geom,	ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
			)
		  )
		).geom AS geom,
		Null::geometry AS  start_segment,
		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	FROM 
		partial_surface_view geoborder
	JOIN
		partial_surface_view before
	ON 
        before.xml_id = geoborder.xml_id
		AND
		before.part = geoborder.part
	    AND (
	        before.increment = geoborder.increment - 1
	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
	    )
	JOIN
		partial_surface_view after
	ON 
        after.xml_id = geoborder.xml_id
		AND
		after.part = geoborder.part
	    AND (
	        after.increment = geoborder.increment + 1
	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
	    )
	WHERE 
		geoborder.total_count > 2 
		AND
		geoborder.interpretation = 4
		AND 
		before.interpretation = 4
		AND 
		after.interpretation != 4
	GROUP BY
		geoborder.id, 
		geoborder.xml_id,
		geoborder.curve_xml_id,
		geoborder.part,
		before.geom, 
		after.geom,
		geoborder.increment,
		geoborder.interpretation,
		geoborder.total_count,
		before.increment,
		after.increment,
		geoborder.geom, 
		geoborder.horizontalaccuracy, 
		geoborder.horizontalaccuracy_uom, 
		geoborder.horizontalaccuracy_nilreason, 
		geoborder.nilreason
	UNION ALL
	SELECT
		partial_surface_view.id, 
		partial_surface_view.xml_id,
		partial_surface_view.curve_xml_id,
		partial_surface_view.part,
		partial_surface_view.increment,
		partial_surface_view.interpretation,
		partial_surface_view.total_count,
		partial_surface_view.geom,
		Null::geometry AS start_segment,
		Null::geometry AS end_segment,
		partial_surface_view.horizontalaccuracy, 
		partial_surface_view.horizontalaccuracy_uom, 
		partial_surface_view.horizontalaccuracy_nilreason, 
		partial_surface_view.nilreason
	FROM 
		partial_surface_view
	WHERE 
		partial_surface_view.total_count > 2 
		AND
		partial_surface_view.interpretation != 4
	ORDER BY
		id, 
		xml_id, 
		part,
		increment
),
g2_segment_filtered AS (
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		curr.geom AS geom,
		curr.horizontalaccuracy, 
		curr.horizontalaccuracy_uom, 
		curr.horizontalaccuracy_nilreason, 
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
		g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, before.geom) 
		AND 
		ST_Intersects(curr.geom, after.geom)
		AND 
		before.interpretation = 4
		AND 
		after.interpretation = 4
	UNION ALL
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.start_segment])) AS geom,
		curr.horizontalaccuracy, 
		curr.horizontalaccuracy_uom, 
		curr.horizontalaccuracy_nilreason, 
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
		g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, curr.start_segment)  
		AND 
		ST_Intersects(curr.geom, after.geom)
		AND 
		before.interpretation != 4
		AND 
		after.interpretation = 4
	UNION ALL
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment])) AS geom,
		curr.horizontalaccuracy, 
		curr.horizontalaccuracy_uom, 
		curr.horizontalaccuracy_nilreason, 
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
		g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, before.geom) 
		AND 
		ST_Intersects(curr.geom, curr.end_segment)
		AND 
		before.interpretation = 4
		AND 
		after.interpretation != 4
	UNION ALL
	SELECT 
		curr.id, 
		curr.xml_id,
		curr.curve_xml_id,
		curr.part,
		curr.increment,
		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment, curr.start_segment])) AS geom,
		curr.horizontalaccuracy, 
		curr.horizontalaccuracy_uom, 
		curr.horizontalaccuracy_nilreason, 
		curr.nilreason
	FROM
		g2_segment curr
	JOIN
		g2_segment before
	ON 
        before.xml_id = curr.xml_id
		AND
		before.part = curr.part
	    AND (
	        before.increment = curr.increment - 1
	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
	    )
	JOIN	
	g2_segment after
	ON 
        after.xml_id = curr.xml_id
		AND
		after.part = curr.part
	    AND (
	        after.increment = curr.increment + 1
	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
	    )
	WHERE 
		curr.interpretation = 4
		AND
		ST_Intersects(curr.geom, curr.start_segment) 
		AND 
		ST_Intersects(curr.geom, curr.end_segment)
		AND 
		before.interpretation != 4
		AND 
		after.interpretation != 4
	UNION ALL
	SELECT
		g2_segment.id, 
		g2_segment.xml_id,
		g2_segment.curve_xml_id,
		g2_segment.part,
		g2_segment.increment,
		g2_segment.geom,
		g2_segment.horizontalaccuracy, 
		g2_segment.horizontalaccuracy_uom, 
		g2_segment.horizontalaccuracy_nilreason, 
		g2_segment.nilreason
	FROM 
		g2_segment
	WHERE 
		g2_segment.interpretation != 4
	ORDER BY
		id, 
		xml_id, 
		part,
		increment
),
r1 AS (
	SELECT
		partial_surface_view.id,
		partial_surface_view.xml_id,
		partial_surface_view.curve_xml_id,
		partial_surface_view.part,
		partial_surface_view.geom,
		partial_surface_view.horizontalaccuracy,
		partial_surface_view.horizontalaccuracy_uom,
		partial_surface_view.horizontalaccuracy_nilreason,
		partial_surface_view.nilreason
	FROM
		partial_surface_view
	WHERE
		ST_IsClosed(partial_surface_view.geom) = true
		AND 
		partial_surface_view.total_count = 1
		AND 
		ST_NPoints(geom) >= 4
),
r2 AS (
	SELECT
		partial_surface_view.id,
		partial_surface_view.xml_id,
		partial_surface_view.curve_xml_id,
		partial_surface_view.part,
		ST_AddPoint(partial_surface_view.geom, ST_StartPoint(partial_surface_view.geom)) AS geom,
		partial_surface_view.horizontalaccuracy,
		partial_surface_view.horizontalaccuracy_uom,
		partial_surface_view.horizontalaccuracy_nilreason,
		partial_surface_view.nilreason
	FROM
		partial_surface_view
	WHERE
		ST_IsClosed(partial_surface_view.geom) = false
		AND 
		partial_surface_view.total_count = 1
		AND 
		ST_NPoints(ST_AddPoint(partial_surface_view.geom, ST_StartPoint(partial_surface_view.geom))) >= 4		
),
g1 AS (
	SELECT 
		ring.id,
		ring.xml_id || geoborder.xml_id AS xml_id,
		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
		ring.part,
		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
		ring.horizontalaccuracy,
		ring.horizontalaccuracy_uom,
		ring.horizontalaccuracy_nilreason,
		ring.nilreason
	FROM
	g1_segment ring
	JOIN
	g1_segment geoborder
	ON 
		ring.xml_id = geoborder.xml_id
		AND
		geoborder.part = geoborder.part
		AND 
		ring.increment <> geoborder.increment
	WHERE
		ST_Intersects(geoborder.geom, geoborder.start_segment) 
		AND 
		ST_Intersects(geoborder.geom, geoborder.end_segment)
		AND 
		NOT ST_Intersects(geoborder.start_segment, geoborder.end_segment)
		AND
		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
	UNION ALL
	SELECT DISTINCT 
		ring.id,
		ring.xml_id || geoborder.xml_id AS xml_id,
		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
		ring.part,
		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
		ring.horizontalaccuracy,
		ring.horizontalaccuracy_uom,
		ring.horizontalaccuracy_nilreason,
		ring.nilreason
	FROM
	g1_segment ring
	JOIN
	g1_segment geoborder
	ON 
		ring.xml_id = geoborder.xml_id
		AND
		geoborder.part = geoborder.part
		AND 
		ring.increment <> geoborder.increment
	WHERE
		ST_Intersects(geoborder.geom, geoborder.start_segment) 
		AND 
		ST_Intersects(geoborder.geom, geoborder.end_segment)
		AND 
		ST_Intersects(geoborder.start_segment, geoborder.end_segment)
		AND
		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
),
g2 AS (	
	SELECT 
		MIN(g2_segment_filtered.id) AS id,
		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
		MIN(g2_segment_filtered.part) AS part,
		ST_LineMerge(ST_Collect(g2_segment_filtered.geom)) AS geom,
		MIN(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
		MIN(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
		MIN(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
		MIN(g2_segment_filtered.nilreason) AS nilreason
	FROM
		g2_segment_filtered
	GROUP BY
		g2_segment_filtered.id,
		g2_segment_filtered.xml_id,
		g2_segment_filtered.part
	HAVING
		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = true
		AND
		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
		AND 
		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
	UNION ALL
	SELECT 
		MIN(g2_segment_filtered.id) AS id,
		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
		MIN(g2_segment_filtered.part) AS part,
		ST_AddPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)), ST_StartPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)))) AS geom,
		MIN(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
		MIN(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
		MIN(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
		MIN(g2_segment_filtered.nilreason) AS nilreason
	FROM
		g2_segment_filtered
	GROUP BY
		g2_segment_filtered.id,
		g2_segment_filtered.xml_id,
		g2_segment_filtered.part
	HAVING
		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = false
		AND
		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
		AND 
		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
),
combined_data AS (
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
		geom,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
		nilreason,
        part
    FROM 
        r1
    UNION ALL
    SELECT 
        id, 
        xml_id,
		curve_xml_id,
        geom,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
		nilreason,
        part
    FROM 
        r2
    UNION ALL
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        geom,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
		nilreason,
        part
    FROM 
        g1
    UNION ALL
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        geom,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
		nilreason,
        part
    FROM 
        g2
),
outer_shells AS (
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        ST_MakePolygon(geom) AS geom,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
		nilreason
    FROM 
        combined_data
    WHERE 
        part = 0
),
inner_shells AS (
    SELECT 
        id, 
        xml_id, 
		curve_xml_id,
        geom,
        horizontalaccuracy,
        horizontalaccuracy_uom,
        horizontalaccuracy_nilreason,
		nilreason
    FROM 
        combined_data
    WHERE 
        part <> 0
)
SELECT 
    outer_shells.id,
    ST_MakePolygon(
        ST_ExteriorRing(outer_shells.geom),
        ARRAY(
            SELECT ST_ExteriorRing(inner_shells.geom)
            FROM inner_shells 
            WHERE inner_shells.id = outer_shells.id
        )
    ) AS geom,
	COALESCE(outer_shells.horizontalaccuracy || ' ' ||outer_shells. horizontalaccuracy_uom, '(' || outer_shells.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM 
outer_shells;
create or replace view airport_heliport.usagecondition_view as
select
    airport_heliport.usagecondition_pt.id,
    jsonb_agg(notes.note_view.note) AS usagecondition_annotation,
    airport_heliport.usagecondition_pt.nilreason AS usagecondition_annotation
from airport_heliport.usagecondition_pt 
inner join airport_heliport.usagecondition on airport_heliport.usagecondition_pt.usagecondition_id = airport_heliport.usagecondition.id
left join master_join mj1 on airport_heliport.usagecondition.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
group by
    airport_heliport.usagecondition_pt.id,
    airport_heliport.usagecondition_pt.nilreason;
create or replace view shared.aircraftcharacteristic_view as
select
    shared.aircraftcharacteristic_pt.id,
    jsonb_agg(notes.note_view.note) AS aircraftcharacteristic_annotation,
    shared.aircraftcharacteristic_pt.nilreason AS aircraftcharacteristic_annotation,
    coalesce(cast(shared.aircraftcharacteristic.type_value as varchar), '(' || shared.aircraftcharacteristic.type_nilreason || ')') as type,
    coalesce(cast(shared.aircraftcharacteristic.engine_value as varchar), '(' || shared.aircraftcharacteristic.engine_nilreason || ')') as engine,
    coalesce(cast(shared.aircraftcharacteristic.numberengine_value as varchar), '(' || shared.aircraftcharacteristic.numberengine_nilreason || ')') as numberengine,
    coalesce(cast(shared.aircraftcharacteristic.typeaircrafticao_value as varchar), '(' || shared.aircraftcharacteristic.typeaircrafticao_nilreason || ')') as typeaircrafticao,
    coalesce(cast(shared.aircraftcharacteristic.aircraftlandingcategory_value as varchar), '(' || shared.aircraftcharacteristic.aircraftlandingcategory_nilreason || ')') as aircraftlandingcategory,
    coalesce(cast(shared.aircraftcharacteristic.wingspaninterpretation_value as varchar), '(' || shared.aircraftcharacteristic.wingspaninterpretation_nilreason || ')') as wingspaninterpretation,
    coalesce(cast(shared.aircraftcharacteristic.classwingspan_value as varchar), '(' || shared.aircraftcharacteristic.classwingspan_nilreason || ')') as classwingspan,
    coalesce(cast(shared.aircraftcharacteristic.weightinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.weightinterpretation_nilreason || ')') as weightinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.passengers_value as varchar), '(' || shared.aircraftcharacteristic.passengers_nilreason || ')') as passengers,
    coalesce(cast(shared.aircraftcharacteristic.passengersinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.passengersinterpretation_nilreason || ')') as passengersinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.speedinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.waketurbulence_value as varchar), '(' || shared.aircraftcharacteristic.waketurbulence_nilreason || ')') as waketurbulence,
    coalesce(cast(shared.aircraftcharacteristic.navigationequipment_value as varchar), '(' || shared.aircraftcharacteristic.navigationequipment_nilreason || ')') as navigationequipment,
    coalesce(cast(shared.aircraftcharacteristic.navigationspecification_value as varchar), '(' || shared.aircraftcharacteristic.navigationspecification_nilreason || ')') as navigationspecification,
    coalesce(cast(shared.aircraftcharacteristic.verticalseparationcapability_value as varchar), '(' || shared.aircraftcharacteristic.verticalseparationcapability_nilreason || ')') as verticalseparationcapability,
    coalesce(cast(shared.aircraftcharacteristic.anticollisionandseparationequipment_value as varchar), '(' || shared.aircraftcharacteristic.anticollisionandseparationequipment_nilreason || ')') as anticollisionandseparationequipment,
    coalesce(cast(shared.aircraftcharacteristic.communicationequipment_value as varchar), '(' || shared.aircraftcharacteristic.communicationequipment_nilreason || ')') as communicationequipment,
    coalesce(cast(shared.aircraftcharacteristic.surveillanceequipment_value as varchar), '(' || shared.aircraftcharacteristic.surveillanceequipment_nilreason || ')') as surveillanceequipment,
    coalesce(cast(shared.aircraftcharacteristic.wingspan_value as varchar) || ' ' || shared.aircraftcharacteristic.wingspan_uom, '(' || shared.aircraftcharacteristic.wingspan_nilreason || ')') as wingspan,
    coalesce(cast(shared.aircraftcharacteristic.weight_value as varchar) || ' ' || shared.aircraftcharacteristic.weight_uom, '(' || shared.aircraftcharacteristic.weight_nilreason || ')') as weight,
    coalesce(cast(shared.aircraftcharacteristic.speed_value as varchar) || ' ' || shared.aircraftcharacteristic.speed_uom, '(' || shared.aircraftcharacteristic.speed_nilreason || ')') as speed
from shared.aircraftcharacteristic_pt 
inner join shared.aircraftcharacteristic on shared.aircraftcharacteristic_pt.aircraftcharacteristic_id = shared.aircraftcharacteristic.id
left join master_join mj1 on shared.aircraftcharacteristic.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.aircraftcharacteristic_pt.id,
    shared.aircraftcharacteristic_pt.nilreason,
    shared.aircraftcharacteristic.type_value,
    shared.aircraftcharacteristic.type_nilreason,
    shared.aircraftcharacteristic.engine_value,
    shared.aircraftcharacteristic.engine_nilreason,
    shared.aircraftcharacteristic.numberengine_value,
    shared.aircraftcharacteristic.numberengine_nilreason,
    shared.aircraftcharacteristic.typeaircrafticao_value,
    shared.aircraftcharacteristic.typeaircrafticao_nilreason,
    shared.aircraftcharacteristic.aircraftlandingcategory_value,
    shared.aircraftcharacteristic.aircraftlandingcategory_nilreason,
    shared.aircraftcharacteristic.wingspaninterpretation_value,
    shared.aircraftcharacteristic.wingspaninterpretation_nilreason,
    shared.aircraftcharacteristic.classwingspan_value,
    shared.aircraftcharacteristic.classwingspan_nilreason,
    shared.aircraftcharacteristic.weightinterpretation_value,
    shared.aircraftcharacteristic.weightinterpretation_nilreason,
    shared.aircraftcharacteristic.passengers_value,
    shared.aircraftcharacteristic.passengers_nilreason,
    shared.aircraftcharacteristic.passengersinterpretation_value,
    shared.aircraftcharacteristic.passengersinterpretation_nilreason,
    shared.aircraftcharacteristic.speedinterpretation_value,
    shared.aircraftcharacteristic.speedinterpretation_nilreason,
    shared.aircraftcharacteristic.waketurbulence_value,
    shared.aircraftcharacteristic.waketurbulence_nilreason,
    shared.aircraftcharacteristic.navigationequipment_value,
    shared.aircraftcharacteristic.navigationequipment_nilreason,
    shared.aircraftcharacteristic.navigationspecification_value,
    shared.aircraftcharacteristic.navigationspecification_nilreason,
    shared.aircraftcharacteristic.verticalseparationcapability_value,
    shared.aircraftcharacteristic.verticalseparationcapability_nilreason,
    shared.aircraftcharacteristic.anticollisionandseparationequipment_value,
    shared.aircraftcharacteristic.anticollisionandseparationequipment_nilreason,
    shared.aircraftcharacteristic.communicationequipment_value,
    shared.aircraftcharacteristic.communicationequipment_nilreason,
    shared.aircraftcharacteristic.surveillanceequipment_value,
    shared.aircraftcharacteristic.surveillanceequipment_nilreason,
    shared.aircraftcharacteristic.wingspan_value,
    shared.aircraftcharacteristic.wingspan_uom,
    shared.aircraftcharacteristic.wingspan_nilreason,
    shared.aircraftcharacteristic.weight_value,
    shared.aircraftcharacteristic.weight_uom,
    shared.aircraftcharacteristic.weight_nilreason,
    shared.aircraftcharacteristic.speed_value,
    shared.aircraftcharacteristic.speed_uom,
    shared.aircraftcharacteristic.speed_nilreason;
create or replace view shared.altitudeadjustment_view as
select
    shared.altitudeadjustment_pt.id,
    jsonb_agg(notes.note_view.note) AS altitudeadjustment_annotation,
    shared.altitudeadjustment_pt.nilreason AS altitudeadjustment_annotation,
    coalesce(cast(shared.altitudeadjustment.altitudeadjustmenttype_value as varchar), '(' || shared.altitudeadjustment.altitudeadjustmenttype_nilreason || ')') as altitudeadjustmenttype,
    coalesce(cast(shared.altitudeadjustment.primaryalternateminimum_value as varchar), '(' || shared.altitudeadjustment.primaryalternateminimum_nilreason || ')') as primaryalternateminimum,
    coalesce(cast(shared.altitudeadjustment.localremotecode_value as varchar), '(' || shared.altitudeadjustment.localremotecode_nilreason || ')') as localremotecode,
    coalesce(cast(shared.altitudeadjustment.altitudeadjustment_value as varchar) || ' ' || shared.altitudeadjustment.altitudeadjustment_uom, '(' || shared.altitudeadjustment.altitudeadjustment_nilreason || ')') as altitudeadjustment
from shared.altitudeadjustment_pt 
inner join shared.altitudeadjustment on shared.altitudeadjustment_pt.altitudeadjustment_id = shared.altitudeadjustment.id
left join master_join mj1 on shared.altitudeadjustment.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.altitudeadjustment_pt.id,
    shared.altitudeadjustment_pt.nilreason,
    shared.altitudeadjustment.altitudeadjustmenttype_value,
    shared.altitudeadjustment.altitudeadjustmenttype_nilreason,
    shared.altitudeadjustment.primaryalternateminimum_value,
    shared.altitudeadjustment.primaryalternateminimum_nilreason,
    shared.altitudeadjustment.localremotecode_value,
    shared.altitudeadjustment.localremotecode_nilreason,
    shared.altitudeadjustment.altitudeadjustment_value,
    shared.altitudeadjustment.altitudeadjustment_uom,
    shared.altitudeadjustment.altitudeadjustment_nilreason;
create or replace view procedure.approachaltitudetable_view as
select
    procedure.approachaltitudetable_pt.id,
    jsonb_agg(notes.note_view.note) AS approachaltitudetable_annotation,
    procedure.approachaltitudetable_pt.nilreason AS approachaltitudetable_annotation,
    coalesce(cast(procedure.approachaltitudetable.measurementpoint_value as varchar), '(' || procedure.approachaltitudetable.measurementpoint_nilreason || ')') as measurementpoint,
    coalesce(cast(procedure.approachaltitudetable.altitudereference_value as varchar), '(' || procedure.approachaltitudetable.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(procedure.approachaltitudetable.altitude_value as varchar) || ' ' || procedure.approachaltitudetable.altitude_uom, '(' || procedure.approachaltitudetable.altitude_nilreason || ')') as altitude
from procedure.approachaltitudetable_pt 
inner join procedure.approachaltitudetable on procedure.approachaltitudetable_pt.approachaltitudetable_id = procedure.approachaltitudetable.id
left join master_join mj1 on procedure.approachaltitudetable.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.approachaltitudetable_pt.id,
    procedure.approachaltitudetable_pt.nilreason,
    procedure.approachaltitudetable.measurementpoint_value,
    procedure.approachaltitudetable.measurementpoint_nilreason,
    procedure.approachaltitudetable.altitudereference_value,
    procedure.approachaltitudetable.altitudereference_nilreason,
    procedure.approachaltitudetable.altitude_value,
    procedure.approachaltitudetable.altitude_uom,
    procedure.approachaltitudetable.altitude_nilreason;
create or replace view procedure.approachdistancetable_view as
select
    procedure.approachdistancetable_pt.id,
    jsonb_agg(notes.note_view.note) AS approachdistancetable_annotation,
    procedure.approachdistancetable_pt.nilreason AS approachdistancetable_annotation,
    coalesce(cast(procedure.approachdistancetable.startingmeasurementpoint_value as varchar), '(' || procedure.approachdistancetable.startingmeasurementpoint_nilreason || ')') as startingmeasurementpoint,
    coalesce(cast(procedure.approachdistancetable.endingmeasurementpoint_value as varchar), '(' || procedure.approachdistancetable.endingmeasurementpoint_nilreason || ')') as endingmeasurementpoint,
    coalesce(cast(procedure.approachdistancetable.valuehat_value as varchar) || ' ' || procedure.approachdistancetable.valuehat_uom, '(' || procedure.approachdistancetable.valuehat_nilreason || ')') as valuehat,
    coalesce(cast(procedure.approachdistancetable.distance_value as varchar) || ' ' || procedure.approachdistancetable.distance_uom, '(' || procedure.approachdistancetable.distance_nilreason || ')') as distance
from procedure.approachdistancetable_pt 
inner join procedure.approachdistancetable on procedure.approachdistancetable_pt.approachdistancetable_id = procedure.approachdistancetable.id
left join master_join mj1 on procedure.approachdistancetable.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.approachdistancetable_pt.id,
    procedure.approachdistancetable_pt.nilreason,
    procedure.approachdistancetable.startingmeasurementpoint_value,
    procedure.approachdistancetable.startingmeasurementpoint_nilreason,
    procedure.approachdistancetable.endingmeasurementpoint_value,
    procedure.approachdistancetable.endingmeasurementpoint_nilreason,
    procedure.approachdistancetable.valuehat_value,
    procedure.approachdistancetable.valuehat_uom,
    procedure.approachdistancetable.valuehat_nilreason,
    procedure.approachdistancetable.distance_value,
    procedure.approachdistancetable.distance_uom,
    procedure.approachdistancetable.distance_nilreason;
create or replace view procedure.approachtimingtable_view as
select
    procedure.approachtimingtable_pt.id,
    jsonb_agg(notes.note_view.note) AS approachtimingtable_annotation,
    procedure.approachtimingtable_pt.nilreason AS approachtimingtable_annotation,
    coalesce(cast(procedure.approachtimingtable.startingmeasurementpoint_value as varchar), '(' || procedure.approachtimingtable.startingmeasurementpoint_nilreason || ')') as startingmeasurementpoint,
    coalesce(cast(procedure.approachtimingtable.endingmeasurementpoint_value as varchar), '(' || procedure.approachtimingtable.endingmeasurementpoint_nilreason || ')') as endingmeasurementpoint,
    coalesce(cast(procedure.approachtimingtable.time_value as varchar) || ' ' || procedure.approachtimingtable.time_uom, '(' || procedure.approachtimingtable.time_nilreason || ')') as time,
    coalesce(cast(procedure.approachtimingtable.speed_value as varchar) || ' ' || procedure.approachtimingtable.speed_uom, '(' || procedure.approachtimingtable.speed_nilreason || ')') as speed
from procedure.approachtimingtable_pt 
inner join procedure.approachtimingtable on procedure.approachtimingtable_pt.approachtimingtable_id = procedure.approachtimingtable.id
left join master_join mj1 on procedure.approachtimingtable.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.approachtimingtable_pt.id,
    procedure.approachtimingtable_pt.nilreason,
    procedure.approachtimingtable.startingmeasurementpoint_value,
    procedure.approachtimingtable.startingmeasurementpoint_nilreason,
    procedure.approachtimingtable.endingmeasurementpoint_value,
    procedure.approachtimingtable.endingmeasurementpoint_nilreason,
    procedure.approachtimingtable.time_value,
    procedure.approachtimingtable.time_uom,
    procedure.approachtimingtable.time_nilreason,
    procedure.approachtimingtable.speed_value,
    procedure.approachtimingtable.speed_uom,
    procedure.approachtimingtable.speed_nilreason;
create or replace view service.callsigndetail_view as
select
    service.callsigndetail_pt.id,
    jsonb_agg(notes.note_view.note) AS callsigndetail_annotation,
    service.callsigndetail_pt.nilreason AS callsigndetail_annotation,
    coalesce(cast(service.callsigndetail.callsign_value as varchar), '(' || service.callsigndetail.callsign_nilreason || ')') as callsign,
    coalesce(cast(service.callsigndetail.language_value as varchar), '(' || service.callsigndetail.language_nilreason || ')') as language
from service.callsigndetail_pt 
inner join service.callsigndetail on service.callsigndetail_pt.callsigndetail_id = service.callsigndetail.id
left join master_join mj1 on service.callsigndetail.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    service.callsigndetail_pt.id,
    service.callsigndetail_pt.nilreason,
    service.callsigndetail.callsign_value,
    service.callsigndetail.callsign_nilreason,
    service.callsigndetail.language_value,
    service.callsigndetail.language_nilreason;
create or replace view shared.circlesector_view as
select
    shared.circlesector_pt.id,
    jsonb_agg(notes.note_view.note) AS circlesector_annotation,
    shared.circlesector_pt.nilreason AS circlesector_annotation,
    coalesce(cast(shared.circlesector.arcdirection_value as varchar), '(' || shared.circlesector.arcdirection_nilreason || ')') as arcdirection,
    coalesce(cast(shared.circlesector.fromangle_value as varchar), '(' || shared.circlesector.fromangle_nilreason || ')') as fromangle,
    coalesce(cast(shared.circlesector.toangle_value as varchar), '(' || shared.circlesector.toangle_nilreason || ')') as toangle,
    coalesce(cast(shared.circlesector.angletype_value as varchar), '(' || shared.circlesector.angletype_nilreason || ')') as angletype,
    coalesce(cast(shared.circlesector.angledirectionreference_value as varchar), '(' || shared.circlesector.angledirectionreference_nilreason || ')') as angledirectionreference,
    coalesce(cast(shared.circlesector.upperlimitreference_value as varchar), '(' || shared.circlesector.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.circlesector.lowerlimitreference_value as varchar), '(' || shared.circlesector.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.circlesector.innerdistance_value as varchar) || ' ' || shared.circlesector.innerdistance_uom, '(' || shared.circlesector.innerdistance_nilreason || ')') as innerdistance,
    coalesce(cast(shared.circlesector.outerdistance_value as varchar) || ' ' || shared.circlesector.outerdistance_uom, '(' || shared.circlesector.outerdistance_nilreason || ')') as outerdistance,
    coalesce(cast(shared.circlesector.upperlimit_value as varchar) || ' ' || shared.circlesector.upperlimit_uom, '(' || shared.circlesector.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.circlesector.lowerlimit_value as varchar) || ' ' || shared.circlesector.lowerlimit_uom, '(' || shared.circlesector.lowerlimit_nilreason || ')') as lowerlimit
from shared.circlesector_pt 
inner join shared.circlesector on shared.circlesector_pt.circlesector_id = shared.circlesector.id
left join master_join mj1 on shared.circlesector.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.circlesector_pt.id,
    shared.circlesector_pt.nilreason,
    shared.circlesector.arcdirection_value,
    shared.circlesector.arcdirection_nilreason,
    shared.circlesector.fromangle_value,
    shared.circlesector.fromangle_nilreason,
    shared.circlesector.toangle_value,
    shared.circlesector.toangle_nilreason,
    shared.circlesector.angletype_value,
    shared.circlesector.angletype_nilreason,
    shared.circlesector.angledirectionreference_value,
    shared.circlesector.angledirectionreference_nilreason,
    shared.circlesector.upperlimitreference_value,
    shared.circlesector.upperlimitreference_nilreason,
    shared.circlesector.lowerlimitreference_value,
    shared.circlesector.lowerlimitreference_nilreason,
    shared.circlesector.innerdistance_value,
    shared.circlesector.innerdistance_uom,
    shared.circlesector.innerdistance_nilreason,
    shared.circlesector.outerdistance_value,
    shared.circlesector.outerdistance_uom,
    shared.circlesector.outerdistance_nilreason,
    shared.circlesector.upperlimit_value,
    shared.circlesector.upperlimit_uom,
    shared.circlesector.upperlimit_nilreason,
    shared.circlesector.lowerlimit_value,
    shared.circlesector.lowerlimit_uom,
    shared.circlesector.lowerlimit_nilreason;
create or replace view airport_heliport.city_view as
select
    airport_heliport.city_pt.id,
    jsonb_agg(notes.note_view.note) AS city_annotation,
    airport_heliport.city_pt.nilreason AS city_annotation,
    coalesce(cast(airport_heliport.city.name_value as varchar), '(' || airport_heliport.city.name_nilreason || ')') as name
from airport_heliport.city_pt 
inner join airport_heliport.city on airport_heliport.city_pt.city_id = airport_heliport.city.id
left join master_join mj1 on airport_heliport.city.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.city_pt.id,
    airport_heliport.city_pt.nilreason,
    airport_heliport.city.name_value,
    airport_heliport.city.name_nilreason;
create or replace view routes.directflightclass_view as
select
    routes.directflightclass_pt.id,
    jsonb_agg(notes.note_view.note) AS directflightclass_annotation,
    routes.directflightclass_pt.nilreason AS directflightclass_annotation,
    coalesce(cast(routes.directflightclass.exceedlength_value as varchar) || ' ' || routes.directflightclass.exceedlength_uom, '(' || routes.directflightclass.exceedlength_nilreason || ')') as exceedlength
from routes.directflightclass_pt 
inner join routes.directflightclass on routes.directflightclass_pt.directflightclass_id = routes.directflightclass.id
left join master_join mj1 on routes.directflightclass.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.directflightclass_pt.id,
    routes.directflightclass_pt.nilreason,
    routes.directflightclass.exceedlength_value,
    routes.directflightclass.exceedlength_uom,
    routes.directflightclass.exceedlength_nilreason;
create or replace view procedure.equipmentunavailableadjustmentcolumn_view as
select
    procedure.equipmentunavailableadjustmentcolumn_pt.id,
    jsonb_agg(notes.note_view.note) AS equipmentunavailableadjustmentcolumn_annotation,
    procedure.equipmentunavailableadjustmentcolumn_pt.nilreason AS equipmentunavailableadjustmentcolumn_annotation,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_nilreason || ')') as guidanceequipment,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_nilreason || ')') as landingsystemlights,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_nilreason || ')') as equipmentrvr,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_nilreason || ')') as approachlightinginoperative,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_value as varchar) || ' ' || procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_uom, '(' || procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_nilreason || ')') as visibilityadjustment
from procedure.equipmentunavailableadjustmentcolumn_pt 
inner join procedure.equipmentunavailableadjustmentcolumn on procedure.equipmentunavailableadjustmentcolumn_pt.equipmentunavailableadjustmentcolumn_id = procedure.equipmentunavailableadjustmentcolumn.id
left join master_join mj1 on procedure.equipmentunavailableadjustmentcolumn.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.equipmentunavailableadjustmentcolumn_pt.id,
    procedure.equipmentunavailableadjustmentcolumn_pt.nilreason,
    procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_value,
    procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_value,
    procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_value,
    procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_value,
    procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_value,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_uom,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_nilreason;
create or replace view public.fasdatablock_view as
select
    public.fasdatablock_pt.id,
    jsonb_agg(notes.note_view.note) AS fasdatablock_annotation,
    public.fasdatablock_pt.nilreason AS fasdatablock_annotation,
    coalesce(cast(public.fasdatablock.horizontalalarmlimit_value as varchar), '(' || public.fasdatablock.horizontalalarmlimit_nilreason || ')') as horizontalalarmlimit,
    coalesce(cast(public.fasdatablock.verticalalarmlimit_value as varchar), '(' || public.fasdatablock.verticalalarmlimit_nilreason || ')') as verticalalarmlimit,
    coalesce(cast(public.fasdatablock.crcremainder_value as varchar), '(' || public.fasdatablock.crcremainder_nilreason || ')') as crcremainder,
    coalesce(cast(public.fasdatablock.operationtype_value as varchar), '(' || public.fasdatablock.operationtype_nilreason || ')') as operationtype,
    coalesce(cast(public.fasdatablock.serviceprovidersbas_value as varchar), '(' || public.fasdatablock.serviceprovidersbas_nilreason || ')') as serviceprovidersbas,
    coalesce(cast(public.fasdatablock.approachperformancedesignator_value as varchar), '(' || public.fasdatablock.approachperformancedesignator_nilreason || ')') as approachperformancedesignator,
    coalesce(cast(public.fasdatablock.referencepathdataselector_value as varchar), '(' || public.fasdatablock.referencepathdataselector_nilreason || ')') as referencepathdataselector,
    coalesce(cast(public.fasdatablock.thresholdcoursewidth_value as varchar) || ' ' || public.fasdatablock.thresholdcoursewidth_uom, '(' || public.fasdatablock.thresholdcoursewidth_nilreason || ')') as thresholdcoursewidth,
    coalesce(cast(public.fasdatablock.lengthoffset_value as varchar) || ' ' || public.fasdatablock.lengthoffset_uom, '(' || public.fasdatablock.lengthoffset_nilreason || ')') as lengthoffset
from public.fasdatablock_pt 
inner join public.fasdatablock on public.fasdatablock_pt.fasdatablock_id = public.fasdatablock.id
left join master_join mj1 on public.fasdatablock.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    public.fasdatablock_pt.id,
    public.fasdatablock_pt.nilreason,
    public.fasdatablock.horizontalalarmlimit_value,
    public.fasdatablock.horizontalalarmlimit_nilreason,
    public.fasdatablock.verticalalarmlimit_value,
    public.fasdatablock.verticalalarmlimit_nilreason,
    public.fasdatablock.crcremainder_value,
    public.fasdatablock.crcremainder_nilreason,
    public.fasdatablock.operationtype_value,
    public.fasdatablock.operationtype_nilreason,
    public.fasdatablock.serviceprovidersbas_value,
    public.fasdatablock.serviceprovidersbas_nilreason,
    public.fasdatablock.approachperformancedesignator_value,
    public.fasdatablock.approachperformancedesignator_nilreason,
    public.fasdatablock.referencepathdataselector_value,
    public.fasdatablock.referencepathdataselector_nilreason,
    public.fasdatablock.thresholdcoursewidth_value,
    public.fasdatablock.thresholdcoursewidth_uom,
    public.fasdatablock.thresholdcoursewidth_nilreason,
    public.fasdatablock.lengthoffset_value,
    public.fasdatablock.lengthoffset_uom,
    public.fasdatablock.lengthoffset_nilreason;
create or replace view shared.flightcharacteristic_view as
select
    shared.flightcharacteristic_pt.id,
    jsonb_agg(notes.note_view.note) AS flightcharacteristic_annotation,
    shared.flightcharacteristic_pt.nilreason AS flightcharacteristic_annotation,
    coalesce(cast(shared.flightcharacteristic.type_value as varchar), '(' || shared.flightcharacteristic.type_nilreason || ')') as type,
    coalesce(cast(shared.flightcharacteristic.rule_value as varchar), '(' || shared.flightcharacteristic.rule_nilreason || ')') as rule,
    coalesce(cast(shared.flightcharacteristic.status_value as varchar), '(' || shared.flightcharacteristic.status_nilreason || ')') as status,
    coalesce(cast(shared.flightcharacteristic.military_value as varchar), '(' || shared.flightcharacteristic.military_nilreason || ')') as military,
    coalesce(cast(shared.flightcharacteristic.origin_value as varchar), '(' || shared.flightcharacteristic.origin_nilreason || ')') as origin,
    coalesce(cast(shared.flightcharacteristic.purpose_value as varchar), '(' || shared.flightcharacteristic.purpose_nilreason || ')') as purpose
from shared.flightcharacteristic_pt 
inner join shared.flightcharacteristic on shared.flightcharacteristic_pt.flightcharacteristic_id = shared.flightcharacteristic.id
left join master_join mj1 on shared.flightcharacteristic.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.flightcharacteristic_pt.id,
    shared.flightcharacteristic_pt.nilreason,
    shared.flightcharacteristic.type_value,
    shared.flightcharacteristic.type_nilreason,
    shared.flightcharacteristic.rule_value,
    shared.flightcharacteristic.rule_nilreason,
    shared.flightcharacteristic.status_value,
    shared.flightcharacteristic.status_nilreason,
    shared.flightcharacteristic.military_value,
    shared.flightcharacteristic.military_nilreason,
    shared.flightcharacteristic.origin_value,
    shared.flightcharacteristic.origin_nilreason,
    shared.flightcharacteristic.purpose_value,
    shared.flightcharacteristic.purpose_nilreason;
create or replace view routes.flightconditioncircumstance_view as
select
    routes.flightconditioncircumstance_pt.id,
    jsonb_agg(notes.note_view.note) AS flightconditioncircumstance_annotation,
    routes.flightconditioncircumstance_pt.nilreason AS flightconditioncircumstance_annotation,
    coalesce(cast(routes.flightconditioncircumstance.referencelocation_value as varchar), '(' || routes.flightconditioncircumstance.referencelocation_nilreason || ')') as referencelocation,
    coalesce(cast(routes.flightconditioncircumstance.relationwithlocation_value as varchar), '(' || routes.flightconditioncircumstance.relationwithlocation_nilreason || ')') as relationwithlocation
from routes.flightconditioncircumstance_pt 
inner join routes.flightconditioncircumstance on routes.flightconditioncircumstance_pt.flightconditioncircumstance_id = routes.flightconditioncircumstance.id
left join master_join mj1 on routes.flightconditioncircumstance.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.flightconditioncircumstance_pt.id,
    routes.flightconditioncircumstance_pt.nilreason,
    routes.flightconditioncircumstance.referencelocation_value,
    routes.flightconditioncircumstance.referencelocation_nilreason,
    routes.flightconditioncircumstance.relationwithlocation_value,
    routes.flightconditioncircumstance.relationwithlocation_nilreason;
create or replace view routes.flightrestrictionlevel_view as
select
    routes.flightrestrictionlevel_pt.id,
    jsonb_agg(notes.note_view.note) AS flightrestrictionlevel_annotation,
    routes.flightrestrictionlevel_pt.nilreason AS flightrestrictionlevel_annotation,
    coalesce(cast(routes.flightrestrictionlevel.upperlevelreference_value as varchar), '(' || routes.flightrestrictionlevel.upperlevelreference_nilreason || ')') as upperlevelreference,
    coalesce(cast(routes.flightrestrictionlevel.lowerlevelreference_value as varchar), '(' || routes.flightrestrictionlevel.lowerlevelreference_nilreason || ')') as lowerlevelreference,
    coalesce(cast(routes.flightrestrictionlevel.upperlevel_value as varchar) || ' ' || routes.flightrestrictionlevel.upperlevel_uom, '(' || routes.flightrestrictionlevel.upperlevel_nilreason || ')') as upperlevel,
    coalesce(cast(routes.flightrestrictionlevel.lowerlevel_value as varchar) || ' ' || routes.flightrestrictionlevel.lowerlevel_uom, '(' || routes.flightrestrictionlevel.lowerlevel_nilreason || ')') as lowerlevel
from routes.flightrestrictionlevel_pt 
inner join routes.flightrestrictionlevel on routes.flightrestrictionlevel_pt.flightrestrictionlevel_id = routes.flightrestrictionlevel.id
left join master_join mj1 on routes.flightrestrictionlevel.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.flightrestrictionlevel_pt.id,
    routes.flightrestrictionlevel_pt.nilreason,
    routes.flightrestrictionlevel.upperlevelreference_value,
    routes.flightrestrictionlevel.upperlevelreference_nilreason,
    routes.flightrestrictionlevel.lowerlevelreference_value,
    routes.flightrestrictionlevel.lowerlevelreference_nilreason,
    routes.flightrestrictionlevel.upperlevel_value,
    routes.flightrestrictionlevel.upperlevel_uom,
    routes.flightrestrictionlevel.upperlevel_nilreason,
    routes.flightrestrictionlevel.lowerlevel_value,
    routes.flightrestrictionlevel.lowerlevel_uom,
    routes.flightrestrictionlevel.lowerlevel_nilreason;
create or replace view service.fuel_view as
select
    service.fuel_pt.id,
    jsonb_agg(notes.note_view.note) AS fuel_annotation,
    service.fuel_pt.nilreason AS fuel_annotation,
    coalesce(cast(service.fuel.category_value as varchar), '(' || service.fuel.category_nilreason || ')') as category
from service.fuel_pt 
inner join service.fuel on service.fuel_pt.fuel_id = service.fuel.id
left join master_join mj1 on service.fuel.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    service.fuel_pt.id,
    service.fuel_pt.nilreason,
    service.fuel.category_value,
    service.fuel.category_nilreason;
create or replace view holding.holdingpatterndistance_view as
select
    holding.holdingpatterndistance_pt.id,
    jsonb_agg(notes.note_view.note) AS holdingpatterndistance_annotation,
    holding.holdingpatterndistance_pt.nilreason AS holdingpatterndistance_annotation,
    coalesce(cast(holding.holdingpatterndistance.length_value as varchar) || ' ' || holding.holdingpatterndistance.length_uom, '(' || holding.holdingpatterndistance.length_nilreason || ')') as length
from holding.holdingpatterndistance_pt 
inner join holding.holdingpatterndistance on holding.holdingpatterndistance_pt.holdingpatterndistance_id = holding.holdingpatterndistance.id
left join master_join mj1 on holding.holdingpatterndistance.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    holding.holdingpatterndistance_pt.id,
    holding.holdingpatterndistance_pt.nilreason,
    holding.holdingpatterndistance.length_value,
    holding.holdingpatterndistance.length_uom,
    holding.holdingpatterndistance.length_nilreason;
create or replace view holding.holdingpatternduration_view as
select
    holding.holdingpatternduration_pt.id,
    jsonb_agg(notes.note_view.note) AS holdingpatternduration_annotation,
    holding.holdingpatternduration_pt.nilreason AS holdingpatternduration_annotation,
    coalesce(cast(holding.holdingpatternduration.duration_value as varchar) || ' ' || holding.holdingpatternduration.duration_uom, '(' || holding.holdingpatternduration.duration_nilreason || ')') as duration
from holding.holdingpatternduration_pt 
inner join holding.holdingpatternduration on holding.holdingpatternduration_pt.holdingpatternduration_id = holding.holdingpatternduration.id
left join master_join mj1 on holding.holdingpatternduration.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    holding.holdingpatternduration_pt.id,
    holding.holdingpatternduration_pt.nilreason,
    holding.holdingpatternduration.duration_value,
    holding.holdingpatternduration.duration_uom,
    holding.holdingpatternduration.duration_nilreason;
create or replace view airport_heliport.lightactivation_view as
select
    airport_heliport.lightactivation_pt.id,
    jsonb_agg(notes.note_view.note) AS lightactivation_annotation,
    airport_heliport.lightactivation_pt.nilreason AS lightactivation_annotation,
    coalesce(cast(airport_heliport.lightactivation.clicks_value as varchar), '(' || airport_heliport.lightactivation.clicks_nilreason || ')') as clicks,
    coalesce(cast(airport_heliport.lightactivation.intensitylevel_value as varchar), '(' || airport_heliport.lightactivation.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.lightactivation.activation_value as varchar), '(' || airport_heliport.lightactivation.activation_nilreason || ')') as activation
from airport_heliport.lightactivation_pt 
inner join airport_heliport.lightactivation on airport_heliport.lightactivation_pt.lightactivation_id = airport_heliport.lightactivation.id
left join master_join mj1 on airport_heliport.lightactivation.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.lightactivation_pt.id,
    airport_heliport.lightactivation_pt.nilreason,
    airport_heliport.lightactivation.clicks_value,
    airport_heliport.lightactivation.clicks_nilreason,
    airport_heliport.lightactivation.intensitylevel_value,
    airport_heliport.lightactivation.intensitylevel_nilreason,
    airport_heliport.lightactivation.activation_value,
    airport_heliport.lightactivation.activation_nilreason;
create or replace view shared.meteorology_view as
select
    shared.meteorology_pt.id,
    jsonb_agg(notes.note_view.note) AS meteorology_annotation,
    shared.meteorology_pt.nilreason AS meteorology_annotation,
    coalesce(cast(shared.meteorology.flightconditions_value as varchar), '(' || shared.meteorology.flightconditions_nilreason || ')') as flightconditions,
    coalesce(cast(shared.meteorology.visibilityinterpretation_value as varchar), '(' || shared.meteorology.visibilityinterpretation_nilreason || ')') as visibilityinterpretation,
    coalesce(cast(shared.meteorology.runwayvisualrangeinterpretation_value as varchar), '(' || shared.meteorology.runwayvisualrangeinterpretation_nilreason || ')') as runwayvisualrangeinterpretation,
    coalesce(cast(shared.meteorology.visibility_value as varchar) || ' ' || shared.meteorology.visibility_uom, '(' || shared.meteorology.visibility_nilreason || ')') as visibility,
    coalesce(cast(shared.meteorology.runwayvisualrange_value as varchar) || ' ' || shared.meteorology.runwayvisualrange_uom, '(' || shared.meteorology.runwayvisualrange_nilreason || ')') as runwayvisualrange
from shared.meteorology_pt 
inner join shared.meteorology on shared.meteorology_pt.meteorology_id = shared.meteorology.id
left join master_join mj1 on shared.meteorology.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.meteorology_pt.id,
    shared.meteorology_pt.nilreason,
    shared.meteorology.flightconditions_value,
    shared.meteorology.flightconditions_nilreason,
    shared.meteorology.visibilityinterpretation_value,
    shared.meteorology.visibilityinterpretation_nilreason,
    shared.meteorology.runwayvisualrangeinterpretation_value,
    shared.meteorology.runwayvisualrangeinterpretation_nilreason,
    shared.meteorology.visibility_value,
    shared.meteorology.visibility_uom,
    shared.meteorology.visibility_nilreason,
    shared.meteorology.runwayvisualrange_value,
    shared.meteorology.runwayvisualrange_uom,
    shared.meteorology.runwayvisualrange_nilreason;
create or replace view navaids_points.navaidcomponent_view as
select
    navaids_points.navaidcomponent_pt.id,
    jsonb_agg(notes.note_view.note) AS navaidcomponent_annotation,
    navaids_points.navaidcomponent_pt.nilreason AS navaidcomponent_annotation,
    coalesce(cast(navaids_points.navaidcomponent.collocationgroup_value as varchar), '(' || navaids_points.navaidcomponent.collocationgroup_nilreason || ')') as collocationgroup,
    coalesce(cast(navaids_points.navaidcomponent.markerposition_value as varchar), '(' || navaids_points.navaidcomponent.markerposition_nilreason || ')') as markerposition,
    coalesce(cast(navaids_points.navaidcomponent.providesnavigablelocation_value as varchar), '(' || navaids_points.navaidcomponent.providesnavigablelocation_nilreason || ')') as providesnavigablelocation
from navaids_points.navaidcomponent_pt 
inner join navaids_points.navaidcomponent on navaids_points.navaidcomponent_pt.navaidcomponent_id = navaids_points.navaidcomponent.id
left join master_join mj1 on navaids_points.navaidcomponent.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.navaidcomponent_pt.id,
    navaids_points.navaidcomponent_pt.nilreason,
    navaids_points.navaidcomponent.collocationgroup_value,
    navaids_points.navaidcomponent.collocationgroup_nilreason,
    navaids_points.navaidcomponent.markerposition_value,
    navaids_points.navaidcomponent.markerposition_nilreason,
    navaids_points.navaidcomponent.providesnavigablelocation_value,
    navaids_points.navaidcomponent.providesnavigablelocation_nilreason;
create or replace view airport_heliport.navaidequipmentdistance_view as
select
    airport_heliport.navaidequipmentdistance_pt.id,
    jsonb_agg(notes.note_view.note) AS navaidequipmentdistance_annotation,
    airport_heliport.navaidequipmentdistance_pt.nilreason AS navaidequipmentdistance_annotation,
    coalesce(cast(airport_heliport.navaidequipmentdistance.distance_value as varchar) || ' ' || airport_heliport.navaidequipmentdistance.distance_uom, '(' || airport_heliport.navaidequipmentdistance.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.navaidequipmentdistance.distanceaccuracy_value as varchar) || ' ' || airport_heliport.navaidequipmentdistance.distanceaccuracy_uom, '(' || airport_heliport.navaidequipmentdistance.distanceaccuracy_nilreason || ')') as distanceaccuracy
from airport_heliport.navaidequipmentdistance_pt 
inner join airport_heliport.navaidequipmentdistance on airport_heliport.navaidequipmentdistance_pt.navaidequipmentdistance_id = airport_heliport.navaidequipmentdistance.id
left join master_join mj1 on airport_heliport.navaidequipmentdistance.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.navaidequipmentdistance_pt.id,
    airport_heliport.navaidequipmentdistance_pt.nilreason,
    airport_heliport.navaidequipmentdistance.distance_value,
    airport_heliport.navaidequipmentdistance.distance_uom,
    airport_heliport.navaidequipmentdistance.distance_nilreason,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_value,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_uom,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_nilreason;
create or replace view service.nitrogen_view as
select
    service.nitrogen_pt.id,
    jsonb_agg(notes.note_view.note) AS nitrogen_annotation,
    service.nitrogen_pt.nilreason AS nitrogen_annotation,
    coalesce(cast(service.nitrogen.type_value as varchar), '(' || service.nitrogen.type_nilreason || ')') as type
from service.nitrogen_pt 
inner join service.nitrogen on service.nitrogen_pt.nitrogen_id = service.nitrogen.id
left join master_join mj1 on service.nitrogen.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    service.nitrogen_pt.id,
    service.nitrogen_pt.nilreason,
    service.nitrogen.type_value,
    service.nitrogen.type_nilreason;
-- Snowflake SQL : NotePropertyType 

CREATE OR REPLACE VIEW notes.linguisticnote_view AS
SELECT 
    notes.linguisticnote_pt.id,
    notes.linguisticnote.note_lang AS lang,
    COALESCE(notes.linguisticnote.note_value, '('|| notes.linguisticnote.note_nilreason ||')') AS note
FROM notes.linguisticnote_pt
INNER JOIN notes.linguisticnote ON notes.linguisticnote_pt.linguisticnote_id = notes.linguisticnote.id;

CREATE OR REPLACE VIEW notes.note_view AS
SELECT
    notes.note_pt.id,
    jsonb_build_object(
        'propertyName', COALESCE(notes.note.propertyname_value, '(' || notes.note.propertyname_nilreason || ')'),
        'purpose', COALESCE(notes.note.purpose_value, '(' || notes.note.purpose_nilreason || ')'),
        'notes', translated_notes.notes_array
    ) AS note
FROM notes.note_pt
INNER JOIN notes.note ON notes.note_pt.note_id = notes.note.id
LEFT JOIN LATERAL (
    SELECT jsonb_agg(
        jsonb_build_object(
            'id', notes.linguisticnote_view.id,
            'lang', notes.linguisticnote_view.lang,
            'note', notes.linguisticnote_view.note
        )
    ) AS notes_array
    FROM master_join
    JOIN notes.linguisticnote_view ON master_join.target_id = notes.linguisticnote_view.id
    WHERE master_join.source_id = notes.note.id
) AS translated_notes ON true;
create or replace view shared.obstacleplacement_view as
select
    shared.obstacleplacement_pt.id,
    jsonb_agg(notes.note_view.note) AS obstacleplacement_annotation,
    shared.obstacleplacement_pt.nilreason AS obstacleplacement_annotation,
    coalesce(cast(shared.obstacleplacement.obstaclebearing_value as varchar), '(' || shared.obstacleplacement.obstaclebearing_nilreason || ')') as obstaclebearing,
    coalesce(cast(shared.obstacleplacement.pointtype_value as varchar), '(' || shared.obstacleplacement.pointtype_nilreason || ')') as pointtype,
    coalesce(cast(shared.obstacleplacement.obstacleplacement_value as varchar), '(' || shared.obstacleplacement.obstacleplacement_nilreason || ')') as obstacleplacement,
    coalesce(cast(shared.obstacleplacement.obstacledistance_value as varchar) || ' ' || shared.obstacleplacement.obstacledistance_uom, '(' || shared.obstacleplacement.obstacledistance_nilreason || ')') as obstacledistance
from shared.obstacleplacement_pt 
inner join shared.obstacleplacement on shared.obstacleplacement_pt.obstacleplacement_id = shared.obstacleplacement.id
left join master_join mj1 on shared.obstacleplacement.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.obstacleplacement_pt.id,
    shared.obstacleplacement_pt.nilreason,
    shared.obstacleplacement.obstaclebearing_value,
    shared.obstacleplacement.obstaclebearing_nilreason,
    shared.obstacleplacement.pointtype_value,
    shared.obstacleplacement.pointtype_nilreason,
    shared.obstacleplacement.obstacleplacement_value,
    shared.obstacleplacement.obstacleplacement_nilreason,
    shared.obstacleplacement.obstacledistance_value,
    shared.obstacleplacement.obstacledistance_uom,
    shared.obstacleplacement.obstacledistance_nilreason;
create or replace view service.oil_view as
select
    service.oil_pt.id,
    jsonb_agg(notes.note_view.note) AS oil_annotation,
    service.oil_pt.nilreason AS oil_annotation,
    coalesce(cast(service.oil.category_value as varchar), '(' || service.oil.category_nilreason || ')') as category
from service.oil_pt 
inner join service.oil on service.oil_pt.oil_id = service.oil.id
left join master_join mj1 on service.oil.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    service.oil_pt.id,
    service.oil_pt.nilreason,
    service.oil.category_value,
    service.oil.category_nilreason;
create or replace view service.oxygen_view as
select
    service.oxygen_pt.id,
    jsonb_agg(notes.note_view.note) AS oxygen_annotation,
    service.oxygen_pt.nilreason AS oxygen_annotation,
    coalesce(cast(service.oxygen.type_value as varchar), '(' || service.oxygen.type_nilreason || ')') as type
from service.oxygen_pt 
inner join service.oxygen on service.oxygen_pt.oxygen_id = service.oxygen.id
left join master_join mj1 on service.oxygen.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    service.oxygen_pt.id,
    service.oxygen_pt.nilreason,
    service.oxygen.type_value,
    service.oxygen.type_nilreason;
create or replace view procedure.proceduretransitionleg_view as
select
    procedure.proceduretransitionleg_pt.id,
    jsonb_agg(notes.note_view.note) AS proceduretransitionleg_annotation,
    procedure.proceduretransitionleg_pt.nilreason AS proceduretransitionleg_annotation,
    coalesce(cast(procedure.proceduretransitionleg.seqnumberarinc_value as varchar), '(' || procedure.proceduretransitionleg.seqnumberarinc_nilreason || ')') as seqnumberarinc
from procedure.proceduretransitionleg_pt 
inner join procedure.proceduretransitionleg on procedure.proceduretransitionleg_pt.proceduretransitionleg_id = procedure.proceduretransitionleg.id
left join master_join mj1 on procedure.proceduretransitionleg.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.proceduretransitionleg_pt.id,
    procedure.proceduretransitionleg_pt.nilreason,
    procedure.proceduretransitionleg.seqnumberarinc_value,
    procedure.proceduretransitionleg.seqnumberarinc_nilreason;
create or replace view surveillance.radarcomponent_view as
select
    surveillance.radarcomponent_pt.id,
    jsonb_agg(notes.note_view.note) AS radarcomponent_annotation,
    surveillance.radarcomponent_pt.nilreason AS radarcomponent_annotation,
    coalesce(cast(surveillance.radarcomponent.collocationgroup_value as varchar), '(' || surveillance.radarcomponent.collocationgroup_nilreason || ')') as collocationgroup
from surveillance.radarcomponent_pt 
inner join surveillance.radarcomponent on surveillance.radarcomponent_pt.radarcomponent_id = surveillance.radarcomponent.id
left join master_join mj1 on surveillance.radarcomponent.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    surveillance.radarcomponent_pt.id,
    surveillance.radarcomponent_pt.nilreason,
    surveillance.radarcomponent.collocationgroup_value,
    surveillance.radarcomponent.collocationgroup_nilreason;
create or replace view airport_heliport.ridge_view as
select
    airport_heliport.ridge_pt.id,
    jsonb_agg(notes.note_view.note) AS ridge_annotation,
    airport_heliport.ridge_pt.nilreason AS ridge_annotation,
    coalesce(cast(airport_heliport.ridge.side_value as varchar), '(' || airport_heliport.ridge.side_nilreason || ')') as side,
    coalesce(cast(airport_heliport.ridge.distance_value as varchar) || ' ' || airport_heliport.ridge.distance_uom, '(' || airport_heliport.ridge.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.ridge.depth_value as varchar) || ' ' || airport_heliport.ridge.depth_uom, '(' || airport_heliport.ridge.depth_nilreason || ')') as depth
from airport_heliport.ridge_pt 
inner join airport_heliport.ridge on airport_heliport.ridge_pt.ridge_id = airport_heliport.ridge.id
left join master_join mj1 on airport_heliport.ridge.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.ridge_pt.id,
    airport_heliport.ridge_pt.nilreason,
    airport_heliport.ridge.side_value,
    airport_heliport.ridge.side_nilreason,
    airport_heliport.ridge.distance_value,
    airport_heliport.ridge.distance_uom,
    airport_heliport.ridge.distance_nilreason,
    airport_heliport.ridge.depth_value,
    airport_heliport.ridge.depth_uom,
    airport_heliport.ridge.depth_nilreason;
create or replace view procedure.sectordesign_view as
select
    procedure.sectordesign_pt.id,
    jsonb_agg(notes.note_view.note) AS sectordesign_annotation,
    procedure.sectordesign_pt.nilreason AS sectordesign_annotation,
    coalesce(cast(procedure.sectordesign.turndirection_value as varchar), '(' || procedure.sectordesign.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.sectordesign.designgradient_value as varchar), '(' || procedure.sectordesign.designgradient_nilreason || ')') as designgradient,
    coalesce(cast(procedure.sectordesign.turnpermitted_value as varchar), '(' || procedure.sectordesign.turnpermitted_nilreason || ')') as turnpermitted,
    coalesce(cast(procedure.sectordesign.terminationaltitude_value as varchar) || ' ' || procedure.sectordesign.terminationaltitude_uom, '(' || procedure.sectordesign.terminationaltitude_nilreason || ')') as terminationaltitude
from procedure.sectordesign_pt 
inner join procedure.sectordesign on procedure.sectordesign_pt.sectordesign_id = procedure.sectordesign.id
left join master_join mj1 on procedure.sectordesign.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.sectordesign_pt.id,
    procedure.sectordesign_pt.nilreason,
    procedure.sectordesign.turndirection_value,
    procedure.sectordesign.turndirection_nilreason,
    procedure.sectordesign.designgradient_value,
    procedure.sectordesign.designgradient_nilreason,
    procedure.sectordesign.turnpermitted_value,
    procedure.sectordesign.turnpermitted_nilreason,
    procedure.sectordesign.terminationaltitude_value,
    procedure.sectordesign.terminationaltitude_uom,
    procedure.sectordesign.terminationaltitude_nilreason;
create or replace view shared.standardlevel_view as
select
    shared.standardlevel_pt.id,
    jsonb_agg(notes.note_view.note) AS standardlevel_annotation,
    shared.standardlevel_pt.nilreason AS standardlevel_annotation,
    coalesce(cast(shared.standardlevel.verticaldistance_value as varchar) || ' ' || shared.standardlevel.verticaldistance_uom, '(' || shared.standardlevel.verticaldistance_nilreason || ')') as verticaldistance
from shared.standardlevel_pt 
inner join shared.standardlevel on shared.standardlevel_pt.standardlevel_id = shared.standardlevel.id
left join master_join mj1 on shared.standardlevel.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.standardlevel_pt.id,
    shared.standardlevel_pt.nilreason,
    shared.standardlevel.verticaldistance_value,
    shared.standardlevel.verticaldistance_uom,
    shared.standardlevel.verticaldistance_nilreason;
create or replace view airport_heliport.surfacecharacteristics_view as
select
    airport_heliport.surfacecharacteristics_pt.id,
    jsonb_agg(notes.note_view.note) AS surfacecharacteristics_annotation,
    airport_heliport.surfacecharacteristics_pt.nilreason AS surfacecharacteristics_annotation,
    coalesce(cast(airport_heliport.surfacecharacteristics.composition_value as varchar), '(' || airport_heliport.surfacecharacteristics.composition_nilreason || ')') as composition,
    coalesce(cast(airport_heliport.surfacecharacteristics.preparation_value as varchar), '(' || airport_heliport.surfacecharacteristics.preparation_nilreason || ')') as preparation,
    coalesce(cast(airport_heliport.surfacecharacteristics.surfacecondition_value as varchar), '(' || airport_heliport.surfacecharacteristics.surfacecondition_nilreason || ')') as surfacecondition,
    coalesce(cast(airport_heliport.surfacecharacteristics.classpcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.classpcn_nilreason || ')') as classpcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.pavementtypepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.pavementtypepcn_nilreason || ')') as pavementtypepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.pavementsubgradepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.pavementsubgradepcn_nilreason || ')') as pavementsubgradepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.maxtyrepressurepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.maxtyrepressurepcn_nilreason || ')') as maxtyrepressurepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.evaluationmethodpcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.evaluationmethodpcn_nilreason || ')') as evaluationmethodpcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.classlcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.classlcn_nilreason || ')') as classlcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.weightsiwl_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.weightsiwl_uom, '(' || airport_heliport.surfacecharacteristics.weightsiwl_nilreason || ')') as weightsiwl,
    coalesce(cast(airport_heliport.surfacecharacteristics.tyrepressuresiwl_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.tyrepressuresiwl_uom, '(' || airport_heliport.surfacecharacteristics.tyrepressuresiwl_nilreason || ')') as tyrepressuresiwl,
    coalesce(cast(airport_heliport.surfacecharacteristics.weightauw_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.weightauw_uom, '(' || airport_heliport.surfacecharacteristics.weightauw_nilreason || ')') as weightauw
from airport_heliport.surfacecharacteristics_pt 
inner join airport_heliport.surfacecharacteristics on airport_heliport.surfacecharacteristics_pt.surfacecharacteristics_id = airport_heliport.surfacecharacteristics.id
left join master_join mj1 on airport_heliport.surfacecharacteristics.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.surfacecharacteristics_pt.id,
    airport_heliport.surfacecharacteristics_pt.nilreason,
    airport_heliport.surfacecharacteristics.composition_value,
    airport_heliport.surfacecharacteristics.composition_nilreason,
    airport_heliport.surfacecharacteristics.preparation_value,
    airport_heliport.surfacecharacteristics.preparation_nilreason,
    airport_heliport.surfacecharacteristics.surfacecondition_value,
    airport_heliport.surfacecharacteristics.surfacecondition_nilreason,
    airport_heliport.surfacecharacteristics.classpcn_value,
    airport_heliport.surfacecharacteristics.classpcn_nilreason,
    airport_heliport.surfacecharacteristics.pavementtypepcn_value,
    airport_heliport.surfacecharacteristics.pavementtypepcn_nilreason,
    airport_heliport.surfacecharacteristics.pavementsubgradepcn_value,
    airport_heliport.surfacecharacteristics.pavementsubgradepcn_nilreason,
    airport_heliport.surfacecharacteristics.maxtyrepressurepcn_value,
    airport_heliport.surfacecharacteristics.maxtyrepressurepcn_nilreason,
    airport_heliport.surfacecharacteristics.evaluationmethodpcn_value,
    airport_heliport.surfacecharacteristics.evaluationmethodpcn_nilreason,
    airport_heliport.surfacecharacteristics.classlcn_value,
    airport_heliport.surfacecharacteristics.classlcn_nilreason,
    airport_heliport.surfacecharacteristics.weightsiwl_value,
    airport_heliport.surfacecharacteristics.weightsiwl_uom,
    airport_heliport.surfacecharacteristics.weightsiwl_nilreason,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_value,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_uom,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_nilreason,
    airport_heliport.surfacecharacteristics.weightauw_value,
    airport_heliport.surfacecharacteristics.weightauw_uom,
    airport_heliport.surfacecharacteristics.weightauw_nilreason;
create or replace view shared.timesheet_view as
select
    shared.timesheet_pt.id,
    jsonb_agg(notes.note_view.note) AS timesheet_annotation,
    shared.timesheet_pt.nilreason AS timesheet_annotation,
    coalesce(cast(shared.timesheet.timereference_value as varchar), '(' || shared.timesheet.timereference_nilreason || ')') as timereference,
    coalesce(cast(shared.timesheet.startdate_value as varchar), '(' || shared.timesheet.startdate_nilreason || ')') as startdate,
    coalesce(cast(shared.timesheet.enddate_value as varchar), '(' || shared.timesheet.enddate_nilreason || ')') as enddate,
    coalesce(cast(shared.timesheet.day_value as varchar), '(' || shared.timesheet.day_nilreason || ')') as day,
    coalesce(cast(shared.timesheet.daytil_value as varchar), '(' || shared.timesheet.daytil_nilreason || ')') as daytil,
    coalesce(cast(shared.timesheet.starttime_value as varchar), '(' || shared.timesheet.starttime_nilreason || ')') as starttime,
    coalesce(cast(shared.timesheet.startevent_value as varchar), '(' || shared.timesheet.startevent_nilreason || ')') as startevent,
    coalesce(cast(shared.timesheet.starteventinterpretation_value as varchar), '(' || shared.timesheet.starteventinterpretation_nilreason || ')') as starteventinterpretation,
    coalesce(cast(shared.timesheet.endtime_value as varchar), '(' || shared.timesheet.endtime_nilreason || ')') as endtime,
    coalesce(cast(shared.timesheet.endevent_value as varchar), '(' || shared.timesheet.endevent_nilreason || ')') as endevent,
    coalesce(cast(shared.timesheet.endeventinterpretation_value as varchar), '(' || shared.timesheet.endeventinterpretation_nilreason || ')') as endeventinterpretation,
    coalesce(cast(shared.timesheet.daylightsavingadjust_value as varchar), '(' || shared.timesheet.daylightsavingadjust_nilreason || ')') as daylightsavingadjust,
    coalesce(cast(shared.timesheet.excluded_value as varchar), '(' || shared.timesheet.excluded_nilreason || ')') as excluded,
    coalesce(cast(shared.timesheet.starttimerelativeevent_value as varchar) || ' ' || shared.timesheet.starttimerelativeevent_uom, '(' || shared.timesheet.starttimerelativeevent_nilreason || ')') as starttimerelativeevent,
    coalesce(cast(shared.timesheet.endtimerelativeevent_value as varchar) || ' ' || shared.timesheet.endtimerelativeevent_uom, '(' || shared.timesheet.endtimerelativeevent_nilreason || ')') as endtimerelativeevent
from shared.timesheet_pt 
inner join shared.timesheet on shared.timesheet_pt.timesheet_id = shared.timesheet.id
left join master_join mj1 on shared.timesheet.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.timesheet_pt.id,
    shared.timesheet_pt.nilreason,
    shared.timesheet.timereference_value,
    shared.timesheet.timereference_nilreason,
    shared.timesheet.startdate_value,
    shared.timesheet.startdate_nilreason,
    shared.timesheet.enddate_value,
    shared.timesheet.enddate_nilreason,
    shared.timesheet.day_value,
    shared.timesheet.day_nilreason,
    shared.timesheet.daytil_value,
    shared.timesheet.daytil_nilreason,
    shared.timesheet.starttime_value,
    shared.timesheet.starttime_nilreason,
    shared.timesheet.startevent_value,
    shared.timesheet.startevent_nilreason,
    shared.timesheet.starteventinterpretation_value,
    shared.timesheet.starteventinterpretation_nilreason,
    shared.timesheet.endtime_value,
    shared.timesheet.endtime_nilreason,
    shared.timesheet.endevent_value,
    shared.timesheet.endevent_nilreason,
    shared.timesheet.endeventinterpretation_value,
    shared.timesheet.endeventinterpretation_nilreason,
    shared.timesheet.daylightsavingadjust_value,
    shared.timesheet.daylightsavingadjust_nilreason,
    shared.timesheet.excluded_value,
    shared.timesheet.excluded_nilreason,
    shared.timesheet.starttimerelativeevent_value,
    shared.timesheet.starttimerelativeevent_uom,
    shared.timesheet.starttimerelativeevent_nilreason,
    shared.timesheet.endtimerelativeevent_value,
    shared.timesheet.endtimerelativeevent_uom,
    shared.timesheet.endtimerelativeevent_nilreason;
create or replace view airport_heliport.airportheliportcollocation_publisher_view as
select distinct on (airportheliportcollocation.identifier,airportheliportcollocation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportheliportcollocation.id,
    airport_heliport.airportheliportcollocation_ts.id as ts_id,
    airport_heliport.airportheliportcollocation_tsp.id as tsp_id,
    airport_heliport.airportheliportcollocation.identifier,
    airport_heliport.airportheliportcollocation_ts.interpretation,
    airport_heliport.airportheliportcollocation_ts.sequence_number,
    airport_heliport.airportheliportcollocation_ts.correction_number,
    airport_heliport.airportheliportcollocation_ts.valid_time_begin,
    airport_heliport.airportheliportcollocation_ts.valid_time_end,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_begin,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.airportheliportcollocation_ts.type_value as varchar), '(' || airport_heliport.airportheliportcollocation_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_airportheliport_pt_xbgnzw.title as varchar), '(' || airport_heliport_airportheliport_pt_xbgnzw.nilreason[1] || ')') AS hostairport,
    airport_heliport_airportheliport_pt_xbgnzw.href AS hostairport_href,
    coalesce(cast(airport_heliport_airportheliport_pt_fgdhmg.title as varchar), '(' || airport_heliport_airportheliport_pt_fgdhmg.nilreason[1] || ')') AS dependentairport,
    airport_heliport_airportheliport_pt_fgdhmg.href AS dependentairport_href
from airport_heliport.airportheliportcollocation 
inner join master_join mj2 on airport_heliport.airportheliportcollocation.id = mj2.source_id
inner join airport_heliport.airportheliportcollocation_tsp on mj2.target_id = airport_heliport.airportheliportcollocation_tsp.id
inner join airport_heliport.airportheliportcollocation_ts on airport_heliport.airportheliportcollocation_tsp.airportheliportcollocationtimeslice_id = airport_heliport.airportheliportcollocation_ts.id
left join master_join mj3 on airport_heliport.airportheliportcollocation_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_xbgnzw on airport_heliport.airportheliportcollocation_ts.hostairport_id = airport_heliport_airportheliport_pt_xbgnzw.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_fgdhmg on airport_heliport.airportheliportcollocation_ts.dependentairport_id = airport_heliport_airportheliport_pt_fgdhmg.id
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.airportheliportcollocation.feature_status = 'APPROVED'
  and airport_heliport.airportheliportcollocation_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportheliportcollocation.id,
    airport_heliport.airportheliportcollocation_ts.id,
    airport_heliport.airportheliportcollocation_tsp.id,
    airport_heliport.airportheliportcollocation.identifier,
    airport_heliport.airportheliportcollocation_ts.interpretation,
    airport_heliport.airportheliportcollocation_ts.sequence_number,
    airport_heliport.airportheliportcollocation_ts.correction_number,
    airport_heliport.airportheliportcollocation_ts.valid_time_begin,
    airport_heliport.airportheliportcollocation_ts.valid_time_end,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_begin,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_end,
    airport_heliport.airportheliportcollocation_ts.type_value,
    airport_heliport.airportheliportcollocation_ts.type_nilreason,
    airport_heliport_airportheliport_pt_xbgnzw.title,
    airport_heliport_airportheliport_pt_xbgnzw.nilreason,
    airport_heliport_airportheliport_pt_xbgnzw.href,
    airport_heliport_airportheliport_pt_fgdhmg.title,
    airport_heliport_airportheliport_pt_fgdhmg.nilreason,
    airport_heliport_airportheliport_pt_fgdhmg.href
order by airportheliportcollocation.identifier, airportheliportcollocation_ts.sequence_number, airportheliportcollocation_ts.correction_number DESC;
create or replace view routes.airspacebordercrossing_publisher_view as
select distinct on (airspacebordercrossing.identifier,airspacebordercrossing_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.airspacebordercrossing.id,
    routes.airspacebordercrossing_ts.id as ts_id,
    routes.airspacebordercrossing_tsp.id as tsp_id,
    routes.airspacebordercrossing.identifier,
    routes.airspacebordercrossing_ts.interpretation,
    routes.airspacebordercrossing_ts.sequence_number,
    routes.airspacebordercrossing_ts.correction_number,
    routes.airspacebordercrossing_ts.valid_time_begin,
    routes.airspacebordercrossing_ts.valid_time_end,
    routes.airspacebordercrossing_ts.feature_lifetime_begin,
    routes.airspacebordercrossing_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airspace_airspace_pt_esclgn.title as varchar), '(' || airspace_airspace_pt_esclgn.nilreason[1] || ')') AS exitedairspace,
    airspace_airspace_pt_esclgn.href AS exitedairspace_href,
    coalesce(cast(airspace_airspace_pt_tscali.title as varchar), '(' || airspace_airspace_pt_tscali.nilreason[1] || ')') AS enteredairspace,
    airspace_airspace_pt_tscali.href AS enteredairspace_href
from routes.airspacebordercrossing 
inner join master_join mj2 on routes.airspacebordercrossing.id = mj2.source_id
inner join routes.airspacebordercrossing_tsp on mj2.target_id = routes.airspacebordercrossing_tsp.id
inner join routes.airspacebordercrossing_ts on routes.airspacebordercrossing_tsp.airspacebordercrossingtimeslice_id = routes.airspacebordercrossing_ts.id
left join master_join mj3 on routes.airspacebordercrossing_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airspace.airspace_pt airspace_airspace_pt_esclgn on routes.airspacebordercrossing_ts.exitedairspace_id = airspace_airspace_pt_esclgn.id
left join airspace.airspace_pt airspace_airspace_pt_tscali on routes.airspacebordercrossing_ts.enteredairspace_id = airspace_airspace_pt_tscali.id
--snowflake many notes.note.annotation - NotePropertyType
where routes.airspacebordercrossing.feature_status = 'APPROVED'
  and routes.airspacebordercrossing_ts.feature_status = 'APPROVED'
group by
    routes.airspacebordercrossing.id,
    routes.airspacebordercrossing_ts.id,
    routes.airspacebordercrossing_tsp.id,
    routes.airspacebordercrossing.identifier,
    routes.airspacebordercrossing_ts.interpretation,
    routes.airspacebordercrossing_ts.sequence_number,
    routes.airspacebordercrossing_ts.correction_number,
    routes.airspacebordercrossing_ts.valid_time_begin,
    routes.airspacebordercrossing_ts.valid_time_end,
    routes.airspacebordercrossing_ts.feature_lifetime_begin,
    routes.airspacebordercrossing_ts.feature_lifetime_end,
    airspace_airspace_pt_esclgn.title,
    airspace_airspace_pt_esclgn.nilreason,
    airspace_airspace_pt_esclgn.href,
    airspace_airspace_pt_tscali.title,
    airspace_airspace_pt_tscali.nilreason,
    airspace_airspace_pt_tscali.href
order by airspacebordercrossing.identifier, airspacebordercrossing_ts.sequence_number, airspacebordercrossing_ts.correction_number DESC;
create or replace view procedure.navigationarearestriction_publisher_view as
select distinct on (navigationarearestriction.identifier,navigationarearestriction_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.navigationarearestriction.id,
    procedure.navigationarearestriction_ts.id as ts_id,
    procedure.navigationarearestriction_tsp.id as tsp_id,
    procedure.navigationarearestriction.identifier,
    procedure.navigationarearestriction_ts.interpretation,
    procedure.navigationarearestriction_ts.sequence_number,
    procedure.navigationarearestriction_ts.correction_number,
    procedure.navigationarearestriction_ts.valid_time_begin,
    procedure.navigationarearestriction_ts.valid_time_end,
    procedure.navigationarearestriction_ts.feature_lifetime_begin,
    procedure.navigationarearestriction_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.navigationarearestriction_ts.type_value as varchar), '(' || procedure.navigationarearestriction_ts.type_nilreason || ')') as type,
    coalesce(cast(shared_obstacleassessmentarea_pt_imvqrb.title as varchar), '(' || shared_obstacleassessmentarea_pt_imvqrb.nilreason[1] || ')') AS designsurface,
    shared_obstacleassessmentarea_pt_imvqrb.href AS designsurface_href,
    coalesce(cast(shared_circlesector_pt_qpmuzo.title as varchar), '(' || shared_circlesector_pt_qpmuzo.nilreason[1] || ')') AS sectordefinition,
    shared_circlesector_pt_qpmuzo.href AS sectordefinition_href
from procedure.navigationarearestriction 
inner join master_join mj2 on procedure.navigationarearestriction.id = mj2.source_id
inner join procedure.navigationarearestriction_tsp on mj2.target_id = procedure.navigationarearestriction_tsp.id
inner join procedure.navigationarearestriction_ts on procedure.navigationarearestriction_tsp.navigationarearestrictiontimeslice_id = procedure.navigationarearestriction_ts.id
left join master_join mj3 on procedure.navigationarearestriction_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join shared.obstacleassessmentarea_pt shared_obstacleassessmentarea_pt_imvqrb on procedure.navigationarearestriction_ts.designsurface_id = shared_obstacleassessmentarea_pt_imvqrb.id
left join shared.circlesector_pt shared_circlesector_pt_qpmuzo on procedure.navigationarearestriction_ts.sectordefinition_id = shared_circlesector_pt_qpmuzo.id
--snowflake many notes.note.annotation - NotePropertyType
where procedure.navigationarearestriction.feature_status = 'APPROVED'
  and procedure.navigationarearestriction_ts.feature_status = 'APPROVED'
group by
    procedure.navigationarearestriction.id,
    procedure.navigationarearestriction_ts.id,
    procedure.navigationarearestriction_tsp.id,
    procedure.navigationarearestriction.identifier,
    procedure.navigationarearestriction_ts.interpretation,
    procedure.navigationarearestriction_ts.sequence_number,
    procedure.navigationarearestriction_ts.correction_number,
    procedure.navigationarearestriction_ts.valid_time_begin,
    procedure.navigationarearestriction_ts.valid_time_end,
    procedure.navigationarearestriction_ts.feature_lifetime_begin,
    procedure.navigationarearestriction_ts.feature_lifetime_end,
    procedure.navigationarearestriction_ts.type_value,
    procedure.navigationarearestriction_ts.type_nilreason,
    shared_obstacleassessmentarea_pt_imvqrb.title,
    shared_obstacleassessmentarea_pt_imvqrb.nilreason,
    shared_obstacleassessmentarea_pt_imvqrb.href,
    shared_circlesector_pt_qpmuzo.title,
    shared_circlesector_pt_qpmuzo.nilreason,
    shared_circlesector_pt_qpmuzo.href
order by navigationarearestriction.identifier, navigationarearestriction_ts.sequence_number, navigationarearestriction_ts.correction_number DESC;
create or replace view procedure.proceduredme_publisher_view as
select distinct on (proceduredme.identifier,proceduredme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.proceduredme.id,
    procedure.proceduredme_ts.id as ts_id,
    procedure.proceduredme_tsp.id as tsp_id,
    procedure.proceduredme.identifier,
    procedure.proceduredme_ts.interpretation,
    procedure.proceduredme_ts.sequence_number,
    procedure.proceduredme_ts.correction_number,
    procedure.proceduredme_ts.valid_time_begin,
    procedure.proceduredme_ts.valid_time_end,
    procedure.proceduredme_ts.feature_lifetime_begin,
    procedure.proceduredme_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.proceduredme_ts.criticaldme_value as varchar), '(' || procedure.proceduredme_ts.criticaldme_nilreason || ')') as criticaldme,
    coalesce(cast(procedure.proceduredme_ts.satisfactory_value as varchar), '(' || procedure.proceduredme_ts.satisfactory_nilreason || ')') as satisfactory,
    coalesce(cast(navaids_points_dme_pt_tapmdm.title as varchar), '(' || navaids_points_dme_pt_tapmdm.nilreason[1] || ')') AS dme,
    navaids_points_dme_pt_tapmdm.href AS dme_href
from procedure.proceduredme 
inner join master_join mj2 on procedure.proceduredme.id = mj2.source_id
inner join procedure.proceduredme_tsp on mj2.target_id = procedure.proceduredme_tsp.id
inner join procedure.proceduredme_ts on procedure.proceduredme_tsp.proceduredmetimeslice_id = procedure.proceduredme_ts.id
left join master_join mj3 on procedure.proceduredme_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.dme_pt navaids_points_dme_pt_tapmdm on procedure.proceduredme_ts.dme_id = navaids_points_dme_pt_tapmdm.id
--snowflake many notes.note.annotation - NotePropertyType
where procedure.proceduredme.feature_status = 'APPROVED'
  and procedure.proceduredme_ts.feature_status = 'APPROVED'
group by
    procedure.proceduredme.id,
    procedure.proceduredme_ts.id,
    procedure.proceduredme_tsp.id,
    procedure.proceduredme.identifier,
    procedure.proceduredme_ts.interpretation,
    procedure.proceduredme_ts.sequence_number,
    procedure.proceduredme_ts.correction_number,
    procedure.proceduredme_ts.valid_time_begin,
    procedure.proceduredme_ts.valid_time_end,
    procedure.proceduredme_ts.feature_lifetime_begin,
    procedure.proceduredme_ts.feature_lifetime_end,
    procedure.proceduredme_ts.criticaldme_value,
    procedure.proceduredme_ts.criticaldme_nilreason,
    procedure.proceduredme_ts.satisfactory_value,
    procedure.proceduredme_ts.satisfactory_nilreason,
    navaids_points_dme_pt_tapmdm.title,
    navaids_points_dme_pt_tapmdm.nilreason,
    navaids_points_dme_pt_tapmdm.href
order by proceduredme.identifier, proceduredme_ts.sequence_number, proceduredme_ts.correction_number DESC;
create or replace view routes.routedme_publisher_view as
select distinct on (routedme.identifier,routedme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.routedme.id,
    routes.routedme_ts.id as ts_id,
    routes.routedme_tsp.id as tsp_id,
    routes.routedme.identifier,
    routes.routedme_ts.interpretation,
    routes.routedme_ts.sequence_number,
    routes.routedme_ts.correction_number,
    routes.routedme_ts.valid_time_begin,
    routes.routedme_ts.valid_time_end,
    routes.routedme_ts.feature_lifetime_begin,
    routes.routedme_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(routes.routedme_ts.criticaldme_value as varchar), '(' || routes.routedme_ts.criticaldme_nilreason || ')') as criticaldme,
    coalesce(cast(routes.routedme_ts.satisfactory_value as varchar), '(' || routes.routedme_ts.satisfactory_nilreason || ')') as satisfactory,
    coalesce(cast(navaids_points_dme_pt_aoofjy.title as varchar), '(' || navaids_points_dme_pt_aoofjy.nilreason[1] || ')') AS referenceddme,
    navaids_points_dme_pt_aoofjy.href AS referenceddme_href,
    coalesce(cast(routes_routeportion_pt_qtrika.title as varchar), '(' || routes_routeportion_pt_qtrika.nilreason[1] || ')') AS applicablerouteportion,
    routes_routeportion_pt_qtrika.href AS applicablerouteportion_href
from routes.routedme 
inner join master_join mj2 on routes.routedme.id = mj2.source_id
inner join routes.routedme_tsp on mj2.target_id = routes.routedme_tsp.id
inner join routes.routedme_ts on routes.routedme_tsp.routedmetimeslice_id = routes.routedme_ts.id
left join master_join mj3 on routes.routedme_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.dme_pt navaids_points_dme_pt_aoofjy on routes.routedme_ts.referenceddme_id = navaids_points_dme_pt_aoofjy.id
left join routes.routeportion_pt routes_routeportion_pt_qtrika on routes.routedme_ts.applicablerouteportion_id = routes_routeportion_pt_qtrika.id
--snowflake many notes.note.annotation - NotePropertyType
where routes.routedme.feature_status = 'APPROVED'
  and routes.routedme_ts.feature_status = 'APPROVED'
group by
    routes.routedme.id,
    routes.routedme_ts.id,
    routes.routedme_tsp.id,
    routes.routedme.identifier,
    routes.routedme_ts.interpretation,
    routes.routedme_ts.sequence_number,
    routes.routedme_ts.correction_number,
    routes.routedme_ts.valid_time_begin,
    routes.routedme_ts.valid_time_end,
    routes.routedme_ts.feature_lifetime_begin,
    routes.routedme_ts.feature_lifetime_end,
    routes.routedme_ts.criticaldme_value,
    routes.routedme_ts.criticaldme_nilreason,
    routes.routedme_ts.satisfactory_value,
    routes.routedme_ts.satisfactory_nilreason,
    navaids_points_dme_pt_aoofjy.title,
    navaids_points_dme_pt_aoofjy.nilreason,
    navaids_points_dme_pt_aoofjy.href,
    routes_routeportion_pt_qtrika.title,
    routes_routeportion_pt_qtrika.nilreason,
    routes_routeportion_pt_qtrika.href
order by routedme.identifier, routedme_ts.sequence_number, routedme_ts.correction_number DESC;
create or replace view navaids_points.specialnavigationsystem_publisher_view as
select distinct on (specialnavigationsystem.identifier,specialnavigationsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.specialnavigationsystem.id,
    navaids_points.specialnavigationsystem_ts.id as ts_id,
    navaids_points.specialnavigationsystem_tsp.id as tsp_id,
    navaids_points.specialnavigationsystem.identifier,
    navaids_points.specialnavigationsystem_ts.interpretation,
    navaids_points.specialnavigationsystem_ts.sequence_number,
    navaids_points.specialnavigationsystem_ts.correction_number,
    navaids_points.specialnavigationsystem_ts.valid_time_begin,
    navaids_points.specialnavigationsystem_ts.valid_time_end,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_begin,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.type_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.designator_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.name_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.title as varchar), '(' || navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.nilreason[1] || ')') AS responsibleorganisation,
    navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.href AS responsibleorganisation_href
from navaids_points.specialnavigationsystem 
inner join master_join mj2 on navaids_points.specialnavigationsystem.id = mj2.source_id
inner join navaids_points.specialnavigationsystem_tsp on mj2.target_id = navaids_points.specialnavigationsystem_tsp.id
inner join navaids_points.specialnavigationsystem_ts on navaids_points.specialnavigationsystem_tsp.specialnavigationsystemtimeslice_id = navaids_points.specialnavigationsystem_ts.id
left join master_join mj3 on navaids_points.specialnavigationsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.authorityforspecialnavigationsystem_pt navaids_points_authorityforspecialnavigationsystem_pt_xjvusa on navaids_points.specialnavigationsystem_ts.responsibleorganisation_id = navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.id
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.specialnavigationsystem.feature_status = 'APPROVED'
  and navaids_points.specialnavigationsystem_ts.feature_status = 'APPROVED'
group by
    navaids_points.specialnavigationsystem.id,
    navaids_points.specialnavigationsystem_ts.id,
    navaids_points.specialnavigationsystem_tsp.id,
    navaids_points.specialnavigationsystem.identifier,
    navaids_points.specialnavigationsystem_ts.interpretation,
    navaids_points.specialnavigationsystem_ts.sequence_number,
    navaids_points.specialnavigationsystem_ts.correction_number,
    navaids_points.specialnavigationsystem_ts.valid_time_begin,
    navaids_points.specialnavigationsystem_ts.valid_time_end,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_begin,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_end,
    navaids_points.specialnavigationsystem_ts.type_value,
    navaids_points.specialnavigationsystem_ts.type_nilreason,
    navaids_points.specialnavigationsystem_ts.designator_value,
    navaids_points.specialnavigationsystem_ts.designator_nilreason,
    navaids_points.specialnavigationsystem_ts.name_value,
    navaids_points.specialnavigationsystem_ts.name_nilreason,
    navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.title,
    navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.nilreason,
    navaids_points_authorityforspecialnavigationsystem_pt_xjvusa.href
order by specialnavigationsystem.identifier, specialnavigationsystem_ts.sequence_number, specialnavigationsystem_ts.correction_number DESC;
create or replace view shared.standardleveltable_publisher_view as
select distinct on (standardleveltable.identifier,standardleveltable_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardleveltable.id,
    shared.standardleveltable_ts.id as ts_id,
    shared.standardleveltable_tsp.id as tsp_id,
    shared.standardleveltable.identifier,
    shared.standardleveltable_ts.interpretation,
    shared.standardleveltable_ts.sequence_number,
    shared.standardleveltable_ts.correction_number,
    shared.standardleveltable_ts.valid_time_begin,
    shared.standardleveltable_ts.valid_time_end,
    shared.standardleveltable_ts.feature_lifetime_begin,
    shared.standardleveltable_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(shared.standardleveltable_ts.name_value as varchar), '(' || shared.standardleveltable_ts.name_nilreason || ')') as name,
    coalesce(cast(shared.standardleveltable_ts.standardicao_value as varchar), '(' || shared.standardleveltable_ts.standardicao_nilreason || ')') as standardicao
from shared.standardleveltable 
inner join master_join mj2 on shared.standardleveltable.id = mj2.source_id
inner join shared.standardleveltable_tsp on mj2.target_id = shared.standardleveltable_tsp.id
inner join shared.standardleveltable_ts on shared.standardleveltable_tsp.standardleveltabletimeslice_id = shared.standardleveltable_ts.id
left join master_join mj3 on shared.standardleveltable_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake many notes.note.annotation - NotePropertyType
where shared.standardleveltable.feature_status = 'APPROVED'
  and shared.standardleveltable_ts.feature_status = 'APPROVED'
group by
    shared.standardleveltable.id,
    shared.standardleveltable_ts.id,
    shared.standardleveltable_tsp.id,
    shared.standardleveltable.identifier,
    shared.standardleveltable_ts.interpretation,
    shared.standardleveltable_ts.sequence_number,
    shared.standardleveltable_ts.correction_number,
    shared.standardleveltable_ts.valid_time_begin,
    shared.standardleveltable_ts.valid_time_end,
    shared.standardleveltable_ts.feature_lifetime_begin,
    shared.standardleveltable_ts.feature_lifetime_end,
    shared.standardleveltable_ts.name_value,
    shared.standardleveltable_ts.name_nilreason,
    shared.standardleveltable_ts.standardicao_value,
    shared.standardleveltable_ts.standardicao_nilreason
order by standardleveltable.identifier, standardleveltable_ts.sequence_number, standardleveltable_ts.correction_number DESC;
create or replace view holding.unplannedholding_publisher_view as
select distinct on (unplannedholding.identifier,unplannedholding_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    holding.unplannedholding.id,
    holding.unplannedholding_ts.id as ts_id,
    holding.unplannedholding_tsp.id as tsp_id,
    holding.unplannedholding.identifier,
    holding.unplannedholding_ts.interpretation,
    holding.unplannedholding_ts.sequence_number,
    holding.unplannedholding_ts.correction_number,
    holding.unplannedholding_ts.valid_time_begin,
    holding.unplannedholding_ts.valid_time_end,
    holding.unplannedholding_ts.feature_lifetime_begin,
    holding.unplannedholding_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(holding.unplannedholding_ts.unplannedholding_value as varchar), '(' || holding.unplannedholding_ts.unplannedholding_nilreason || ')') as unplannedholding,
    coalesce(cast(holding.unplannedholding_ts.altitudereference_value as varchar), '(' || holding.unplannedholding_ts.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(holding.unplannedholding_ts.controlledairspace_value as varchar), '(' || holding.unplannedholding_ts.controlledairspace_nilreason || ')') as controlledairspace,
    coalesce(cast(holding.unplannedholding_ts.authorizedaltitude_value as varchar) || ' ' || holding.unplannedholding_ts.authorizedaltitude_uom, '(' || holding.unplannedholding_ts.authorizedaltitude_nilreason || ')') as authorizedaltitude,
    coalesce(cast(navaids_points_segmentpoint_pt_igwfuv.title as varchar), '(' || navaids_points_segmentpoint_pt_igwfuv.nilreason[1] || ')') AS holdingpoint,
    navaids_points_segmentpoint_pt_igwfuv.href AS holdingpoint_href
from holding.unplannedholding 
inner join master_join mj2 on holding.unplannedholding.id = mj2.source_id
inner join holding.unplannedholding_tsp on mj2.target_id = holding.unplannedholding_tsp.id
inner join holding.unplannedholding_ts on holding.unplannedholding_tsp.unplannedholdingtimeslice_id = holding.unplannedholding_ts.id
left join master_join mj3 on holding.unplannedholding_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.segmentpoint_pt navaids_points_segmentpoint_pt_igwfuv on holding.unplannedholding_ts.holdingpoint_id = navaids_points_segmentpoint_pt_igwfuv.id
--snowflake many notes.note.annotation - NotePropertyType
where holding.unplannedholding.feature_status = 'APPROVED'
  and holding.unplannedholding_ts.feature_status = 'APPROVED'
group by
    holding.unplannedholding.id,
    holding.unplannedholding_ts.id,
    holding.unplannedholding_tsp.id,
    holding.unplannedholding.identifier,
    holding.unplannedholding_ts.interpretation,
    holding.unplannedholding_ts.sequence_number,
    holding.unplannedholding_ts.correction_number,
    holding.unplannedholding_ts.valid_time_begin,
    holding.unplannedholding_ts.valid_time_end,
    holding.unplannedholding_ts.feature_lifetime_begin,
    holding.unplannedholding_ts.feature_lifetime_end,
    holding.unplannedholding_ts.unplannedholding_value,
    holding.unplannedholding_ts.unplannedholding_nilreason,
    holding.unplannedholding_ts.altitudereference_value,
    holding.unplannedholding_ts.altitudereference_nilreason,
    holding.unplannedholding_ts.controlledairspace_value,
    holding.unplannedholding_ts.controlledairspace_nilreason,
    holding.unplannedholding_ts.authorizedaltitude_value,
    holding.unplannedholding_ts.authorizedaltitude_uom,
    holding.unplannedholding_ts.authorizedaltitude_nilreason,
    navaids_points_segmentpoint_pt_igwfuv.title,
    navaids_points_segmentpoint_pt_igwfuv.nilreason,
    navaids_points_segmentpoint_pt_igwfuv.href
order by unplannedholding.identifier, unplannedholding_ts.sequence_number, unplannedholding_ts.correction_number DESC;
create or replace view airspace.airspacegeometrycomponent_view as
select
    airspace.airspacegeometrycomponent_pt.id,
    jsonb_agg(notes.note_view.note) AS airspacegeometrycomponent_annotation,
    airspace.airspacegeometrycomponent_pt.nilreason AS airspacegeometrycomponent_annotation,
    coalesce(cast(airspace.airspacegeometrycomponent.operation_value as varchar), '(' || airspace.airspacegeometrycomponent.operation_nilreason || ')') as operation,
    coalesce(cast(airspace.airspacegeometrycomponent.operationsequence_value as varchar), '(' || airspace.airspacegeometrycomponent.operationsequence_nilreason || ')') as operationsequence,
    airspace_airspacevolume_pt_sknzvr.id AS theairspacevolume
from airspace.airspacegeometrycomponent_pt 
inner join airspace.airspacegeometrycomponent on airspace.airspacegeometrycomponent_pt.airspacegeometrycomponent_id = airspace.airspacegeometrycomponent.id
left join master_join mj1 on airspace.airspacegeometrycomponent.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join airspace.airspacevolume_pt airspace_airspacevolume_pt_sknzvr on airspace.airspacegeometrycomponent.theairspacevolume_id = airspace_airspacevolume_pt_sknzvr.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airspace.airspacegeometrycomponent_pt.id,
    airspace.airspacegeometrycomponent_pt.nilreason,
    airspace.airspacegeometrycomponent.operation_value,
    airspace.airspacegeometrycomponent.operation_nilreason,
    airspace.airspacegeometrycomponent.operationsequence_value,
    airspace.airspacegeometrycomponent.operationsequence_nilreason;
create or replace view shared.airspacelayer_view as
select
    shared.airspacelayer_pt.id,
    jsonb_agg(notes.note_view.note) AS airspacelayer_annotation,
    shared.airspacelayer_pt.nilreason AS airspacelayer_annotation,
    coalesce(cast(shared.airspacelayer.upperlimitreference_value as varchar), '(' || shared.airspacelayer.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.airspacelayer.lowerlimitreference_value as varchar), '(' || shared.airspacelayer.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.airspacelayer.altitudeinterpretation_value as varchar), '(' || shared.airspacelayer.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(shared.airspacelayer.upperlimit_value as varchar) || ' ' || shared.airspacelayer.upperlimit_uom, '(' || shared.airspacelayer.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.airspacelayer.lowerlimit_value as varchar) || ' ' || shared.airspacelayer.lowerlimit_uom, '(' || shared.airspacelayer.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(shared_standardlevelcolumn_pt_wtnwpq.title as varchar), '(' || shared_standardlevelcolumn_pt_wtnwpq.nilreason[1] || ')') AS discretelevelseries,
    shared_standardlevelcolumn_pt_wtnwpq.href AS discretelevelseries_href
from shared.airspacelayer_pt 
inner join shared.airspacelayer on shared.airspacelayer_pt.airspacelayer_id = shared.airspacelayer.id
left join master_join mj1 on shared.airspacelayer.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join shared.standardlevelcolumn_pt shared_standardlevelcolumn_pt_wtnwpq on shared.airspacelayer_ts.discretelevelseries_id = shared_standardlevelcolumn_pt_wtnwpq.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.airspacelayer_pt.id,
    shared.airspacelayer_pt.nilreason,
    shared.airspacelayer.upperlimitreference_value,
    shared.airspacelayer.upperlimitreference_nilreason,
    shared.airspacelayer.lowerlimitreference_value,
    shared.airspacelayer.lowerlimitreference_nilreason,
    shared.airspacelayer.altitudeinterpretation_value,
    shared.airspacelayer.altitudeinterpretation_nilreason,
    shared.airspacelayer.upperlimit_value,
    shared.airspacelayer.upperlimit_uom,
    shared.airspacelayer.upperlimit_nilreason,
    shared.airspacelayer.lowerlimit_value,
    shared.airspacelayer.lowerlimit_uom,
    shared.airspacelayer.lowerlimit_nilreason,
    shared_standardlevelcolumn_pt_wtnwpq.title,
    shared_standardlevelcolumn_pt_wtnwpq.nilreason,
    shared_standardlevelcolumn_pt_wtnwpq.href;
create or replace view airspace.airspacevolumedependency_view as
select
    airspace.airspacevolumedependency_pt.id,
    jsonb_agg(notes.note_view.note) AS airspacevolumedependency_annotation,
    airspace.airspacevolumedependency_pt.nilreason AS airspacevolumedependency_annotation,
    coalesce(cast(airspace.airspacevolumedependency.dependency_value as varchar), '(' || airspace.airspacevolumedependency.dependency_nilreason || ')') as dependency,
    coalesce(cast(airspace_airspace_pt_hlnsra.title as varchar), '(' || airspace_airspace_pt_hlnsra.nilreason[1] || ')') AS theairspace,
    airspace_airspace_pt_hlnsra.href AS theairspace_href
from airspace.airspacevolumedependency_pt 
inner join airspace.airspacevolumedependency on airspace.airspacevolumedependency_pt.airspacevolumedependency_id = airspace.airspacevolumedependency.id
left join master_join mj1 on airspace.airspacevolumedependency.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join airspace.airspace_pt airspace_airspace_pt_hlnsra on airspace.airspacevolumedependency_ts.theairspace_id = airspace_airspace_pt_hlnsra.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airspace.airspacevolumedependency_pt.id,
    airspace.airspacevolumedependency_pt.nilreason,
    airspace.airspacevolumedependency.dependency_value,
    airspace.airspacevolumedependency.dependency_nilreason,
    airspace_airspace_pt_hlnsra.title,
    airspace_airspace_pt_hlnsra.nilreason,
    airspace_airspace_pt_hlnsra.href;
create or replace view navaids_points.angleuse_view as
select
    navaids_points.angleuse_pt.id,
    jsonb_agg(notes.note_view.note) AS angleuse_annotation,
    navaids_points.angleuse_pt.nilreason AS angleuse_annotation,
    coalesce(cast(navaids_points.angleuse.alongcourseguidance_value as varchar), '(' || navaids_points.angleuse.alongcourseguidance_nilreason || ')') as alongcourseguidance,
    coalesce(cast(navaids_points_angleindication_pt_nvuodg.title as varchar), '(' || navaids_points_angleindication_pt_nvuodg.nilreason[1] || ')') AS theangleindication,
    navaids_points_angleindication_pt_nvuodg.href AS theangleindication_href
from navaids_points.angleuse_pt 
inner join navaids_points.angleuse on navaids_points.angleuse_pt.angleuse_id = navaids_points.angleuse.id
left join master_join mj1 on navaids_points.angleuse.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_nvuodg on navaids_points.angleuse_ts.theangleindication_id = navaids_points_angleindication_pt_nvuodg.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.angleuse_pt.id,
    navaids_points.angleuse_pt.nilreason,
    navaids_points.angleuse.alongcourseguidance_value,
    navaids_points.angleuse.alongcourseguidance_nilreason,
    navaids_points_angleindication_pt_nvuodg.title,
    navaids_points_angleindication_pt_nvuodg.nilreason,
    navaids_points_angleindication_pt_nvuodg.href;
create or replace view aerial_refuelling.authorityforaerialrefuelling_view as
select
    aerial_refuelling.authorityforaerialrefuelling_pt.id,
    jsonb_agg(notes.note_view.note) AS authorityforaerialrefuelling_annotation,
    aerial_refuelling.authorityforaerialrefuelling_pt.nilreason AS authorityforaerialrefuelling_annotation,
    coalesce(cast(aerial_refuelling.authorityforaerialrefuelling.type_value as varchar), '(' || aerial_refuelling.authorityforaerialrefuelling.type_nilreason || ')') as type
from aerial_refuelling.authorityforaerialrefuelling_pt 
inner join aerial_refuelling.authorityforaerialrefuelling on aerial_refuelling.authorityforaerialrefuelling_pt.authorityforaerialrefuelling_id = aerial_refuelling.authorityforaerialrefuelling.id
left join master_join mj1 on aerial_refuelling.authorityforaerialrefuelling.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one .organisationauthority.theorganisationauthority - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    aerial_refuelling.authorityforaerialrefuelling_pt.id,
    aerial_refuelling.authorityforaerialrefuelling_pt.nilreason,
    aerial_refuelling.authorityforaerialrefuelling.type_value,
    aerial_refuelling.authorityforaerialrefuelling.type_nilreason;
create or replace view navaids_points.authorityfornavaidequipment_view as
select
    navaids_points.authorityfornavaidequipment_pt.id,
    jsonb_agg(notes.note_view.note) AS authorityfornavaidequipment_annotation,
    navaids_points.authorityfornavaidequipment_pt.nilreason AS authorityfornavaidequipment_annotation,
    coalesce(cast(navaids_points.authorityfornavaidequipment.type_value as varchar), '(' || navaids_points.authorityfornavaidequipment.type_nilreason || ')') as type
from navaids_points.authorityfornavaidequipment_pt 
inner join navaids_points.authorityfornavaidequipment on navaids_points.authorityfornavaidequipment_pt.authorityfornavaidequipment_id = navaids_points.authorityfornavaidequipment.id
left join master_join mj1 on navaids_points.authorityfornavaidequipment.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one .organisationauthority.theorganisationauthority - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.authorityfornavaidequipment_pt.id,
    navaids_points.authorityfornavaidequipment_pt.nilreason,
    navaids_points.authorityfornavaidequipment.type_value,
    navaids_points.authorityfornavaidequipment.type_nilreason;
create or replace view navaids_points.authorityforspecialnavigationstation_view as
select
    navaids_points.authorityforspecialnavigationstation_pt.id,
    jsonb_agg(notes.note_view.note) AS authorityforspecialnavigationstation_annotation,
    navaids_points.authorityforspecialnavigationstation_pt.nilreason AS authorityforspecialnavigationstation_annotation,
    coalesce(cast(navaids_points.authorityforspecialnavigationstation.type_value as varchar), '(' || navaids_points.authorityforspecialnavigationstation.type_nilreason || ')') as type
from navaids_points.authorityforspecialnavigationstation_pt 
inner join navaids_points.authorityforspecialnavigationstation on navaids_points.authorityforspecialnavigationstation_pt.authorityforspecialnavigationstation_id = navaids_points.authorityforspecialnavigationstation.id
left join master_join mj1 on navaids_points.authorityforspecialnavigationstation.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one .organisationauthority.theorganisationauthority - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.authorityforspecialnavigationstation_pt.id,
    navaids_points.authorityforspecialnavigationstation_pt.nilreason,
    navaids_points.authorityforspecialnavigationstation.type_value,
    navaids_points.authorityforspecialnavigationstation.type_nilreason;
create or replace view navaids_points.authorityforspecialnavigationsystem_view as
select
    navaids_points.authorityforspecialnavigationsystem_pt.id,
    jsonb_agg(notes.note_view.note) AS authorityforspecialnavigationsystem_annotation,
    navaids_points.authorityforspecialnavigationsystem_pt.nilreason AS authorityforspecialnavigationsystem_annotation,
    coalesce(cast(navaids_points.authorityforspecialnavigationsystem.type_value as varchar), '(' || navaids_points.authorityforspecialnavigationsystem.type_nilreason || ')') as type
from navaids_points.authorityforspecialnavigationsystem_pt 
inner join navaids_points.authorityforspecialnavigationsystem on navaids_points.authorityforspecialnavigationsystem_pt.authorityforspecialnavigationsystem_id = navaids_points.authorityforspecialnavigationsystem.id
left join master_join mj1 on navaids_points.authorityforspecialnavigationsystem.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one .organisationauthority.theorganisationauthority - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.authorityforspecialnavigationsystem_pt.id,
    navaids_points.authorityforspecialnavigationsystem_pt.nilreason,
    navaids_points.authorityforspecialnavigationsystem.type_value,
    navaids_points.authorityforspecialnavigationsystem.type_nilreason;
create or replace view procedure.departurearrivalcondition_view as
select
    procedure.departurearrivalcondition_pt.id,
    jsonb_agg(notes.note_view.note) AS departurearrivalcondition_annotation,
    procedure.departurearrivalcondition_pt.nilreason AS departurearrivalcondition_annotation,
    coalesce(cast(procedure.departurearrivalcondition.minimumcrossingatendreference_value as varchar), '(' || procedure.departurearrivalcondition.minimumcrossingatendreference_nilreason || ')') as minimumcrossingatendreference,
    coalesce(cast(procedure.departurearrivalcondition.maximumcrossingatendreference_value as varchar), '(' || procedure.departurearrivalcondition.maximumcrossingatendreference_nilreason || ')') as maximumcrossingatendreference,
    coalesce(cast(procedure.departurearrivalcondition.minimumenroutealtitude_value as varchar) || ' ' || procedure.departurearrivalcondition.minimumenroutealtitude_uom, '(' || procedure.departurearrivalcondition.minimumenroutealtitude_nilreason || ')') as minimumenroutealtitude,
    coalesce(cast(procedure.departurearrivalcondition.minimumcrossingatend_value as varchar) || ' ' || procedure.departurearrivalcondition.minimumcrossingatend_uom, '(' || procedure.departurearrivalcondition.minimumcrossingatend_nilreason || ')') as minimumcrossingatend,
    coalesce(cast(procedure.departurearrivalcondition.maximumcrossingatend_value as varchar) || ' ' || procedure.departurearrivalcondition.maximumcrossingatend_uom, '(' || procedure.departurearrivalcondition.maximumcrossingatend_nilreason || ')') as maximumcrossingatend,
    shared_aircraftcharacteristic_pt_lixzrv.id AS enginetype
from procedure.departurearrivalcondition_pt 
inner join procedure.departurearrivalcondition on procedure.departurearrivalcondition_pt.departurearrivalcondition_id = procedure.departurearrivalcondition.id
left join master_join mj1 on procedure.departurearrivalcondition.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_lixzrv on procedure.departurearrivalcondition.engine_id = shared_aircraftcharacteristic_pt_lixzrv.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.departurearrivalcondition_pt.id,
    procedure.departurearrivalcondition_pt.nilreason,
    procedure.departurearrivalcondition.minimumcrossingatendreference_value,
    procedure.departurearrivalcondition.minimumcrossingatendreference_nilreason,
    procedure.departurearrivalcondition.maximumcrossingatendreference_value,
    procedure.departurearrivalcondition.maximumcrossingatendreference_nilreason,
    procedure.departurearrivalcondition.minimumenroutealtitude_value,
    procedure.departurearrivalcondition.minimumenroutealtitude_uom,
    procedure.departurearrivalcondition.minimumenroutealtitude_nilreason,
    procedure.departurearrivalcondition.minimumcrossingatend_value,
    procedure.departurearrivalcondition.minimumcrossingatend_uom,
    procedure.departurearrivalcondition.minimumcrossingatend_nilreason,
    procedure.departurearrivalcondition.maximumcrossingatend_value,
    procedure.departurearrivalcondition.maximumcrossingatend_uom,
    procedure.departurearrivalcondition.maximumcrossingatend_nilreason;
create or replace view procedure.equipmentunavailableadjustment_view as
select
    procedure.equipmentunavailableadjustment_pt.id,
    jsonb_agg(notes.note_view.note) AS equipmentunavailableadjustment_annotation,
    procedure.equipmentunavailableadjustment_pt.nilreason AS equipmentunavailableadjustment_annotation,
    coalesce(cast(procedure.equipmentunavailableadjustment.type_value as varchar), '(' || procedure.equipmentunavailableadjustment.type_nilreason || ')') as type,
    coalesce(cast(procedure.equipmentunavailableadjustment.approachlightinginoperative_value as varchar), '(' || procedure.equipmentunavailableadjustment.approachlightinginoperative_nilreason || ')') as approachlightinginoperative,
    jsonb_agg(procedure_equipmentunavailableadjustmentcolumn_view_bvnkwz.id) AS adjustmentinopcol
from procedure.equipmentunavailableadjustment_pt 
inner join procedure.equipmentunavailableadjustment on procedure.equipmentunavailableadjustment_pt.equipmentunavailableadjustment_id = procedure.equipmentunavailableadjustment.id
left join master_join mj1 on procedure.equipmentunavailableadjustment.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_ppbqwr on procedure.equipmentunavailableadjustment.id = master_join_ppbqwr.source_id
left join procedure.equipmentunavailableadjustmentcolumn_view procedure_equipmentunavailableadjustmentcolumn_view_bvnkwz on master_join_ppbqwr.target_id = procedure_equipmentunavailableadjustmentcolumn_view_bvnkwz.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.equipmentunavailableadjustment_pt.id,
    procedure.equipmentunavailableadjustment_pt.nilreason,
    procedure.equipmentunavailableadjustment.type_value,
    procedure.equipmentunavailableadjustment.type_nilreason,
    procedure.equipmentunavailableadjustment.approachlightinginoperative_value,
    procedure.equipmentunavailableadjustment.approachlightinginoperative_nilreason;
create or replace view procedure.holdinguse_view as
select
    procedure.holdinguse_pt.id,
    jsonb_agg(notes.note_view.note) AS holdinguse_annotation,
    procedure.holdinguse_pt.nilreason AS holdinguse_annotation,
    coalesce(cast(procedure.holdinguse.holdinguse_value as varchar), '(' || procedure.holdinguse.holdinguse_nilreason || ')') as holdinguse,
    coalesce(cast(procedure.holdinguse.instruction_value as varchar), '(' || procedure.holdinguse.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.holdinguse.instructionaltitudereference_value as varchar), '(' || procedure.holdinguse.instructionaltitudereference_nilreason || ')') as instructionaltitudereference,
    coalesce(cast(procedure.holdinguse.instructedaltitude_value as varchar) || ' ' || procedure.holdinguse.instructedaltitude_uom, '(' || procedure.holdinguse.instructedaltitude_nilreason || ')') as instructedaltitude,
    coalesce(cast(holding_holdingpattern_pt_qodurd.title as varchar), '(' || holding_holdingpattern_pt_qodurd.nilreason[1] || ')') AS theholdingpattern,
    holding_holdingpattern_pt_qodurd.href AS theholdingpattern_href
from procedure.holdinguse_pt 
inner join procedure.holdinguse on procedure.holdinguse_pt.holdinguse_id = procedure.holdinguse.id
left join master_join mj1 on procedure.holdinguse.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join holding.holdingpattern_pt holding_holdingpattern_pt_qodurd on procedure.holdinguse_ts.theholdingpattern_id = holding_holdingpattern_pt_qodurd.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.holdinguse_pt.id,
    procedure.holdinguse_pt.nilreason,
    procedure.holdinguse.holdinguse_value,
    procedure.holdinguse.holdinguse_nilreason,
    procedure.holdinguse.instruction_value,
    procedure.holdinguse.instruction_nilreason,
    procedure.holdinguse.instructionaltitudereference_value,
    procedure.holdinguse.instructionaltitudereference_nilreason,
    procedure.holdinguse.instructedaltitude_value,
    procedure.holdinguse.instructedaltitude_uom,
    procedure.holdinguse.instructedaltitude_nilreason,
    holding_holdingpattern_pt_qodurd.title,
    holding_holdingpattern_pt_qodurd.nilreason,
    holding_holdingpattern_pt_qodurd.href;
create or replace view procedure.minima_view as
select
    procedure.minima_pt.id,
    jsonb_agg(notes.note_view.note) AS minima_annotation,
    procedure.minima_pt.nilreason AS minima_annotation,
    coalesce(cast(procedure.minima.altitudecode_value as varchar), '(' || procedure.minima.altitudecode_nilreason || ')') as altitudecode,
    coalesce(cast(procedure.minima.altitudereference_value as varchar), '(' || procedure.minima.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(procedure.minima.heightcode_value as varchar), '(' || procedure.minima.heightcode_nilreason || ')') as heightcode,
    coalesce(cast(procedure.minima.heightreference_value as varchar), '(' || procedure.minima.heightreference_nilreason || ')') as heightreference,
    coalesce(cast(procedure.minima.mandatoryrvr_value as varchar), '(' || procedure.minima.mandatoryrvr_nilreason || ')') as mandatoryrvr,
    coalesce(cast(procedure.minima.remotealtimeterminima_value as varchar), '(' || procedure.minima.remotealtimeterminima_nilreason || ')') as remotealtimeterminima,
    coalesce(cast(procedure.minima.altitude_value as varchar) || ' ' || procedure.minima.altitude_uom, '(' || procedure.minima.altitude_nilreason || ')') as altitude,
    coalesce(cast(procedure.minima.height_value as varchar) || ' ' || procedure.minima.height_uom, '(' || procedure.minima.height_nilreason || ')') as height,
    coalesce(cast(procedure.minima.militaryheight_value as varchar) || ' ' || procedure.minima.militaryheight_uom, '(' || procedure.minima.militaryheight_nilreason || ')') as militaryheight,
    coalesce(cast(procedure.minima.radioheight_value as varchar) || ' ' || procedure.minima.radioheight_uom, '(' || procedure.minima.radioheight_nilreason || ')') as radioheight,
    coalesce(cast(procedure.minima.visibility_value as varchar) || ' ' || procedure.minima.visibility_uom, '(' || procedure.minima.visibility_nilreason || ')') as visibility,
    coalesce(cast(procedure.minima.militaryvisibility_value as varchar) || ' ' || procedure.minima.militaryvisibility_uom, '(' || procedure.minima.militaryvisibility_nilreason || ')') as militaryvisibility,
    jsonb_agg(procedure_equipmentunavailableadjustment_view_cpgfor.id) AS adjustmentinop
from procedure.minima_pt 
inner join procedure.minima on procedure.minima_pt.minima_id = procedure.minima.id
left join master_join mj1 on procedure.minima.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_hecmrb on procedure.minima.id = master_join_hecmrb.source_id
left join procedure.equipmentunavailableadjustment_view procedure_equipmentunavailableadjustment_view_cpgfor on master_join_hecmrb.target_id = procedure_equipmentunavailableadjustment_view_cpgfor.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.minima_pt.id,
    procedure.minima_pt.nilreason,
    procedure.minima.altitudecode_value,
    procedure.minima.altitudecode_nilreason,
    procedure.minima.altitudereference_value,
    procedure.minima.altitudereference_nilreason,
    procedure.minima.heightcode_value,
    procedure.minima.heightcode_nilreason,
    procedure.minima.heightreference_value,
    procedure.minima.heightreference_nilreason,
    procedure.minima.mandatoryrvr_value,
    procedure.minima.mandatoryrvr_nilreason,
    procedure.minima.remotealtimeterminima_value,
    procedure.minima.remotealtimeterminima_nilreason,
    procedure.minima.altitude_value,
    procedure.minima.altitude_uom,
    procedure.minima.altitude_nilreason,
    procedure.minima.height_value,
    procedure.minima.height_uom,
    procedure.minima.height_nilreason,
    procedure.minima.militaryheight_value,
    procedure.minima.militaryheight_uom,
    procedure.minima.militaryheight_nilreason,
    procedure.minima.radioheight_value,
    procedure.minima.radioheight_uom,
    procedure.minima.radioheight_nilreason,
    procedure.minima.visibility_value,
    procedure.minima.visibility_uom,
    procedure.minima.visibility_nilreason,
    procedure.minima.militaryvisibility_value,
    procedure.minima.militaryvisibility_uom,
    procedure.minima.militaryvisibility_nilreason;
create or replace view procedure.missedapproachgroup_view as
select
    procedure.missedapproachgroup_pt.id,
    jsonb_agg(notes.note_view.note) AS missedapproachgroup_annotation,
    procedure.missedapproachgroup_pt.nilreason AS missedapproachgroup_annotation,
    coalesce(cast(procedure.missedapproachgroup.instruction_value as varchar), '(' || procedure.missedapproachgroup.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.missedapproachgroup.alternateclimbinstruction_value as varchar), '(' || procedure.missedapproachgroup.alternateclimbinstruction_nilreason || ')') as alternateclimbinstruction,
    coalesce(cast(procedure.missedapproachgroup.alternateclimbaltitude_value as varchar) || ' ' || procedure.missedapproachgroup.alternateclimbaltitude_uom, '(' || procedure.missedapproachgroup.alternateclimbaltitude_nilreason || ')') as alternateclimbaltitude,
    jsonb_agg(airport_heliport_altimetersource_pt_rufusm.id) AS altimeter
from procedure.missedapproachgroup_pt 
inner join procedure.missedapproachgroup on procedure.missedapproachgroup_pt.missedapproachgroup_id = procedure.missedapproachgroup.id
left join master_join mj1 on procedure.missedapproachgroup.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_zdlvvf on procedure.missedapproachgroup.id = master_join_zdlvvf.source_id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_rufusm on master_join_zdlvvf.target_id = airport_heliport_altimetersource_pt_rufusm.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.missedapproachgroup_pt.id,
    procedure.missedapproachgroup_pt.nilreason,
    procedure.missedapproachgroup.instruction_value,
    procedure.missedapproachgroup.instruction_nilreason,
    procedure.missedapproachgroup.alternateclimbinstruction_value,
    procedure.missedapproachgroup.alternateclimbinstruction_nilreason,
    procedure.missedapproachgroup.alternateclimbaltitude_value,
    procedure.missedapproachgroup.alternateclimbaltitude_uom,
    procedure.missedapproachgroup.alternateclimbaltitude_nilreason;
create or replace view organisation.organisationauthorityassociation_view as
select
    organisation.organisationauthorityassociation_pt.id,
    jsonb_agg(notes.note_view.note) AS organisationauthorityassociation_annotation,
    organisation.organisationauthorityassociation_pt.nilreason AS organisationauthorityassociation_annotation,
    coalesce(cast(organisation.organisationauthorityassociation.type_value as varchar), '(' || organisation.organisationauthorityassociation.type_nilreason || ')') as type
from organisation.organisationauthorityassociation_pt 
inner join organisation.organisationauthorityassociation on organisation.organisationauthorityassociation_pt.organisationauthorityassociation_id = organisation.organisationauthorityassociation.id
left join master_join mj1 on organisation.organisationauthorityassociation.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one .organisationauthority.theorganisationauthority - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    organisation.organisationauthorityassociation_pt.id,
    organisation.organisationauthorityassociation_pt.nilreason,
    organisation.organisationauthorityassociation.type_value,
    organisation.organisationauthorityassociation.type_nilreason;
create or replace view surveillance.reflector_view as
select
    surveillance.reflector_pt.id,
    jsonb_agg(notes.note_view.note) AS reflector_annotation,
    surveillance.reflector_pt.nilreason AS reflector_annotation,
    coalesce(cast(surveillance.reflector.type_value as varchar), '(' || surveillance.reflector.type_nilreason || ')') as type
from surveillance.reflector_pt 
inner join surveillance.reflector on surveillance.reflector_pt.reflector_id = surveillance.reflector.id
left join master_join mj1 on surveillance.reflector.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.touchdownreflector - ElevatedPointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    surveillance.reflector_pt.id,
    surveillance.reflector_pt.nilreason,
    surveillance.reflector.type_value,
    surveillance.reflector.type_nilreason;
create or replace view airport_heliport.runwaydeclareddistance_view as
select
    airport_heliport.runwaydeclareddistance_pt.id,
    jsonb_agg(notes.note_view.note) AS runwaydeclareddistance_annotation,
    airport_heliport.runwaydeclareddistance_pt.nilreason AS runwaydeclareddistance_annotation,
    coalesce(cast(airport_heliport.runwaydeclareddistance.type_value as varchar), '(' || airport_heliport.runwaydeclareddistance.type_nilreason || ')') as type,
    jsonb_agg(airport_heliport_runwaydeclareddistancevalue_view_wwfrbh.id) AS declaredvalue
from airport_heliport.runwaydeclareddistance_pt 
inner join airport_heliport.runwaydeclareddistance on airport_heliport.runwaydeclareddistance_pt.runwaydeclareddistance_id = airport_heliport.runwaydeclareddistance.id
left join master_join mj1 on airport_heliport.runwaydeclareddistance.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_gasspt on airport_heliport.runwaydeclareddistance.id = master_join_gasspt.source_id
left join airport_heliport.runwaydeclareddistancevalue_view airport_heliport_runwaydeclareddistancevalue_view_wwfrbh on master_join_gasspt.target_id = airport_heliport_runwaydeclareddistancevalue_view_wwfrbh.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.runwaydeclareddistance_pt.id,
    airport_heliport.runwaydeclareddistance_pt.nilreason,
    airport_heliport.runwaydeclareddistance.type_value,
    airport_heliport.runwaydeclareddistance.type_nilreason;
create or replace view airport_heliport.surfacecontaminationlayer_view as
select
    airport_heliport.surfacecontaminationlayer_pt.id,
    jsonb_agg(notes.note_view.note) AS surfacecontaminationlayer_annotation,
    airport_heliport.surfacecontaminationlayer_pt.nilreason AS surfacecontaminationlayer_annotation,
    coalesce(cast(airport_heliport.surfacecontaminationlayer.layerorder_value as varchar), '(' || airport_heliport.surfacecontaminationlayer.layerorder_nilreason || ')') as layerorder,
    coalesce(cast(airport_heliport.surfacecontaminationlayer.type_value as varchar), '(' || airport_heliport.surfacecontaminationlayer.type_nilreason || ')') as type
from airport_heliport.surfacecontaminationlayer_pt 
inner join airport_heliport.surfacecontaminationlayer on airport_heliport.surfacecontaminationlayer_pt.surfacecontaminationlayer_id = airport_heliport.surfacecontaminationlayer.id
left join master_join mj1 on airport_heliport.surfacecontaminationlayer.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake many geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.surfacecontaminationlayer_pt.id,
    airport_heliport.surfacecontaminationlayer_pt.nilreason,
    airport_heliport.surfacecontaminationlayer.layerorder_value,
    airport_heliport.surfacecontaminationlayer.layerorder_nilreason,
    airport_heliport.surfacecontaminationlayer.type_value,
    airport_heliport.surfacecontaminationlayer.type_nilreason;
create or replace view surveillance.surveillancegroundstation_view as
select
    surveillance.surveillancegroundstation_pt.id,
    jsonb_agg(notes.note_view.note) AS surveillancegroundstation_annotation,
    surveillance.surveillancegroundstation_pt.nilreason AS surveillancegroundstation_annotation,
    coalesce(cast(surveillance.surveillancegroundstation.videomap_value as varchar), '(' || surveillance.surveillancegroundstation.videomap_nilreason || ')') as videomap,
    coalesce(cast(organisation_unit_pt_nzqmqu.title as varchar), '(' || organisation_unit_pt_nzqmqu.nilreason[1] || ')') AS theunit,
    organisation_unit_pt_nzqmqu.href AS theunit_href
from surveillance.surveillancegroundstation_pt 
inner join surveillance.surveillancegroundstation on surveillance.surveillancegroundstation_pt.surveillancegroundstation_id = surveillance.surveillancegroundstation.id
left join master_join mj1 on surveillance.surveillancegroundstation.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join organisation.unit_pt organisation_unit_pt_nzqmqu on surveillance.surveillancegroundstation_ts.theunit_id = organisation_unit_pt_nzqmqu.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    surveillance.surveillancegroundstation_pt.id,
    surveillance.surveillancegroundstation_pt.nilreason,
    surveillance.surveillancegroundstation.videomap_value,
    surveillance.surveillancegroundstation.videomap_nilreason,
    organisation_unit_pt_nzqmqu.title,
    organisation_unit_pt_nzqmqu.nilreason,
    organisation_unit_pt_nzqmqu.href;
create or replace view organisation.unitdependency_view as
select
    organisation.unitdependency_pt.id,
    jsonb_agg(notes.note_view.note) AS unitdependency_annotation,
    organisation.unitdependency_pt.nilreason AS unitdependency_annotation,
    coalesce(cast(organisation.unitdependency.type_value as varchar), '(' || organisation.unitdependency.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_vlkibf.title as varchar), '(' || organisation_unit_pt_vlkibf.nilreason[1] || ')') AS theunit,
    organisation_unit_pt_vlkibf.href AS theunit_href
from organisation.unitdependency_pt 
inner join organisation.unitdependency on organisation.unitdependency_pt.unitdependency_id = organisation.unitdependency.id
left join master_join mj1 on organisation.unitdependency.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join organisation.unit_pt organisation_unit_pt_vlkibf on organisation.unitdependency_ts.theunit_id = organisation_unit_pt_vlkibf.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    organisation.unitdependency_pt.id,
    organisation.unitdependency_pt.nilreason,
    organisation.unitdependency.type_value,
    organisation.unitdependency.type_nilreason,
    organisation_unit_pt_vlkibf.title,
    organisation_unit_pt_vlkibf.nilreason,
    organisation_unit_pt_vlkibf.href;
create or replace view navaids_points.aeronauticalgroundlight_publisher_view as
select distinct on (aeronauticalgroundlight.identifier,aeronauticalgroundlight_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.aeronauticalgroundlight.id,
    navaids_points.aeronauticalgroundlight_ts.id as ts_id,
    navaids_points.aeronauticalgroundlight_tsp.id as tsp_id,
    navaids_points.aeronauticalgroundlight.identifier,
    navaids_points.aeronauticalgroundlight_ts.interpretation,
    navaids_points.aeronauticalgroundlight_ts.sequence_number,
    navaids_points.aeronauticalgroundlight_ts.correction_number,
    navaids_points.aeronauticalgroundlight_ts.valid_time_begin,
    navaids_points.aeronauticalgroundlight_ts.valid_time_end,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_begin,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.name_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.type_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.colour_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.colour_nilreason || ')') as colour,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.flashing_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.flashing_nilreason || ')') as flashing,
    coalesce(cast(obstacles_verticalstructure_pt_wxixax.title as varchar), '(' || obstacles_verticalstructure_pt_wxixax.nilreason[1] || ')') AS structurebeacon,
    obstacles_verticalstructure_pt_wxixax.href AS structurebeacon_href,
    coalesce(cast(airport_heliport_airportheliport_pt_beatkg.title as varchar), '(' || airport_heliport_airportheliport_pt_beatkg.nilreason[1] || ')') AS aerodromebeacon,
    airport_heliport_airportheliport_pt_beatkg.href AS aerodromebeacon_href
from navaids_points.aeronauticalgroundlight 
inner join master_join mj2 on navaids_points.aeronauticalgroundlight.id = mj2.source_id
inner join navaids_points.aeronauticalgroundlight_tsp on mj2.target_id = navaids_points.aeronauticalgroundlight_tsp.id
inner join navaids_points.aeronauticalgroundlight_ts on navaids_points.aeronauticalgroundlight_tsp.aeronauticalgroundlighttimeslice_id = navaids_points.aeronauticalgroundlight_ts.id
left join master_join mj3 on navaids_points.aeronauticalgroundlight_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_wxixax on navaids_points.aeronauticalgroundlight_ts.structurebeacon_id = obstacles_verticalstructure_pt_wxixax.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_beatkg on navaids_points.aeronauticalgroundlight_ts.aerodromebeacon_id = airport_heliport_airportheliport_pt_beatkg.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.aeronauticalgroundlight.feature_status = 'APPROVED'
  and navaids_points.aeronauticalgroundlight_ts.feature_status = 'APPROVED'
group by
    navaids_points.aeronauticalgroundlight.id,
    navaids_points.aeronauticalgroundlight_ts.id,
    navaids_points.aeronauticalgroundlight_tsp.id,
    navaids_points.aeronauticalgroundlight.identifier,
    navaids_points.aeronauticalgroundlight_ts.interpretation,
    navaids_points.aeronauticalgroundlight_ts.sequence_number,
    navaids_points.aeronauticalgroundlight_ts.correction_number,
    navaids_points.aeronauticalgroundlight_ts.valid_time_begin,
    navaids_points.aeronauticalgroundlight_ts.valid_time_end,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_begin,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_end,
    navaids_points.aeronauticalgroundlight_ts.name_value,
    navaids_points.aeronauticalgroundlight_ts.name_nilreason,
    navaids_points.aeronauticalgroundlight_ts.type_value,
    navaids_points.aeronauticalgroundlight_ts.type_nilreason,
    navaids_points.aeronauticalgroundlight_ts.colour_value,
    navaids_points.aeronauticalgroundlight_ts.colour_nilreason,
    navaids_points.aeronauticalgroundlight_ts.flashing_value,
    navaids_points.aeronauticalgroundlight_ts.flashing_nilreason,
    obstacles_verticalstructure_pt_wxixax.title,
    obstacles_verticalstructure_pt_wxixax.nilreason,
    obstacles_verticalstructure_pt_wxixax.href,
    airport_heliport_airportheliport_pt_beatkg.title,
    airport_heliport_airportheliport_pt_beatkg.nilreason,
    airport_heliport_airportheliport_pt_beatkg.href
order by aeronauticalgroundlight.identifier, aeronauticalgroundlight_ts.sequence_number, aeronauticalgroundlight_ts.correction_number DESC;
create or replace view airport_heliport.airporthotspot_publisher_view as
select distinct on (airporthotspot.identifier,airporthotspot_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airporthotspot.id,
    airport_heliport.airporthotspot_ts.id as ts_id,
    airport_heliport.airporthotspot_tsp.id as tsp_id,
    airport_heliport.airporthotspot.identifier,
    airport_heliport.airporthotspot_ts.interpretation,
    airport_heliport.airporthotspot_ts.sequence_number,
    airport_heliport.airporthotspot_ts.correction_number,
    airport_heliport.airporthotspot_ts.valid_time_begin,
    airport_heliport.airporthotspot_ts.valid_time_end,
    airport_heliport.airporthotspot_ts.feature_lifetime_begin,
    airport_heliport.airporthotspot_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.airporthotspot_ts.designator_value as varchar), '(' || airport_heliport.airporthotspot_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.airporthotspot_ts.instruction_value as varchar), '(' || airport_heliport.airporthotspot_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(airport_heliport_airportheliport_pt_hbsufk.title as varchar), '(' || airport_heliport_airportheliport_pt_hbsufk.nilreason[1] || ')') AS affectedairport,
    airport_heliport_airportheliport_pt_hbsufk.href AS affectedairport_href
from airport_heliport.airporthotspot 
inner join master_join mj2 on airport_heliport.airporthotspot.id = mj2.source_id
inner join airport_heliport.airporthotspot_tsp on mj2.target_id = airport_heliport.airporthotspot_tsp.id
inner join airport_heliport.airporthotspot_ts on airport_heliport.airporthotspot_tsp.airporthotspottimeslice_id = airport_heliport.airporthotspot_ts.id
left join master_join mj3 on airport_heliport.airporthotspot_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedsurface.area - ElevatedSurfacePropertyType
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hbsufk on airport_heliport.airporthotspot_ts.affectedairport_id = airport_heliport_airportheliport_pt_hbsufk.id
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.airporthotspot.feature_status = 'APPROVED'
  and airport_heliport.airporthotspot_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airporthotspot.id,
    airport_heliport.airporthotspot_ts.id,
    airport_heliport.airporthotspot_tsp.id,
    airport_heliport.airporthotspot.identifier,
    airport_heliport.airporthotspot_ts.interpretation,
    airport_heliport.airporthotspot_ts.sequence_number,
    airport_heliport.airporthotspot_ts.correction_number,
    airport_heliport.airporthotspot_ts.valid_time_begin,
    airport_heliport.airporthotspot_ts.valid_time_end,
    airport_heliport.airporthotspot_ts.feature_lifetime_begin,
    airport_heliport.airporthotspot_ts.feature_lifetime_end,
    airport_heliport.airporthotspot_ts.designator_value,
    airport_heliport.airporthotspot_ts.designator_nilreason,
    airport_heliport.airporthotspot_ts.instruction_value,
    airport_heliport.airporthotspot_ts.instruction_nilreason,
    airport_heliport_airportheliport_pt_hbsufk.title,
    airport_heliport_airportheliport_pt_hbsufk.nilreason,
    airport_heliport_airportheliport_pt_hbsufk.href
order by airporthotspot.identifier, airporthotspot_ts.sequence_number, airporthotspot_ts.correction_number DESC;
create or replace view airport_heliport.airportprotectionareamarking_publisher_view as
select distinct on (airportprotectionareamarking.identifier,airportprotectionareamarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportprotectionareamarking.id,
    airport_heliport.airportprotectionareamarking_ts.id as ts_id,
    airport_heliport.airportprotectionareamarking_tsp.id as tsp_id,
    airport_heliport.airportprotectionareamarking.identifier,
    airport_heliport.airportprotectionareamarking_ts.interpretation,
    airport_heliport.airportprotectionareamarking_ts.sequence_number,
    airport_heliport.airportprotectionareamarking_ts.correction_number,
    airport_heliport.airportprotectionareamarking_ts.valid_time_begin,
    airport_heliport.airportprotectionareamarking_ts.valid_time_end,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_begin,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.condition_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.markinglocation_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.markinglocation_nilreason || ')') as markinglocation
from airport_heliport.airportprotectionareamarking 
inner join master_join mj2 on airport_heliport.airportprotectionareamarking.id = mj2.source_id
inner join airport_heliport.airportprotectionareamarking_tsp on mj2.target_id = airport_heliport.airportprotectionareamarking_tsp.id
inner join airport_heliport.airportprotectionareamarking_ts on airport_heliport.airportprotectionareamarking_tsp.airportprotectionareamarkingtimeslice_id = airport_heliport.airportprotectionareamarking_ts.id
left join master_join mj3 on airport_heliport.airportprotectionareamarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.airportprotectionareamarking.feature_status = 'APPROVED'
  and airport_heliport.airportprotectionareamarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportprotectionareamarking.id,
    airport_heliport.airportprotectionareamarking_ts.id,
    airport_heliport.airportprotectionareamarking_tsp.id,
    airport_heliport.airportprotectionareamarking.identifier,
    airport_heliport.airportprotectionareamarking_ts.interpretation,
    airport_heliport.airportprotectionareamarking_ts.sequence_number,
    airport_heliport.airportprotectionareamarking_ts.correction_number,
    airport_heliport.airportprotectionareamarking_ts.valid_time_begin,
    airport_heliport.airportprotectionareamarking_ts.valid_time_end,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_begin,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_end,
    airport_heliport.airportprotectionareamarking_ts.markingicaostandard_value,
    airport_heliport.airportprotectionareamarking_ts.markingicaostandard_nilreason,
    airport_heliport.airportprotectionareamarking_ts.condition_value,
    airport_heliport.airportprotectionareamarking_ts.condition_nilreason,
    airport_heliport.airportprotectionareamarking_ts.markinglocation_value,
    airport_heliport.airportprotectionareamarking_ts.markinglocation_nilreason
order by airportprotectionareamarking.identifier, airportprotectionareamarking_ts.sequence_number, airportprotectionareamarking_ts.correction_number DESC;
create or replace view airport_heliport.altimetersource_publisher_view as
select distinct on (altimetersource.identifier,altimetersource_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.altimetersource.id,
    airport_heliport.altimetersource_ts.id as ts_id,
    airport_heliport.altimetersource_tsp.id as tsp_id,
    airport_heliport.altimetersource.identifier,
    airport_heliport.altimetersource_ts.interpretation,
    airport_heliport.altimetersource_ts.sequence_number,
    airport_heliport.altimetersource_ts.correction_number,
    airport_heliport.altimetersource_ts.valid_time_begin,
    airport_heliport.altimetersource_ts.valid_time_end,
    airport_heliport.altimetersource_ts.feature_lifetime_begin,
    airport_heliport.altimetersource_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.altimetersource_ts.isremote_value as varchar), '(' || airport_heliport.altimetersource_ts.isremote_nilreason || ')') as isremote,
    coalesce(cast(airport_heliport.altimetersource_ts.isprimary_value as varchar), '(' || airport_heliport.altimetersource_ts.isprimary_nilreason || ')') as isprimary
from airport_heliport.altimetersource 
inner join master_join mj2 on airport_heliport.altimetersource.id = mj2.source_id
inner join airport_heliport.altimetersource_tsp on mj2.target_id = airport_heliport.altimetersource_tsp.id
inner join airport_heliport.altimetersource_ts on airport_heliport.altimetersource_tsp.altimetersourcetimeslice_id = airport_heliport.altimetersource_ts.id
left join master_join mj3 on airport_heliport.altimetersource_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--object many airport_heliport.altimetersourcestatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.altimetersource.feature_status = 'APPROVED'
  and airport_heliport.altimetersource_ts.feature_status = 'APPROVED'
group by
    airport_heliport.altimetersource.id,
    airport_heliport.altimetersource_ts.id,
    airport_heliport.altimetersource_tsp.id,
    airport_heliport.altimetersource.identifier,
    airport_heliport.altimetersource_ts.interpretation,
    airport_heliport.altimetersource_ts.sequence_number,
    airport_heliport.altimetersource_ts.correction_number,
    airport_heliport.altimetersource_ts.valid_time_begin,
    airport_heliport.altimetersource_ts.valid_time_end,
    airport_heliport.altimetersource_ts.feature_lifetime_begin,
    airport_heliport.altimetersource_ts.feature_lifetime_end,
    airport_heliport.altimetersource_ts.isremote_value,
    airport_heliport.altimetersource_ts.isremote_nilreason,
    airport_heliport.altimetersource_ts.isprimary_value,
    airport_heliport.altimetersource_ts.isprimary_nilreason
order by altimetersource.identifier, altimetersource_ts.sequence_number, altimetersource_ts.correction_number DESC;
create or replace view navaids_points.angleindication_publisher_view as
select distinct on (angleindication.identifier,angleindication_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.angleindication.id,
    navaids_points.angleindication_ts.id as ts_id,
    navaids_points.angleindication_tsp.id as tsp_id,
    navaids_points.angleindication.identifier,
    navaids_points.angleindication_ts.interpretation,
    navaids_points.angleindication_ts.sequence_number,
    navaids_points.angleindication_ts.correction_number,
    navaids_points.angleindication_ts.valid_time_begin,
    navaids_points.angleindication_ts.valid_time_end,
    navaids_points.angleindication_ts.feature_lifetime_begin,
    navaids_points.angleindication_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.angleindication_ts.angle_value as varchar), '(' || navaids_points.angleindication_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.angleindication_ts.angletype_value as varchar), '(' || navaids_points.angleindication_ts.angletype_nilreason || ')') as angletype,
    coalesce(cast(navaids_points.angleindication_ts.indicationdirection_value as varchar), '(' || navaids_points.angleindication_ts.indicationdirection_nilreason || ')') as indicationdirection,
    coalesce(cast(navaids_points.angleindication_ts.trueangle_value as varchar), '(' || navaids_points.angleindication_ts.trueangle_nilreason || ')') as trueangle,
    coalesce(cast(navaids_points.angleindication_ts.cardinaldirection_value as varchar), '(' || navaids_points.angleindication_ts.cardinaldirection_nilreason || ')') as cardinaldirection,
    coalesce(cast(navaids_points.angleindication_ts.minimumreceptionaltitude_value as varchar) || ' ' || navaids_points.angleindication_ts.minimumreceptionaltitude_uom, '(' || navaids_points.angleindication_ts.minimumreceptionaltitude_nilreason || ')') as minimumreceptionaltitude,
    coalesce(cast(navaids_points_designatedpoint_pt_gnxdeq.title as varchar), '(' || navaids_points_designatedpoint_pt_gnxdeq.nilreason[1] || ')') AS fix,
    navaids_points_designatedpoint_pt_gnxdeq.href AS fix_href,
    coalesce(cast(navaids_points_designatedpoint_pt_dhjhns.title as varchar), '(' || navaids_points_designatedpoint_pt_dhjhns.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_dhjhns.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_zcblzh.title as varchar), '(' || navaids_points_navaid_pt_zcblzh.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_zcblzh.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_yanjer.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_yanjer.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_yanjer.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_xxoijn.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_xxoijn.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_xxoijn.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_svybos.title as varchar), '(' || airport_heliport_airportheliport_pt_svybos.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_svybos.href AS pointchoiceairportreferencepoint_href
from navaids_points.angleindication 
inner join master_join mj2 on navaids_points.angleindication.id = mj2.source_id
inner join navaids_points.angleindication_tsp on mj2.target_id = navaids_points.angleindication_tsp.id
inner join navaids_points.angleindication_ts on navaids_points.angleindication_tsp.angleindicationtimeslice_id = navaids_points.angleindication_ts.id
left join master_join mj3 on navaids_points.angleindication_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_gnxdeq on navaids_points.angleindication_ts.fix_id = navaids_points_designatedpoint_pt_gnxdeq.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_dhjhns on navaids_points.angleindication_ts.angleindication_ts_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_dhjhns.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_zcblzh on navaids_points.angleindication_ts.angleindication_ts_navaidsystem_id = navaids_points_navaid_pt_zcblzh.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_yanjer on navaids_points.angleindication_ts.angleindication_ts_aimingpoint_id = airport_heliport_touchdownliftoff_pt_yanjer.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_xxoijn on navaids_points.angleindication_ts.angleindication_ts_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_xxoijn.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_svybos on navaids_points.angleindication_ts.angleindication_ts_airportreferencepoint_id = airport_heliport_airportheliport_pt_svybos.id
--snowflake one geometry.point.pointchoiceposition - PointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.angleindication.feature_status = 'APPROVED'
  and navaids_points.angleindication_ts.feature_status = 'APPROVED'
group by
    navaids_points.angleindication.id,
    navaids_points.angleindication_ts.id,
    navaids_points.angleindication_tsp.id,
    navaids_points.angleindication.identifier,
    navaids_points.angleindication_ts.interpretation,
    navaids_points.angleindication_ts.sequence_number,
    navaids_points.angleindication_ts.correction_number,
    navaids_points.angleindication_ts.valid_time_begin,
    navaids_points.angleindication_ts.valid_time_end,
    navaids_points.angleindication_ts.feature_lifetime_begin,
    navaids_points.angleindication_ts.feature_lifetime_end,
    navaids_points.angleindication_ts.angle_value,
    navaids_points.angleindication_ts.angle_nilreason,
    navaids_points.angleindication_ts.angletype_value,
    navaids_points.angleindication_ts.angletype_nilreason,
    navaids_points.angleindication_ts.indicationdirection_value,
    navaids_points.angleindication_ts.indicationdirection_nilreason,
    navaids_points.angleindication_ts.trueangle_value,
    navaids_points.angleindication_ts.trueangle_nilreason,
    navaids_points.angleindication_ts.cardinaldirection_value,
    navaids_points.angleindication_ts.cardinaldirection_nilreason,
    navaids_points.angleindication_ts.minimumreceptionaltitude_value,
    navaids_points.angleindication_ts.minimumreceptionaltitude_uom,
    navaids_points.angleindication_ts.minimumreceptionaltitude_nilreason,
    navaids_points_designatedpoint_pt_gnxdeq.title,
    navaids_points_designatedpoint_pt_gnxdeq.nilreason,
    navaids_points_designatedpoint_pt_gnxdeq.href,
    navaids_points_designatedpoint_pt_dhjhns.title,
    navaids_points_designatedpoint_pt_dhjhns.nilreason,
    navaids_points_designatedpoint_pt_dhjhns.href,
    navaids_points_navaid_pt_zcblzh.title,
    navaids_points_navaid_pt_zcblzh.nilreason,
    navaids_points_navaid_pt_zcblzh.href,
    airport_heliport_touchdownliftoff_pt_yanjer.title,
    airport_heliport_touchdownliftoff_pt_yanjer.nilreason,
    airport_heliport_touchdownliftoff_pt_yanjer.href,
    airport_heliport_runwaycentrelinepoint_pt_xxoijn.title,
    airport_heliport_runwaycentrelinepoint_pt_xxoijn.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_xxoijn.href,
    airport_heliport_airportheliport_pt_svybos.title,
    airport_heliport_airportheliport_pt_svybos.nilreason,
    airport_heliport_airportheliport_pt_svybos.href
order by angleindication.identifier, angleindication_ts.sequence_number, angleindication_ts.correction_number DESC;
create or replace view airport_heliport.apronmarking_publisher_view as
select distinct on (apronmarking.identifier,apronmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronmarking.id,
    airport_heliport.apronmarking_ts.id as ts_id,
    airport_heliport.apronmarking_tsp.id as tsp_id,
    airport_heliport.apronmarking.identifier,
    airport_heliport.apronmarking_ts.interpretation,
    airport_heliport.apronmarking_ts.sequence_number,
    airport_heliport.apronmarking_ts.correction_number,
    airport_heliport.apronmarking_ts.valid_time_begin,
    airport_heliport.apronmarking_ts.valid_time_end,
    airport_heliport.apronmarking_ts.feature_lifetime_begin,
    airport_heliport.apronmarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.apronmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.apronmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.apronmarking_ts.condition_value as varchar), '(' || airport_heliport.apronmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.apronmarking_ts.markinglocation_value as varchar), '(' || airport_heliport.apronmarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_apron_pt_afyapm.title as varchar), '(' || airport_heliport_apron_pt_afyapm.nilreason[1] || ')') AS markedapron,
    airport_heliport_apron_pt_afyapm.href AS markedapron_href
from airport_heliport.apronmarking 
inner join master_join mj2 on airport_heliport.apronmarking.id = mj2.source_id
inner join airport_heliport.apronmarking_tsp on mj2.target_id = airport_heliport.apronmarking_tsp.id
inner join airport_heliport.apronmarking_ts on airport_heliport.apronmarking_tsp.apronmarkingtimeslice_id = airport_heliport.apronmarking_ts.id
left join master_join mj3 on airport_heliport.apronmarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_afyapm on airport_heliport.apronmarking_ts.markedapron_id = airport_heliport_apron_pt_afyapm.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.apronmarking.feature_status = 'APPROVED'
  and airport_heliport.apronmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronmarking.id,
    airport_heliport.apronmarking_ts.id,
    airport_heliport.apronmarking_tsp.id,
    airport_heliport.apronmarking.identifier,
    airport_heliport.apronmarking_ts.interpretation,
    airport_heliport.apronmarking_ts.sequence_number,
    airport_heliport.apronmarking_ts.correction_number,
    airport_heliport.apronmarking_ts.valid_time_begin,
    airport_heliport.apronmarking_ts.valid_time_end,
    airport_heliport.apronmarking_ts.feature_lifetime_begin,
    airport_heliport.apronmarking_ts.feature_lifetime_end,
    airport_heliport.apronmarking_ts.markingicaostandard_value,
    airport_heliport.apronmarking_ts.markingicaostandard_nilreason,
    airport_heliport.apronmarking_ts.condition_value,
    airport_heliport.apronmarking_ts.condition_nilreason,
    airport_heliport.apronmarking_ts.markinglocation_value,
    airport_heliport.apronmarking_ts.markinglocation_nilreason,
    airport_heliport_apron_pt_afyapm.title,
    airport_heliport_apron_pt_afyapm.nilreason,
    airport_heliport_apron_pt_afyapm.href
order by apronmarking.identifier, apronmarking_ts.sequence_number, apronmarking_ts.correction_number DESC;
create or replace view airspace.authorityforairspace_publisher_view as
select distinct on (authorityforairspace.identifier,authorityforairspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.authorityforairspace.id,
    airspace.authorityforairspace_ts.id as ts_id,
    airspace.authorityforairspace_tsp.id as tsp_id,
    airspace.authorityforairspace.identifier,
    airspace.authorityforairspace_ts.interpretation,
    airspace.authorityforairspace_ts.sequence_number,
    airspace.authorityforairspace_ts.correction_number,
    airspace.authorityforairspace_ts.valid_time_begin,
    airspace.authorityforairspace_ts.valid_time_end,
    airspace.authorityforairspace_ts.feature_lifetime_begin,
    airspace.authorityforairspace_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airspace.authorityforairspace_ts.type_value as varchar), '(' || airspace.authorityforairspace_ts.type_nilreason || ')') as type,
    coalesce(cast(airspace_airspace_pt_epqghd.title as varchar), '(' || airspace_airspace_pt_epqghd.nilreason[1] || ')') AS assignedairspace,
    airspace_airspace_pt_epqghd.href AS assignedairspace_href
from airspace.authorityforairspace 
inner join master_join mj2 on airspace.authorityforairspace.id = mj2.source_id
inner join airspace.authorityforairspace_tsp on mj2.target_id = airspace.authorityforairspace_tsp.id
inner join airspace.authorityforairspace_ts on airspace.authorityforairspace_tsp.authorityforairspacetimeslice_id = airspace.authorityforairspace_ts.id
left join master_join mj3 on airspace.authorityforairspace_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one .organisationauthority.responsibleorganisation - OrganisationAuthorityPropertyType
left join airspace.airspace_pt airspace_airspace_pt_epqghd on airspace.authorityforairspace_ts.assignedairspace_id = airspace_airspace_pt_epqghd.id
--snowflake many notes.note.annotation - NotePropertyType
where airspace.authorityforairspace.feature_status = 'APPROVED'
  and airspace.authorityforairspace_ts.feature_status = 'APPROVED'
group by
    airspace.authorityforairspace.id,
    airspace.authorityforairspace_ts.id,
    airspace.authorityforairspace_tsp.id,
    airspace.authorityforairspace.identifier,
    airspace.authorityforairspace_ts.interpretation,
    airspace.authorityforairspace_ts.sequence_number,
    airspace.authorityforairspace_ts.correction_number,
    airspace.authorityforairspace_ts.valid_time_begin,
    airspace.authorityforairspace_ts.valid_time_end,
    airspace.authorityforairspace_ts.feature_lifetime_begin,
    airspace.authorityforairspace_ts.feature_lifetime_end,
    airspace.authorityforairspace_ts.type_value,
    airspace.authorityforairspace_ts.type_nilreason,
    airspace_airspace_pt_epqghd.title,
    airspace_airspace_pt_epqghd.nilreason,
    airspace_airspace_pt_epqghd.href
order by authorityforairspace.identifier, authorityforairspace_ts.sequence_number, authorityforairspace_ts.correction_number DESC;
create or replace view routes.changeoverpoint_publisher_view as
select distinct on (changeoverpoint.identifier,changeoverpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.changeoverpoint.id,
    routes.changeoverpoint_ts.id as ts_id,
    routes.changeoverpoint_tsp.id as tsp_id,
    routes.changeoverpoint.identifier,
    routes.changeoverpoint_ts.interpretation,
    routes.changeoverpoint_ts.sequence_number,
    routes.changeoverpoint_ts.correction_number,
    routes.changeoverpoint_ts.valid_time_begin,
    routes.changeoverpoint_ts.valid_time_end,
    routes.changeoverpoint_ts.feature_lifetime_begin,
    routes.changeoverpoint_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(routes.changeoverpoint_ts.distance_value as varchar) || ' ' || routes.changeoverpoint_ts.distance_uom, '(' || routes.changeoverpoint_ts.distance_nilreason || ')') as distance,
    coalesce(cast(navaids_points_designatedpoint_pt_kwfnqd.title as varchar), '(' || navaids_points_designatedpoint_pt_kwfnqd.nilreason[1] || ')') AS locationfixdesignatedpoint,
    navaids_points_designatedpoint_pt_kwfnqd.href AS locationfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_mreamw.title as varchar), '(' || navaids_points_navaid_pt_mreamw.nilreason[1] || ')') AS locationnavaidsystem,
    navaids_points_navaid_pt_mreamw.href AS locationnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_aionei.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_aionei.nilreason[1] || ')') AS locationaimingpoint,
    airport_heliport_touchdownliftoff_pt_aionei.href AS locationaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_hpivwj.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_hpivwj.nilreason[1] || ')') AS locationrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_hpivwj.href AS locationrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_txnxog.title as varchar), '(' || airport_heliport_airportheliport_pt_txnxog.nilreason[1] || ')') AS locationairportreferencepoint,
    airport_heliport_airportheliport_pt_txnxog.href AS locationairportreferencepoint_href,
    coalesce(cast(routes_routeportion_pt_yphagk.title as varchar), '(' || routes_routeportion_pt_yphagk.nilreason[1] || ')') AS applicablerouteportion,
    routes_routeportion_pt_yphagk.href AS applicablerouteportion_href
from routes.changeoverpoint 
inner join master_join mj2 on routes.changeoverpoint.id = mj2.source_id
inner join routes.changeoverpoint_tsp on mj2.target_id = routes.changeoverpoint_tsp.id
inner join routes.changeoverpoint_ts on routes.changeoverpoint_tsp.changeoverpointtimeslice_id = routes.changeoverpoint_ts.id
left join master_join mj3 on routes.changeoverpoint_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_kwfnqd on routes.changeoverpoint_ts.location_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_kwfnqd.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_mreamw on routes.changeoverpoint_ts.location_navaidsystem_id = navaids_points_navaid_pt_mreamw.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_aionei on routes.changeoverpoint_ts.location_aimingpoint_id = airport_heliport_touchdownliftoff_pt_aionei.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_hpivwj on routes.changeoverpoint_ts.location_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_hpivwj.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_txnxog on routes.changeoverpoint_ts.location_airportreferencepoint_id = airport_heliport_airportheliport_pt_txnxog.id
--snowflake one geometry.point.locationposition - PointPropertyType
left join routes.routeportion_pt routes_routeportion_pt_yphagk on routes.changeoverpoint_ts.applicablerouteportion_id = routes_routeportion_pt_yphagk.id
--snowflake many notes.note.annotation - NotePropertyType
where routes.changeoverpoint.feature_status = 'APPROVED'
  and routes.changeoverpoint_ts.feature_status = 'APPROVED'
group by
    routes.changeoverpoint.id,
    routes.changeoverpoint_ts.id,
    routes.changeoverpoint_tsp.id,
    routes.changeoverpoint.identifier,
    routes.changeoverpoint_ts.interpretation,
    routes.changeoverpoint_ts.sequence_number,
    routes.changeoverpoint_ts.correction_number,
    routes.changeoverpoint_ts.valid_time_begin,
    routes.changeoverpoint_ts.valid_time_end,
    routes.changeoverpoint_ts.feature_lifetime_begin,
    routes.changeoverpoint_ts.feature_lifetime_end,
    routes.changeoverpoint_ts.distance_value,
    routes.changeoverpoint_ts.distance_uom,
    routes.changeoverpoint_ts.distance_nilreason,
    navaids_points_designatedpoint_pt_kwfnqd.title,
    navaids_points_designatedpoint_pt_kwfnqd.nilreason,
    navaids_points_designatedpoint_pt_kwfnqd.href,
    navaids_points_navaid_pt_mreamw.title,
    navaids_points_navaid_pt_mreamw.nilreason,
    navaids_points_navaid_pt_mreamw.href,
    airport_heliport_touchdownliftoff_pt_aionei.title,
    airport_heliport_touchdownliftoff_pt_aionei.nilreason,
    airport_heliport_touchdownliftoff_pt_aionei.href,
    airport_heliport_runwaycentrelinepoint_pt_hpivwj.title,
    airport_heliport_runwaycentrelinepoint_pt_hpivwj.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_hpivwj.href,
    airport_heliport_airportheliport_pt_txnxog.title,
    airport_heliport_airportheliport_pt_txnxog.nilreason,
    airport_heliport_airportheliport_pt_txnxog.href,
    routes_routeportion_pt_yphagk.title,
    routes_routeportion_pt_yphagk.nilreason,
    routes_routeportion_pt_yphagk.href
order by changeoverpoint.identifier, changeoverpoint_ts.sequence_number, changeoverpoint_ts.correction_number DESC;
create or replace view navaids_points.checkpointins_publisher_view as
select distinct on (checkpointins.identifier,checkpointins_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.checkpointins.id,
    navaids_points.checkpointins_ts.id as ts_id,
    navaids_points.checkpointins_tsp.id as tsp_id,
    navaids_points.checkpointins.identifier,
    navaids_points.checkpointins_ts.interpretation,
    navaids_points.checkpointins_ts.sequence_number,
    navaids_points.checkpointins_ts.correction_number,
    navaids_points.checkpointins_ts.valid_time_begin,
    navaids_points.checkpointins_ts.valid_time_end,
    navaids_points.checkpointins_ts.feature_lifetime_begin,
    navaids_points.checkpointins_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.checkpointins_ts.category_value as varchar), '(' || navaids_points.checkpointins_ts.category_nilreason || ')') as category,
    coalesce(cast(navaids_points.checkpointins_ts.upperlimitreference_value as varchar), '(' || navaids_points.checkpointins_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(navaids_points.checkpointins_ts.lowerlimitreference_value as varchar), '(' || navaids_points.checkpointins_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(navaids_points.checkpointins_ts.altitudeinterpretation_value as varchar), '(' || navaids_points.checkpointins_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(navaids_points.checkpointins_ts.angle_value as varchar), '(' || navaids_points.checkpointins_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.checkpointins_ts.upperlimit_value as varchar) || ' ' || navaids_points.checkpointins_ts.upperlimit_uom, '(' || navaids_points.checkpointins_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(navaids_points.checkpointins_ts.lowerlimit_value as varchar) || ' ' || navaids_points.checkpointins_ts.lowerlimit_uom, '(' || navaids_points.checkpointins_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(navaids_points.checkpointins_ts.distance_value as varchar) || ' ' || navaids_points.checkpointins_ts.distance_uom, '(' || navaids_points.checkpointins_ts.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport_airportheliport_pt_bshefx.title as varchar), '(' || airport_heliport_airportheliport_pt_bshefx.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_bshefx.href AS airportheliport_href
from navaids_points.checkpointins 
inner join master_join mj2 on navaids_points.checkpointins.id = mj2.source_id
inner join navaids_points.checkpointins_tsp on mj2.target_id = navaids_points.checkpointins_tsp.id
inner join navaids_points.checkpointins_ts on navaids_points.checkpointins_tsp.checkpointinstimeslice_id = navaids_points.checkpointins_ts.id
left join master_join mj3 on navaids_points.checkpointins_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.position - ElevatedPointPropertyType
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_bshefx on navaids_points.checkpointins_ts.airportheliport_id = airport_heliport_airportheliport_pt_bshefx.id
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.checkpointins.feature_status = 'APPROVED'
  and navaids_points.checkpointins_ts.feature_status = 'APPROVED'
group by
    navaids_points.checkpointins.id,
    navaids_points.checkpointins_ts.id,
    navaids_points.checkpointins_tsp.id,
    navaids_points.checkpointins.identifier,
    navaids_points.checkpointins_ts.interpretation,
    navaids_points.checkpointins_ts.sequence_number,
    navaids_points.checkpointins_ts.correction_number,
    navaids_points.checkpointins_ts.valid_time_begin,
    navaids_points.checkpointins_ts.valid_time_end,
    navaids_points.checkpointins_ts.feature_lifetime_begin,
    navaids_points.checkpointins_ts.feature_lifetime_end,
    navaids_points.checkpointins_ts.category_value,
    navaids_points.checkpointins_ts.category_nilreason,
    navaids_points.checkpointins_ts.upperlimitreference_value,
    navaids_points.checkpointins_ts.upperlimitreference_nilreason,
    navaids_points.checkpointins_ts.lowerlimitreference_value,
    navaids_points.checkpointins_ts.lowerlimitreference_nilreason,
    navaids_points.checkpointins_ts.altitudeinterpretation_value,
    navaids_points.checkpointins_ts.altitudeinterpretation_nilreason,
    navaids_points.checkpointins_ts.angle_value,
    navaids_points.checkpointins_ts.angle_nilreason,
    navaids_points.checkpointins_ts.upperlimit_value,
    navaids_points.checkpointins_ts.upperlimit_uom,
    navaids_points.checkpointins_ts.upperlimit_nilreason,
    navaids_points.checkpointins_ts.lowerlimit_value,
    navaids_points.checkpointins_ts.lowerlimit_uom,
    navaids_points.checkpointins_ts.lowerlimit_nilreason,
    navaids_points.checkpointins_ts.distance_value,
    navaids_points.checkpointins_ts.distance_uom,
    navaids_points.checkpointins_ts.distance_nilreason,
    airport_heliport_airportheliport_pt_bshefx.title,
    airport_heliport_airportheliport_pt_bshefx.nilreason,
    airport_heliport_airportheliport_pt_bshefx.href
order by checkpointins.identifier, checkpointins_ts.sequence_number, checkpointins_ts.correction_number DESC;
create or replace view navaids_points.checkpointvor_publisher_view as
select distinct on (checkpointvor.identifier,checkpointvor_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.checkpointvor.id,
    navaids_points.checkpointvor_ts.id as ts_id,
    navaids_points.checkpointvor_tsp.id as tsp_id,
    navaids_points.checkpointvor.identifier,
    navaids_points.checkpointvor_ts.interpretation,
    navaids_points.checkpointvor_ts.sequence_number,
    navaids_points.checkpointvor_ts.correction_number,
    navaids_points.checkpointvor_ts.valid_time_begin,
    navaids_points.checkpointvor_ts.valid_time_end,
    navaids_points.checkpointvor_ts.feature_lifetime_begin,
    navaids_points.checkpointvor_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.checkpointvor_ts.category_value as varchar), '(' || navaids_points.checkpointvor_ts.category_nilreason || ')') as category,
    coalesce(cast(navaids_points.checkpointvor_ts.upperlimitreference_value as varchar), '(' || navaids_points.checkpointvor_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(navaids_points.checkpointvor_ts.lowerlimitreference_value as varchar), '(' || navaids_points.checkpointvor_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(navaids_points.checkpointvor_ts.altitudeinterpretation_value as varchar), '(' || navaids_points.checkpointvor_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(navaids_points.checkpointvor_ts.angle_value as varchar), '(' || navaids_points.checkpointvor_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.checkpointvor_ts.upperlimit_value as varchar) || ' ' || navaids_points.checkpointvor_ts.upperlimit_uom, '(' || navaids_points.checkpointvor_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(navaids_points.checkpointvor_ts.lowerlimit_value as varchar) || ' ' || navaids_points.checkpointvor_ts.lowerlimit_uom, '(' || navaids_points.checkpointvor_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(navaids_points.checkpointvor_ts.distance_value as varchar) || ' ' || navaids_points.checkpointvor_ts.distance_uom, '(' || navaids_points.checkpointvor_ts.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport_airportheliport_pt_nqiovj.title as varchar), '(' || airport_heliport_airportheliport_pt_nqiovj.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_nqiovj.href AS airportheliport_href,
    coalesce(cast(navaids_points_vor_pt_ymjyua.title as varchar), '(' || navaids_points_vor_pt_ymjyua.nilreason[1] || ')') AS checkpointfacility,
    navaids_points_vor_pt_ymjyua.href AS checkpointfacility_href
from navaids_points.checkpointvor 
inner join master_join mj2 on navaids_points.checkpointvor.id = mj2.source_id
inner join navaids_points.checkpointvor_tsp on mj2.target_id = navaids_points.checkpointvor_tsp.id
inner join navaids_points.checkpointvor_ts on navaids_points.checkpointvor_tsp.checkpointvortimeslice_id = navaids_points.checkpointvor_ts.id
left join master_join mj3 on navaids_points.checkpointvor_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.position - ElevatedPointPropertyType
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_nqiovj on navaids_points.checkpointvor_ts.airportheliport_id = airport_heliport_airportheliport_pt_nqiovj.id
left join navaids_points.vor_pt navaids_points_vor_pt_ymjyua on navaids_points.checkpointvor_ts.checkpointfacility_id = navaids_points_vor_pt_ymjyua.id
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.checkpointvor.feature_status = 'APPROVED'
  and navaids_points.checkpointvor_ts.feature_status = 'APPROVED'
group by
    navaids_points.checkpointvor.id,
    navaids_points.checkpointvor_ts.id,
    navaids_points.checkpointvor_tsp.id,
    navaids_points.checkpointvor.identifier,
    navaids_points.checkpointvor_ts.interpretation,
    navaids_points.checkpointvor_ts.sequence_number,
    navaids_points.checkpointvor_ts.correction_number,
    navaids_points.checkpointvor_ts.valid_time_begin,
    navaids_points.checkpointvor_ts.valid_time_end,
    navaids_points.checkpointvor_ts.feature_lifetime_begin,
    navaids_points.checkpointvor_ts.feature_lifetime_end,
    navaids_points.checkpointvor_ts.category_value,
    navaids_points.checkpointvor_ts.category_nilreason,
    navaids_points.checkpointvor_ts.upperlimitreference_value,
    navaids_points.checkpointvor_ts.upperlimitreference_nilreason,
    navaids_points.checkpointvor_ts.lowerlimitreference_value,
    navaids_points.checkpointvor_ts.lowerlimitreference_nilreason,
    navaids_points.checkpointvor_ts.altitudeinterpretation_value,
    navaids_points.checkpointvor_ts.altitudeinterpretation_nilreason,
    navaids_points.checkpointvor_ts.angle_value,
    navaids_points.checkpointvor_ts.angle_nilreason,
    navaids_points.checkpointvor_ts.upperlimit_value,
    navaids_points.checkpointvor_ts.upperlimit_uom,
    navaids_points.checkpointvor_ts.upperlimit_nilreason,
    navaids_points.checkpointvor_ts.lowerlimit_value,
    navaids_points.checkpointvor_ts.lowerlimit_uom,
    navaids_points.checkpointvor_ts.lowerlimit_nilreason,
    navaids_points.checkpointvor_ts.distance_value,
    navaids_points.checkpointvor_ts.distance_uom,
    navaids_points.checkpointvor_ts.distance_nilreason,
    airport_heliport_airportheliport_pt_nqiovj.title,
    airport_heliport_airportheliport_pt_nqiovj.nilreason,
    airport_heliport_airportheliport_pt_nqiovj.href,
    navaids_points_vor_pt_ymjyua.title,
    navaids_points_vor_pt_ymjyua.nilreason,
    navaids_points_vor_pt_ymjyua.href
order by checkpointvor.identifier, checkpointvor_ts.sequence_number, checkpointvor_ts.correction_number DESC;
create or replace view airport_heliport.deicingareamarking_publisher_view as
select distinct on (deicingareamarking.identifier,deicingareamarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.deicingareamarking.id,
    airport_heliport.deicingareamarking_ts.id as ts_id,
    airport_heliport.deicingareamarking_tsp.id as tsp_id,
    airport_heliport.deicingareamarking.identifier,
    airport_heliport.deicingareamarking_ts.interpretation,
    airport_heliport.deicingareamarking_ts.sequence_number,
    airport_heliport.deicingareamarking_ts.correction_number,
    airport_heliport.deicingareamarking_ts.valid_time_begin,
    airport_heliport.deicingareamarking_ts.valid_time_end,
    airport_heliport.deicingareamarking_ts.feature_lifetime_begin,
    airport_heliport.deicingareamarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.deicingareamarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.deicingareamarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.deicingareamarking_ts.condition_value as varchar), '(' || airport_heliport.deicingareamarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_deicingarea_pt_llawim.title as varchar), '(' || airport_heliport_deicingarea_pt_llawim.nilreason[1] || ')') AS markeddeicingarea,
    airport_heliport_deicingarea_pt_llawim.href AS markeddeicingarea_href
from airport_heliport.deicingareamarking 
inner join master_join mj2 on airport_heliport.deicingareamarking.id = mj2.source_id
inner join airport_heliport.deicingareamarking_tsp on mj2.target_id = airport_heliport.deicingareamarking_tsp.id
inner join airport_heliport.deicingareamarking_ts on airport_heliport.deicingareamarking_tsp.deicingareamarkingtimeslice_id = airport_heliport.deicingareamarking_ts.id
left join master_join mj3 on airport_heliport.deicingareamarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.deicingarea_pt airport_heliport_deicingarea_pt_llawim on airport_heliport.deicingareamarking_ts.markeddeicingarea_id = airport_heliport_deicingarea_pt_llawim.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.deicingareamarking.feature_status = 'APPROVED'
  and airport_heliport.deicingareamarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.deicingareamarking.id,
    airport_heliport.deicingareamarking_ts.id,
    airport_heliport.deicingareamarking_tsp.id,
    airport_heliport.deicingareamarking.identifier,
    airport_heliport.deicingareamarking_ts.interpretation,
    airport_heliport.deicingareamarking_ts.sequence_number,
    airport_heliport.deicingareamarking_ts.correction_number,
    airport_heliport.deicingareamarking_ts.valid_time_begin,
    airport_heliport.deicingareamarking_ts.valid_time_end,
    airport_heliport.deicingareamarking_ts.feature_lifetime_begin,
    airport_heliport.deicingareamarking_ts.feature_lifetime_end,
    airport_heliport.deicingareamarking_ts.markingicaostandard_value,
    airport_heliport.deicingareamarking_ts.markingicaostandard_nilreason,
    airport_heliport.deicingareamarking_ts.condition_value,
    airport_heliport.deicingareamarking_ts.condition_nilreason,
    airport_heliport_deicingarea_pt_llawim.title,
    airport_heliport_deicingarea_pt_llawim.nilreason,
    airport_heliport_deicingarea_pt_llawim.href
order by deicingareamarking.identifier, deicingareamarking_ts.sequence_number, deicingareamarking_ts.correction_number DESC;
create or replace view navaids_points.designatedpoint_publisher_view as
select distinct on (designatedpoint.identifier,designatedpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.designatedpoint.id,
    navaids_points.designatedpoint_ts.id as ts_id,
    navaids_points.designatedpoint_tsp.id as tsp_id,
    navaids_points.designatedpoint.identifier,
    navaids_points.designatedpoint_ts.interpretation,
    navaids_points.designatedpoint_ts.sequence_number,
    navaids_points.designatedpoint_ts.correction_number,
    navaids_points.designatedpoint_ts.valid_time_begin,
    navaids_points.designatedpoint_ts.valid_time_end,
    navaids_points.designatedpoint_ts.feature_lifetime_begin,
    navaids_points.designatedpoint_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.designatedpoint_ts.designator_value as varchar), '(' || navaids_points.designatedpoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.designatedpoint_ts.type_value as varchar), '(' || navaids_points.designatedpoint_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.designatedpoint_ts.name_value as varchar), '(' || navaids_points.designatedpoint_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_zfbxnd.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_zfbxnd.nilreason[1] || ')') AS aimingpoint,
    airport_heliport_touchdownliftoff_pt_zfbxnd.href AS aimingpoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_omufei.title as varchar), '(' || airport_heliport_airportheliport_pt_omufei.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_omufei.href AS airportheliport_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_dhtskm.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_dhtskm.nilreason[1] || ')') AS runwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_dhtskm.href AS runwaypoint_href
from navaids_points.designatedpoint 
inner join master_join mj2 on navaids_points.designatedpoint.id = mj2.source_id
inner join navaids_points.designatedpoint_tsp on mj2.target_id = navaids_points.designatedpoint_tsp.id
inner join navaids_points.designatedpoint_ts on navaids_points.designatedpoint_tsp.designatedpointtimeslice_id = navaids_points.designatedpoint_ts.id
left join master_join mj3 on navaids_points.designatedpoint_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.point.location - PointPropertyType
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_zfbxnd on navaids_points.designatedpoint_ts.aimingpoint_id = airport_heliport_touchdownliftoff_pt_zfbxnd.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_omufei on navaids_points.designatedpoint_ts.airportheliport_id = airport_heliport_airportheliport_pt_omufei.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_dhtskm on navaids_points.designatedpoint_ts.runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_dhtskm.id
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.designatedpoint.feature_status = 'APPROVED'
  and navaids_points.designatedpoint_ts.feature_status = 'APPROVED'
group by
    navaids_points.designatedpoint.id,
    navaids_points.designatedpoint_ts.id,
    navaids_points.designatedpoint_tsp.id,
    navaids_points.designatedpoint.identifier,
    navaids_points.designatedpoint_ts.interpretation,
    navaids_points.designatedpoint_ts.sequence_number,
    navaids_points.designatedpoint_ts.correction_number,
    navaids_points.designatedpoint_ts.valid_time_begin,
    navaids_points.designatedpoint_ts.valid_time_end,
    navaids_points.designatedpoint_ts.feature_lifetime_begin,
    navaids_points.designatedpoint_ts.feature_lifetime_end,
    navaids_points.designatedpoint_ts.designator_value,
    navaids_points.designatedpoint_ts.designator_nilreason,
    navaids_points.designatedpoint_ts.type_value,
    navaids_points.designatedpoint_ts.type_nilreason,
    navaids_points.designatedpoint_ts.name_value,
    navaids_points.designatedpoint_ts.name_nilreason,
    airport_heliport_touchdownliftoff_pt_zfbxnd.title,
    airport_heliport_touchdownliftoff_pt_zfbxnd.nilreason,
    airport_heliport_touchdownliftoff_pt_zfbxnd.href,
    airport_heliport_airportheliport_pt_omufei.title,
    airport_heliport_airportheliport_pt_omufei.nilreason,
    airport_heliport_airportheliport_pt_omufei.href,
    airport_heliport_runwaycentrelinepoint_pt_dhtskm.title,
    airport_heliport_runwaycentrelinepoint_pt_dhtskm.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_dhtskm.href
order by designatedpoint.identifier, designatedpoint_ts.sequence_number, designatedpoint_ts.correction_number DESC;
create or replace view navaids_points.distanceindication_publisher_view as
select distinct on (distanceindication.identifier,distanceindication_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.distanceindication.id,
    navaids_points.distanceindication_ts.id as ts_id,
    navaids_points.distanceindication_tsp.id as tsp_id,
    navaids_points.distanceindication.identifier,
    navaids_points.distanceindication_ts.interpretation,
    navaids_points.distanceindication_ts.sequence_number,
    navaids_points.distanceindication_ts.correction_number,
    navaids_points.distanceindication_ts.valid_time_begin,
    navaids_points.distanceindication_ts.valid_time_end,
    navaids_points.distanceindication_ts.feature_lifetime_begin,
    navaids_points.distanceindication_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.distanceindication_ts.type_value as varchar), '(' || navaids_points.distanceindication_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.distanceindication_ts.distance_value as varchar) || ' ' || navaids_points.distanceindication_ts.distance_uom, '(' || navaids_points.distanceindication_ts.distance_nilreason || ')') as distance,
    coalesce(cast(navaids_points.distanceindication_ts.minimumreceptionaltitude_value as varchar) || ' ' || navaids_points.distanceindication_ts.minimumreceptionaltitude_uom, '(' || navaids_points.distanceindication_ts.minimumreceptionaltitude_nilreason || ')') as minimumreceptionaltitude,
    coalesce(cast(navaids_points_designatedpoint_pt_kvrhyz.title as varchar), '(' || navaids_points_designatedpoint_pt_kvrhyz.nilreason[1] || ')') AS fix,
    navaids_points_designatedpoint_pt_kvrhyz.href AS fix_href,
    coalesce(cast(navaids_points_designatedpoint_pt_bczmnk.title as varchar), '(' || navaids_points_designatedpoint_pt_bczmnk.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_bczmnk.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_wnfrls.title as varchar), '(' || navaids_points_navaid_pt_wnfrls.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_wnfrls.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_oydqys.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_oydqys.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_oydqys.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_fyuvfc.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_fyuvfc.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_fyuvfc.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_flwvhr.title as varchar), '(' || airport_heliport_airportheliport_pt_flwvhr.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_flwvhr.href AS pointchoiceairportreferencepoint_href
from navaids_points.distanceindication 
inner join master_join mj2 on navaids_points.distanceindication.id = mj2.source_id
inner join navaids_points.distanceindication_tsp on mj2.target_id = navaids_points.distanceindication_tsp.id
inner join navaids_points.distanceindication_ts on navaids_points.distanceindication_tsp.distanceindicationtimeslice_id = navaids_points.distanceindication_ts.id
left join master_join mj3 on navaids_points.distanceindication_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_kvrhyz on navaids_points.distanceindication_ts.fix_id = navaids_points_designatedpoint_pt_kvrhyz.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_bczmnk on navaids_points.distanceindication_ts.distanceindication_ts_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_bczmnk.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_wnfrls on navaids_points.distanceindication_ts.distanceindication_ts_navaidsystem_id = navaids_points_navaid_pt_wnfrls.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_oydqys on navaids_points.distanceindication_ts.distanceindication_ts_aimingpoint_id = airport_heliport_touchdownliftoff_pt_oydqys.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_fyuvfc on navaids_points.distanceindication_ts.distanceindication_ts_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_fyuvfc.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_flwvhr on navaids_points.distanceindication_ts.distanceindication_ts_airportreferencepoint_id = airport_heliport_airportheliport_pt_flwvhr.id
--snowflake one geometry.point.pointchoiceposition - PointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.distanceindication.feature_status = 'APPROVED'
  and navaids_points.distanceindication_ts.feature_status = 'APPROVED'
group by
    navaids_points.distanceindication.id,
    navaids_points.distanceindication_ts.id,
    navaids_points.distanceindication_tsp.id,
    navaids_points.distanceindication.identifier,
    navaids_points.distanceindication_ts.interpretation,
    navaids_points.distanceindication_ts.sequence_number,
    navaids_points.distanceindication_ts.correction_number,
    navaids_points.distanceindication_ts.valid_time_begin,
    navaids_points.distanceindication_ts.valid_time_end,
    navaids_points.distanceindication_ts.feature_lifetime_begin,
    navaids_points.distanceindication_ts.feature_lifetime_end,
    navaids_points.distanceindication_ts.type_value,
    navaids_points.distanceindication_ts.type_nilreason,
    navaids_points.distanceindication_ts.distance_value,
    navaids_points.distanceindication_ts.distance_uom,
    navaids_points.distanceindication_ts.distance_nilreason,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_value,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_uom,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_nilreason,
    navaids_points_designatedpoint_pt_kvrhyz.title,
    navaids_points_designatedpoint_pt_kvrhyz.nilreason,
    navaids_points_designatedpoint_pt_kvrhyz.href,
    navaids_points_designatedpoint_pt_bczmnk.title,
    navaids_points_designatedpoint_pt_bczmnk.nilreason,
    navaids_points_designatedpoint_pt_bczmnk.href,
    navaids_points_navaid_pt_wnfrls.title,
    navaids_points_navaid_pt_wnfrls.nilreason,
    navaids_points_navaid_pt_wnfrls.href,
    airport_heliport_touchdownliftoff_pt_oydqys.title,
    airport_heliport_touchdownliftoff_pt_oydqys.nilreason,
    airport_heliport_touchdownliftoff_pt_oydqys.href,
    airport_heliport_runwaycentrelinepoint_pt_fyuvfc.title,
    airport_heliport_runwaycentrelinepoint_pt_fyuvfc.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_fyuvfc.href,
    airport_heliport_airportheliport_pt_flwvhr.title,
    airport_heliport_airportheliport_pt_flwvhr.nilreason,
    airport_heliport_airportheliport_pt_flwvhr.href
order by distanceindication.identifier, distanceindication_ts.sequence_number, distanceindication_ts.correction_number DESC;
create or replace view routes.flightrestriction_publisher_view as
select distinct on (flightrestriction.identifier,flightrestriction_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.flightrestriction.id,
    routes.flightrestriction_ts.id as ts_id,
    routes.flightrestriction_tsp.id as tsp_id,
    routes.flightrestriction.identifier,
    routes.flightrestriction_ts.interpretation,
    routes.flightrestriction_ts.sequence_number,
    routes.flightrestriction_ts.correction_number,
    routes.flightrestriction_ts.valid_time_begin,
    routes.flightrestriction_ts.valid_time_end,
    routes.flightrestriction_ts.feature_lifetime_begin,
    routes.flightrestriction_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(routes.flightrestriction_ts.designator_value as varchar), '(' || routes.flightrestriction_ts.designator_nilreason || ')') as designator,
    coalesce(cast(routes.flightrestriction_ts.type_value as varchar), '(' || routes.flightrestriction_ts.type_nilreason || ')') as type,
    coalesce(cast(routes.flightrestriction_ts.instruction_value as varchar), '(' || routes.flightrestriction_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(routes_flightconditioncombination_pt_fwgctn.title as varchar), '(' || routes_flightconditioncombination_pt_fwgctn.nilreason[1] || ')') AS flight,
    routes_flightconditioncombination_pt_fwgctn.href AS flight_href
from routes.flightrestriction 
inner join master_join mj2 on routes.flightrestriction.id = mj2.source_id
inner join routes.flightrestriction_tsp on mj2.target_id = routes.flightrestriction_tsp.id
inner join routes.flightrestriction_ts on routes.flightrestriction_tsp.flightrestrictiontimeslice_id = routes.flightrestriction_ts.id
left join master_join mj3 on routes.flightrestriction_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join routes.flightconditioncombination_pt routes_flightconditioncombination_pt_fwgctn on routes.flightrestriction_ts.flight_id = routes_flightconditioncombination_pt_fwgctn.id
--object many routes.flightrestrictionroute.regulatedroute - master_join
--snowflake many notes.note.annotation - NotePropertyType
where routes.flightrestriction.feature_status = 'APPROVED'
  and routes.flightrestriction_ts.feature_status = 'APPROVED'
group by
    routes.flightrestriction.id,
    routes.flightrestriction_ts.id,
    routes.flightrestriction_tsp.id,
    routes.flightrestriction.identifier,
    routes.flightrestriction_ts.interpretation,
    routes.flightrestriction_ts.sequence_number,
    routes.flightrestriction_ts.correction_number,
    routes.flightrestriction_ts.valid_time_begin,
    routes.flightrestriction_ts.valid_time_end,
    routes.flightrestriction_ts.feature_lifetime_begin,
    routes.flightrestriction_ts.feature_lifetime_end,
    routes.flightrestriction_ts.designator_value,
    routes.flightrestriction_ts.designator_nilreason,
    routes.flightrestriction_ts.type_value,
    routes.flightrestriction_ts.type_nilreason,
    routes.flightrestriction_ts.instruction_value,
    routes.flightrestriction_ts.instruction_nilreason,
    routes_flightconditioncombination_pt_fwgctn.title,
    routes_flightconditioncombination_pt_fwgctn.nilreason,
    routes_flightconditioncombination_pt_fwgctn.href
order by flightrestriction.identifier, flightrestriction_ts.sequence_number, flightrestriction_ts.correction_number DESC;
create or replace view airport_heliport.floatingdocksite_publisher_view as
select distinct on (floatingdocksite.identifier,floatingdocksite_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.floatingdocksite.id,
    airport_heliport.floatingdocksite_ts.id as ts_id,
    airport_heliport.floatingdocksite_tsp.id as tsp_id,
    airport_heliport.floatingdocksite.identifier,
    airport_heliport.floatingdocksite_ts.interpretation,
    airport_heliport.floatingdocksite_ts.sequence_number,
    airport_heliport.floatingdocksite_ts.correction_number,
    airport_heliport.floatingdocksite_ts.valid_time_begin,
    airport_heliport.floatingdocksite_ts.valid_time_end,
    airport_heliport.floatingdocksite_ts.feature_lifetime_begin,
    airport_heliport.floatingdocksite_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation
from airport_heliport.floatingdocksite 
inner join master_join mj2 on airport_heliport.floatingdocksite.id = mj2.source_id
inner join airport_heliport.floatingdocksite_tsp on mj2.target_id = airport_heliport.floatingdocksite_tsp.id
inner join airport_heliport.floatingdocksite_ts on airport_heliport.floatingdocksite_tsp.floatingdocksitetimeslice_id = airport_heliport.floatingdocksite_ts.id
left join master_join mj3 on airport_heliport.floatingdocksite_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.floatingdocksite.feature_status = 'APPROVED'
  and airport_heliport.floatingdocksite_ts.feature_status = 'APPROVED'
group by
    airport_heliport.floatingdocksite.id,
    airport_heliport.floatingdocksite_ts.id,
    airport_heliport.floatingdocksite_tsp.id,
    airport_heliport.floatingdocksite.identifier,
    airport_heliport.floatingdocksite_ts.interpretation,
    airport_heliport.floatingdocksite_ts.sequence_number,
    airport_heliport.floatingdocksite_ts.correction_number,
    airport_heliport.floatingdocksite_ts.valid_time_begin,
    airport_heliport.floatingdocksite_ts.valid_time_end,
    airport_heliport.floatingdocksite_ts.feature_lifetime_begin,
    airport_heliport.floatingdocksite_ts.feature_lifetime_end
order by floatingdocksite.identifier, floatingdocksite_ts.sequence_number, floatingdocksite_ts.correction_number DESC;
create or replace view airspace.geoborder_publisher_view as
select distinct on (geoborder.identifier,geoborder_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.geoborder.id,
    airspace.geoborder_ts.id as ts_id,
    airspace.geoborder_tsp.id as tsp_id,
    airspace.geoborder.identifier,
    airspace.geoborder_ts.interpretation,
    airspace.geoborder_ts.sequence_number,
    airspace.geoborder_ts.correction_number,
    airspace.geoborder_ts.valid_time_begin,
    airspace.geoborder_ts.valid_time_end,
    airspace.geoborder_ts.feature_lifetime_begin,
    airspace.geoborder_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airspace.geoborder_ts.name_value as varchar), '(' || airspace.geoborder_ts.name_nilreason || ')') as name,
    coalesce(cast(airspace.geoborder_ts.type_value as varchar), '(' || airspace.geoborder_ts.type_nilreason || ')') as type
from airspace.geoborder 
inner join master_join mj2 on airspace.geoborder.id = mj2.source_id
inner join airspace.geoborder_tsp on mj2.target_id = airspace.geoborder_tsp.id
inner join airspace.geoborder_ts on airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
left join master_join mj3 on airspace.geoborder_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.curve.border - CurvePropertyType
--snowflake many notes.note.annotation - NotePropertyType
where airspace.geoborder.feature_status = 'APPROVED'
  and airspace.geoborder_ts.feature_status = 'APPROVED'
group by
    airspace.geoborder.id,
    airspace.geoborder_ts.id,
    airspace.geoborder_tsp.id,
    airspace.geoborder.identifier,
    airspace.geoborder_ts.interpretation,
    airspace.geoborder_ts.sequence_number,
    airspace.geoborder_ts.correction_number,
    airspace.geoborder_ts.valid_time_begin,
    airspace.geoborder_ts.valid_time_end,
    airspace.geoborder_ts.feature_lifetime_begin,
    airspace.geoborder_ts.feature_lifetime_end,
    airspace.geoborder_ts.name_value,
    airspace.geoborder_ts.name_nilreason,
    airspace.geoborder_ts.type_value,
    airspace.geoborder_ts.type_nilreason
order by geoborder.identifier, geoborder_ts.sequence_number, geoborder_ts.correction_number DESC;
create or replace view airport_heliport.guidancelinemarking_publisher_view as
select distinct on (guidancelinemarking.identifier,guidancelinemarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidancelinemarking.id,
    airport_heliport.guidancelinemarking_ts.id as ts_id,
    airport_heliport.guidancelinemarking_tsp.id as tsp_id,
    airport_heliport.guidancelinemarking.identifier,
    airport_heliport.guidancelinemarking_ts.interpretation,
    airport_heliport.guidancelinemarking_ts.sequence_number,
    airport_heliport.guidancelinemarking_ts.correction_number,
    airport_heliport.guidancelinemarking_ts.valid_time_begin,
    airport_heliport.guidancelinemarking_ts.valid_time_end,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_begin,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.guidancelinemarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.guidancelinemarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.guidancelinemarking_ts.condition_value as varchar), '(' || airport_heliport.guidancelinemarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_guidanceline_pt_csiudf.title as varchar), '(' || airport_heliport_guidanceline_pt_csiudf.nilreason[1] || ')') AS markedguidanceline,
    airport_heliport_guidanceline_pt_csiudf.href AS markedguidanceline_href
from airport_heliport.guidancelinemarking 
inner join master_join mj2 on airport_heliport.guidancelinemarking.id = mj2.source_id
inner join airport_heliport.guidancelinemarking_tsp on mj2.target_id = airport_heliport.guidancelinemarking_tsp.id
inner join airport_heliport.guidancelinemarking_ts on airport_heliport.guidancelinemarking_tsp.guidancelinemarkingtimeslice_id = airport_heliport.guidancelinemarking_ts.id
left join master_join mj3 on airport_heliport.guidancelinemarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_csiudf on airport_heliport.guidancelinemarking_ts.markedguidanceline_id = airport_heliport_guidanceline_pt_csiudf.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.guidancelinemarking.feature_status = 'APPROVED'
  and airport_heliport.guidancelinemarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidancelinemarking.id,
    airport_heliport.guidancelinemarking_ts.id,
    airport_heliport.guidancelinemarking_tsp.id,
    airport_heliport.guidancelinemarking.identifier,
    airport_heliport.guidancelinemarking_ts.interpretation,
    airport_heliport.guidancelinemarking_ts.sequence_number,
    airport_heliport.guidancelinemarking_ts.correction_number,
    airport_heliport.guidancelinemarking_ts.valid_time_begin,
    airport_heliport.guidancelinemarking_ts.valid_time_end,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_begin,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_end,
    airport_heliport.guidancelinemarking_ts.markingicaostandard_value,
    airport_heliport.guidancelinemarking_ts.markingicaostandard_nilreason,
    airport_heliport.guidancelinemarking_ts.condition_value,
    airport_heliport.guidancelinemarking_ts.condition_nilreason,
    airport_heliport_guidanceline_pt_csiudf.title,
    airport_heliport_guidanceline_pt_csiudf.nilreason,
    airport_heliport_guidanceline_pt_csiudf.href
order by guidancelinemarking.identifier, guidancelinemarking_ts.sequence_number, guidancelinemarking_ts.correction_number DESC;
create or replace view shared.holdingassessment_publisher_view as
select distinct on (holdingassessment.identifier,holdingassessment_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.holdingassessment.id,
    shared.holdingassessment_ts.id as ts_id,
    shared.holdingassessment_tsp.id as tsp_id,
    shared.holdingassessment.identifier,
    shared.holdingassessment_ts.interpretation,
    shared.holdingassessment_ts.sequence_number,
    shared.holdingassessment_ts.correction_number,
    shared.holdingassessment_ts.valid_time_begin,
    shared.holdingassessment_ts.valid_time_end,
    shared.holdingassessment_ts.feature_lifetime_begin,
    shared.holdingassessment_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(shared.holdingassessment_ts.upperlimitreference_value as varchar), '(' || shared.holdingassessment_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.holdingassessment_ts.lowerlimitreference_value as varchar), '(' || shared.holdingassessment_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.holdingassessment_ts.patterntemplate_value as varchar), '(' || shared.holdingassessment_ts.patterntemplate_nilreason || ')') as patterntemplate,
    coalesce(cast(shared.holdingassessment_ts.turbulentair_value as varchar), '(' || shared.holdingassessment_ts.turbulentair_nilreason || ')') as turbulentair,
    coalesce(cast(shared.holdingassessment_ts.upperlimit_value as varchar) || ' ' || shared.holdingassessment_ts.upperlimit_uom, '(' || shared.holdingassessment_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.holdingassessment_ts.lowerlimit_value as varchar) || ' ' || shared.holdingassessment_ts.lowerlimit_uom, '(' || shared.holdingassessment_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(shared.holdingassessment_ts.speedlimit_value as varchar) || ' ' || shared.holdingassessment_ts.speedlimit_uom, '(' || shared.holdingassessment_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(shared.holdingassessment_ts.leglengthtoward_value as varchar) || ' ' || shared.holdingassessment_ts.leglengthtoward_uom, '(' || shared.holdingassessment_ts.leglengthtoward_nilreason || ')') as leglengthtoward,
    coalesce(cast(shared.holdingassessment_ts.leglengthaway_value as varchar) || ' ' || shared.holdingassessment_ts.leglengthaway_uom, '(' || shared.holdingassessment_ts.leglengthaway_nilreason || ')') as leglengthaway,
    coalesce(cast(navaids_points_segmentpoint_pt_seyrnw.title as varchar), '(' || navaids_points_segmentpoint_pt_seyrnw.nilreason[1] || ')') AS holdingpoint,
    navaids_points_segmentpoint_pt_seyrnw.href AS holdingpoint_href,
    coalesce(cast(holding_unplannedholding_pt_paoszb.title as varchar), '(' || holding_unplannedholding_pt_paoszb.nilreason[1] || ')') AS unplannedholding,
    holding_unplannedholding_pt_paoszb.href AS unplannedholding_href,
    coalesce(cast(holding_holdingpattern_pt_ozzlhl.title as varchar), '(' || holding_holdingpattern_pt_ozzlhl.nilreason[1] || ')') AS assessedholdingpattern,
    holding_holdingpattern_pt_ozzlhl.href AS assessedholdingpattern_href
from shared.holdingassessment 
inner join master_join mj2 on shared.holdingassessment.id = mj2.source_id
inner join shared.holdingassessment_tsp on mj2.target_id = shared.holdingassessment_tsp.id
inner join shared.holdingassessment_ts on shared.holdingassessment_tsp.holdingassessmenttimeslice_id = shared.holdingassessment_ts.id
left join master_join mj3 on shared.holdingassessment_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.segmentpoint_pt navaids_points_segmentpoint_pt_seyrnw on shared.holdingassessment_ts.holdingpoint_id = navaids_points_segmentpoint_pt_seyrnw.id
left join holding.unplannedholding_pt holding_unplannedholding_pt_paoszb on shared.holdingassessment_ts.unplannedholding_id = holding_unplannedholding_pt_paoszb.id
left join holding.holdingpattern_pt holding_holdingpattern_pt_ozzlhl on shared.holdingassessment_ts.assessedholdingpattern_id = holding_holdingpattern_pt_ozzlhl.id
--object many shared.obstacleassessmentarea.obstacleassessment - master_join
--snowflake many notes.note.annotation - NotePropertyType
where shared.holdingassessment.feature_status = 'APPROVED'
  and shared.holdingassessment_ts.feature_status = 'APPROVED'
group by
    shared.holdingassessment.id,
    shared.holdingassessment_ts.id,
    shared.holdingassessment_tsp.id,
    shared.holdingassessment.identifier,
    shared.holdingassessment_ts.interpretation,
    shared.holdingassessment_ts.sequence_number,
    shared.holdingassessment_ts.correction_number,
    shared.holdingassessment_ts.valid_time_begin,
    shared.holdingassessment_ts.valid_time_end,
    shared.holdingassessment_ts.feature_lifetime_begin,
    shared.holdingassessment_ts.feature_lifetime_end,
    shared.holdingassessment_ts.upperlimitreference_value,
    shared.holdingassessment_ts.upperlimitreference_nilreason,
    shared.holdingassessment_ts.lowerlimitreference_value,
    shared.holdingassessment_ts.lowerlimitreference_nilreason,
    shared.holdingassessment_ts.patterntemplate_value,
    shared.holdingassessment_ts.patterntemplate_nilreason,
    shared.holdingassessment_ts.turbulentair_value,
    shared.holdingassessment_ts.turbulentair_nilreason,
    shared.holdingassessment_ts.upperlimit_value,
    shared.holdingassessment_ts.upperlimit_uom,
    shared.holdingassessment_ts.upperlimit_nilreason,
    shared.holdingassessment_ts.lowerlimit_value,
    shared.holdingassessment_ts.lowerlimit_uom,
    shared.holdingassessment_ts.lowerlimit_nilreason,
    shared.holdingassessment_ts.speedlimit_value,
    shared.holdingassessment_ts.speedlimit_uom,
    shared.holdingassessment_ts.speedlimit_nilreason,
    shared.holdingassessment_ts.leglengthtoward_value,
    shared.holdingassessment_ts.leglengthtoward_uom,
    shared.holdingassessment_ts.leglengthtoward_nilreason,
    shared.holdingassessment_ts.leglengthaway_value,
    shared.holdingassessment_ts.leglengthaway_uom,
    shared.holdingassessment_ts.leglengthaway_nilreason,
    navaids_points_segmentpoint_pt_seyrnw.title,
    navaids_points_segmentpoint_pt_seyrnw.nilreason,
    navaids_points_segmentpoint_pt_seyrnw.href,
    holding_unplannedholding_pt_paoszb.title,
    holding_unplannedholding_pt_paoszb.nilreason,
    holding_unplannedholding_pt_paoszb.href,
    holding_holdingpattern_pt_ozzlhl.title,
    holding_holdingpattern_pt_ozzlhl.nilreason,
    holding_holdingpattern_pt_ozzlhl.href
order by holdingassessment.identifier, holdingassessment_ts.sequence_number, holdingassessment_ts.correction_number DESC;
create or replace view holding.holdingpattern_publisher_view as
select distinct on (holdingpattern.identifier,holdingpattern_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    holding.holdingpattern.id,
    holding.holdingpattern_ts.id as ts_id,
    holding.holdingpattern_tsp.id as tsp_id,
    holding.holdingpattern.identifier,
    holding.holdingpattern_ts.interpretation,
    holding.holdingpattern_ts.sequence_number,
    holding.holdingpattern_ts.correction_number,
    holding.holdingpattern_ts.valid_time_begin,
    holding.holdingpattern_ts.valid_time_end,
    holding.holdingpattern_ts.feature_lifetime_begin,
    holding.holdingpattern_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(holding.holdingpattern_ts.type_value as varchar), '(' || holding.holdingpattern_ts.type_nilreason || ')') as type,
    coalesce(cast(holding.holdingpattern_ts.outboundcourse_value as varchar), '(' || holding.holdingpattern_ts.outboundcourse_nilreason || ')') as outboundcourse,
    coalesce(cast(holding.holdingpattern_ts.outboundcoursetype_value as varchar), '(' || holding.holdingpattern_ts.outboundcoursetype_nilreason || ')') as outboundcoursetype,
    coalesce(cast(holding.holdingpattern_ts.inboundcourse_value as varchar), '(' || holding.holdingpattern_ts.inboundcourse_nilreason || ')') as inboundcourse,
    coalesce(cast(holding.holdingpattern_ts.turndirection_value as varchar), '(' || holding.holdingpattern_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(holding.holdingpattern_ts.upperlimitreference_value as varchar), '(' || holding.holdingpattern_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(holding.holdingpattern_ts.lowerlimitreference_value as varchar), '(' || holding.holdingpattern_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(holding.holdingpattern_ts.instruction_value as varchar), '(' || holding.holdingpattern_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(holding.holdingpattern_ts.nonstandardholding_value as varchar), '(' || holding.holdingpattern_ts.nonstandardholding_nilreason || ')') as nonstandardholding,
    coalesce(cast(holding.holdingpattern_ts.upperlimit_value as varchar) || ' ' || holding.holdingpattern_ts.upperlimit_uom, '(' || holding.holdingpattern_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(holding.holdingpattern_ts.lowerlimit_value as varchar) || ' ' || holding.holdingpattern_ts.lowerlimit_uom, '(' || holding.holdingpattern_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(holding.holdingpattern_ts.speedlimit_value as varchar) || ' ' || holding.holdingpattern_ts.speedlimit_uom, '(' || holding.holdingpattern_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(holding_holdingpatternduration_pt_umsdur.title as varchar), '(' || holding_holdingpatternduration_pt_umsdur.nilreason[1] || ')') AS outboundlegspanendtime,
    holding_holdingpatternduration_pt_umsdur.href AS outboundlegspanendtime_href,
    coalesce(cast(holding_holdingpatterndistance_pt_tqqqpw.title as varchar), '(' || holding_holdingpatterndistance_pt_tqqqpw.nilreason[1] || ')') AS outboundlegspanenddistance,
    holding_holdingpatterndistance_pt_tqqqpw.href AS outboundlegspanenddistance_href,
    coalesce(cast(navaids_points_segmentpoint_pt_cjmqpf.title as varchar), '(' || navaids_points_segmentpoint_pt_cjmqpf.nilreason[1] || ')') AS outboundlegspanendpoint,
    navaids_points_segmentpoint_pt_cjmqpf.href AS outboundlegspanendpoint_href,
    coalesce(cast(navaids_points_segmentpoint_pt_fvdbll.title as varchar), '(' || navaids_points_segmentpoint_pt_fvdbll.nilreason[1] || ')') AS holdingpoint,
    navaids_points_segmentpoint_pt_fvdbll.href AS holdingpoint_href
from holding.holdingpattern 
inner join master_join mj2 on holding.holdingpattern.id = mj2.source_id
inner join holding.holdingpattern_tsp on mj2.target_id = holding.holdingpattern_tsp.id
inner join holding.holdingpattern_ts on holding.holdingpattern_tsp.holdingpatterntimeslice_id = holding.holdingpattern_ts.id
left join master_join mj3 on holding.holdingpattern_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join holding.holdingpatternduration_pt holding_holdingpatternduration_pt_umsdur on holding.holdingpattern_ts.outboundlegspan_endtime_id = holding_holdingpatternduration_pt_umsdur.id
left join holding.holdingpatterndistance_pt holding_holdingpatterndistance_pt_tqqqpw on holding.holdingpattern_ts.outboundlegspan_enddistance_id = holding_holdingpatterndistance_pt_tqqqpw.id
left join navaids_points.segmentpoint_pt navaids_points_segmentpoint_pt_cjmqpf on holding.holdingpattern_ts.outboundlegspan_endpoint_id = navaids_points_segmentpoint_pt_cjmqpf.id
left join navaids_points.segmentpoint_pt navaids_points_segmentpoint_pt_fvdbll on holding.holdingpattern_ts.holdingpoint_id = navaids_points_segmentpoint_pt_fvdbll.id
--snowflake one geometry.curve.extent - CurvePropertyType
--snowflake many notes.note.annotation - NotePropertyType
where holding.holdingpattern.feature_status = 'APPROVED'
  and holding.holdingpattern_ts.feature_status = 'APPROVED'
group by
    holding.holdingpattern.id,
    holding.holdingpattern_ts.id,
    holding.holdingpattern_tsp.id,
    holding.holdingpattern.identifier,
    holding.holdingpattern_ts.interpretation,
    holding.holdingpattern_ts.sequence_number,
    holding.holdingpattern_ts.correction_number,
    holding.holdingpattern_ts.valid_time_begin,
    holding.holdingpattern_ts.valid_time_end,
    holding.holdingpattern_ts.feature_lifetime_begin,
    holding.holdingpattern_ts.feature_lifetime_end,
    holding.holdingpattern_ts.type_value,
    holding.holdingpattern_ts.type_nilreason,
    holding.holdingpattern_ts.outboundcourse_value,
    holding.holdingpattern_ts.outboundcourse_nilreason,
    holding.holdingpattern_ts.outboundcoursetype_value,
    holding.holdingpattern_ts.outboundcoursetype_nilreason,
    holding.holdingpattern_ts.inboundcourse_value,
    holding.holdingpattern_ts.inboundcourse_nilreason,
    holding.holdingpattern_ts.turndirection_value,
    holding.holdingpattern_ts.turndirection_nilreason,
    holding.holdingpattern_ts.upperlimitreference_value,
    holding.holdingpattern_ts.upperlimitreference_nilreason,
    holding.holdingpattern_ts.lowerlimitreference_value,
    holding.holdingpattern_ts.lowerlimitreference_nilreason,
    holding.holdingpattern_ts.instruction_value,
    holding.holdingpattern_ts.instruction_nilreason,
    holding.holdingpattern_ts.nonstandardholding_value,
    holding.holdingpattern_ts.nonstandardholding_nilreason,
    holding.holdingpattern_ts.upperlimit_value,
    holding.holdingpattern_ts.upperlimit_uom,
    holding.holdingpattern_ts.upperlimit_nilreason,
    holding.holdingpattern_ts.lowerlimit_value,
    holding.holdingpattern_ts.lowerlimit_uom,
    holding.holdingpattern_ts.lowerlimit_nilreason,
    holding.holdingpattern_ts.speedlimit_value,
    holding.holdingpattern_ts.speedlimit_uom,
    holding.holdingpattern_ts.speedlimit_nilreason,
    holding_holdingpatternduration_pt_umsdur.title,
    holding_holdingpatternduration_pt_umsdur.nilreason,
    holding_holdingpatternduration_pt_umsdur.href,
    holding_holdingpatterndistance_pt_tqqqpw.title,
    holding_holdingpatterndistance_pt_tqqqpw.nilreason,
    holding_holdingpatterndistance_pt_tqqqpw.href,
    navaids_points_segmentpoint_pt_cjmqpf.title,
    navaids_points_segmentpoint_pt_cjmqpf.nilreason,
    navaids_points_segmentpoint_pt_cjmqpf.href,
    navaids_points_segmentpoint_pt_fvdbll.title,
    navaids_points_segmentpoint_pt_fvdbll.nilreason,
    navaids_points_segmentpoint_pt_fvdbll.href
order by holdingpattern.identifier, holdingpattern_ts.sequence_number, holdingpattern_ts.correction_number DESC;
create or replace view airport_heliport.markingbuoy_publisher_view as
select distinct on (markingbuoy.identifier,markingbuoy_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.markingbuoy.id,
    airport_heliport.markingbuoy_ts.id as ts_id,
    airport_heliport.markingbuoy_tsp.id as tsp_id,
    airport_heliport.markingbuoy.identifier,
    airport_heliport.markingbuoy_ts.interpretation,
    airport_heliport.markingbuoy_ts.sequence_number,
    airport_heliport.markingbuoy_ts.correction_number,
    airport_heliport.markingbuoy_ts.valid_time_begin,
    airport_heliport.markingbuoy_ts.valid_time_end,
    airport_heliport.markingbuoy_ts.feature_lifetime_begin,
    airport_heliport.markingbuoy_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.markingbuoy_ts.type_value as varchar), '(' || airport_heliport.markingbuoy_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.markingbuoy_ts.colour_value as varchar), '(' || airport_heliport.markingbuoy_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport_seaplanelandingarea_pt_tuvtzz.title as varchar), '(' || airport_heliport_seaplanelandingarea_pt_tuvtzz.nilreason[1] || ')') AS theseaplanelandingarea,
    airport_heliport_seaplanelandingarea_pt_tuvtzz.href AS theseaplanelandingarea_href
from airport_heliport.markingbuoy 
inner join master_join mj2 on airport_heliport.markingbuoy.id = mj2.source_id
inner join airport_heliport.markingbuoy_tsp on mj2.target_id = airport_heliport.markingbuoy_tsp.id
inner join airport_heliport.markingbuoy_ts on airport_heliport.markingbuoy_tsp.markingbuoytimeslice_id = airport_heliport.markingbuoy_ts.id
left join master_join mj3 on airport_heliport.markingbuoy_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.seaplanelandingarea_pt airport_heliport_seaplanelandingarea_pt_tuvtzz on airport_heliport.markingbuoy_ts.theseaplanelandingarea_id = airport_heliport_seaplanelandingarea_pt_tuvtzz.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.markingbuoy.feature_status = 'APPROVED'
  and airport_heliport.markingbuoy_ts.feature_status = 'APPROVED'
group by
    airport_heliport.markingbuoy.id,
    airport_heliport.markingbuoy_ts.id,
    airport_heliport.markingbuoy_tsp.id,
    airport_heliport.markingbuoy.identifier,
    airport_heliport.markingbuoy_ts.interpretation,
    airport_heliport.markingbuoy_ts.sequence_number,
    airport_heliport.markingbuoy_ts.correction_number,
    airport_heliport.markingbuoy_ts.valid_time_begin,
    airport_heliport.markingbuoy_ts.valid_time_end,
    airport_heliport.markingbuoy_ts.feature_lifetime_begin,
    airport_heliport.markingbuoy_ts.feature_lifetime_end,
    airport_heliport.markingbuoy_ts.type_value,
    airport_heliport.markingbuoy_ts.type_nilreason,
    airport_heliport.markingbuoy_ts.colour_value,
    airport_heliport.markingbuoy_ts.colour_nilreason,
    airport_heliport_seaplanelandingarea_pt_tuvtzz.title,
    airport_heliport_seaplanelandingarea_pt_tuvtzz.nilreason,
    airport_heliport_seaplanelandingarea_pt_tuvtzz.href
order by markingbuoy.identifier, markingbuoy_ts.sequence_number, markingbuoy_ts.correction_number DESC;
create or replace view airport_heliport.nonmovementarea_publisher_view as
select distinct on (nonmovementarea.identifier,nonmovementarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.nonmovementarea.id,
    airport_heliport.nonmovementarea_ts.id as ts_id,
    airport_heliport.nonmovementarea_tsp.id as tsp_id,
    airport_heliport.nonmovementarea.identifier,
    airport_heliport.nonmovementarea_ts.interpretation,
    airport_heliport.nonmovementarea_ts.sequence_number,
    airport_heliport.nonmovementarea_ts.correction_number,
    airport_heliport.nonmovementarea_ts.valid_time_begin,
    airport_heliport.nonmovementarea_ts.valid_time_end,
    airport_heliport.nonmovementarea_ts.feature_lifetime_begin,
    airport_heliport.nonmovementarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport_airportheliport_pt_hnjnqj.title as varchar), '(' || airport_heliport_airportheliport_pt_hnjnqj.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_hnjnqj.href AS associatedairportheliport_href
from airport_heliport.nonmovementarea 
inner join master_join mj2 on airport_heliport.nonmovementarea.id = mj2.source_id
inner join airport_heliport.nonmovementarea_tsp on mj2.target_id = airport_heliport.nonmovementarea_tsp.id
inner join airport_heliport.nonmovementarea_ts on airport_heliport.nonmovementarea_tsp.nonmovementareatimeslice_id = airport_heliport.nonmovementarea_ts.id
left join master_join mj3 on airport_heliport.nonmovementarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hnjnqj on airport_heliport.nonmovementarea_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_hnjnqj.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.nonmovementarea.feature_status = 'APPROVED'
  and airport_heliport.nonmovementarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.nonmovementarea.id,
    airport_heliport.nonmovementarea_ts.id,
    airport_heliport.nonmovementarea_tsp.id,
    airport_heliport.nonmovementarea.identifier,
    airport_heliport.nonmovementarea_ts.interpretation,
    airport_heliport.nonmovementarea_ts.sequence_number,
    airport_heliport.nonmovementarea_ts.correction_number,
    airport_heliport.nonmovementarea_ts.valid_time_begin,
    airport_heliport.nonmovementarea_ts.valid_time_end,
    airport_heliport.nonmovementarea_ts.feature_lifetime_begin,
    airport_heliport.nonmovementarea_ts.feature_lifetime_end,
    airport_heliport_airportheliport_pt_hnjnqj.title,
    airport_heliport_airportheliport_pt_hnjnqj.nilreason,
    airport_heliport_airportheliport_pt_hnjnqj.href
order by nonmovementarea.identifier, nonmovementarea_ts.sequence_number, nonmovementarea_ts.correction_number DESC;
create or replace view service.pilotcontrolledlighting_publisher_view as
select distinct on (pilotcontrolledlighting.identifier,pilotcontrolledlighting_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.pilotcontrolledlighting.id,
    service.pilotcontrolledlighting_ts.id as ts_id,
    service.pilotcontrolledlighting_tsp.id as tsp_id,
    service.pilotcontrolledlighting.identifier,
    service.pilotcontrolledlighting_ts.interpretation,
    service.pilotcontrolledlighting_ts.sequence_number,
    service.pilotcontrolledlighting_ts.correction_number,
    service.pilotcontrolledlighting_ts.valid_time_begin,
    service.pilotcontrolledlighting_ts.valid_time_end,
    service.pilotcontrolledlighting_ts.feature_lifetime_begin,
    service.pilotcontrolledlighting_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.pilotcontrolledlighting_ts.type_value as varchar), '(' || service.pilotcontrolledlighting_ts.type_nilreason || ')') as type,
    coalesce(cast(service.pilotcontrolledlighting_ts.intensitysteps_value as varchar), '(' || service.pilotcontrolledlighting_ts.intensitysteps_nilreason || ')') as intensitysteps,
    coalesce(cast(service.pilotcontrolledlighting_ts.standbyintensity_value as varchar), '(' || service.pilotcontrolledlighting_ts.standbyintensity_nilreason || ')') as standbyintensity,
    coalesce(cast(service.pilotcontrolledlighting_ts.activationinstruction_value as varchar), '(' || service.pilotcontrolledlighting_ts.activationinstruction_nilreason || ')') as activationinstruction,
    coalesce(cast(service.pilotcontrolledlighting_ts.duration_value as varchar) || ' ' || service.pilotcontrolledlighting_ts.duration_uom, '(' || service.pilotcontrolledlighting_ts.duration_nilreason || ')') as duration,
    coalesce(cast(service.pilotcontrolledlighting_ts.radiofrequency_value as varchar) || ' ' || service.pilotcontrolledlighting_ts.radiofrequency_uom, '(' || service.pilotcontrolledlighting_ts.radiofrequency_nilreason || ')') as radiofrequency
from service.pilotcontrolledlighting 
inner join master_join mj2 on service.pilotcontrolledlighting.id = mj2.source_id
inner join service.pilotcontrolledlighting_tsp on mj2.target_id = service.pilotcontrolledlighting_tsp.id
inner join service.pilotcontrolledlighting_ts on service.pilotcontrolledlighting_tsp.pilotcontrolledlightingtimeslice_id = service.pilotcontrolledlighting_ts.id
left join master_join mj3 on service.pilotcontrolledlighting_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--object many airport_heliport.lightactivation.controlledlightintensity - master_join
--snowflake many notes.note.annotation - NotePropertyType
where service.pilotcontrolledlighting.feature_status = 'APPROVED'
  and service.pilotcontrolledlighting_ts.feature_status = 'APPROVED'
group by
    service.pilotcontrolledlighting.id,
    service.pilotcontrolledlighting_ts.id,
    service.pilotcontrolledlighting_tsp.id,
    service.pilotcontrolledlighting.identifier,
    service.pilotcontrolledlighting_ts.interpretation,
    service.pilotcontrolledlighting_ts.sequence_number,
    service.pilotcontrolledlighting_ts.correction_number,
    service.pilotcontrolledlighting_ts.valid_time_begin,
    service.pilotcontrolledlighting_ts.valid_time_end,
    service.pilotcontrolledlighting_ts.feature_lifetime_begin,
    service.pilotcontrolledlighting_ts.feature_lifetime_end,
    service.pilotcontrolledlighting_ts.type_value,
    service.pilotcontrolledlighting_ts.type_nilreason,
    service.pilotcontrolledlighting_ts.intensitysteps_value,
    service.pilotcontrolledlighting_ts.intensitysteps_nilreason,
    service.pilotcontrolledlighting_ts.standbyintensity_value,
    service.pilotcontrolledlighting_ts.standbyintensity_nilreason,
    service.pilotcontrolledlighting_ts.activationinstruction_value,
    service.pilotcontrolledlighting_ts.activationinstruction_nilreason,
    service.pilotcontrolledlighting_ts.duration_value,
    service.pilotcontrolledlighting_ts.duration_uom,
    service.pilotcontrolledlighting_ts.duration_nilreason,
    service.pilotcontrolledlighting_ts.radiofrequency_value,
    service.pilotcontrolledlighting_ts.radiofrequency_uom,
    service.pilotcontrolledlighting_ts.radiofrequency_nilreason
order by pilotcontrolledlighting.identifier, pilotcontrolledlighting_ts.sequence_number, pilotcontrolledlighting_ts.correction_number DESC;
create or replace view routes.route_publisher_view as
select distinct on (route.identifier,route_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.route.id,
    routes.route_ts.id as ts_id,
    routes.route_tsp.id as tsp_id,
    routes.route.identifier,
    routes.route_ts.interpretation,
    routes.route_ts.sequence_number,
    routes.route_ts.correction_number,
    routes.route_ts.valid_time_begin,
    routes.route_ts.valid_time_end,
    routes.route_ts.feature_lifetime_begin,
    routes.route_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(routes.route_ts.designatorprefix_value as varchar), '(' || routes.route_ts.designatorprefix_nilreason || ')') as designatorprefix,
    coalesce(cast(routes.route_ts.designatorsecondletter_value as varchar), '(' || routes.route_ts.designatorsecondletter_nilreason || ')') as designatorsecondletter,
    coalesce(cast(routes.route_ts.designatornumber_value as varchar), '(' || routes.route_ts.designatornumber_nilreason || ')') as designatornumber,
    coalesce(cast(routes.route_ts.multipleidentifier_value as varchar), '(' || routes.route_ts.multipleidentifier_nilreason || ')') as multipleidentifier,
    coalesce(cast(routes.route_ts.locationdesignator_value as varchar), '(' || routes.route_ts.locationdesignator_nilreason || ')') as locationdesignator,
    coalesce(cast(routes.route_ts.name_value as varchar), '(' || routes.route_ts.name_nilreason || ')') as name,
    coalesce(cast(routes.route_ts.type_value as varchar), '(' || routes.route_ts.type_nilreason || ')') as type,
    coalesce(cast(routes.route_ts.flightrule_value as varchar), '(' || routes.route_ts.flightrule_nilreason || ')') as flightrule,
    coalesce(cast(routes.route_ts.internationaluse_value as varchar), '(' || routes.route_ts.internationaluse_nilreason || ')') as internationaluse,
    coalesce(cast(routes.route_ts.militaryuse_value as varchar), '(' || routes.route_ts.militaryuse_nilreason || ')') as militaryuse,
    coalesce(cast(routes.route_ts.militarytrainingtype_value as varchar), '(' || routes.route_ts.militarytrainingtype_nilreason || ')') as militarytrainingtype
from routes.route 
inner join master_join mj2 on routes.route.id = mj2.source_id
inner join routes.route_tsp on mj2.target_id = routes.route_tsp.id
inner join routes.route_ts on routes.route_tsp.routetimeslice_id = routes.route_ts.id
left join master_join mj3 on routes.route_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one .organisationauthority.userorganisation - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where routes.route.feature_status = 'APPROVED'
  and routes.route_ts.feature_status = 'APPROVED'
group by
    routes.route.id,
    routes.route_ts.id,
    routes.route_tsp.id,
    routes.route.identifier,
    routes.route_ts.interpretation,
    routes.route_ts.sequence_number,
    routes.route_ts.correction_number,
    routes.route_ts.valid_time_begin,
    routes.route_ts.valid_time_end,
    routes.route_ts.feature_lifetime_begin,
    routes.route_ts.feature_lifetime_end,
    routes.route_ts.designatorprefix_value,
    routes.route_ts.designatorprefix_nilreason,
    routes.route_ts.designatorsecondletter_value,
    routes.route_ts.designatorsecondletter_nilreason,
    routes.route_ts.designatornumber_value,
    routes.route_ts.designatornumber_nilreason,
    routes.route_ts.multipleidentifier_value,
    routes.route_ts.multipleidentifier_nilreason,
    routes.route_ts.locationdesignator_value,
    routes.route_ts.locationdesignator_nilreason,
    routes.route_ts.name_value,
    routes.route_ts.name_nilreason,
    routes.route_ts.type_value,
    routes.route_ts.type_nilreason,
    routes.route_ts.flightrule_value,
    routes.route_ts.flightrule_nilreason,
    routes.route_ts.internationaluse_value,
    routes.route_ts.internationaluse_nilreason,
    routes.route_ts.militaryuse_value,
    routes.route_ts.militaryuse_nilreason,
    routes.route_ts.militarytrainingtype_value,
    routes.route_ts.militarytrainingtype_nilreason
order by route.identifier, route_ts.sequence_number, route_ts.correction_number DESC;
create or replace view airport_heliport.runwayblastpad_publisher_view as
select distinct on (runwayblastpad.identifier,runwayblastpad_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayblastpad.id,
    airport_heliport.runwayblastpad_ts.id as ts_id,
    airport_heliport.runwayblastpad_tsp.id as tsp_id,
    airport_heliport.runwayblastpad.identifier,
    airport_heliport.runwayblastpad_ts.interpretation,
    airport_heliport.runwayblastpad_ts.sequence_number,
    airport_heliport.runwayblastpad_ts.correction_number,
    airport_heliport.runwayblastpad_ts.valid_time_begin,
    airport_heliport.runwayblastpad_ts.valid_time_end,
    airport_heliport.runwayblastpad_ts.feature_lifetime_begin,
    airport_heliport.runwayblastpad_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwayblastpad_ts.status_value as varchar), '(' || airport_heliport.runwayblastpad_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.runwayblastpad_ts.length_value as varchar) || ' ' || airport_heliport.runwayblastpad_ts.length_uom, '(' || airport_heliport.runwayblastpad_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_runwaydirection_pt_cuykcg.title as varchar), '(' || airport_heliport_runwaydirection_pt_cuykcg.nilreason[1] || ')') AS usedrunwaydirection,
    airport_heliport_runwaydirection_pt_cuykcg.href AS usedrunwaydirection_href,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_otqkih.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_otqkih.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_otqkih.href AS surfaceproperties_href
from airport_heliport.runwayblastpad 
inner join master_join mj2 on airport_heliport.runwayblastpad.id = mj2.source_id
inner join airport_heliport.runwayblastpad_tsp on mj2.target_id = airport_heliport.runwayblastpad_tsp.id
inner join airport_heliport.runwayblastpad_ts on airport_heliport.runwayblastpad_tsp.runwayblastpadtimeslice_id = airport_heliport.runwayblastpad_ts.id
left join master_join mj3 on airport_heliport.runwayblastpad_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_cuykcg on airport_heliport.runwayblastpad_ts.usedrunwaydirection_id = airport_heliport_runwaydirection_pt_cuykcg.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_otqkih on airport_heliport.runwayblastpad_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_otqkih.id
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwayblastpad.feature_status = 'APPROVED'
  and airport_heliport.runwayblastpad_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayblastpad.id,
    airport_heliport.runwayblastpad_ts.id,
    airport_heliport.runwayblastpad_tsp.id,
    airport_heliport.runwayblastpad.identifier,
    airport_heliport.runwayblastpad_ts.interpretation,
    airport_heliport.runwayblastpad_ts.sequence_number,
    airport_heliport.runwayblastpad_ts.correction_number,
    airport_heliport.runwayblastpad_ts.valid_time_begin,
    airport_heliport.runwayblastpad_ts.valid_time_end,
    airport_heliport.runwayblastpad_ts.feature_lifetime_begin,
    airport_heliport.runwayblastpad_ts.feature_lifetime_end,
    airport_heliport.runwayblastpad_ts.status_value,
    airport_heliport.runwayblastpad_ts.status_nilreason,
    airport_heliport.runwayblastpad_ts.length_value,
    airport_heliport.runwayblastpad_ts.length_uom,
    airport_heliport.runwayblastpad_ts.length_nilreason,
    airport_heliport_runwaydirection_pt_cuykcg.title,
    airport_heliport_runwaydirection_pt_cuykcg.nilreason,
    airport_heliport_runwaydirection_pt_cuykcg.href,
    airport_heliport_surfacecharacteristics_pt_otqkih.title,
    airport_heliport_surfacecharacteristics_pt_otqkih.nilreason,
    airport_heliport_surfacecharacteristics_pt_otqkih.href
order by runwayblastpad.identifier, runwayblastpad_ts.sequence_number, runwayblastpad_ts.correction_number DESC;
create or replace view airport_heliport.runwaydirection_publisher_view as
select distinct on (runwaydirection.identifier,runwaydirection_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaydirection.id,
    airport_heliport.runwaydirection_ts.id as ts_id,
    airport_heliport.runwaydirection_tsp.id as tsp_id,
    airport_heliport.runwaydirection.identifier,
    airport_heliport.runwaydirection_ts.interpretation,
    airport_heliport.runwaydirection_ts.sequence_number,
    airport_heliport.runwaydirection_ts.correction_number,
    airport_heliport.runwaydirection_ts.valid_time_begin,
    airport_heliport.runwaydirection_ts.valid_time_end,
    airport_heliport.runwaydirection_ts.feature_lifetime_begin,
    airport_heliport.runwaydirection_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwaydirection_ts.designator_value as varchar), '(' || airport_heliport.runwaydirection_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.runwaydirection_ts.truebearing_value as varchar), '(' || airport_heliport.runwaydirection_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(airport_heliport.runwaydirection_ts.truebearingaccuracy_value as varchar), '(' || airport_heliport.runwaydirection_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(airport_heliport.runwaydirection_ts.magneticbearing_value as varchar), '(' || airport_heliport.runwaydirection_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(airport_heliport.runwaydirection_ts.patternvfr_value as varchar), '(' || airport_heliport.runwaydirection_ts.patternvfr_nilreason || ')') as patternvfr,
    coalesce(cast(airport_heliport.runwaydirection_ts.slopetdz_value as varchar), '(' || airport_heliport.runwaydirection_ts.slopetdz_nilreason || ')') as slopetdz,
    coalesce(cast(airport_heliport.runwaydirection_ts.approachmarkingtype_value as varchar), '(' || airport_heliport.runwaydirection_ts.approachmarkingtype_nilreason || ')') as approachmarkingtype,
    coalesce(cast(airport_heliport.runwaydirection_ts.approachmarkingcondition_value as varchar), '(' || airport_heliport.runwaydirection_ts.approachmarkingcondition_nilreason || ')') as approachmarkingcondition,
    coalesce(cast(airport_heliport.runwaydirection_ts.classlightingjar_value as varchar), '(' || airport_heliport.runwaydirection_ts.classlightingjar_nilreason || ')') as classlightingjar,
    coalesce(cast(airport_heliport.runwaydirection_ts.precisionapproachguidance_value as varchar), '(' || airport_heliport.runwaydirection_ts.precisionapproachguidance_nilreason || ')') as precisionapproachguidance,
    coalesce(cast(airport_heliport.runwaydirection_ts.elevationtdz_value as varchar) || ' ' || airport_heliport.runwaydirection_ts.elevationtdz_uom, '(' || airport_heliport.runwaydirection_ts.elevationtdz_nilreason || ')') as elevationtdz,
    coalesce(cast(airport_heliport.runwaydirection_ts.elevationtdzaccuracy_value as varchar) || ' ' || airport_heliport.runwaydirection_ts.elevationtdzaccuracy_uom, '(' || airport_heliport.runwaydirection_ts.elevationtdzaccuracy_nilreason || ')') as elevationtdzaccuracy,
    coalesce(cast(airport_heliport_runway_pt_njetnf.title as varchar), '(' || airport_heliport_runway_pt_njetnf.nilreason[1] || ')') AS usedrunway,
    airport_heliport_runway_pt_njetnf.href AS usedrunway_href,
    coalesce(cast(airport_heliport_runwayelement_pt_igfimj.title as varchar), '(' || airport_heliport_runwayelement_pt_igfimj.nilreason[1] || ')') AS startingelement,
    airport_heliport_runwayelement_pt_igfimj.href AS startingelement_href
from airport_heliport.runwaydirection 
inner join master_join mj2 on airport_heliport.runwaydirection.id = mj2.source_id
inner join airport_heliport.runwaydirection_tsp on mj2.target_id = airport_heliport.runwaydirection_tsp.id
inner join airport_heliport.runwaydirection_ts on airport_heliport.runwaydirection_tsp.runwaydirectiontimeslice_id = airport_heliport.runwaydirection_ts.id
left join master_join mj3 on airport_heliport.runwaydirection_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_njetnf on airport_heliport.runwaydirection_ts.usedrunway_id = airport_heliport_runway_pt_njetnf.id
left join airport_heliport.runwayelement_pt airport_heliport_runwayelement_pt_igfimj on airport_heliport.runwaydirection_ts.startingelement_id = airport_heliport_runwayelement_pt_igfimj.id
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.manoeuvringareaavailability.availability - master_join
where airport_heliport.runwaydirection.feature_status = 'APPROVED'
  and airport_heliport.runwaydirection_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaydirection.id,
    airport_heliport.runwaydirection_ts.id,
    airport_heliport.runwaydirection_tsp.id,
    airport_heliport.runwaydirection.identifier,
    airport_heliport.runwaydirection_ts.interpretation,
    airport_heliport.runwaydirection_ts.sequence_number,
    airport_heliport.runwaydirection_ts.correction_number,
    airport_heliport.runwaydirection_ts.valid_time_begin,
    airport_heliport.runwaydirection_ts.valid_time_end,
    airport_heliport.runwaydirection_ts.feature_lifetime_begin,
    airport_heliport.runwaydirection_ts.feature_lifetime_end,
    airport_heliport.runwaydirection_ts.designator_value,
    airport_heliport.runwaydirection_ts.designator_nilreason,
    airport_heliport.runwaydirection_ts.truebearing_value,
    airport_heliport.runwaydirection_ts.truebearing_nilreason,
    airport_heliport.runwaydirection_ts.truebearingaccuracy_value,
    airport_heliport.runwaydirection_ts.truebearingaccuracy_nilreason,
    airport_heliport.runwaydirection_ts.magneticbearing_value,
    airport_heliport.runwaydirection_ts.magneticbearing_nilreason,
    airport_heliport.runwaydirection_ts.patternvfr_value,
    airport_heliport.runwaydirection_ts.patternvfr_nilreason,
    airport_heliport.runwaydirection_ts.slopetdz_value,
    airport_heliport.runwaydirection_ts.slopetdz_nilreason,
    airport_heliport.runwaydirection_ts.approachmarkingtype_value,
    airport_heliport.runwaydirection_ts.approachmarkingtype_nilreason,
    airport_heliport.runwaydirection_ts.approachmarkingcondition_value,
    airport_heliport.runwaydirection_ts.approachmarkingcondition_nilreason,
    airport_heliport.runwaydirection_ts.classlightingjar_value,
    airport_heliport.runwaydirection_ts.classlightingjar_nilreason,
    airport_heliport.runwaydirection_ts.precisionapproachguidance_value,
    airport_heliport.runwaydirection_ts.precisionapproachguidance_nilreason,
    airport_heliport.runwaydirection_ts.elevationtdz_value,
    airport_heliport.runwaydirection_ts.elevationtdz_uom,
    airport_heliport.runwaydirection_ts.elevationtdz_nilreason,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_value,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_uom,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_nilreason,
    airport_heliport_runway_pt_njetnf.title,
    airport_heliport_runway_pt_njetnf.nilreason,
    airport_heliport_runway_pt_njetnf.href,
    airport_heliport_runwayelement_pt_igfimj.title,
    airport_heliport_runwayelement_pt_igfimj.nilreason,
    airport_heliport_runwayelement_pt_igfimj.href
order by runwaydirection.identifier, runwaydirection_ts.sequence_number, runwaydirection_ts.correction_number DESC;
create or replace view airport_heliport.runwaymarking_publisher_view as
select distinct on (runwaymarking.identifier,runwaymarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaymarking.id,
    airport_heliport.runwaymarking_ts.id as ts_id,
    airport_heliport.runwaymarking_tsp.id as tsp_id,
    airport_heliport.runwaymarking.identifier,
    airport_heliport.runwaymarking_ts.interpretation,
    airport_heliport.runwaymarking_ts.sequence_number,
    airport_heliport.runwaymarking_ts.correction_number,
    airport_heliport.runwaymarking_ts.valid_time_begin,
    airport_heliport.runwaymarking_ts.valid_time_end,
    airport_heliport.runwaymarking_ts.feature_lifetime_begin,
    airport_heliport.runwaymarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwaymarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.runwaymarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.runwaymarking_ts.condition_value as varchar), '(' || airport_heliport.runwaymarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.runwaymarking_ts.markinglocation_value as varchar), '(' || airport_heliport.runwaymarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_runway_pt_oiucpq.title as varchar), '(' || airport_heliport_runway_pt_oiucpq.nilreason[1] || ')') AS markedrunway,
    airport_heliport_runway_pt_oiucpq.href AS markedrunway_href
from airport_heliport.runwaymarking 
inner join master_join mj2 on airport_heliport.runwaymarking.id = mj2.source_id
inner join airport_heliport.runwaymarking_tsp on mj2.target_id = airport_heliport.runwaymarking_tsp.id
inner join airport_heliport.runwaymarking_ts on airport_heliport.runwaymarking_tsp.runwaymarkingtimeslice_id = airport_heliport.runwaymarking_ts.id
left join master_join mj3 on airport_heliport.runwaymarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_oiucpq on airport_heliport.runwaymarking_ts.markedrunway_id = airport_heliport_runway_pt_oiucpq.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwaymarking.feature_status = 'APPROVED'
  and airport_heliport.runwaymarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaymarking.id,
    airport_heliport.runwaymarking_ts.id,
    airport_heliport.runwaymarking_tsp.id,
    airport_heliport.runwaymarking.identifier,
    airport_heliport.runwaymarking_ts.interpretation,
    airport_heliport.runwaymarking_ts.sequence_number,
    airport_heliport.runwaymarking_ts.correction_number,
    airport_heliport.runwaymarking_ts.valid_time_begin,
    airport_heliport.runwaymarking_ts.valid_time_end,
    airport_heliport.runwaymarking_ts.feature_lifetime_begin,
    airport_heliport.runwaymarking_ts.feature_lifetime_end,
    airport_heliport.runwaymarking_ts.markingicaostandard_value,
    airport_heliport.runwaymarking_ts.markingicaostandard_nilreason,
    airport_heliport.runwaymarking_ts.condition_value,
    airport_heliport.runwaymarking_ts.condition_nilreason,
    airport_heliport.runwaymarking_ts.markinglocation_value,
    airport_heliport.runwaymarking_ts.markinglocation_nilreason,
    airport_heliport_runway_pt_oiucpq.title,
    airport_heliport_runway_pt_oiucpq.nilreason,
    airport_heliport_runway_pt_oiucpq.href
order by runwaymarking.identifier, runwaymarking_ts.sequence_number, runwaymarking_ts.correction_number DESC;
create or replace view airport_heliport.runwayprotectarea_publisher_view as
select distinct on (runwayprotectarea.identifier,runwayprotectarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayprotectarea.id,
    airport_heliport.runwayprotectarea_ts.id as ts_id,
    airport_heliport.runwayprotectarea_tsp.id as tsp_id,
    airport_heliport.runwayprotectarea.identifier,
    airport_heliport.runwayprotectarea_ts.interpretation,
    airport_heliport.runwayprotectarea_ts.sequence_number,
    airport_heliport.runwayprotectarea_ts.correction_number,
    airport_heliport.runwayprotectarea_ts.valid_time_begin,
    airport_heliport.runwayprotectarea_ts.valid_time_end,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.lighting_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.lighting_nilreason || ')') as lighting,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.obstaclefree_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.obstaclefree_nilreason || ')') as obstaclefree,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.type_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.status_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.width_value as varchar) || ' ' || airport_heliport.runwayprotectarea_ts.width_uom, '(' || airport_heliport.runwayprotectarea_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.length_value as varchar) || ' ' || airport_heliport.runwayprotectarea_ts.length_uom, '(' || airport_heliport.runwayprotectarea_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_hnyxbo.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_hnyxbo.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_hnyxbo.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_runwaydirection_pt_kcyqvc.title as varchar), '(' || airport_heliport_runwaydirection_pt_kcyqvc.nilreason[1] || ')') AS protectedrunwaydirection,
    airport_heliport_runwaydirection_pt_kcyqvc.href AS protectedrunwaydirection_href
from airport_heliport.runwayprotectarea 
inner join master_join mj2 on airport_heliport.runwayprotectarea.id = mj2.source_id
inner join airport_heliport.runwayprotectarea_tsp on mj2.target_id = airport_heliport.runwayprotectarea_tsp.id
inner join airport_heliport.runwayprotectarea_ts on airport_heliport.runwayprotectarea_tsp.runwayprotectareatimeslice_id = airport_heliport.runwayprotectarea_ts.id
left join master_join mj3 on airport_heliport.runwayprotectarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_hnyxbo on airport_heliport.runwayprotectarea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_hnyxbo.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_kcyqvc on airport_heliport.runwayprotectarea_ts.protectedrunwaydirection_id = airport_heliport_runwaydirection_pt_kcyqvc.id
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwayprotectarea.feature_status = 'APPROVED'
  and airport_heliport.runwayprotectarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayprotectarea.id,
    airport_heliport.runwayprotectarea_ts.id,
    airport_heliport.runwayprotectarea_tsp.id,
    airport_heliport.runwayprotectarea.identifier,
    airport_heliport.runwayprotectarea_ts.interpretation,
    airport_heliport.runwayprotectarea_ts.sequence_number,
    airport_heliport.runwayprotectarea_ts.correction_number,
    airport_heliport.runwayprotectarea_ts.valid_time_begin,
    airport_heliport.runwayprotectarea_ts.valid_time_end,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_end,
    airport_heliport.runwayprotectarea_ts.lighting_value,
    airport_heliport.runwayprotectarea_ts.lighting_nilreason,
    airport_heliport.runwayprotectarea_ts.obstaclefree_value,
    airport_heliport.runwayprotectarea_ts.obstaclefree_nilreason,
    airport_heliport.runwayprotectarea_ts.type_value,
    airport_heliport.runwayprotectarea_ts.type_nilreason,
    airport_heliport.runwayprotectarea_ts.status_value,
    airport_heliport.runwayprotectarea_ts.status_nilreason,
    airport_heliport.runwayprotectarea_ts.width_value,
    airport_heliport.runwayprotectarea_ts.width_uom,
    airport_heliport.runwayprotectarea_ts.width_nilreason,
    airport_heliport.runwayprotectarea_ts.length_value,
    airport_heliport.runwayprotectarea_ts.length_uom,
    airport_heliport.runwayprotectarea_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_pt_hnyxbo.title,
    airport_heliport_surfacecharacteristics_pt_hnyxbo.nilreason,
    airport_heliport_surfacecharacteristics_pt_hnyxbo.href,
    airport_heliport_runwaydirection_pt_kcyqvc.title,
    airport_heliport_runwaydirection_pt_kcyqvc.nilreason,
    airport_heliport_runwaydirection_pt_kcyqvc.href
order by runwayprotectarea.identifier, runwayprotectarea_ts.sequence_number, runwayprotectarea_ts.correction_number DESC;
create or replace view navaids_points.significantpointinairspace_publisher_view as
select distinct on (significantpointinairspace.identifier,significantpointinairspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.significantpointinairspace.id,
    navaids_points.significantpointinairspace_ts.id as ts_id,
    navaids_points.significantpointinairspace_tsp.id as tsp_id,
    navaids_points.significantpointinairspace.identifier,
    navaids_points.significantpointinairspace_ts.interpretation,
    navaids_points.significantpointinairspace_ts.sequence_number,
    navaids_points.significantpointinairspace_ts.correction_number,
    navaids_points.significantpointinairspace_ts.valid_time_begin,
    navaids_points.significantpointinairspace_ts.valid_time_end,
    navaids_points.significantpointinairspace_ts.feature_lifetime_begin,
    navaids_points.significantpointinairspace_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.significantpointinairspace_ts.type_value as varchar), '(' || navaids_points.significantpointinairspace_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.significantpointinairspace_ts.relativelocation_value as varchar), '(' || navaids_points.significantpointinairspace_ts.relativelocation_nilreason || ')') as relativelocation,
    coalesce(cast(airspace_airspace_pt_iwsypf.title as varchar), '(' || airspace_airspace_pt_iwsypf.nilreason[1] || ')') AS containingairspace,
    airspace_airspace_pt_iwsypf.href AS containingairspace_href,
    coalesce(cast(navaids_points_designatedpoint_pt_efusoy.title as varchar), '(' || navaids_points_designatedpoint_pt_efusoy.nilreason[1] || ')') AS locationfixdesignatedpoint,
    navaids_points_designatedpoint_pt_efusoy.href AS locationfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_uwpltt.title as varchar), '(' || navaids_points_navaid_pt_uwpltt.nilreason[1] || ')') AS locationnavaidsystem,
    navaids_points_navaid_pt_uwpltt.href AS locationnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_aopsbc.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_aopsbc.nilreason[1] || ')') AS locationaimingpoint,
    airport_heliport_touchdownliftoff_pt_aopsbc.href AS locationaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_bvfrof.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_bvfrof.nilreason[1] || ')') AS locationrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_bvfrof.href AS locationrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_adgnnc.title as varchar), '(' || airport_heliport_airportheliport_pt_adgnnc.nilreason[1] || ')') AS locationairportreferencepoint,
    airport_heliport_airportheliport_pt_adgnnc.href AS locationairportreferencepoint_href
from navaids_points.significantpointinairspace 
inner join master_join mj2 on navaids_points.significantpointinairspace.id = mj2.source_id
inner join navaids_points.significantpointinairspace_tsp on mj2.target_id = navaids_points.significantpointinairspace_tsp.id
inner join navaids_points.significantpointinairspace_ts on navaids_points.significantpointinairspace_tsp.significantpointinairspacetimeslice_id = navaids_points.significantpointinairspace_ts.id
left join master_join mj3 on navaids_points.significantpointinairspace_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airspace.airspace_pt airspace_airspace_pt_iwsypf on navaids_points.significantpointinairspace_ts.containingairspace_id = airspace_airspace_pt_iwsypf.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_efusoy on navaids_points.significantpointinairspace_ts.location_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_efusoy.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_uwpltt on navaids_points.significantpointinairspace_ts.location_navaidsystem_id = navaids_points_navaid_pt_uwpltt.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_aopsbc on navaids_points.significantpointinairspace_ts.location_aimingpoint_id = airport_heliport_touchdownliftoff_pt_aopsbc.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_bvfrof on navaids_points.significantpointinairspace_ts.location_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_bvfrof.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_adgnnc on navaids_points.significantpointinairspace_ts.location_airportreferencepoint_id = airport_heliport_airportheliport_pt_adgnnc.id
--snowflake one geometry.point.locationposition - PointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.significantpointinairspace.feature_status = 'APPROVED'
  and navaids_points.significantpointinairspace_ts.feature_status = 'APPROVED'
group by
    navaids_points.significantpointinairspace.id,
    navaids_points.significantpointinairspace_ts.id,
    navaids_points.significantpointinairspace_tsp.id,
    navaids_points.significantpointinairspace.identifier,
    navaids_points.significantpointinairspace_ts.interpretation,
    navaids_points.significantpointinairspace_ts.sequence_number,
    navaids_points.significantpointinairspace_ts.correction_number,
    navaids_points.significantpointinairspace_ts.valid_time_begin,
    navaids_points.significantpointinairspace_ts.valid_time_end,
    navaids_points.significantpointinairspace_ts.feature_lifetime_begin,
    navaids_points.significantpointinairspace_ts.feature_lifetime_end,
    navaids_points.significantpointinairspace_ts.type_value,
    navaids_points.significantpointinairspace_ts.type_nilreason,
    navaids_points.significantpointinairspace_ts.relativelocation_value,
    navaids_points.significantpointinairspace_ts.relativelocation_nilreason,
    airspace_airspace_pt_iwsypf.title,
    airspace_airspace_pt_iwsypf.nilreason,
    airspace_airspace_pt_iwsypf.href,
    navaids_points_designatedpoint_pt_efusoy.title,
    navaids_points_designatedpoint_pt_efusoy.nilreason,
    navaids_points_designatedpoint_pt_efusoy.href,
    navaids_points_navaid_pt_uwpltt.title,
    navaids_points_navaid_pt_uwpltt.nilreason,
    navaids_points_navaid_pt_uwpltt.href,
    airport_heliport_touchdownliftoff_pt_aopsbc.title,
    airport_heliport_touchdownliftoff_pt_aopsbc.nilreason,
    airport_heliport_touchdownliftoff_pt_aopsbc.href,
    airport_heliport_runwaycentrelinepoint_pt_bvfrof.title,
    airport_heliport_runwaycentrelinepoint_pt_bvfrof.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_bvfrof.href,
    airport_heliport_airportheliport_pt_adgnnc.title,
    airport_heliport_airportheliport_pt_adgnnc.nilreason,
    airport_heliport_airportheliport_pt_adgnnc.href
order by significantpointinairspace.identifier, significantpointinairspace_ts.sequence_number, significantpointinairspace_ts.correction_number DESC;
create or replace view shared.specialdate_publisher_view as
select distinct on (specialdate.identifier,specialdate_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.specialdate.id,
    shared.specialdate_ts.id as ts_id,
    shared.specialdate_tsp.id as tsp_id,
    shared.specialdate.identifier,
    shared.specialdate_ts.interpretation,
    shared.specialdate_ts.sequence_number,
    shared.specialdate_ts.correction_number,
    shared.specialdate_ts.valid_time_begin,
    shared.specialdate_ts.valid_time_end,
    shared.specialdate_ts.feature_lifetime_begin,
    shared.specialdate_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(shared.specialdate_ts.type_value as varchar), '(' || shared.specialdate_ts.type_nilreason || ')') as type,
    coalesce(cast(shared.specialdate_ts.dateday_value as varchar), '(' || shared.specialdate_ts.dateday_nilreason || ')') as dateday,
    coalesce(cast(shared.specialdate_ts.dateyear_value as varchar), '(' || shared.specialdate_ts.dateyear_nilreason || ')') as dateyear,
    coalesce(cast(shared.specialdate_ts.name_value as varchar), '(' || shared.specialdate_ts.name_nilreason || ')') as name
from shared.specialdate 
inner join master_join mj2 on shared.specialdate.id = mj2.source_id
inner join shared.specialdate_tsp on mj2.target_id = shared.specialdate_tsp.id
inner join shared.specialdate_ts on shared.specialdate_tsp.specialdatetimeslice_id = shared.specialdate_ts.id
left join master_join mj3 on shared.specialdate_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one .organisationauthority.authority - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where shared.specialdate.feature_status = 'APPROVED'
  and shared.specialdate_ts.feature_status = 'APPROVED'
group by
    shared.specialdate.id,
    shared.specialdate_ts.id,
    shared.specialdate_tsp.id,
    shared.specialdate.identifier,
    shared.specialdate_ts.interpretation,
    shared.specialdate_ts.sequence_number,
    shared.specialdate_ts.correction_number,
    shared.specialdate_ts.valid_time_begin,
    shared.specialdate_ts.valid_time_end,
    shared.specialdate_ts.feature_lifetime_begin,
    shared.specialdate_ts.feature_lifetime_end,
    shared.specialdate_ts.type_value,
    shared.specialdate_ts.type_nilreason,
    shared.specialdate_ts.dateday_value,
    shared.specialdate_ts.dateday_nilreason,
    shared.specialdate_ts.dateyear_value,
    shared.specialdate_ts.dateyear_nilreason,
    shared.specialdate_ts.name_value,
    shared.specialdate_ts.name_nilreason
order by specialdate.identifier, specialdate_ts.sequence_number, specialdate_ts.correction_number DESC;
create or replace view shared.standardlevelcolumn_publisher_view as
select distinct on (standardlevelcolumn.identifier,standardlevelcolumn_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardlevelcolumn.id,
    shared.standardlevelcolumn_ts.id as ts_id,
    shared.standardlevelcolumn_tsp.id as tsp_id,
    shared.standardlevelcolumn.identifier,
    shared.standardlevelcolumn_ts.interpretation,
    shared.standardlevelcolumn_ts.sequence_number,
    shared.standardlevelcolumn_ts.correction_number,
    shared.standardlevelcolumn_ts.valid_time_begin,
    shared.standardlevelcolumn_ts.valid_time_end,
    shared.standardlevelcolumn_ts.feature_lifetime_begin,
    shared.standardlevelcolumn_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(shared.standardlevelcolumn_ts.series_value as varchar), '(' || shared.standardlevelcolumn_ts.series_nilreason || ')') as series,
    coalesce(cast(shared.standardlevelcolumn_ts.separation_value as varchar), '(' || shared.standardlevelcolumn_ts.separation_nilreason || ')') as separation,
    coalesce(cast(shared_standardleveltable_pt_alflgx.title as varchar), '(' || shared_standardleveltable_pt_alflgx.nilreason[1] || ')') AS leveltable,
    shared_standardleveltable_pt_alflgx.href AS leveltable_href
from shared.standardlevelcolumn 
inner join master_join mj2 on shared.standardlevelcolumn.id = mj2.source_id
inner join shared.standardlevelcolumn_tsp on mj2.target_id = shared.standardlevelcolumn_tsp.id
inner join shared.standardlevelcolumn_ts on shared.standardlevelcolumn_tsp.standardlevelcolumntimeslice_id = shared.standardlevelcolumn_ts.id
left join master_join mj3 on shared.standardlevelcolumn_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join shared.standardleveltable_pt shared_standardleveltable_pt_alflgx on shared.standardlevelcolumn_ts.leveltable_id = shared_standardleveltable_pt_alflgx.id
--object many shared.standardlevel.level - master_join
--snowflake many notes.note.annotation - NotePropertyType
where shared.standardlevelcolumn.feature_status = 'APPROVED'
  and shared.standardlevelcolumn_ts.feature_status = 'APPROVED'
group by
    shared.standardlevelcolumn.id,
    shared.standardlevelcolumn_ts.id,
    shared.standardlevelcolumn_tsp.id,
    shared.standardlevelcolumn.identifier,
    shared.standardlevelcolumn_ts.interpretation,
    shared.standardlevelcolumn_ts.sequence_number,
    shared.standardlevelcolumn_ts.correction_number,
    shared.standardlevelcolumn_ts.valid_time_begin,
    shared.standardlevelcolumn_ts.valid_time_end,
    shared.standardlevelcolumn_ts.feature_lifetime_begin,
    shared.standardlevelcolumn_ts.feature_lifetime_end,
    shared.standardlevelcolumn_ts.series_value,
    shared.standardlevelcolumn_ts.series_nilreason,
    shared.standardlevelcolumn_ts.separation_value,
    shared.standardlevelcolumn_ts.separation_nilreason,
    shared_standardleveltable_pt_alflgx.title,
    shared_standardleveltable_pt_alflgx.nilreason,
    shared_standardleveltable_pt_alflgx.href
order by standardlevelcolumn.identifier, standardlevelcolumn_ts.sequence_number, standardlevelcolumn_ts.correction_number DESC;
create or replace view shared.standardlevelsector_publisher_view as
select distinct on (standardlevelsector.identifier,standardlevelsector_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardlevelsector.id,
    shared.standardlevelsector_ts.id as ts_id,
    shared.standardlevelsector_tsp.id as tsp_id,
    shared.standardlevelsector.identifier,
    shared.standardlevelsector_ts.interpretation,
    shared.standardlevelsector_ts.sequence_number,
    shared.standardlevelsector_ts.correction_number,
    shared.standardlevelsector_ts.valid_time_begin,
    shared.standardlevelsector_ts.valid_time_end,
    shared.standardlevelsector_ts.feature_lifetime_begin,
    shared.standardlevelsector_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(shared.standardlevelsector_ts.flightrule_value as varchar), '(' || shared.standardlevelsector_ts.flightrule_nilreason || ')') as flightrule,
    coalesce(cast(shared.standardlevelsector_ts.fromtrack_value as varchar), '(' || shared.standardlevelsector_ts.fromtrack_nilreason || ')') as fromtrack,
    coalesce(cast(shared.standardlevelsector_ts.totrack_value as varchar), '(' || shared.standardlevelsector_ts.totrack_nilreason || ')') as totrack,
    coalesce(cast(shared.standardlevelsector_ts.angletype_value as varchar), '(' || shared.standardlevelsector_ts.angletype_nilreason || ')') as angletype,
    coalesce(cast(shared_standardlevelcolumn_pt_jeekpz.title as varchar), '(' || shared_standardlevelcolumn_pt_jeekpz.nilreason[1] || ')') AS applicablelevelcolumn,
    shared_standardlevelcolumn_pt_jeekpz.href AS applicablelevelcolumn_href
from shared.standardlevelsector 
inner join master_join mj2 on shared.standardlevelsector.id = mj2.source_id
inner join shared.standardlevelsector_tsp on mj2.target_id = shared.standardlevelsector_tsp.id
inner join shared.standardlevelsector_ts on shared.standardlevelsector_tsp.standardlevelsectortimeslice_id = shared.standardlevelsector_ts.id
left join master_join mj3 on shared.standardlevelsector_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join shared.standardlevelcolumn_pt shared_standardlevelcolumn_pt_jeekpz on shared.standardlevelsector_ts.applicablelevelcolumn_id = shared_standardlevelcolumn_pt_jeekpz.id
--feature many airspace.airspace.applicableairspace - master_join
--snowflake many notes.note.annotation - NotePropertyType
where shared.standardlevelsector.feature_status = 'APPROVED'
  and shared.standardlevelsector_ts.feature_status = 'APPROVED'
group by
    shared.standardlevelsector.id,
    shared.standardlevelsector_ts.id,
    shared.standardlevelsector_tsp.id,
    shared.standardlevelsector.identifier,
    shared.standardlevelsector_ts.interpretation,
    shared.standardlevelsector_ts.sequence_number,
    shared.standardlevelsector_ts.correction_number,
    shared.standardlevelsector_ts.valid_time_begin,
    shared.standardlevelsector_ts.valid_time_end,
    shared.standardlevelsector_ts.feature_lifetime_begin,
    shared.standardlevelsector_ts.feature_lifetime_end,
    shared.standardlevelsector_ts.flightrule_value,
    shared.standardlevelsector_ts.flightrule_nilreason,
    shared.standardlevelsector_ts.fromtrack_value,
    shared.standardlevelsector_ts.fromtrack_nilreason,
    shared.standardlevelsector_ts.totrack_value,
    shared.standardlevelsector_ts.totrack_nilreason,
    shared.standardlevelsector_ts.angletype_value,
    shared.standardlevelsector_ts.angletype_nilreason,
    shared_standardlevelcolumn_pt_jeekpz.title,
    shared_standardlevelcolumn_pt_jeekpz.nilreason,
    shared_standardlevelcolumn_pt_jeekpz.href
order by standardlevelsector.identifier, standardlevelsector_ts.sequence_number, standardlevelsector_ts.correction_number DESC;
create or replace view airport_heliport.standmarking_publisher_view as
select distinct on (standmarking.identifier,standmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.standmarking.id,
    airport_heliport.standmarking_ts.id as ts_id,
    airport_heliport.standmarking_tsp.id as tsp_id,
    airport_heliport.standmarking.identifier,
    airport_heliport.standmarking_ts.interpretation,
    airport_heliport.standmarking_ts.sequence_number,
    airport_heliport.standmarking_ts.correction_number,
    airport_heliport.standmarking_ts.valid_time_begin,
    airport_heliport.standmarking_ts.valid_time_end,
    airport_heliport.standmarking_ts.feature_lifetime_begin,
    airport_heliport.standmarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.standmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.standmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.standmarking_ts.condition_value as varchar), '(' || airport_heliport.standmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_aircraftstand_pt_ggwtmj.title as varchar), '(' || airport_heliport_aircraftstand_pt_ggwtmj.nilreason[1] || ')') AS markedstand,
    airport_heliport_aircraftstand_pt_ggwtmj.href AS markedstand_href
from airport_heliport.standmarking 
inner join master_join mj2 on airport_heliport.standmarking.id = mj2.source_id
inner join airport_heliport.standmarking_tsp on mj2.target_id = airport_heliport.standmarking_tsp.id
inner join airport_heliport.standmarking_ts on airport_heliport.standmarking_tsp.standmarkingtimeslice_id = airport_heliport.standmarking_ts.id
left join master_join mj3 on airport_heliport.standmarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_ggwtmj on airport_heliport.standmarking_ts.markedstand_id = airport_heliport_aircraftstand_pt_ggwtmj.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.standmarking.feature_status = 'APPROVED'
  and airport_heliport.standmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.standmarking.id,
    airport_heliport.standmarking_ts.id,
    airport_heliport.standmarking_tsp.id,
    airport_heliport.standmarking.identifier,
    airport_heliport.standmarking_ts.interpretation,
    airport_heliport.standmarking_ts.sequence_number,
    airport_heliport.standmarking_ts.correction_number,
    airport_heliport.standmarking_ts.valid_time_begin,
    airport_heliport.standmarking_ts.valid_time_end,
    airport_heliport.standmarking_ts.feature_lifetime_begin,
    airport_heliport.standmarking_ts.feature_lifetime_end,
    airport_heliport.standmarking_ts.markingicaostandard_value,
    airport_heliport.standmarking_ts.markingicaostandard_nilreason,
    airport_heliport.standmarking_ts.condition_value,
    airport_heliport.standmarking_ts.condition_nilreason,
    airport_heliport_aircraftstand_pt_ggwtmj.title,
    airport_heliport_aircraftstand_pt_ggwtmj.nilreason,
    airport_heliport_aircraftstand_pt_ggwtmj.href
order by standmarking.identifier, standmarking_ts.sequence_number, standmarking_ts.correction_number DESC;
create or replace view airport_heliport.surveycontrolpoint_publisher_view as
select distinct on (surveycontrolpoint.identifier,surveycontrolpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.surveycontrolpoint.id,
    airport_heliport.surveycontrolpoint_ts.id as ts_id,
    airport_heliport.surveycontrolpoint_tsp.id as tsp_id,
    airport_heliport.surveycontrolpoint.identifier,
    airport_heliport.surveycontrolpoint_ts.interpretation,
    airport_heliport.surveycontrolpoint_ts.sequence_number,
    airport_heliport.surveycontrolpoint_ts.correction_number,
    airport_heliport.surveycontrolpoint_ts.valid_time_begin,
    airport_heliport.surveycontrolpoint_ts.valid_time_end,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_begin,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.surveycontrolpoint_ts.designator_value as varchar), '(' || airport_heliport.surveycontrolpoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport_airportheliport_pt_ffyqxu.title as varchar), '(' || airport_heliport_airportheliport_pt_ffyqxu.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ffyqxu.href AS associatedairportheliport_href
from airport_heliport.surveycontrolpoint 
inner join master_join mj2 on airport_heliport.surveycontrolpoint.id = mj2.source_id
inner join airport_heliport.surveycontrolpoint_tsp on mj2.target_id = airport_heliport.surveycontrolpoint_tsp.id
inner join airport_heliport.surveycontrolpoint_ts on airport_heliport.surveycontrolpoint_tsp.surveycontrolpointtimeslice_id = airport_heliport.surveycontrolpoint_ts.id
left join master_join mj3 on airport_heliport.surveycontrolpoint_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ffyqxu on airport_heliport.surveycontrolpoint_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ffyqxu.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.surveycontrolpoint.feature_status = 'APPROVED'
  and airport_heliport.surveycontrolpoint_ts.feature_status = 'APPROVED'
group by
    airport_heliport.surveycontrolpoint.id,
    airport_heliport.surveycontrolpoint_ts.id,
    airport_heliport.surveycontrolpoint_tsp.id,
    airport_heliport.surveycontrolpoint.identifier,
    airport_heliport.surveycontrolpoint_ts.interpretation,
    airport_heliport.surveycontrolpoint_ts.sequence_number,
    airport_heliport.surveycontrolpoint_ts.correction_number,
    airport_heliport.surveycontrolpoint_ts.valid_time_begin,
    airport_heliport.surveycontrolpoint_ts.valid_time_end,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_begin,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_end,
    airport_heliport.surveycontrolpoint_ts.designator_value,
    airport_heliport.surveycontrolpoint_ts.designator_nilreason,
    airport_heliport_airportheliport_pt_ffyqxu.title,
    airport_heliport_airportheliport_pt_ffyqxu.nilreason,
    airport_heliport_airportheliport_pt_ffyqxu.href
order by surveycontrolpoint.identifier, surveycontrolpoint_ts.sequence_number, surveycontrolpoint_ts.correction_number DESC;
create or replace view airport_heliport.taxiholdingpositionmarking_publisher_view as
select distinct on (taxiholdingpositionmarking.identifier,taxiholdingpositionmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingpositionmarking.id,
    airport_heliport.taxiholdingpositionmarking_ts.id as ts_id,
    airport_heliport.taxiholdingpositionmarking_tsp.id as tsp_id,
    airport_heliport.taxiholdingpositionmarking.identifier,
    airport_heliport.taxiholdingpositionmarking_ts.interpretation,
    airport_heliport.taxiholdingpositionmarking_ts.sequence_number,
    airport_heliport.taxiholdingpositionmarking_ts.correction_number,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_end,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.taxiholdingpositionmarking_ts.condition_value as varchar), '(' || airport_heliport.taxiholdingpositionmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_taxiholdingposition_pt_wcvhay.title as varchar), '(' || airport_heliport_taxiholdingposition_pt_wcvhay.nilreason[1] || ')') AS markedtaxihold,
    airport_heliport_taxiholdingposition_pt_wcvhay.href AS markedtaxihold_href
from airport_heliport.taxiholdingpositionmarking 
inner join master_join mj2 on airport_heliport.taxiholdingpositionmarking.id = mj2.source_id
inner join airport_heliport.taxiholdingpositionmarking_tsp on mj2.target_id = airport_heliport.taxiholdingpositionmarking_tsp.id
inner join airport_heliport.taxiholdingpositionmarking_ts on airport_heliport.taxiholdingpositionmarking_tsp.taxiholdingpositionmarkingtimeslice_id = airport_heliport.taxiholdingpositionmarking_ts.id
left join master_join mj3 on airport_heliport.taxiholdingpositionmarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.taxiholdingposition_pt airport_heliport_taxiholdingposition_pt_wcvhay on airport_heliport.taxiholdingpositionmarking_ts.markedtaxihold_id = airport_heliport_taxiholdingposition_pt_wcvhay.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.taxiholdingpositionmarking.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingpositionmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingpositionmarking.id,
    airport_heliport.taxiholdingpositionmarking_ts.id,
    airport_heliport.taxiholdingpositionmarking_tsp.id,
    airport_heliport.taxiholdingpositionmarking.identifier,
    airport_heliport.taxiholdingpositionmarking_ts.interpretation,
    airport_heliport.taxiholdingpositionmarking_ts.sequence_number,
    airport_heliport.taxiholdingpositionmarking_ts.correction_number,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_end,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_end,
    airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_value,
    airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_nilreason,
    airport_heliport.taxiholdingpositionmarking_ts.condition_value,
    airport_heliport.taxiholdingpositionmarking_ts.condition_nilreason,
    airport_heliport_taxiholdingposition_pt_wcvhay.title,
    airport_heliport_taxiholdingposition_pt_wcvhay.nilreason,
    airport_heliport_taxiholdingposition_pt_wcvhay.href
order by taxiholdingpositionmarking.identifier, taxiholdingpositionmarking_ts.sequence_number, taxiholdingpositionmarking_ts.correction_number DESC;
create or replace view airport_heliport.taxiwaymarking_publisher_view as
select distinct on (taxiwaymarking.identifier,taxiwaymarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwaymarking.id,
    airport_heliport.taxiwaymarking_ts.id as ts_id,
    airport_heliport.taxiwaymarking_tsp.id as tsp_id,
    airport_heliport.taxiwaymarking.identifier,
    airport_heliport.taxiwaymarking_ts.interpretation,
    airport_heliport.taxiwaymarking_ts.sequence_number,
    airport_heliport.taxiwaymarking_ts.correction_number,
    airport_heliport.taxiwaymarking_ts.valid_time_begin,
    airport_heliport.taxiwaymarking_ts.valid_time_end,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_begin,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.condition_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.markinglocation_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_taxiway_pt_zjaacq.title as varchar), '(' || airport_heliport_taxiway_pt_zjaacq.nilreason[1] || ')') AS markedtaxiway,
    airport_heliport_taxiway_pt_zjaacq.href AS markedtaxiway_href,
    coalesce(cast(airport_heliport_taxiwayelement_pt_wydfwd.title as varchar), '(' || airport_heliport_taxiwayelement_pt_wydfwd.nilreason[1] || ')') AS markedelement,
    airport_heliport_taxiwayelement_pt_wydfwd.href AS markedelement_href
from airport_heliport.taxiwaymarking 
inner join master_join mj2 on airport_heliport.taxiwaymarking.id = mj2.source_id
inner join airport_heliport.taxiwaymarking_tsp on mj2.target_id = airport_heliport.taxiwaymarking_tsp.id
inner join airport_heliport.taxiwaymarking_ts on airport_heliport.taxiwaymarking_tsp.taxiwaymarkingtimeslice_id = airport_heliport.taxiwaymarking_ts.id
left join master_join mj3 on airport_heliport.taxiwaymarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_zjaacq on airport_heliport.taxiwaymarking_ts.markedtaxiway_id = airport_heliport_taxiway_pt_zjaacq.id
left join airport_heliport.taxiwayelement_pt airport_heliport_taxiwayelement_pt_wydfwd on airport_heliport.taxiwaymarking_ts.markedelement_id = airport_heliport_taxiwayelement_pt_wydfwd.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.taxiwaymarking.feature_status = 'APPROVED'
  and airport_heliport.taxiwaymarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwaymarking.id,
    airport_heliport.taxiwaymarking_ts.id,
    airport_heliport.taxiwaymarking_tsp.id,
    airport_heliport.taxiwaymarking.identifier,
    airport_heliport.taxiwaymarking_ts.interpretation,
    airport_heliport.taxiwaymarking_ts.sequence_number,
    airport_heliport.taxiwaymarking_ts.correction_number,
    airport_heliport.taxiwaymarking_ts.valid_time_begin,
    airport_heliport.taxiwaymarking_ts.valid_time_end,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_begin,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_end,
    airport_heliport.taxiwaymarking_ts.markingicaostandard_value,
    airport_heliport.taxiwaymarking_ts.markingicaostandard_nilreason,
    airport_heliport.taxiwaymarking_ts.condition_value,
    airport_heliport.taxiwaymarking_ts.condition_nilreason,
    airport_heliport.taxiwaymarking_ts.markinglocation_value,
    airport_heliport.taxiwaymarking_ts.markinglocation_nilreason,
    airport_heliport_taxiway_pt_zjaacq.title,
    airport_heliport_taxiway_pt_zjaacq.nilreason,
    airport_heliport_taxiway_pt_zjaacq.href,
    airport_heliport_taxiwayelement_pt_wydfwd.title,
    airport_heliport_taxiwayelement_pt_wydfwd.nilreason,
    airport_heliport_taxiwayelement_pt_wydfwd.href
order by taxiwaymarking.identifier, taxiwaymarking_ts.sequence_number, taxiwaymarking_ts.correction_number DESC;
create or replace view airport_heliport.touchdownliftoffmarking_publisher_view as
select distinct on (touchdownliftoffmarking.identifier,touchdownliftoffmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoffmarking.id,
    airport_heliport.touchdownliftoffmarking_ts.id as ts_id,
    airport_heliport.touchdownliftoffmarking_tsp.id as tsp_id,
    airport_heliport.touchdownliftoffmarking.identifier,
    airport_heliport.touchdownliftoffmarking_ts.interpretation,
    airport_heliport.touchdownliftoffmarking_ts.sequence_number,
    airport_heliport.touchdownliftoffmarking_ts.correction_number,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_begin,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_end,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.condition_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.markinglocation_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_rwhvdx.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_rwhvdx.nilreason[1] || ')') AS markedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_rwhvdx.href AS markedtouchdownliftoff_href
from airport_heliport.touchdownliftoffmarking 
inner join master_join mj2 on airport_heliport.touchdownliftoffmarking.id = mj2.source_id
inner join airport_heliport.touchdownliftoffmarking_tsp on mj2.target_id = airport_heliport.touchdownliftoffmarking_tsp.id
inner join airport_heliport.touchdownliftoffmarking_ts on airport_heliport.touchdownliftoffmarking_tsp.touchdownliftoffmarkingtimeslice_id = airport_heliport.touchdownliftoffmarking_ts.id
left join master_join mj3 on airport_heliport.touchdownliftoffmarking_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_rwhvdx on airport_heliport.touchdownliftoffmarking_ts.markedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_rwhvdx.id
--object many airport_heliport.markingelement.element - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.touchdownliftoffmarking.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoffmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoffmarking.id,
    airport_heliport.touchdownliftoffmarking_ts.id,
    airport_heliport.touchdownliftoffmarking_tsp.id,
    airport_heliport.touchdownliftoffmarking.identifier,
    airport_heliport.touchdownliftoffmarking_ts.interpretation,
    airport_heliport.touchdownliftoffmarking_ts.sequence_number,
    airport_heliport.touchdownliftoffmarking_ts.correction_number,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_begin,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_end,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_value,
    airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_nilreason,
    airport_heliport.touchdownliftoffmarking_ts.condition_value,
    airport_heliport.touchdownliftoffmarking_ts.condition_nilreason,
    airport_heliport.touchdownliftoffmarking_ts.markinglocation_value,
    airport_heliport.touchdownliftoffmarking_ts.markinglocation_nilreason,
    airport_heliport_touchdownliftoff_pt_rwhvdx.title,
    airport_heliport_touchdownliftoff_pt_rwhvdx.nilreason,
    airport_heliport_touchdownliftoff_pt_rwhvdx.href
order by touchdownliftoffmarking.identifier, touchdownliftoffmarking_ts.sequence_number, touchdownliftoffmarking_ts.correction_number DESC;
create or replace view airport_heliport.touchdownliftoffsafearea_publisher_view as
select distinct on (touchdownliftoffsafearea.identifier,touchdownliftoffsafearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoffsafearea.id,
    airport_heliport.touchdownliftoffsafearea_ts.id as ts_id,
    airport_heliport.touchdownliftoffsafearea_tsp.id as tsp_id,
    airport_heliport.touchdownliftoffsafearea.identifier,
    airport_heliport.touchdownliftoffsafearea_ts.interpretation,
    airport_heliport.touchdownliftoffsafearea_ts.sequence_number,
    airport_heliport.touchdownliftoffsafearea_ts.correction_number,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_begin,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_end,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.lighting_value as varchar), '(' || airport_heliport.touchdownliftoffsafearea_ts.lighting_nilreason || ')') as lighting,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_value as varchar), '(' || airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_nilreason || ')') as obstaclefree,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.width_value as varchar) || ' ' || airport_heliport.touchdownliftoffsafearea_ts.width_uom, '(' || airport_heliport.touchdownliftoffsafearea_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.length_value as varchar) || ' ' || airport_heliport.touchdownliftoffsafearea_ts.length_uom, '(' || airport_heliport.touchdownliftoffsafearea_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_dmxqpa.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_dmxqpa.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_dmxqpa.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_yoeakb.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_yoeakb.nilreason[1] || ')') AS protectedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_yoeakb.href AS protectedtouchdownliftoff_href
from airport_heliport.touchdownliftoffsafearea 
inner join master_join mj2 on airport_heliport.touchdownliftoffsafearea.id = mj2.source_id
inner join airport_heliport.touchdownliftoffsafearea_tsp on mj2.target_id = airport_heliport.touchdownliftoffsafearea_tsp.id
inner join airport_heliport.touchdownliftoffsafearea_ts on airport_heliport.touchdownliftoffsafearea_tsp.touchdownliftoffsafeareatimeslice_id = airport_heliport.touchdownliftoffsafearea_ts.id
left join master_join mj3 on airport_heliport.touchdownliftoffsafearea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_dmxqpa on airport_heliport.touchdownliftoffsafearea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_dmxqpa.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_yoeakb on airport_heliport.touchdownliftoffsafearea_ts.protectedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_yoeakb.id
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.touchdownliftoffsafearea.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoffsafearea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoffsafearea.id,
    airport_heliport.touchdownliftoffsafearea_ts.id,
    airport_heliport.touchdownliftoffsafearea_tsp.id,
    airport_heliport.touchdownliftoffsafearea.identifier,
    airport_heliport.touchdownliftoffsafearea_ts.interpretation,
    airport_heliport.touchdownliftoffsafearea_ts.sequence_number,
    airport_heliport.touchdownliftoffsafearea_ts.correction_number,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_begin,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_end,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoffsafearea_ts.lighting_value,
    airport_heliport.touchdownliftoffsafearea_ts.lighting_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_value,
    airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.width_value,
    airport_heliport.touchdownliftoffsafearea_ts.width_uom,
    airport_heliport.touchdownliftoffsafearea_ts.width_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.length_value,
    airport_heliport.touchdownliftoffsafearea_ts.length_uom,
    airport_heliport.touchdownliftoffsafearea_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_pt_dmxqpa.title,
    airport_heliport_surfacecharacteristics_pt_dmxqpa.nilreason,
    airport_heliport_surfacecharacteristics_pt_dmxqpa.href,
    airport_heliport_touchdownliftoff_pt_yoeakb.title,
    airport_heliport_touchdownliftoff_pt_yoeakb.nilreason,
    airport_heliport_touchdownliftoff_pt_yoeakb.href
order by touchdownliftoffsafearea.identifier, touchdownliftoffsafearea_ts.sequence_number, touchdownliftoffsafearea_ts.correction_number DESC;
create or replace view airport_heliport.aircraftstandcontamination_view as
select
    airport_heliport.aircraftstandcontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS aircraftstandcontamination_annotation,
    airport_heliport.aircraftstandcontamination_pt.nilreason AS aircraftstandcontamination_annotation,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictionestimation_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictiondevice_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.aircraftstandcontamination.obscuredlights_value as varchar), '(' || airport_heliport.aircraftstandcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.aircraftstandcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.aircraftstandcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.aircraftstandcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.aircraftstandcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.aircraftstandcontamination.proportion_value as varchar), '(' || airport_heliport.aircraftstandcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.aircraftstandcontamination.depth_value as varchar) || ' ' || airport_heliport.aircraftstandcontamination.depth_uom, '(' || airport_heliport.aircraftstandcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_view_ezsgiz.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_lekokm.id) AS layer
from airport_heliport.aircraftstandcontamination_pt 
inner join airport_heliport.aircraftstandcontamination on airport_heliport.aircraftstandcontamination_pt.aircraftstandcontamination_id = airport_heliport.aircraftstandcontamination.id
left join master_join mj1 on airport_heliport.aircraftstandcontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_cdrtvr on airport_heliport.aircraftstandcontamination.id = master_join_cdrtvr.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_ezsgiz on master_join_cdrtvr.target_id = airport_heliport_ridge_view_ezsgiz.id
left join master_join master_join_mhyoge on airport_heliport.aircraftstandcontamination.id = master_join_mhyoge.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_lekokm on master_join_mhyoge.target_id = airport_heliport_surfacecontaminationlayer_view_lekokm.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.aircraftstandcontamination_pt.id,
    airport_heliport.aircraftstandcontamination_pt.nilreason,
    airport_heliport.aircraftstandcontamination.frictioncoefficient_value,
    airport_heliport.aircraftstandcontamination.frictioncoefficient_nilreason,
    airport_heliport.aircraftstandcontamination.frictionestimation_value,
    airport_heliport.aircraftstandcontamination.frictionestimation_nilreason,
    airport_heliport.aircraftstandcontamination.frictiondevice_value,
    airport_heliport.aircraftstandcontamination.frictiondevice_nilreason,
    airport_heliport.aircraftstandcontamination.obscuredlights_value,
    airport_heliport.aircraftstandcontamination.obscuredlights_nilreason,
    airport_heliport.aircraftstandcontamination.furtherclearancetime_value,
    airport_heliport.aircraftstandcontamination.furtherclearancetime_nilreason,
    airport_heliport.aircraftstandcontamination.furthertotalclearance_value,
    airport_heliport.aircraftstandcontamination.furthertotalclearance_nilreason,
    airport_heliport.aircraftstandcontamination.proportion_value,
    airport_heliport.aircraftstandcontamination.proportion_nilreason,
    airport_heliport.aircraftstandcontamination.depth_value,
    airport_heliport.aircraftstandcontamination.depth_uom,
    airport_heliport.aircraftstandcontamination.depth_nilreason;
create or replace view airport_heliport.airportheliportcontamination_view as
select
    airport_heliport.airportheliportcontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS airportheliportcontamination_annotation,
    airport_heliport.airportheliportcontamination_pt.nilreason AS airportheliportcontamination_annotation,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictionestimation_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictiondevice_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.airportheliportcontamination.obscuredlights_value as varchar), '(' || airport_heliport.airportheliportcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.airportheliportcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.airportheliportcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.airportheliportcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.airportheliportcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.airportheliportcontamination.proportion_value as varchar), '(' || airport_heliport.airportheliportcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.airportheliportcontamination.depth_value as varchar) || ' ' || airport_heliport.airportheliportcontamination.depth_uom, '(' || airport_heliport.airportheliportcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_view_ahygyv.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_otrbni.id) AS layer
from airport_heliport.airportheliportcontamination_pt 
inner join airport_heliport.airportheliportcontamination on airport_heliport.airportheliportcontamination_pt.airportheliportcontamination_id = airport_heliport.airportheliportcontamination.id
left join master_join mj1 on airport_heliport.airportheliportcontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_rjduvi on airport_heliport.airportheliportcontamination.id = master_join_rjduvi.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_ahygyv on master_join_rjduvi.target_id = airport_heliport_ridge_view_ahygyv.id
left join master_join master_join_efncnu on airport_heliport.airportheliportcontamination.id = master_join_efncnu.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_otrbni on master_join_efncnu.target_id = airport_heliport_surfacecontaminationlayer_view_otrbni.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.airportheliportcontamination_pt.id,
    airport_heliport.airportheliportcontamination_pt.nilreason,
    airport_heliport.airportheliportcontamination.frictioncoefficient_value,
    airport_heliport.airportheliportcontamination.frictioncoefficient_nilreason,
    airport_heliport.airportheliportcontamination.frictionestimation_value,
    airport_heliport.airportheliportcontamination.frictionestimation_nilreason,
    airport_heliport.airportheliportcontamination.frictiondevice_value,
    airport_heliport.airportheliportcontamination.frictiondevice_nilreason,
    airport_heliport.airportheliportcontamination.obscuredlights_value,
    airport_heliport.airportheliportcontamination.obscuredlights_nilreason,
    airport_heliport.airportheliportcontamination.furtherclearancetime_value,
    airport_heliport.airportheliportcontamination.furtherclearancetime_nilreason,
    airport_heliport.airportheliportcontamination.furthertotalclearance_value,
    airport_heliport.airportheliportcontamination.furthertotalclearance_nilreason,
    airport_heliport.airportheliportcontamination.proportion_value,
    airport_heliport.airportheliportcontamination.proportion_nilreason,
    airport_heliport.airportheliportcontamination.depth_value,
    airport_heliport.airportheliportcontamination.depth_uom,
    airport_heliport.airportheliportcontamination.depth_nilreason;
create or replace view airport_heliport.airportheliportusage_view as
select
    airport_heliport.airportheliportusage_pt.id,
    jsonb_agg(notes.note_view.note) AS airportheliportusage_annotation,
    airport_heliport.airportheliportusage_pt.nilreason AS airportheliportusage_annotation,
    coalesce(cast(airport_heliport.airportheliportusage.type_value as varchar), '(' || airport_heliport.airportheliportusage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.airportheliportusage.operation_value as varchar), '(' || airport_heliport.airportheliportusage.operation_nilreason || ')') as operation,
    coalesce(cast(airport_heliport.airportheliportusage.priorpermission_value as varchar) || ' ' || airport_heliport.airportheliportusage.priorpermission_uom, '(' || airport_heliport.airportheliportusage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_lvpnmp.id AS selection
from airport_heliport.airportheliportusage_pt 
inner join airport_heliport.airportheliportusage on airport_heliport.airportheliportusage_pt.airportheliportusage_id = airport_heliport.airportheliportusage.id
left join master_join mj1 on airport_heliport.airportheliportusage.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_lvpnmp on airport_heliport.airportheliportusage.selection_id = airport_heliport_conditioncombination_pt_lvpnmp.id
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.airportheliportusage_pt.id,
    airport_heliport.airportheliportusage_pt.nilreason,
    airport_heliport.airportheliportusage.type_value,
    airport_heliport.airportheliportusage.type_nilreason,
    airport_heliport.airportheliportusage.operation_value,
    airport_heliport.airportheliportusage.operation_nilreason,
    airport_heliport.airportheliportusage.priorpermission_value,
    airport_heliport.airportheliportusage.priorpermission_uom,
    airport_heliport.airportheliportusage.priorpermission_nilreason;
create or replace view airport_heliport.altimetersourcestatus_view as
select
    airport_heliport.altimetersourcestatus_pt.id,
    jsonb_agg(notes.note_view.note) AS altimetersourcestatus_annotation,
    airport_heliport.altimetersourcestatus_pt.nilreason AS altimetersourcestatus_annotation,
    coalesce(cast(airport_heliport.altimetersourcestatus.operationalstatus_value as varchar), '(' || airport_heliport.altimetersourcestatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(shared_timesheet_view_nilvbu.id) AS timeinterval
from airport_heliport.altimetersourcestatus_pt 
inner join airport_heliport.altimetersourcestatus on airport_heliport.altimetersourcestatus_pt.altimetersourcestatus_id = airport_heliport.altimetersourcestatus.id
left join master_join mj1 on airport_heliport.altimetersourcestatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_aecygh on airport_heliport.altimetersourcestatus.id = master_join_aecygh.source_id
left join shared.timesheet_view shared_timesheet_view_nilvbu on master_join_aecygh.target_id = shared_timesheet_view_nilvbu.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    airport_heliport.altimetersourcestatus_pt.id,
    airport_heliport.altimetersourcestatus_pt.nilreason,
    airport_heliport.altimetersourcestatus.operationalstatus_value,
    airport_heliport.altimetersourcestatus.operationalstatus_nilreason;
create or replace view airport_heliport.apronareausage_view as
select
    airport_heliport.apronareausage_pt.id,
    jsonb_agg(notes.note_view.note) AS apronareausage_annotation,
    airport_heliport.apronareausage_pt.nilreason AS apronareausage_annotation,
    coalesce(cast(airport_heliport.apronareausage.type_value as varchar), '(' || airport_heliport.apronareausage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.apronareausage.priorpermission_value as varchar) || ' ' || airport_heliport.apronareausage.priorpermission_uom, '(' || airport_heliport.apronareausage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_lnmesa.id AS selection
from airport_heliport.apronareausage_pt 
inner join airport_heliport.apronareausage on airport_heliport.apronareausage_pt.apronareausage_id = airport_heliport.apronareausage.id
left join master_join mj1 on airport_heliport.apronareausage.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_lnmesa on airport_heliport.apronareausage.selection_id = airport_heliport_conditioncombination_pt_lnmesa.id
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.apronareausage_pt.id,
    airport_heliport.apronareausage_pt.nilreason,
    airport_heliport.apronareausage.type_value,
    airport_heliport.apronareausage.type_nilreason,
    airport_heliport.apronareausage.priorpermission_value,
    airport_heliport.apronareausage.priorpermission_uom,
    airport_heliport.apronareausage.priorpermission_nilreason;
create or replace view airport_heliport.aproncontamination_view as
select
    airport_heliport.aproncontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS aproncontamination_annotation,
    airport_heliport.aproncontamination_pt.nilreason AS aproncontamination_annotation,
    coalesce(cast(airport_heliport.aproncontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.aproncontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.aproncontamination.frictionestimation_value as varchar), '(' || airport_heliport.aproncontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.aproncontamination.frictiondevice_value as varchar), '(' || airport_heliport.aproncontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.aproncontamination.obscuredlights_value as varchar), '(' || airport_heliport.aproncontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.aproncontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.aproncontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.aproncontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.aproncontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.aproncontamination.proportion_value as varchar), '(' || airport_heliport.aproncontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.aproncontamination.depth_value as varchar) || ' ' || airport_heliport.aproncontamination.depth_uom, '(' || airport_heliport.aproncontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_view_afrvfw.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_jflbrg.id) AS layer
from airport_heliport.aproncontamination_pt 
inner join airport_heliport.aproncontamination on airport_heliport.aproncontamination_pt.aproncontamination_id = airport_heliport.aproncontamination.id
left join master_join mj1 on airport_heliport.aproncontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_ffvvkd on airport_heliport.aproncontamination.id = master_join_ffvvkd.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_afrvfw on master_join_ffvvkd.target_id = airport_heliport_ridge_view_afrvfw.id
left join master_join master_join_fonvog on airport_heliport.aproncontamination.id = master_join_fonvog.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_jflbrg on master_join_fonvog.target_id = airport_heliport_surfacecontaminationlayer_view_jflbrg.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.aproncontamination_pt.id,
    airport_heliport.aproncontamination_pt.nilreason,
    airport_heliport.aproncontamination.frictioncoefficient_value,
    airport_heliport.aproncontamination.frictioncoefficient_nilreason,
    airport_heliport.aproncontamination.frictionestimation_value,
    airport_heliport.aproncontamination.frictionestimation_nilreason,
    airport_heliport.aproncontamination.frictiondevice_value,
    airport_heliport.aproncontamination.frictiondevice_nilreason,
    airport_heliport.aproncontamination.obscuredlights_value,
    airport_heliport.aproncontamination.obscuredlights_nilreason,
    airport_heliport.aproncontamination.furtherclearancetime_value,
    airport_heliport.aproncontamination.furtherclearancetime_nilreason,
    airport_heliport.aproncontamination.furthertotalclearance_value,
    airport_heliport.aproncontamination.furthertotalclearance_nilreason,
    airport_heliport.aproncontamination.proportion_value,
    airport_heliport.aproncontamination.proportion_nilreason,
    airport_heliport.aproncontamination.depth_value,
    airport_heliport.aproncontamination.depth_uom,
    airport_heliport.aproncontamination.depth_nilreason;
create or replace view routes.flightrestrictionroute_view as
select
    routes.flightrestrictionroute_pt.id,
    jsonb_agg(notes.note_view.note) AS flightrestrictionroute_annotation,
    routes.flightrestrictionroute_pt.nilreason AS flightrestrictionroute_annotation,
    coalesce(cast(routes.flightrestrictionroute.priorpermission_value as varchar), '(' || routes.flightrestrictionroute.priorpermission_nilreason || ')') as priorpermission,
    jsonb_agg(routes_flightroutingelement_view_xbxtkd.id) AS routeelement
from routes.flightrestrictionroute_pt 
inner join routes.flightrestrictionroute on routes.flightrestrictionroute_pt.flightrestrictionroute_id = routes.flightrestrictionroute.id
left join master_join mj1 on routes.flightrestrictionroute.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_ypcbtm on routes.flightrestrictionroute.id = master_join_ypcbtm.source_id
left join routes.flightroutingelement_view routes_flightroutingelement_view_xbxtkd on master_join_ypcbtm.target_id = routes_flightroutingelement_view_xbxtkd.id
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.flightrestrictionroute_pt.id,
    routes.flightrestrictionroute_pt.nilreason,
    routes.flightrestrictionroute.priorpermission_value,
    routes.flightrestrictionroute.priorpermission_nilreason;
create or replace view airport_heliport.groundlightingavailability_view as
select
    airport_heliport.groundlightingavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS groundlightingavailability_annotation,
    airport_heliport.groundlightingavailability_pt.nilreason AS groundlightingavailability_annotation,
    coalesce(cast(airport_heliport.groundlightingavailability.operationalstatus_value as varchar), '(' || airport_heliport.groundlightingavailability.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(shared_timesheet_view_ayjlgf.id) AS timeinterval
from airport_heliport.groundlightingavailability_pt 
inner join airport_heliport.groundlightingavailability on airport_heliport.groundlightingavailability_pt.groundlightingavailability_id = airport_heliport.groundlightingavailability.id
left join master_join mj1 on airport_heliport.groundlightingavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_qqhxsv on airport_heliport.groundlightingavailability.id = master_join_qqhxsv.source_id
left join shared.timesheet_view shared_timesheet_view_ayjlgf on master_join_qqhxsv.target_id = shared_timesheet_view_ayjlgf.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    airport_heliport.groundlightingavailability_pt.id,
    airport_heliport.groundlightingavailability_pt.nilreason,
    airport_heliport.groundlightingavailability.operationalstatus_value,
    airport_heliport.groundlightingavailability.operationalstatus_nilreason;
create or replace view procedure.landingtakeoffareacollection_view as
select
    procedure.landingtakeoffareacollection_pt.id,
    jsonb_agg(notes.note_view.note) AS landingtakeoffareacollection_annotation,
    procedure.landingtakeoffareacollection_pt.nilreason AS landingtakeoffareacollection_annotation,
    jsonb_agg(airport_heliport_runwaydirection_pt_lxbmgl.id) AS runway,
    jsonb_agg(airport_heliport_touchdownliftoff_pt_zmfgun.id) AS tlof
from procedure.landingtakeoffareacollection_pt 
inner join procedure.landingtakeoffareacollection on procedure.landingtakeoffareacollection_pt.landingtakeoffareacollection_id = procedure.landingtakeoffareacollection.id
left join master_join mj1 on procedure.landingtakeoffareacollection.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_jjybcd on procedure.landingtakeoffareacollection.id = master_join_jjybcd.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_lxbmgl on master_join_jjybcd.target_id = airport_heliport_runwaydirection_pt_lxbmgl.id
left join master_join master_join_hnwlqf on procedure.landingtakeoffareacollection.id = master_join_hnwlqf.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_zmfgun on master_join_hnwlqf.target_id = airport_heliport_touchdownliftoff_pt_zmfgun.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.landingtakeoffareacollection_pt.id,
    procedure.landingtakeoffareacollection_pt.nilreason;
create or replace view shared.lightelement_view as
select
    shared.lightelement_pt.id,
    jsonb_agg(notes.note_view.note) AS lightelement_annotation,
    shared.lightelement_pt.nilreason AS lightelement_annotation,
    coalesce(cast(shared.lightelement.colour_value as varchar), '(' || shared.lightelement.colour_nilreason || ')') as colour,
    coalesce(cast(shared.lightelement.intensitylevel_value as varchar), '(' || shared.lightelement.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(shared.lightelement.type_value as varchar), '(' || shared.lightelement.type_nilreason || ')') as type,
    coalesce(cast(shared.lightelement.intensity_value as varchar) || ' ' || shared.lightelement.intensity_uom, '(' || shared.lightelement.intensity_nilreason || ')') as intensity,
    jsonb_agg(shared_lightelementstatus_view_evvvob.id) AS availability
from shared.lightelement_pt 
inner join shared.lightelement on shared.lightelement_pt.lightelement_id = shared.lightelement.id
left join master_join mj1 on shared.lightelement.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
left join master_join master_join_jsbpfl on shared.lightelement.id = master_join_jsbpfl.source_id
left join shared.lightelementstatus_view shared_lightelementstatus_view_evvvob on master_join_jsbpfl.target_id = shared_lightelementstatus_view_evvvob.id
group by
    shared.lightelement_pt.id,
    shared.lightelement_pt.nilreason,
    shared.lightelement.colour_value,
    shared.lightelement.colour_nilreason,
    shared.lightelement.intensitylevel_value,
    shared.lightelement.intensitylevel_nilreason,
    shared.lightelement.type_value,
    shared.lightelement.type_nilreason,
    shared.lightelement.intensity_value,
    shared.lightelement.intensity_uom,
    shared.lightelement.intensity_nilreason;
create or replace view shared.lightelementstatus_view as
select
    shared.lightelementstatus_pt.id,
    jsonb_agg(notes.note_view.note) AS lightelementstatus_annotation,
    shared.lightelementstatus_pt.nilreason AS lightelementstatus_annotation,
    coalesce(cast(shared.lightelementstatus.status_value as varchar), '(' || shared.lightelementstatus.status_nilreason || ')') as status,
    jsonb_agg(shared_timesheet_view_igcirm.id) AS timeinterval
from shared.lightelementstatus_pt 
inner join shared.lightelementstatus on shared.lightelementstatus_pt.lightelementstatus_id = shared.lightelementstatus.id
left join master_join mj1 on shared.lightelementstatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_wliqag on shared.lightelementstatus.id = master_join_wliqag.source_id
left join shared.timesheet_view shared_timesheet_view_igcirm on master_join_wliqag.target_id = shared_timesheet_view_igcirm.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    shared.lightelementstatus_pt.id,
    shared.lightelementstatus_pt.nilreason,
    shared.lightelementstatus.status_value,
    shared.lightelementstatus.status_nilreason;
create or replace view airport_heliport.manoeuvringareausage_view as
select
    airport_heliport.manoeuvringareausage_pt.id,
    jsonb_agg(notes.note_view.note) AS manoeuvringareausage_annotation,
    airport_heliport.manoeuvringareausage_pt.nilreason AS manoeuvringareausage_annotation,
    coalesce(cast(airport_heliport.manoeuvringareausage.type_value as varchar), '(' || airport_heliport.manoeuvringareausage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.manoeuvringareausage.operation_value as varchar), '(' || airport_heliport.manoeuvringareausage.operation_nilreason || ')') as operation,
    coalesce(cast(airport_heliport.manoeuvringareausage.priorpermission_value as varchar) || ' ' || airport_heliport.manoeuvringareausage.priorpermission_uom, '(' || airport_heliport.manoeuvringareausage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_nglxal.id AS selection
from airport_heliport.manoeuvringareausage_pt 
inner join airport_heliport.manoeuvringareausage on airport_heliport.manoeuvringareausage_pt.manoeuvringareausage_id = airport_heliport.manoeuvringareausage.id
left join master_join mj1 on airport_heliport.manoeuvringareausage.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_nglxal on airport_heliport.manoeuvringareausage.selection_id = airport_heliport_conditioncombination_pt_nglxal.id
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.manoeuvringareausage_pt.id,
    airport_heliport.manoeuvringareausage_pt.nilreason,
    airport_heliport.manoeuvringareausage.type_value,
    airport_heliport.manoeuvringareausage.type_nilreason,
    airport_heliport.manoeuvringareausage.operation_value,
    airport_heliport.manoeuvringareausage.operation_nilreason,
    airport_heliport.manoeuvringareausage.priorpermission_value,
    airport_heliport.manoeuvringareausage.priorpermission_uom,
    airport_heliport.manoeuvringareausage.priorpermission_nilreason;
create or replace view navaids_points.navaidequipmentmonitoring_view as
select
    navaids_points.navaidequipmentmonitoring_pt.id,
    jsonb_agg(notes.note_view.note) AS navaidequipmentmonitoring_annotation,
    navaids_points.navaidequipmentmonitoring_pt.nilreason AS navaidequipmentmonitoring_annotation,
    coalesce(cast(navaids_points.navaidequipmentmonitoring.monitored_value as varchar), '(' || navaids_points.navaidequipmentmonitoring.monitored_nilreason || ')') as monitored,
    jsonb_agg(shared_timesheet_view_qlgwcp.id) AS timeinterval
from navaids_points.navaidequipmentmonitoring_pt 
inner join navaids_points.navaidequipmentmonitoring on navaids_points.navaidequipmentmonitoring_pt.navaidequipmentmonitoring_id = navaids_points.navaidequipmentmonitoring.id
left join master_join mj1 on navaids_points.navaidequipmentmonitoring.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_atbden on navaids_points.navaidequipmentmonitoring.id = master_join_atbden.source_id
left join shared.timesheet_view shared_timesheet_view_qlgwcp on master_join_atbden.target_id = shared_timesheet_view_qlgwcp.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    navaids_points.navaidequipmentmonitoring_pt.id,
    navaids_points.navaidequipmentmonitoring_pt.nilreason,
    navaids_points.navaidequipmentmonitoring.monitored_value,
    navaids_points.navaidequipmentmonitoring.monitored_nilreason;
create or replace view navaids_points.navaidoperationalstatus_view as
select
    navaids_points.navaidoperationalstatus_pt.id,
    jsonb_agg(notes.note_view.note) AS navaidoperationalstatus_annotation,
    navaids_points.navaidoperationalstatus_pt.nilreason AS navaidoperationalstatus_annotation,
    coalesce(cast(navaids_points.navaidoperationalstatus.operationalstatus_value as varchar), '(' || navaids_points.navaidoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(navaids_points.navaidoperationalstatus.signaltype_value as varchar), '(' || navaids_points.navaidoperationalstatus.signaltype_nilreason || ')') as signaltype,
    jsonb_agg(shared_timesheet_view_lsugsn.id) AS timeinterval
from navaids_points.navaidoperationalstatus_pt 
inner join navaids_points.navaidoperationalstatus on navaids_points.navaidoperationalstatus_pt.navaidoperationalstatus_id = navaids_points.navaidoperationalstatus.id
left join master_join mj1 on navaids_points.navaidoperationalstatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_znddrh on navaids_points.navaidoperationalstatus.id = master_join_znddrh.source_id
left join shared.timesheet_view shared_timesheet_view_lsugsn on master_join_znddrh.target_id = shared_timesheet_view_lsugsn.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    navaids_points.navaidoperationalstatus_pt.id,
    navaids_points.navaidoperationalstatus_pt.nilreason,
    navaids_points.navaidoperationalstatus.operationalstatus_value,
    navaids_points.navaidoperationalstatus.operationalstatus_nilreason,
    navaids_points.navaidoperationalstatus.signaltype_value,
    navaids_points.navaidoperationalstatus.signaltype_nilreason;
create or replace view shared.onlinecontact_view as
select
    shared.onlinecontact_pt.id,
    jsonb_agg(notes.note_view.note) AS onlinecontact_annotation,
    shared.onlinecontact_pt.nilreason AS onlinecontact_annotation,
    coalesce(cast(shared.onlinecontact.network_value as varchar), '(' || shared.onlinecontact.network_nilreason || ')') as network,
    coalesce(cast(shared.onlinecontact.linkage_value as varchar), '(' || shared.onlinecontact.linkage_nilreason || ')') as linkage,
    coalesce(cast(shared.onlinecontact.protocol_value as varchar), '(' || shared.onlinecontact.protocol_nilreason || ')') as protocol,
    coalesce(cast(shared.onlinecontact.email_value as varchar), '(' || shared.onlinecontact.email_nilreason || ')') as email,
    jsonb_agg(shared_timesheet_view_cvkeex.id) AS timeinterval
from shared.onlinecontact_pt 
inner join shared.onlinecontact on shared.onlinecontact_pt.onlinecontact_id = shared.onlinecontact.id
left join master_join mj1 on shared.onlinecontact.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_pnmgvj on shared.onlinecontact.id = master_join_pnmgvj.source_id
left join shared.timesheet_view shared_timesheet_view_cvkeex on master_join_pnmgvj.target_id = shared_timesheet_view_cvkeex.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    shared.onlinecontact_pt.id,
    shared.onlinecontact_pt.nilreason,
    shared.onlinecontact.network_value,
    shared.onlinecontact.network_nilreason,
    shared.onlinecontact.linkage_value,
    shared.onlinecontact.linkage_nilreason,
    shared.onlinecontact.protocol_value,
    shared.onlinecontact.protocol_nilreason,
    shared.onlinecontact.email_value,
    shared.onlinecontact.email_nilreason;
create or replace view shared.postaladdress_view as
select
    shared.postaladdress_pt.id,
    jsonb_agg(notes.note_view.note) AS postaladdress_annotation,
    shared.postaladdress_pt.nilreason AS postaladdress_annotation,
    coalesce(cast(shared.postaladdress.deliverypoint_value as varchar), '(' || shared.postaladdress.deliverypoint_nilreason || ')') as deliverypoint,
    coalesce(cast(shared.postaladdress.city_value as varchar), '(' || shared.postaladdress.city_nilreason || ')') as city,
    coalesce(cast(shared.postaladdress.administrativearea_value as varchar), '(' || shared.postaladdress.administrativearea_nilreason || ')') as administrativearea,
    coalesce(cast(shared.postaladdress.postalcode_value as varchar), '(' || shared.postaladdress.postalcode_nilreason || ')') as postalcode,
    coalesce(cast(shared.postaladdress.country_value as varchar), '(' || shared.postaladdress.country_nilreason || ')') as country,
    jsonb_agg(shared_timesheet_view_fursgy.id) AS timeinterval
from shared.postaladdress_pt 
inner join shared.postaladdress on shared.postaladdress_pt.postaladdress_id = shared.postaladdress.id
left join master_join mj1 on shared.postaladdress.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_nxokdg on shared.postaladdress.id = master_join_nxokdg.source_id
left join shared.timesheet_view shared_timesheet_view_fursgy on master_join_nxokdg.target_id = shared_timesheet_view_fursgy.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    shared.postaladdress_pt.id,
    shared.postaladdress_pt.nilreason,
    shared.postaladdress.deliverypoint_value,
    shared.postaladdress.deliverypoint_nilreason,
    shared.postaladdress.city_value,
    shared.postaladdress.city_nilreason,
    shared.postaladdress.administrativearea_value,
    shared.postaladdress.administrativearea_nilreason,
    shared.postaladdress.postalcode_value,
    shared.postaladdress.postalcode_nilreason,
    shared.postaladdress.country_value,
    shared.postaladdress.country_nilreason;
create or replace view procedure.procedureavailability_view as
select
    procedure.procedureavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS procedureavailability_annotation,
    procedure.procedureavailability_pt.nilreason AS procedureavailability_annotation,
    coalesce(cast(procedure.procedureavailability.status_value as varchar), '(' || procedure.procedureavailability.status_nilreason || ')') as status,
    jsonb_agg(shared_timesheet_view_irkkay.id) AS timeinterval
from procedure.procedureavailability_pt 
inner join procedure.procedureavailability on procedure.procedureavailability_pt.procedureavailability_id = procedure.procedureavailability.id
left join master_join mj1 on procedure.procedureavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_fgxise on procedure.procedureavailability.id = master_join_fgxise.source_id
left join shared.timesheet_view shared_timesheet_view_irkkay on master_join_fgxise.target_id = shared_timesheet_view_irkkay.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    procedure.procedureavailability_pt.id,
    procedure.procedureavailability_pt.nilreason,
    procedure.procedureavailability.status_value,
    procedure.procedureavailability.status_nilreason;
create or replace view service.radiocommunicationoperationalstatus_view as
select
    service.radiocommunicationoperationalstatus_pt.id,
    jsonb_agg(notes.note_view.note) AS radiocommunicationoperationalstatus_annotation,
    service.radiocommunicationoperationalstatus_pt.nilreason AS radiocommunicationoperationalstatus_annotation,
    coalesce(cast(service.radiocommunicationoperationalstatus.operationalstatus_value as varchar), '(' || service.radiocommunicationoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(shared_timesheet_view_uyhvsc.id) AS timeinterval
from service.radiocommunicationoperationalstatus_pt 
inner join service.radiocommunicationoperationalstatus on service.radiocommunicationoperationalstatus_pt.radiocommunicationoperationalstatus_id = service.radiocommunicationoperationalstatus.id
left join master_join mj1 on service.radiocommunicationoperationalstatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_tsbmsh on service.radiocommunicationoperationalstatus.id = master_join_tsbmsh.source_id
left join shared.timesheet_view shared_timesheet_view_uyhvsc on master_join_tsbmsh.target_id = shared_timesheet_view_uyhvsc.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    service.radiocommunicationoperationalstatus_pt.id,
    service.radiocommunicationoperationalstatus_pt.nilreason,
    service.radiocommunicationoperationalstatus.operationalstatus_value,
    service.radiocommunicationoperationalstatus.operationalstatus_nilreason;
create or replace view airport_heliport.runwaycontamination_view as
select
    airport_heliport.runwaycontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS runwaycontamination_annotation,
    airport_heliport.runwaycontamination_pt.nilreason AS runwaycontamination_annotation,
    coalesce(cast(airport_heliport.runwaycontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.runwaycontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.runwaycontamination.frictionestimation_value as varchar), '(' || airport_heliport.runwaycontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.runwaycontamination.frictiondevice_value as varchar), '(' || airport_heliport.runwaycontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.runwaycontamination.obscuredlights_value as varchar), '(' || airport_heliport.runwaycontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.runwaycontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.runwaycontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.runwaycontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.runwaycontamination.proportion_value as varchar), '(' || airport_heliport.runwaycontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.runwaycontamination.clearedside_value as varchar), '(' || airport_heliport.runwaycontamination.clearedside_nilreason || ')') as clearedside,
    coalesce(cast(airport_heliport.runwaycontamination.obscuredlightsside_value as varchar), '(' || airport_heliport.runwaycontamination.obscuredlightsside_nilreason || ')') as obscuredlightsside,
    coalesce(cast(airport_heliport.runwaycontamination.taxiwayavailable_value as varchar), '(' || airport_heliport.runwaycontamination.taxiwayavailable_nilreason || ')') as taxiwayavailable,
    coalesce(cast(airport_heliport.runwaycontamination.apronavailable_value as varchar), '(' || airport_heliport.runwaycontamination.apronavailable_nilreason || ')') as apronavailable,
    coalesce(cast(airport_heliport.runwaycontamination.depth_value as varchar) || ' ' || airport_heliport.runwaycontamination.depth_uom, '(' || airport_heliport.runwaycontamination.depth_nilreason || ')') as depth,
    coalesce(cast(airport_heliport.runwaycontamination.clearedlength_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedlength_uom, '(' || airport_heliport.runwaycontamination.clearedlength_nilreason || ')') as clearedlength,
    coalesce(cast(airport_heliport.runwaycontamination.clearedwidth_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedwidth_uom, '(' || airport_heliport.runwaycontamination.clearedwidth_nilreason || ')') as clearedwidth,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancelength_value as varchar) || ' ' || airport_heliport.runwaycontamination.furtherclearancelength_uom, '(' || airport_heliport.runwaycontamination.furtherclearancelength_nilreason || ')') as furtherclearancelength,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancewidth_value as varchar) || ' ' || airport_heliport.runwaycontamination.furtherclearancewidth_uom, '(' || airport_heliport.runwaycontamination.furtherclearancewidth_nilreason || ')') as furtherclearancewidth,
    coalesce(cast(airport_heliport.runwaycontamination.clearedlengthbegin_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedlengthbegin_uom, '(' || airport_heliport.runwaycontamination.clearedlengthbegin_nilreason || ')') as clearedlengthbegin,
    jsonb_agg(airport_heliport_ridge_view_nkiyvg.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_ppidmn.id) AS layer
from airport_heliport.runwaycontamination_pt 
inner join airport_heliport.runwaycontamination on airport_heliport.runwaycontamination_pt.runwaycontamination_id = airport_heliport.runwaycontamination.id
left join master_join mj1 on airport_heliport.runwaycontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_edraet on airport_heliport.runwaycontamination.id = master_join_edraet.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_nkiyvg on master_join_edraet.target_id = airport_heliport_ridge_view_nkiyvg.id
left join master_join master_join_qnekab on airport_heliport.runwaycontamination.id = master_join_qnekab.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_ppidmn on master_join_qnekab.target_id = airport_heliport_surfacecontaminationlayer_view_ppidmn.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.runwaycontamination_pt.id,
    airport_heliport.runwaycontamination_pt.nilreason,
    airport_heliport.runwaycontamination.frictioncoefficient_value,
    airport_heliport.runwaycontamination.frictioncoefficient_nilreason,
    airport_heliport.runwaycontamination.frictionestimation_value,
    airport_heliport.runwaycontamination.frictionestimation_nilreason,
    airport_heliport.runwaycontamination.frictiondevice_value,
    airport_heliport.runwaycontamination.frictiondevice_nilreason,
    airport_heliport.runwaycontamination.obscuredlights_value,
    airport_heliport.runwaycontamination.obscuredlights_nilreason,
    airport_heliport.runwaycontamination.furtherclearancetime_value,
    airport_heliport.runwaycontamination.furtherclearancetime_nilreason,
    airport_heliport.runwaycontamination.furthertotalclearance_value,
    airport_heliport.runwaycontamination.furthertotalclearance_nilreason,
    airport_heliport.runwaycontamination.proportion_value,
    airport_heliport.runwaycontamination.proportion_nilreason,
    airport_heliport.runwaycontamination.clearedside_value,
    airport_heliport.runwaycontamination.clearedside_nilreason,
    airport_heliport.runwaycontamination.obscuredlightsside_value,
    airport_heliport.runwaycontamination.obscuredlightsside_nilreason,
    airport_heliport.runwaycontamination.taxiwayavailable_value,
    airport_heliport.runwaycontamination.taxiwayavailable_nilreason,
    airport_heliport.runwaycontamination.apronavailable_value,
    airport_heliport.runwaycontamination.apronavailable_nilreason,
    airport_heliport.runwaycontamination.depth_value,
    airport_heliport.runwaycontamination.depth_uom,
    airport_heliport.runwaycontamination.depth_nilreason,
    airport_heliport.runwaycontamination.clearedlength_value,
    airport_heliport.runwaycontamination.clearedlength_uom,
    airport_heliport.runwaycontamination.clearedlength_nilreason,
    airport_heliport.runwaycontamination.clearedwidth_value,
    airport_heliport.runwaycontamination.clearedwidth_uom,
    airport_heliport.runwaycontamination.clearedwidth_nilreason,
    airport_heliport.runwaycontamination.furtherclearancelength_value,
    airport_heliport.runwaycontamination.furtherclearancelength_uom,
    airport_heliport.runwaycontamination.furtherclearancelength_nilreason,
    airport_heliport.runwaycontamination.furtherclearancewidth_value,
    airport_heliport.runwaycontamination.furtherclearancewidth_uom,
    airport_heliport.runwaycontamination.furtherclearancewidth_nilreason,
    airport_heliport.runwaycontamination.clearedlengthbegin_value,
    airport_heliport.runwaycontamination.clearedlengthbegin_uom,
    airport_heliport.runwaycontamination.clearedlengthbegin_nilreason;
create or replace view airport_heliport.runwaydeclareddistancevalue_view as
select
    airport_heliport.runwaydeclareddistancevalue_pt.id,
    jsonb_agg(notes.note_view.note) AS runwaydeclareddistancevalue_annotation,
    airport_heliport.runwaydeclareddistancevalue_pt.nilreason AS runwaydeclareddistancevalue_annotation,
    coalesce(cast(airport_heliport.runwaydeclareddistancevalue.distance_value as varchar) || ' ' || airport_heliport.runwaydeclareddistancevalue.distance_uom, '(' || airport_heliport.runwaydeclareddistancevalue.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_value as varchar) || ' ' || airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_uom, '(' || airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_nilreason || ')') as distanceaccuracy,
    jsonb_agg(shared_timesheet_view_nrzfwp.id) AS timeinterval
from airport_heliport.runwaydeclareddistancevalue_pt 
inner join airport_heliport.runwaydeclareddistancevalue on airport_heliport.runwaydeclareddistancevalue_pt.runwaydeclareddistancevalue_id = airport_heliport.runwaydeclareddistancevalue.id
left join master_join mj1 on airport_heliport.runwaydeclareddistancevalue.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_rmhyzg on airport_heliport.runwaydeclareddistancevalue.id = master_join_rmhyzg.source_id
left join shared.timesheet_view shared_timesheet_view_nrzfwp on master_join_rmhyzg.target_id = shared_timesheet_view_nrzfwp.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    airport_heliport.runwaydeclareddistancevalue_pt.id,
    airport_heliport.runwaydeclareddistancevalue_pt.nilreason,
    airport_heliport.runwaydeclareddistancevalue.distance_value,
    airport_heliport.runwaydeclareddistancevalue.distance_uom,
    airport_heliport.runwaydeclareddistancevalue.distance_nilreason,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_value,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_uom,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_nilreason;
create or replace view airport_heliport.runwaysectioncontamination_view as
select
    airport_heliport.runwaysectioncontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS runwaysectioncontamination_annotation,
    airport_heliport.runwaysectioncontamination_pt.nilreason AS runwaysectioncontamination_annotation,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictionestimation_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictiondevice_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.runwaysectioncontamination.obscuredlights_value as varchar), '(' || airport_heliport.runwaysectioncontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.runwaysectioncontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.runwaysectioncontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.runwaysectioncontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.runwaysectioncontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.runwaysectioncontamination.proportion_value as varchar), '(' || airport_heliport.runwaysectioncontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.runwaysectioncontamination.section_value as varchar), '(' || airport_heliport.runwaysectioncontamination.section_nilreason || ')') as section,
    coalesce(cast(airport_heliport.runwaysectioncontamination.depth_value as varchar) || ' ' || airport_heliport.runwaysectioncontamination.depth_uom, '(' || airport_heliport.runwaysectioncontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_view_hqkbcz.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_lzxspl.id) AS layer
from airport_heliport.runwaysectioncontamination_pt 
inner join airport_heliport.runwaysectioncontamination on airport_heliport.runwaysectioncontamination_pt.runwaysectioncontamination_id = airport_heliport.runwaysectioncontamination.id
left join master_join mj1 on airport_heliport.runwaysectioncontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_dxfavc on airport_heliport.runwaysectioncontamination.id = master_join_dxfavc.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_hqkbcz on master_join_dxfavc.target_id = airport_heliport_ridge_view_hqkbcz.id
left join master_join master_join_retcqq on airport_heliport.runwaysectioncontamination.id = master_join_retcqq.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_lzxspl on master_join_retcqq.target_id = airport_heliport_surfacecontaminationlayer_view_lzxspl.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.runwaysectioncontamination_pt.id,
    airport_heliport.runwaysectioncontamination_pt.nilreason,
    airport_heliport.runwaysectioncontamination.frictioncoefficient_value,
    airport_heliport.runwaysectioncontamination.frictioncoefficient_nilreason,
    airport_heliport.runwaysectioncontamination.frictionestimation_value,
    airport_heliport.runwaysectioncontamination.frictionestimation_nilreason,
    airport_heliport.runwaysectioncontamination.frictiondevice_value,
    airport_heliport.runwaysectioncontamination.frictiondevice_nilreason,
    airport_heliport.runwaysectioncontamination.obscuredlights_value,
    airport_heliport.runwaysectioncontamination.obscuredlights_nilreason,
    airport_heliport.runwaysectioncontamination.furtherclearancetime_value,
    airport_heliport.runwaysectioncontamination.furtherclearancetime_nilreason,
    airport_heliport.runwaysectioncontamination.furthertotalclearance_value,
    airport_heliport.runwaysectioncontamination.furthertotalclearance_nilreason,
    airport_heliport.runwaysectioncontamination.proportion_value,
    airport_heliport.runwaysectioncontamination.proportion_nilreason,
    airport_heliport.runwaysectioncontamination.section_value,
    airport_heliport.runwaysectioncontamination.section_nilreason,
    airport_heliport.runwaysectioncontamination.depth_value,
    airport_heliport.runwaysectioncontamination.depth_uom,
    airport_heliport.runwaysectioncontamination.depth_nilreason;
create or replace view service.serviceoperationalstatus_view as
select
    service.serviceoperationalstatus_pt.id,
    jsonb_agg(notes.note_view.note) AS serviceoperationalstatus_annotation,
    service.serviceoperationalstatus_pt.nilreason AS serviceoperationalstatus_annotation,
    coalesce(cast(service.serviceoperationalstatus.operationalstatus_value as varchar), '(' || service.serviceoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(shared_timesheet_view_ogkahz.id) AS timeinterval
from service.serviceoperationalstatus_pt 
inner join service.serviceoperationalstatus on service.serviceoperationalstatus_pt.serviceoperationalstatus_id = service.serviceoperationalstatus.id
left join master_join mj1 on service.serviceoperationalstatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_jrtmlw on service.serviceoperationalstatus.id = master_join_jrtmlw.source_id
left join shared.timesheet_view shared_timesheet_view_ogkahz on master_join_jrtmlw.target_id = shared_timesheet_view_ogkahz.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    service.serviceoperationalstatus_pt.id,
    service.serviceoperationalstatus_pt.nilreason,
    service.serviceoperationalstatus.operationalstatus_value,
    service.serviceoperationalstatus.operationalstatus_nilreason;
create or replace view navaids_points.specialnavigationstationstatus_view as
select
    navaids_points.specialnavigationstationstatus_pt.id,
    jsonb_agg(notes.note_view.note) AS specialnavigationstationstatus_annotation,
    navaids_points.specialnavigationstationstatus_pt.nilreason AS specialnavigationstationstatus_annotation,
    coalesce(cast(navaids_points.specialnavigationstationstatus.operationalstatus_value as varchar), '(' || navaids_points.specialnavigationstationstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(shared_timesheet_view_pedmlg.id) AS timeinterval
from navaids_points.specialnavigationstationstatus_pt 
inner join navaids_points.specialnavigationstationstatus on navaids_points.specialnavigationstationstatus_pt.specialnavigationstationstatus_id = navaids_points.specialnavigationstationstatus.id
left join master_join mj1 on navaids_points.specialnavigationstationstatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_mkjgxs on navaids_points.specialnavigationstationstatus.id = master_join_mkjgxs.source_id
left join shared.timesheet_view shared_timesheet_view_pedmlg on master_join_mkjgxs.target_id = shared_timesheet_view_pedmlg.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    navaids_points.specialnavigationstationstatus_pt.id,
    navaids_points.specialnavigationstationstatus_pt.nilreason,
    navaids_points.specialnavigationstationstatus.operationalstatus_value,
    navaids_points.specialnavigationstationstatus.operationalstatus_nilreason;
create or replace view airport_heliport.taxiwaycontamination_view as
select
    airport_heliport.taxiwaycontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS taxiwaycontamination_annotation,
    airport_heliport.taxiwaycontamination_pt.nilreason AS taxiwaycontamination_annotation,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictionestimation_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictiondevice_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.taxiwaycontamination.obscuredlights_value as varchar), '(' || airport_heliport.taxiwaycontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.taxiwaycontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.taxiwaycontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.taxiwaycontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.taxiwaycontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.taxiwaycontamination.proportion_value as varchar), '(' || airport_heliport.taxiwaycontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.taxiwaycontamination.depth_value as varchar) || ' ' || airport_heliport.taxiwaycontamination.depth_uom, '(' || airport_heliport.taxiwaycontamination.depth_nilreason || ')') as depth,
    coalesce(cast(airport_heliport.taxiwaycontamination.clearedwidth_value as varchar) || ' ' || airport_heliport.taxiwaycontamination.clearedwidth_uom, '(' || airport_heliport.taxiwaycontamination.clearedwidth_nilreason || ')') as clearedwidth,
    jsonb_agg(airport_heliport_ridge_view_hqlecn.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_dpjyjk.id) AS layer
from airport_heliport.taxiwaycontamination_pt 
inner join airport_heliport.taxiwaycontamination on airport_heliport.taxiwaycontamination_pt.taxiwaycontamination_id = airport_heliport.taxiwaycontamination.id
left join master_join mj1 on airport_heliport.taxiwaycontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_wpmgwr on airport_heliport.taxiwaycontamination.id = master_join_wpmgwr.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_hqlecn on master_join_wpmgwr.target_id = airport_heliport_ridge_view_hqlecn.id
left join master_join master_join_imngrd on airport_heliport.taxiwaycontamination.id = master_join_imngrd.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_dpjyjk on master_join_imngrd.target_id = airport_heliport_surfacecontaminationlayer_view_dpjyjk.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.taxiwaycontamination_pt.id,
    airport_heliport.taxiwaycontamination_pt.nilreason,
    airport_heliport.taxiwaycontamination.frictioncoefficient_value,
    airport_heliport.taxiwaycontamination.frictioncoefficient_nilreason,
    airport_heliport.taxiwaycontamination.frictionestimation_value,
    airport_heliport.taxiwaycontamination.frictionestimation_nilreason,
    airport_heliport.taxiwaycontamination.frictiondevice_value,
    airport_heliport.taxiwaycontamination.frictiondevice_nilreason,
    airport_heliport.taxiwaycontamination.obscuredlights_value,
    airport_heliport.taxiwaycontamination.obscuredlights_nilreason,
    airport_heliport.taxiwaycontamination.furtherclearancetime_value,
    airport_heliport.taxiwaycontamination.furtherclearancetime_nilreason,
    airport_heliport.taxiwaycontamination.furthertotalclearance_value,
    airport_heliport.taxiwaycontamination.furthertotalclearance_nilreason,
    airport_heliport.taxiwaycontamination.proportion_value,
    airport_heliport.taxiwaycontamination.proportion_nilreason,
    airport_heliport.taxiwaycontamination.depth_value,
    airport_heliport.taxiwaycontamination.depth_uom,
    airport_heliport.taxiwaycontamination.depth_nilreason,
    airport_heliport.taxiwaycontamination.clearedwidth_value,
    airport_heliport.taxiwaycontamination.clearedwidth_uom,
    airport_heliport.taxiwaycontamination.clearedwidth_nilreason;
create or replace view shared.telephonecontact_view as
select
    shared.telephonecontact_pt.id,
    jsonb_agg(notes.note_view.note) AS telephonecontact_annotation,
    shared.telephonecontact_pt.nilreason AS telephonecontact_annotation,
    coalesce(cast(shared.telephonecontact.voice_value as varchar), '(' || shared.telephonecontact.voice_nilreason || ')') as voice,
    coalesce(cast(shared.telephonecontact.facsimile_value as varchar), '(' || shared.telephonecontact.facsimile_nilreason || ')') as facsimile,
    jsonb_agg(shared_timesheet_view_ludaye.id) AS timeinterval
from shared.telephonecontact_pt 
inner join shared.telephonecontact on shared.telephonecontact_pt.telephonecontact_id = shared.telephonecontact.id
left join master_join mj1 on shared.telephonecontact.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_btknth on shared.telephonecontact.id = master_join_btknth.source_id
left join shared.timesheet_view shared_timesheet_view_ludaye on master_join_btknth.target_id = shared_timesheet_view_ludaye.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    shared.telephonecontact_pt.id,
    shared.telephonecontact_pt.nilreason,
    shared.telephonecontact.voice_value,
    shared.telephonecontact.voice_nilreason,
    shared.telephonecontact.facsimile_value,
    shared.telephonecontact.facsimile_nilreason;
create or replace view airport_heliport.touchdownliftoffcontamination_view as
select
    airport_heliport.touchdownliftoffcontamination_pt.id,
    jsonb_agg(notes.note_view.note) AS touchdownliftoffcontamination_annotation,
    airport_heliport.touchdownliftoffcontamination_pt.nilreason AS touchdownliftoffcontamination_annotation,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictionestimation_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictiondevice_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.obscuredlights_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.proportion_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.depth_value as varchar) || ' ' || airport_heliport.touchdownliftoffcontamination.depth_uom, '(' || airport_heliport.touchdownliftoffcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(airport_heliport_ridge_view_olrckr.id) AS criticalridge,
    jsonb_agg(airport_heliport_surfacecontaminationlayer_view_zuruno.id) AS layer
from airport_heliport.touchdownliftoffcontamination_pt 
inner join airport_heliport.touchdownliftoffcontamination on airport_heliport.touchdownliftoffcontamination_pt.touchdownliftoffcontamination_id = airport_heliport.touchdownliftoffcontamination.id
left join master_join mj1 on airport_heliport.touchdownliftoffcontamination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_askzpq on airport_heliport.touchdownliftoffcontamination.id = master_join_askzpq.source_id
left join airport_heliport.ridge_view airport_heliport_ridge_view_olrckr on master_join_askzpq.target_id = airport_heliport_ridge_view_olrckr.id
left join master_join master_join_djicqh on airport_heliport.touchdownliftoffcontamination.id = master_join_djicqh.source_id
left join airport_heliport.surfacecontaminationlayer_view airport_heliport_surfacecontaminationlayer_view_zuruno on master_join_djicqh.target_id = airport_heliport_surfacecontaminationlayer_view_zuruno.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.touchdownliftoffcontamination_pt.id,
    airport_heliport.touchdownliftoffcontamination_pt.nilreason,
    airport_heliport.touchdownliftoffcontamination.frictioncoefficient_value,
    airport_heliport.touchdownliftoffcontamination.frictioncoefficient_nilreason,
    airport_heliport.touchdownliftoffcontamination.frictionestimation_value,
    airport_heliport.touchdownliftoffcontamination.frictionestimation_nilreason,
    airport_heliport.touchdownliftoffcontamination.frictiondevice_value,
    airport_heliport.touchdownliftoffcontamination.frictiondevice_nilreason,
    airport_heliport.touchdownliftoffcontamination.obscuredlights_value,
    airport_heliport.touchdownliftoffcontamination.obscuredlights_nilreason,
    airport_heliport.touchdownliftoffcontamination.furtherclearancetime_value,
    airport_heliport.touchdownliftoffcontamination.furtherclearancetime_nilreason,
    airport_heliport.touchdownliftoffcontamination.furthertotalclearance_value,
    airport_heliport.touchdownliftoffcontamination.furthertotalclearance_nilreason,
    airport_heliport.touchdownliftoffcontamination.proportion_value,
    airport_heliport.touchdownliftoffcontamination.proportion_nilreason,
    airport_heliport.touchdownliftoffcontamination.depth_value,
    airport_heliport.touchdownliftoffcontamination.depth_uom,
    airport_heliport.touchdownliftoffcontamination.depth_nilreason;
create or replace view organisation.unitavailability_view as
select
    organisation.unitavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS unitavailability_annotation,
    organisation.unitavailability_pt.nilreason AS unitavailability_annotation,
    coalesce(cast(organisation.unitavailability.operationalstatus_value as varchar), '(' || organisation.unitavailability.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(shared_timesheet_view_xdquuw.id) AS timeinterval
from organisation.unitavailability_pt 
inner join organisation.unitavailability on organisation.unitavailability_pt.unitavailability_id = organisation.unitavailability.id
left join master_join mj1 on organisation.unitavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_rdwowi on organisation.unitavailability.id = master_join_rdwowi.source_id
left join shared.timesheet_view shared_timesheet_view_xdquuw on master_join_rdwowi.target_id = shared_timesheet_view_xdquuw.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    organisation.unitavailability_pt.id,
    organisation.unitavailability_pt.nilreason,
    organisation.unitavailability.operationalstatus_value,
    organisation.unitavailability.operationalstatus_nilreason;
create or replace view obstacles.verticalstructurelightingstatus_view as
select
    obstacles.verticalstructurelightingstatus_pt.id,
    jsonb_agg(notes.note_view.note) AS verticalstructurelightingstatus_annotation,
    obstacles.verticalstructurelightingstatus_pt.nilreason AS verticalstructurelightingstatus_annotation,
    coalesce(cast(obstacles.verticalstructurelightingstatus.status_value as varchar), '(' || obstacles.verticalstructurelightingstatus.status_nilreason || ')') as status,
    jsonb_agg(shared_timesheet_view_pyvjfn.id) AS timeinterval
from obstacles.verticalstructurelightingstatus_pt 
inner join obstacles.verticalstructurelightingstatus on obstacles.verticalstructurelightingstatus_pt.verticalstructurelightingstatus_id = obstacles.verticalstructurelightingstatus.id
left join master_join mj1 on obstacles.verticalstructurelightingstatus.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_hqzmdt on obstacles.verticalstructurelightingstatus.id = master_join_hqzmdt.source_id
left join shared.timesheet_view shared_timesheet_view_pyvjfn on master_join_hqzmdt.target_id = shared_timesheet_view_pyvjfn.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    obstacles.verticalstructurelightingstatus_pt.id,
    obstacles.verticalstructurelightingstatus_pt.nilreason,
    obstacles.verticalstructurelightingstatus.status_value,
    obstacles.verticalstructurelightingstatus.status_nilreason;
create or replace view airport_heliport.workareaactivity_view as
select
    airport_heliport.workareaactivity_pt.id,
    jsonb_agg(notes.note_view.note) AS workareaactivity_annotation,
    airport_heliport.workareaactivity_pt.nilreason AS workareaactivity_annotation,
    coalesce(cast(airport_heliport.workareaactivity.isactive_value as varchar), '(' || airport_heliport.workareaactivity.isactive_nilreason || ')') as isactive,
    jsonb_agg(shared_timesheet_view_igtlyx.id) AS timeinterval
from airport_heliport.workareaactivity_pt 
inner join airport_heliport.workareaactivity on airport_heliport.workareaactivity_pt.workareaactivity_id = airport_heliport.workareaactivity.id
left join master_join mj1 on airport_heliport.workareaactivity.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_eoxvwa on airport_heliport.workareaactivity.id = master_join_eoxvwa.source_id
left join shared.timesheet_view shared_timesheet_view_igtlyx on master_join_eoxvwa.target_id = shared_timesheet_view_igtlyx.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    airport_heliport.workareaactivity_pt.id,
    airport_heliport.workareaactivity_pt.nilreason,
    airport_heliport.workareaactivity.isactive_value,
    airport_heliport.workareaactivity.isactive_nilreason;
create or replace view airport_heliport.approachlightingsystem_publisher_view as
select distinct on (approachlightingsystem.identifier,approachlightingsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.approachlightingsystem.id,
    airport_heliport.approachlightingsystem_ts.id as ts_id,
    airport_heliport.approachlightingsystem_tsp.id as tsp_id,
    airport_heliport.approachlightingsystem.identifier,
    airport_heliport.approachlightingsystem_ts.interpretation,
    airport_heliport.approachlightingsystem_ts.sequence_number,
    airport_heliport.approachlightingsystem_ts.correction_number,
    airport_heliport.approachlightingsystem_ts.valid_time_begin,
    airport_heliport.approachlightingsystem_ts.valid_time_end,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_begin,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.colour_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.classicao_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.classicao_nilreason || ')') as classicao,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.type_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.sequencedflashing_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.sequencedflashing_nilreason || ')') as sequencedflashing,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.alignmentindicator_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.alignmentindicator_nilreason || ')') as alignmentindicator,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.length_value as varchar) || ' ' || airport_heliport.approachlightingsystem_ts.length_uom, '(' || airport_heliport.approachlightingsystem_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_runwaydirection_pt_necrpa.title as varchar), '(' || airport_heliport_runwaydirection_pt_necrpa.nilreason[1] || ')') AS servedrunwaydirection,
    airport_heliport_runwaydirection_pt_necrpa.href AS servedrunwaydirection_href
from airport_heliport.approachlightingsystem 
inner join master_join mj2 on airport_heliport.approachlightingsystem.id = mj2.source_id
inner join airport_heliport.approachlightingsystem_tsp on mj2.target_id = airport_heliport.approachlightingsystem_tsp.id
inner join airport_heliport.approachlightingsystem_ts on airport_heliport.approachlightingsystem_tsp.approachlightingsystemtimeslice_id = airport_heliport.approachlightingsystem_ts.id
left join master_join mj3 on airport_heliport.approachlightingsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_necrpa on airport_heliport.approachlightingsystem_ts.servedrunwaydirection_id = airport_heliport_runwaydirection_pt_necrpa.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.approachlightingsystem.feature_status = 'APPROVED'
  and airport_heliport.approachlightingsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.approachlightingsystem.id,
    airport_heliport.approachlightingsystem_ts.id,
    airport_heliport.approachlightingsystem_tsp.id,
    airport_heliport.approachlightingsystem.identifier,
    airport_heliport.approachlightingsystem_ts.interpretation,
    airport_heliport.approachlightingsystem_ts.sequence_number,
    airport_heliport.approachlightingsystem_ts.correction_number,
    airport_heliport.approachlightingsystem_ts.valid_time_begin,
    airport_heliport.approachlightingsystem_ts.valid_time_end,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_begin,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_end,
    airport_heliport.approachlightingsystem_ts.emergencylighting_value,
    airport_heliport.approachlightingsystem_ts.emergencylighting_nilreason,
    airport_heliport.approachlightingsystem_ts.intensitylevel_value,
    airport_heliport.approachlightingsystem_ts.intensitylevel_nilreason,
    airport_heliport.approachlightingsystem_ts.colour_value,
    airport_heliport.approachlightingsystem_ts.colour_nilreason,
    airport_heliport.approachlightingsystem_ts.classicao_value,
    airport_heliport.approachlightingsystem_ts.classicao_nilreason,
    airport_heliport.approachlightingsystem_ts.type_value,
    airport_heliport.approachlightingsystem_ts.type_nilreason,
    airport_heliport.approachlightingsystem_ts.sequencedflashing_value,
    airport_heliport.approachlightingsystem_ts.sequencedflashing_nilreason,
    airport_heliport.approachlightingsystem_ts.alignmentindicator_value,
    airport_heliport.approachlightingsystem_ts.alignmentindicator_nilreason,
    airport_heliport.approachlightingsystem_ts.length_value,
    airport_heliport.approachlightingsystem_ts.length_uom,
    airport_heliport.approachlightingsystem_ts.length_nilreason,
    airport_heliport_runwaydirection_pt_necrpa.title,
    airport_heliport_runwaydirection_pt_necrpa.nilreason,
    airport_heliport_runwaydirection_pt_necrpa.href
order by approachlightingsystem.identifier, approachlightingsystem_ts.sequence_number, approachlightingsystem_ts.correction_number DESC;
create or replace view airport_heliport.apronlightsystem_publisher_view as
select distinct on (apronlightsystem.identifier,apronlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronlightsystem.id,
    airport_heliport.apronlightsystem_ts.id as ts_id,
    airport_heliport.apronlightsystem_tsp.id as tsp_id,
    airport_heliport.apronlightsystem.identifier,
    airport_heliport.apronlightsystem_ts.interpretation,
    airport_heliport.apronlightsystem_ts.sequence_number,
    airport_heliport.apronlightsystem_ts.correction_number,
    airport_heliport.apronlightsystem_ts.valid_time_begin,
    airport_heliport.apronlightsystem_ts.valid_time_end,
    airport_heliport.apronlightsystem_ts.feature_lifetime_begin,
    airport_heliport.apronlightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.apronlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.apronlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.apronlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.apronlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.apronlightsystem_ts.colour_value as varchar), '(' || airport_heliport.apronlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.apronlightsystem_ts.position_value as varchar), '(' || airport_heliport.apronlightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_apron_pt_xhhexc.title as varchar), '(' || airport_heliport_apron_pt_xhhexc.nilreason[1] || ')') AS lightedapron,
    airport_heliport_apron_pt_xhhexc.href AS lightedapron_href
from airport_heliport.apronlightsystem 
inner join master_join mj2 on airport_heliport.apronlightsystem.id = mj2.source_id
inner join airport_heliport.apronlightsystem_tsp on mj2.target_id = airport_heliport.apronlightsystem_tsp.id
inner join airport_heliport.apronlightsystem_ts on airport_heliport.apronlightsystem_tsp.apronlightsystemtimeslice_id = airport_heliport.apronlightsystem_ts.id
left join master_join mj3 on airport_heliport.apronlightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_xhhexc on airport_heliport.apronlightsystem_ts.lightedapron_id = airport_heliport_apron_pt_xhhexc.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.apronlightsystem.feature_status = 'APPROVED'
  and airport_heliport.apronlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronlightsystem.id,
    airport_heliport.apronlightsystem_ts.id,
    airport_heliport.apronlightsystem_tsp.id,
    airport_heliport.apronlightsystem.identifier,
    airport_heliport.apronlightsystem_ts.interpretation,
    airport_heliport.apronlightsystem_ts.sequence_number,
    airport_heliport.apronlightsystem_ts.correction_number,
    airport_heliport.apronlightsystem_ts.valid_time_begin,
    airport_heliport.apronlightsystem_ts.valid_time_end,
    airport_heliport.apronlightsystem_ts.feature_lifetime_begin,
    airport_heliport.apronlightsystem_ts.feature_lifetime_end,
    airport_heliport.apronlightsystem_ts.emergencylighting_value,
    airport_heliport.apronlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.apronlightsystem_ts.intensitylevel_value,
    airport_heliport.apronlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.apronlightsystem_ts.colour_value,
    airport_heliport.apronlightsystem_ts.colour_nilreason,
    airport_heliport.apronlightsystem_ts.position_value,
    airport_heliport.apronlightsystem_ts.position_nilreason,
    airport_heliport_apron_pt_xhhexc.title,
    airport_heliport_apron_pt_xhhexc.nilreason,
    airport_heliport_apron_pt_xhhexc.href
order by apronlightsystem.identifier, apronlightsystem_ts.sequence_number, apronlightsystem_ts.correction_number DESC;
create or replace view airport_heliport.apron_publisher_view as
select distinct on (apron.identifier,apron_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apron.id,
    airport_heliport.apron_ts.id as ts_id,
    airport_heliport.apron_tsp.id as tsp_id,
    airport_heliport.apron.identifier,
    airport_heliport.apron_ts.interpretation,
    airport_heliport.apron_ts.sequence_number,
    airport_heliport.apron_ts.correction_number,
    airport_heliport.apron_ts.valid_time_begin,
    airport_heliport.apron_ts.valid_time_end,
    airport_heliport.apron_ts.feature_lifetime_begin,
    airport_heliport.apron_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.apron_ts.name_value as varchar), '(' || airport_heliport.apron_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport.apron_ts.abandoned_value as varchar), '(' || airport_heliport.apron_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_gxybyk.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_gxybyk.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_gxybyk.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ohheze.title as varchar), '(' || airport_heliport_airportheliport_pt_ohheze.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ohheze.href AS associatedairportheliport_href
from airport_heliport.apron 
inner join master_join mj2 on airport_heliport.apron.id = mj2.source_id
inner join airport_heliport.apron_tsp on mj2.target_id = airport_heliport.apron_tsp.id
inner join airport_heliport.apron_ts on airport_heliport.apron_tsp.aprontimeslice_id = airport_heliport.apron_ts.id
left join master_join mj3 on airport_heliport.apron_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_gxybyk on airport_heliport.apron_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_gxybyk.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ohheze on airport_heliport.apron_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ohheze.id
--object many airport_heliport.aproncontamination.contaminant - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.apronareaavailability.availability - master_join
where airport_heliport.apron.feature_status = 'APPROVED'
  and airport_heliport.apron_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apron.id,
    airport_heliport.apron_ts.id,
    airport_heliport.apron_tsp.id,
    airport_heliport.apron.identifier,
    airport_heliport.apron_ts.interpretation,
    airport_heliport.apron_ts.sequence_number,
    airport_heliport.apron_ts.correction_number,
    airport_heliport.apron_ts.valid_time_begin,
    airport_heliport.apron_ts.valid_time_end,
    airport_heliport.apron_ts.feature_lifetime_begin,
    airport_heliport.apron_ts.feature_lifetime_end,
    airport_heliport.apron_ts.name_value,
    airport_heliport.apron_ts.name_nilreason,
    airport_heliport.apron_ts.abandoned_value,
    airport_heliport.apron_ts.abandoned_nilreason,
    airport_heliport_surfacecharacteristics_pt_gxybyk.title,
    airport_heliport_surfacecharacteristics_pt_gxybyk.nilreason,
    airport_heliport_surfacecharacteristics_pt_gxybyk.href,
    airport_heliport_airportheliport_pt_ohheze.title,
    airport_heliport_airportheliport_pt_ohheze.nilreason,
    airport_heliport_airportheliport_pt_ohheze.href
order by apron.identifier, apron_ts.sequence_number, apron_ts.correction_number DESC;
create or replace view airport_heliport.deicingarea_publisher_view as
select distinct on (deicingarea.identifier,deicingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.deicingarea.id,
    airport_heliport.deicingarea_ts.id as ts_id,
    airport_heliport.deicingarea_tsp.id as tsp_id,
    airport_heliport.deicingarea.identifier,
    airport_heliport.deicingarea_ts.interpretation,
    airport_heliport.deicingarea_ts.sequence_number,
    airport_heliport.deicingarea_ts.correction_number,
    airport_heliport.deicingarea_ts.valid_time_begin,
    airport_heliport.deicingarea_ts.valid_time_end,
    airport_heliport.deicingarea_ts.feature_lifetime_begin,
    airport_heliport.deicingarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport_apron_pt_cpjvyu.title as varchar), '(' || airport_heliport_apron_pt_cpjvyu.nilreason[1] || ')') AS associatedapron,
    airport_heliport_apron_pt_cpjvyu.href AS associatedapron_href,
    coalesce(cast(airport_heliport_taxiway_pt_hecvsn.title as varchar), '(' || airport_heliport_taxiway_pt_hecvsn.nilreason[1] || ')') AS taxiwaylocation,
    airport_heliport_taxiway_pt_hecvsn.href AS taxiwaylocation_href,
    coalesce(cast(airport_heliport_aircraftstand_pt_pxmpuf.title as varchar), '(' || airport_heliport_aircraftstand_pt_pxmpuf.nilreason[1] || ')') AS standlocation,
    airport_heliport_aircraftstand_pt_pxmpuf.href AS standlocation_href,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_vkjxma.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_vkjxma.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_vkjxma.href AS surfaceproperties_href
from airport_heliport.deicingarea 
inner join master_join mj2 on airport_heliport.deicingarea.id = mj2.source_id
inner join airport_heliport.deicingarea_tsp on mj2.target_id = airport_heliport.deicingarea_tsp.id
inner join airport_heliport.deicingarea_ts on airport_heliport.deicingarea_tsp.deicingareatimeslice_id = airport_heliport.deicingarea_ts.id
left join master_join mj3 on airport_heliport.deicingarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_cpjvyu on airport_heliport.deicingarea_ts.associatedapron_id = airport_heliport_apron_pt_cpjvyu.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_hecvsn on airport_heliport.deicingarea_ts.taxiwaylocation_id = airport_heliport_taxiway_pt_hecvsn.id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_pxmpuf on airport_heliport.deicingarea_ts.standlocation_id = airport_heliport_aircraftstand_pt_pxmpuf.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_vkjxma on airport_heliport.deicingarea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_vkjxma.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.apronareaavailability.availability - master_join
where airport_heliport.deicingarea.feature_status = 'APPROVED'
  and airport_heliport.deicingarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.deicingarea.id,
    airport_heliport.deicingarea_ts.id,
    airport_heliport.deicingarea_tsp.id,
    airport_heliport.deicingarea.identifier,
    airport_heliport.deicingarea_ts.interpretation,
    airport_heliport.deicingarea_ts.sequence_number,
    airport_heliport.deicingarea_ts.correction_number,
    airport_heliport.deicingarea_ts.valid_time_begin,
    airport_heliport.deicingarea_ts.valid_time_end,
    airport_heliport.deicingarea_ts.feature_lifetime_begin,
    airport_heliport.deicingarea_ts.feature_lifetime_end,
    airport_heliport_apron_pt_cpjvyu.title,
    airport_heliport_apron_pt_cpjvyu.nilreason,
    airport_heliport_apron_pt_cpjvyu.href,
    airport_heliport_taxiway_pt_hecvsn.title,
    airport_heliport_taxiway_pt_hecvsn.nilreason,
    airport_heliport_taxiway_pt_hecvsn.href,
    airport_heliport_aircraftstand_pt_pxmpuf.title,
    airport_heliport_aircraftstand_pt_pxmpuf.nilreason,
    airport_heliport_aircraftstand_pt_pxmpuf.href,
    airport_heliport_surfacecharacteristics_pt_vkjxma.title,
    airport_heliport_surfacecharacteristics_pt_vkjxma.nilreason,
    airport_heliport_surfacecharacteristics_pt_vkjxma.href
order by deicingarea.identifier, deicingarea_ts.sequence_number, deicingarea_ts.correction_number DESC;
create or replace view airport_heliport.guidancelinelightsystem_publisher_view as
select distinct on (guidancelinelightsystem.identifier,guidancelinelightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidancelinelightsystem.id,
    airport_heliport.guidancelinelightsystem_ts.id as ts_id,
    airport_heliport.guidancelinelightsystem_tsp.id as tsp_id,
    airport_heliport.guidancelinelightsystem.identifier,
    airport_heliport.guidancelinelightsystem_ts.interpretation,
    airport_heliport.guidancelinelightsystem_ts.sequence_number,
    airport_heliport.guidancelinelightsystem_ts.correction_number,
    airport_heliport.guidancelinelightsystem_ts.valid_time_begin,
    airport_heliport.guidancelinelightsystem_ts.valid_time_end,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_begin,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.colour_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport_guidanceline_pt_ijiixh.title as varchar), '(' || airport_heliport_guidanceline_pt_ijiixh.nilreason[1] || ')') AS lightedguidanceline,
    airport_heliport_guidanceline_pt_ijiixh.href AS lightedguidanceline_href
from airport_heliport.guidancelinelightsystem 
inner join master_join mj2 on airport_heliport.guidancelinelightsystem.id = mj2.source_id
inner join airport_heliport.guidancelinelightsystem_tsp on mj2.target_id = airport_heliport.guidancelinelightsystem_tsp.id
inner join airport_heliport.guidancelinelightsystem_ts on airport_heliport.guidancelinelightsystem_tsp.guidancelinelightsystemtimeslice_id = airport_heliport.guidancelinelightsystem_ts.id
left join master_join mj3 on airport_heliport.guidancelinelightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_ijiixh on airport_heliport.guidancelinelightsystem_ts.lightedguidanceline_id = airport_heliport_guidanceline_pt_ijiixh.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.guidancelinelightsystem.feature_status = 'APPROVED'
  and airport_heliport.guidancelinelightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidancelinelightsystem.id,
    airport_heliport.guidancelinelightsystem_ts.id,
    airport_heliport.guidancelinelightsystem_tsp.id,
    airport_heliport.guidancelinelightsystem.identifier,
    airport_heliport.guidancelinelightsystem_ts.interpretation,
    airport_heliport.guidancelinelightsystem_ts.sequence_number,
    airport_heliport.guidancelinelightsystem_ts.correction_number,
    airport_heliport.guidancelinelightsystem_ts.valid_time_begin,
    airport_heliport.guidancelinelightsystem_ts.valid_time_end,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_begin,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_end,
    airport_heliport.guidancelinelightsystem_ts.emergencylighting_value,
    airport_heliport.guidancelinelightsystem_ts.emergencylighting_nilreason,
    airport_heliport.guidancelinelightsystem_ts.intensitylevel_value,
    airport_heliport.guidancelinelightsystem_ts.intensitylevel_nilreason,
    airport_heliport.guidancelinelightsystem_ts.colour_value,
    airport_heliport.guidancelinelightsystem_ts.colour_nilreason,
    airport_heliport_guidanceline_pt_ijiixh.title,
    airport_heliport_guidanceline_pt_ijiixh.nilreason,
    airport_heliport_guidanceline_pt_ijiixh.href
order by guidancelinelightsystem.identifier, guidancelinelightsystem_ts.sequence_number, guidancelinelightsystem_ts.correction_number DESC;
create or replace view procedure.navigationarea_publisher_view as
select distinct on (navigationarea.identifier,navigationarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.navigationarea.id,
    procedure.navigationarea_ts.id as ts_id,
    procedure.navigationarea_tsp.id as tsp_id,
    procedure.navigationarea.identifier,
    procedure.navigationarea_ts.interpretation,
    procedure.navigationarea_ts.sequence_number,
    procedure.navigationarea_ts.correction_number,
    procedure.navigationarea_ts.valid_time_begin,
    procedure.navigationarea_ts.valid_time_end,
    procedure.navigationarea_ts.feature_lifetime_begin,
    procedure.navigationarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.navigationarea_ts.navigationareatype_value as varchar), '(' || procedure.navigationarea_ts.navigationareatype_nilreason || ')') as navigationareatype,
    coalesce(cast(procedure.navigationarea_ts.minimumceiling_value as varchar) || ' ' || procedure.navigationarea_ts.minimumceiling_uom, '(' || procedure.navigationarea_ts.minimumceiling_nilreason || ')') as minimumceiling,
    coalesce(cast(procedure.navigationarea_ts.minimumvisibility_value as varchar) || ' ' || procedure.navigationarea_ts.minimumvisibility_uom, '(' || procedure.navigationarea_ts.minimumvisibility_nilreason || ')') as minimumvisibility,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_fzqawp.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_fzqawp.nilreason[1] || ')') AS departure,
    procedure_standardinstrumentdeparture_pt_fzqawp.href AS departure_href,
    coalesce(cast(navaids_points_designatedpoint_pt_hfobjr.title as varchar), '(' || navaids_points_designatedpoint_pt_hfobjr.nilreason[1] || ')') AS centrepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_hfobjr.href AS centrepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_okcbpy.title as varchar), '(' || navaids_points_navaid_pt_okcbpy.nilreason[1] || ')') AS centrepointnavaidsystem,
    navaids_points_navaid_pt_okcbpy.href AS centrepointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_kplpmu.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_kplpmu.nilreason[1] || ')') AS centrepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_kplpmu.href AS centrepointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_ctuedj.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_ctuedj.nilreason[1] || ')') AS centrepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_ctuedj.href AS centrepointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_jfbxqa.title as varchar), '(' || airport_heliport_airportheliport_pt_jfbxqa.nilreason[1] || ')') AS centrepointairportreferencepoint,
    airport_heliport_airportheliport_pt_jfbxqa.href AS centrepointairportreferencepoint_href
from procedure.navigationarea 
inner join master_join mj2 on procedure.navigationarea.id = mj2.source_id
inner join procedure.navigationarea_tsp on mj2.target_id = procedure.navigationarea_tsp.id
inner join procedure.navigationarea_ts on procedure.navigationarea_tsp.navigationareatimeslice_id = procedure.navigationarea_ts.id
left join master_join mj3 on procedure.navigationarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_fzqawp on procedure.navigationarea_ts.departure_id = procedure_standardinstrumentdeparture_pt_fzqawp.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_hfobjr on procedure.navigationarea_ts.centrepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_hfobjr.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_okcbpy on procedure.navigationarea_ts.centrepoint_navaidsystem_id = navaids_points_navaid_pt_okcbpy.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_kplpmu on procedure.navigationarea_ts.centrepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_kplpmu.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_ctuedj on procedure.navigationarea_ts.centrepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_ctuedj.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jfbxqa on procedure.navigationarea_ts.centrepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_jfbxqa.id
--snowflake one geometry.point.centrepointposition - PointPropertyType
--object many procedure.navigationareasector.sector - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.navigationarea.feature_status = 'APPROVED'
  and procedure.navigationarea_ts.feature_status = 'APPROVED'
group by
    procedure.navigationarea.id,
    procedure.navigationarea_ts.id,
    procedure.navigationarea_tsp.id,
    procedure.navigationarea.identifier,
    procedure.navigationarea_ts.interpretation,
    procedure.navigationarea_ts.sequence_number,
    procedure.navigationarea_ts.correction_number,
    procedure.navigationarea_ts.valid_time_begin,
    procedure.navigationarea_ts.valid_time_end,
    procedure.navigationarea_ts.feature_lifetime_begin,
    procedure.navigationarea_ts.feature_lifetime_end,
    procedure.navigationarea_ts.navigationareatype_value,
    procedure.navigationarea_ts.navigationareatype_nilreason,
    procedure.navigationarea_ts.minimumceiling_value,
    procedure.navigationarea_ts.minimumceiling_uom,
    procedure.navigationarea_ts.minimumceiling_nilreason,
    procedure.navigationarea_ts.minimumvisibility_value,
    procedure.navigationarea_ts.minimumvisibility_uom,
    procedure.navigationarea_ts.minimumvisibility_nilreason,
    procedure_standardinstrumentdeparture_pt_fzqawp.title,
    procedure_standardinstrumentdeparture_pt_fzqawp.nilreason,
    procedure_standardinstrumentdeparture_pt_fzqawp.href,
    navaids_points_designatedpoint_pt_hfobjr.title,
    navaids_points_designatedpoint_pt_hfobjr.nilreason,
    navaids_points_designatedpoint_pt_hfobjr.href,
    navaids_points_navaid_pt_okcbpy.title,
    navaids_points_navaid_pt_okcbpy.nilreason,
    navaids_points_navaid_pt_okcbpy.href,
    airport_heliport_touchdownliftoff_pt_kplpmu.title,
    airport_heliport_touchdownliftoff_pt_kplpmu.nilreason,
    airport_heliport_touchdownliftoff_pt_kplpmu.href,
    airport_heliport_runwaycentrelinepoint_pt_ctuedj.title,
    airport_heliport_runwaycentrelinepoint_pt_ctuedj.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_ctuedj.href,
    airport_heliport_airportheliport_pt_jfbxqa.title,
    airport_heliport_airportheliport_pt_jfbxqa.nilreason,
    airport_heliport_airportheliport_pt_jfbxqa.href
order by navigationarea.identifier, navigationarea_ts.sequence_number, navigationarea_ts.correction_number DESC;
create or replace view organisation.organisationauthority_publisher_view as
select distinct on (organisationauthority.identifier,organisationauthority_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    organisation.organisationauthority.id,
    organisation.organisationauthority_ts.id as ts_id,
    organisation.organisationauthority_tsp.id as tsp_id,
    organisation.organisationauthority.identifier,
    organisation.organisationauthority_ts.interpretation,
    organisation.organisationauthority_ts.sequence_number,
    organisation.organisationauthority_ts.correction_number,
    organisation.organisationauthority_ts.valid_time_begin,
    organisation.organisationauthority_ts.valid_time_end,
    organisation.organisationauthority_ts.feature_lifetime_begin,
    organisation.organisationauthority_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(organisation.organisationauthority_ts.name_value as varchar), '(' || organisation.organisationauthority_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation.organisationauthority_ts.designator_value as varchar), '(' || organisation.organisationauthority_ts.designator_nilreason || ')') as designator,
    coalesce(cast(organisation.organisationauthority_ts.type_value as varchar), '(' || organisation.organisationauthority_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation.organisationauthority_ts.military_value as varchar), '(' || organisation.organisationauthority_ts.military_nilreason || ')') as military
from organisation.organisationauthority 
inner join master_join mj2 on organisation.organisationauthority.id = mj2.source_id
inner join organisation.organisationauthority_tsp on mj2.target_id = organisation.organisationauthority_tsp.id
inner join organisation.organisationauthority_ts on organisation.organisationauthority_tsp.organisationauthoritytimeslice_id = organisation.organisationauthority_ts.id
left join master_join mj3 on organisation.organisationauthority_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--object many organisation.organisationauthorityassociation.relatedorganisationauthority - master_join
--snowflake many notes.note.annotation - NotePropertyType
where organisation.organisationauthority.feature_status = 'APPROVED'
  and organisation.organisationauthority_ts.feature_status = 'APPROVED'
group by
    organisation.organisationauthority.id,
    organisation.organisationauthority_ts.id,
    organisation.organisationauthority_tsp.id,
    organisation.organisationauthority.identifier,
    organisation.organisationauthority_ts.interpretation,
    organisation.organisationauthority_ts.sequence_number,
    organisation.organisationauthority_ts.correction_number,
    organisation.organisationauthority_ts.valid_time_begin,
    organisation.organisationauthority_ts.valid_time_end,
    organisation.organisationauthority_ts.feature_lifetime_begin,
    organisation.organisationauthority_ts.feature_lifetime_end,
    organisation.organisationauthority_ts.name_value,
    organisation.organisationauthority_ts.name_nilreason,
    organisation.organisationauthority_ts.designator_value,
    organisation.organisationauthority_ts.designator_nilreason,
    organisation.organisationauthority_ts.type_value,
    organisation.organisationauthority_ts.type_nilreason,
    organisation.organisationauthority_ts.military_value,
    organisation.organisationauthority_ts.military_nilreason
order by organisationauthority.identifier, organisationauthority_ts.sequence_number, organisationauthority_ts.correction_number DESC;
create or replace view airport_heliport.passengerloadingbridge_publisher_view as
select distinct on (passengerloadingbridge.identifier,passengerloadingbridge_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.passengerloadingbridge.id,
    airport_heliport.passengerloadingbridge_ts.id as ts_id,
    airport_heliport.passengerloadingbridge_tsp.id as tsp_id,
    airport_heliport.passengerloadingbridge.identifier,
    airport_heliport.passengerloadingbridge_ts.interpretation,
    airport_heliport.passengerloadingbridge_ts.sequence_number,
    airport_heliport.passengerloadingbridge_ts.correction_number,
    airport_heliport.passengerloadingbridge_ts.valid_time_begin,
    airport_heliport.passengerloadingbridge_ts.valid_time_end,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_begin,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.passengerloadingbridge_ts.type_value as varchar), '(' || airport_heliport.passengerloadingbridge_ts.type_nilreason || ')') as type
from airport_heliport.passengerloadingbridge 
inner join master_join mj2 on airport_heliport.passengerloadingbridge.id = mj2.source_id
inner join airport_heliport.passengerloadingbridge_tsp on mj2.target_id = airport_heliport.passengerloadingbridge_tsp.id
inner join airport_heliport.passengerloadingbridge_ts on airport_heliport.passengerloadingbridge_tsp.passengerloadingbridgetimeslice_id = airport_heliport.passengerloadingbridge_ts.id
left join master_join mj3 on airport_heliport.passengerloadingbridge_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--feature many airport_heliport.aircraftstand.associatedstand - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.passengerloadingbridge.feature_status = 'APPROVED'
  and airport_heliport.passengerloadingbridge_ts.feature_status = 'APPROVED'
group by
    airport_heliport.passengerloadingbridge.id,
    airport_heliport.passengerloadingbridge_ts.id,
    airport_heliport.passengerloadingbridge_tsp.id,
    airport_heliport.passengerloadingbridge.identifier,
    airport_heliport.passengerloadingbridge_ts.interpretation,
    airport_heliport.passengerloadingbridge_ts.sequence_number,
    airport_heliport.passengerloadingbridge_ts.correction_number,
    airport_heliport.passengerloadingbridge_ts.valid_time_begin,
    airport_heliport.passengerloadingbridge_ts.valid_time_end,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_begin,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_end,
    airport_heliport.passengerloadingbridge_ts.type_value,
    airport_heliport.passengerloadingbridge_ts.type_nilreason
order by passengerloadingbridge.identifier, passengerloadingbridge_ts.sequence_number, passengerloadingbridge_ts.correction_number DESC;
create or replace view service.radiocommunicationchannel_publisher_view as
select distinct on (radiocommunicationchannel.identifier,radiocommunicationchannel_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.radiocommunicationchannel.id,
    service.radiocommunicationchannel_ts.id as ts_id,
    service.radiocommunicationchannel_tsp.id as tsp_id,
    service.radiocommunicationchannel.identifier,
    service.radiocommunicationchannel_ts.interpretation,
    service.radiocommunicationchannel_ts.sequence_number,
    service.radiocommunicationchannel_ts.correction_number,
    service.radiocommunicationchannel_ts.valid_time_begin,
    service.radiocommunicationchannel_ts.valid_time_end,
    service.radiocommunicationchannel_ts.feature_lifetime_begin,
    service.radiocommunicationchannel_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.radiocommunicationchannel_ts.mode_value as varchar), '(' || service.radiocommunicationchannel_ts.mode_nilreason || ')') as mode,
    coalesce(cast(service.radiocommunicationchannel_ts.rank_value as varchar), '(' || service.radiocommunicationchannel_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.radiocommunicationchannel_ts.channel_value as varchar), '(' || service.radiocommunicationchannel_ts.channel_nilreason || ')') as channel,
    coalesce(cast(service.radiocommunicationchannel_ts.logon_value as varchar), '(' || service.radiocommunicationchannel_ts.logon_nilreason || ')') as logon,
    coalesce(cast(service.radiocommunicationchannel_ts.emissiontype_value as varchar), '(' || service.radiocommunicationchannel_ts.emissiontype_nilreason || ')') as emissiontype,
    coalesce(cast(service.radiocommunicationchannel_ts.selectivecall_value as varchar), '(' || service.radiocommunicationchannel_ts.selectivecall_nilreason || ')') as selectivecall,
    coalesce(cast(service.radiocommunicationchannel_ts.flightchecked_value as varchar), '(' || service.radiocommunicationchannel_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(service.radiocommunicationchannel_ts.trafficdirection_value as varchar), '(' || service.radiocommunicationchannel_ts.trafficdirection_nilreason || ')') as trafficdirection,
    coalesce(cast(service.radiocommunicationchannel_ts.frequencytransmission_value as varchar) || ' ' || service.radiocommunicationchannel_ts.frequencytransmission_uom, '(' || service.radiocommunicationchannel_ts.frequencytransmission_nilreason || ')') as frequencytransmission,
    coalesce(cast(service.radiocommunicationchannel_ts.frequencyreception_value as varchar) || ' ' || service.radiocommunicationchannel_ts.frequencyreception_uom, '(' || service.radiocommunicationchannel_ts.frequencyreception_nilreason || ')') as frequencyreception
from service.radiocommunicationchannel 
inner join master_join mj2 on service.radiocommunicationchannel.id = mj2.source_id
inner join service.radiocommunicationchannel_tsp on mj2.target_id = service.radiocommunicationchannel_tsp.id
inner join service.radiocommunicationchannel_ts on service.radiocommunicationchannel_tsp.radiocommunicationchanneltimeslice_id = service.radiocommunicationchannel_ts.id
left join master_join mj3 on service.radiocommunicationchannel_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake many geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many service.radiocommunicationoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where service.radiocommunicationchannel.feature_status = 'APPROVED'
  and service.radiocommunicationchannel_ts.feature_status = 'APPROVED'
group by
    service.radiocommunicationchannel.id,
    service.radiocommunicationchannel_ts.id,
    service.radiocommunicationchannel_tsp.id,
    service.radiocommunicationchannel.identifier,
    service.radiocommunicationchannel_ts.interpretation,
    service.radiocommunicationchannel_ts.sequence_number,
    service.radiocommunicationchannel_ts.correction_number,
    service.radiocommunicationchannel_ts.valid_time_begin,
    service.radiocommunicationchannel_ts.valid_time_end,
    service.radiocommunicationchannel_ts.feature_lifetime_begin,
    service.radiocommunicationchannel_ts.feature_lifetime_end,
    service.radiocommunicationchannel_ts.mode_value,
    service.radiocommunicationchannel_ts.mode_nilreason,
    service.radiocommunicationchannel_ts.rank_value,
    service.radiocommunicationchannel_ts.rank_nilreason,
    service.radiocommunicationchannel_ts.channel_value,
    service.radiocommunicationchannel_ts.channel_nilreason,
    service.radiocommunicationchannel_ts.logon_value,
    service.radiocommunicationchannel_ts.logon_nilreason,
    service.radiocommunicationchannel_ts.emissiontype_value,
    service.radiocommunicationchannel_ts.emissiontype_nilreason,
    service.radiocommunicationchannel_ts.selectivecall_value,
    service.radiocommunicationchannel_ts.selectivecall_nilreason,
    service.radiocommunicationchannel_ts.flightchecked_value,
    service.radiocommunicationchannel_ts.flightchecked_nilreason,
    service.radiocommunicationchannel_ts.trafficdirection_value,
    service.radiocommunicationchannel_ts.trafficdirection_nilreason,
    service.radiocommunicationchannel_ts.frequencytransmission_value,
    service.radiocommunicationchannel_ts.frequencytransmission_uom,
    service.radiocommunicationchannel_ts.frequencytransmission_nilreason,
    service.radiocommunicationchannel_ts.frequencyreception_value,
    service.radiocommunicationchannel_ts.frequencyreception_uom,
    service.radiocommunicationchannel_ts.frequencyreception_nilreason
order by radiocommunicationchannel.identifier, radiocommunicationchannel_ts.sequence_number, radiocommunicationchannel_ts.correction_number DESC;
create or replace view shared.radiofrequencyarea_publisher_view as
select distinct on (radiofrequencyarea.identifier,radiofrequencyarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.radiofrequencyarea.id,
    shared.radiofrequencyarea_ts.id as ts_id,
    shared.radiofrequencyarea_tsp.id as tsp_id,
    shared.radiofrequencyarea.identifier,
    shared.radiofrequencyarea_ts.interpretation,
    shared.radiofrequencyarea_ts.sequence_number,
    shared.radiofrequencyarea_ts.correction_number,
    shared.radiofrequencyarea_ts.valid_time_begin,
    shared.radiofrequencyarea_ts.valid_time_end,
    shared.radiofrequencyarea_ts.feature_lifetime_begin,
    shared.radiofrequencyarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(shared.radiofrequencyarea_ts.type_value as varchar), '(' || shared.radiofrequencyarea_ts.type_nilreason || ')') as type,
    coalesce(cast(shared.radiofrequencyarea_ts.anglescallop_value as varchar), '(' || shared.radiofrequencyarea_ts.anglescallop_nilreason || ')') as anglescallop,
    coalesce(cast(shared.radiofrequencyarea_ts.signaltype_value as varchar), '(' || shared.radiofrequencyarea_ts.signaltype_nilreason || ')') as signaltype,
    coalesce(cast(service_radiocommunicationchannel_pt_yzhtxy.title as varchar), '(' || service_radiocommunicationchannel_pt_yzhtxy.nilreason[1] || ')') AS equipmentfrequency,
    service_radiocommunicationchannel_pt_yzhtxy.href AS equipmentfrequency_href,
    coalesce(cast(navaids_points_specialnavigationstation_pt_kokjig.title as varchar), '(' || navaids_points_specialnavigationstation_pt_kokjig.nilreason[1] || ')') AS equipmentspecialnavigationstation,
    navaids_points_specialnavigationstation_pt_kokjig.href AS equipmentspecialnavigationstation_href,
    coalesce(cast(surveillance_precisionapproachradar_pt_rhgdxx.title as varchar), '(' || surveillance_precisionapproachradar_pt_rhgdxx.nilreason[1] || ')') AS equipmentprecisionapproachradar,
    surveillance_precisionapproachradar_pt_rhgdxx.href AS equipmentprecisionapproachradar_href,
    coalesce(cast(surveillance_secondarysurveillanceradar_pt_vermvi.title as varchar), '(' || surveillance_secondarysurveillanceradar_pt_vermvi.nilreason[1] || ')') AS equipmentradar,
    surveillance_secondarysurveillanceradar_pt_vermvi.href AS equipmentradar_href
from shared.radiofrequencyarea 
inner join master_join mj2 on shared.radiofrequencyarea.id = mj2.source_id
inner join shared.radiofrequencyarea_tsp on mj2.target_id = shared.radiofrequencyarea_tsp.id
inner join shared.radiofrequencyarea_ts on shared.radiofrequencyarea_tsp.radiofrequencyareatimeslice_id = shared.radiofrequencyarea_ts.id
left join master_join mj3 on shared.radiofrequencyarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_yzhtxy on shared.radiofrequencyarea_ts.equipment_frequency_id = service_radiocommunicationchannel_pt_yzhtxy.id
left join navaids_points.specialnavigationstation_pt navaids_points_specialnavigationstation_pt_kokjig on shared.radiofrequencyarea_ts.equipment_specialnavigationstation_id = navaids_points_specialnavigationstation_pt_kokjig.id
left join surveillance.precisionapproachradar_pt surveillance_precisionapproachradar_pt_rhgdxx on shared.radiofrequencyarea_ts.equipment_precisionapproachradar_id = surveillance_precisionapproachradar_pt_rhgdxx.id
left join surveillance.secondarysurveillanceradar_pt surveillance_secondarysurveillanceradar_pt_vermvi on shared.radiofrequencyarea_ts.equipment_radar_id = surveillance_secondarysurveillanceradar_pt_vermvi.id
--object many shared.circlesector.sector - master_join
--snowflake many geometry.surface.extent - SurfacePropertyType
--snowflake many notes.note.annotation - NotePropertyType
where shared.radiofrequencyarea.feature_status = 'APPROVED'
  and shared.radiofrequencyarea_ts.feature_status = 'APPROVED'
group by
    shared.radiofrequencyarea.id,
    shared.radiofrequencyarea_ts.id,
    shared.radiofrequencyarea_tsp.id,
    shared.radiofrequencyarea.identifier,
    shared.radiofrequencyarea_ts.interpretation,
    shared.radiofrequencyarea_ts.sequence_number,
    shared.radiofrequencyarea_ts.correction_number,
    shared.radiofrequencyarea_ts.valid_time_begin,
    shared.radiofrequencyarea_ts.valid_time_end,
    shared.radiofrequencyarea_ts.feature_lifetime_begin,
    shared.radiofrequencyarea_ts.feature_lifetime_end,
    shared.radiofrequencyarea_ts.type_value,
    shared.radiofrequencyarea_ts.type_nilreason,
    shared.radiofrequencyarea_ts.anglescallop_value,
    shared.radiofrequencyarea_ts.anglescallop_nilreason,
    shared.radiofrequencyarea_ts.signaltype_value,
    shared.radiofrequencyarea_ts.signaltype_nilreason,
    service_radiocommunicationchannel_pt_yzhtxy.title,
    service_radiocommunicationchannel_pt_yzhtxy.nilreason,
    service_radiocommunicationchannel_pt_yzhtxy.href,
    navaids_points_specialnavigationstation_pt_kokjig.title,
    navaids_points_specialnavigationstation_pt_kokjig.nilreason,
    navaids_points_specialnavigationstation_pt_kokjig.href,
    surveillance_precisionapproachradar_pt_rhgdxx.title,
    surveillance_precisionapproachradar_pt_rhgdxx.nilreason,
    surveillance_precisionapproachradar_pt_rhgdxx.href,
    surveillance_secondarysurveillanceradar_pt_vermvi.title,
    surveillance_secondarysurveillanceradar_pt_vermvi.nilreason,
    surveillance_secondarysurveillanceradar_pt_vermvi.href
order by radiofrequencyarea.identifier, radiofrequencyarea_ts.sequence_number, radiofrequencyarea_ts.correction_number DESC;
create or replace view airport_heliport.road_publisher_view as
select distinct on (road.identifier,road_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.road.id,
    airport_heliport.road_ts.id as ts_id,
    airport_heliport.road_tsp.id as tsp_id,
    airport_heliport.road.identifier,
    airport_heliport.road_ts.interpretation,
    airport_heliport.road_ts.sequence_number,
    airport_heliport.road_ts.correction_number,
    airport_heliport.road_ts.valid_time_begin,
    airport_heliport.road_ts.valid_time_end,
    airport_heliport.road_ts.feature_lifetime_begin,
    airport_heliport.road_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.road_ts.designator_value as varchar), '(' || airport_heliport.road_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.road_ts.status_value as varchar), '(' || airport_heliport.road_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.road_ts.type_value as varchar), '(' || airport_heliport.road_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.road_ts.abandoned_value as varchar), '(' || airport_heliport.road_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport_airportheliport_pt_kiukme.title as varchar), '(' || airport_heliport_airportheliport_pt_kiukme.nilreason[1] || ')') AS associatedairport,
    airport_heliport_airportheliport_pt_kiukme.href AS associatedairport_href,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_jaopqq.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_jaopqq.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_jaopqq.href AS surfaceproperties_href
from airport_heliport.road 
inner join master_join mj2 on airport_heliport.road.id = mj2.source_id
inner join airport_heliport.road_tsp on mj2.target_id = airport_heliport.road_tsp.id
inner join airport_heliport.road_ts on airport_heliport.road_tsp.roadtimeslice_id = airport_heliport.road_ts.id
left join master_join mj3 on airport_heliport.road_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_kiukme on airport_heliport.road_ts.associatedairport_id = airport_heliport_airportheliport_pt_kiukme.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_jaopqq on airport_heliport.road_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_jaopqq.id
--snowflake one geometry.elevatedsurface.surfaceextent - ElevatedSurfacePropertyType
--feature many airport_heliport.aircraftstand.accessiblestand - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.road.feature_status = 'APPROVED'
  and airport_heliport.road_ts.feature_status = 'APPROVED'
group by
    airport_heliport.road.id,
    airport_heliport.road_ts.id,
    airport_heliport.road_tsp.id,
    airport_heliport.road.identifier,
    airport_heliport.road_ts.interpretation,
    airport_heliport.road_ts.sequence_number,
    airport_heliport.road_ts.correction_number,
    airport_heliport.road_ts.valid_time_begin,
    airport_heliport.road_ts.valid_time_end,
    airport_heliport.road_ts.feature_lifetime_begin,
    airport_heliport.road_ts.feature_lifetime_end,
    airport_heliport.road_ts.designator_value,
    airport_heliport.road_ts.designator_nilreason,
    airport_heliport.road_ts.status_value,
    airport_heliport.road_ts.status_nilreason,
    airport_heliport.road_ts.type_value,
    airport_heliport.road_ts.type_nilreason,
    airport_heliport.road_ts.abandoned_value,
    airport_heliport.road_ts.abandoned_nilreason,
    airport_heliport_airportheliport_pt_kiukme.title,
    airport_heliport_airportheliport_pt_kiukme.nilreason,
    airport_heliport_airportheliport_pt_kiukme.href,
    airport_heliport_surfacecharacteristics_pt_jaopqq.title,
    airport_heliport_surfacecharacteristics_pt_jaopqq.nilreason,
    airport_heliport_surfacecharacteristics_pt_jaopqq.href
order by road.identifier, road_ts.sequence_number, road_ts.correction_number DESC;
create or replace view routes.routesegment_publisher_view as
select distinct on (routesegment.identifier,routesegment_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.routesegment.id,
    routes.routesegment_ts.id as ts_id,
    routes.routesegment_tsp.id as tsp_id,
    routes.routesegment.identifier,
    routes.routesegment_ts.interpretation,
    routes.routesegment_ts.sequence_number,
    routes.routesegment_ts.correction_number,
    routes.routesegment_ts.valid_time_begin,
    routes.routesegment_ts.valid_time_end,
    routes.routesegment_ts.feature_lifetime_begin,
    routes.routesegment_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(routes.routesegment_ts.level_value as varchar), '(' || routes.routesegment_ts.level_nilreason || ')') as level,
    coalesce(cast(routes.routesegment_ts.upperlimitreference_value as varchar), '(' || routes.routesegment_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(routes.routesegment_ts.lowerlimitreference_value as varchar), '(' || routes.routesegment_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(routes.routesegment_ts.pathtype_value as varchar), '(' || routes.routesegment_ts.pathtype_nilreason || ')') as pathtype,
    coalesce(cast(routes.routesegment_ts.truetrack_value as varchar), '(' || routes.routesegment_ts.truetrack_nilreason || ')') as truetrack,
    coalesce(cast(routes.routesegment_ts.magnetictrack_value as varchar), '(' || routes.routesegment_ts.magnetictrack_nilreason || ')') as magnetictrack,
    coalesce(cast(routes.routesegment_ts.reversetruetrack_value as varchar), '(' || routes.routesegment_ts.reversetruetrack_nilreason || ')') as reversetruetrack,
    coalesce(cast(routes.routesegment_ts.reversemagnetictrack_value as varchar), '(' || routes.routesegment_ts.reversemagnetictrack_nilreason || ')') as reversemagnetictrack,
    coalesce(cast(routes.routesegment_ts.turndirection_value as varchar), '(' || routes.routesegment_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(routes.routesegment_ts.signalgap_value as varchar), '(' || routes.routesegment_ts.signalgap_nilreason || ')') as signalgap,
    coalesce(cast(routes.routesegment_ts.minimumcrossingatendreference_value as varchar), '(' || routes.routesegment_ts.minimumcrossingatendreference_nilreason || ')') as minimumcrossingatendreference,
    coalesce(cast(routes.routesegment_ts.maximumcrossingatendreference_value as varchar), '(' || routes.routesegment_ts.maximumcrossingatendreference_nilreason || ')') as maximumcrossingatendreference,
    coalesce(cast(routes.routesegment_ts.navigationtype_value as varchar), '(' || routes.routesegment_ts.navigationtype_nilreason || ')') as navigationtype,
    coalesce(cast(routes.routesegment_ts.requirednavigationperformance_value as varchar), '(' || routes.routesegment_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(routes.routesegment_ts.designatorsuffix_value as varchar), '(' || routes.routesegment_ts.designatorsuffix_nilreason || ')') as designatorsuffix,
    coalesce(cast(routes.routesegment_ts.upperlimit_value as varchar) || ' ' || routes.routesegment_ts.upperlimit_uom, '(' || routes.routesegment_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(routes.routesegment_ts.lowerlimit_value as varchar) || ' ' || routes.routesegment_ts.lowerlimit_uom, '(' || routes.routesegment_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(routes.routesegment_ts.minimumobstacleclearancealtitude_value as varchar) || ' ' || routes.routesegment_ts.minimumobstacleclearancealtitude_uom, '(' || routes.routesegment_ts.minimumobstacleclearancealtitude_nilreason || ')') as minimumobstacleclearancealtitude,
    coalesce(cast(routes.routesegment_ts.length_value as varchar) || ' ' || routes.routesegment_ts.length_uom, '(' || routes.routesegment_ts.length_nilreason || ')') as length,
    coalesce(cast(routes.routesegment_ts.widthleft_value as varchar) || ' ' || routes.routesegment_ts.widthleft_uom, '(' || routes.routesegment_ts.widthleft_nilreason || ')') as widthleft,
    coalesce(cast(routes.routesegment_ts.widthright_value as varchar) || ' ' || routes.routesegment_ts.widthright_uom, '(' || routes.routesegment_ts.widthright_nilreason || ')') as widthright,
    coalesce(cast(routes.routesegment_ts.minimumenroutealtitude_value as varchar) || ' ' || routes.routesegment_ts.minimumenroutealtitude_uom, '(' || routes.routesegment_ts.minimumenroutealtitude_nilreason || ')') as minimumenroutealtitude,
    coalesce(cast(routes.routesegment_ts.minimumcrossingatend_value as varchar) || ' ' || routes.routesegment_ts.minimumcrossingatend_uom, '(' || routes.routesegment_ts.minimumcrossingatend_nilreason || ')') as minimumcrossingatend,
    coalesce(cast(routes.routesegment_ts.maximumcrossingatend_value as varchar) || ' ' || routes.routesegment_ts.maximumcrossingatend_uom, '(' || routes.routesegment_ts.maximumcrossingatend_nilreason || ')') as maximumcrossingatend,
    coalesce(cast(navaids_points_enroutesegmentpoint_pt_wkduwj.title as varchar), '(' || navaids_points_enroutesegmentpoint_pt_wkduwj.nilreason[1] || ')') AS start,
    navaids_points_enroutesegmentpoint_pt_wkduwj.href AS start_href,
    coalesce(cast(navaids_points_enroutesegmentpoint_pt_mrvkcf.title as varchar), '(' || navaids_points_enroutesegmentpoint_pt_mrvkcf.nilreason[1] || ')') AS end,
    navaids_points_enroutesegmentpoint_pt_mrvkcf.href AS end_href,
    coalesce(cast(routes_route_pt_ezlttq.title as varchar), '(' || routes_route_pt_ezlttq.nilreason[1] || ')') AS routeformed,
    routes_route_pt_ezlttq.href AS routeformed_href,
    coalesce(cast(shared_obstacleassessmentarea_pt_clwgug.title as varchar), '(' || shared_obstacleassessmentarea_pt_clwgug.nilreason[1] || ')') AS evaluationarea,
    shared_obstacleassessmentarea_pt_clwgug.href AS evaluationarea_href
from routes.routesegment 
inner join master_join mj2 on routes.routesegment.id = mj2.source_id
inner join routes.routesegment_tsp on mj2.target_id = routes.routesegment_tsp.id
inner join routes.routesegment_ts on routes.routesegment_tsp.routesegmenttimeslice_id = routes.routesegment_ts.id
left join master_join mj3 on routes.routesegment_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.enroutesegmentpoint_pt navaids_points_enroutesegmentpoint_pt_wkduwj on routes.routesegment_ts.start_id = navaids_points_enroutesegmentpoint_pt_wkduwj.id
left join routes.route_pt routes_route_pt_ezlttq on routes.routesegment_ts.routeformed_id = routes_route_pt_ezlttq.id
left join shared.obstacleassessmentarea_pt shared_obstacleassessmentarea_pt_clwgug on routes.routesegment_ts.evaluationarea_id = shared_obstacleassessmentarea_pt_clwgug.id
--snowflake one geometry.curve.curveextent - CurvePropertyType
left join navaids_points.enroutesegmentpoint_pt navaids_points_enroutesegmentpoint_pt_mrvkcf on routes.routesegment_ts.end_id = navaids_points_enroutesegmentpoint_pt_mrvkcf.id
--object many routes.routeavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where routes.routesegment.feature_status = 'APPROVED'
  and routes.routesegment_ts.feature_status = 'APPROVED'
group by
    routes.routesegment.id,
    routes.routesegment_ts.id,
    routes.routesegment_tsp.id,
    routes.routesegment.identifier,
    routes.routesegment_ts.interpretation,
    routes.routesegment_ts.sequence_number,
    routes.routesegment_ts.correction_number,
    routes.routesegment_ts.valid_time_begin,
    routes.routesegment_ts.valid_time_end,
    routes.routesegment_ts.feature_lifetime_begin,
    routes.routesegment_ts.feature_lifetime_end,
    routes.routesegment_ts.level_value,
    routes.routesegment_ts.level_nilreason,
    routes.routesegment_ts.upperlimitreference_value,
    routes.routesegment_ts.upperlimitreference_nilreason,
    routes.routesegment_ts.lowerlimitreference_value,
    routes.routesegment_ts.lowerlimitreference_nilreason,
    routes.routesegment_ts.pathtype_value,
    routes.routesegment_ts.pathtype_nilreason,
    routes.routesegment_ts.truetrack_value,
    routes.routesegment_ts.truetrack_nilreason,
    routes.routesegment_ts.magnetictrack_value,
    routes.routesegment_ts.magnetictrack_nilreason,
    routes.routesegment_ts.reversetruetrack_value,
    routes.routesegment_ts.reversetruetrack_nilreason,
    routes.routesegment_ts.reversemagnetictrack_value,
    routes.routesegment_ts.reversemagnetictrack_nilreason,
    routes.routesegment_ts.turndirection_value,
    routes.routesegment_ts.turndirection_nilreason,
    routes.routesegment_ts.signalgap_value,
    routes.routesegment_ts.signalgap_nilreason,
    routes.routesegment_ts.minimumcrossingatendreference_value,
    routes.routesegment_ts.minimumcrossingatendreference_nilreason,
    routes.routesegment_ts.maximumcrossingatendreference_value,
    routes.routesegment_ts.maximumcrossingatendreference_nilreason,
    routes.routesegment_ts.navigationtype_value,
    routes.routesegment_ts.navigationtype_nilreason,
    routes.routesegment_ts.requirednavigationperformance_value,
    routes.routesegment_ts.requirednavigationperformance_nilreason,
    routes.routesegment_ts.designatorsuffix_value,
    routes.routesegment_ts.designatorsuffix_nilreason,
    routes.routesegment_ts.upperlimit_value,
    routes.routesegment_ts.upperlimit_uom,
    routes.routesegment_ts.upperlimit_nilreason,
    routes.routesegment_ts.lowerlimit_value,
    routes.routesegment_ts.lowerlimit_uom,
    routes.routesegment_ts.lowerlimit_nilreason,
    routes.routesegment_ts.minimumobstacleclearancealtitude_value,
    routes.routesegment_ts.minimumobstacleclearancealtitude_uom,
    routes.routesegment_ts.minimumobstacleclearancealtitude_nilreason,
    routes.routesegment_ts.length_value,
    routes.routesegment_ts.length_uom,
    routes.routesegment_ts.length_nilreason,
    routes.routesegment_ts.widthleft_value,
    routes.routesegment_ts.widthleft_uom,
    routes.routesegment_ts.widthleft_nilreason,
    routes.routesegment_ts.widthright_value,
    routes.routesegment_ts.widthright_uom,
    routes.routesegment_ts.widthright_nilreason,
    routes.routesegment_ts.minimumenroutealtitude_value,
    routes.routesegment_ts.minimumenroutealtitude_uom,
    routes.routesegment_ts.minimumenroutealtitude_nilreason,
    routes.routesegment_ts.minimumcrossingatend_value,
    routes.routesegment_ts.minimumcrossingatend_uom,
    routes.routesegment_ts.minimumcrossingatend_nilreason,
    routes.routesegment_ts.maximumcrossingatend_value,
    routes.routesegment_ts.maximumcrossingatend_uom,
    routes.routesegment_ts.maximumcrossingatend_nilreason,
    navaids_points_enroutesegmentpoint_pt_wkduwj.title,
    navaids_points_enroutesegmentpoint_pt_wkduwj.nilreason,
    navaids_points_enroutesegmentpoint_pt_wkduwj.href,
    routes_route_pt_ezlttq.title,
    routes_route_pt_ezlttq.nilreason,
    routes_route_pt_ezlttq.href,
    shared_obstacleassessmentarea_pt_clwgug.title,
    shared_obstacleassessmentarea_pt_clwgug.nilreason,
    shared_obstacleassessmentarea_pt_clwgug.href,
    navaids_points_enroutesegmentpoint_pt_mrvkcf.title,
    navaids_points_enroutesegmentpoint_pt_mrvkcf.nilreason,
    navaids_points_enroutesegmentpoint_pt_mrvkcf.href
order by routesegment.identifier, routesegment_ts.sequence_number, routesegment_ts.correction_number DESC;
create or replace view rules_procedures.rulesprocedures_publisher_view as
select distinct on (rulesprocedures.identifier,rulesprocedures_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    rules_procedures.rulesprocedures.id,
    rules_procedures.rulesprocedures_ts.id as ts_id,
    rules_procedures.rulesprocedures_tsp.id as tsp_id,
    rules_procedures.rulesprocedures.identifier,
    rules_procedures.rulesprocedures_ts.interpretation,
    rules_procedures.rulesprocedures_ts.sequence_number,
    rules_procedures.rulesprocedures_ts.correction_number,
    rules_procedures.rulesprocedures_ts.valid_time_begin,
    rules_procedures.rulesprocedures_ts.valid_time_end,
    rules_procedures.rulesprocedures_ts.feature_lifetime_begin,
    rules_procedures.rulesprocedures_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(rules_procedures.rulesprocedures_ts.category_value as varchar), '(' || rules_procedures.rulesprocedures_ts.category_nilreason || ')') as category,
    coalesce(cast(rules_procedures.rulesprocedures_ts.title_value as varchar), '(' || rules_procedures.rulesprocedures_ts.title_nilreason || ')') as title
from rules_procedures.rulesprocedures 
inner join master_join mj2 on rules_procedures.rulesprocedures.id = mj2.source_id
inner join rules_procedures.rulesprocedures_tsp on mj2.target_id = rules_procedures.rulesprocedures_tsp.id
inner join rules_procedures.rulesprocedures_ts on rules_procedures.rulesprocedures_tsp.rulesprocedurestimeslice_id = rules_procedures.rulesprocedures_ts.id
left join master_join mj3 on rules_procedures.rulesprocedures_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--feature many airport_heliport.airportheliport.affectedlocation - master_join
--feature many airspace.airspace.affectedarea - master_join
--snowflake many notes.note.annotation - NotePropertyType
where rules_procedures.rulesprocedures.feature_status = 'APPROVED'
  and rules_procedures.rulesprocedures_ts.feature_status = 'APPROVED'
group by
    rules_procedures.rulesprocedures.id,
    rules_procedures.rulesprocedures_ts.id,
    rules_procedures.rulesprocedures_tsp.id,
    rules_procedures.rulesprocedures.identifier,
    rules_procedures.rulesprocedures_ts.interpretation,
    rules_procedures.rulesprocedures_ts.sequence_number,
    rules_procedures.rulesprocedures_ts.correction_number,
    rules_procedures.rulesprocedures_ts.valid_time_begin,
    rules_procedures.rulesprocedures_ts.valid_time_end,
    rules_procedures.rulesprocedures_ts.feature_lifetime_begin,
    rules_procedures.rulesprocedures_ts.feature_lifetime_end,
    rules_procedures.rulesprocedures_ts.category_value,
    rules_procedures.rulesprocedures_ts.category_nilreason,
    rules_procedures.rulesprocedures_ts.title_value,
    rules_procedures.rulesprocedures_ts.title_nilreason
order by rulesprocedures.identifier, rulesprocedures_ts.sequence_number, rulesprocedures_ts.correction_number DESC;
create or replace view airport_heliport.runwaydirectionlightsystem_publisher_view as
select distinct on (runwaydirectionlightsystem.identifier,runwaydirectionlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaydirectionlightsystem.id,
    airport_heliport.runwaydirectionlightsystem_ts.id as ts_id,
    airport_heliport.runwaydirectionlightsystem_tsp.id as tsp_id,
    airport_heliport.runwaydirectionlightsystem.identifier,
    airport_heliport.runwaydirectionlightsystem_ts.interpretation,
    airport_heliport.runwaydirectionlightsystem_ts.sequence_number,
    airport_heliport.runwaydirectionlightsystem_ts.correction_number,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_begin,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_end,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.colour_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.position_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_runwaydirection_pt_velpvd.title as varchar), '(' || airport_heliport_runwaydirection_pt_velpvd.nilreason[1] || ')') AS associatedrunwaydirection,
    airport_heliport_runwaydirection_pt_velpvd.href AS associatedrunwaydirection_href
from airport_heliport.runwaydirectionlightsystem 
inner join master_join mj2 on airport_heliport.runwaydirectionlightsystem.id = mj2.source_id
inner join airport_heliport.runwaydirectionlightsystem_tsp on mj2.target_id = airport_heliport.runwaydirectionlightsystem_tsp.id
inner join airport_heliport.runwaydirectionlightsystem_ts on airport_heliport.runwaydirectionlightsystem_tsp.runwaydirectionlightsystemtimeslice_id = airport_heliport.runwaydirectionlightsystem_ts.id
left join master_join mj3 on airport_heliport.runwaydirectionlightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_velpvd on airport_heliport.runwaydirectionlightsystem_ts.associatedrunwaydirection_id = airport_heliport_runwaydirection_pt_velpvd.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwaydirectionlightsystem.feature_status = 'APPROVED'
  and airport_heliport.runwaydirectionlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaydirectionlightsystem.id,
    airport_heliport.runwaydirectionlightsystem_ts.id,
    airport_heliport.runwaydirectionlightsystem_tsp.id,
    airport_heliport.runwaydirectionlightsystem.identifier,
    airport_heliport.runwaydirectionlightsystem_ts.interpretation,
    airport_heliport.runwaydirectionlightsystem_ts.sequence_number,
    airport_heliport.runwaydirectionlightsystem_ts.correction_number,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_begin,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_end,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_end,
    airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_value,
    airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_value,
    airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.colour_value,
    airport_heliport.runwaydirectionlightsystem_ts.colour_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.position_value,
    airport_heliport.runwaydirectionlightsystem_ts.position_nilreason,
    airport_heliport_runwaydirection_pt_velpvd.title,
    airport_heliport_runwaydirection_pt_velpvd.nilreason,
    airport_heliport_runwaydirection_pt_velpvd.href
order by runwaydirectionlightsystem.identifier, runwaydirectionlightsystem_ts.sequence_number, runwaydirectionlightsystem_ts.correction_number DESC;
create or replace view airport_heliport.runwayprotectarealightsystem_publisher_view as
select distinct on (runwayprotectarealightsystem.identifier,runwayprotectarealightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayprotectarealightsystem.id,
    airport_heliport.runwayprotectarealightsystem_ts.id as ts_id,
    airport_heliport.runwayprotectarealightsystem_tsp.id as tsp_id,
    airport_heliport.runwayprotectarealightsystem.identifier,
    airport_heliport.runwayprotectarealightsystem_ts.interpretation,
    airport_heliport.runwayprotectarealightsystem_ts.sequence_number,
    airport_heliport.runwayprotectarealightsystem_ts.correction_number,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_begin,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_end,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.colour_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.position_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_runwayprotectarea_pt_hdrzip.title as varchar), '(' || airport_heliport_runwayprotectarea_pt_hdrzip.nilreason[1] || ')') AS lightedarea,
    airport_heliport_runwayprotectarea_pt_hdrzip.href AS lightedarea_href
from airport_heliport.runwayprotectarealightsystem 
inner join master_join mj2 on airport_heliport.runwayprotectarealightsystem.id = mj2.source_id
inner join airport_heliport.runwayprotectarealightsystem_tsp on mj2.target_id = airport_heliport.runwayprotectarealightsystem_tsp.id
inner join airport_heliport.runwayprotectarealightsystem_ts on airport_heliport.runwayprotectarealightsystem_tsp.runwayprotectarealightsystemtimeslice_id = airport_heliport.runwayprotectarealightsystem_ts.id
left join master_join mj3 on airport_heliport.runwayprotectarealightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runwayprotectarea_pt airport_heliport_runwayprotectarea_pt_hdrzip on airport_heliport.runwayprotectarealightsystem_ts.lightedarea_id = airport_heliport_runwayprotectarea_pt_hdrzip.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwayprotectarealightsystem.feature_status = 'APPROVED'
  and airport_heliport.runwayprotectarealightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayprotectarealightsystem.id,
    airport_heliport.runwayprotectarealightsystem_ts.id,
    airport_heliport.runwayprotectarealightsystem_tsp.id,
    airport_heliport.runwayprotectarealightsystem.identifier,
    airport_heliport.runwayprotectarealightsystem_ts.interpretation,
    airport_heliport.runwayprotectarealightsystem_ts.sequence_number,
    airport_heliport.runwayprotectarealightsystem_ts.correction_number,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_begin,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_end,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_end,
    airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_value,
    airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_value,
    airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.colour_value,
    airport_heliport.runwayprotectarealightsystem_ts.colour_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.position_value,
    airport_heliport.runwayprotectarealightsystem_ts.position_nilreason,
    airport_heliport_runwayprotectarea_pt_hdrzip.title,
    airport_heliport_runwayprotectarea_pt_hdrzip.nilreason,
    airport_heliport_runwayprotectarea_pt_hdrzip.href
order by runwayprotectarealightsystem.identifier, runwayprotectarealightsystem_ts.sequence_number, runwayprotectarealightsystem_ts.correction_number DESC;
create or replace view airport_heliport.runway_publisher_view as
select distinct on (runway.identifier,runway_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runway.id,
    airport_heliport.runway_ts.id as ts_id,
    airport_heliport.runway_tsp.id as tsp_id,
    airport_heliport.runway.identifier,
    airport_heliport.runway_ts.interpretation,
    airport_heliport.runway_ts.sequence_number,
    airport_heliport.runway_ts.correction_number,
    airport_heliport.runway_ts.valid_time_begin,
    airport_heliport.runway_ts.valid_time_end,
    airport_heliport.runway_ts.feature_lifetime_begin,
    airport_heliport.runway_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runway_ts.designator_value as varchar), '(' || airport_heliport.runway_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.runway_ts.type_value as varchar), '(' || airport_heliport.runway_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runway_ts.abandoned_value as varchar), '(' || airport_heliport.runway_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.runway_ts.nominallength_value as varchar) || ' ' || airport_heliport.runway_ts.nominallength_uom, '(' || airport_heliport.runway_ts.nominallength_nilreason || ')') as nominallength,
    coalesce(cast(airport_heliport.runway_ts.lengthaccuracy_value as varchar) || ' ' || airport_heliport.runway_ts.lengthaccuracy_uom, '(' || airport_heliport.runway_ts.lengthaccuracy_nilreason || ')') as lengthaccuracy,
    coalesce(cast(airport_heliport.runway_ts.nominalwidth_value as varchar) || ' ' || airport_heliport.runway_ts.nominalwidth_uom, '(' || airport_heliport.runway_ts.nominalwidth_nilreason || ')') as nominalwidth,
    coalesce(cast(airport_heliport.runway_ts.widthaccuracy_value as varchar) || ' ' || airport_heliport.runway_ts.widthaccuracy_uom, '(' || airport_heliport.runway_ts.widthaccuracy_nilreason || ')') as widthaccuracy,
    coalesce(cast(airport_heliport.runway_ts.widthshoulder_value as varchar) || ' ' || airport_heliport.runway_ts.widthshoulder_uom, '(' || airport_heliport.runway_ts.widthshoulder_nilreason || ')') as widthshoulder,
    coalesce(cast(airport_heliport.runway_ts.lengthstrip_value as varchar) || ' ' || airport_heliport.runway_ts.lengthstrip_uom, '(' || airport_heliport.runway_ts.lengthstrip_nilreason || ')') as lengthstrip,
    coalesce(cast(airport_heliport.runway_ts.widthstrip_value as varchar) || ' ' || airport_heliport.runway_ts.widthstrip_uom, '(' || airport_heliport.runway_ts.widthstrip_nilreason || ')') as widthstrip,
    coalesce(cast(airport_heliport.runway_ts.lengthoffset_value as varchar) || ' ' || airport_heliport.runway_ts.lengthoffset_uom, '(' || airport_heliport.runway_ts.lengthoffset_nilreason || ')') as lengthoffset,
    coalesce(cast(airport_heliport.runway_ts.widthoffset_value as varchar) || ' ' || airport_heliport.runway_ts.widthoffset_uom, '(' || airport_heliport.runway_ts.widthoffset_nilreason || ')') as widthoffset,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_zedikj.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_zedikj.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_zedikj.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_airportheliport_pt_hragiq.title as varchar), '(' || airport_heliport_airportheliport_pt_hragiq.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_hragiq.href AS associatedairportheliport_href
from airport_heliport.runway 
inner join master_join mj2 on airport_heliport.runway.id = mj2.source_id
inner join airport_heliport.runway_tsp on mj2.target_id = airport_heliport.runway_tsp.id
inner join airport_heliport.runway_ts on airport_heliport.runway_tsp.runwaytimeslice_id = airport_heliport.runway_ts.id
left join master_join mj3 on airport_heliport.runway_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_zedikj on airport_heliport.runway_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_zedikj.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hragiq on airport_heliport.runway_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_hragiq.id
--object many airport_heliport.runwaycontamination.overallcontaminant - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.runwaysectioncontamination.areacontaminant - master_join
where airport_heliport.runway.feature_status = 'APPROVED'
  and airport_heliport.runway_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runway.id,
    airport_heliport.runway_ts.id,
    airport_heliport.runway_tsp.id,
    airport_heliport.runway.identifier,
    airport_heliport.runway_ts.interpretation,
    airport_heliport.runway_ts.sequence_number,
    airport_heliport.runway_ts.correction_number,
    airport_heliport.runway_ts.valid_time_begin,
    airport_heliport.runway_ts.valid_time_end,
    airport_heliport.runway_ts.feature_lifetime_begin,
    airport_heliport.runway_ts.feature_lifetime_end,
    airport_heliport.runway_ts.designator_value,
    airport_heliport.runway_ts.designator_nilreason,
    airport_heliport.runway_ts.type_value,
    airport_heliport.runway_ts.type_nilreason,
    airport_heliport.runway_ts.abandoned_value,
    airport_heliport.runway_ts.abandoned_nilreason,
    airport_heliport.runway_ts.nominallength_value,
    airport_heliport.runway_ts.nominallength_uom,
    airport_heliport.runway_ts.nominallength_nilreason,
    airport_heliport.runway_ts.lengthaccuracy_value,
    airport_heliport.runway_ts.lengthaccuracy_uom,
    airport_heliport.runway_ts.lengthaccuracy_nilreason,
    airport_heliport.runway_ts.nominalwidth_value,
    airport_heliport.runway_ts.nominalwidth_uom,
    airport_heliport.runway_ts.nominalwidth_nilreason,
    airport_heliport.runway_ts.widthaccuracy_value,
    airport_heliport.runway_ts.widthaccuracy_uom,
    airport_heliport.runway_ts.widthaccuracy_nilreason,
    airport_heliport.runway_ts.widthshoulder_value,
    airport_heliport.runway_ts.widthshoulder_uom,
    airport_heliport.runway_ts.widthshoulder_nilreason,
    airport_heliport.runway_ts.lengthstrip_value,
    airport_heliport.runway_ts.lengthstrip_uom,
    airport_heliport.runway_ts.lengthstrip_nilreason,
    airport_heliport.runway_ts.widthstrip_value,
    airport_heliport.runway_ts.widthstrip_uom,
    airport_heliport.runway_ts.widthstrip_nilreason,
    airport_heliport.runway_ts.lengthoffset_value,
    airport_heliport.runway_ts.lengthoffset_uom,
    airport_heliport.runway_ts.lengthoffset_nilreason,
    airport_heliport.runway_ts.widthoffset_value,
    airport_heliport.runway_ts.widthoffset_uom,
    airport_heliport.runway_ts.widthoffset_nilreason,
    airport_heliport_surfacecharacteristics_pt_zedikj.title,
    airport_heliport_surfacecharacteristics_pt_zedikj.nilreason,
    airport_heliport_surfacecharacteristics_pt_zedikj.href,
    airport_heliport_airportheliport_pt_hragiq.title,
    airport_heliport_airportheliport_pt_hragiq.nilreason,
    airport_heliport_airportheliport_pt_hragiq.href
order by runway.identifier, runway_ts.sequence_number, runway_ts.correction_number DESC;
create or replace view airport_heliport.runwayvisualrange_publisher_view as
select distinct on (runwayvisualrange.identifier,runwayvisualrange_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayvisualrange.id,
    airport_heliport.runwayvisualrange_ts.id as ts_id,
    airport_heliport.runwayvisualrange_tsp.id as tsp_id,
    airport_heliport.runwayvisualrange.identifier,
    airport_heliport.runwayvisualrange_ts.interpretation,
    airport_heliport.runwayvisualrange_ts.sequence_number,
    airport_heliport.runwayvisualrange_ts.correction_number,
    airport_heliport.runwayvisualrange_ts.valid_time_begin,
    airport_heliport.runwayvisualrange_ts.valid_time_end,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_begin,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwayvisualrange_ts.readingposition_value as varchar), '(' || airport_heliport.runwayvisualrange_ts.readingposition_nilreason || ')') as readingposition
from airport_heliport.runwayvisualrange 
inner join master_join mj2 on airport_heliport.runwayvisualrange.id = mj2.source_id
inner join airport_heliport.runwayvisualrange_tsp on mj2.target_id = airport_heliport.runwayvisualrange_tsp.id
inner join airport_heliport.runwayvisualrange_ts on airport_heliport.runwayvisualrange_tsp.runwayvisualrangetimeslice_id = airport_heliport.runwayvisualrange_ts.id
left join master_join mj3 on airport_heliport.runwayvisualrange_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--feature many airport_heliport.runwaydirection.associatedrunwaydirection - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwayvisualrange.feature_status = 'APPROVED'
  and airport_heliport.runwayvisualrange_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayvisualrange.id,
    airport_heliport.runwayvisualrange_ts.id,
    airport_heliport.runwayvisualrange_tsp.id,
    airport_heliport.runwayvisualrange.identifier,
    airport_heliport.runwayvisualrange_ts.interpretation,
    airport_heliport.runwayvisualrange_ts.sequence_number,
    airport_heliport.runwayvisualrange_ts.correction_number,
    airport_heliport.runwayvisualrange_ts.valid_time_begin,
    airport_heliport.runwayvisualrange_ts.valid_time_end,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_begin,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_end,
    airport_heliport.runwayvisualrange_ts.readingposition_value,
    airport_heliport.runwayvisualrange_ts.readingposition_nilreason
order by runwayvisualrange.identifier, runwayvisualrange_ts.sequence_number, runwayvisualrange_ts.correction_number DESC;
create or replace view airport_heliport.seaplanerampsite_publisher_view as
select distinct on (seaplanerampsite.identifier,seaplanerampsite_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.seaplanerampsite.id,
    airport_heliport.seaplanerampsite_ts.id as ts_id,
    airport_heliport.seaplanerampsite_tsp.id as tsp_id,
    airport_heliport.seaplanerampsite.identifier,
    airport_heliport.seaplanerampsite_ts.interpretation,
    airport_heliport.seaplanerampsite_ts.sequence_number,
    airport_heliport.seaplanerampsite_ts.correction_number,
    airport_heliport.seaplanerampsite_ts.valid_time_begin,
    airport_heliport.seaplanerampsite_ts.valid_time_end,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_begin,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation
from airport_heliport.seaplanerampsite 
inner join master_join mj2 on airport_heliport.seaplanerampsite.id = mj2.source_id
inner join airport_heliport.seaplanerampsite_tsp on mj2.target_id = airport_heliport.seaplanerampsite_tsp.id
inner join airport_heliport.seaplanerampsite_ts on airport_heliport.seaplanerampsite_tsp.seaplanerampsitetimeslice_id = airport_heliport.seaplanerampsite_ts.id
left join master_join mj3 on airport_heliport.seaplanerampsite_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--snowflake one geometry.elevatedcurve.centreline - ElevatedCurvePropertyType
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.seaplanerampsite.feature_status = 'APPROVED'
  and airport_heliport.seaplanerampsite_ts.feature_status = 'APPROVED'
group by
    airport_heliport.seaplanerampsite.id,
    airport_heliport.seaplanerampsite_ts.id,
    airport_heliport.seaplanerampsite_tsp.id,
    airport_heliport.seaplanerampsite.identifier,
    airport_heliport.seaplanerampsite_ts.interpretation,
    airport_heliport.seaplanerampsite_ts.sequence_number,
    airport_heliport.seaplanerampsite_ts.correction_number,
    airport_heliport.seaplanerampsite_ts.valid_time_begin,
    airport_heliport.seaplanerampsite_ts.valid_time_end,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_begin,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_end
order by seaplanerampsite.identifier, seaplanerampsite_ts.sequence_number, seaplanerampsite_ts.correction_number DESC;
create or replace view navaids_points.specialnavigationstation_publisher_view as
select distinct on (specialnavigationstation.identifier,specialnavigationstation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.specialnavigationstation.id,
    navaids_points.specialnavigationstation_ts.id as ts_id,
    navaids_points.specialnavigationstation_tsp.id as tsp_id,
    navaids_points.specialnavigationstation.identifier,
    navaids_points.specialnavigationstation_ts.interpretation,
    navaids_points.specialnavigationstation_ts.sequence_number,
    navaids_points.specialnavigationstation_ts.correction_number,
    navaids_points.specialnavigationstation_ts.valid_time_begin,
    navaids_points.specialnavigationstation_ts.valid_time_end,
    navaids_points.specialnavigationstation_ts.feature_lifetime_begin,
    navaids_points.specialnavigationstation_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.specialnavigationstation_ts.name_value as varchar), '(' || navaids_points.specialnavigationstation_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.specialnavigationstation_ts.type_value as varchar), '(' || navaids_points.specialnavigationstation_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.specialnavigationstation_ts.emission_value as varchar), '(' || navaids_points.specialnavigationstation_ts.emission_nilreason || ')') as emission,
    coalesce(cast(navaids_points.specialnavigationstation_ts.frequency_value as varchar) || ' ' || navaids_points.specialnavigationstation_ts.frequency_uom, '(' || navaids_points.specialnavigationstation_ts.frequency_nilreason || ')') as frequency,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_wgeihv.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_wgeihv.nilreason[1] || ')') AS systemchain,
    navaids_points_specialnavigationsystem_pt_wgeihv.href AS systemchain_href,
    coalesce(cast(navaids_points_authorityforspecialnavigationstation_pt_lgowwr.title as varchar), '(' || navaids_points_authorityforspecialnavigationstation_pt_lgowwr.nilreason[1] || ')') AS responsibleorganisation,
    navaids_points_authorityforspecialnavigationstation_pt_lgowwr.href AS responsibleorganisation_href
from navaids_points.specialnavigationstation 
inner join master_join mj2 on navaids_points.specialnavigationstation.id = mj2.source_id
inner join navaids_points.specialnavigationstation_tsp on mj2.target_id = navaids_points.specialnavigationstation_tsp.id
inner join navaids_points.specialnavigationstation_ts on navaids_points.specialnavigationstation_tsp.specialnavigationstationtimeslice_id = navaids_points.specialnavigationstation_ts.id
left join master_join mj3 on navaids_points.specialnavigationstation_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_wgeihv on navaids_points.specialnavigationstation_ts.systemchain_id = navaids_points_specialnavigationsystem_pt_wgeihv.id
left join navaids_points.authorityforspecialnavigationstation_pt navaids_points_authorityforspecialnavigationstation_pt_lgowwr on navaids_points.specialnavigationstation_ts.responsibleorganisation_id = navaids_points_authorityforspecialnavigationstation_pt_lgowwr.id
--snowflake one geometry.elevatedpoint.position - ElevatedPointPropertyType
--object many navaids_points.specialnavigationstationstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.specialnavigationstation.feature_status = 'APPROVED'
  and navaids_points.specialnavigationstation_ts.feature_status = 'APPROVED'
group by
    navaids_points.specialnavigationstation.id,
    navaids_points.specialnavigationstation_ts.id,
    navaids_points.specialnavigationstation_tsp.id,
    navaids_points.specialnavigationstation.identifier,
    navaids_points.specialnavigationstation_ts.interpretation,
    navaids_points.specialnavigationstation_ts.sequence_number,
    navaids_points.specialnavigationstation_ts.correction_number,
    navaids_points.specialnavigationstation_ts.valid_time_begin,
    navaids_points.specialnavigationstation_ts.valid_time_end,
    navaids_points.specialnavigationstation_ts.feature_lifetime_begin,
    navaids_points.specialnavigationstation_ts.feature_lifetime_end,
    navaids_points.specialnavigationstation_ts.name_value,
    navaids_points.specialnavigationstation_ts.name_nilreason,
    navaids_points.specialnavigationstation_ts.type_value,
    navaids_points.specialnavigationstation_ts.type_nilreason,
    navaids_points.specialnavigationstation_ts.emission_value,
    navaids_points.specialnavigationstation_ts.emission_nilreason,
    navaids_points.specialnavigationstation_ts.frequency_value,
    navaids_points.specialnavigationstation_ts.frequency_uom,
    navaids_points.specialnavigationstation_ts.frequency_nilreason,
    navaids_points_specialnavigationsystem_pt_wgeihv.title,
    navaids_points_specialnavigationsystem_pt_wgeihv.nilreason,
    navaids_points_specialnavigationsystem_pt_wgeihv.href,
    navaids_points_authorityforspecialnavigationstation_pt_lgowwr.title,
    navaids_points_authorityforspecialnavigationstation_pt_lgowwr.nilreason,
    navaids_points_authorityforspecialnavigationstation_pt_lgowwr.href
order by specialnavigationstation.identifier, specialnavigationstation_ts.sequence_number, specialnavigationstation_ts.correction_number DESC;
create or replace view airport_heliport.taxiholdingpositionlightsystem_publisher_view as
select distinct on (taxiholdingpositionlightsystem.identifier,taxiholdingpositionlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingpositionlightsystem.id,
    airport_heliport.taxiholdingpositionlightsystem_ts.id as ts_id,
    airport_heliport.taxiholdingpositionlightsystem_tsp.id as tsp_id,
    airport_heliport.taxiholdingpositionlightsystem.identifier,
    airport_heliport.taxiholdingpositionlightsystem_ts.interpretation,
    airport_heliport.taxiholdingpositionlightsystem_ts.sequence_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.correction_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.colour_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.type_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_taxiholdingposition_pt_ybnyqu.title as varchar), '(' || airport_heliport_taxiholdingposition_pt_ybnyqu.nilreason[1] || ')') AS taxiholding,
    airport_heliport_taxiholdingposition_pt_ybnyqu.href AS taxiholding_href
from airport_heliport.taxiholdingpositionlightsystem 
inner join master_join mj2 on airport_heliport.taxiholdingpositionlightsystem.id = mj2.source_id
inner join airport_heliport.taxiholdingpositionlightsystem_tsp on mj2.target_id = airport_heliport.taxiholdingpositionlightsystem_tsp.id
inner join airport_heliport.taxiholdingpositionlightsystem_ts on airport_heliport.taxiholdingpositionlightsystem_tsp.taxiholdingpositionlightsystemtimeslice_id = airport_heliport.taxiholdingpositionlightsystem_ts.id
left join master_join mj3 on airport_heliport.taxiholdingpositionlightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.taxiholdingposition_pt airport_heliport_taxiholdingposition_pt_ybnyqu on airport_heliport.taxiholdingpositionlightsystem_ts.taxiholding_id = airport_heliport_taxiholdingposition_pt_ybnyqu.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.taxiholdingpositionlightsystem.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingpositionlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingpositionlightsystem.id,
    airport_heliport.taxiholdingpositionlightsystem_ts.id,
    airport_heliport.taxiholdingpositionlightsystem_tsp.id,
    airport_heliport.taxiholdingpositionlightsystem.identifier,
    airport_heliport.taxiholdingpositionlightsystem_ts.interpretation,
    airport_heliport.taxiholdingpositionlightsystem_ts.sequence_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.correction_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.colour_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.colour_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.type_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.type_nilreason,
    airport_heliport_taxiholdingposition_pt_ybnyqu.title,
    airport_heliport_taxiholdingposition_pt_ybnyqu.nilreason,
    airport_heliport_taxiholdingposition_pt_ybnyqu.href
order by taxiholdingpositionlightsystem.identifier, taxiholdingpositionlightsystem_ts.sequence_number, taxiholdingpositionlightsystem_ts.correction_number DESC;
create or replace view airport_heliport.taxiholdingposition_publisher_view as
select distinct on (taxiholdingposition.identifier,taxiholdingposition_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingposition.id,
    airport_heliport.taxiholdingposition_ts.id as ts_id,
    airport_heliport.taxiholdingposition_tsp.id as tsp_id,
    airport_heliport.taxiholdingposition.identifier,
    airport_heliport.taxiholdingposition_ts.interpretation,
    airport_heliport.taxiholdingposition_ts.sequence_number,
    airport_heliport.taxiholdingposition_ts.correction_number,
    airport_heliport.taxiholdingposition_ts.valid_time_begin,
    airport_heliport.taxiholdingposition_ts.valid_time_end,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiholdingposition_ts.landingcategory_value as varchar), '(' || airport_heliport.taxiholdingposition_ts.landingcategory_nilreason || ')') as landingcategory,
    coalesce(cast(airport_heliport.taxiholdingposition_ts.status_value as varchar), '(' || airport_heliport.taxiholdingposition_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport_guidanceline_pt_gxxmpw.title as varchar), '(' || airport_heliport_guidanceline_pt_gxxmpw.nilreason[1] || ')') AS associatedguidanceline,
    airport_heliport_guidanceline_pt_gxxmpw.href AS associatedguidanceline_href
from airport_heliport.taxiholdingposition 
inner join master_join mj2 on airport_heliport.taxiholdingposition.id = mj2.source_id
inner join airport_heliport.taxiholdingposition_tsp on mj2.target_id = airport_heliport.taxiholdingposition_tsp.id
inner join airport_heliport.taxiholdingposition_ts on airport_heliport.taxiholdingposition_tsp.taxiholdingpositiontimeslice_id = airport_heliport.taxiholdingposition_ts.id
left join master_join mj3 on airport_heliport.taxiholdingposition_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_gxxmpw on airport_heliport.taxiholdingposition_ts.associatedguidanceline_id = airport_heliport_guidanceline_pt_gxxmpw.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--feature many airport_heliport.runway.protectedrunway - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.taxiholdingposition.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingposition_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingposition.id,
    airport_heliport.taxiholdingposition_ts.id,
    airport_heliport.taxiholdingposition_tsp.id,
    airport_heliport.taxiholdingposition.identifier,
    airport_heliport.taxiholdingposition_ts.interpretation,
    airport_heliport.taxiholdingposition_ts.sequence_number,
    airport_heliport.taxiholdingposition_ts.correction_number,
    airport_heliport.taxiholdingposition_ts.valid_time_begin,
    airport_heliport.taxiholdingposition_ts.valid_time_end,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_end,
    airport_heliport.taxiholdingposition_ts.landingcategory_value,
    airport_heliport.taxiholdingposition_ts.landingcategory_nilreason,
    airport_heliport.taxiholdingposition_ts.status_value,
    airport_heliport.taxiholdingposition_ts.status_nilreason,
    airport_heliport_guidanceline_pt_gxxmpw.title,
    airport_heliport_guidanceline_pt_gxxmpw.nilreason,
    airport_heliport_guidanceline_pt_gxxmpw.href
order by taxiholdingposition.identifier, taxiholdingposition_ts.sequence_number, taxiholdingposition_ts.correction_number DESC;
create or replace view airport_heliport.taxiwayelement_publisher_view as
select distinct on (taxiwayelement.identifier,taxiwayelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwayelement.id,
    airport_heliport.taxiwayelement_ts.id as ts_id,
    airport_heliport.taxiwayelement_tsp.id as tsp_id,
    airport_heliport.taxiwayelement.identifier,
    airport_heliport.taxiwayelement_ts.interpretation,
    airport_heliport.taxiwayelement_ts.sequence_number,
    airport_heliport.taxiwayelement_ts.correction_number,
    airport_heliport.taxiwayelement_ts.valid_time_begin,
    airport_heliport.taxiwayelement_ts.valid_time_end,
    airport_heliport.taxiwayelement_ts.feature_lifetime_begin,
    airport_heliport.taxiwayelement_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiwayelement_ts.type_value as varchar), '(' || airport_heliport.taxiwayelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.taxiwayelement_ts.gradeseparation_value as varchar), '(' || airport_heliport.taxiwayelement_ts.gradeseparation_nilreason || ')') as gradeseparation,
    coalesce(cast(airport_heliport.taxiwayelement_ts.length_value as varchar) || ' ' || airport_heliport.taxiwayelement_ts.length_uom, '(' || airport_heliport.taxiwayelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.taxiwayelement_ts.width_value as varchar) || ' ' || airport_heliport.taxiwayelement_ts.width_uom, '(' || airport_heliport.taxiwayelement_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_rhvvhd.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_rhvvhd.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_rhvvhd.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_taxiway_pt_fwrejr.title as varchar), '(' || airport_heliport_taxiway_pt_fwrejr.nilreason[1] || ')') AS associatedtaxiway,
    airport_heliport_taxiway_pt_fwrejr.href AS associatedtaxiway_href
from airport_heliport.taxiwayelement 
inner join master_join mj2 on airport_heliport.taxiwayelement.id = mj2.source_id
inner join airport_heliport.taxiwayelement_tsp on mj2.target_id = airport_heliport.taxiwayelement_tsp.id
inner join airport_heliport.taxiwayelement_ts on airport_heliport.taxiwayelement_tsp.taxiwayelementtimeslice_id = airport_heliport.taxiwayelement_ts.id
left join master_join mj3 on airport_heliport.taxiwayelement_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_rhvvhd on airport_heliport.taxiwayelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_rhvvhd.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_fwrejr on airport_heliport.taxiwayelement_ts.associatedtaxiway_id = airport_heliport_taxiway_pt_fwrejr.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.manoeuvringareaavailability.availability - master_join
where airport_heliport.taxiwayelement.feature_status = 'APPROVED'
  and airport_heliport.taxiwayelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwayelement.id,
    airport_heliport.taxiwayelement_ts.id,
    airport_heliport.taxiwayelement_tsp.id,
    airport_heliport.taxiwayelement.identifier,
    airport_heliport.taxiwayelement_ts.interpretation,
    airport_heliport.taxiwayelement_ts.sequence_number,
    airport_heliport.taxiwayelement_ts.correction_number,
    airport_heliport.taxiwayelement_ts.valid_time_begin,
    airport_heliport.taxiwayelement_ts.valid_time_end,
    airport_heliport.taxiwayelement_ts.feature_lifetime_begin,
    airport_heliport.taxiwayelement_ts.feature_lifetime_end,
    airport_heliport.taxiwayelement_ts.type_value,
    airport_heliport.taxiwayelement_ts.type_nilreason,
    airport_heliport.taxiwayelement_ts.gradeseparation_value,
    airport_heliport.taxiwayelement_ts.gradeseparation_nilreason,
    airport_heliport.taxiwayelement_ts.length_value,
    airport_heliport.taxiwayelement_ts.length_uom,
    airport_heliport.taxiwayelement_ts.length_nilreason,
    airport_heliport.taxiwayelement_ts.width_value,
    airport_heliport.taxiwayelement_ts.width_uom,
    airport_heliport.taxiwayelement_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_pt_rhvvhd.title,
    airport_heliport_surfacecharacteristics_pt_rhvvhd.nilreason,
    airport_heliport_surfacecharacteristics_pt_rhvvhd.href,
    airport_heliport_taxiway_pt_fwrejr.title,
    airport_heliport_taxiway_pt_fwrejr.nilreason,
    airport_heliport_taxiway_pt_fwrejr.href
order by taxiwayelement.identifier, taxiwayelement_ts.sequence_number, taxiwayelement_ts.correction_number DESC;
create or replace view airport_heliport.taxiwaylightsystem_publisher_view as
select distinct on (taxiwaylightsystem.identifier,taxiwaylightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwaylightsystem.id,
    airport_heliport.taxiwaylightsystem_ts.id as ts_id,
    airport_heliport.taxiwaylightsystem_tsp.id as tsp_id,
    airport_heliport.taxiwaylightsystem.identifier,
    airport_heliport.taxiwaylightsystem_ts.interpretation,
    airport_heliport.taxiwaylightsystem_ts.sequence_number,
    airport_heliport.taxiwaylightsystem_ts.correction_number,
    airport_heliport.taxiwaylightsystem_ts.valid_time_begin,
    airport_heliport.taxiwaylightsystem_ts.valid_time_end,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.colour_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.position_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_taxiway_pt_dsxyfa.title as varchar), '(' || airport_heliport_taxiway_pt_dsxyfa.nilreason[1] || ')') AS lightedtaxiway,
    airport_heliport_taxiway_pt_dsxyfa.href AS lightedtaxiway_href
from airport_heliport.taxiwaylightsystem 
inner join master_join mj2 on airport_heliport.taxiwaylightsystem.id = mj2.source_id
inner join airport_heliport.taxiwaylightsystem_tsp on mj2.target_id = airport_heliport.taxiwaylightsystem_tsp.id
inner join airport_heliport.taxiwaylightsystem_ts on airport_heliport.taxiwaylightsystem_tsp.taxiwaylightsystemtimeslice_id = airport_heliport.taxiwaylightsystem_ts.id
left join master_join mj3 on airport_heliport.taxiwaylightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_dsxyfa on airport_heliport.taxiwaylightsystem_ts.lightedtaxiway_id = airport_heliport_taxiway_pt_dsxyfa.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.taxiwaylightsystem.feature_status = 'APPROVED'
  and airport_heliport.taxiwaylightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwaylightsystem.id,
    airport_heliport.taxiwaylightsystem_ts.id,
    airport_heliport.taxiwaylightsystem_tsp.id,
    airport_heliport.taxiwaylightsystem.identifier,
    airport_heliport.taxiwaylightsystem_ts.interpretation,
    airport_heliport.taxiwaylightsystem_ts.sequence_number,
    airport_heliport.taxiwaylightsystem_ts.correction_number,
    airport_heliport.taxiwaylightsystem_ts.valid_time_begin,
    airport_heliport.taxiwaylightsystem_ts.valid_time_end,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_end,
    airport_heliport.taxiwaylightsystem_ts.emergencylighting_value,
    airport_heliport.taxiwaylightsystem_ts.emergencylighting_nilreason,
    airport_heliport.taxiwaylightsystem_ts.intensitylevel_value,
    airport_heliport.taxiwaylightsystem_ts.intensitylevel_nilreason,
    airport_heliport.taxiwaylightsystem_ts.colour_value,
    airport_heliport.taxiwaylightsystem_ts.colour_nilreason,
    airport_heliport.taxiwaylightsystem_ts.position_value,
    airport_heliport.taxiwaylightsystem_ts.position_nilreason,
    airport_heliport_taxiway_pt_dsxyfa.title,
    airport_heliport_taxiway_pt_dsxyfa.nilreason,
    airport_heliport_taxiway_pt_dsxyfa.href
order by taxiwaylightsystem.identifier, taxiwaylightsystem_ts.sequence_number, taxiwaylightsystem_ts.correction_number DESC;
create or replace view airport_heliport.taxiway_publisher_view as
select distinct on (taxiway.identifier,taxiway_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiway.id,
    airport_heliport.taxiway_ts.id as ts_id,
    airport_heliport.taxiway_tsp.id as tsp_id,
    airport_heliport.taxiway.identifier,
    airport_heliport.taxiway_ts.interpretation,
    airport_heliport.taxiway_ts.sequence_number,
    airport_heliport.taxiway_ts.correction_number,
    airport_heliport.taxiway_ts.valid_time_begin,
    airport_heliport.taxiway_ts.valid_time_end,
    airport_heliport.taxiway_ts.feature_lifetime_begin,
    airport_heliport.taxiway_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.taxiway_ts.designator_value as varchar), '(' || airport_heliport.taxiway_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.taxiway_ts.type_value as varchar), '(' || airport_heliport.taxiway_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.taxiway_ts.abandoned_value as varchar), '(' || airport_heliport.taxiway_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.taxiway_ts.width_value as varchar) || ' ' || airport_heliport.taxiway_ts.width_uom, '(' || airport_heliport.taxiway_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.taxiway_ts.widthshoulder_value as varchar) || ' ' || airport_heliport.taxiway_ts.widthshoulder_uom, '(' || airport_heliport.taxiway_ts.widthshoulder_nilreason || ')') as widthshoulder,
    coalesce(cast(airport_heliport.taxiway_ts.length_value as varchar) || ' ' || airport_heliport.taxiway_ts.length_uom, '(' || airport_heliport.taxiway_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_uupmnz.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_uupmnz.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_uupmnz.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_airportheliport_pt_vjtywb.title as varchar), '(' || airport_heliport_airportheliport_pt_vjtywb.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_vjtywb.href AS associatedairportheliport_href
from airport_heliport.taxiway 
inner join master_join mj2 on airport_heliport.taxiway.id = mj2.source_id
inner join airport_heliport.taxiway_tsp on mj2.target_id = airport_heliport.taxiway_tsp.id
inner join airport_heliport.taxiway_ts on airport_heliport.taxiway_tsp.taxiwaytimeslice_id = airport_heliport.taxiway_ts.id
left join master_join mj3 on airport_heliport.taxiway_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_uupmnz on airport_heliport.taxiway_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_uupmnz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_vjtywb on airport_heliport.taxiway_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_vjtywb.id
--object many airport_heliport.taxiwaycontamination.contaminant - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.manoeuvringareaavailability.availability - master_join
where airport_heliport.taxiway.feature_status = 'APPROVED'
  and airport_heliport.taxiway_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiway.id,
    airport_heliport.taxiway_ts.id,
    airport_heliport.taxiway_tsp.id,
    airport_heliport.taxiway.identifier,
    airport_heliport.taxiway_ts.interpretation,
    airport_heliport.taxiway_ts.sequence_number,
    airport_heliport.taxiway_ts.correction_number,
    airport_heliport.taxiway_ts.valid_time_begin,
    airport_heliport.taxiway_ts.valid_time_end,
    airport_heliport.taxiway_ts.feature_lifetime_begin,
    airport_heliport.taxiway_ts.feature_lifetime_end,
    airport_heliport.taxiway_ts.designator_value,
    airport_heliport.taxiway_ts.designator_nilreason,
    airport_heliport.taxiway_ts.type_value,
    airport_heliport.taxiway_ts.type_nilreason,
    airport_heliport.taxiway_ts.abandoned_value,
    airport_heliport.taxiway_ts.abandoned_nilreason,
    airport_heliport.taxiway_ts.width_value,
    airport_heliport.taxiway_ts.width_uom,
    airport_heliport.taxiway_ts.width_nilreason,
    airport_heliport.taxiway_ts.widthshoulder_value,
    airport_heliport.taxiway_ts.widthshoulder_uom,
    airport_heliport.taxiway_ts.widthshoulder_nilreason,
    airport_heliport.taxiway_ts.length_value,
    airport_heliport.taxiway_ts.length_uom,
    airport_heliport.taxiway_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_pt_uupmnz.title,
    airport_heliport_surfacecharacteristics_pt_uupmnz.nilreason,
    airport_heliport_surfacecharacteristics_pt_uupmnz.href,
    airport_heliport_airportheliport_pt_vjtywb.title,
    airport_heliport_airportheliport_pt_vjtywb.nilreason,
    airport_heliport_airportheliport_pt_vjtywb.href
order by taxiway.identifier, taxiway_ts.sequence_number, taxiway_ts.correction_number DESC;
create or replace view airport_heliport.touchdownliftofflightsystem_publisher_view as
select distinct on (touchdownliftofflightsystem.identifier,touchdownliftofflightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftofflightsystem.id,
    airport_heliport.touchdownliftofflightsystem_ts.id as ts_id,
    airport_heliport.touchdownliftofflightsystem_tsp.id as tsp_id,
    airport_heliport.touchdownliftofflightsystem.identifier,
    airport_heliport.touchdownliftofflightsystem_ts.interpretation,
    airport_heliport.touchdownliftofflightsystem_ts.sequence_number,
    airport_heliport.touchdownliftofflightsystem_ts.correction_number,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_begin,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_end,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.colour_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.position_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ygdnvj.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ygdnvj.nilreason[1] || ')') AS lightedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_ygdnvj.href AS lightedtouchdownliftoff_href
from airport_heliport.touchdownliftofflightsystem 
inner join master_join mj2 on airport_heliport.touchdownliftofflightsystem.id = mj2.source_id
inner join airport_heliport.touchdownliftofflightsystem_tsp on mj2.target_id = airport_heliport.touchdownliftofflightsystem_tsp.id
inner join airport_heliport.touchdownliftofflightsystem_ts on airport_heliport.touchdownliftofflightsystem_tsp.touchdownliftofflightsystemtimeslice_id = airport_heliport.touchdownliftofflightsystem_ts.id
left join master_join mj3 on airport_heliport.touchdownliftofflightsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ygdnvj on airport_heliport.touchdownliftofflightsystem_ts.lightedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_ygdnvj.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.touchdownliftofflightsystem.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftofflightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftofflightsystem.id,
    airport_heliport.touchdownliftofflightsystem_ts.id,
    airport_heliport.touchdownliftofflightsystem_tsp.id,
    airport_heliport.touchdownliftofflightsystem.identifier,
    airport_heliport.touchdownliftofflightsystem_ts.interpretation,
    airport_heliport.touchdownliftofflightsystem_ts.sequence_number,
    airport_heliport.touchdownliftofflightsystem_ts.correction_number,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_begin,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_end,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_end,
    airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_value,
    airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_value,
    airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.colour_value,
    airport_heliport.touchdownliftofflightsystem_ts.colour_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.position_value,
    airport_heliport.touchdownliftofflightsystem_ts.position_nilreason,
    airport_heliport_touchdownliftoff_pt_ygdnvj.title,
    airport_heliport_touchdownliftoff_pt_ygdnvj.nilreason,
    airport_heliport_touchdownliftoff_pt_ygdnvj.href
order by touchdownliftofflightsystem.identifier, touchdownliftofflightsystem_ts.sequence_number, touchdownliftofflightsystem_ts.correction_number DESC;
create or replace view airport_heliport.visualglideslopeindicator_publisher_view as
select distinct on (visualglideslopeindicator.identifier,visualglideslopeindicator_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.visualglideslopeindicator.id,
    airport_heliport.visualglideslopeindicator_ts.id as ts_id,
    airport_heliport.visualglideslopeindicator_tsp.id as tsp_id,
    airport_heliport.visualglideslopeindicator.identifier,
    airport_heliport.visualglideslopeindicator_ts.interpretation,
    airport_heliport.visualglideslopeindicator_ts.sequence_number,
    airport_heliport.visualglideslopeindicator_ts.correction_number,
    airport_heliport.visualglideslopeindicator_ts.valid_time_begin,
    airport_heliport.visualglideslopeindicator_ts.valid_time_end,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_begin,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.emergencylighting_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.intensitylevel_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.colour_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.type_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.position_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.numberbox_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.numberbox_nilreason || ')') as numberbox,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.portable_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.portable_nilreason || ')') as portable,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.slopeangle_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.slopeangle_nilreason || ')') as slopeangle,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_value as varchar) || ' ' || airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_uom, '(' || airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_nilreason || ')') as minimumeyeheightoverthreshold,
    coalesce(cast(airport_heliport_runwaydirection_pt_bfkrxc.title as varchar), '(' || airport_heliport_runwaydirection_pt_bfkrxc.nilreason[1] || ')') AS runwaydirection,
    airport_heliport_runwaydirection_pt_bfkrxc.href AS runwaydirection_href
from airport_heliport.visualglideslopeindicator 
inner join master_join mj2 on airport_heliport.visualglideslopeindicator.id = mj2.source_id
inner join airport_heliport.visualglideslopeindicator_tsp on mj2.target_id = airport_heliport.visualglideslopeindicator_tsp.id
inner join airport_heliport.visualglideslopeindicator_ts on airport_heliport.visualglideslopeindicator_tsp.visualglideslopeindicatortimeslice_id = airport_heliport.visualglideslopeindicator_ts.id
left join master_join mj3 on airport_heliport.visualglideslopeindicator_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_bfkrxc on airport_heliport.visualglideslopeindicator_ts.runwaydirection_id = airport_heliport_runwaydirection_pt_bfkrxc.id
--object many shared.lightelement.element - master_join
--object many airport_heliport.groundlightingavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.visualglideslopeindicator.feature_status = 'APPROVED'
  and airport_heliport.visualglideslopeindicator_ts.feature_status = 'APPROVED'
group by
    airport_heliport.visualglideslopeindicator.id,
    airport_heliport.visualglideslopeindicator_ts.id,
    airport_heliport.visualglideslopeindicator_tsp.id,
    airport_heliport.visualglideslopeindicator.identifier,
    airport_heliport.visualglideslopeindicator_ts.interpretation,
    airport_heliport.visualglideslopeindicator_ts.sequence_number,
    airport_heliport.visualglideslopeindicator_ts.correction_number,
    airport_heliport.visualglideslopeindicator_ts.valid_time_begin,
    airport_heliport.visualglideslopeindicator_ts.valid_time_end,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_begin,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_end,
    airport_heliport.visualglideslopeindicator_ts.emergencylighting_value,
    airport_heliport.visualglideslopeindicator_ts.emergencylighting_nilreason,
    airport_heliport.visualglideslopeindicator_ts.intensitylevel_value,
    airport_heliport.visualglideslopeindicator_ts.intensitylevel_nilreason,
    airport_heliport.visualglideslopeindicator_ts.colour_value,
    airport_heliport.visualglideslopeindicator_ts.colour_nilreason,
    airport_heliport.visualglideslopeindicator_ts.type_value,
    airport_heliport.visualglideslopeindicator_ts.type_nilreason,
    airport_heliport.visualglideslopeindicator_ts.position_value,
    airport_heliport.visualglideslopeindicator_ts.position_nilreason,
    airport_heliport.visualglideslopeindicator_ts.numberbox_value,
    airport_heliport.visualglideslopeindicator_ts.numberbox_nilreason,
    airport_heliport.visualglideslopeindicator_ts.portable_value,
    airport_heliport.visualglideslopeindicator_ts.portable_nilreason,
    airport_heliport.visualglideslopeindicator_ts.slopeangle_value,
    airport_heliport.visualglideslopeindicator_ts.slopeangle_nilreason,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_value,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_uom,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_nilreason,
    airport_heliport_runwaydirection_pt_bfkrxc.title,
    airport_heliport_runwaydirection_pt_bfkrxc.nilreason,
    airport_heliport_runwaydirection_pt_bfkrxc.href
order by visualglideslopeindicator.identifier, visualglideslopeindicator_ts.sequence_number, visualglideslopeindicator_ts.correction_number DESC;
create or replace view airport_heliport.workarea_publisher_view as
select distinct on (workarea.identifier,workarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.workarea.id,
    airport_heliport.workarea_ts.id as ts_id,
    airport_heliport.workarea_tsp.id as tsp_id,
    airport_heliport.workarea.identifier,
    airport_heliport.workarea_ts.interpretation,
    airport_heliport.workarea_ts.sequence_number,
    airport_heliport.workarea_ts.correction_number,
    airport_heliport.workarea_ts.valid_time_begin,
    airport_heliport.workarea_ts.valid_time_end,
    airport_heliport.workarea_ts.feature_lifetime_begin,
    airport_heliport.workarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.workarea_ts.plannedOperational_value as varchar), '(' || airport_heliport.workarea_ts.plannedOperational_nilreason || ')') as plannedOperational,
    coalesce(cast(airport_heliport.workarea_ts.type_value as varchar), '(' || airport_heliport.workarea_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_airportheliport_pt_ehtpdh.title as varchar), '(' || airport_heliport_airportheliport_pt_ehtpdh.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ehtpdh.href AS associatedairportheliport_href
from airport_heliport.workarea 
inner join master_join mj2 on airport_heliport.workarea.id = mj2.source_id
inner join airport_heliport.workarea_tsp on mj2.target_id = airport_heliport.workarea_tsp.id
inner join airport_heliport.workarea_ts on airport_heliport.workarea_tsp.workareatimeslice_id = airport_heliport.workarea_ts.id
left join master_join mj3 on airport_heliport.workarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ehtpdh on airport_heliport.workarea_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ehtpdh.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--object many airport_heliport.workareaactivity.activation - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.workarea.feature_status = 'APPROVED'
  and airport_heliport.workarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.workarea.id,
    airport_heliport.workarea_ts.id,
    airport_heliport.workarea_tsp.id,
    airport_heliport.workarea.identifier,
    airport_heliport.workarea_ts.interpretation,
    airport_heliport.workarea_ts.sequence_number,
    airport_heliport.workarea_ts.correction_number,
    airport_heliport.workarea_ts.valid_time_begin,
    airport_heliport.workarea_ts.valid_time_end,
    airport_heliport.workarea_ts.feature_lifetime_begin,
    airport_heliport.workarea_ts.feature_lifetime_end,
    airport_heliport.workarea_ts.plannedOperational_value,
    airport_heliport.workarea_ts.plannedOperational_nilreason,
    airport_heliport.workarea_ts.type_value,
    airport_heliport.workarea_ts.type_nilreason,
    airport_heliport_airportheliport_pt_ehtpdh.title,
    airport_heliport_airportheliport_pt_ehtpdh.nilreason,
    airport_heliport_airportheliport_pt_ehtpdh.href
order by workarea.identifier, workarea_ts.sequence_number, workarea_ts.correction_number DESC;
create or replace view aerial_refuelling.aerialrefuellinganchor_view as
select
    aerial_refuelling.aerialrefuellinganchor_pt.id,
    jsonb_agg(notes.note_view.note) AS aerialrefuellinganchor_annotation,
    aerial_refuelling.aerialrefuellinganchor_pt.nilreason AS aerialrefuellinganchor_annotation,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.outboundcourse_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.outboundcourse_nilreason || ')') as outboundcourse,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_nilreason || ')') as outboundcoursetype,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.inboundcourse_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.inboundcourse_nilreason || ')') as inboundcourse,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.turndirection_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_nilreason || ')') as refuellingbaselevelreference,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.speedlimit_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.speedlimit_uom, '(' || aerial_refuelling.aerialrefuellinganchor.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.legseparation_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.legseparation_uom, '(' || aerial_refuelling.aerialrefuellinganchor.legseparation_nilreason || ')') as legseparation,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.leglength_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.leglength_uom, '(' || aerial_refuelling.aerialrefuellinganchor.leglength_nilreason || ')') as leglength,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_uom, '(' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_nilreason || ')') as refuellingbaselevel,
    jsonb_agg(shared_airspacelayer_view_ibbumg.id) AS verticalextent,
    jsonb_agg(aerial_refuelling_aerialrefuellingpoint_view_ysohmy.id) AS point
from aerial_refuelling.aerialrefuellinganchor_pt 
inner join aerial_refuelling.aerialrefuellinganchor on aerial_refuelling.aerialrefuellinganchor_pt.aerialrefuellinganchor_id = aerial_refuelling.aerialrefuellinganchor.id
left join master_join mj1 on aerial_refuelling.aerialrefuellinganchor.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.surface.extent - SurfacePropertyType
left join master_join master_join_cdqlyv on aerial_refuelling.aerialrefuellinganchor.id = master_join_cdqlyv.source_id
left join shared.airspacelayer_view shared_airspacelayer_view_ibbumg on master_join_cdqlyv.target_id = shared_airspacelayer_view_ibbumg.id
left join master_join master_join_plvlcd on aerial_refuelling.aerialrefuellinganchor.id = master_join_plvlcd.source_id
left join aerial_refuelling.aerialrefuellingpoint_view aerial_refuelling_aerialrefuellingpoint_view_ysohmy on master_join_plvlcd.target_id = aerial_refuelling_aerialrefuellingpoint_view_ysohmy.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    aerial_refuelling.aerialrefuellinganchor_pt.id,
    aerial_refuelling.aerialrefuellinganchor_pt.nilreason,
    aerial_refuelling.aerialrefuellinganchor.outboundcourse_value,
    aerial_refuelling.aerialrefuellinganchor.outboundcourse_nilreason,
    aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_value,
    aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_nilreason,
    aerial_refuelling.aerialrefuellinganchor.inboundcourse_value,
    aerial_refuelling.aerialrefuellinganchor.inboundcourse_nilreason,
    aerial_refuelling.aerialrefuellinganchor.turndirection_value,
    aerial_refuelling.aerialrefuellinganchor.turndirection_nilreason,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_value,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_nilreason,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_value,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_uom,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_nilreason,
    aerial_refuelling.aerialrefuellinganchor.legseparation_value,
    aerial_refuelling.aerialrefuellinganchor.legseparation_uom,
    aerial_refuelling.aerialrefuellinganchor.legseparation_nilreason,
    aerial_refuelling.aerialrefuellinganchor.leglength_value,
    aerial_refuelling.aerialrefuellinganchor.leglength_uom,
    aerial_refuelling.aerialrefuellinganchor.leglength_nilreason,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_value,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_uom,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_nilreason;
create or replace view aerial_refuelling.aerialrefuellingtrack_view as
select
    aerial_refuelling.aerialrefuellingtrack_pt.id,
    jsonb_agg(notes.note_view.note) AS aerialrefuellingtrack_annotation,
    aerial_refuelling.aerialrefuellingtrack_pt.nilreason AS aerialrefuellingtrack_annotation,
    jsonb_agg(aerial_refuelling_aerialrefuellingpoint_view_kkvdon.id) AS point,
    jsonb_agg(shared_airspacelayer_view_ocahvw.id) AS verticalextent
from aerial_refuelling.aerialrefuellingtrack_pt 
inner join aerial_refuelling.aerialrefuellingtrack on aerial_refuelling.aerialrefuellingtrack_pt.aerialrefuellingtrack_id = aerial_refuelling.aerialrefuellingtrack.id
left join master_join mj1 on aerial_refuelling.aerialrefuellingtrack.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.curve.extent - CurvePropertyType
left join master_join master_join_hmsdts on aerial_refuelling.aerialrefuellingtrack.id = master_join_hmsdts.source_id
left join aerial_refuelling.aerialrefuellingpoint_view aerial_refuelling_aerialrefuellingpoint_view_kkvdon on master_join_hmsdts.target_id = aerial_refuelling_aerialrefuellingpoint_view_kkvdon.id
left join master_join master_join_xqfsgm on aerial_refuelling.aerialrefuellingtrack.id = master_join_xqfsgm.source_id
left join shared.airspacelayer_view shared_airspacelayer_view_ocahvw on master_join_xqfsgm.target_id = shared_airspacelayer_view_ocahvw.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    aerial_refuelling.aerialrefuellingtrack_pt.id,
    aerial_refuelling.aerialrefuellingtrack_pt.nilreason;
create or replace view airport_heliport.airportheliportavailability_view as
select
    airport_heliport.airportheliportavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS airportheliportavailability_annotation,
    airport_heliport.airportheliportavailability_pt.nilreason AS airportheliportavailability_annotation,
    coalesce(cast(airport_heliport.airportheliportavailability.operationalstatus_value as varchar), '(' || airport_heliport.airportheliportavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.airportheliportavailability.warning_value as varchar), '(' || airport_heliport.airportheliportavailability.warning_nilreason || ')') as warning,
    jsonb_agg(shared_timesheet_view_gsxjpr.id) AS timeinterval,
    jsonb_agg(airport_heliport_airportheliportusage_view_knoysb.id) AS usage
from airport_heliport.airportheliportavailability_pt 
inner join airport_heliport.airportheliportavailability on airport_heliport.airportheliportavailability_pt.airportheliportavailability_id = airport_heliport.airportheliportavailability.id
left join master_join mj1 on airport_heliport.airportheliportavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_grndqw on airport_heliport.airportheliportavailability.id = master_join_grndqw.source_id
left join shared.timesheet_view shared_timesheet_view_gsxjpr on master_join_grndqw.target_id = shared_timesheet_view_gsxjpr.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_ipknes on airport_heliport.airportheliportavailability.id = master_join_ipknes.source_id
left join airport_heliport.airportheliportusage_view airport_heliport_airportheliportusage_view_knoysb on master_join_ipknes.target_id = airport_heliport_airportheliportusage_view_knoysb.id
group by
    airport_heliport.airportheliportavailability_pt.id,
    airport_heliport.airportheliportavailability_pt.nilreason,
    airport_heliport.airportheliportavailability.operationalstatus_value,
    airport_heliport.airportheliportavailability.operationalstatus_nilreason,
    airport_heliport.airportheliportavailability.warning_value,
    airport_heliport.airportheliportavailability.warning_nilreason;
create or replace view airport_heliport.airportheliportresponsibilityorganisation_view as
select
    airport_heliport.airportheliportresponsibilityorganisation_pt.id,
    jsonb_agg(notes.note_view.note) AS airportheliportresponsibilityorganisation_annotation,
    airport_heliport.airportheliportresponsibilityorganisation_pt.nilreason AS airportheliportresponsibilityorganisation_annotation,
    coalesce(cast(airport_heliport.airportheliportresponsibilityorganisation.role_value as varchar), '(' || airport_heliport.airportheliportresponsibilityorganisation.role_nilreason || ')') as role,
    jsonb_agg(shared_timesheet_view_fkmpzj.id) AS timeinterval
from airport_heliport.airportheliportresponsibilityorganisation_pt 
inner join airport_heliport.airportheliportresponsibilityorganisation on airport_heliport.airportheliportresponsibilityorganisation_pt.airportheliportresponsibilityorganisation_id = airport_heliport.airportheliportresponsibilityorganisation.id
left join master_join mj1 on airport_heliport.airportheliportresponsibilityorganisation.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one .organisationauthority.theorganisationauthority - OrganisationAuthorityPropertyType
left join master_join master_join_nureew on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_nureew.source_id
left join shared.timesheet_view shared_timesheet_view_fkmpzj on master_join_nureew.target_id = shared_timesheet_view_fkmpzj.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    airport_heliport.airportheliportresponsibilityorganisation_pt.id,
    airport_heliport.airportheliportresponsibilityorganisation_pt.nilreason,
    airport_heliport.airportheliportresponsibilityorganisation.role_value,
    airport_heliport.airportheliportresponsibilityorganisation.role_nilreason;
create or replace view airspace.airspacelayerclass_view as
select
    airspace.airspacelayerclass_pt.id,
    jsonb_agg(notes.note_view.note) AS airspacelayerclass_annotation,
    airspace.airspacelayerclass_pt.nilreason AS airspacelayerclass_annotation,
    coalesce(cast(airspace.airspacelayerclass.classification_value as varchar), '(' || airspace.airspacelayerclass.classification_nilreason || ')') as classification,
    jsonb_agg(shared_timesheet_view_cvuvwx.id) AS timeinterval,
    jsonb_agg(shared_airspacelayer_view_fxrwam.id) AS associatedlevels
from airspace.airspacelayerclass_pt 
inner join airspace.airspacelayerclass on airspace.airspacelayerclass_pt.airspacelayerclass_id = airspace.airspacelayerclass.id
left join master_join mj1 on airspace.airspacelayerclass.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_yiscjk on airspace.airspacelayerclass.id = master_join_yiscjk.source_id
left join shared.timesheet_view shared_timesheet_view_cvuvwx on master_join_yiscjk.target_id = shared_timesheet_view_cvuvwx.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_ijhntn on airspace.airspacelayerclass.id = master_join_ijhntn.source_id
left join shared.airspacelayer_view shared_airspacelayer_view_fxrwam on master_join_ijhntn.target_id = shared_airspacelayer_view_fxrwam.id
group by
    airspace.airspacelayerclass_pt.id,
    airspace.airspacelayerclass_pt.nilreason,
    airspace.airspacelayerclass.classification_value,
    airspace.airspacelayerclass.classification_nilreason;
create or replace view airspace.airspacevolume_view as
select
    airspace.airspacevolume_pt.id,
    jsonb_agg(notes.note_view.note) AS airspacevolume_annotation,
    airspace.airspacevolume_pt.nilreason AS airspacevolume_annotation,
    coalesce(cast(airspace.airspacevolume.upperlimitreference_value as varchar), '(' || airspace.airspacevolume.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(airspace.airspacevolume.maximumlimitreference_value as varchar), '(' || airspace.airspacevolume.maximumlimitreference_nilreason || ')') as maximumlimitreference,
    coalesce(cast(airspace.airspacevolume.lowerlimitreference_value as varchar), '(' || airspace.airspacevolume.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(airspace.airspacevolume.minimumlimitreference_value as varchar), '(' || airspace.airspacevolume.minimumlimitreference_nilreason || ')') as minimumlimitreference,
    coalesce(cast(airspace.airspacevolume.upperlimit_value as varchar) || ' ' || airspace.airspacevolume.upperlimit_uom, '(' || airspace.airspacevolume.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(airspace.airspacevolume.maximumlimit_value as varchar) || ' ' || airspace.airspacevolume.maximumlimit_uom, '(' || airspace.airspacevolume.maximumlimit_nilreason || ')') as maximumlimit,
    coalesce(cast(airspace.airspacevolume.lowerlimit_value as varchar) || ' ' || airspace.airspacevolume.lowerlimit_uom, '(' || airspace.airspacevolume.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(airspace.airspacevolume.minimumlimit_value as varchar) || ' ' || airspace.airspacevolume.minimumlimit_uom, '(' || airspace.airspacevolume.minimumlimit_nilreason || ')') as minimumlimit,
    coalesce(cast(airspace.airspacevolume.width_value as varchar) || ' ' || airspace.airspacevolume.width_uom, '(' || airspace.airspacevolume.width_nilreason || ')') as width,
    airspace_airspacevolumedependency_pt_mcogfc.id AS contributorairspace
from airspace.airspacevolume_pt 
inner join airspace.airspacevolume on airspace.airspacevolume_pt.airspacevolume_id = airspace.airspacevolume.id
left join master_join mj1 on airspace.airspacevolume.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.surface.horizontalprojection - SurfacePropertyType
--snowflake one geometry.curve.centreline - CurvePropertyType
left join airspace.airspacevolumedependency_pt airspace_airspacevolumedependency_pt_mcogfc on airspace.airspacevolume.contributorairspace_id = airspace_airspacevolumedependency_pt_mcogfc.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    airspace.airspacevolume_pt.id,
    airspace.airspacevolume_pt.nilreason,
    airspace.airspacevolume.upperlimitreference_value,
    airspace.airspacevolume.upperlimitreference_nilreason,
    airspace.airspacevolume.maximumlimitreference_value,
    airspace.airspacevolume.maximumlimitreference_nilreason,
    airspace.airspacevolume.lowerlimitreference_value,
    airspace.airspacevolume.lowerlimitreference_nilreason,
    airspace.airspacevolume.minimumlimitreference_value,
    airspace.airspacevolume.minimumlimitreference_nilreason,
    airspace.airspacevolume.upperlimit_value,
    airspace.airspacevolume.upperlimit_uom,
    airspace.airspacevolume.upperlimit_nilreason,
    airspace.airspacevolume.maximumlimit_value,
    airspace.airspacevolume.maximumlimit_uom,
    airspace.airspacevolume.maximumlimit_nilreason,
    airspace.airspacevolume.lowerlimit_value,
    airspace.airspacevolume.lowerlimit_uom,
    airspace.airspacevolume.lowerlimit_nilreason,
    airspace.airspacevolume.minimumlimit_value,
    airspace.airspacevolume.minimumlimit_uom,
    airspace.airspacevolume.minimumlimit_nilreason,
    airspace.airspacevolume.width_value,
    airspace.airspacevolume.width_uom,
    airspace.airspacevolume.width_nilreason;
create or replace view airport_heliport.apronareaavailability_view as
select
    airport_heliport.apronareaavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS apronareaavailability_annotation,
    airport_heliport.apronareaavailability_pt.nilreason AS apronareaavailability_annotation,
    coalesce(cast(airport_heliport.apronareaavailability.operationalstatus_value as varchar), '(' || airport_heliport.apronareaavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.apronareaavailability.warning_value as varchar), '(' || airport_heliport.apronareaavailability.warning_nilreason || ')') as warning,
    jsonb_agg(shared_timesheet_view_tqpdah.id) AS timeinterval,
    jsonb_agg(airport_heliport_apronareausage_view_cyvbom.id) AS usage
from airport_heliport.apronareaavailability_pt 
inner join airport_heliport.apronareaavailability on airport_heliport.apronareaavailability_pt.apronareaavailability_id = airport_heliport.apronareaavailability.id
left join master_join mj1 on airport_heliport.apronareaavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_xriwxu on airport_heliport.apronareaavailability.id = master_join_xriwxu.source_id
left join shared.timesheet_view shared_timesheet_view_tqpdah on master_join_xriwxu.target_id = shared_timesheet_view_tqpdah.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_jcemtl on airport_heliport.apronareaavailability.id = master_join_jcemtl.source_id
left join airport_heliport.apronareausage_view airport_heliport_apronareausage_view_cyvbom on master_join_jcemtl.target_id = airport_heliport_apronareausage_view_cyvbom.id
group by
    airport_heliport.apronareaavailability_pt.id,
    airport_heliport.apronareaavailability_pt.nilreason,
    airport_heliport.apronareaavailability.operationalstatus_value,
    airport_heliport.apronareaavailability.operationalstatus_nilreason,
    airport_heliport.apronareaavailability.warning_value,
    airport_heliport.apronareaavailability.warning_nilreason;

create or replace view procedure.finalprofile_view as
select
    procedure.finalprofile_pt.id,
    jsonb_agg(notes.note_view.note) AS finalprofile_annotation,
    procedure.finalprofile_pt.nilreason AS finalprofile_annotation,
    jsonb_agg(procedure_approachaltitudetable_view_qxnypm.id) AS altitude,
    jsonb_agg(procedure_approachdistancetable_view_nvlkbc.id) AS distance,
    jsonb_agg(procedure_approachtimingtable_view_jxsnwe.id) AS timing
from procedure.finalprofile_pt 
inner join procedure.finalprofile on procedure.finalprofile_pt.finalprofile_id = procedure.finalprofile.id
left join master_join mj1 on procedure.finalprofile.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_wzfokp on procedure.finalprofile.id = master_join_wzfokp.source_id
left join procedure.approachaltitudetable_view procedure_approachaltitudetable_view_qxnypm on master_join_wzfokp.target_id = procedure_approachaltitudetable_view_qxnypm.id
left join master_join master_join_fiwvbv on procedure.finalprofile.id = master_join_fiwvbv.source_id
left join procedure.approachdistancetable_view procedure_approachdistancetable_view_nvlkbc on master_join_fiwvbv.target_id = procedure_approachdistancetable_view_nvlkbc.id
left join master_join master_join_xnvylj on procedure.finalprofile.id = master_join_xnvylj.source_id
left join procedure.approachtimingtable_view procedure_approachtimingtable_view_jxsnwe on master_join_xnvylj.target_id = procedure_approachtimingtable_view_jxsnwe.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.finalprofile_pt.id,
    procedure.finalprofile_pt.nilreason;
create or replace view routes.flightconditioncombination_view as
select
    routes.flightconditioncombination_pt.id,
    jsonb_agg(notes.note_view.note) AS flightconditioncombination_annotation,
    routes.flightconditioncombination_pt.nilreason AS flightconditioncombination_annotation,
    coalesce(cast(routes.flightconditioncombination.logicaloperator_value as varchar), '(' || routes.flightconditioncombination.logicaloperator_nilreason || ')') as logicaloperator,
    jsonb_agg(shared_timesheet_view_ecotxu.id) AS timeinterval,
    jsonb_agg(routes_flightconditionelement_view_yfusjg.id) AS element
from routes.flightconditioncombination_pt 
inner join routes.flightconditioncombination on routes.flightconditioncombination_pt.flightconditioncombination_id = routes.flightconditioncombination.id
left join master_join mj1 on routes.flightconditioncombination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_ebylyk on routes.flightconditioncombination.id = master_join_ebylyk.source_id
left join shared.timesheet_view shared_timesheet_view_ecotxu on master_join_ebylyk.target_id = shared_timesheet_view_ecotxu.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_kfryud on routes.flightconditioncombination.id = master_join_kfryud.source_id
left join routes.flightconditionelement_view routes_flightconditionelement_view_yfusjg on master_join_kfryud.target_id = routes_flightconditionelement_view_yfusjg.id
group by
    routes.flightconditioncombination_pt.id,
    routes.flightconditioncombination_pt.nilreason,
    routes.flightconditioncombination.logicaloperator_value,
    routes.flightconditioncombination.logicaloperator_nilreason;
create or replace view airport_heliport.manoeuvringareaavailability_view as
select
    airport_heliport.manoeuvringareaavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS manoeuvringareaavailability_annotation,
    airport_heliport.manoeuvringareaavailability_pt.nilreason AS manoeuvringareaavailability_annotation,
    coalesce(cast(airport_heliport.manoeuvringareaavailability.operationalstatus_value as varchar), '(' || airport_heliport.manoeuvringareaavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.manoeuvringareaavailability.warning_value as varchar), '(' || airport_heliport.manoeuvringareaavailability.warning_nilreason || ')') as warning,
    jsonb_agg(shared_timesheet_view_geqjzl.id) AS timeinterval,
    jsonb_agg(airport_heliport_manoeuvringareausage_view_bqqhpy.id) AS usage
from airport_heliport.manoeuvringareaavailability_pt 
inner join airport_heliport.manoeuvringareaavailability on airport_heliport.manoeuvringareaavailability_pt.manoeuvringareaavailability_id = airport_heliport.manoeuvringareaavailability.id
left join master_join mj1 on airport_heliport.manoeuvringareaavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_tyvwfm on airport_heliport.manoeuvringareaavailability.id = master_join_tyvwfm.source_id
left join shared.timesheet_view shared_timesheet_view_geqjzl on master_join_tyvwfm.target_id = shared_timesheet_view_geqjzl.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_hsyoiw on airport_heliport.manoeuvringareaavailability.id = master_join_hsyoiw.source_id
left join airport_heliport.manoeuvringareausage_view airport_heliport_manoeuvringareausage_view_bqqhpy on master_join_hsyoiw.target_id = airport_heliport_manoeuvringareausage_view_bqqhpy.id
group by
    airport_heliport.manoeuvringareaavailability_pt.id,
    airport_heliport.manoeuvringareaavailability_pt.nilreason,
    airport_heliport.manoeuvringareaavailability.operationalstatus_value,
    airport_heliport.manoeuvringareaavailability.operationalstatus_nilreason,
    airport_heliport.manoeuvringareaavailability.warning_value,
    airport_heliport.manoeuvringareaavailability.warning_nilreason;
create or replace view airport_heliport.markingelement_view as
select
    airport_heliport.markingelement_pt.id,
    jsonb_agg(notes.note_view.note) AS markingelement_annotation,
    airport_heliport.markingelement_pt.nilreason AS markingelement_annotation,
    coalesce(cast(airport_heliport.markingelement.colour_value as varchar), '(' || airport_heliport.markingelement.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.markingelement.style_value as varchar), '(' || airport_heliport.markingelement.style_nilreason || ')') as style
from airport_heliport.markingelement_pt 
inner join airport_heliport.markingelement on airport_heliport.markingelement_pt.markingelement_id = airport_heliport.markingelement.id
left join master_join mj1 on airport_heliport.markingelement.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.elevatedsurface.extentsurfaceextent - ElevatedSurfacePropertyType
--snowflake one geometry.elevatedcurve.extentcurveextent - ElevatedCurvePropertyType
--snowflake one geometry.elevatedpoint.extentlocation - ElevatedPointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    airport_heliport.markingelement_pt.id,
    airport_heliport.markingelement_pt.nilreason,
    airport_heliport.markingelement.colour_value,
    airport_heliport.markingelement.colour_nilreason,
    airport_heliport.markingelement.style_value,
    airport_heliport.markingelement.style_nilreason;
create or replace view shared.obstruction_view as
select
    shared.obstruction_pt.id,
    jsonb_agg(notes.note_view.note) AS obstruction_annotation,
    shared.obstruction_pt.nilreason AS obstruction_annotation,
    coalesce(cast(shared.obstruction.surfacepenetration_value as varchar), '(' || shared.obstruction.surfacepenetration_nilreason || ')') as surfacepenetration,
    coalesce(cast(shared.obstruction.slopepenetration_value as varchar), '(' || shared.obstruction.slopepenetration_nilreason || ')') as slopepenetration,
    coalesce(cast(shared.obstruction.controlling_value as varchar), '(' || shared.obstruction.controlling_nilreason || ')') as controlling,
    coalesce(cast(shared.obstruction.closein_value as varchar), '(' || shared.obstruction.closein_nilreason || ')') as closein,
    coalesce(cast(shared.obstruction.requiredclearance_value as varchar) || ' ' || shared.obstruction.requiredclearance_uom, '(' || shared.obstruction.requiredclearance_nilreason || ')') as requiredclearance,
    coalesce(cast(shared.obstruction.minimumaltitude_value as varchar) || ' ' || shared.obstruction.minimumaltitude_uom, '(' || shared.obstruction.minimumaltitude_nilreason || ')') as minimumaltitude,
    coalesce(cast(obstacles_verticalstructure_pt_pnfcsk.title as varchar), '(' || obstacles_verticalstructure_pt_pnfcsk.nilreason[1] || ')') AS theverticalstructure,
    obstacles_verticalstructure_pt_pnfcsk.href AS theverticalstructure_href,
    jsonb_agg(shared_altitudeadjustment_view_trahgt.id) AS adjustment,
    jsonb_agg(shared_obstacleplacement_view_dvuusl.id) AS obstacleplacement
from shared.obstruction_pt 
inner join shared.obstruction on shared.obstruction_pt.obstruction_id = shared.obstruction.id
left join master_join mj1 on shared.obstruction.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_pnfcsk on shared.obstruction_ts.theverticalstructure_id = obstacles_verticalstructure_pt_pnfcsk.id
left join master_join master_join_eohpka on shared.obstruction.id = master_join_eohpka.source_id
left join shared.altitudeadjustment_view shared_altitudeadjustment_view_trahgt on master_join_eohpka.target_id = shared_altitudeadjustment_view_trahgt.id
left join master_join master_join_fyyjes on shared.obstruction.id = master_join_fyyjes.source_id
left join shared.obstacleplacement_view shared_obstacleplacement_view_dvuusl on master_join_fyyjes.target_id = shared_obstacleplacement_view_dvuusl.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.obstruction_pt.id,
    shared.obstruction_pt.nilreason,
    shared.obstruction.surfacepenetration_value,
    shared.obstruction.surfacepenetration_nilreason,
    shared.obstruction.slopepenetration_value,
    shared.obstruction.slopepenetration_nilreason,
    shared.obstruction.controlling_value,
    shared.obstruction.controlling_nilreason,
    shared.obstruction.closein_value,
    shared.obstruction.closein_nilreason,
    shared.obstruction.requiredclearance_value,
    shared.obstruction.requiredclearance_uom,
    shared.obstruction.requiredclearance_nilreason,
    shared.obstruction.minimumaltitude_value,
    shared.obstruction.minimumaltitude_uom,
    shared.obstruction.minimumaltitude_nilreason,
    obstacles_verticalstructure_pt_pnfcsk.title,
    obstacles_verticalstructure_pt_pnfcsk.nilreason,
    obstacles_verticalstructure_pt_pnfcsk.href;
create or replace view procedure.proceduretransition_view as
select
    procedure.proceduretransition_pt.id,
    jsonb_agg(notes.note_view.note) AS proceduretransition_annotation,
    procedure.proceduretransition_pt.nilreason AS proceduretransition_annotation,
    coalesce(cast(procedure.proceduretransition.transitionid_value as varchar), '(' || procedure.proceduretransition.transitionid_nilreason || ')') as transitionid,
    coalesce(cast(procedure.proceduretransition.type_value as varchar), '(' || procedure.proceduretransition.type_nilreason || ')') as type,
    coalesce(cast(procedure.proceduretransition.instruction_value as varchar), '(' || procedure.proceduretransition.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.proceduretransition.vectorheading_value as varchar), '(' || procedure.proceduretransition.vectorheading_nilreason || ')') as vectorheading,
    procedure_landingtakeoffareacollection_pt_yzfnxs.id AS departurerunwaytransition,
    jsonb_agg(procedure_proceduretransitionleg_view_knkiqp.id) AS transitionleg
from procedure.proceduretransition_pt 
inner join procedure.proceduretransition on procedure.proceduretransition_pt.proceduretransition_id = procedure.proceduretransition.id
left join master_join mj1 on procedure.proceduretransition.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_yzfnxs on procedure.proceduretransition.departurerunwaytransition_id = procedure_landingtakeoffareacollection_pt_yzfnxs.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join master_join master_join_tchrmf on procedure.proceduretransition.id = master_join_tchrmf.source_id
left join procedure.proceduretransitionleg_view procedure_proceduretransitionleg_view_knkiqp on master_join_tchrmf.target_id = procedure_proceduretransitionleg_view_knkiqp.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.proceduretransition_pt.id,
    procedure.proceduretransition_pt.nilreason,
    procedure.proceduretransition.transitionid_value,
    procedure.proceduretransition.transitionid_nilreason,
    procedure.proceduretransition.type_value,
    procedure.proceduretransition.type_nilreason,
    procedure.proceduretransition.instruction_value,
    procedure.proceduretransition.instruction_nilreason,
    procedure.proceduretransition.vectorheading_value,
    procedure.proceduretransition.vectorheading_nilreason;
create or replace view routes.routeavailability_view as
select
    routes.routeavailability_pt.id,
    jsonb_agg(notes.note_view.note) AS routeavailability_annotation,
    routes.routeavailability_pt.nilreason AS routeavailability_annotation,
    coalesce(cast(routes.routeavailability.direction_value as varchar), '(' || routes.routeavailability.direction_nilreason || ')') as direction,
    coalesce(cast(routes.routeavailability.cardinaldirection_value as varchar), '(' || routes.routeavailability.cardinaldirection_nilreason || ')') as cardinaldirection,
    coalesce(cast(routes.routeavailability.status_value as varchar), '(' || routes.routeavailability.status_nilreason || ')') as status,
    jsonb_agg(shared_timesheet_view_cntqgc.id) AS timeinterval,
    jsonb_agg(shared_airspacelayer_view_nwwudj.id) AS levels
from routes.routeavailability_pt 
inner join routes.routeavailability on routes.routeavailability_pt.routeavailability_id = routes.routeavailability.id
left join master_join mj1 on routes.routeavailability.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_xlwbkp on routes.routeavailability.id = master_join_xlwbkp.source_id
left join shared.timesheet_view shared_timesheet_view_cntqgc on master_join_xlwbkp.target_id = shared_timesheet_view_cntqgc.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_nhlamo on routes.routeavailability.id = master_join_nhlamo.source_id
left join shared.airspacelayer_view shared_airspacelayer_view_nwwudj on master_join_nhlamo.target_id = shared_airspacelayer_view_nwwudj.id
group by
    routes.routeavailability_pt.id,
    routes.routeavailability_pt.nilreason,
    routes.routeavailability.direction_value,
    routes.routeavailability.direction_nilreason,
    routes.routeavailability.cardinaldirection_value,
    routes.routeavailability.cardinaldirection_nilreason,
    routes.routeavailability.status_value,
    routes.routeavailability.status_nilreason;
create or replace view procedure.safealtitudeareasector_view as
select
    procedure.safealtitudeareasector_pt.id,
    jsonb_agg(notes.note_view.note) AS safealtitudeareasector_annotation,
    procedure.safealtitudeareasector_pt.nilreason AS safealtitudeareasector_annotation,
    coalesce(cast(procedure.safealtitudeareasector.bufferwidth_value as varchar) || ' ' || procedure.safealtitudeareasector.bufferwidth_uom, '(' || procedure.safealtitudeareasector.bufferwidth_nilreason || ')') as bufferwidth,
    shared_circlesector_pt_ejmmbb.id AS sectordefinition,
    jsonb_agg(shared_obstruction_view_zqzlyt.id) AS significantobstacle
from procedure.safealtitudeareasector_pt 
inner join procedure.safealtitudeareasector on procedure.safealtitudeareasector_pt.safealtitudeareasector_id = procedure.safealtitudeareasector.id
left join master_join mj1 on procedure.safealtitudeareasector.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.surface.extent - SurfacePropertyType
left join shared.circlesector_pt shared_circlesector_pt_ejmmbb on procedure.safealtitudeareasector.sectordefinition_id = shared_circlesector_pt_ejmmbb.id
left join master_join master_join_pfhbko on procedure.safealtitudeareasector.id = master_join_pfhbko.source_id
left join shared.obstruction_view shared_obstruction_view_zqzlyt on master_join_pfhbko.target_id = shared_obstruction_view_zqzlyt.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.safealtitudeareasector_pt.id,
    procedure.safealtitudeareasector_pt.nilreason,
    procedure.safealtitudeareasector.bufferwidth_value,
    procedure.safealtitudeareasector.bufferwidth_uom,
    procedure.safealtitudeareasector.bufferwidth_nilreason;
create or replace view procedure.terminalarrivalareasector_view as
select
    procedure.terminalarrivalareasector_pt.id,
    jsonb_agg(notes.note_view.note) AS terminalarrivalareasector_annotation,
    procedure.terminalarrivalareasector_pt.nilreason AS terminalarrivalareasector_annotation,
    coalesce(cast(procedure.terminalarrivalareasector.flybycode_value as varchar), '(' || procedure.terminalarrivalareasector.flybycode_nilreason || ')') as flybycode,
    coalesce(cast(procedure.terminalarrivalareasector.procedureturnrequired_value as varchar), '(' || procedure.terminalarrivalareasector.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.terminalarrivalareasector.altitudedescription_value as varchar), '(' || procedure.terminalarrivalareasector.altitudedescription_nilreason || ')') as altitudedescription,
    shared_circlesector_pt_cjjwfj.id AS sectordefinition,
    jsonb_agg(shared_obstruction_view_phnnjt.id) AS significantobstacle
from procedure.terminalarrivalareasector_pt 
inner join procedure.terminalarrivalareasector on procedure.terminalarrivalareasector_pt.terminalarrivalareasector_id = procedure.terminalarrivalareasector.id
left join master_join mj1 on procedure.terminalarrivalareasector.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join shared.circlesector_pt shared_circlesector_pt_cjjwfj on procedure.terminalarrivalareasector.sectordefinition_id = shared_circlesector_pt_cjjwfj.id
--snowflake one geometry.surface.extent - SurfacePropertyType
left join master_join master_join_bfktrt on procedure.terminalarrivalareasector.id = master_join_bfktrt.source_id
left join shared.obstruction_view shared_obstruction_view_phnnjt on master_join_bfktrt.target_id = shared_obstruction_view_phnnjt.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.terminalarrivalareasector_pt.id,
    procedure.terminalarrivalareasector_pt.nilreason,
    procedure.terminalarrivalareasector.flybycode_value,
    procedure.terminalarrivalareasector.flybycode_nilreason,
    procedure.terminalarrivalareasector.procedureturnrequired_value,
    procedure.terminalarrivalareasector.procedureturnrequired_nilreason,
    procedure.terminalarrivalareasector.altitudedescription_value,
    procedure.terminalarrivalareasector.altitudedescription_nilreason;
create or replace view airspace.airspace_publisher_view as
select distinct on (airspace.identifier,airspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.airspace.id,
    airspace.airspace_ts.id as ts_id,
    airspace.airspace_tsp.id as tsp_id,
    airspace.airspace.identifier,
    airspace.airspace_ts.interpretation,
    airspace.airspace_ts.sequence_number,
    airspace.airspace_ts.correction_number,
    airspace.airspace_ts.valid_time_begin,
    airspace.airspace_ts.valid_time_end,
    airspace.airspace_ts.feature_lifetime_begin,
    airspace.airspace_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airspace.airspace_ts.type_value as varchar), '(' || airspace.airspace_ts.type_nilreason || ')') as type,
    coalesce(cast(airspace.airspace_ts.designator_value as varchar), '(' || airspace.airspace_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airspace.airspace_ts.localtype_value as varchar), '(' || airspace.airspace_ts.localtype_nilreason || ')') as localtype,
    coalesce(cast(airspace.airspace_ts.name_value as varchar), '(' || airspace.airspace_ts.name_nilreason || ')') as name,
    coalesce(cast(airspace.airspace_ts.designatoricao_value as varchar), '(' || airspace.airspace_ts.designatoricao_nilreason || ')') as designatoricao,
    coalesce(cast(airspace.airspace_ts.controltype_value as varchar), '(' || airspace.airspace_ts.controltype_nilreason || ')') as controltype,
    coalesce(cast(airspace.airspace_ts.upperlowerseparation_value as varchar) || ' ' || airspace.airspace_ts.upperlowerseparation_uom, '(' || airspace.airspace_ts.upperlowerseparation_nilreason || ')') as upperlowerseparation,
    coalesce(cast(routes_route_pt_qmvtyw.title as varchar), '(' || routes_route_pt_qmvtyw.nilreason[1] || ')') AS protectedroute,
    routes_route_pt_qmvtyw.href AS protectedroute_href
from airspace.airspace 
inner join master_join mj2 on airspace.airspace.id = mj2.source_id
inner join airspace.airspace_tsp on mj2.target_id = airspace.airspace_tsp.id
inner join airspace.airspace_ts on airspace.airspace_tsp.airspacetimeslice_id = airspace.airspace_ts.id
left join master_join mj3 on airspace.airspace_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join routes.route_pt routes_route_pt_qmvtyw on airspace.airspace_ts.protectedroute_id = routes_route_pt_qmvtyw.id
--object many airspace.airspacelayerclass.clazz - master_join
--object many airspace.airspacegeometrycomponent.geometrycomponent - master_join
--object many airspace.airspaceactivation.activation - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airspace.airspace.feature_status = 'APPROVED'
  and airspace.airspace_ts.feature_status = 'APPROVED'
group by
    airspace.airspace.id,
    airspace.airspace_ts.id,
    airspace.airspace_tsp.id,
    airspace.airspace.identifier,
    airspace.airspace_ts.interpretation,
    airspace.airspace_ts.sequence_number,
    airspace.airspace_ts.correction_number,
    airspace.airspace_ts.valid_time_begin,
    airspace.airspace_ts.valid_time_end,
    airspace.airspace_ts.feature_lifetime_begin,
    airspace.airspace_ts.feature_lifetime_end,
    airspace.airspace_ts.type_value,
    airspace.airspace_ts.type_nilreason,
    airspace.airspace_ts.designator_value,
    airspace.airspace_ts.designator_nilreason,
    airspace.airspace_ts.localtype_value,
    airspace.airspace_ts.localtype_nilreason,
    airspace.airspace_ts.name_value,
    airspace.airspace_ts.name_nilreason,
    airspace.airspace_ts.designatoricao_value,
    airspace.airspace_ts.designatoricao_nilreason,
    airspace.airspace_ts.controltype_value,
    airspace.airspace_ts.controltype_nilreason,
    airspace.airspace_ts.upperlowerseparation_value,
    airspace.airspace_ts.upperlowerseparation_uom,
    airspace.airspace_ts.upperlowerseparation_nilreason,
    routes_route_pt_qmvtyw.title,
    routes_route_pt_qmvtyw.nilreason,
    routes_route_pt_qmvtyw.href
order by airspace.identifier, airspace_ts.sequence_number, airspace_ts.correction_number DESC;
create or replace view airport_heliport.apronelement_publisher_view as
select distinct on (apronelement.identifier,apronelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronelement.id,
    airport_heliport.apronelement_ts.id as ts_id,
    airport_heliport.apronelement_tsp.id as tsp_id,
    airport_heliport.apronelement.identifier,
    airport_heliport.apronelement_ts.interpretation,
    airport_heliport.apronelement_ts.sequence_number,
    airport_heliport.apronelement_ts.correction_number,
    airport_heliport.apronelement_ts.valid_time_begin,
    airport_heliport.apronelement_ts.valid_time_end,
    airport_heliport.apronelement_ts.feature_lifetime_begin,
    airport_heliport.apronelement_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.apronelement_ts.type_value as varchar), '(' || airport_heliport.apronelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.apronelement_ts.jetwayavailability_value as varchar), '(' || airport_heliport.apronelement_ts.jetwayavailability_nilreason || ')') as jetwayavailability,
    coalesce(cast(airport_heliport.apronelement_ts.towingavailability_value as varchar), '(' || airport_heliport.apronelement_ts.towingavailability_nilreason || ')') as towingavailability,
    coalesce(cast(airport_heliport.apronelement_ts.dockingavailability_value as varchar), '(' || airport_heliport.apronelement_ts.dockingavailability_nilreason || ')') as dockingavailability,
    coalesce(cast(airport_heliport.apronelement_ts.groundpoweravailability_value as varchar), '(' || airport_heliport.apronelement_ts.groundpoweravailability_nilreason || ')') as groundpoweravailability,
    coalesce(cast(airport_heliport.apronelement_ts.length_value as varchar) || ' ' || airport_heliport.apronelement_ts.length_uom, '(' || airport_heliport.apronelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.apronelement_ts.width_value as varchar) || ' ' || airport_heliport.apronelement_ts.width_uom, '(' || airport_heliport.apronelement_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport_apron_pt_maksgl.title as varchar), '(' || airport_heliport_apron_pt_maksgl.nilreason[1] || ')') AS associatedapron,
    airport_heliport_apron_pt_maksgl.href AS associatedapron_href,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_bfpooe.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_bfpooe.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_bfpooe.href AS surfaceproperties_href
from airport_heliport.apronelement 
inner join master_join mj2 on airport_heliport.apronelement.id = mj2.source_id
inner join airport_heliport.apronelement_tsp on mj2.target_id = airport_heliport.apronelement_tsp.id
inner join airport_heliport.apronelement_ts on airport_heliport.apronelement_tsp.apronelementtimeslice_id = airport_heliport.apronelement_ts.id
left join master_join mj3 on airport_heliport.apronelement_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_maksgl on airport_heliport.apronelement_ts.associatedapron_id = airport_heliport_apron_pt_maksgl.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_bfpooe on airport_heliport.apronelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_bfpooe.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--feature many service.airportsuppliesservice.supplyservice - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.apronareaavailability.availability - master_join
where airport_heliport.apronelement.feature_status = 'APPROVED'
  and airport_heliport.apronelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronelement.id,
    airport_heliport.apronelement_ts.id,
    airport_heliport.apronelement_tsp.id,
    airport_heliport.apronelement.identifier,
    airport_heliport.apronelement_ts.interpretation,
    airport_heliport.apronelement_ts.sequence_number,
    airport_heliport.apronelement_ts.correction_number,
    airport_heliport.apronelement_ts.valid_time_begin,
    airport_heliport.apronelement_ts.valid_time_end,
    airport_heliport.apronelement_ts.feature_lifetime_begin,
    airport_heliport.apronelement_ts.feature_lifetime_end,
    airport_heliport.apronelement_ts.type_value,
    airport_heliport.apronelement_ts.type_nilreason,
    airport_heliport.apronelement_ts.jetwayavailability_value,
    airport_heliport.apronelement_ts.jetwayavailability_nilreason,
    airport_heliport.apronelement_ts.towingavailability_value,
    airport_heliport.apronelement_ts.towingavailability_nilreason,
    airport_heliport.apronelement_ts.dockingavailability_value,
    airport_heliport.apronelement_ts.dockingavailability_nilreason,
    airport_heliport.apronelement_ts.groundpoweravailability_value,
    airport_heliport.apronelement_ts.groundpoweravailability_nilreason,
    airport_heliport.apronelement_ts.length_value,
    airport_heliport.apronelement_ts.length_uom,
    airport_heliport.apronelement_ts.length_nilreason,
    airport_heliport.apronelement_ts.width_value,
    airport_heliport.apronelement_ts.width_uom,
    airport_heliport.apronelement_ts.width_nilreason,
    airport_heliport_apron_pt_maksgl.title,
    airport_heliport_apron_pt_maksgl.nilreason,
    airport_heliport_apron_pt_maksgl.href,
    airport_heliport_surfacecharacteristics_pt_bfpooe.title,
    airport_heliport_surfacecharacteristics_pt_bfpooe.nilreason,
    airport_heliport_surfacecharacteristics_pt_bfpooe.href
order by apronelement.identifier, apronelement_ts.sequence_number, apronelement_ts.correction_number DESC;
create or replace view procedure.arrivalfeederleg_publisher_view as
select distinct on (arrivalfeederleg.identifier,arrivalfeederleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.arrivalfeederleg.id,
    procedure.arrivalfeederleg_ts.id as ts_id,
    procedure.arrivalfeederleg_tsp.id as tsp_id,
    procedure.arrivalfeederleg.identifier,
    procedure.arrivalfeederleg_ts.interpretation,
    procedure.arrivalfeederleg_ts.sequence_number,
    procedure.arrivalfeederleg_ts.correction_number,
    procedure.arrivalfeederleg_ts.valid_time_begin,
    procedure.arrivalfeederleg_ts.valid_time_end,
    procedure.arrivalfeederleg_ts.feature_lifetime_begin,
    procedure.arrivalfeederleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.arrivalfeederleg_ts.endconditiondesignator_value as varchar), '(' || procedure.arrivalfeederleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.arrivalfeederleg_ts.legpath_value as varchar), '(' || procedure.arrivalfeederleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.arrivalfeederleg_ts.legtypearinc_value as varchar), '(' || procedure.arrivalfeederleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.arrivalfeederleg_ts.course_value as varchar), '(' || procedure.arrivalfeederleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.arrivalfeederleg_ts.coursetype_value as varchar), '(' || procedure.arrivalfeederleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.arrivalfeederleg_ts.coursedirection_value as varchar), '(' || procedure.arrivalfeederleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.arrivalfeederleg_ts.turndirection_value as varchar), '(' || procedure.arrivalfeederleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedinterpretation_value as varchar), '(' || procedure.arrivalfeederleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.arrivalfeederleg_ts.bankangle_value as varchar), '(' || procedure.arrivalfeederleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.arrivalfeederleg_ts.procedureturnrequired_value as varchar), '(' || procedure.arrivalfeederleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.arrivalfeederleg_ts.upperlimitreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.lowerlimitreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.arrivalfeederleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.arrivalfeederleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.arrivalfeederleg_ts.verticalangle_value as varchar), '(' || procedure.arrivalfeederleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.arrivalfeederleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.arrivalfeederleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedlimit_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.speedlimit_uom, '(' || procedure.arrivalfeederleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.arrivalfeederleg_ts.length_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.length_uom, '(' || procedure.arrivalfeederleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.arrivalfeederleg_ts.duration_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.duration_uom, '(' || procedure.arrivalfeederleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.arrivalfeederleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.upperlimitaltitude_uom, '(' || procedure.arrivalfeederleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.arrivalfeederleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.lowerlimitaltitude_uom, '(' || procedure.arrivalfeederleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.altitudeoverrideatc_uom, '(' || procedure.arrivalfeederleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_dmfnur.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_dmfnur.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_dmfnur.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_cmektu.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_cmektu.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_cmektu.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_vjjthd.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_vjjthd.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_vjjthd.href AS arccentre_href,
    coalesce(cast(navaids_points_angleindication_pt_tlqmmv.title as varchar), '(' || navaids_points_angleindication_pt_tlqmmv.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_tlqmmv.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_qctgee.title as varchar), '(' || navaids_points_distanceindication_pt_qctgee.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_qctgee.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_dpsrmx.title as varchar), '(' || procedure_holdinguse_pt_dpsrmx.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_dpsrmx.href AS holding_href,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_mkdlnw.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_mkdlnw.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_mkdlnw.href AS approach_href
from procedure.arrivalfeederleg 
inner join master_join mj2 on procedure.arrivalfeederleg.id = mj2.source_id
inner join procedure.arrivalfeederleg_tsp on mj2.target_id = procedure.arrivalfeederleg_tsp.id
inner join procedure.arrivalfeederleg_ts on procedure.arrivalfeederleg_tsp.arrivalfeederlegtimeslice_id = procedure.arrivalfeederleg_ts.id
left join master_join mj3 on procedure.arrivalfeederleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_dmfnur on procedure.arrivalfeederleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_dmfnur.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_cmektu on procedure.arrivalfeederleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_cmektu.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_vjjthd on procedure.arrivalfeederleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_vjjthd.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_tlqmmv on procedure.arrivalfeederleg_ts.angle_id = navaids_points_angleindication_pt_tlqmmv.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_qctgee on procedure.arrivalfeederleg_ts.distance_id = navaids_points_distanceindication_pt_qctgee.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_dpsrmx on procedure.arrivalfeederleg_ts.holding_id = procedure_holdinguse_pt_dpsrmx.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_mkdlnw on procedure.arrivalfeederleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_mkdlnw.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.arrivalfeederleg.feature_status = 'APPROVED'
  and procedure.arrivalfeederleg_ts.feature_status = 'APPROVED'
group by
    procedure.arrivalfeederleg.id,
    procedure.arrivalfeederleg_ts.id,
    procedure.arrivalfeederleg_tsp.id,
    procedure.arrivalfeederleg.identifier,
    procedure.arrivalfeederleg_ts.interpretation,
    procedure.arrivalfeederleg_ts.sequence_number,
    procedure.arrivalfeederleg_ts.correction_number,
    procedure.arrivalfeederleg_ts.valid_time_begin,
    procedure.arrivalfeederleg_ts.valid_time_end,
    procedure.arrivalfeederleg_ts.feature_lifetime_begin,
    procedure.arrivalfeederleg_ts.feature_lifetime_end,
    procedure.arrivalfeederleg_ts.endconditiondesignator_value,
    procedure.arrivalfeederleg_ts.endconditiondesignator_nilreason,
    procedure.arrivalfeederleg_ts.legpath_value,
    procedure.arrivalfeederleg_ts.legpath_nilreason,
    procedure.arrivalfeederleg_ts.legtypearinc_value,
    procedure.arrivalfeederleg_ts.legtypearinc_nilreason,
    procedure.arrivalfeederleg_ts.course_value,
    procedure.arrivalfeederleg_ts.course_nilreason,
    procedure.arrivalfeederleg_ts.coursetype_value,
    procedure.arrivalfeederleg_ts.coursetype_nilreason,
    procedure.arrivalfeederleg_ts.coursedirection_value,
    procedure.arrivalfeederleg_ts.coursedirection_nilreason,
    procedure.arrivalfeederleg_ts.turndirection_value,
    procedure.arrivalfeederleg_ts.turndirection_nilreason,
    procedure.arrivalfeederleg_ts.speedreference_value,
    procedure.arrivalfeederleg_ts.speedreference_nilreason,
    procedure.arrivalfeederleg_ts.speedinterpretation_value,
    procedure.arrivalfeederleg_ts.speedinterpretation_nilreason,
    procedure.arrivalfeederleg_ts.bankangle_value,
    procedure.arrivalfeederleg_ts.bankangle_nilreason,
    procedure.arrivalfeederleg_ts.procedureturnrequired_value,
    procedure.arrivalfeederleg_ts.procedureturnrequired_nilreason,
    procedure.arrivalfeederleg_ts.upperlimitreference_value,
    procedure.arrivalfeederleg_ts.upperlimitreference_nilreason,
    procedure.arrivalfeederleg_ts.lowerlimitreference_value,
    procedure.arrivalfeederleg_ts.lowerlimitreference_nilreason,
    procedure.arrivalfeederleg_ts.altitudeinterpretation_value,
    procedure.arrivalfeederleg_ts.altitudeinterpretation_nilreason,
    procedure.arrivalfeederleg_ts.altitudeoverridereference_value,
    procedure.arrivalfeederleg_ts.altitudeoverridereference_nilreason,
    procedure.arrivalfeederleg_ts.verticalangle_value,
    procedure.arrivalfeederleg_ts.verticalangle_nilreason,
    procedure.arrivalfeederleg_ts.requirednavigationperformance_value,
    procedure.arrivalfeederleg_ts.requirednavigationperformance_nilreason,
    procedure.arrivalfeederleg_ts.speedlimit_value,
    procedure.arrivalfeederleg_ts.speedlimit_uom,
    procedure.arrivalfeederleg_ts.speedlimit_nilreason,
    procedure.arrivalfeederleg_ts.length_value,
    procedure.arrivalfeederleg_ts.length_uom,
    procedure.arrivalfeederleg_ts.length_nilreason,
    procedure.arrivalfeederleg_ts.duration_value,
    procedure.arrivalfeederleg_ts.duration_uom,
    procedure.arrivalfeederleg_ts.duration_nilreason,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_value,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_uom,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_nilreason,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_value,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_uom,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_nilreason,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_value,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_uom,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_pt_dmfnur.title,
    navaids_points_terminalsegmentpoint_pt_dmfnur.nilreason,
    navaids_points_terminalsegmentpoint_pt_dmfnur.href,
    navaids_points_terminalsegmentpoint_pt_cmektu.title,
    navaids_points_terminalsegmentpoint_pt_cmektu.nilreason,
    navaids_points_terminalsegmentpoint_pt_cmektu.href,
    navaids_points_terminalsegmentpoint_pt_vjjthd.title,
    navaids_points_terminalsegmentpoint_pt_vjjthd.nilreason,
    navaids_points_terminalsegmentpoint_pt_vjjthd.href,
    navaids_points_angleindication_pt_tlqmmv.title,
    navaids_points_angleindication_pt_tlqmmv.nilreason,
    navaids_points_angleindication_pt_tlqmmv.href,
    navaids_points_distanceindication_pt_qctgee.title,
    navaids_points_distanceindication_pt_qctgee.nilreason,
    navaids_points_distanceindication_pt_qctgee.href,
    procedure_holdinguse_pt_dpsrmx.title,
    procedure_holdinguse_pt_dpsrmx.nilreason,
    procedure_holdinguse_pt_dpsrmx.href,
    procedure_instrumentapproachprocedure_pt_mkdlnw.title,
    procedure_instrumentapproachprocedure_pt_mkdlnw.nilreason,
    procedure_instrumentapproachprocedure_pt_mkdlnw.href
order by arrivalfeederleg.identifier, arrivalfeederleg_ts.sequence_number, arrivalfeederleg_ts.correction_number DESC;
create or replace view procedure.arrivalleg_publisher_view as
select distinct on (arrivalleg.identifier,arrivalleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.arrivalleg.id,
    procedure.arrivalleg_ts.id as ts_id,
    procedure.arrivalleg_tsp.id as tsp_id,
    procedure.arrivalleg.identifier,
    procedure.arrivalleg_ts.interpretation,
    procedure.arrivalleg_ts.sequence_number,
    procedure.arrivalleg_ts.correction_number,
    procedure.arrivalleg_ts.valid_time_begin,
    procedure.arrivalleg_ts.valid_time_end,
    procedure.arrivalleg_ts.feature_lifetime_begin,
    procedure.arrivalleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.arrivalleg_ts.endconditiondesignator_value as varchar), '(' || procedure.arrivalleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.arrivalleg_ts.legpath_value as varchar), '(' || procedure.arrivalleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.arrivalleg_ts.legtypearinc_value as varchar), '(' || procedure.arrivalleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.arrivalleg_ts.course_value as varchar), '(' || procedure.arrivalleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.arrivalleg_ts.coursetype_value as varchar), '(' || procedure.arrivalleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.arrivalleg_ts.coursedirection_value as varchar), '(' || procedure.arrivalleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.arrivalleg_ts.turndirection_value as varchar), '(' || procedure.arrivalleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.arrivalleg_ts.speedreference_value as varchar), '(' || procedure.arrivalleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.arrivalleg_ts.speedinterpretation_value as varchar), '(' || procedure.arrivalleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.arrivalleg_ts.bankangle_value as varchar), '(' || procedure.arrivalleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.arrivalleg_ts.procedureturnrequired_value as varchar), '(' || procedure.arrivalleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.arrivalleg_ts.upperlimitreference_value as varchar), '(' || procedure.arrivalleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.arrivalleg_ts.lowerlimitreference_value as varchar), '(' || procedure.arrivalleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.arrivalleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.arrivalleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.arrivalleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.arrivalleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.arrivalleg_ts.verticalangle_value as varchar), '(' || procedure.arrivalleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.arrivalleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.arrivalleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.arrivalleg_ts.speedlimit_value as varchar) || ' ' || procedure.arrivalleg_ts.speedlimit_uom, '(' || procedure.arrivalleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.arrivalleg_ts.length_value as varchar) || ' ' || procedure.arrivalleg_ts.length_uom, '(' || procedure.arrivalleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.arrivalleg_ts.duration_value as varchar) || ' ' || procedure.arrivalleg_ts.duration_uom, '(' || procedure.arrivalleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.arrivalleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.arrivalleg_ts.upperlimitaltitude_uom, '(' || procedure.arrivalleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.arrivalleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.arrivalleg_ts.lowerlimitaltitude_uom, '(' || procedure.arrivalleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.arrivalleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.arrivalleg_ts.altitudeoverrideatc_uom, '(' || procedure.arrivalleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_ecwvdc.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_ecwvdc.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_ecwvdc.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_tglypq.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_tglypq.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_tglypq.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_rfgwcj.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_rfgwcj.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_rfgwcj.href AS arccentre_href,
    coalesce(cast(navaids_points_angleindication_pt_ifuwsv.title as varchar), '(' || navaids_points_angleindication_pt_ifuwsv.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_ifuwsv.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_ysmhoc.title as varchar), '(' || navaids_points_distanceindication_pt_ysmhoc.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_ysmhoc.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_bfuxrt.title as varchar), '(' || procedure_holdinguse_pt_bfuxrt.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_bfuxrt.href AS holding_href,
    coalesce(cast(procedure_standardinstrumentarrival_pt_tgtosl.title as varchar), '(' || procedure_standardinstrumentarrival_pt_tgtosl.nilreason[1] || ')') AS arrival,
    procedure_standardinstrumentarrival_pt_tgtosl.href AS arrival_href
from procedure.arrivalleg 
inner join master_join mj2 on procedure.arrivalleg.id = mj2.source_id
inner join procedure.arrivalleg_tsp on mj2.target_id = procedure.arrivalleg_tsp.id
inner join procedure.arrivalleg_ts on procedure.arrivalleg_tsp.arrivallegtimeslice_id = procedure.arrivalleg_ts.id
left join master_join mj3 on procedure.arrivalleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_ecwvdc on procedure.arrivalleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_ecwvdc.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_tglypq on procedure.arrivalleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_tglypq.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_rfgwcj on procedure.arrivalleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_rfgwcj.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_ifuwsv on procedure.arrivalleg_ts.angle_id = navaids_points_angleindication_pt_ifuwsv.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_ysmhoc on procedure.arrivalleg_ts.distance_id = navaids_points_distanceindication_pt_ysmhoc.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_bfuxrt on procedure.arrivalleg_ts.holding_id = procedure_holdinguse_pt_bfuxrt.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_tgtosl on procedure.arrivalleg_ts.arrival_id = procedure_standardinstrumentarrival_pt_tgtosl.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.arrivalleg.feature_status = 'APPROVED'
  and procedure.arrivalleg_ts.feature_status = 'APPROVED'
group by
    procedure.arrivalleg.id,
    procedure.arrivalleg_ts.id,
    procedure.arrivalleg_tsp.id,
    procedure.arrivalleg.identifier,
    procedure.arrivalleg_ts.interpretation,
    procedure.arrivalleg_ts.sequence_number,
    procedure.arrivalleg_ts.correction_number,
    procedure.arrivalleg_ts.valid_time_begin,
    procedure.arrivalleg_ts.valid_time_end,
    procedure.arrivalleg_ts.feature_lifetime_begin,
    procedure.arrivalleg_ts.feature_lifetime_end,
    procedure.arrivalleg_ts.endconditiondesignator_value,
    procedure.arrivalleg_ts.endconditiondesignator_nilreason,
    procedure.arrivalleg_ts.legpath_value,
    procedure.arrivalleg_ts.legpath_nilreason,
    procedure.arrivalleg_ts.legtypearinc_value,
    procedure.arrivalleg_ts.legtypearinc_nilreason,
    procedure.arrivalleg_ts.course_value,
    procedure.arrivalleg_ts.course_nilreason,
    procedure.arrivalleg_ts.coursetype_value,
    procedure.arrivalleg_ts.coursetype_nilreason,
    procedure.arrivalleg_ts.coursedirection_value,
    procedure.arrivalleg_ts.coursedirection_nilreason,
    procedure.arrivalleg_ts.turndirection_value,
    procedure.arrivalleg_ts.turndirection_nilreason,
    procedure.arrivalleg_ts.speedreference_value,
    procedure.arrivalleg_ts.speedreference_nilreason,
    procedure.arrivalleg_ts.speedinterpretation_value,
    procedure.arrivalleg_ts.speedinterpretation_nilreason,
    procedure.arrivalleg_ts.bankangle_value,
    procedure.arrivalleg_ts.bankangle_nilreason,
    procedure.arrivalleg_ts.procedureturnrequired_value,
    procedure.arrivalleg_ts.procedureturnrequired_nilreason,
    procedure.arrivalleg_ts.upperlimitreference_value,
    procedure.arrivalleg_ts.upperlimitreference_nilreason,
    procedure.arrivalleg_ts.lowerlimitreference_value,
    procedure.arrivalleg_ts.lowerlimitreference_nilreason,
    procedure.arrivalleg_ts.altitudeinterpretation_value,
    procedure.arrivalleg_ts.altitudeinterpretation_nilreason,
    procedure.arrivalleg_ts.altitudeoverridereference_value,
    procedure.arrivalleg_ts.altitudeoverridereference_nilreason,
    procedure.arrivalleg_ts.verticalangle_value,
    procedure.arrivalleg_ts.verticalangle_nilreason,
    procedure.arrivalleg_ts.requirednavigationperformance_value,
    procedure.arrivalleg_ts.requirednavigationperformance_nilreason,
    procedure.arrivalleg_ts.speedlimit_value,
    procedure.arrivalleg_ts.speedlimit_uom,
    procedure.arrivalleg_ts.speedlimit_nilreason,
    procedure.arrivalleg_ts.length_value,
    procedure.arrivalleg_ts.length_uom,
    procedure.arrivalleg_ts.length_nilreason,
    procedure.arrivalleg_ts.duration_value,
    procedure.arrivalleg_ts.duration_uom,
    procedure.arrivalleg_ts.duration_nilreason,
    procedure.arrivalleg_ts.upperlimitaltitude_value,
    procedure.arrivalleg_ts.upperlimitaltitude_uom,
    procedure.arrivalleg_ts.upperlimitaltitude_nilreason,
    procedure.arrivalleg_ts.lowerlimitaltitude_value,
    procedure.arrivalleg_ts.lowerlimitaltitude_uom,
    procedure.arrivalleg_ts.lowerlimitaltitude_nilreason,
    procedure.arrivalleg_ts.altitudeoverrideatc_value,
    procedure.arrivalleg_ts.altitudeoverrideatc_uom,
    procedure.arrivalleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_pt_ecwvdc.title,
    navaids_points_terminalsegmentpoint_pt_ecwvdc.nilreason,
    navaids_points_terminalsegmentpoint_pt_ecwvdc.href,
    navaids_points_terminalsegmentpoint_pt_tglypq.title,
    navaids_points_terminalsegmentpoint_pt_tglypq.nilreason,
    navaids_points_terminalsegmentpoint_pt_tglypq.href,
    navaids_points_terminalsegmentpoint_pt_rfgwcj.title,
    navaids_points_terminalsegmentpoint_pt_rfgwcj.nilreason,
    navaids_points_terminalsegmentpoint_pt_rfgwcj.href,
    navaids_points_angleindication_pt_ifuwsv.title,
    navaids_points_angleindication_pt_ifuwsv.nilreason,
    navaids_points_angleindication_pt_ifuwsv.href,
    navaids_points_distanceindication_pt_ysmhoc.title,
    navaids_points_distanceindication_pt_ysmhoc.nilreason,
    navaids_points_distanceindication_pt_ysmhoc.href,
    procedure_holdinguse_pt_bfuxrt.title,
    procedure_holdinguse_pt_bfuxrt.nilreason,
    procedure_holdinguse_pt_bfuxrt.href,
    procedure_standardinstrumentarrival_pt_tgtosl.title,
    procedure_standardinstrumentarrival_pt_tgtosl.nilreason,
    procedure_standardinstrumentarrival_pt_tgtosl.href
order by arrivalleg.identifier, arrivalleg_ts.sequence_number, arrivalleg_ts.correction_number DESC;
create or replace view public.circlingarea_publisher_view as
select distinct on (circlingarea.identifier,circlingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    public.circlingarea.id,
    public.circlingarea_ts.id as ts_id,
    public.circlingarea_tsp.id as tsp_id,
    public.circlingarea.identifier,
    public.circlingarea_ts.interpretation,
    public.circlingarea_ts.sequence_number,
    public.circlingarea_ts.correction_number,
    public.circlingarea_ts.valid_time_begin,
    public.circlingarea_ts.valid_time_end,
    public.circlingarea_ts.feature_lifetime_begin,
    public.circlingarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_weemjc.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_weemjc.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_weemjc.href AS approach_href,
    coalesce(cast(shared_aircraftcharacteristic_pt_buvoim.title as varchar), '(' || shared_aircraftcharacteristic_pt_buvoim.nilreason[1] || ')') AS aircraftcategory,
    shared_aircraftcharacteristic_pt_buvoim.href AS aircraftcategory_href
from public.circlingarea 
inner join master_join mj2 on public.circlingarea.id = mj2.source_id
inner join public.circlingarea_tsp on mj2.target_id = public.circlingarea_tsp.id
inner join public.circlingarea_ts on public.circlingarea_tsp.circlingareatimeslice_id = public.circlingarea_ts.id
left join master_join mj3 on public.circlingarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.surface.extent - SurfacePropertyType
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_weemjc on public.circlingarea_ts.approach_id = procedure_instrumentapproachprocedure_pt_weemjc.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_buvoim on public.circlingarea_ts.aircraftcategory_id = shared_aircraftcharacteristic_pt_buvoim.id
--object many procedure.approachcondition.condition - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
where public.circlingarea.feature_status = 'APPROVED'
  and public.circlingarea_ts.feature_status = 'APPROVED'
group by
    public.circlingarea.id,
    public.circlingarea_ts.id,
    public.circlingarea_tsp.id,
    public.circlingarea.identifier,
    public.circlingarea_ts.interpretation,
    public.circlingarea_ts.sequence_number,
    public.circlingarea_ts.correction_number,
    public.circlingarea_ts.valid_time_begin,
    public.circlingarea_ts.valid_time_end,
    public.circlingarea_ts.feature_lifetime_begin,
    public.circlingarea_ts.feature_lifetime_end,
    procedure_instrumentapproachprocedure_pt_weemjc.title,
    procedure_instrumentapproachprocedure_pt_weemjc.nilreason,
    procedure_instrumentapproachprocedure_pt_weemjc.href,
    shared_aircraftcharacteristic_pt_buvoim.title,
    shared_aircraftcharacteristic_pt_buvoim.nilreason,
    shared_aircraftcharacteristic_pt_buvoim.href
order by circlingarea.identifier, circlingarea_ts.sequence_number, circlingarea_ts.correction_number DESC;
create or replace view procedure.initialleg_publisher_view as
select distinct on (initialleg.identifier,initialleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.initialleg.id,
    procedure.initialleg_ts.id as ts_id,
    procedure.initialleg_tsp.id as tsp_id,
    procedure.initialleg.identifier,
    procedure.initialleg_ts.interpretation,
    procedure.initialleg_ts.sequence_number,
    procedure.initialleg_ts.correction_number,
    procedure.initialleg_ts.valid_time_begin,
    procedure.initialleg_ts.valid_time_end,
    procedure.initialleg_ts.feature_lifetime_begin,
    procedure.initialleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.initialleg_ts.endconditiondesignator_value as varchar), '(' || procedure.initialleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.initialleg_ts.legpath_value as varchar), '(' || procedure.initialleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.initialleg_ts.legtypearinc_value as varchar), '(' || procedure.initialleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.initialleg_ts.course_value as varchar), '(' || procedure.initialleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.initialleg_ts.coursetype_value as varchar), '(' || procedure.initialleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.initialleg_ts.coursedirection_value as varchar), '(' || procedure.initialleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.initialleg_ts.turndirection_value as varchar), '(' || procedure.initialleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.initialleg_ts.speedreference_value as varchar), '(' || procedure.initialleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.initialleg_ts.speedinterpretation_value as varchar), '(' || procedure.initialleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.initialleg_ts.bankangle_value as varchar), '(' || procedure.initialleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.initialleg_ts.procedureturnrequired_value as varchar), '(' || procedure.initialleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.initialleg_ts.upperlimitreference_value as varchar), '(' || procedure.initialleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.initialleg_ts.lowerlimitreference_value as varchar), '(' || procedure.initialleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.initialleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.initialleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.initialleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.initialleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.initialleg_ts.verticalangle_value as varchar), '(' || procedure.initialleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.initialleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.initialleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.initialleg_ts.speedlimit_value as varchar) || ' ' || procedure.initialleg_ts.speedlimit_uom, '(' || procedure.initialleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.initialleg_ts.length_value as varchar) || ' ' || procedure.initialleg_ts.length_uom, '(' || procedure.initialleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.initialleg_ts.duration_value as varchar) || ' ' || procedure.initialleg_ts.duration_uom, '(' || procedure.initialleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.initialleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.initialleg_ts.upperlimitaltitude_uom, '(' || procedure.initialleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.initialleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.initialleg_ts.lowerlimitaltitude_uom, '(' || procedure.initialleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.initialleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.initialleg_ts.altitudeoverrideatc_uom, '(' || procedure.initialleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_gakbwe.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_gakbwe.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_gakbwe.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_sdbbjh.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_sdbbjh.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_sdbbjh.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_hzmttr.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_hzmttr.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_hzmttr.href AS arccentre_href,
    coalesce(cast(navaids_points_angleindication_pt_fopipn.title as varchar), '(' || navaids_points_angleindication_pt_fopipn.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_fopipn.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_otwnfj.title as varchar), '(' || navaids_points_distanceindication_pt_otwnfj.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_otwnfj.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_wiufgy.title as varchar), '(' || procedure_holdinguse_pt_wiufgy.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_wiufgy.href AS holding_href,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_vceyby.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_vceyby.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_vceyby.href AS approach_href
from procedure.initialleg 
inner join master_join mj2 on procedure.initialleg.id = mj2.source_id
inner join procedure.initialleg_tsp on mj2.target_id = procedure.initialleg_tsp.id
inner join procedure.initialleg_ts on procedure.initialleg_tsp.initiallegtimeslice_id = procedure.initialleg_ts.id
left join master_join mj3 on procedure.initialleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_gakbwe on procedure.initialleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_gakbwe.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_sdbbjh on procedure.initialleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_sdbbjh.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_hzmttr on procedure.initialleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_hzmttr.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_fopipn on procedure.initialleg_ts.angle_id = navaids_points_angleindication_pt_fopipn.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_otwnfj on procedure.initialleg_ts.distance_id = navaids_points_distanceindication_pt_otwnfj.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_wiufgy on procedure.initialleg_ts.holding_id = procedure_holdinguse_pt_wiufgy.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_vceyby on procedure.initialleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_vceyby.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.initialleg.feature_status = 'APPROVED'
  and procedure.initialleg_ts.feature_status = 'APPROVED'
group by
    procedure.initialleg.id,
    procedure.initialleg_ts.id,
    procedure.initialleg_tsp.id,
    procedure.initialleg.identifier,
    procedure.initialleg_ts.interpretation,
    procedure.initialleg_ts.sequence_number,
    procedure.initialleg_ts.correction_number,
    procedure.initialleg_ts.valid_time_begin,
    procedure.initialleg_ts.valid_time_end,
    procedure.initialleg_ts.feature_lifetime_begin,
    procedure.initialleg_ts.feature_lifetime_end,
    procedure.initialleg_ts.endconditiondesignator_value,
    procedure.initialleg_ts.endconditiondesignator_nilreason,
    procedure.initialleg_ts.legpath_value,
    procedure.initialleg_ts.legpath_nilreason,
    procedure.initialleg_ts.legtypearinc_value,
    procedure.initialleg_ts.legtypearinc_nilreason,
    procedure.initialleg_ts.course_value,
    procedure.initialleg_ts.course_nilreason,
    procedure.initialleg_ts.coursetype_value,
    procedure.initialleg_ts.coursetype_nilreason,
    procedure.initialleg_ts.coursedirection_value,
    procedure.initialleg_ts.coursedirection_nilreason,
    procedure.initialleg_ts.turndirection_value,
    procedure.initialleg_ts.turndirection_nilreason,
    procedure.initialleg_ts.speedreference_value,
    procedure.initialleg_ts.speedreference_nilreason,
    procedure.initialleg_ts.speedinterpretation_value,
    procedure.initialleg_ts.speedinterpretation_nilreason,
    procedure.initialleg_ts.bankangle_value,
    procedure.initialleg_ts.bankangle_nilreason,
    procedure.initialleg_ts.procedureturnrequired_value,
    procedure.initialleg_ts.procedureturnrequired_nilreason,
    procedure.initialleg_ts.upperlimitreference_value,
    procedure.initialleg_ts.upperlimitreference_nilreason,
    procedure.initialleg_ts.lowerlimitreference_value,
    procedure.initialleg_ts.lowerlimitreference_nilreason,
    procedure.initialleg_ts.altitudeinterpretation_value,
    procedure.initialleg_ts.altitudeinterpretation_nilreason,
    procedure.initialleg_ts.altitudeoverridereference_value,
    procedure.initialleg_ts.altitudeoverridereference_nilreason,
    procedure.initialleg_ts.verticalangle_value,
    procedure.initialleg_ts.verticalangle_nilreason,
    procedure.initialleg_ts.requirednavigationperformance_value,
    procedure.initialleg_ts.requirednavigationperformance_nilreason,
    procedure.initialleg_ts.speedlimit_value,
    procedure.initialleg_ts.speedlimit_uom,
    procedure.initialleg_ts.speedlimit_nilreason,
    procedure.initialleg_ts.length_value,
    procedure.initialleg_ts.length_uom,
    procedure.initialleg_ts.length_nilreason,
    procedure.initialleg_ts.duration_value,
    procedure.initialleg_ts.duration_uom,
    procedure.initialleg_ts.duration_nilreason,
    procedure.initialleg_ts.upperlimitaltitude_value,
    procedure.initialleg_ts.upperlimitaltitude_uom,
    procedure.initialleg_ts.upperlimitaltitude_nilreason,
    procedure.initialleg_ts.lowerlimitaltitude_value,
    procedure.initialleg_ts.lowerlimitaltitude_uom,
    procedure.initialleg_ts.lowerlimitaltitude_nilreason,
    procedure.initialleg_ts.altitudeoverrideatc_value,
    procedure.initialleg_ts.altitudeoverrideatc_uom,
    procedure.initialleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_pt_gakbwe.title,
    navaids_points_terminalsegmentpoint_pt_gakbwe.nilreason,
    navaids_points_terminalsegmentpoint_pt_gakbwe.href,
    navaids_points_terminalsegmentpoint_pt_sdbbjh.title,
    navaids_points_terminalsegmentpoint_pt_sdbbjh.nilreason,
    navaids_points_terminalsegmentpoint_pt_sdbbjh.href,
    navaids_points_terminalsegmentpoint_pt_hzmttr.title,
    navaids_points_terminalsegmentpoint_pt_hzmttr.nilreason,
    navaids_points_terminalsegmentpoint_pt_hzmttr.href,
    navaids_points_angleindication_pt_fopipn.title,
    navaids_points_angleindication_pt_fopipn.nilreason,
    navaids_points_angleindication_pt_fopipn.href,
    navaids_points_distanceindication_pt_otwnfj.title,
    navaids_points_distanceindication_pt_otwnfj.nilreason,
    navaids_points_distanceindication_pt_otwnfj.href,
    procedure_holdinguse_pt_wiufgy.title,
    procedure_holdinguse_pt_wiufgy.nilreason,
    procedure_holdinguse_pt_wiufgy.href,
    procedure_instrumentapproachprocedure_pt_vceyby.title,
    procedure_instrumentapproachprocedure_pt_vceyby.nilreason,
    procedure_instrumentapproachprocedure_pt_vceyby.href
order by initialleg.identifier, initialleg_ts.sequence_number, initialleg_ts.correction_number DESC;
create or replace view procedure.intermediateleg_publisher_view as
select distinct on (intermediateleg.identifier,intermediateleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.intermediateleg.id,
    procedure.intermediateleg_ts.id as ts_id,
    procedure.intermediateleg_tsp.id as tsp_id,
    procedure.intermediateleg.identifier,
    procedure.intermediateleg_ts.interpretation,
    procedure.intermediateleg_ts.sequence_number,
    procedure.intermediateleg_ts.correction_number,
    procedure.intermediateleg_ts.valid_time_begin,
    procedure.intermediateleg_ts.valid_time_end,
    procedure.intermediateleg_ts.feature_lifetime_begin,
    procedure.intermediateleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.intermediateleg_ts.endconditiondesignator_value as varchar), '(' || procedure.intermediateleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.intermediateleg_ts.legpath_value as varchar), '(' || procedure.intermediateleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.intermediateleg_ts.legtypearinc_value as varchar), '(' || procedure.intermediateleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.intermediateleg_ts.course_value as varchar), '(' || procedure.intermediateleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.intermediateleg_ts.coursetype_value as varchar), '(' || procedure.intermediateleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.intermediateleg_ts.coursedirection_value as varchar), '(' || procedure.intermediateleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.intermediateleg_ts.turndirection_value as varchar), '(' || procedure.intermediateleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.intermediateleg_ts.speedreference_value as varchar), '(' || procedure.intermediateleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.intermediateleg_ts.speedinterpretation_value as varchar), '(' || procedure.intermediateleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.intermediateleg_ts.bankangle_value as varchar), '(' || procedure.intermediateleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.intermediateleg_ts.procedureturnrequired_value as varchar), '(' || procedure.intermediateleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.intermediateleg_ts.upperlimitreference_value as varchar), '(' || procedure.intermediateleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.intermediateleg_ts.lowerlimitreference_value as varchar), '(' || procedure.intermediateleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.intermediateleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.intermediateleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.intermediateleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.intermediateleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.intermediateleg_ts.verticalangle_value as varchar), '(' || procedure.intermediateleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.intermediateleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.intermediateleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.intermediateleg_ts.speedlimit_value as varchar) || ' ' || procedure.intermediateleg_ts.speedlimit_uom, '(' || procedure.intermediateleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.intermediateleg_ts.length_value as varchar) || ' ' || procedure.intermediateleg_ts.length_uom, '(' || procedure.intermediateleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.intermediateleg_ts.duration_value as varchar) || ' ' || procedure.intermediateleg_ts.duration_uom, '(' || procedure.intermediateleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.intermediateleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.intermediateleg_ts.upperlimitaltitude_uom, '(' || procedure.intermediateleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.intermediateleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.intermediateleg_ts.lowerlimitaltitude_uom, '(' || procedure.intermediateleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.intermediateleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.intermediateleg_ts.altitudeoverrideatc_uom, '(' || procedure.intermediateleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_vrljuw.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_vrljuw.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_vrljuw.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_yhywle.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_yhywle.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_yhywle.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_wlzqew.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_wlzqew.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_wlzqew.href AS arccentre_href,
    coalesce(cast(navaids_points_angleindication_pt_gsgebj.title as varchar), '(' || navaids_points_angleindication_pt_gsgebj.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_gsgebj.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_izechk.title as varchar), '(' || navaids_points_distanceindication_pt_izechk.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_izechk.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_srcoha.title as varchar), '(' || procedure_holdinguse_pt_srcoha.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_srcoha.href AS holding_href,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_esmgww.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_esmgww.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_esmgww.href AS approach_href
from procedure.intermediateleg 
inner join master_join mj2 on procedure.intermediateleg.id = mj2.source_id
inner join procedure.intermediateleg_tsp on mj2.target_id = procedure.intermediateleg_tsp.id
inner join procedure.intermediateleg_ts on procedure.intermediateleg_tsp.intermediatelegtimeslice_id = procedure.intermediateleg_ts.id
left join master_join mj3 on procedure.intermediateleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_vrljuw on procedure.intermediateleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_vrljuw.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_yhywle on procedure.intermediateleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_yhywle.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_wlzqew on procedure.intermediateleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_wlzqew.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_gsgebj on procedure.intermediateleg_ts.angle_id = navaids_points_angleindication_pt_gsgebj.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_izechk on procedure.intermediateleg_ts.distance_id = navaids_points_distanceindication_pt_izechk.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_srcoha on procedure.intermediateleg_ts.holding_id = procedure_holdinguse_pt_srcoha.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_esmgww on procedure.intermediateleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_esmgww.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.intermediateleg.feature_status = 'APPROVED'
  and procedure.intermediateleg_ts.feature_status = 'APPROVED'
group by
    procedure.intermediateleg.id,
    procedure.intermediateleg_ts.id,
    procedure.intermediateleg_tsp.id,
    procedure.intermediateleg.identifier,
    procedure.intermediateleg_ts.interpretation,
    procedure.intermediateleg_ts.sequence_number,
    procedure.intermediateleg_ts.correction_number,
    procedure.intermediateleg_ts.valid_time_begin,
    procedure.intermediateleg_ts.valid_time_end,
    procedure.intermediateleg_ts.feature_lifetime_begin,
    procedure.intermediateleg_ts.feature_lifetime_end,
    procedure.intermediateleg_ts.endconditiondesignator_value,
    procedure.intermediateleg_ts.endconditiondesignator_nilreason,
    procedure.intermediateleg_ts.legpath_value,
    procedure.intermediateleg_ts.legpath_nilreason,
    procedure.intermediateleg_ts.legtypearinc_value,
    procedure.intermediateleg_ts.legtypearinc_nilreason,
    procedure.intermediateleg_ts.course_value,
    procedure.intermediateleg_ts.course_nilreason,
    procedure.intermediateleg_ts.coursetype_value,
    procedure.intermediateleg_ts.coursetype_nilreason,
    procedure.intermediateleg_ts.coursedirection_value,
    procedure.intermediateleg_ts.coursedirection_nilreason,
    procedure.intermediateleg_ts.turndirection_value,
    procedure.intermediateleg_ts.turndirection_nilreason,
    procedure.intermediateleg_ts.speedreference_value,
    procedure.intermediateleg_ts.speedreference_nilreason,
    procedure.intermediateleg_ts.speedinterpretation_value,
    procedure.intermediateleg_ts.speedinterpretation_nilreason,
    procedure.intermediateleg_ts.bankangle_value,
    procedure.intermediateleg_ts.bankangle_nilreason,
    procedure.intermediateleg_ts.procedureturnrequired_value,
    procedure.intermediateleg_ts.procedureturnrequired_nilreason,
    procedure.intermediateleg_ts.upperlimitreference_value,
    procedure.intermediateleg_ts.upperlimitreference_nilreason,
    procedure.intermediateleg_ts.lowerlimitreference_value,
    procedure.intermediateleg_ts.lowerlimitreference_nilreason,
    procedure.intermediateleg_ts.altitudeinterpretation_value,
    procedure.intermediateleg_ts.altitudeinterpretation_nilreason,
    procedure.intermediateleg_ts.altitudeoverridereference_value,
    procedure.intermediateleg_ts.altitudeoverridereference_nilreason,
    procedure.intermediateleg_ts.verticalangle_value,
    procedure.intermediateleg_ts.verticalangle_nilreason,
    procedure.intermediateleg_ts.requirednavigationperformance_value,
    procedure.intermediateleg_ts.requirednavigationperformance_nilreason,
    procedure.intermediateleg_ts.speedlimit_value,
    procedure.intermediateleg_ts.speedlimit_uom,
    procedure.intermediateleg_ts.speedlimit_nilreason,
    procedure.intermediateleg_ts.length_value,
    procedure.intermediateleg_ts.length_uom,
    procedure.intermediateleg_ts.length_nilreason,
    procedure.intermediateleg_ts.duration_value,
    procedure.intermediateleg_ts.duration_uom,
    procedure.intermediateleg_ts.duration_nilreason,
    procedure.intermediateleg_ts.upperlimitaltitude_value,
    procedure.intermediateleg_ts.upperlimitaltitude_uom,
    procedure.intermediateleg_ts.upperlimitaltitude_nilreason,
    procedure.intermediateleg_ts.lowerlimitaltitude_value,
    procedure.intermediateleg_ts.lowerlimitaltitude_uom,
    procedure.intermediateleg_ts.lowerlimitaltitude_nilreason,
    procedure.intermediateleg_ts.altitudeoverrideatc_value,
    procedure.intermediateleg_ts.altitudeoverrideatc_uom,
    procedure.intermediateleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_pt_vrljuw.title,
    navaids_points_terminalsegmentpoint_pt_vrljuw.nilreason,
    navaids_points_terminalsegmentpoint_pt_vrljuw.href,
    navaids_points_terminalsegmentpoint_pt_yhywle.title,
    navaids_points_terminalsegmentpoint_pt_yhywle.nilreason,
    navaids_points_terminalsegmentpoint_pt_yhywle.href,
    navaids_points_terminalsegmentpoint_pt_wlzqew.title,
    navaids_points_terminalsegmentpoint_pt_wlzqew.nilreason,
    navaids_points_terminalsegmentpoint_pt_wlzqew.href,
    navaids_points_angleindication_pt_gsgebj.title,
    navaids_points_angleindication_pt_gsgebj.nilreason,
    navaids_points_angleindication_pt_gsgebj.href,
    navaids_points_distanceindication_pt_izechk.title,
    navaids_points_distanceindication_pt_izechk.nilreason,
    navaids_points_distanceindication_pt_izechk.href,
    procedure_holdinguse_pt_srcoha.title,
    procedure_holdinguse_pt_srcoha.nilreason,
    procedure_holdinguse_pt_srcoha.href,
    procedure_instrumentapproachprocedure_pt_esmgww.title,
    procedure_instrumentapproachprocedure_pt_esmgww.nilreason,
    procedure_instrumentapproachprocedure_pt_esmgww.href
order by intermediateleg.identifier, intermediateleg_ts.sequence_number, intermediateleg_ts.correction_number DESC;
create or replace view obstacles.obstaclearea_publisher_view as
select distinct on (obstaclearea.identifier,obstaclearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    obstacles.obstaclearea.id,
    obstacles.obstaclearea_ts.id as ts_id,
    obstacles.obstaclearea_tsp.id as tsp_id,
    obstacles.obstaclearea.identifier,
    obstacles.obstaclearea_ts.interpretation,
    obstacles.obstaclearea_ts.sequence_number,
    obstacles.obstaclearea_ts.correction_number,
    obstacles.obstaclearea_ts.valid_time_begin,
    obstacles.obstaclearea_ts.valid_time_end,
    obstacles.obstaclearea_ts.feature_lifetime_begin,
    obstacles.obstaclearea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(obstacles.obstaclearea_ts.type_value as varchar), '(' || obstacles.obstaclearea_ts.type_nilreason || ')') as type,
    coalesce(cast(obstacles.obstaclearea_ts.obstructionidsurfacecondition_value as varchar), '(' || obstacles.obstaclearea_ts.obstructionidsurfacecondition_nilreason || ')') as obstructionidsurfacecondition,
    coalesce(cast(airport_heliport_airportheliport_pt_hnkcgn.title as varchar), '(' || airport_heliport_airportheliport_pt_hnkcgn.nilreason[1] || ')') AS referenceownerairport,
    airport_heliport_airportheliport_pt_hnkcgn.href AS referenceownerairport_href,
    coalesce(cast(airport_heliport_runwaydirection_pt_cwkbtv.title as varchar), '(' || airport_heliport_runwaydirection_pt_cwkbtv.nilreason[1] || ')') AS referenceownerrunway,
    airport_heliport_runwaydirection_pt_cwkbtv.href AS referenceownerrunway_href
from obstacles.obstaclearea 
inner join master_join mj2 on obstacles.obstaclearea.id = mj2.source_id
inner join obstacles.obstaclearea_tsp on mj2.target_id = obstacles.obstaclearea_tsp.id
inner join obstacles.obstaclearea_ts on obstacles.obstaclearea_tsp.obstacleareatimeslice_id = obstacles.obstaclearea_ts.id
left join master_join mj3 on obstacles.obstaclearea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hnkcgn on obstacles.obstaclearea_ts.reference_ownerairport_id = airport_heliport_airportheliport_pt_hnkcgn.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_cwkbtv on obstacles.obstaclearea_ts.reference_ownerrunway_id = airport_heliport_runwaydirection_pt_cwkbtv.id
--snowflake one .organisationauthority.referenceownerorganisation - OrganisationAuthorityPropertyType
--snowflake one geometry.surface.surfaceextent - SurfacePropertyType
--feature many obstacles.verticalstructure.obstacle - master_join
--snowflake many notes.note.annotation - NotePropertyType
where obstacles.obstaclearea.feature_status = 'APPROVED'
  and obstacles.obstaclearea_ts.feature_status = 'APPROVED'
group by
    obstacles.obstaclearea.id,
    obstacles.obstaclearea_ts.id,
    obstacles.obstaclearea_tsp.id,
    obstacles.obstaclearea.identifier,
    obstacles.obstaclearea_ts.interpretation,
    obstacles.obstaclearea_ts.sequence_number,
    obstacles.obstaclearea_ts.correction_number,
    obstacles.obstaclearea_ts.valid_time_begin,
    obstacles.obstaclearea_ts.valid_time_end,
    obstacles.obstaclearea_ts.feature_lifetime_begin,
    obstacles.obstaclearea_ts.feature_lifetime_end,
    obstacles.obstaclearea_ts.type_value,
    obstacles.obstaclearea_ts.type_nilreason,
    obstacles.obstaclearea_ts.obstructionidsurfacecondition_value,
    obstacles.obstaclearea_ts.obstructionidsurfacecondition_nilreason,
    airport_heliport_airportheliport_pt_hnkcgn.title,
    airport_heliport_airportheliport_pt_hnkcgn.nilreason,
    airport_heliport_airportheliport_pt_hnkcgn.href,
    airport_heliport_runwaydirection_pt_cwkbtv.title,
    airport_heliport_runwaydirection_pt_cwkbtv.nilreason,
    airport_heliport_runwaydirection_pt_cwkbtv.href
order by obstaclearea.identifier, obstaclearea_ts.sequence_number, obstaclearea_ts.correction_number DESC;
create or replace view surveillance.precisionapproachradar_publisher_view as
select distinct on (precisionapproachradar.identifier,precisionapproachradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.precisionapproachradar.id,
    surveillance.precisionapproachradar_ts.id as ts_id,
    surveillance.precisionapproachradar_tsp.id as tsp_id,
    surveillance.precisionapproachradar.identifier,
    surveillance.precisionapproachradar_ts.interpretation,
    surveillance.precisionapproachradar_ts.sequence_number,
    surveillance.precisionapproachradar_ts.correction_number,
    surveillance.precisionapproachradar_ts.valid_time_begin,
    surveillance.precisionapproachradar_ts.valid_time_end,
    surveillance.precisionapproachradar_ts.feature_lifetime_begin,
    surveillance.precisionapproachradar_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(surveillance.precisionapproachradar_ts.name_value as varchar), '(' || surveillance.precisionapproachradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.precisionapproachradar_ts.serialnumber_value as varchar), '(' || surveillance.precisionapproachradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.precisionapproachradar_ts.dualchannel_value as varchar), '(' || surveillance.precisionapproachradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.precisionapproachradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.precisionapproachradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.precisionapproachradar_ts.standbypower_value as varchar), '(' || surveillance.precisionapproachradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.precisionapproachradar_ts.digital_value as varchar), '(' || surveillance.precisionapproachradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.precisionapproachradar_ts.militaryuseonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.specialuseonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.magneticvariation_value as varchar), '(' || surveillance.precisionapproachradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.precisionapproachradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.precisionapproachradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.precisionapproachradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.precisionapproachradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.precisionapproachradar_ts.precisionapproachradartype_value as varchar), '(' || surveillance.precisionapproachradar_ts.precisionapproachradartype_nilreason || ')') as precisionapproachradartype,
    coalesce(cast(surveillance.precisionapproachradar_ts.slope_value as varchar), '(' || surveillance.precisionapproachradar_ts.slope_nilreason || ')') as slope,
    coalesce(cast(surveillance.precisionapproachradar_ts.slopeaccuracy_value as varchar), '(' || surveillance.precisionapproachradar_ts.slopeaccuracy_nilreason || ')') as slopeaccuracy,
    coalesce(cast(surveillance.precisionapproachradar_ts.range_value as varchar) || ' ' || surveillance.precisionapproachradar_ts.range_uom, '(' || surveillance.precisionapproachradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.precisionapproachradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.precisionapproachradar_ts.rangeaccuracy_uom, '(' || surveillance.precisionapproachradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy
from surveillance.precisionapproachradar 
inner join master_join mj2 on surveillance.precisionapproachradar.id = mj2.source_id
inner join surveillance.precisionapproachradar_tsp on mj2.target_id = surveillance.precisionapproachradar_tsp.id
inner join surveillance.precisionapproachradar_ts on surveillance.precisionapproachradar_tsp.precisionapproachradartimeslice_id = surveillance.precisionapproachradar_ts.id
left join master_join mj3 on surveillance.precisionapproachradar_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
--object many surveillance.reflector.reflector - master_join
where surveillance.precisionapproachradar.feature_status = 'APPROVED'
  and surveillance.precisionapproachradar_ts.feature_status = 'APPROVED'
group by
    surveillance.precisionapproachradar.id,
    surveillance.precisionapproachradar_ts.id,
    surveillance.precisionapproachradar_tsp.id,
    surveillance.precisionapproachradar.identifier,
    surveillance.precisionapproachradar_ts.interpretation,
    surveillance.precisionapproachradar_ts.sequence_number,
    surveillance.precisionapproachradar_ts.correction_number,
    surveillance.precisionapproachradar_ts.valid_time_begin,
    surveillance.precisionapproachradar_ts.valid_time_end,
    surveillance.precisionapproachradar_ts.feature_lifetime_begin,
    surveillance.precisionapproachradar_ts.feature_lifetime_end,
    surveillance.precisionapproachradar_ts.name_value,
    surveillance.precisionapproachradar_ts.name_nilreason,
    surveillance.precisionapproachradar_ts.serialnumber_value,
    surveillance.precisionapproachradar_ts.serialnumber_nilreason,
    surveillance.precisionapproachradar_ts.dualchannel_value,
    surveillance.precisionapproachradar_ts.dualchannel_nilreason,
    surveillance.precisionapproachradar_ts.movingtargetindicator_value,
    surveillance.precisionapproachradar_ts.movingtargetindicator_nilreason,
    surveillance.precisionapproachradar_ts.standbypower_value,
    surveillance.precisionapproachradar_ts.standbypower_nilreason,
    surveillance.precisionapproachradar_ts.digital_value,
    surveillance.precisionapproachradar_ts.digital_nilreason,
    surveillance.precisionapproachradar_ts.militaryuseonly_value,
    surveillance.precisionapproachradar_ts.militaryuseonly_nilreason,
    surveillance.precisionapproachradar_ts.specialuseonly_value,
    surveillance.precisionapproachradar_ts.specialuseonly_nilreason,
    surveillance.precisionapproachradar_ts.specialaircraftonly_value,
    surveillance.precisionapproachradar_ts.specialaircraftonly_nilreason,
    surveillance.precisionapproachradar_ts.magneticvariation_value,
    surveillance.precisionapproachradar_ts.magneticvariation_nilreason,
    surveillance.precisionapproachradar_ts.magneticvariationaccuracy_value,
    surveillance.precisionapproachradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.precisionapproachradar_ts.datemagneticvariation_value,
    surveillance.precisionapproachradar_ts.datemagneticvariation_nilreason,
    surveillance.precisionapproachradar_ts.precisionapproachradartype_value,
    surveillance.precisionapproachradar_ts.precisionapproachradartype_nilreason,
    surveillance.precisionapproachradar_ts.slope_value,
    surveillance.precisionapproachradar_ts.slope_nilreason,
    surveillance.precisionapproachradar_ts.slopeaccuracy_value,
    surveillance.precisionapproachradar_ts.slopeaccuracy_nilreason,
    surveillance.precisionapproachradar_ts.range_value,
    surveillance.precisionapproachradar_ts.range_uom,
    surveillance.precisionapproachradar_ts.range_nilreason,
    surveillance.precisionapproachradar_ts.rangeaccuracy_value,
    surveillance.precisionapproachradar_ts.rangeaccuracy_uom,
    surveillance.precisionapproachradar_ts.rangeaccuracy_nilreason
order by precisionapproachradar.identifier, precisionapproachradar_ts.sequence_number, precisionapproachradar_ts.correction_number DESC;
create or replace view surveillance.primarysurveillanceradar_publisher_view as
select distinct on (primarysurveillanceradar.identifier,primarysurveillanceradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.primarysurveillanceradar.id,
    surveillance.primarysurveillanceradar_ts.id as ts_id,
    surveillance.primarysurveillanceradar_tsp.id as tsp_id,
    surveillance.primarysurveillanceradar.identifier,
    surveillance.primarysurveillanceradar_ts.interpretation,
    surveillance.primarysurveillanceradar_ts.sequence_number,
    surveillance.primarysurveillanceradar_ts.correction_number,
    surveillance.primarysurveillanceradar_ts.valid_time_begin,
    surveillance.primarysurveillanceradar_ts.valid_time_end,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.name_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.serialnumber_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.dualchannel_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.standbypower_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.digital_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.militaryuseonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.specialuseonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.magneticvariation_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_nilreason || ')') as verticalcoverageazimuth,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.antennatiltfixed_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.antennatiltfixed_nilreason || ')') as antennatiltfixed,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.tiltangle_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.tiltangle_nilreason || ')') as tiltangle,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_nilreason || ')') as automatedradarterminalsystem,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.type_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.type_nilreason || ')') as type,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.range_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.range_uom, '(' || surveillance.primarysurveillanceradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.rangeaccuracy_uom, '(' || surveillance.primarysurveillanceradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_uom, '(' || surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_nilreason || ')') as verticalcoveragealtitude,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_uom, '(' || surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_nilreason || ')') as verticalcoveragedistance
from surveillance.primarysurveillanceradar 
inner join master_join mj2 on surveillance.primarysurveillanceradar.id = mj2.source_id
inner join surveillance.primarysurveillanceradar_tsp on mj2.target_id = surveillance.primarysurveillanceradar_tsp.id
inner join surveillance.primarysurveillanceradar_ts on surveillance.primarysurveillanceradar_tsp.primarysurveillanceradartimeslice_id = surveillance.primarysurveillanceradar_ts.id
left join master_join mj3 on surveillance.primarysurveillanceradar_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
--object many surveillance.surveillancegroundstation.groundstation - master_join
where surveillance.primarysurveillanceradar.feature_status = 'APPROVED'
  and surveillance.primarysurveillanceradar_ts.feature_status = 'APPROVED'
group by
    surveillance.primarysurveillanceradar.id,
    surveillance.primarysurveillanceradar_ts.id,
    surveillance.primarysurveillanceradar_tsp.id,
    surveillance.primarysurveillanceradar.identifier,
    surveillance.primarysurveillanceradar_ts.interpretation,
    surveillance.primarysurveillanceradar_ts.sequence_number,
    surveillance.primarysurveillanceradar_ts.correction_number,
    surveillance.primarysurveillanceradar_ts.valid_time_begin,
    surveillance.primarysurveillanceradar_ts.valid_time_end,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_end,
    surveillance.primarysurveillanceradar_ts.name_value,
    surveillance.primarysurveillanceradar_ts.name_nilreason,
    surveillance.primarysurveillanceradar_ts.serialnumber_value,
    surveillance.primarysurveillanceradar_ts.serialnumber_nilreason,
    surveillance.primarysurveillanceradar_ts.dualchannel_value,
    surveillance.primarysurveillanceradar_ts.dualchannel_nilreason,
    surveillance.primarysurveillanceradar_ts.movingtargetindicator_value,
    surveillance.primarysurveillanceradar_ts.movingtargetindicator_nilreason,
    surveillance.primarysurveillanceradar_ts.standbypower_value,
    surveillance.primarysurveillanceradar_ts.standbypower_nilreason,
    surveillance.primarysurveillanceradar_ts.digital_value,
    surveillance.primarysurveillanceradar_ts.digital_nilreason,
    surveillance.primarysurveillanceradar_ts.militaryuseonly_value,
    surveillance.primarysurveillanceradar_ts.militaryuseonly_nilreason,
    surveillance.primarysurveillanceradar_ts.specialuseonly_value,
    surveillance.primarysurveillanceradar_ts.specialuseonly_nilreason,
    surveillance.primarysurveillanceradar_ts.specialaircraftonly_value,
    surveillance.primarysurveillanceradar_ts.specialaircraftonly_nilreason,
    surveillance.primarysurveillanceradar_ts.magneticvariation_value,
    surveillance.primarysurveillanceradar_ts.magneticvariation_nilreason,
    surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_value,
    surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.primarysurveillanceradar_ts.datemagneticvariation_value,
    surveillance.primarysurveillanceradar_ts.datemagneticvariation_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_value,
    surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_nilreason,
    surveillance.primarysurveillanceradar_ts.antennatiltfixed_value,
    surveillance.primarysurveillanceradar_ts.antennatiltfixed_nilreason,
    surveillance.primarysurveillanceradar_ts.tiltangle_value,
    surveillance.primarysurveillanceradar_ts.tiltangle_nilreason,
    surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_value,
    surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_nilreason,
    surveillance.primarysurveillanceradar_ts.type_value,
    surveillance.primarysurveillanceradar_ts.type_nilreason,
    surveillance.primarysurveillanceradar_ts.range_value,
    surveillance.primarysurveillanceradar_ts.range_uom,
    surveillance.primarysurveillanceradar_ts.range_nilreason,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_value,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_uom,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_value,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_uom,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_value,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_uom,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_nilreason
order by primarysurveillanceradar.identifier, primarysurveillanceradar_ts.sequence_number, primarysurveillanceradar_ts.correction_number DESC;
create or replace view airport_heliport.runwaycentrelinepoint_publisher_view as
select distinct on (runwaycentrelinepoint.identifier,runwaycentrelinepoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaycentrelinepoint.id,
    airport_heliport.runwaycentrelinepoint_ts.id as ts_id,
    airport_heliport.runwaycentrelinepoint_tsp.id as tsp_id,
    airport_heliport.runwaycentrelinepoint.identifier,
    airport_heliport.runwaycentrelinepoint_ts.interpretation,
    airport_heliport.runwaycentrelinepoint_ts.sequence_number,
    airport_heliport.runwaycentrelinepoint_ts.correction_number,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_begin,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_end,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_begin,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwaycentrelinepoint_ts.role_value as varchar), '(' || airport_heliport.runwaycentrelinepoint_ts.role_nilreason || ')') as role,
    coalesce(cast(airport_heliport.runwaycentrelinepoint_ts.designator_value as varchar), '(' || airport_heliport.runwaycentrelinepoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport_runwaydirection_pt_ksugiv.title as varchar), '(' || airport_heliport_runwaydirection_pt_ksugiv.nilreason[1] || ')') AS onrunway,
    airport_heliport_runwaydirection_pt_ksugiv.href AS onrunway_href
from airport_heliport.runwaycentrelinepoint 
inner join master_join mj2 on airport_heliport.runwaycentrelinepoint.id = mj2.source_id
inner join airport_heliport.runwaycentrelinepoint_tsp on mj2.target_id = airport_heliport.runwaycentrelinepoint_tsp.id
inner join airport_heliport.runwaycentrelinepoint_ts on airport_heliport.runwaycentrelinepoint_tsp.runwaycentrelinepointtimeslice_id = airport_heliport.runwaycentrelinepoint_ts.id
left join master_join mj3 on airport_heliport.runwaycentrelinepoint_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_ksugiv on airport_heliport.runwaycentrelinepoint_ts.onrunway_id = airport_heliport_runwaydirection_pt_ksugiv.id
--object many airport_heliport.runwaydeclareddistance.associateddeclareddistance - master_join
--object many airport_heliport.navaidequipmentdistance.navaidequipment - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.runwaycentrelinepoint.feature_status = 'APPROVED'
  and airport_heliport.runwaycentrelinepoint_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaycentrelinepoint.id,
    airport_heliport.runwaycentrelinepoint_ts.id,
    airport_heliport.runwaycentrelinepoint_tsp.id,
    airport_heliport.runwaycentrelinepoint.identifier,
    airport_heliport.runwaycentrelinepoint_ts.interpretation,
    airport_heliport.runwaycentrelinepoint_ts.sequence_number,
    airport_heliport.runwaycentrelinepoint_ts.correction_number,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_begin,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_end,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_begin,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_end,
    airport_heliport.runwaycentrelinepoint_ts.role_value,
    airport_heliport.runwaycentrelinepoint_ts.role_nilreason,
    airport_heliport.runwaycentrelinepoint_ts.designator_value,
    airport_heliport.runwaycentrelinepoint_ts.designator_nilreason,
    airport_heliport_runwaydirection_pt_ksugiv.title,
    airport_heliport_runwaydirection_pt_ksugiv.nilreason,
    airport_heliport_runwaydirection_pt_ksugiv.href
order by runwaycentrelinepoint.identifier, runwaycentrelinepoint_ts.sequence_number, runwaycentrelinepoint_ts.correction_number DESC;
create or replace view airport_heliport.runwayelement_publisher_view as
select distinct on (runwayelement.identifier,runwayelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayelement.id,
    airport_heliport.runwayelement_ts.id as ts_id,
    airport_heliport.runwayelement_tsp.id as tsp_id,
    airport_heliport.runwayelement.identifier,
    airport_heliport.runwayelement_ts.interpretation,
    airport_heliport.runwayelement_ts.sequence_number,
    airport_heliport.runwayelement_ts.correction_number,
    airport_heliport.runwayelement_ts.valid_time_begin,
    airport_heliport.runwayelement_ts.valid_time_end,
    airport_heliport.runwayelement_ts.feature_lifetime_begin,
    airport_heliport.runwayelement_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.runwayelement_ts.type_value as varchar), '(' || airport_heliport.runwayelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runwayelement_ts.gradeseparation_value as varchar), '(' || airport_heliport.runwayelement_ts.gradeseparation_nilreason || ')') as gradeseparation,
    coalesce(cast(airport_heliport.runwayelement_ts.length_value as varchar) || ' ' || airport_heliport.runwayelement_ts.length_uom, '(' || airport_heliport.runwayelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.runwayelement_ts.width_value as varchar) || ' ' || airport_heliport.runwayelement_ts.width_uom, '(' || airport_heliport.runwayelement_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_wopfvg.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_wopfvg.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_wopfvg.href AS surfaceproperties_href
from airport_heliport.runwayelement 
inner join master_join mj2 on airport_heliport.runwayelement.id = mj2.source_id
inner join airport_heliport.runwayelement_tsp on mj2.target_id = airport_heliport.runwayelement_tsp.id
inner join airport_heliport.runwayelement_ts on airport_heliport.runwayelement_tsp.runwayelementtimeslice_id = airport_heliport.runwayelement_ts.id
left join master_join mj3 on airport_heliport.runwayelement_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_wopfvg on airport_heliport.runwayelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_wopfvg.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--feature many airport_heliport.runway.associatedrunway - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.manoeuvringareaavailability.availability - master_join
where airport_heliport.runwayelement.feature_status = 'APPROVED'
  and airport_heliport.runwayelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayelement.id,
    airport_heliport.runwayelement_ts.id,
    airport_heliport.runwayelement_tsp.id,
    airport_heliport.runwayelement.identifier,
    airport_heliport.runwayelement_ts.interpretation,
    airport_heliport.runwayelement_ts.sequence_number,
    airport_heliport.runwayelement_ts.correction_number,
    airport_heliport.runwayelement_ts.valid_time_begin,
    airport_heliport.runwayelement_ts.valid_time_end,
    airport_heliport.runwayelement_ts.feature_lifetime_begin,
    airport_heliport.runwayelement_ts.feature_lifetime_end,
    airport_heliport.runwayelement_ts.type_value,
    airport_heliport.runwayelement_ts.type_nilreason,
    airport_heliport.runwayelement_ts.gradeseparation_value,
    airport_heliport.runwayelement_ts.gradeseparation_nilreason,
    airport_heliport.runwayelement_ts.length_value,
    airport_heliport.runwayelement_ts.length_uom,
    airport_heliport.runwayelement_ts.length_nilreason,
    airport_heliport.runwayelement_ts.width_value,
    airport_heliport.runwayelement_ts.width_uom,
    airport_heliport.runwayelement_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_pt_wopfvg.title,
    airport_heliport_surfacecharacteristics_pt_wopfvg.nilreason,
    airport_heliport_surfacecharacteristics_pt_wopfvg.href
order by runwayelement.identifier, runwayelement_ts.sequence_number, runwayelement_ts.correction_number DESC;
create or replace view procedure.safealtitudearea_publisher_view as
select distinct on (safealtitudearea.identifier,safealtitudearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.safealtitudearea.id,
    procedure.safealtitudearea_ts.id as ts_id,
    procedure.safealtitudearea_tsp.id as tsp_id,
    procedure.safealtitudearea.identifier,
    procedure.safealtitudearea_ts.interpretation,
    procedure.safealtitudearea_ts.sequence_number,
    procedure.safealtitudearea_ts.correction_number,
    procedure.safealtitudearea_ts.valid_time_begin,
    procedure.safealtitudearea_ts.valid_time_end,
    procedure.safealtitudearea_ts.feature_lifetime_begin,
    procedure.safealtitudearea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.safealtitudearea_ts.safeareatype_value as varchar), '(' || procedure.safealtitudearea_ts.safeareatype_nilreason || ')') as safeareatype,
    coalesce(cast(navaids_points_designatedpoint_pt_ycfjkj.title as varchar), '(' || navaids_points_designatedpoint_pt_ycfjkj.nilreason[1] || ')') AS centrepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_ycfjkj.href AS centrepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ajauxz.title as varchar), '(' || navaids_points_navaid_pt_ajauxz.nilreason[1] || ')') AS centrepointnavaidsystem,
    navaids_points_navaid_pt_ajauxz.href AS centrepointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_qcvgce.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_qcvgce.nilreason[1] || ')') AS centrepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_qcvgce.href AS centrepointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_facerw.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_facerw.nilreason[1] || ')') AS centrepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_facerw.href AS centrepointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_qlfhko.title as varchar), '(' || airport_heliport_airportheliport_pt_qlfhko.nilreason[1] || ')') AS centrepointairportreferencepoint,
    airport_heliport_airportheliport_pt_qlfhko.href AS centrepointairportreferencepoint_href
from procedure.safealtitudearea 
inner join master_join mj2 on procedure.safealtitudearea.id = mj2.source_id
inner join procedure.safealtitudearea_tsp on mj2.target_id = procedure.safealtitudearea_tsp.id
inner join procedure.safealtitudearea_ts on procedure.safealtitudearea_tsp.safealtitudeareatimeslice_id = procedure.safealtitudearea_ts.id
left join master_join mj3 on procedure.safealtitudearea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ycfjkj on procedure.safealtitudearea_ts.centrepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ycfjkj.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ajauxz on procedure.safealtitudearea_ts.centrepoint_navaidsystem_id = navaids_points_navaid_pt_ajauxz.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_qcvgce on procedure.safealtitudearea_ts.centrepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_qcvgce.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_facerw on procedure.safealtitudearea_ts.centrepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_facerw.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_qlfhko on procedure.safealtitudearea_ts.centrepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_qlfhko.id
--snowflake one geometry.point.centrepointposition - PointPropertyType
--object many procedure.safealtitudeareasector.sector - master_join
--feature many airport_heliport.airportheliport.location - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.safealtitudearea.feature_status = 'APPROVED'
  and procedure.safealtitudearea_ts.feature_status = 'APPROVED'
group by
    procedure.safealtitudearea.id,
    procedure.safealtitudearea_ts.id,
    procedure.safealtitudearea_tsp.id,
    procedure.safealtitudearea.identifier,
    procedure.safealtitudearea_ts.interpretation,
    procedure.safealtitudearea_ts.sequence_number,
    procedure.safealtitudearea_ts.correction_number,
    procedure.safealtitudearea_ts.valid_time_begin,
    procedure.safealtitudearea_ts.valid_time_end,
    procedure.safealtitudearea_ts.feature_lifetime_begin,
    procedure.safealtitudearea_ts.feature_lifetime_end,
    procedure.safealtitudearea_ts.safeareatype_value,
    procedure.safealtitudearea_ts.safeareatype_nilreason,
    navaids_points_designatedpoint_pt_ycfjkj.title,
    navaids_points_designatedpoint_pt_ycfjkj.nilreason,
    navaids_points_designatedpoint_pt_ycfjkj.href,
    navaids_points_navaid_pt_ajauxz.title,
    navaids_points_navaid_pt_ajauxz.nilreason,
    navaids_points_navaid_pt_ajauxz.href,
    airport_heliport_touchdownliftoff_pt_qcvgce.title,
    airport_heliport_touchdownliftoff_pt_qcvgce.nilreason,
    airport_heliport_touchdownliftoff_pt_qcvgce.href,
    airport_heliport_runwaycentrelinepoint_pt_facerw.title,
    airport_heliport_runwaycentrelinepoint_pt_facerw.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_facerw.href,
    airport_heliport_airportheliport_pt_qlfhko.title,
    airport_heliport_airportheliport_pt_qlfhko.nilreason,
    airport_heliport_airportheliport_pt_qlfhko.href
order by safealtitudearea.identifier, safealtitudearea_ts.sequence_number, safealtitudearea_ts.correction_number DESC;
create or replace view surveillance.secondarysurveillanceradar_publisher_view as
select distinct on (secondarysurveillanceradar.identifier,secondarysurveillanceradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.secondarysurveillanceradar.id,
    surveillance.secondarysurveillanceradar_ts.id as ts_id,
    surveillance.secondarysurveillanceradar_tsp.id as tsp_id,
    surveillance.secondarysurveillanceradar.identifier,
    surveillance.secondarysurveillanceradar_ts.interpretation,
    surveillance.secondarysurveillanceradar_ts.sequence_number,
    surveillance.secondarysurveillanceradar_ts.correction_number,
    surveillance.secondarysurveillanceradar_ts.valid_time_begin,
    surveillance.secondarysurveillanceradar_ts.valid_time_end,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.name_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.serialnumber_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.dualchannel_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.standbypower_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.digital_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.militaryuseonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.specialuseonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.magneticvariation_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_nilreason || ')') as verticalcoverageazimuth,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.antennatiltfixed_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.antennatiltfixed_nilreason || ')') as antennatiltfixed,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.tiltangle_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.tiltangle_nilreason || ')') as tiltangle,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_nilreason || ')') as automatedradarterminalsystem,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.transponder_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.transponder_nilreason || ')') as transponder,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.autonomous_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.autonomous_nilreason || ')') as autonomous,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.monopulse_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.monopulse_nilreason || ')') as monopulse,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.range_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.range_uom, '(' || surveillance.secondarysurveillanceradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.rangeaccuracy_uom, '(' || surveillance.secondarysurveillanceradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_uom, '(' || surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_nilreason || ')') as verticalcoveragealtitude,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_uom, '(' || surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_nilreason || ')') as verticalcoveragedistance
from surveillance.secondarysurveillanceradar 
inner join master_join mj2 on surveillance.secondarysurveillanceradar.id = mj2.source_id
inner join surveillance.secondarysurveillanceradar_tsp on mj2.target_id = surveillance.secondarysurveillanceradar_tsp.id
inner join surveillance.secondarysurveillanceradar_ts on surveillance.secondarysurveillanceradar_tsp.secondarysurveillanceradartimeslice_id = surveillance.secondarysurveillanceradar_ts.id
left join master_join mj3 on surveillance.secondarysurveillanceradar_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--snowflake many notes.note.annotation - NotePropertyType
--object many surveillance.surveillancegroundstation.groundstation - master_join
where surveillance.secondarysurveillanceradar.feature_status = 'APPROVED'
  and surveillance.secondarysurveillanceradar_ts.feature_status = 'APPROVED'
group by
    surveillance.secondarysurveillanceradar.id,
    surveillance.secondarysurveillanceradar_ts.id,
    surveillance.secondarysurveillanceradar_tsp.id,
    surveillance.secondarysurveillanceradar.identifier,
    surveillance.secondarysurveillanceradar_ts.interpretation,
    surveillance.secondarysurveillanceradar_ts.sequence_number,
    surveillance.secondarysurveillanceradar_ts.correction_number,
    surveillance.secondarysurveillanceradar_ts.valid_time_begin,
    surveillance.secondarysurveillanceradar_ts.valid_time_end,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_end,
    surveillance.secondarysurveillanceradar_ts.name_value,
    surveillance.secondarysurveillanceradar_ts.name_nilreason,
    surveillance.secondarysurveillanceradar_ts.serialnumber_value,
    surveillance.secondarysurveillanceradar_ts.serialnumber_nilreason,
    surveillance.secondarysurveillanceradar_ts.dualchannel_value,
    surveillance.secondarysurveillanceradar_ts.dualchannel_nilreason,
    surveillance.secondarysurveillanceradar_ts.movingtargetindicator_value,
    surveillance.secondarysurveillanceradar_ts.movingtargetindicator_nilreason,
    surveillance.secondarysurveillanceradar_ts.standbypower_value,
    surveillance.secondarysurveillanceradar_ts.standbypower_nilreason,
    surveillance.secondarysurveillanceradar_ts.digital_value,
    surveillance.secondarysurveillanceradar_ts.digital_nilreason,
    surveillance.secondarysurveillanceradar_ts.militaryuseonly_value,
    surveillance.secondarysurveillanceradar_ts.militaryuseonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.specialuseonly_value,
    surveillance.secondarysurveillanceradar_ts.specialuseonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.specialaircraftonly_value,
    surveillance.secondarysurveillanceradar_ts.specialaircraftonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.magneticvariation_value,
    surveillance.secondarysurveillanceradar_ts.magneticvariation_nilreason,
    surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_value,
    surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.secondarysurveillanceradar_ts.datemagneticvariation_value,
    surveillance.secondarysurveillanceradar_ts.datemagneticvariation_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_nilreason,
    surveillance.secondarysurveillanceradar_ts.antennatiltfixed_value,
    surveillance.secondarysurveillanceradar_ts.antennatiltfixed_nilreason,
    surveillance.secondarysurveillanceradar_ts.tiltangle_value,
    surveillance.secondarysurveillanceradar_ts.tiltangle_nilreason,
    surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_value,
    surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_nilreason,
    surveillance.secondarysurveillanceradar_ts.transponder_value,
    surveillance.secondarysurveillanceradar_ts.transponder_nilreason,
    surveillance.secondarysurveillanceradar_ts.autonomous_value,
    surveillance.secondarysurveillanceradar_ts.autonomous_nilreason,
    surveillance.secondarysurveillanceradar_ts.monopulse_value,
    surveillance.secondarysurveillanceradar_ts.monopulse_nilreason,
    surveillance.secondarysurveillanceradar_ts.range_value,
    surveillance.secondarysurveillanceradar_ts.range_uom,
    surveillance.secondarysurveillanceradar_ts.range_nilreason,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_value,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_uom,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_uom,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_uom,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_nilreason
order by secondarysurveillanceradar.identifier, secondarysurveillanceradar_ts.sequence_number, secondarysurveillanceradar_ts.correction_number DESC;
create or replace view procedure.circlingrestriction_view as
select
    procedure.circlingrestriction_pt.id,
    jsonb_agg(notes.note_view.note) AS circlingrestriction_annotation,
    procedure.circlingrestriction_pt.nilreason AS circlingrestriction_annotation,
    shared_circlesector_pt_liyrhc.id AS sectordescription,
    jsonb_agg(shared_timesheet_view_figtwi.id) AS timeinterval
from procedure.circlingrestriction_pt 
inner join procedure.circlingrestriction on procedure.circlingrestriction_pt.circlingrestriction_id = procedure.circlingrestriction.id
left join master_join mj1 on procedure.circlingrestriction.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join shared.circlesector_pt shared_circlesector_pt_liyrhc on procedure.circlingrestriction.sectordescription_id = shared_circlesector_pt_liyrhc.id
--snowflake one geometry.surface.restrictionarea - SurfacePropertyType
left join master_join master_join_jlpjgd on procedure.circlingrestriction.id = master_join_jlpjgd.source_id
left join shared.timesheet_view shared_timesheet_view_figtwi on master_join_jlpjgd.target_id = shared_timesheet_view_figtwi.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
group by
    procedure.circlingrestriction_pt.id,
    procedure.circlingrestriction_pt.nilreason;
create or replace view procedure.navigationareasector_view as
select
    procedure.navigationareasector_pt.id,
    jsonb_agg(notes.note_view.note) AS navigationareasector_annotation,
    procedure.navigationareasector_pt.nilreason AS navigationareasector_annotation,
    shared_circlesector_pt_vlkmpp.id AS sectordefinition,
    jsonb_agg(shared_obstruction_view_kywsog.id) AS significantobstacle,
    jsonb_agg(procedure_sectordesign_view_anehqd.id) AS sectorcriteria
from procedure.navigationareasector_pt 
inner join procedure.navigationareasector on procedure.navigationareasector_pt.navigationareasector_id = procedure.navigationareasector.id
left join master_join mj1 on procedure.navigationareasector.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join shared.circlesector_pt shared_circlesector_pt_vlkmpp on procedure.navigationareasector.sectordefinition_id = shared_circlesector_pt_vlkmpp.id
--snowflake one geometry.surface.extent - SurfacePropertyType
left join master_join master_join_fhcwyb on procedure.navigationareasector.id = master_join_fhcwyb.source_id
left join shared.obstruction_view shared_obstruction_view_kywsog on master_join_fhcwyb.target_id = shared_obstruction_view_kywsog.id
left join master_join master_join_sashua on procedure.navigationareasector.id = master_join_sashua.source_id
left join procedure.sectordesign_view procedure_sectordesign_view_anehqd on master_join_sashua.target_id = procedure_sectordesign_view_anehqd.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.navigationareasector_pt.id,
    procedure.navigationareasector_pt.nilreason;
create or replace view shared.obstacleassessmentarea_view as
select
    shared.obstacleassessmentarea_pt.id,
    jsonb_agg(notes.note_view.note) AS obstacleassessmentarea_annotation,
    shared.obstacleassessmentarea_pt.nilreason AS obstacleassessmentarea_annotation,
    coalesce(cast(shared.obstacleassessmentarea.type_value as varchar), '(' || shared.obstacleassessmentarea.type_nilreason || ')') as type,
    coalesce(cast(shared.obstacleassessmentarea.sectionnumber_value as varchar), '(' || shared.obstacleassessmentarea.sectionnumber_nilreason || ')') as sectionnumber,
    coalesce(cast(shared.obstacleassessmentarea.slope_value as varchar), '(' || shared.obstacleassessmentarea.slope_nilreason || ')') as slope,
    coalesce(cast(shared.obstacleassessmentarea.gradientlowhigh_value as varchar), '(' || shared.obstacleassessmentarea.gradientlowhigh_nilreason || ')') as gradientlowhigh,
    coalesce(cast(shared.obstacleassessmentarea.surfacezone_value as varchar), '(' || shared.obstacleassessmentarea.surfacezone_nilreason || ')') as surfacezone,
    coalesce(cast(shared.obstacleassessmentarea.safetyregulation_value as varchar), '(' || shared.obstacleassessmentarea.safetyregulation_nilreason || ')') as safetyregulation,
    coalesce(cast(shared.obstacleassessmentarea.assessedaltitude_value as varchar) || ' ' || shared.obstacleassessmentarea.assessedaltitude_uom, '(' || shared.obstacleassessmentarea.assessedaltitude_nilreason || ')') as assessedaltitude,
    coalesce(cast(shared.obstacleassessmentarea.slopeloweraltitude_value as varchar) || ' ' || shared.obstacleassessmentarea.slopeloweraltitude_uom, '(' || shared.obstacleassessmentarea.slopeloweraltitude_nilreason || ')') as slopeloweraltitude,
    jsonb_agg(shared_aircraftcharacteristic_view_eestij.id) AS aircraftcategory,
    jsonb_agg(shared_obstruction_view_sltbim.id) AS significantobstacle
from shared.obstacleassessmentarea_pt 
inner join shared.obstacleassessmentarea on shared.obstacleassessmentarea_pt.obstacleassessmentarea_id = shared.obstacleassessmentarea.id
left join master_join mj1 on shared.obstacleassessmentarea.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.surface.surface - SurfacePropertyType
--snowflake one geometry.curve.startingcurve - CurvePropertyType
left join master_join master_join_lhedyf on shared.obstacleassessmentarea.id = master_join_lhedyf.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_eestij on master_join_lhedyf.target_id = shared_aircraftcharacteristic_view_eestij.id
left join master_join master_join_qbslld on shared.obstacleassessmentarea.id = master_join_qbslld.source_id
left join shared.obstruction_view shared_obstruction_view_sltbim on master_join_qbslld.target_id = shared_obstruction_view_sltbim.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    shared.obstacleassessmentarea_pt.id,
    shared.obstacleassessmentarea_pt.nilreason,
    shared.obstacleassessmentarea.type_value,
    shared.obstacleassessmentarea.type_nilreason,
    shared.obstacleassessmentarea.sectionnumber_value,
    shared.obstacleassessmentarea.sectionnumber_nilreason,
    shared.obstacleassessmentarea.slope_value,
    shared.obstacleassessmentarea.slope_nilreason,
    shared.obstacleassessmentarea.gradientlowhigh_value,
    shared.obstacleassessmentarea.gradientlowhigh_nilreason,
    shared.obstacleassessmentarea.surfacezone_value,
    shared.obstacleassessmentarea.surfacezone_nilreason,
    shared.obstacleassessmentarea.safetyregulation_value,
    shared.obstacleassessmentarea.safetyregulation_nilreason,
    shared.obstacleassessmentarea.assessedaltitude_value,
    shared.obstacleassessmentarea.assessedaltitude_uom,
    shared.obstacleassessmentarea.assessedaltitude_nilreason,
    shared.obstacleassessmentarea.slopeloweraltitude_value,
    shared.obstacleassessmentarea.slopeloweraltitude_uom,
    shared.obstacleassessmentarea.slopeloweraltitude_nilreason;
create or replace view navaids_points.pointreference_view as
select
    navaids_points.pointreference_pt.id,
    jsonb_agg(notes.note_view.note) AS pointreference_annotation,
    navaids_points.pointreference_pt.nilreason AS pointreference_annotation,
    coalesce(cast(navaids_points.pointreference.role_value as varchar), '(' || navaids_points.pointreference.role_nilreason || ')') as role,
    coalesce(cast(navaids_points.pointreference.priorfixtolerance_value as varchar) || ' ' || navaids_points.pointreference.priorfixtolerance_uom, '(' || navaids_points.pointreference.priorfixtolerance_nilreason || ')') as priorfixtolerance,
    coalesce(cast(navaids_points.pointreference.postfixtolerance_value as varchar) || ' ' || navaids_points.pointreference.postfixtolerance_uom, '(' || navaids_points.pointreference.postfixtolerance_nilreason || ')') as postfixtolerance,
    coalesce(cast(navaids_points_designatedpoint_pt_fgmbvz.title as varchar), '(' || navaids_points_designatedpoint_pt_fgmbvz.nilreason[1] || ')') AS point,
    navaids_points_designatedpoint_pt_fgmbvz.href AS point_href,
    jsonb_agg(navaids_points_angleuse_view_bhigdf.id) AS facilityangle,
    jsonb_agg(navaids_points_distanceindication_pt_jgkivv.id) AS facilitydistance
from navaids_points.pointreference_pt 
inner join navaids_points.pointreference on navaids_points.pointreference_pt.pointreference_id = navaids_points.pointreference.id
left join master_join mj1 on navaids_points.pointreference.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_fgmbvz on navaids_points.pointreference_ts.point_id = navaids_points_designatedpoint_pt_fgmbvz.id
--snowflake one geometry.surface.fixtolerancearea - SurfacePropertyType
left join master_join master_join_wcqbsq on navaids_points.pointreference.id = master_join_wcqbsq.source_id
left join navaids_points.angleuse_view navaids_points_angleuse_view_bhigdf on master_join_wcqbsq.target_id = navaids_points_angleuse_view_bhigdf.id
left join master_join master_join_pakvuy on navaids_points.pointreference.id = master_join_pakvuy.source_id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_jgkivv on master_join_pakvuy.target_id = navaids_points_distanceindication_pt_jgkivv.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.pointreference_pt.id,
    navaids_points.pointreference_pt.nilreason,
    navaids_points.pointreference.role_value,
    navaids_points.pointreference.role_nilreason,
    navaids_points.pointreference.priorfixtolerance_value,
    navaids_points.pointreference.priorfixtolerance_uom,
    navaids_points.pointreference.priorfixtolerance_nilreason,
    navaids_points.pointreference.postfixtolerance_value,
    navaids_points.pointreference.postfixtolerance_uom,
    navaids_points.pointreference.postfixtolerance_nilreason,
    navaids_points_designatedpoint_pt_fgmbvz.title,
    navaids_points_designatedpoint_pt_fgmbvz.nilreason,
    navaids_points_designatedpoint_pt_fgmbvz.href;
create or replace view airport_heliport.aircraftstand_publisher_view as
select distinct on (aircraftstand.identifier,aircraftstand_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.aircraftstand.id,
    airport_heliport.aircraftstand_ts.id as ts_id,
    airport_heliport.aircraftstand_tsp.id as tsp_id,
    airport_heliport.aircraftstand.identifier,
    airport_heliport.aircraftstand_ts.interpretation,
    airport_heliport.aircraftstand_ts.sequence_number,
    airport_heliport.aircraftstand_ts.correction_number,
    airport_heliport.aircraftstand_ts.valid_time_begin,
    airport_heliport.aircraftstand_ts.valid_time_end,
    airport_heliport.aircraftstand_ts.feature_lifetime_begin,
    airport_heliport.aircraftstand_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.aircraftstand_ts.designator_value as varchar), '(' || airport_heliport.aircraftstand_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.aircraftstand_ts.type_value as varchar), '(' || airport_heliport.aircraftstand_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.aircraftstand_ts.visualdockingsystem_value as varchar), '(' || airport_heliport.aircraftstand_ts.visualdockingsystem_nilreason || ')') as visualdockingsystem,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_dfpzxu.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_dfpzxu.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_dfpzxu.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_apronelement_pt_iinltk.title as varchar), '(' || airport_heliport_apronelement_pt_iinltk.nilreason[1] || ')') AS apronlocation,
    airport_heliport_apronelement_pt_iinltk.href AS apronlocation_href
from airport_heliport.aircraftstand 
inner join master_join mj2 on airport_heliport.aircraftstand.id = mj2.source_id
inner join airport_heliport.aircraftstand_tsp on mj2.target_id = airport_heliport.aircraftstand_tsp.id
inner join airport_heliport.aircraftstand_ts on airport_heliport.aircraftstand_tsp.aircraftstandtimeslice_id = airport_heliport.aircraftstand_ts.id
left join master_join mj3 on airport_heliport.aircraftstand_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_dfpzxu on airport_heliport.aircraftstand_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_dfpzxu.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join airport_heliport.apronelement_pt airport_heliport_apronelement_pt_iinltk on airport_heliport.aircraftstand_ts.apronlocation_id = airport_heliport_apronelement_pt_iinltk.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--object many airport_heliport.aircraftstandcontamination.contaminant - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.apronareaavailability.availability - master_join
where airport_heliport.aircraftstand.feature_status = 'APPROVED'
  and airport_heliport.aircraftstand_ts.feature_status = 'APPROVED'
group by
    airport_heliport.aircraftstand.id,
    airport_heliport.aircraftstand_ts.id,
    airport_heliport.aircraftstand_tsp.id,
    airport_heliport.aircraftstand.identifier,
    airport_heliport.aircraftstand_ts.interpretation,
    airport_heliport.aircraftstand_ts.sequence_number,
    airport_heliport.aircraftstand_ts.correction_number,
    airport_heliport.aircraftstand_ts.valid_time_begin,
    airport_heliport.aircraftstand_ts.valid_time_end,
    airport_heliport.aircraftstand_ts.feature_lifetime_begin,
    airport_heliport.aircraftstand_ts.feature_lifetime_end,
    airport_heliport.aircraftstand_ts.designator_value,
    airport_heliport.aircraftstand_ts.designator_nilreason,
    airport_heliport.aircraftstand_ts.type_value,
    airport_heliport.aircraftstand_ts.type_nilreason,
    airport_heliport.aircraftstand_ts.visualdockingsystem_value,
    airport_heliport.aircraftstand_ts.visualdockingsystem_nilreason,
    airport_heliport_surfacecharacteristics_pt_dfpzxu.title,
    airport_heliport_surfacecharacteristics_pt_dfpzxu.nilreason,
    airport_heliport_surfacecharacteristics_pt_dfpzxu.href,
    airport_heliport_apronelement_pt_iinltk.title,
    airport_heliport_apronelement_pt_iinltk.nilreason,
    airport_heliport_apronelement_pt_iinltk.href
order by aircraftstand.identifier, aircraftstand_ts.sequence_number, aircraftstand_ts.correction_number DESC;
create or replace view airport_heliport.arrestinggear_publisher_view as
select distinct on (arrestinggear.identifier,arrestinggear_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.arrestinggear.id,
    airport_heliport.arrestinggear_ts.id as ts_id,
    airport_heliport.arrestinggear_tsp.id as tsp_id,
    airport_heliport.arrestinggear.identifier,
    airport_heliport.arrestinggear_ts.interpretation,
    airport_heliport.arrestinggear_ts.sequence_number,
    airport_heliport.arrestinggear_ts.correction_number,
    airport_heliport.arrestinggear_ts.valid_time_begin,
    airport_heliport.arrestinggear_ts.valid_time_end,
    airport_heliport.arrestinggear_ts.feature_lifetime_begin,
    airport_heliport.arrestinggear_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.arrestinggear_ts.status_value as varchar), '(' || airport_heliport.arrestinggear_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.arrestinggear_ts.engagedevice_value as varchar), '(' || airport_heliport.arrestinggear_ts.engagedevice_nilreason || ')') as engagedevice,
    coalesce(cast(airport_heliport.arrestinggear_ts.absorbtype_value as varchar), '(' || airport_heliport.arrestinggear_ts.absorbtype_nilreason || ')') as absorbtype,
    coalesce(cast(airport_heliport.arrestinggear_ts.bidirectional_value as varchar), '(' || airport_heliport.arrestinggear_ts.bidirectional_nilreason || ')') as bidirectional,
    coalesce(cast(airport_heliport.arrestinggear_ts.length_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.length_uom, '(' || airport_heliport.arrestinggear_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.arrestinggear_ts.width_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.width_uom, '(' || airport_heliport.arrestinggear_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.arrestinggear_ts.location_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.location_uom, '(' || airport_heliport.arrestinggear_ts.location_nilreason || ')') as location,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_wkhfoz.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_wkhfoz.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_wkhfoz.href AS surfaceproperties_href
from airport_heliport.arrestinggear 
inner join master_join mj2 on airport_heliport.arrestinggear.id = mj2.source_id
inner join airport_heliport.arrestinggear_tsp on mj2.target_id = airport_heliport.arrestinggear_tsp.id
inner join airport_heliport.arrestinggear_ts on airport_heliport.arrestinggear_tsp.arrestinggeartimeslice_id = airport_heliport.arrestinggear_ts.id
left join master_join mj3 on airport_heliport.arrestinggear_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_wkhfoz on airport_heliport.arrestinggear_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_wkhfoz.id
--snowflake one geometry.elevatedcurve.extentcurveextent - ElevatedCurvePropertyType
--snowflake one geometry.elevatedsurface.extentsurfaceextent - ElevatedSurfacePropertyType
--snowflake one geometry.elevatedpoint.extentpointextent - ElevatedPointPropertyType
--feature many airport_heliport.runwaydirection.runwaydirection - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.arrestinggear.feature_status = 'APPROVED'
  and airport_heliport.arrestinggear_ts.feature_status = 'APPROVED'
group by
    airport_heliport.arrestinggear.id,
    airport_heliport.arrestinggear_ts.id,
    airport_heliport.arrestinggear_tsp.id,
    airport_heliport.arrestinggear.identifier,
    airport_heliport.arrestinggear_ts.interpretation,
    airport_heliport.arrestinggear_ts.sequence_number,
    airport_heliport.arrestinggear_ts.correction_number,
    airport_heliport.arrestinggear_ts.valid_time_begin,
    airport_heliport.arrestinggear_ts.valid_time_end,
    airport_heliport.arrestinggear_ts.feature_lifetime_begin,
    airport_heliport.arrestinggear_ts.feature_lifetime_end,
    airport_heliport.arrestinggear_ts.status_value,
    airport_heliport.arrestinggear_ts.status_nilreason,
    airport_heliport.arrestinggear_ts.engagedevice_value,
    airport_heliport.arrestinggear_ts.engagedevice_nilreason,
    airport_heliport.arrestinggear_ts.absorbtype_value,
    airport_heliport.arrestinggear_ts.absorbtype_nilreason,
    airport_heliport.arrestinggear_ts.bidirectional_value,
    airport_heliport.arrestinggear_ts.bidirectional_nilreason,
    airport_heliport.arrestinggear_ts.length_value,
    airport_heliport.arrestinggear_ts.length_uom,
    airport_heliport.arrestinggear_ts.length_nilreason,
    airport_heliport.arrestinggear_ts.width_value,
    airport_heliport.arrestinggear_ts.width_uom,
    airport_heliport.arrestinggear_ts.width_nilreason,
    airport_heliport.arrestinggear_ts.location_value,
    airport_heliport.arrestinggear_ts.location_uom,
    airport_heliport.arrestinggear_ts.location_nilreason,
    airport_heliport_surfacecharacteristics_pt_wkhfoz.title,
    airport_heliport_surfacecharacteristics_pt_wkhfoz.nilreason,
    airport_heliport_surfacecharacteristics_pt_wkhfoz.href
order by arrestinggear.identifier, arrestinggear_ts.sequence_number, arrestinggear_ts.correction_number DESC;
create or replace view navaids_points.azimuth_publisher_view as
select distinct on (azimuth.identifier,azimuth_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.azimuth.id,
    navaids_points.azimuth_ts.id as ts_id,
    navaids_points.azimuth_tsp.id as tsp_id,
    navaids_points.azimuth.identifier,
    navaids_points.azimuth_ts.interpretation,
    navaids_points.azimuth_ts.sequence_number,
    navaids_points.azimuth_ts.correction_number,
    navaids_points.azimuth_ts.valid_time_begin,
    navaids_points.azimuth_ts.valid_time_end,
    navaids_points.azimuth_ts.feature_lifetime_begin,
    navaids_points.azimuth_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.azimuth_ts.designator_value as varchar), '(' || navaids_points.azimuth_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.azimuth_ts.name_value as varchar), '(' || navaids_points.azimuth_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.azimuth_ts.emissionclass_value as varchar), '(' || navaids_points.azimuth_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.azimuth_ts.mobile_value as varchar), '(' || navaids_points.azimuth_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.azimuth_ts.magneticvariation_value as varchar), '(' || navaids_points.azimuth_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.azimuth_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.azimuth_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.azimuth_ts.datemagneticvariation_value as varchar), '(' || navaids_points.azimuth_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.azimuth_ts.flightchecked_value as varchar), '(' || navaids_points.azimuth_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.azimuth_ts.type_value as varchar), '(' || navaids_points.azimuth_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.azimuth_ts.truebearing_value as varchar), '(' || navaids_points.azimuth_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.azimuth_ts.truebearingaccuracy_value as varchar), '(' || navaids_points.azimuth_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(navaids_points.azimuth_ts.magneticbearing_value as varchar), '(' || navaids_points.azimuth_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.azimuth_ts.angleproportionalleft_value as varchar), '(' || navaids_points.azimuth_ts.angleproportionalleft_nilreason || ')') as angleproportionalleft,
    coalesce(cast(navaids_points.azimuth_ts.angleproportionalright_value as varchar), '(' || navaids_points.azimuth_ts.angleproportionalright_nilreason || ')') as angleproportionalright,
    coalesce(cast(navaids_points.azimuth_ts.anglecoverleft_value as varchar), '(' || navaids_points.azimuth_ts.anglecoverleft_nilreason || ')') as anglecoverleft,
    coalesce(cast(navaids_points.azimuth_ts.anglecoverright_value as varchar), '(' || navaids_points.azimuth_ts.anglecoverright_nilreason || ')') as anglecoverright,
    coalesce(cast(navaids_points.azimuth_ts.channel_value as varchar), '(' || navaids_points.azimuth_ts.channel_nilreason || ')') as channel
from navaids_points.azimuth 
inner join master_join mj2 on navaids_points.azimuth.id = mj2.source_id
inner join navaids_points.azimuth_tsp on mj2.target_id = navaids_points.azimuth_tsp.id
inner join navaids_points.azimuth_ts on navaids_points.azimuth_tsp.azimuthtimeslice_id = navaids_points.azimuth_ts.id
left join master_join mj3 on navaids_points.azimuth_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.azimuth.feature_status = 'APPROVED'
  and navaids_points.azimuth_ts.feature_status = 'APPROVED'
group by
    navaids_points.azimuth.id,
    navaids_points.azimuth_ts.id,
    navaids_points.azimuth_tsp.id,
    navaids_points.azimuth.identifier,
    navaids_points.azimuth_ts.interpretation,
    navaids_points.azimuth_ts.sequence_number,
    navaids_points.azimuth_ts.correction_number,
    navaids_points.azimuth_ts.valid_time_begin,
    navaids_points.azimuth_ts.valid_time_end,
    navaids_points.azimuth_ts.feature_lifetime_begin,
    navaids_points.azimuth_ts.feature_lifetime_end,
    navaids_points.azimuth_ts.designator_value,
    navaids_points.azimuth_ts.designator_nilreason,
    navaids_points.azimuth_ts.name_value,
    navaids_points.azimuth_ts.name_nilreason,
    navaids_points.azimuth_ts.emissionclass_value,
    navaids_points.azimuth_ts.emissionclass_nilreason,
    navaids_points.azimuth_ts.mobile_value,
    navaids_points.azimuth_ts.mobile_nilreason,
    navaids_points.azimuth_ts.magneticvariation_value,
    navaids_points.azimuth_ts.magneticvariation_nilreason,
    navaids_points.azimuth_ts.magneticvariationaccuracy_value,
    navaids_points.azimuth_ts.magneticvariationaccuracy_nilreason,
    navaids_points.azimuth_ts.datemagneticvariation_value,
    navaids_points.azimuth_ts.datemagneticvariation_nilreason,
    navaids_points.azimuth_ts.flightchecked_value,
    navaids_points.azimuth_ts.flightchecked_nilreason,
    navaids_points.azimuth_ts.type_value,
    navaids_points.azimuth_ts.type_nilreason,
    navaids_points.azimuth_ts.truebearing_value,
    navaids_points.azimuth_ts.truebearing_nilreason,
    navaids_points.azimuth_ts.truebearingaccuracy_value,
    navaids_points.azimuth_ts.truebearingaccuracy_nilreason,
    navaids_points.azimuth_ts.magneticbearing_value,
    navaids_points.azimuth_ts.magneticbearing_nilreason,
    navaids_points.azimuth_ts.angleproportionalleft_value,
    navaids_points.azimuth_ts.angleproportionalleft_nilreason,
    navaids_points.azimuth_ts.angleproportionalright_value,
    navaids_points.azimuth_ts.angleproportionalright_nilreason,
    navaids_points.azimuth_ts.anglecoverleft_value,
    navaids_points.azimuth_ts.anglecoverleft_nilreason,
    navaids_points.azimuth_ts.anglecoverright_value,
    navaids_points.azimuth_ts.anglecoverright_nilreason,
    navaids_points.azimuth_ts.channel_value,
    navaids_points.azimuth_ts.channel_nilreason
order by azimuth.identifier, azimuth_ts.sequence_number, azimuth_ts.correction_number DESC;
create or replace view procedure.departureleg_publisher_view as
select distinct on (departureleg.identifier,departureleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.departureleg.id,
    procedure.departureleg_ts.id as ts_id,
    procedure.departureleg_tsp.id as tsp_id,
    procedure.departureleg.identifier,
    procedure.departureleg_ts.interpretation,
    procedure.departureleg_ts.sequence_number,
    procedure.departureleg_ts.correction_number,
    procedure.departureleg_ts.valid_time_begin,
    procedure.departureleg_ts.valid_time_end,
    procedure.departureleg_ts.feature_lifetime_begin,
    procedure.departureleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.departureleg_ts.endconditiondesignator_value as varchar), '(' || procedure.departureleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.departureleg_ts.legpath_value as varchar), '(' || procedure.departureleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.departureleg_ts.legtypearinc_value as varchar), '(' || procedure.departureleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.departureleg_ts.course_value as varchar), '(' || procedure.departureleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.departureleg_ts.coursetype_value as varchar), '(' || procedure.departureleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.departureleg_ts.coursedirection_value as varchar), '(' || procedure.departureleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.departureleg_ts.turndirection_value as varchar), '(' || procedure.departureleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.departureleg_ts.speedreference_value as varchar), '(' || procedure.departureleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.departureleg_ts.speedinterpretation_value as varchar), '(' || procedure.departureleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.departureleg_ts.bankangle_value as varchar), '(' || procedure.departureleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.departureleg_ts.procedureturnrequired_value as varchar), '(' || procedure.departureleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.departureleg_ts.upperlimitreference_value as varchar), '(' || procedure.departureleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.departureleg_ts.lowerlimitreference_value as varchar), '(' || procedure.departureleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.departureleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.departureleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.departureleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.departureleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.departureleg_ts.verticalangle_value as varchar), '(' || procedure.departureleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.departureleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.departureleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.departureleg_ts.speedlimit_value as varchar) || ' ' || procedure.departureleg_ts.speedlimit_uom, '(' || procedure.departureleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.departureleg_ts.length_value as varchar) || ' ' || procedure.departureleg_ts.length_uom, '(' || procedure.departureleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.departureleg_ts.duration_value as varchar) || ' ' || procedure.departureleg_ts.duration_uom, '(' || procedure.departureleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.departureleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.departureleg_ts.upperlimitaltitude_uom, '(' || procedure.departureleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.departureleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.departureleg_ts.lowerlimitaltitude_uom, '(' || procedure.departureleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.departureleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.departureleg_ts.altitudeoverrideatc_uom, '(' || procedure.departureleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.departureleg_ts.minimumobstacleclearancealtitude_value as varchar) || ' ' || procedure.departureleg_ts.minimumobstacleclearancealtitude_uom, '(' || procedure.departureleg_ts.minimumobstacleclearancealtitude_nilreason || ')') as minimumobstacleclearancealtitude,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_lxjjrb.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_lxjjrb.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_lxjjrb.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_ozsmjj.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_ozsmjj.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_ozsmjj.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_jwospg.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_jwospg.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_jwospg.href AS arccentre_href,
    coalesce(cast(navaids_points_angleindication_pt_moywtk.title as varchar), '(' || navaids_points_angleindication_pt_moywtk.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_moywtk.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_xktaus.title as varchar), '(' || navaids_points_distanceindication_pt_xktaus.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_xktaus.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_racqkn.title as varchar), '(' || procedure_holdinguse_pt_racqkn.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_racqkn.href AS holding_href,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_iqnpxx.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_iqnpxx.nilreason[1] || ')') AS departure,
    procedure_standardinstrumentdeparture_pt_iqnpxx.href AS departure_href
from procedure.departureleg 
inner join master_join mj2 on procedure.departureleg.id = mj2.source_id
inner join procedure.departureleg_tsp on mj2.target_id = procedure.departureleg_tsp.id
inner join procedure.departureleg_ts on procedure.departureleg_tsp.departurelegtimeslice_id = procedure.departureleg_ts.id
left join master_join mj3 on procedure.departureleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_lxjjrb on procedure.departureleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_lxjjrb.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_ozsmjj on procedure.departureleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_ozsmjj.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_jwospg on procedure.departureleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_jwospg.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_moywtk on procedure.departureleg_ts.angle_id = navaids_points_angleindication_pt_moywtk.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_xktaus on procedure.departureleg_ts.distance_id = navaids_points_distanceindication_pt_xktaus.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_racqkn on procedure.departureleg_ts.holding_id = procedure_holdinguse_pt_racqkn.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_iqnpxx on procedure.departureleg_ts.departure_id = procedure_standardinstrumentdeparture_pt_iqnpxx.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many procedure.departurearrivalcondition.condition - master_join
where procedure.departureleg.feature_status = 'APPROVED'
  and procedure.departureleg_ts.feature_status = 'APPROVED'
group by
    procedure.departureleg.id,
    procedure.departureleg_ts.id,
    procedure.departureleg_tsp.id,
    procedure.departureleg.identifier,
    procedure.departureleg_ts.interpretation,
    procedure.departureleg_ts.sequence_number,
    procedure.departureleg_ts.correction_number,
    procedure.departureleg_ts.valid_time_begin,
    procedure.departureleg_ts.valid_time_end,
    procedure.departureleg_ts.feature_lifetime_begin,
    procedure.departureleg_ts.feature_lifetime_end,
    procedure.departureleg_ts.endconditiondesignator_value,
    procedure.departureleg_ts.endconditiondesignator_nilreason,
    procedure.departureleg_ts.legpath_value,
    procedure.departureleg_ts.legpath_nilreason,
    procedure.departureleg_ts.legtypearinc_value,
    procedure.departureleg_ts.legtypearinc_nilreason,
    procedure.departureleg_ts.course_value,
    procedure.departureleg_ts.course_nilreason,
    procedure.departureleg_ts.coursetype_value,
    procedure.departureleg_ts.coursetype_nilreason,
    procedure.departureleg_ts.coursedirection_value,
    procedure.departureleg_ts.coursedirection_nilreason,
    procedure.departureleg_ts.turndirection_value,
    procedure.departureleg_ts.turndirection_nilreason,
    procedure.departureleg_ts.speedreference_value,
    procedure.departureleg_ts.speedreference_nilreason,
    procedure.departureleg_ts.speedinterpretation_value,
    procedure.departureleg_ts.speedinterpretation_nilreason,
    procedure.departureleg_ts.bankangle_value,
    procedure.departureleg_ts.bankangle_nilreason,
    procedure.departureleg_ts.procedureturnrequired_value,
    procedure.departureleg_ts.procedureturnrequired_nilreason,
    procedure.departureleg_ts.upperlimitreference_value,
    procedure.departureleg_ts.upperlimitreference_nilreason,
    procedure.departureleg_ts.lowerlimitreference_value,
    procedure.departureleg_ts.lowerlimitreference_nilreason,
    procedure.departureleg_ts.altitudeinterpretation_value,
    procedure.departureleg_ts.altitudeinterpretation_nilreason,
    procedure.departureleg_ts.altitudeoverridereference_value,
    procedure.departureleg_ts.altitudeoverridereference_nilreason,
    procedure.departureleg_ts.verticalangle_value,
    procedure.departureleg_ts.verticalangle_nilreason,
    procedure.departureleg_ts.requirednavigationperformance_value,
    procedure.departureleg_ts.requirednavigationperformance_nilreason,
    procedure.departureleg_ts.speedlimit_value,
    procedure.departureleg_ts.speedlimit_uom,
    procedure.departureleg_ts.speedlimit_nilreason,
    procedure.departureleg_ts.length_value,
    procedure.departureleg_ts.length_uom,
    procedure.departureleg_ts.length_nilreason,
    procedure.departureleg_ts.duration_value,
    procedure.departureleg_ts.duration_uom,
    procedure.departureleg_ts.duration_nilreason,
    procedure.departureleg_ts.upperlimitaltitude_value,
    procedure.departureleg_ts.upperlimitaltitude_uom,
    procedure.departureleg_ts.upperlimitaltitude_nilreason,
    procedure.departureleg_ts.lowerlimitaltitude_value,
    procedure.departureleg_ts.lowerlimitaltitude_uom,
    procedure.departureleg_ts.lowerlimitaltitude_nilreason,
    procedure.departureleg_ts.altitudeoverrideatc_value,
    procedure.departureleg_ts.altitudeoverrideatc_uom,
    procedure.departureleg_ts.altitudeoverrideatc_nilreason,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_value,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_uom,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_nilreason,
    navaids_points_terminalsegmentpoint_pt_lxjjrb.title,
    navaids_points_terminalsegmentpoint_pt_lxjjrb.nilreason,
    navaids_points_terminalsegmentpoint_pt_lxjjrb.href,
    navaids_points_terminalsegmentpoint_pt_ozsmjj.title,
    navaids_points_terminalsegmentpoint_pt_ozsmjj.nilreason,
    navaids_points_terminalsegmentpoint_pt_ozsmjj.href,
    navaids_points_terminalsegmentpoint_pt_jwospg.title,
    navaids_points_terminalsegmentpoint_pt_jwospg.nilreason,
    navaids_points_terminalsegmentpoint_pt_jwospg.href,
    navaids_points_angleindication_pt_moywtk.title,
    navaids_points_angleindication_pt_moywtk.nilreason,
    navaids_points_angleindication_pt_moywtk.href,
    navaids_points_distanceindication_pt_xktaus.title,
    navaids_points_distanceindication_pt_xktaus.nilreason,
    navaids_points_distanceindication_pt_xktaus.href,
    procedure_holdinguse_pt_racqkn.title,
    procedure_holdinguse_pt_racqkn.nilreason,
    procedure_holdinguse_pt_racqkn.href,
    procedure_standardinstrumentdeparture_pt_iqnpxx.title,
    procedure_standardinstrumentdeparture_pt_iqnpxx.nilreason,
    procedure_standardinstrumentdeparture_pt_iqnpxx.href
order by departureleg.identifier, departureleg_ts.sequence_number, departureleg_ts.correction_number DESC;
create or replace view navaids_points.dme_publisher_view as
select distinct on (dme.identifier,dme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.dme.id,
    navaids_points.dme_ts.id as ts_id,
    navaids_points.dme_tsp.id as tsp_id,
    navaids_points.dme.identifier,
    navaids_points.dme_ts.interpretation,
    navaids_points.dme_ts.sequence_number,
    navaids_points.dme_ts.correction_number,
    navaids_points.dme_ts.valid_time_begin,
    navaids_points.dme_ts.valid_time_end,
    navaids_points.dme_ts.feature_lifetime_begin,
    navaids_points.dme_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.dme_ts.designator_value as varchar), '(' || navaids_points.dme_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.dme_ts.name_value as varchar), '(' || navaids_points.dme_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.dme_ts.emissionclass_value as varchar), '(' || navaids_points.dme_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.dme_ts.mobile_value as varchar), '(' || navaids_points.dme_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.dme_ts.magneticvariation_value as varchar), '(' || navaids_points.dme_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.dme_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.dme_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.dme_ts.datemagneticvariation_value as varchar), '(' || navaids_points.dme_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.dme_ts.flightchecked_value as varchar), '(' || navaids_points.dme_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.dme_ts.type_value as varchar), '(' || navaids_points.dme_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.dme_ts.channel_value as varchar), '(' || navaids_points.dme_ts.channel_nilreason || ')') as channel,
    coalesce(cast(navaids_points.dme_ts.ghostfrequency_value as varchar) || ' ' || navaids_points.dme_ts.ghostfrequency_uom, '(' || navaids_points.dme_ts.ghostfrequency_nilreason || ')') as ghostfrequency,
    coalesce(cast(navaids_points.dme_ts.displace_value as varchar) || ' ' || navaids_points.dme_ts.displace_uom, '(' || navaids_points.dme_ts.displace_nilreason || ')') as displace
from navaids_points.dme 
inner join master_join mj2 on navaids_points.dme.id = mj2.source_id
inner join navaids_points.dme_tsp on mj2.target_id = navaids_points.dme_tsp.id
inner join navaids_points.dme_ts on navaids_points.dme_tsp.dmetimeslice_id = navaids_points.dme_ts.id
left join master_join mj3 on navaids_points.dme_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.dme.feature_status = 'APPROVED'
  and navaids_points.dme_ts.feature_status = 'APPROVED'
group by
    navaids_points.dme.id,
    navaids_points.dme_ts.id,
    navaids_points.dme_tsp.id,
    navaids_points.dme.identifier,
    navaids_points.dme_ts.interpretation,
    navaids_points.dme_ts.sequence_number,
    navaids_points.dme_ts.correction_number,
    navaids_points.dme_ts.valid_time_begin,
    navaids_points.dme_ts.valid_time_end,
    navaids_points.dme_ts.feature_lifetime_begin,
    navaids_points.dme_ts.feature_lifetime_end,
    navaids_points.dme_ts.designator_value,
    navaids_points.dme_ts.designator_nilreason,
    navaids_points.dme_ts.name_value,
    navaids_points.dme_ts.name_nilreason,
    navaids_points.dme_ts.emissionclass_value,
    navaids_points.dme_ts.emissionclass_nilreason,
    navaids_points.dme_ts.mobile_value,
    navaids_points.dme_ts.mobile_nilreason,
    navaids_points.dme_ts.magneticvariation_value,
    navaids_points.dme_ts.magneticvariation_nilreason,
    navaids_points.dme_ts.magneticvariationaccuracy_value,
    navaids_points.dme_ts.magneticvariationaccuracy_nilreason,
    navaids_points.dme_ts.datemagneticvariation_value,
    navaids_points.dme_ts.datemagneticvariation_nilreason,
    navaids_points.dme_ts.flightchecked_value,
    navaids_points.dme_ts.flightchecked_nilreason,
    navaids_points.dme_ts.type_value,
    navaids_points.dme_ts.type_nilreason,
    navaids_points.dme_ts.channel_value,
    navaids_points.dme_ts.channel_nilreason,
    navaids_points.dme_ts.ghostfrequency_value,
    navaids_points.dme_ts.ghostfrequency_uom,
    navaids_points.dme_ts.ghostfrequency_nilreason,
    navaids_points.dme_ts.displace_value,
    navaids_points.dme_ts.displace_uom,
    navaids_points.dme_ts.displace_nilreason
order by dme.identifier, dme_ts.sequence_number, dme_ts.correction_number DESC;
create or replace view navaids_points.elevation_publisher_view as
select distinct on (elevation.identifier,elevation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.elevation.id,
    navaids_points.elevation_ts.id as ts_id,
    navaids_points.elevation_tsp.id as tsp_id,
    navaids_points.elevation.identifier,
    navaids_points.elevation_ts.interpretation,
    navaids_points.elevation_ts.sequence_number,
    navaids_points.elevation_ts.correction_number,
    navaids_points.elevation_ts.valid_time_begin,
    navaids_points.elevation_ts.valid_time_end,
    navaids_points.elevation_ts.feature_lifetime_begin,
    navaids_points.elevation_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.elevation_ts.designator_value as varchar), '(' || navaids_points.elevation_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.elevation_ts.name_value as varchar), '(' || navaids_points.elevation_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.elevation_ts.emissionclass_value as varchar), '(' || navaids_points.elevation_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.elevation_ts.mobile_value as varchar), '(' || navaids_points.elevation_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.elevation_ts.magneticvariation_value as varchar), '(' || navaids_points.elevation_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.elevation_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.elevation_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.elevation_ts.datemagneticvariation_value as varchar), '(' || navaids_points.elevation_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.elevation_ts.flightchecked_value as varchar), '(' || navaids_points.elevation_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.elevation_ts.anglenominal_value as varchar), '(' || navaids_points.elevation_ts.anglenominal_nilreason || ')') as anglenominal,
    coalesce(cast(navaids_points.elevation_ts.angleminimum_value as varchar), '(' || navaids_points.elevation_ts.angleminimum_nilreason || ')') as angleminimum,
    coalesce(cast(navaids_points.elevation_ts.anglespan_value as varchar), '(' || navaids_points.elevation_ts.anglespan_nilreason || ')') as anglespan,
    coalesce(cast(navaids_points.elevation_ts.angleaccuracy_value as varchar), '(' || navaids_points.elevation_ts.angleaccuracy_nilreason || ')') as angleaccuracy
from navaids_points.elevation 
inner join master_join mj2 on navaids_points.elevation.id = mj2.source_id
inner join navaids_points.elevation_tsp on mj2.target_id = navaids_points.elevation_tsp.id
inner join navaids_points.elevation_ts on navaids_points.elevation_tsp.elevationtimeslice_id = navaids_points.elevation_ts.id
left join master_join mj3 on navaids_points.elevation_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.elevation.feature_status = 'APPROVED'
  and navaids_points.elevation_ts.feature_status = 'APPROVED'
group by
    navaids_points.elevation.id,
    navaids_points.elevation_ts.id,
    navaids_points.elevation_tsp.id,
    navaids_points.elevation.identifier,
    navaids_points.elevation_ts.interpretation,
    navaids_points.elevation_ts.sequence_number,
    navaids_points.elevation_ts.correction_number,
    navaids_points.elevation_ts.valid_time_begin,
    navaids_points.elevation_ts.valid_time_end,
    navaids_points.elevation_ts.feature_lifetime_begin,
    navaids_points.elevation_ts.feature_lifetime_end,
    navaids_points.elevation_ts.designator_value,
    navaids_points.elevation_ts.designator_nilreason,
    navaids_points.elevation_ts.name_value,
    navaids_points.elevation_ts.name_nilreason,
    navaids_points.elevation_ts.emissionclass_value,
    navaids_points.elevation_ts.emissionclass_nilreason,
    navaids_points.elevation_ts.mobile_value,
    navaids_points.elevation_ts.mobile_nilreason,
    navaids_points.elevation_ts.magneticvariation_value,
    navaids_points.elevation_ts.magneticvariation_nilreason,
    navaids_points.elevation_ts.magneticvariationaccuracy_value,
    navaids_points.elevation_ts.magneticvariationaccuracy_nilreason,
    navaids_points.elevation_ts.datemagneticvariation_value,
    navaids_points.elevation_ts.datemagneticvariation_nilreason,
    navaids_points.elevation_ts.flightchecked_value,
    navaids_points.elevation_ts.flightchecked_nilreason,
    navaids_points.elevation_ts.anglenominal_value,
    navaids_points.elevation_ts.anglenominal_nilreason,
    navaids_points.elevation_ts.angleminimum_value,
    navaids_points.elevation_ts.angleminimum_nilreason,
    navaids_points.elevation_ts.anglespan_value,
    navaids_points.elevation_ts.anglespan_nilreason,
    navaids_points.elevation_ts.angleaccuracy_value,
    navaids_points.elevation_ts.angleaccuracy_nilreason
order by elevation.identifier, elevation_ts.sequence_number, elevation_ts.correction_number DESC;
create or replace view navaids_points.glidepath_publisher_view as
select distinct on (glidepath.identifier,glidepath_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.glidepath.id,
    navaids_points.glidepath_ts.id as ts_id,
    navaids_points.glidepath_tsp.id as tsp_id,
    navaids_points.glidepath.identifier,
    navaids_points.glidepath_ts.interpretation,
    navaids_points.glidepath_ts.sequence_number,
    navaids_points.glidepath_ts.correction_number,
    navaids_points.glidepath_ts.valid_time_begin,
    navaids_points.glidepath_ts.valid_time_end,
    navaids_points.glidepath_ts.feature_lifetime_begin,
    navaids_points.glidepath_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.glidepath_ts.designator_value as varchar), '(' || navaids_points.glidepath_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.glidepath_ts.name_value as varchar), '(' || navaids_points.glidepath_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.glidepath_ts.emissionclass_value as varchar), '(' || navaids_points.glidepath_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.glidepath_ts.mobile_value as varchar), '(' || navaids_points.glidepath_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.glidepath_ts.magneticvariation_value as varchar), '(' || navaids_points.glidepath_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.glidepath_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.glidepath_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.glidepath_ts.datemagneticvariation_value as varchar), '(' || navaids_points.glidepath_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.glidepath_ts.flightchecked_value as varchar), '(' || navaids_points.glidepath_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.glidepath_ts.slope_value as varchar), '(' || navaids_points.glidepath_ts.slope_nilreason || ')') as slope,
    coalesce(cast(navaids_points.glidepath_ts.angleaccuracy_value as varchar), '(' || navaids_points.glidepath_ts.angleaccuracy_nilreason || ')') as angleaccuracy,
    coalesce(cast(navaids_points.glidepath_ts.frequency_value as varchar) || ' ' || navaids_points.glidepath_ts.frequency_uom, '(' || navaids_points.glidepath_ts.frequency_nilreason || ')') as frequency,
    coalesce(cast(navaids_points.glidepath_ts.rdh_value as varchar) || ' ' || navaids_points.glidepath_ts.rdh_uom, '(' || navaids_points.glidepath_ts.rdh_nilreason || ')') as rdh,
    coalesce(cast(navaids_points.glidepath_ts.rdhaccuracy_value as varchar) || ' ' || navaids_points.glidepath_ts.rdhaccuracy_uom, '(' || navaids_points.glidepath_ts.rdhaccuracy_nilreason || ')') as rdhaccuracy
from navaids_points.glidepath 
inner join master_join mj2 on navaids_points.glidepath.id = mj2.source_id
inner join navaids_points.glidepath_tsp on mj2.target_id = navaids_points.glidepath_tsp.id
inner join navaids_points.glidepath_ts on navaids_points.glidepath_tsp.glidepathtimeslice_id = navaids_points.glidepath_ts.id
left join master_join mj3 on navaids_points.glidepath_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.glidepath.feature_status = 'APPROVED'
  and navaids_points.glidepath_ts.feature_status = 'APPROVED'
group by
    navaids_points.glidepath.id,
    navaids_points.glidepath_ts.id,
    navaids_points.glidepath_tsp.id,
    navaids_points.glidepath.identifier,
    navaids_points.glidepath_ts.interpretation,
    navaids_points.glidepath_ts.sequence_number,
    navaids_points.glidepath_ts.correction_number,
    navaids_points.glidepath_ts.valid_time_begin,
    navaids_points.glidepath_ts.valid_time_end,
    navaids_points.glidepath_ts.feature_lifetime_begin,
    navaids_points.glidepath_ts.feature_lifetime_end,
    navaids_points.glidepath_ts.designator_value,
    navaids_points.glidepath_ts.designator_nilreason,
    navaids_points.glidepath_ts.name_value,
    navaids_points.glidepath_ts.name_nilreason,
    navaids_points.glidepath_ts.emissionclass_value,
    navaids_points.glidepath_ts.emissionclass_nilreason,
    navaids_points.glidepath_ts.mobile_value,
    navaids_points.glidepath_ts.mobile_nilreason,
    navaids_points.glidepath_ts.magneticvariation_value,
    navaids_points.glidepath_ts.magneticvariation_nilreason,
    navaids_points.glidepath_ts.magneticvariationaccuracy_value,
    navaids_points.glidepath_ts.magneticvariationaccuracy_nilreason,
    navaids_points.glidepath_ts.datemagneticvariation_value,
    navaids_points.glidepath_ts.datemagneticvariation_nilreason,
    navaids_points.glidepath_ts.flightchecked_value,
    navaids_points.glidepath_ts.flightchecked_nilreason,
    navaids_points.glidepath_ts.slope_value,
    navaids_points.glidepath_ts.slope_nilreason,
    navaids_points.glidepath_ts.angleaccuracy_value,
    navaids_points.glidepath_ts.angleaccuracy_nilreason,
    navaids_points.glidepath_ts.frequency_value,
    navaids_points.glidepath_ts.frequency_uom,
    navaids_points.glidepath_ts.frequency_nilreason,
    navaids_points.glidepath_ts.rdh_value,
    navaids_points.glidepath_ts.rdh_uom,
    navaids_points.glidepath_ts.rdh_nilreason,
    navaids_points.glidepath_ts.rdhaccuracy_value,
    navaids_points.glidepath_ts.rdhaccuracy_uom,
    navaids_points.glidepath_ts.rdhaccuracy_nilreason
order by glidepath.identifier, glidepath_ts.sequence_number, glidepath_ts.correction_number DESC;
create or replace view navaids_points.localizer_publisher_view as
select distinct on (localizer.identifier,localizer_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.localizer.id,
    navaids_points.localizer_ts.id as ts_id,
    navaids_points.localizer_tsp.id as tsp_id,
    navaids_points.localizer.identifier,
    navaids_points.localizer_ts.interpretation,
    navaids_points.localizer_ts.sequence_number,
    navaids_points.localizer_ts.correction_number,
    navaids_points.localizer_ts.valid_time_begin,
    navaids_points.localizer_ts.valid_time_end,
    navaids_points.localizer_ts.feature_lifetime_begin,
    navaids_points.localizer_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.localizer_ts.designator_value as varchar), '(' || navaids_points.localizer_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.localizer_ts.name_value as varchar), '(' || navaids_points.localizer_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.localizer_ts.emissionclass_value as varchar), '(' || navaids_points.localizer_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.localizer_ts.mobile_value as varchar), '(' || navaids_points.localizer_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.localizer_ts.magneticvariation_value as varchar), '(' || navaids_points.localizer_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.localizer_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.localizer_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.localizer_ts.datemagneticvariation_value as varchar), '(' || navaids_points.localizer_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.localizer_ts.flightchecked_value as varchar), '(' || navaids_points.localizer_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.localizer_ts.magneticbearing_value as varchar), '(' || navaids_points.localizer_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.localizer_ts.magneticbearingaccuracy_value as varchar), '(' || navaids_points.localizer_ts.magneticbearingaccuracy_nilreason || ')') as magneticbearingaccuracy,
    coalesce(cast(navaids_points.localizer_ts.truebearing_value as varchar), '(' || navaids_points.localizer_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.localizer_ts.truebearingaccuracy_value as varchar), '(' || navaids_points.localizer_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(navaids_points.localizer_ts.declination_value as varchar), '(' || navaids_points.localizer_ts.declination_nilreason || ')') as declination,
    coalesce(cast(navaids_points.localizer_ts.widthcourse_value as varchar), '(' || navaids_points.localizer_ts.widthcourse_nilreason || ')') as widthcourse,
    coalesce(cast(navaids_points.localizer_ts.widthcourseaccuracy_value as varchar), '(' || navaids_points.localizer_ts.widthcourseaccuracy_nilreason || ')') as widthcourseaccuracy,
    coalesce(cast(navaids_points.localizer_ts.backcourseusable_value as varchar), '(' || navaids_points.localizer_ts.backcourseusable_nilreason || ')') as backcourseusable,
    coalesce(cast(navaids_points.localizer_ts.frequency_value as varchar) || ' ' || navaids_points.localizer_ts.frequency_uom, '(' || navaids_points.localizer_ts.frequency_nilreason || ')') as frequency
from navaids_points.localizer 
inner join master_join mj2 on navaids_points.localizer.id = mj2.source_id
inner join navaids_points.localizer_tsp on mj2.target_id = navaids_points.localizer_tsp.id
inner join navaids_points.localizer_ts on navaids_points.localizer_tsp.localizertimeslice_id = navaids_points.localizer_ts.id
left join master_join mj3 on navaids_points.localizer_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.localizer.feature_status = 'APPROVED'
  and navaids_points.localizer_ts.feature_status = 'APPROVED'
group by
    navaids_points.localizer.id,
    navaids_points.localizer_ts.id,
    navaids_points.localizer_tsp.id,
    navaids_points.localizer.identifier,
    navaids_points.localizer_ts.interpretation,
    navaids_points.localizer_ts.sequence_number,
    navaids_points.localizer_ts.correction_number,
    navaids_points.localizer_ts.valid_time_begin,
    navaids_points.localizer_ts.valid_time_end,
    navaids_points.localizer_ts.feature_lifetime_begin,
    navaids_points.localizer_ts.feature_lifetime_end,
    navaids_points.localizer_ts.designator_value,
    navaids_points.localizer_ts.designator_nilreason,
    navaids_points.localizer_ts.name_value,
    navaids_points.localizer_ts.name_nilreason,
    navaids_points.localizer_ts.emissionclass_value,
    navaids_points.localizer_ts.emissionclass_nilreason,
    navaids_points.localizer_ts.mobile_value,
    navaids_points.localizer_ts.mobile_nilreason,
    navaids_points.localizer_ts.magneticvariation_value,
    navaids_points.localizer_ts.magneticvariation_nilreason,
    navaids_points.localizer_ts.magneticvariationaccuracy_value,
    navaids_points.localizer_ts.magneticvariationaccuracy_nilreason,
    navaids_points.localizer_ts.datemagneticvariation_value,
    navaids_points.localizer_ts.datemagneticvariation_nilreason,
    navaids_points.localizer_ts.flightchecked_value,
    navaids_points.localizer_ts.flightchecked_nilreason,
    navaids_points.localizer_ts.magneticbearing_value,
    navaids_points.localizer_ts.magneticbearing_nilreason,
    navaids_points.localizer_ts.magneticbearingaccuracy_value,
    navaids_points.localizer_ts.magneticbearingaccuracy_nilreason,
    navaids_points.localizer_ts.truebearing_value,
    navaids_points.localizer_ts.truebearing_nilreason,
    navaids_points.localizer_ts.truebearingaccuracy_value,
    navaids_points.localizer_ts.truebearingaccuracy_nilreason,
    navaids_points.localizer_ts.declination_value,
    navaids_points.localizer_ts.declination_nilreason,
    navaids_points.localizer_ts.widthcourse_value,
    navaids_points.localizer_ts.widthcourse_nilreason,
    navaids_points.localizer_ts.widthcourseaccuracy_value,
    navaids_points.localizer_ts.widthcourseaccuracy_nilreason,
    navaids_points.localizer_ts.backcourseusable_value,
    navaids_points.localizer_ts.backcourseusable_nilreason,
    navaids_points.localizer_ts.frequency_value,
    navaids_points.localizer_ts.frequency_uom,
    navaids_points.localizer_ts.frequency_nilreason
order by localizer.identifier, localizer_ts.sequence_number, localizer_ts.correction_number DESC;
create or replace view navaids_points.markerbeacon_publisher_view as
select distinct on (markerbeacon.identifier,markerbeacon_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.markerbeacon.id,
    navaids_points.markerbeacon_ts.id as ts_id,
    navaids_points.markerbeacon_tsp.id as tsp_id,
    navaids_points.markerbeacon.identifier,
    navaids_points.markerbeacon_ts.interpretation,
    navaids_points.markerbeacon_ts.sequence_number,
    navaids_points.markerbeacon_ts.correction_number,
    navaids_points.markerbeacon_ts.valid_time_begin,
    navaids_points.markerbeacon_ts.valid_time_end,
    navaids_points.markerbeacon_ts.feature_lifetime_begin,
    navaids_points.markerbeacon_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.markerbeacon_ts.designator_value as varchar), '(' || navaids_points.markerbeacon_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.markerbeacon_ts.name_value as varchar), '(' || navaids_points.markerbeacon_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.markerbeacon_ts.emissionclass_value as varchar), '(' || navaids_points.markerbeacon_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.markerbeacon_ts.mobile_value as varchar), '(' || navaids_points.markerbeacon_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.markerbeacon_ts.magneticvariation_value as varchar), '(' || navaids_points.markerbeacon_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.markerbeacon_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.markerbeacon_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.markerbeacon_ts.datemagneticvariation_value as varchar), '(' || navaids_points.markerbeacon_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.markerbeacon_ts.flightchecked_value as varchar), '(' || navaids_points.markerbeacon_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.markerbeacon_ts.class_value as varchar), '(' || navaids_points.markerbeacon_ts.class_nilreason || ')') as class,
    coalesce(cast(navaids_points.markerbeacon_ts.axisbearing_value as varchar), '(' || navaids_points.markerbeacon_ts.axisbearing_nilreason || ')') as axisbearing,
    coalesce(cast(navaids_points.markerbeacon_ts.auralmorsecode_value as varchar), '(' || navaids_points.markerbeacon_ts.auralmorsecode_nilreason || ')') as auralmorsecode,
    coalesce(cast(navaids_points.markerbeacon_ts.frequency_value as varchar) || ' ' || navaids_points.markerbeacon_ts.frequency_uom, '(' || navaids_points.markerbeacon_ts.frequency_nilreason || ')') as frequency
from navaids_points.markerbeacon 
inner join master_join mj2 on navaids_points.markerbeacon.id = mj2.source_id
inner join navaids_points.markerbeacon_tsp on mj2.target_id = navaids_points.markerbeacon_tsp.id
inner join navaids_points.markerbeacon_ts on navaids_points.markerbeacon_tsp.markerbeacontimeslice_id = navaids_points.markerbeacon_ts.id
left join master_join mj3 on navaids_points.markerbeacon_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.markerbeacon.feature_status = 'APPROVED'
  and navaids_points.markerbeacon_ts.feature_status = 'APPROVED'
group by
    navaids_points.markerbeacon.id,
    navaids_points.markerbeacon_ts.id,
    navaids_points.markerbeacon_tsp.id,
    navaids_points.markerbeacon.identifier,
    navaids_points.markerbeacon_ts.interpretation,
    navaids_points.markerbeacon_ts.sequence_number,
    navaids_points.markerbeacon_ts.correction_number,
    navaids_points.markerbeacon_ts.valid_time_begin,
    navaids_points.markerbeacon_ts.valid_time_end,
    navaids_points.markerbeacon_ts.feature_lifetime_begin,
    navaids_points.markerbeacon_ts.feature_lifetime_end,
    navaids_points.markerbeacon_ts.designator_value,
    navaids_points.markerbeacon_ts.designator_nilreason,
    navaids_points.markerbeacon_ts.name_value,
    navaids_points.markerbeacon_ts.name_nilreason,
    navaids_points.markerbeacon_ts.emissionclass_value,
    navaids_points.markerbeacon_ts.emissionclass_nilreason,
    navaids_points.markerbeacon_ts.mobile_value,
    navaids_points.markerbeacon_ts.mobile_nilreason,
    navaids_points.markerbeacon_ts.magneticvariation_value,
    navaids_points.markerbeacon_ts.magneticvariation_nilreason,
    navaids_points.markerbeacon_ts.magneticvariationaccuracy_value,
    navaids_points.markerbeacon_ts.magneticvariationaccuracy_nilreason,
    navaids_points.markerbeacon_ts.datemagneticvariation_value,
    navaids_points.markerbeacon_ts.datemagneticvariation_nilreason,
    navaids_points.markerbeacon_ts.flightchecked_value,
    navaids_points.markerbeacon_ts.flightchecked_nilreason,
    navaids_points.markerbeacon_ts.class_value,
    navaids_points.markerbeacon_ts.class_nilreason,
    navaids_points.markerbeacon_ts.axisbearing_value,
    navaids_points.markerbeacon_ts.axisbearing_nilreason,
    navaids_points.markerbeacon_ts.auralmorsecode_value,
    navaids_points.markerbeacon_ts.auralmorsecode_nilreason,
    navaids_points.markerbeacon_ts.frequency_value,
    navaids_points.markerbeacon_ts.frequency_uom,
    navaids_points.markerbeacon_ts.frequency_nilreason
order by markerbeacon.identifier, markerbeacon_ts.sequence_number, markerbeacon_ts.correction_number DESC;
create or replace view procedure.missedapproachleg_publisher_view as
select distinct on (missedapproachleg.identifier,missedapproachleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.missedapproachleg.id,
    procedure.missedapproachleg_ts.id as ts_id,
    procedure.missedapproachleg_tsp.id as tsp_id,
    procedure.missedapproachleg.identifier,
    procedure.missedapproachleg_ts.interpretation,
    procedure.missedapproachleg_ts.sequence_number,
    procedure.missedapproachleg_ts.correction_number,
    procedure.missedapproachleg_ts.valid_time_begin,
    procedure.missedapproachleg_ts.valid_time_end,
    procedure.missedapproachleg_ts.feature_lifetime_begin,
    procedure.missedapproachleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.missedapproachleg_ts.endconditiondesignator_value as varchar), '(' || procedure.missedapproachleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.missedapproachleg_ts.legpath_value as varchar), '(' || procedure.missedapproachleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.missedapproachleg_ts.legtypearinc_value as varchar), '(' || procedure.missedapproachleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.missedapproachleg_ts.course_value as varchar), '(' || procedure.missedapproachleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.missedapproachleg_ts.coursetype_value as varchar), '(' || procedure.missedapproachleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.missedapproachleg_ts.coursedirection_value as varchar), '(' || procedure.missedapproachleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.missedapproachleg_ts.turndirection_value as varchar), '(' || procedure.missedapproachleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.missedapproachleg_ts.speedreference_value as varchar), '(' || procedure.missedapproachleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.missedapproachleg_ts.speedinterpretation_value as varchar), '(' || procedure.missedapproachleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.missedapproachleg_ts.bankangle_value as varchar), '(' || procedure.missedapproachleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.missedapproachleg_ts.procedureturnrequired_value as varchar), '(' || procedure.missedapproachleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.missedapproachleg_ts.upperlimitreference_value as varchar), '(' || procedure.missedapproachleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.missedapproachleg_ts.lowerlimitreference_value as varchar), '(' || procedure.missedapproachleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.missedapproachleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.missedapproachleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.missedapproachleg_ts.verticalangle_value as varchar), '(' || procedure.missedapproachleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.missedapproachleg_ts.type_value as varchar), '(' || procedure.missedapproachleg_ts.type_nilreason || ')') as type,
    coalesce(cast(procedure.missedapproachleg_ts.thresholdaftermapt_value as varchar), '(' || procedure.missedapproachleg_ts.thresholdaftermapt_nilreason || ')') as thresholdaftermapt,
    coalesce(cast(procedure.missedapproachleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.missedapproachleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.missedapproachleg_ts.speedlimit_value as varchar) || ' ' || procedure.missedapproachleg_ts.speedlimit_uom, '(' || procedure.missedapproachleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.missedapproachleg_ts.length_value as varchar) || ' ' || procedure.missedapproachleg_ts.length_uom, '(' || procedure.missedapproachleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.missedapproachleg_ts.duration_value as varchar) || ' ' || procedure.missedapproachleg_ts.duration_uom, '(' || procedure.missedapproachleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.missedapproachleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.missedapproachleg_ts.upperlimitaltitude_uom, '(' || procedure.missedapproachleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.missedapproachleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.missedapproachleg_ts.lowerlimitaltitude_uom, '(' || procedure.missedapproachleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.missedapproachleg_ts.altitudeoverrideatc_uom, '(' || procedure.missedapproachleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.missedapproachleg_ts.heightmapt_value as varchar) || ' ' || procedure.missedapproachleg_ts.heightmapt_uom, '(' || procedure.missedapproachleg_ts.heightmapt_nilreason || ')') as heightmapt,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_sqfomg.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_sqfomg.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_sqfomg.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_gxnugp.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_gxnugp.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_gxnugp.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_ksfuzb.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_ksfuzb.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_ksfuzb.href AS arccentre_href,
    coalesce(cast(navaids_points_angleindication_pt_vjxcoc.title as varchar), '(' || navaids_points_angleindication_pt_vjxcoc.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_vjxcoc.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_ewgzhe.title as varchar), '(' || navaids_points_distanceindication_pt_ewgzhe.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_ewgzhe.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_fiizwx.title as varchar), '(' || procedure_holdinguse_pt_fiizwx.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_fiizwx.href AS holding_href,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_crtyuo.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_crtyuo.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_crtyuo.href AS approach_href
from procedure.missedapproachleg 
inner join master_join mj2 on procedure.missedapproachleg.id = mj2.source_id
inner join procedure.missedapproachleg_tsp on mj2.target_id = procedure.missedapproachleg_tsp.id
inner join procedure.missedapproachleg_ts on procedure.missedapproachleg_tsp.missedapproachlegtimeslice_id = procedure.missedapproachleg_ts.id
left join master_join mj3 on procedure.missedapproachleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_sqfomg on procedure.missedapproachleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_sqfomg.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_gxnugp on procedure.missedapproachleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_gxnugp.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_ksfuzb on procedure.missedapproachleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_ksfuzb.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_vjxcoc on procedure.missedapproachleg_ts.angle_id = navaids_points_angleindication_pt_vjxcoc.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_ewgzhe on procedure.missedapproachleg_ts.distance_id = navaids_points_distanceindication_pt_ewgzhe.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_fiizwx on procedure.missedapproachleg_ts.holding_id = procedure_holdinguse_pt_fiizwx.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_crtyuo on procedure.missedapproachleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_crtyuo.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many procedure.approachcondition.condition - master_join
where procedure.missedapproachleg.feature_status = 'APPROVED'
  and procedure.missedapproachleg_ts.feature_status = 'APPROVED'
group by
    procedure.missedapproachleg.id,
    procedure.missedapproachleg_ts.id,
    procedure.missedapproachleg_tsp.id,
    procedure.missedapproachleg.identifier,
    procedure.missedapproachleg_ts.interpretation,
    procedure.missedapproachleg_ts.sequence_number,
    procedure.missedapproachleg_ts.correction_number,
    procedure.missedapproachleg_ts.valid_time_begin,
    procedure.missedapproachleg_ts.valid_time_end,
    procedure.missedapproachleg_ts.feature_lifetime_begin,
    procedure.missedapproachleg_ts.feature_lifetime_end,
    procedure.missedapproachleg_ts.endconditiondesignator_value,
    procedure.missedapproachleg_ts.endconditiondesignator_nilreason,
    procedure.missedapproachleg_ts.legpath_value,
    procedure.missedapproachleg_ts.legpath_nilreason,
    procedure.missedapproachleg_ts.legtypearinc_value,
    procedure.missedapproachleg_ts.legtypearinc_nilreason,
    procedure.missedapproachleg_ts.course_value,
    procedure.missedapproachleg_ts.course_nilreason,
    procedure.missedapproachleg_ts.coursetype_value,
    procedure.missedapproachleg_ts.coursetype_nilreason,
    procedure.missedapproachleg_ts.coursedirection_value,
    procedure.missedapproachleg_ts.coursedirection_nilreason,
    procedure.missedapproachleg_ts.turndirection_value,
    procedure.missedapproachleg_ts.turndirection_nilreason,
    procedure.missedapproachleg_ts.speedreference_value,
    procedure.missedapproachleg_ts.speedreference_nilreason,
    procedure.missedapproachleg_ts.speedinterpretation_value,
    procedure.missedapproachleg_ts.speedinterpretation_nilreason,
    procedure.missedapproachleg_ts.bankangle_value,
    procedure.missedapproachleg_ts.bankangle_nilreason,
    procedure.missedapproachleg_ts.procedureturnrequired_value,
    procedure.missedapproachleg_ts.procedureturnrequired_nilreason,
    procedure.missedapproachleg_ts.upperlimitreference_value,
    procedure.missedapproachleg_ts.upperlimitreference_nilreason,
    procedure.missedapproachleg_ts.lowerlimitreference_value,
    procedure.missedapproachleg_ts.lowerlimitreference_nilreason,
    procedure.missedapproachleg_ts.altitudeinterpretation_value,
    procedure.missedapproachleg_ts.altitudeinterpretation_nilreason,
    procedure.missedapproachleg_ts.altitudeoverridereference_value,
    procedure.missedapproachleg_ts.altitudeoverridereference_nilreason,
    procedure.missedapproachleg_ts.verticalangle_value,
    procedure.missedapproachleg_ts.verticalangle_nilreason,
    procedure.missedapproachleg_ts.type_value,
    procedure.missedapproachleg_ts.type_nilreason,
    procedure.missedapproachleg_ts.thresholdaftermapt_value,
    procedure.missedapproachleg_ts.thresholdaftermapt_nilreason,
    procedure.missedapproachleg_ts.requirednavigationperformance_value,
    procedure.missedapproachleg_ts.requirednavigationperformance_nilreason,
    procedure.missedapproachleg_ts.speedlimit_value,
    procedure.missedapproachleg_ts.speedlimit_uom,
    procedure.missedapproachleg_ts.speedlimit_nilreason,
    procedure.missedapproachleg_ts.length_value,
    procedure.missedapproachleg_ts.length_uom,
    procedure.missedapproachleg_ts.length_nilreason,
    procedure.missedapproachleg_ts.duration_value,
    procedure.missedapproachleg_ts.duration_uom,
    procedure.missedapproachleg_ts.duration_nilreason,
    procedure.missedapproachleg_ts.upperlimitaltitude_value,
    procedure.missedapproachleg_ts.upperlimitaltitude_uom,
    procedure.missedapproachleg_ts.upperlimitaltitude_nilreason,
    procedure.missedapproachleg_ts.lowerlimitaltitude_value,
    procedure.missedapproachleg_ts.lowerlimitaltitude_uom,
    procedure.missedapproachleg_ts.lowerlimitaltitude_nilreason,
    procedure.missedapproachleg_ts.altitudeoverrideatc_value,
    procedure.missedapproachleg_ts.altitudeoverrideatc_uom,
    procedure.missedapproachleg_ts.altitudeoverrideatc_nilreason,
    procedure.missedapproachleg_ts.heightmapt_value,
    procedure.missedapproachleg_ts.heightmapt_uom,
    procedure.missedapproachleg_ts.heightmapt_nilreason,
    navaids_points_terminalsegmentpoint_pt_sqfomg.title,
    navaids_points_terminalsegmentpoint_pt_sqfomg.nilreason,
    navaids_points_terminalsegmentpoint_pt_sqfomg.href,
    navaids_points_terminalsegmentpoint_pt_gxnugp.title,
    navaids_points_terminalsegmentpoint_pt_gxnugp.nilreason,
    navaids_points_terminalsegmentpoint_pt_gxnugp.href,
    navaids_points_terminalsegmentpoint_pt_ksfuzb.title,
    navaids_points_terminalsegmentpoint_pt_ksfuzb.nilreason,
    navaids_points_terminalsegmentpoint_pt_ksfuzb.href,
    navaids_points_angleindication_pt_vjxcoc.title,
    navaids_points_angleindication_pt_vjxcoc.nilreason,
    navaids_points_angleindication_pt_vjxcoc.href,
    navaids_points_distanceindication_pt_ewgzhe.title,
    navaids_points_distanceindication_pt_ewgzhe.nilreason,
    navaids_points_distanceindication_pt_ewgzhe.href,
    procedure_holdinguse_pt_fiizwx.title,
    procedure_holdinguse_pt_fiizwx.nilreason,
    procedure_holdinguse_pt_fiizwx.href,
    procedure_instrumentapproachprocedure_pt_crtyuo.title,
    procedure_instrumentapproachprocedure_pt_crtyuo.nilreason,
    procedure_instrumentapproachprocedure_pt_crtyuo.href
order by missedapproachleg.identifier, missedapproachleg_ts.sequence_number, missedapproachleg_ts.correction_number DESC;
create or replace view navaids_points.ndb_publisher_view as
select distinct on (ndb.identifier,ndb_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.ndb.id,
    navaids_points.ndb_ts.id as ts_id,
    navaids_points.ndb_tsp.id as tsp_id,
    navaids_points.ndb.identifier,
    navaids_points.ndb_ts.interpretation,
    navaids_points.ndb_ts.sequence_number,
    navaids_points.ndb_ts.correction_number,
    navaids_points.ndb_ts.valid_time_begin,
    navaids_points.ndb_ts.valid_time_end,
    navaids_points.ndb_ts.feature_lifetime_begin,
    navaids_points.ndb_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.ndb_ts.designator_value as varchar), '(' || navaids_points.ndb_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.ndb_ts.name_value as varchar), '(' || navaids_points.ndb_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.ndb_ts.emissionclass_value as varchar), '(' || navaids_points.ndb_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.ndb_ts.mobile_value as varchar), '(' || navaids_points.ndb_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.ndb_ts.magneticvariation_value as varchar), '(' || navaids_points.ndb_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.ndb_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.ndb_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.ndb_ts.datemagneticvariation_value as varchar), '(' || navaids_points.ndb_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.ndb_ts.flightchecked_value as varchar), '(' || navaids_points.ndb_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.ndb_ts.class_value as varchar), '(' || navaids_points.ndb_ts.class_nilreason || ')') as class,
    coalesce(cast(navaids_points.ndb_ts.emissionband_value as varchar), '(' || navaids_points.ndb_ts.emissionband_nilreason || ')') as emissionband,
    coalesce(cast(navaids_points.ndb_ts.frequency_value as varchar) || ' ' || navaids_points.ndb_ts.frequency_uom, '(' || navaids_points.ndb_ts.frequency_nilreason || ')') as frequency
from navaids_points.ndb 
inner join master_join mj2 on navaids_points.ndb.id = mj2.source_id
inner join navaids_points.ndb_tsp on mj2.target_id = navaids_points.ndb_tsp.id
inner join navaids_points.ndb_ts on navaids_points.ndb_tsp.ndbtimeslice_id = navaids_points.ndb_ts.id
left join master_join mj3 on navaids_points.ndb_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.ndb.feature_status = 'APPROVED'
  and navaids_points.ndb_ts.feature_status = 'APPROVED'
group by
    navaids_points.ndb.id,
    navaids_points.ndb_ts.id,
    navaids_points.ndb_tsp.id,
    navaids_points.ndb.identifier,
    navaids_points.ndb_ts.interpretation,
    navaids_points.ndb_ts.sequence_number,
    navaids_points.ndb_ts.correction_number,
    navaids_points.ndb_ts.valid_time_begin,
    navaids_points.ndb_ts.valid_time_end,
    navaids_points.ndb_ts.feature_lifetime_begin,
    navaids_points.ndb_ts.feature_lifetime_end,
    navaids_points.ndb_ts.designator_value,
    navaids_points.ndb_ts.designator_nilreason,
    navaids_points.ndb_ts.name_value,
    navaids_points.ndb_ts.name_nilreason,
    navaids_points.ndb_ts.emissionclass_value,
    navaids_points.ndb_ts.emissionclass_nilreason,
    navaids_points.ndb_ts.mobile_value,
    navaids_points.ndb_ts.mobile_nilreason,
    navaids_points.ndb_ts.magneticvariation_value,
    navaids_points.ndb_ts.magneticvariation_nilreason,
    navaids_points.ndb_ts.magneticvariationaccuracy_value,
    navaids_points.ndb_ts.magneticvariationaccuracy_nilreason,
    navaids_points.ndb_ts.datemagneticvariation_value,
    navaids_points.ndb_ts.datemagneticvariation_nilreason,
    navaids_points.ndb_ts.flightchecked_value,
    navaids_points.ndb_ts.flightchecked_nilreason,
    navaids_points.ndb_ts.class_value,
    navaids_points.ndb_ts.class_nilreason,
    navaids_points.ndb_ts.emissionband_value,
    navaids_points.ndb_ts.emissionband_nilreason,
    navaids_points.ndb_ts.frequency_value,
    navaids_points.ndb_ts.frequency_uom,
    navaids_points.ndb_ts.frequency_nilreason
order by ndb.identifier, ndb_ts.sequence_number, ndb_ts.correction_number DESC;
create or replace view surveillance.radarsystem_publisher_view as
select distinct on (radarsystem.identifier,radarsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.radarsystem.id,
    surveillance.radarsystem_ts.id as ts_id,
    surveillance.radarsystem_tsp.id as tsp_id,
    surveillance.radarsystem.identifier,
    surveillance.radarsystem_ts.interpretation,
    surveillance.radarsystem_ts.sequence_number,
    surveillance.radarsystem_ts.correction_number,
    surveillance.radarsystem_ts.valid_time_begin,
    surveillance.radarsystem_ts.valid_time_end,
    surveillance.radarsystem_ts.feature_lifetime_begin,
    surveillance.radarsystem_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(surveillance.radarsystem_ts.type_value as varchar), '(' || surveillance.radarsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(surveillance.radarsystem_ts.model_value as varchar), '(' || surveillance.radarsystem_ts.model_nilreason || ')') as model,
    coalesce(cast(surveillance.radarsystem_ts.generalterrainmonitor_value as varchar), '(' || surveillance.radarsystem_ts.generalterrainmonitor_nilreason || ')') as generalterrainmonitor,
    coalesce(cast(surveillance.radarsystem_ts.broadcastidentifier_value as varchar), '(' || surveillance.radarsystem_ts.broadcastidentifier_nilreason || ')') as broadcastidentifier,
    coalesce(cast(airport_heliport_airportheliport_pt_gjutar.title as varchar), '(' || airport_heliport_airportheliport_pt_gjutar.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_gjutar.href AS airportheliport_href
from surveillance.radarsystem 
inner join master_join mj2 on surveillance.radarsystem.id = mj2.source_id
inner join surveillance.radarsystem_tsp on mj2.target_id = surveillance.radarsystem_tsp.id
inner join surveillance.radarsystem_ts on surveillance.radarsystem_tsp.radarsystemtimeslice_id = surveillance.radarsystem_ts.id
left join master_join mj3 on surveillance.radarsystem_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_gjutar on surveillance.radarsystem_ts.airportheliport_id = airport_heliport_airportheliport_pt_gjutar.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many surveillance.radarcomponent.radarequipment - master_join
--snowflake many .organisationauthority.office - OrganisationAuthorityPropertyType
--feature many airport_heliport.runway.parrunway - master_join
--snowflake many notes.note.annotation - NotePropertyType
where surveillance.radarsystem.feature_status = 'APPROVED'
  and surveillance.radarsystem_ts.feature_status = 'APPROVED'
group by
    surveillance.radarsystem.id,
    surveillance.radarsystem_ts.id,
    surveillance.radarsystem_tsp.id,
    surveillance.radarsystem.identifier,
    surveillance.radarsystem_ts.interpretation,
    surveillance.radarsystem_ts.sequence_number,
    surveillance.radarsystem_ts.correction_number,
    surveillance.radarsystem_ts.valid_time_begin,
    surveillance.radarsystem_ts.valid_time_end,
    surveillance.radarsystem_ts.feature_lifetime_begin,
    surveillance.radarsystem_ts.feature_lifetime_end,
    surveillance.radarsystem_ts.type_value,
    surveillance.radarsystem_ts.type_nilreason,
    surveillance.radarsystem_ts.model_value,
    surveillance.radarsystem_ts.model_nilreason,
    surveillance.radarsystem_ts.generalterrainmonitor_value,
    surveillance.radarsystem_ts.generalterrainmonitor_nilreason,
    surveillance.radarsystem_ts.broadcastidentifier_value,
    surveillance.radarsystem_ts.broadcastidentifier_nilreason,
    airport_heliport_airportheliport_pt_gjutar.title,
    airport_heliport_airportheliport_pt_gjutar.nilreason,
    airport_heliport_airportheliport_pt_gjutar.href
order by radarsystem.identifier, radarsystem_ts.sequence_number, radarsystem_ts.correction_number DESC;
create or replace view navaids_points.sdf_publisher_view as
select distinct on (sdf.identifier,sdf_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.sdf.id,
    navaids_points.sdf_ts.id as ts_id,
    navaids_points.sdf_tsp.id as tsp_id,
    navaids_points.sdf.identifier,
    navaids_points.sdf_ts.interpretation,
    navaids_points.sdf_ts.sequence_number,
    navaids_points.sdf_ts.correction_number,
    navaids_points.sdf_ts.valid_time_begin,
    navaids_points.sdf_ts.valid_time_end,
    navaids_points.sdf_ts.feature_lifetime_begin,
    navaids_points.sdf_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.sdf_ts.designator_value as varchar), '(' || navaids_points.sdf_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.sdf_ts.name_value as varchar), '(' || navaids_points.sdf_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.sdf_ts.emissionclass_value as varchar), '(' || navaids_points.sdf_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.sdf_ts.mobile_value as varchar), '(' || navaids_points.sdf_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.sdf_ts.magneticvariation_value as varchar), '(' || navaids_points.sdf_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.sdf_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.sdf_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.sdf_ts.datemagneticvariation_value as varchar), '(' || navaids_points.sdf_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.sdf_ts.flightchecked_value as varchar), '(' || navaids_points.sdf_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.sdf_ts.magneticbearing_value as varchar), '(' || navaids_points.sdf_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.sdf_ts.truebearing_value as varchar), '(' || navaids_points.sdf_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.sdf_ts.frequency_value as varchar) || ' ' || navaids_points.sdf_ts.frequency_uom, '(' || navaids_points.sdf_ts.frequency_nilreason || ')') as frequency
from navaids_points.sdf 
inner join master_join mj2 on navaids_points.sdf.id = mj2.source_id
inner join navaids_points.sdf_tsp on mj2.target_id = navaids_points.sdf_tsp.id
inner join navaids_points.sdf_ts on navaids_points.sdf_tsp.sdftimeslice_id = navaids_points.sdf_ts.id
left join master_join mj3 on navaids_points.sdf_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.sdf.feature_status = 'APPROVED'
  and navaids_points.sdf_ts.feature_status = 'APPROVED'
group by
    navaids_points.sdf.id,
    navaids_points.sdf_ts.id,
    navaids_points.sdf_tsp.id,
    navaids_points.sdf.identifier,
    navaids_points.sdf_ts.interpretation,
    navaids_points.sdf_ts.sequence_number,
    navaids_points.sdf_ts.correction_number,
    navaids_points.sdf_ts.valid_time_begin,
    navaids_points.sdf_ts.valid_time_end,
    navaids_points.sdf_ts.feature_lifetime_begin,
    navaids_points.sdf_ts.feature_lifetime_end,
    navaids_points.sdf_ts.designator_value,
    navaids_points.sdf_ts.designator_nilreason,
    navaids_points.sdf_ts.name_value,
    navaids_points.sdf_ts.name_nilreason,
    navaids_points.sdf_ts.emissionclass_value,
    navaids_points.sdf_ts.emissionclass_nilreason,
    navaids_points.sdf_ts.mobile_value,
    navaids_points.sdf_ts.mobile_nilreason,
    navaids_points.sdf_ts.magneticvariation_value,
    navaids_points.sdf_ts.magneticvariation_nilreason,
    navaids_points.sdf_ts.magneticvariationaccuracy_value,
    navaids_points.sdf_ts.magneticvariationaccuracy_nilreason,
    navaids_points.sdf_ts.datemagneticvariation_value,
    navaids_points.sdf_ts.datemagneticvariation_nilreason,
    navaids_points.sdf_ts.flightchecked_value,
    navaids_points.sdf_ts.flightchecked_nilreason,
    navaids_points.sdf_ts.magneticbearing_value,
    navaids_points.sdf_ts.magneticbearing_nilreason,
    navaids_points.sdf_ts.truebearing_value,
    navaids_points.sdf_ts.truebearing_nilreason,
    navaids_points.sdf_ts.frequency_value,
    navaids_points.sdf_ts.frequency_uom,
    navaids_points.sdf_ts.frequency_nilreason
order by sdf.identifier, sdf_ts.sequence_number, sdf_ts.correction_number DESC;
create or replace view airport_heliport.seaplanelandingarea_publisher_view as
select distinct on (seaplanelandingarea.identifier,seaplanelandingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.seaplanelandingarea.id,
    airport_heliport.seaplanelandingarea_ts.id as ts_id,
    airport_heliport.seaplanelandingarea_tsp.id as tsp_id,
    airport_heliport.seaplanelandingarea.identifier,
    airport_heliport.seaplanelandingarea_ts.interpretation,
    airport_heliport.seaplanelandingarea_ts.sequence_number,
    airport_heliport.seaplanelandingarea_ts.correction_number,
    airport_heliport.seaplanelandingarea_ts.valid_time_begin,
    airport_heliport.seaplanelandingarea_ts.valid_time_end,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_begin,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation
from airport_heliport.seaplanelandingarea 
inner join master_join mj2 on airport_heliport.seaplanelandingarea.id = mj2.source_id
inner join airport_heliport.seaplanelandingarea_tsp on mj2.target_id = airport_heliport.seaplanelandingarea_tsp.id
inner join airport_heliport.seaplanelandingarea_ts on airport_heliport.seaplanelandingarea_tsp.seaplanelandingareatimeslice_id = airport_heliport.seaplanelandingarea_ts.id
left join master_join mj3 on airport_heliport.seaplanelandingarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
--feature many airport_heliport.seaplanerampsite.rampsite - master_join
--feature many airport_heliport.floatingdocksite.docksite - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.manoeuvringareaavailability.availability - master_join
where airport_heliport.seaplanelandingarea.feature_status = 'APPROVED'
  and airport_heliport.seaplanelandingarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.seaplanelandingarea.id,
    airport_heliport.seaplanelandingarea_ts.id,
    airport_heliport.seaplanelandingarea_tsp.id,
    airport_heliport.seaplanelandingarea.identifier,
    airport_heliport.seaplanelandingarea_ts.interpretation,
    airport_heliport.seaplanelandingarea_ts.sequence_number,
    airport_heliport.seaplanelandingarea_ts.correction_number,
    airport_heliport.seaplanelandingarea_ts.valid_time_begin,
    airport_heliport.seaplanelandingarea_ts.valid_time_end,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_begin,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_end
order by seaplanelandingarea.identifier, seaplanelandingarea_ts.sequence_number, seaplanelandingarea_ts.correction_number DESC;
create or replace view procedure.standardinstrumentarrival_publisher_view as
select distinct on (standardinstrumentarrival.identifier,standardinstrumentarrival_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.standardinstrumentarrival.id,
    procedure.standardinstrumentarrival_ts.id as ts_id,
    procedure.standardinstrumentarrival_tsp.id as tsp_id,
    procedure.standardinstrumentarrival.identifier,
    procedure.standardinstrumentarrival_ts.interpretation,
    procedure.standardinstrumentarrival_ts.sequence_number,
    procedure.standardinstrumentarrival_ts.correction_number,
    procedure.standardinstrumentarrival_ts.valid_time_begin,
    procedure.standardinstrumentarrival_ts.valid_time_end,
    procedure.standardinstrumentarrival_ts.feature_lifetime_begin,
    procedure.standardinstrumentarrival_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.standardinstrumentarrival_ts.communicationfailureinstruction_value as varchar), '(' || procedure.standardinstrumentarrival_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.standardinstrumentarrival_ts.instruction_value as varchar), '(' || procedure.standardinstrumentarrival_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.standardinstrumentarrival_ts.designcriteria_value as varchar), '(' || procedure.standardinstrumentarrival_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.standardinstrumentarrival_ts.codingstandard_value as varchar), '(' || procedure.standardinstrumentarrival_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.standardinstrumentarrival_ts.flightchecked_value as varchar), '(' || procedure.standardinstrumentarrival_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.standardinstrumentarrival_ts.name_value as varchar), '(' || procedure.standardinstrumentarrival_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.standardinstrumentarrival_ts.rnav_value as varchar), '(' || procedure.standardinstrumentarrival_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.standardinstrumentarrival_ts.designator_value as varchar), '(' || procedure.standardinstrumentarrival_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points_navaid_pt_kjfiqy.title as varchar), '(' || navaids_points_navaid_pt_kjfiqy.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_kjfiqy.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_gsqvju.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_gsqvju.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_gsqvju.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_kzqkjz.title as varchar), '(' || surveillance_radarsystem_pt_kzqkjz.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_kzqkjz.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_njzvre.title as varchar), '(' || procedure_safealtitudearea_pt_njzvre.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_njzvre.href AS safealtitude_href,
    coalesce(cast(procedure_landingtakeoffareacollection_pt_pbxtzn.title as varchar), '(' || procedure_landingtakeoffareacollection_pt_pbxtzn.nilreason[1] || ')') AS arrival,
    procedure_landingtakeoffareacollection_pt_pbxtzn.href AS arrival_href
from procedure.standardinstrumentarrival 
inner join master_join mj2 on procedure.standardinstrumentarrival.id = mj2.source_id
inner join procedure.standardinstrumentarrival_tsp on mj2.target_id = procedure.standardinstrumentarrival_tsp.id
inner join procedure.standardinstrumentarrival_ts on procedure.standardinstrumentarrival_tsp.standardinstrumentarrivaltimeslice_id = procedure.standardinstrumentarrival_ts.id
left join master_join mj3 on procedure.standardinstrumentarrival_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_kjfiqy on procedure.standardinstrumentarrival_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_kjfiqy.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_gsqvju on procedure.standardinstrumentarrival_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_gsqvju.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_kzqkjz on procedure.standardinstrumentarrival_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_kzqkjz.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_njzvre on procedure.standardinstrumentarrival_ts.safealtitude_id = procedure_safealtitudearea_pt_njzvre.id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_pbxtzn on procedure.standardinstrumentarrival_ts.arrival_id = procedure_landingtakeoffareacollection_pt_pbxtzn.id
--object many procedure.procedureavailability.availability - master_join
--feature many airport_heliport.airportheliport.airportheliport - master_join
--object many shared.aircraftcharacteristic.aircraftcharacteristic - master_join
--object many procedure.proceduretransition.flighttransition - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.standardinstrumentarrival.feature_status = 'APPROVED'
  and procedure.standardinstrumentarrival_ts.feature_status = 'APPROVED'
group by
    procedure.standardinstrumentarrival.id,
    procedure.standardinstrumentarrival_ts.id,
    procedure.standardinstrumentarrival_tsp.id,
    procedure.standardinstrumentarrival.identifier,
    procedure.standardinstrumentarrival_ts.interpretation,
    procedure.standardinstrumentarrival_ts.sequence_number,
    procedure.standardinstrumentarrival_ts.correction_number,
    procedure.standardinstrumentarrival_ts.valid_time_begin,
    procedure.standardinstrumentarrival_ts.valid_time_end,
    procedure.standardinstrumentarrival_ts.feature_lifetime_begin,
    procedure.standardinstrumentarrival_ts.feature_lifetime_end,
    procedure.standardinstrumentarrival_ts.communicationfailureinstruction_value,
    procedure.standardinstrumentarrival_ts.communicationfailureinstruction_nilreason,
    procedure.standardinstrumentarrival_ts.instruction_value,
    procedure.standardinstrumentarrival_ts.instruction_nilreason,
    procedure.standardinstrumentarrival_ts.designcriteria_value,
    procedure.standardinstrumentarrival_ts.designcriteria_nilreason,
    procedure.standardinstrumentarrival_ts.codingstandard_value,
    procedure.standardinstrumentarrival_ts.codingstandard_nilreason,
    procedure.standardinstrumentarrival_ts.flightchecked_value,
    procedure.standardinstrumentarrival_ts.flightchecked_nilreason,
    procedure.standardinstrumentarrival_ts.name_value,
    procedure.standardinstrumentarrival_ts.name_nilreason,
    procedure.standardinstrumentarrival_ts.rnav_value,
    procedure.standardinstrumentarrival_ts.rnav_nilreason,
    procedure.standardinstrumentarrival_ts.designator_value,
    procedure.standardinstrumentarrival_ts.designator_nilreason,
    navaids_points_navaid_pt_kjfiqy.title,
    navaids_points_navaid_pt_kjfiqy.nilreason,
    navaids_points_navaid_pt_kjfiqy.href,
    navaids_points_specialnavigationsystem_pt_gsqvju.title,
    navaids_points_specialnavigationsystem_pt_gsqvju.nilreason,
    navaids_points_specialnavigationsystem_pt_gsqvju.href,
    surveillance_radarsystem_pt_kzqkjz.title,
    surveillance_radarsystem_pt_kzqkjz.nilreason,
    surveillance_radarsystem_pt_kzqkjz.href,
    procedure_safealtitudearea_pt_njzvre.title,
    procedure_safealtitudearea_pt_njzvre.nilreason,
    procedure_safealtitudearea_pt_njzvre.href,
    procedure_landingtakeoffareacollection_pt_pbxtzn.title,
    procedure_landingtakeoffareacollection_pt_pbxtzn.nilreason,
    procedure_landingtakeoffareacollection_pt_pbxtzn.href
order by standardinstrumentarrival.identifier, standardinstrumentarrival_ts.sequence_number, standardinstrumentarrival_ts.correction_number DESC;
create or replace view procedure.standardinstrumentdeparture_publisher_view as
select distinct on (standardinstrumentdeparture.identifier,standardinstrumentdeparture_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.standardinstrumentdeparture.id,
    procedure.standardinstrumentdeparture_ts.id as ts_id,
    procedure.standardinstrumentdeparture_tsp.id as tsp_id,
    procedure.standardinstrumentdeparture.identifier,
    procedure.standardinstrumentdeparture_ts.interpretation,
    procedure.standardinstrumentdeparture_ts.sequence_number,
    procedure.standardinstrumentdeparture_ts.correction_number,
    procedure.standardinstrumentdeparture_ts.valid_time_begin,
    procedure.standardinstrumentdeparture_ts.valid_time_end,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_begin,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.instruction_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.designcriteria_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.codingstandard_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.flightchecked_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.name_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.rnav_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.designator_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.designator_nilreason || ')') as designator,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.contingencyroute_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.contingencyroute_nilreason || ')') as contingencyroute,
    coalesce(cast(navaids_points_navaid_pt_ceyscm.title as varchar), '(' || navaids_points_navaid_pt_ceyscm.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_ceyscm.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_gezqva.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_gezqva.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_gezqva.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_flvplu.title as varchar), '(' || surveillance_radarsystem_pt_flvplu.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_flvplu.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_ayjqhr.title as varchar), '(' || procedure_safealtitudearea_pt_ayjqhr.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_ayjqhr.href AS safealtitude_href,
    coalesce(cast(procedure_landingtakeoffareacollection_pt_iilwtn.title as varchar), '(' || procedure_landingtakeoffareacollection_pt_iilwtn.nilreason[1] || ')') AS takeoff,
    procedure_landingtakeoffareacollection_pt_iilwtn.href AS takeoff_href
from procedure.standardinstrumentdeparture 
inner join master_join mj2 on procedure.standardinstrumentdeparture.id = mj2.source_id
inner join procedure.standardinstrumentdeparture_tsp on mj2.target_id = procedure.standardinstrumentdeparture_tsp.id
inner join procedure.standardinstrumentdeparture_ts on procedure.standardinstrumentdeparture_tsp.standardinstrumentdeparturetimeslice_id = procedure.standardinstrumentdeparture_ts.id
left join master_join mj3 on procedure.standardinstrumentdeparture_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ceyscm on procedure.standardinstrumentdeparture_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_ceyscm.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_gezqva on procedure.standardinstrumentdeparture_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_gezqva.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_flvplu on procedure.standardinstrumentdeparture_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_flvplu.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_ayjqhr on procedure.standardinstrumentdeparture_ts.safealtitude_id = procedure_safealtitudearea_pt_ayjqhr.id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_iilwtn on procedure.standardinstrumentdeparture_ts.takeoff_id = procedure_landingtakeoffareacollection_pt_iilwtn.id
--object many procedure.procedureavailability.availability - master_join
--feature many airport_heliport.airportheliport.airportheliport - master_join
--object many shared.aircraftcharacteristic.aircraftcharacteristic - master_join
--object many procedure.proceduretransition.flighttransition - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.standardinstrumentdeparture.feature_status = 'APPROVED'
  and procedure.standardinstrumentdeparture_ts.feature_status = 'APPROVED'
group by
    procedure.standardinstrumentdeparture.id,
    procedure.standardinstrumentdeparture_ts.id,
    procedure.standardinstrumentdeparture_tsp.id,
    procedure.standardinstrumentdeparture.identifier,
    procedure.standardinstrumentdeparture_ts.interpretation,
    procedure.standardinstrumentdeparture_ts.sequence_number,
    procedure.standardinstrumentdeparture_ts.correction_number,
    procedure.standardinstrumentdeparture_ts.valid_time_begin,
    procedure.standardinstrumentdeparture_ts.valid_time_end,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_begin,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_end,
    procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_value,
    procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_nilreason,
    procedure.standardinstrumentdeparture_ts.instruction_value,
    procedure.standardinstrumentdeparture_ts.instruction_nilreason,
    procedure.standardinstrumentdeparture_ts.designcriteria_value,
    procedure.standardinstrumentdeparture_ts.designcriteria_nilreason,
    procedure.standardinstrumentdeparture_ts.codingstandard_value,
    procedure.standardinstrumentdeparture_ts.codingstandard_nilreason,
    procedure.standardinstrumentdeparture_ts.flightchecked_value,
    procedure.standardinstrumentdeparture_ts.flightchecked_nilreason,
    procedure.standardinstrumentdeparture_ts.name_value,
    procedure.standardinstrumentdeparture_ts.name_nilreason,
    procedure.standardinstrumentdeparture_ts.rnav_value,
    procedure.standardinstrumentdeparture_ts.rnav_nilreason,
    procedure.standardinstrumentdeparture_ts.designator_value,
    procedure.standardinstrumentdeparture_ts.designator_nilreason,
    procedure.standardinstrumentdeparture_ts.contingencyroute_value,
    procedure.standardinstrumentdeparture_ts.contingencyroute_nilreason,
    navaids_points_navaid_pt_ceyscm.title,
    navaids_points_navaid_pt_ceyscm.nilreason,
    navaids_points_navaid_pt_ceyscm.href,
    navaids_points_specialnavigationsystem_pt_gezqva.title,
    navaids_points_specialnavigationsystem_pt_gezqva.nilreason,
    navaids_points_specialnavigationsystem_pt_gezqva.href,
    surveillance_radarsystem_pt_flvplu.title,
    surveillance_radarsystem_pt_flvplu.nilreason,
    surveillance_radarsystem_pt_flvplu.href,
    procedure_safealtitudearea_pt_ayjqhr.title,
    procedure_safealtitudearea_pt_ayjqhr.nilreason,
    procedure_safealtitudearea_pt_ayjqhr.href,
    procedure_landingtakeoffareacollection_pt_iilwtn.title,
    procedure_landingtakeoffareacollection_pt_iilwtn.nilreason,
    procedure_landingtakeoffareacollection_pt_iilwtn.href
order by standardinstrumentdeparture.identifier, standardinstrumentdeparture_ts.sequence_number, standardinstrumentdeparture_ts.correction_number DESC;
create or replace view navaids_points.tacan_publisher_view as
select distinct on (tacan.identifier,tacan_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.tacan.id,
    navaids_points.tacan_ts.id as ts_id,
    navaids_points.tacan_tsp.id as tsp_id,
    navaids_points.tacan.identifier,
    navaids_points.tacan_ts.interpretation,
    navaids_points.tacan_ts.sequence_number,
    navaids_points.tacan_ts.correction_number,
    navaids_points.tacan_ts.valid_time_begin,
    navaids_points.tacan_ts.valid_time_end,
    navaids_points.tacan_ts.feature_lifetime_begin,
    navaids_points.tacan_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.tacan_ts.designator_value as varchar), '(' || navaids_points.tacan_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.tacan_ts.name_value as varchar), '(' || navaids_points.tacan_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.tacan_ts.emissionclass_value as varchar), '(' || navaids_points.tacan_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.tacan_ts.mobile_value as varchar), '(' || navaids_points.tacan_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.tacan_ts.magneticvariation_value as varchar), '(' || navaids_points.tacan_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.tacan_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.tacan_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.tacan_ts.datemagneticvariation_value as varchar), '(' || navaids_points.tacan_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.tacan_ts.flightchecked_value as varchar), '(' || navaids_points.tacan_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.tacan_ts.channel_value as varchar), '(' || navaids_points.tacan_ts.channel_nilreason || ')') as channel,
    coalesce(cast(navaids_points.tacan_ts.declination_value as varchar), '(' || navaids_points.tacan_ts.declination_nilreason || ')') as declination
from navaids_points.tacan 
inner join master_join mj2 on navaids_points.tacan.id = mj2.source_id
inner join navaids_points.tacan_tsp on mj2.target_id = navaids_points.tacan_tsp.id
inner join navaids_points.tacan_ts on navaids_points.tacan_tsp.tacantimeslice_id = navaids_points.tacan_ts.id
left join master_join mj3 on navaids_points.tacan_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.tacan.feature_status = 'APPROVED'
  and navaids_points.tacan_ts.feature_status = 'APPROVED'
group by
    navaids_points.tacan.id,
    navaids_points.tacan_ts.id,
    navaids_points.tacan_tsp.id,
    navaids_points.tacan.identifier,
    navaids_points.tacan_ts.interpretation,
    navaids_points.tacan_ts.sequence_number,
    navaids_points.tacan_ts.correction_number,
    navaids_points.tacan_ts.valid_time_begin,
    navaids_points.tacan_ts.valid_time_end,
    navaids_points.tacan_ts.feature_lifetime_begin,
    navaids_points.tacan_ts.feature_lifetime_end,
    navaids_points.tacan_ts.designator_value,
    navaids_points.tacan_ts.designator_nilreason,
    navaids_points.tacan_ts.name_value,
    navaids_points.tacan_ts.name_nilreason,
    navaids_points.tacan_ts.emissionclass_value,
    navaids_points.tacan_ts.emissionclass_nilreason,
    navaids_points.tacan_ts.mobile_value,
    navaids_points.tacan_ts.mobile_nilreason,
    navaids_points.tacan_ts.magneticvariation_value,
    navaids_points.tacan_ts.magneticvariation_nilreason,
    navaids_points.tacan_ts.magneticvariationaccuracy_value,
    navaids_points.tacan_ts.magneticvariationaccuracy_nilreason,
    navaids_points.tacan_ts.datemagneticvariation_value,
    navaids_points.tacan_ts.datemagneticvariation_nilreason,
    navaids_points.tacan_ts.flightchecked_value,
    navaids_points.tacan_ts.flightchecked_nilreason,
    navaids_points.tacan_ts.channel_value,
    navaids_points.tacan_ts.channel_nilreason,
    navaids_points.tacan_ts.declination_value,
    navaids_points.tacan_ts.declination_nilreason
order by tacan.identifier, tacan_ts.sequence_number, tacan_ts.correction_number DESC;
create or replace view procedure.terminalarrivalarea_publisher_view as
select distinct on (terminalarrivalarea.identifier,terminalarrivalarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.terminalarrivalarea.id,
    procedure.terminalarrivalarea_ts.id as ts_id,
    procedure.terminalarrivalarea_tsp.id as tsp_id,
    procedure.terminalarrivalarea.identifier,
    procedure.terminalarrivalarea_ts.interpretation,
    procedure.terminalarrivalarea_ts.sequence_number,
    procedure.terminalarrivalarea_ts.correction_number,
    procedure.terminalarrivalarea_ts.valid_time_begin,
    procedure.terminalarrivalarea_ts.valid_time_end,
    procedure.terminalarrivalarea_ts.feature_lifetime_begin,
    procedure.terminalarrivalarea_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.terminalarrivalarea_ts.arrivalareatype_value as varchar), '(' || procedure.terminalarrivalarea_ts.arrivalareatype_nilreason || ')') as arrivalareatype,
    coalesce(cast(procedure.terminalarrivalarea_ts.outerbufferwidth_value as varchar) || ' ' || procedure.terminalarrivalarea_ts.outerbufferwidth_uom, '(' || procedure.terminalarrivalarea_ts.outerbufferwidth_nilreason || ')') as outerbufferwidth,
    coalesce(cast(procedure.terminalarrivalarea_ts.lateralbufferwidth_value as varchar) || ' ' || procedure.terminalarrivalarea_ts.lateralbufferwidth_uom, '(' || procedure.terminalarrivalarea_ts.lateralbufferwidth_nilreason || ')') as lateralbufferwidth,
    coalesce(cast(navaids_points_designatedpoint_pt_pxtksc.title as varchar), '(' || navaids_points_designatedpoint_pt_pxtksc.nilreason[1] || ')') AS iffixdesignatedpoint,
    navaids_points_designatedpoint_pt_pxtksc.href AS iffixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_twobfo.title as varchar), '(' || navaids_points_designatedpoint_pt_twobfo.nilreason[1] || ')') AS iaffixdesignatedpoint,
    navaids_points_designatedpoint_pt_twobfo.href AS iaffixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_hsteiq.title as varchar), '(' || navaids_points_navaid_pt_hsteiq.nilreason[1] || ')') AS ifnavaidsystem,
    navaids_points_navaid_pt_hsteiq.href AS ifnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_voqesg.title as varchar), '(' || navaids_points_navaid_pt_voqesg.nilreason[1] || ')') AS iafnavaidsystem,
    navaids_points_navaid_pt_voqesg.href AS iafnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ingozg.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ingozg.nilreason[1] || ')') AS ifaimingpoint,
    airport_heliport_touchdownliftoff_pt_ingozg.href AS ifaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_yvrhge.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_yvrhge.nilreason[1] || ')') AS iafaimingpoint,
    airport_heliport_touchdownliftoff_pt_yvrhge.href AS iafaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_zbcikx.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_zbcikx.nilreason[1] || ')') AS ifrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_zbcikx.href AS ifrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_uffdsz.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_uffdsz.nilreason[1] || ')') AS iafrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_uffdsz.href AS iafrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_vctvsy.title as varchar), '(' || airport_heliport_airportheliport_pt_vctvsy.nilreason[1] || ')') AS ifairportreferencepoint,
    airport_heliport_airportheliport_pt_vctvsy.href AS ifairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_wojvor.title as varchar), '(' || airport_heliport_airportheliport_pt_wojvor.nilreason[1] || ')') AS iafairportreferencepoint,
    airport_heliport_airportheliport_pt_wojvor.href AS iafairportreferencepoint_href,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_pcxkoe.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_pcxkoe.nilreason[1] || ')') AS approachrnav,
    procedure_instrumentapproachprocedure_pt_pcxkoe.href AS approachrnav_href
from procedure.terminalarrivalarea 
inner join master_join mj2 on procedure.terminalarrivalarea.id = mj2.source_id
inner join procedure.terminalarrivalarea_tsp on mj2.target_id = procedure.terminalarrivalarea_tsp.id
inner join procedure.terminalarrivalarea_ts on procedure.terminalarrivalarea_tsp.terminalarrivalareatimeslice_id = procedure.terminalarrivalarea_ts.id
left join master_join mj3 on procedure.terminalarrivalarea_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_pxtksc on procedure.terminalarrivalarea_ts.if_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_pxtksc.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_hsteiq on procedure.terminalarrivalarea_ts.if_navaidsystem_id = navaids_points_navaid_pt_hsteiq.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ingozg on procedure.terminalarrivalarea_ts.if_aimingpoint_id = airport_heliport_touchdownliftoff_pt_ingozg.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_zbcikx on procedure.terminalarrivalarea_ts.if_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_zbcikx.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_vctvsy on procedure.terminalarrivalarea_ts.if_airportreferencepoint_id = airport_heliport_airportheliport_pt_vctvsy.id
--snowflake one geometry.point.ifposition - PointPropertyType
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_twobfo on procedure.terminalarrivalarea_ts.iaf_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_twobfo.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_voqesg on procedure.terminalarrivalarea_ts.iaf_navaidsystem_id = navaids_points_navaid_pt_voqesg.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_yvrhge on procedure.terminalarrivalarea_ts.iaf_aimingpoint_id = airport_heliport_touchdownliftoff_pt_yvrhge.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_uffdsz on procedure.terminalarrivalarea_ts.iaf_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_uffdsz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_wojvor on procedure.terminalarrivalarea_ts.iaf_airportreferencepoint_id = airport_heliport_airportheliport_pt_wojvor.id
--snowflake one geometry.point.iafposition - PointPropertyType
--snowflake one geometry.surface.buffer - SurfacePropertyType
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_pcxkoe on procedure.terminalarrivalarea_ts.approachrnav_id = procedure_instrumentapproachprocedure_pt_pcxkoe.id
--object many procedure.terminalarrivalareasector.sector - master_join
--snowflake many notes.note.annotation - NotePropertyType
where procedure.terminalarrivalarea.feature_status = 'APPROVED'
  and procedure.terminalarrivalarea_ts.feature_status = 'APPROVED'
group by
    procedure.terminalarrivalarea.id,
    procedure.terminalarrivalarea_ts.id,
    procedure.terminalarrivalarea_tsp.id,
    procedure.terminalarrivalarea.identifier,
    procedure.terminalarrivalarea_ts.interpretation,
    procedure.terminalarrivalarea_ts.sequence_number,
    procedure.terminalarrivalarea_ts.correction_number,
    procedure.terminalarrivalarea_ts.valid_time_begin,
    procedure.terminalarrivalarea_ts.valid_time_end,
    procedure.terminalarrivalarea_ts.feature_lifetime_begin,
    procedure.terminalarrivalarea_ts.feature_lifetime_end,
    procedure.terminalarrivalarea_ts.arrivalareatype_value,
    procedure.terminalarrivalarea_ts.arrivalareatype_nilreason,
    procedure.terminalarrivalarea_ts.outerbufferwidth_value,
    procedure.terminalarrivalarea_ts.outerbufferwidth_uom,
    procedure.terminalarrivalarea_ts.outerbufferwidth_nilreason,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_value,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_uom,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_nilreason,
    navaids_points_designatedpoint_pt_pxtksc.title,
    navaids_points_designatedpoint_pt_pxtksc.nilreason,
    navaids_points_designatedpoint_pt_pxtksc.href,
    navaids_points_navaid_pt_hsteiq.title,
    navaids_points_navaid_pt_hsteiq.nilreason,
    navaids_points_navaid_pt_hsteiq.href,
    airport_heliport_touchdownliftoff_pt_ingozg.title,
    airport_heliport_touchdownliftoff_pt_ingozg.nilreason,
    airport_heliport_touchdownliftoff_pt_ingozg.href,
    airport_heliport_runwaycentrelinepoint_pt_zbcikx.title,
    airport_heliport_runwaycentrelinepoint_pt_zbcikx.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_zbcikx.href,
    airport_heliport_airportheliport_pt_vctvsy.title,
    airport_heliport_airportheliport_pt_vctvsy.nilreason,
    airport_heliport_airportheliport_pt_vctvsy.href,
    navaids_points_designatedpoint_pt_twobfo.title,
    navaids_points_designatedpoint_pt_twobfo.nilreason,
    navaids_points_designatedpoint_pt_twobfo.href,
    navaids_points_navaid_pt_voqesg.title,
    navaids_points_navaid_pt_voqesg.nilreason,
    navaids_points_navaid_pt_voqesg.href,
    airport_heliport_touchdownliftoff_pt_yvrhge.title,
    airport_heliport_touchdownliftoff_pt_yvrhge.nilreason,
    airport_heliport_touchdownliftoff_pt_yvrhge.href,
    airport_heliport_runwaycentrelinepoint_pt_uffdsz.title,
    airport_heliport_runwaycentrelinepoint_pt_uffdsz.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_uffdsz.href,
    airport_heliport_airportheliport_pt_wojvor.title,
    airport_heliport_airportheliport_pt_wojvor.nilreason,
    airport_heliport_airportheliport_pt_wojvor.href,
    procedure_instrumentapproachprocedure_pt_pcxkoe.title,
    procedure_instrumentapproachprocedure_pt_pcxkoe.nilreason,
    procedure_instrumentapproachprocedure_pt_pcxkoe.href
order by terminalarrivalarea.identifier, terminalarrivalarea_ts.sequence_number, terminalarrivalarea_ts.correction_number DESC;
create or replace view airport_heliport.touchdownliftoff_publisher_view as
select distinct on (touchdownliftoff.identifier,touchdownliftoff_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoff.id,
    airport_heliport.touchdownliftoff_ts.id as ts_id,
    airport_heliport.touchdownliftoff_tsp.id as tsp_id,
    airport_heliport.touchdownliftoff.identifier,
    airport_heliport.touchdownliftoff_ts.interpretation,
    airport_heliport.touchdownliftoff_ts.sequence_number,
    airport_heliport.touchdownliftoff_ts.correction_number,
    airport_heliport.touchdownliftoff_ts.valid_time_begin,
    airport_heliport.touchdownliftoff_ts.valid_time_end,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.designator_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.slope_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.slope_nilreason || ')') as slope,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.helicopterclass_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.helicopterclass_nilreason || ')') as helicopterclass,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.abandoned_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.length_value as varchar) || ' ' || airport_heliport.touchdownliftoff_ts.length_uom, '(' || airport_heliport.touchdownliftoff_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.width_value as varchar) || ' ' || airport_heliport.touchdownliftoff_ts.width_uom, '(' || airport_heliport.touchdownliftoff_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport_surfacecharacteristics_pt_snjbnp.title as varchar), '(' || airport_heliport_surfacecharacteristics_pt_snjbnp.nilreason[1] || ')') AS surfaceproperties,
    airport_heliport_surfacecharacteristics_pt_snjbnp.href AS surfaceproperties_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ipgoqm.title as varchar), '(' || airport_heliport_airportheliport_pt_ipgoqm.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ipgoqm.href AS associatedairportheliport_href,
    coalesce(cast(airport_heliport_runway_pt_vayvzq.title as varchar), '(' || airport_heliport_runway_pt_vayvzq.nilreason[1] || ')') AS approachtakeoffarea,
    airport_heliport_runway_pt_vayvzq.href AS approachtakeoffarea_href
from airport_heliport.touchdownliftoff 
inner join master_join mj2 on airport_heliport.touchdownliftoff.id = mj2.source_id
inner join airport_heliport.touchdownliftoff_tsp on mj2.target_id = airport_heliport.touchdownliftoff_tsp.id
inner join airport_heliport.touchdownliftoff_ts on airport_heliport.touchdownliftoff_tsp.touchdownliftofftimeslice_id = airport_heliport.touchdownliftoff_ts.id
left join master_join mj3 on airport_heliport.touchdownliftoff_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.aimingpoint - ElevatedPointPropertyType
--snowflake one geometry.elevatedsurface.extent - ElevatedSurfacePropertyType
left join airport_heliport.surfacecharacteristics_pt airport_heliport_surfacecharacteristics_pt_snjbnp on airport_heliport.touchdownliftoff_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_pt_snjbnp.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ipgoqm on airport_heliport.touchdownliftoff_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ipgoqm.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_vayvzq on airport_heliport.touchdownliftoff_ts.approachtakeoffarea_id = airport_heliport_runway_pt_vayvzq.id
--object many airport_heliport.touchdownliftoffcontamination.contaminant - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many airport_heliport.manoeuvringareaavailability.availability - master_join
where airport_heliport.touchdownliftoff.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoff_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoff.id,
    airport_heliport.touchdownliftoff_ts.id,
    airport_heliport.touchdownliftoff_tsp.id,
    airport_heliport.touchdownliftoff.identifier,
    airport_heliport.touchdownliftoff_ts.interpretation,
    airport_heliport.touchdownliftoff_ts.sequence_number,
    airport_heliport.touchdownliftoff_ts.correction_number,
    airport_heliport.touchdownliftoff_ts.valid_time_begin,
    airport_heliport.touchdownliftoff_ts.valid_time_end,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoff_ts.designator_value,
    airport_heliport.touchdownliftoff_ts.designator_nilreason,
    airport_heliport.touchdownliftoff_ts.slope_value,
    airport_heliport.touchdownliftoff_ts.slope_nilreason,
    airport_heliport.touchdownliftoff_ts.helicopterclass_value,
    airport_heliport.touchdownliftoff_ts.helicopterclass_nilreason,
    airport_heliport.touchdownliftoff_ts.abandoned_value,
    airport_heliport.touchdownliftoff_ts.abandoned_nilreason,
    airport_heliport.touchdownliftoff_ts.length_value,
    airport_heliport.touchdownliftoff_ts.length_uom,
    airport_heliport.touchdownliftoff_ts.length_nilreason,
    airport_heliport.touchdownliftoff_ts.width_value,
    airport_heliport.touchdownliftoff_ts.width_uom,
    airport_heliport.touchdownliftoff_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_pt_snjbnp.title,
    airport_heliport_surfacecharacteristics_pt_snjbnp.nilreason,
    airport_heliport_surfacecharacteristics_pt_snjbnp.href,
    airport_heliport_airportheliport_pt_ipgoqm.title,
    airport_heliport_airportheliport_pt_ipgoqm.nilreason,
    airport_heliport_airportheliport_pt_ipgoqm.href,
    airport_heliport_runway_pt_vayvzq.title,
    airport_heliport_runway_pt_vayvzq.nilreason,
    airport_heliport_runway_pt_vayvzq.href
order by touchdownliftoff.identifier, touchdownliftoff_ts.sequence_number, touchdownliftoff_ts.correction_number DESC;
create or replace view navaids_points.vor_publisher_view as
select distinct on (vor.identifier,vor_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.vor.id,
    navaids_points.vor_ts.id as ts_id,
    navaids_points.vor_tsp.id as tsp_id,
    navaids_points.vor.identifier,
    navaids_points.vor_ts.interpretation,
    navaids_points.vor_ts.sequence_number,
    navaids_points.vor_ts.correction_number,
    navaids_points.vor_ts.valid_time_begin,
    navaids_points.vor_ts.valid_time_end,
    navaids_points.vor_ts.feature_lifetime_begin,
    navaids_points.vor_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.vor_ts.designator_value as varchar), '(' || navaids_points.vor_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.vor_ts.name_value as varchar), '(' || navaids_points.vor_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.vor_ts.emissionclass_value as varchar), '(' || navaids_points.vor_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.vor_ts.mobile_value as varchar), '(' || navaids_points.vor_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.vor_ts.magneticvariation_value as varchar), '(' || navaids_points.vor_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.vor_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.vor_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.vor_ts.datemagneticvariation_value as varchar), '(' || navaids_points.vor_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.vor_ts.flightchecked_value as varchar), '(' || navaids_points.vor_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.vor_ts.type_value as varchar), '(' || navaids_points.vor_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.vor_ts.zerobearingdirection_value as varchar), '(' || navaids_points.vor_ts.zerobearingdirection_nilreason || ')') as zerobearingdirection,
    coalesce(cast(navaids_points.vor_ts.declination_value as varchar), '(' || navaids_points.vor_ts.declination_nilreason || ')') as declination,
    coalesce(cast(navaids_points.vor_ts.frequency_value as varchar) || ' ' || navaids_points.vor_ts.frequency_uom, '(' || navaids_points.vor_ts.frequency_nilreason || ')') as frequency
from navaids_points.vor 
inner join master_join mj2 on navaids_points.vor.id = mj2.source_id
inner join navaids_points.vor_tsp on mj2.target_id = navaids_points.vor_tsp.id
inner join navaids_points.vor_ts on navaids_points.vor_tsp.vortimeslice_id = navaids_points.vor_ts.id
left join master_join mj3 on navaids_points.vor_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.vor.feature_status = 'APPROVED'
  and navaids_points.vor_ts.feature_status = 'APPROVED'
group by
    navaids_points.vor.id,
    navaids_points.vor_ts.id,
    navaids_points.vor_tsp.id,
    navaids_points.vor.identifier,
    navaids_points.vor_ts.interpretation,
    navaids_points.vor_ts.sequence_number,
    navaids_points.vor_ts.correction_number,
    navaids_points.vor_ts.valid_time_begin,
    navaids_points.vor_ts.valid_time_end,
    navaids_points.vor_ts.feature_lifetime_begin,
    navaids_points.vor_ts.feature_lifetime_end,
    navaids_points.vor_ts.designator_value,
    navaids_points.vor_ts.designator_nilreason,
    navaids_points.vor_ts.name_value,
    navaids_points.vor_ts.name_nilreason,
    navaids_points.vor_ts.emissionclass_value,
    navaids_points.vor_ts.emissionclass_nilreason,
    navaids_points.vor_ts.mobile_value,
    navaids_points.vor_ts.mobile_nilreason,
    navaids_points.vor_ts.magneticvariation_value,
    navaids_points.vor_ts.magneticvariation_nilreason,
    navaids_points.vor_ts.magneticvariationaccuracy_value,
    navaids_points.vor_ts.magneticvariationaccuracy_nilreason,
    navaids_points.vor_ts.datemagneticvariation_value,
    navaids_points.vor_ts.datemagneticvariation_nilreason,
    navaids_points.vor_ts.flightchecked_value,
    navaids_points.vor_ts.flightchecked_nilreason,
    navaids_points.vor_ts.type_value,
    navaids_points.vor_ts.type_nilreason,
    navaids_points.vor_ts.zerobearingdirection_value,
    navaids_points.vor_ts.zerobearingdirection_nilreason,
    navaids_points.vor_ts.declination_value,
    navaids_points.vor_ts.declination_nilreason,
    navaids_points.vor_ts.frequency_value,
    navaids_points.vor_ts.frequency_uom,
    navaids_points.vor_ts.frequency_nilreason
order by vor.identifier, vor_ts.sequence_number, vor_ts.correction_number DESC;
create or replace view airspace.airspaceactivation_view as
select
    airspace.airspaceactivation_pt.id,
    jsonb_agg(notes.note_view.note) AS airspaceactivation_annotation,
    airspace.airspaceactivation_pt.nilreason AS airspaceactivation_annotation,
    coalesce(cast(airspace.airspaceactivation.activity_value as varchar), '(' || airspace.airspaceactivation.activity_nilreason || ')') as activity,
    coalesce(cast(airspace.airspaceactivation.status_value as varchar), '(' || airspace.airspaceactivation.status_nilreason || ')') as status,
    jsonb_agg(shared_timesheet_view_jlyvwx.id) AS timeinterval,
    jsonb_agg(shared_airspacelayer_view_jwpqyf.id) AS levels,
    jsonb_agg(shared_aircraftcharacteristic_view_euidjy.id) AS aircraft
from airspace.airspaceactivation_pt 
inner join airspace.airspaceactivation on airspace.airspaceactivation_pt.airspaceactivation_id = airspace.airspaceactivation.id
left join master_join mj1 on airspace.airspaceactivation.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_qdembt on airspace.airspaceactivation.id = master_join_qdembt.source_id
left join shared.timesheet_view shared_timesheet_view_jlyvwx on master_join_qdembt.target_id = shared_timesheet_view_jlyvwx.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_mscyxd on airspace.airspaceactivation.id = master_join_mscyxd.source_id
left join shared.airspacelayer_view shared_airspacelayer_view_jwpqyf on master_join_mscyxd.target_id = shared_airspacelayer_view_jwpqyf.id
--snowflake many .organisationauthority.user - OrganisationAuthorityPropertyType
left join master_join master_join_oqdrds on airspace.airspaceactivation.id = master_join_oqdrds.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_euidjy on master_join_oqdrds.target_id = shared_aircraftcharacteristic_view_euidjy.id
group by
    airspace.airspaceactivation_pt.id,
    airspace.airspaceactivation_pt.nilreason,
    airspace.airspaceactivation.activity_value,
    airspace.airspaceactivation.activity_nilreason,
    airspace.airspaceactivation.status_value,
    airspace.airspaceactivation.status_nilreason;
create or replace view aerial_refuelling.aerialrefuelling_publisher_view as
select distinct on (aerialrefuelling.identifier,aerialrefuelling_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    aerial_refuelling.aerialrefuelling.id,
    aerial_refuelling.aerialrefuelling_ts.id as ts_id,
    aerial_refuelling.aerialrefuelling_tsp.id as tsp_id,
    aerial_refuelling.aerialrefuelling.identifier,
    aerial_refuelling.aerialrefuelling_ts.interpretation,
    aerial_refuelling.aerialrefuelling_ts.sequence_number,
    aerial_refuelling.aerialrefuelling_ts.correction_number,
    aerial_refuelling.aerialrefuelling_ts.valid_time_begin,
    aerial_refuelling.aerialrefuelling_ts.valid_time_end,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_begin,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatorprefix_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatorprefix_nilreason || ')') as designatorprefix,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatornumber_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatornumber_nilreason || ')') as designatornumber,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatorsuffix_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatorsuffix_nilreason || ')') as designatorsuffix,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatordirection_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatordirection_nilreason || ')') as designatordirection,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.name_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.name_nilreason || ')') as name,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.type_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.type_nilreason || ')') as type,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_nilreason || ')') as radarbeaconsetting,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_nilreason || ')') as xbandradarsetting,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.tankerchannel_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.tankerchannel_nilreason || ')') as tankerchannel,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.receiverchannel_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.receiverchannel_nilreason || ')') as receiverchannel,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.helicopterroute_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.helicopterroute_nilreason || ')') as helicopterroute,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.specialrefuelling_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.specialrefuelling_nilreason || ')') as specialrefuelling,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_nilreason || ')') as bidirectionaluse,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_nilreason || ')') as reversedirectionturn,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_ehqwwe.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_ehqwwe.nilreason[1] || ')') AS oppositetrack,
    aerial_refuelling_aerialrefuelling_pt_ehqwwe.href AS oppositetrack_href
from aerial_refuelling.aerialrefuelling 
inner join master_join mj2 on aerial_refuelling.aerialrefuelling.id = mj2.source_id
inner join aerial_refuelling.aerialrefuelling_tsp on mj2.target_id = aerial_refuelling.aerialrefuelling_tsp.id
inner join aerial_refuelling.aerialrefuelling_ts on aerial_refuelling.aerialrefuelling_tsp.aerialrefuellingtimeslice_id = aerial_refuelling.aerialrefuelling_ts.id
left join master_join mj3 on aerial_refuelling.aerialrefuelling_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_ehqwwe on aerial_refuelling.aerialrefuelling_ts.oppositetrack_id = aerial_refuelling_aerialrefuelling_pt_ehqwwe.id
--object many routes.routeavailability.availability - master_join
--feature many airspace.airspace.protectingairspace - master_join
--object many aerial_refuelling.aerialrefuellingtrack.track - master_join
--object many aerial_refuelling.aerialrefuellinganchor.anchor - master_join
--object many aerial_refuelling.authorityforaerialrefuelling.managingorganisation - master_join
--snowflake many notes.note.annotation - NotePropertyType
where aerial_refuelling.aerialrefuelling.feature_status = 'APPROVED'
  and aerial_refuelling.aerialrefuelling_ts.feature_status = 'APPROVED'
group by
    aerial_refuelling.aerialrefuelling.id,
    aerial_refuelling.aerialrefuelling_ts.id,
    aerial_refuelling.aerialrefuelling_tsp.id,
    aerial_refuelling.aerialrefuelling.identifier,
    aerial_refuelling.aerialrefuelling_ts.interpretation,
    aerial_refuelling.aerialrefuelling_ts.sequence_number,
    aerial_refuelling.aerialrefuelling_ts.correction_number,
    aerial_refuelling.aerialrefuelling_ts.valid_time_begin,
    aerial_refuelling.aerialrefuelling_ts.valid_time_end,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_begin,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_end,
    aerial_refuelling.aerialrefuelling_ts.designatorprefix_value,
    aerial_refuelling.aerialrefuelling_ts.designatorprefix_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatornumber_value,
    aerial_refuelling.aerialrefuelling_ts.designatornumber_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatorsuffix_value,
    aerial_refuelling.aerialrefuelling_ts.designatorsuffix_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatordirection_value,
    aerial_refuelling.aerialrefuelling_ts.designatordirection_nilreason,
    aerial_refuelling.aerialrefuelling_ts.name_value,
    aerial_refuelling.aerialrefuelling_ts.name_nilreason,
    aerial_refuelling.aerialrefuelling_ts.type_value,
    aerial_refuelling.aerialrefuelling_ts.type_nilreason,
    aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_value,
    aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_nilreason,
    aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_value,
    aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_nilreason,
    aerial_refuelling.aerialrefuelling_ts.tankerchannel_value,
    aerial_refuelling.aerialrefuelling_ts.tankerchannel_nilreason,
    aerial_refuelling.aerialrefuelling_ts.receiverchannel_value,
    aerial_refuelling.aerialrefuelling_ts.receiverchannel_nilreason,
    aerial_refuelling.aerialrefuelling_ts.helicopterroute_value,
    aerial_refuelling.aerialrefuelling_ts.helicopterroute_nilreason,
    aerial_refuelling.aerialrefuelling_ts.specialrefuelling_value,
    aerial_refuelling.aerialrefuelling_ts.specialrefuelling_nilreason,
    aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_value,
    aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_nilreason,
    aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_value,
    aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_nilreason,
    aerial_refuelling_aerialrefuelling_pt_ehqwwe.title,
    aerial_refuelling_aerialrefuelling_pt_ehqwwe.nilreason,
    aerial_refuelling_aerialrefuelling_pt_ehqwwe.href
order by aerialrefuelling.identifier, aerialrefuelling_ts.sequence_number, aerialrefuelling_ts.correction_number DESC;
create or replace view navaids_points.directionfinder_publisher_view as
select distinct on (directionfinder.identifier,directionfinder_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.directionfinder.id,
    navaids_points.directionfinder_ts.id as ts_id,
    navaids_points.directionfinder_tsp.id as tsp_id,
    navaids_points.directionfinder.identifier,
    navaids_points.directionfinder_ts.interpretation,
    navaids_points.directionfinder_ts.sequence_number,
    navaids_points.directionfinder_ts.correction_number,
    navaids_points.directionfinder_ts.valid_time_begin,
    navaids_points.directionfinder_ts.valid_time_end,
    navaids_points.directionfinder_ts.feature_lifetime_begin,
    navaids_points.directionfinder_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.directionfinder_ts.designator_value as varchar), '(' || navaids_points.directionfinder_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.directionfinder_ts.name_value as varchar), '(' || navaids_points.directionfinder_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.directionfinder_ts.emissionclass_value as varchar), '(' || navaids_points.directionfinder_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.directionfinder_ts.mobile_value as varchar), '(' || navaids_points.directionfinder_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.directionfinder_ts.magneticvariation_value as varchar), '(' || navaids_points.directionfinder_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.directionfinder_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.directionfinder_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.directionfinder_ts.datemagneticvariation_value as varchar), '(' || navaids_points.directionfinder_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.directionfinder_ts.flightchecked_value as varchar), '(' || navaids_points.directionfinder_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.directionfinder_ts.doppler_value as varchar), '(' || navaids_points.directionfinder_ts.doppler_nilreason || ')') as doppler
from navaids_points.directionfinder 
inner join master_join mj2 on navaids_points.directionfinder.id = mj2.source_id
inner join navaids_points.directionfinder_tsp on mj2.target_id = navaids_points.directionfinder_tsp.id
inner join navaids_points.directionfinder_ts on navaids_points.directionfinder_tsp.directionfindertimeslice_id = navaids_points.directionfinder_ts.id
left join master_join mj3 on navaids_points.directionfinder_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--object many navaids_points.authorityfornavaidequipment.authority - master_join
--object many navaids_points.navaidequipmentmonitoring.monitoring - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many service.informationservice.informationprovision - master_join
where navaids_points.directionfinder.feature_status = 'APPROVED'
  and navaids_points.directionfinder_ts.feature_status = 'APPROVED'
group by
    navaids_points.directionfinder.id,
    navaids_points.directionfinder_ts.id,
    navaids_points.directionfinder_tsp.id,
    navaids_points.directionfinder.identifier,
    navaids_points.directionfinder_ts.interpretation,
    navaids_points.directionfinder_ts.sequence_number,
    navaids_points.directionfinder_ts.correction_number,
    navaids_points.directionfinder_ts.valid_time_begin,
    navaids_points.directionfinder_ts.valid_time_end,
    navaids_points.directionfinder_ts.feature_lifetime_begin,
    navaids_points.directionfinder_ts.feature_lifetime_end,
    navaids_points.directionfinder_ts.designator_value,
    navaids_points.directionfinder_ts.designator_nilreason,
    navaids_points.directionfinder_ts.name_value,
    navaids_points.directionfinder_ts.name_nilreason,
    navaids_points.directionfinder_ts.emissionclass_value,
    navaids_points.directionfinder_ts.emissionclass_nilreason,
    navaids_points.directionfinder_ts.mobile_value,
    navaids_points.directionfinder_ts.mobile_nilreason,
    navaids_points.directionfinder_ts.magneticvariation_value,
    navaids_points.directionfinder_ts.magneticvariation_nilreason,
    navaids_points.directionfinder_ts.magneticvariationaccuracy_value,
    navaids_points.directionfinder_ts.magneticvariationaccuracy_nilreason,
    navaids_points.directionfinder_ts.datemagneticvariation_value,
    navaids_points.directionfinder_ts.datemagneticvariation_nilreason,
    navaids_points.directionfinder_ts.flightchecked_value,
    navaids_points.directionfinder_ts.flightchecked_nilreason,
    navaids_points.directionfinder_ts.doppler_value,
    navaids_points.directionfinder_ts.doppler_nilreason
order by directionfinder.identifier, directionfinder_ts.sequence_number, directionfinder_ts.correction_number DESC;
create or replace view procedure.finalleg_publisher_view as
select distinct on (finalleg.identifier,finalleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.finalleg.id,
    procedure.finalleg_ts.id as ts_id,
    procedure.finalleg_tsp.id as tsp_id,
    procedure.finalleg.identifier,
    procedure.finalleg_ts.interpretation,
    procedure.finalleg_ts.sequence_number,
    procedure.finalleg_ts.correction_number,
    procedure.finalleg_ts.valid_time_begin,
    procedure.finalleg_ts.valid_time_end,
    procedure.finalleg_ts.feature_lifetime_begin,
    procedure.finalleg_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.finalleg_ts.endconditiondesignator_value as varchar), '(' || procedure.finalleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.finalleg_ts.legpath_value as varchar), '(' || procedure.finalleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.finalleg_ts.legtypearinc_value as varchar), '(' || procedure.finalleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.finalleg_ts.course_value as varchar), '(' || procedure.finalleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.finalleg_ts.coursetype_value as varchar), '(' || procedure.finalleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.finalleg_ts.coursedirection_value as varchar), '(' || procedure.finalleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.finalleg_ts.turndirection_value as varchar), '(' || procedure.finalleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.finalleg_ts.speedreference_value as varchar), '(' || procedure.finalleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.finalleg_ts.speedinterpretation_value as varchar), '(' || procedure.finalleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.finalleg_ts.bankangle_value as varchar), '(' || procedure.finalleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.finalleg_ts.procedureturnrequired_value as varchar), '(' || procedure.finalleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.finalleg_ts.upperlimitreference_value as varchar), '(' || procedure.finalleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.finalleg_ts.lowerlimitreference_value as varchar), '(' || procedure.finalleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.finalleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.finalleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.finalleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.finalleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.finalleg_ts.verticalangle_value as varchar), '(' || procedure.finalleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.finalleg_ts.guidancesystem_value as varchar), '(' || procedure.finalleg_ts.guidancesystem_nilreason || ')') as guidancesystem,
    coalesce(cast(procedure.finalleg_ts.landingsystemcategory_value as varchar), '(' || procedure.finalleg_ts.landingsystemcategory_nilreason || ')') as landingsystemcategory,
    coalesce(cast(procedure.finalleg_ts.rnpdmeauthorized_value as varchar), '(' || procedure.finalleg_ts.rnpdmeauthorized_nilreason || ')') as rnpdmeauthorized,
    coalesce(cast(procedure.finalleg_ts.courseoffsetangle_value as varchar), '(' || procedure.finalleg_ts.courseoffsetangle_nilreason || ')') as courseoffsetangle,
    coalesce(cast(procedure.finalleg_ts.courseoffsetside_value as varchar), '(' || procedure.finalleg_ts.courseoffsetside_nilreason || ')') as courseoffsetside,
    coalesce(cast(procedure.finalleg_ts.coursecentrelineintersect_value as varchar), '(' || procedure.finalleg_ts.coursecentrelineintersect_nilreason || ')') as coursecentrelineintersect,
    coalesce(cast(procedure.finalleg_ts.speedlimit_value as varchar) || ' ' || procedure.finalleg_ts.speedlimit_uom, '(' || procedure.finalleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.finalleg_ts.length_value as varchar) || ' ' || procedure.finalleg_ts.length_uom, '(' || procedure.finalleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.finalleg_ts.duration_value as varchar) || ' ' || procedure.finalleg_ts.duration_uom, '(' || procedure.finalleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.finalleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.finalleg_ts.upperlimitaltitude_uom, '(' || procedure.finalleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.finalleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.finalleg_ts.lowerlimitaltitude_uom, '(' || procedure.finalleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.finalleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.finalleg_ts.altitudeoverrideatc_uom, '(' || procedure.finalleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.finalleg_ts.minimumbarovnavtemperature_value as varchar) || ' ' || procedure.finalleg_ts.minimumbarovnavtemperature_uom, '(' || procedure.finalleg_ts.minimumbarovnavtemperature_nilreason || ')') as minimumbarovnavtemperature,
    coalesce(cast(procedure.finalleg_ts.coursecentrelinedistance_value as varchar) || ' ' || procedure.finalleg_ts.coursecentrelinedistance_uom, '(' || procedure.finalleg_ts.coursecentrelinedistance_nilreason || ')') as coursecentrelinedistance,
    coalesce(cast(procedure.finalleg_ts.courseoffsetdistance_value as varchar) || ' ' || procedure.finalleg_ts.courseoffsetdistance_uom, '(' || procedure.finalleg_ts.courseoffsetdistance_nilreason || ')') as courseoffsetdistance,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_dgheul.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_dgheul.nilreason[1] || ')') AS startpoint,
    navaids_points_terminalsegmentpoint_pt_dgheul.href AS startpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_wnjous.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_wnjous.nilreason[1] || ')') AS endpoint,
    navaids_points_terminalsegmentpoint_pt_wnjous.href AS endpoint_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_scrygh.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_scrygh.nilreason[1] || ')') AS arccentre,
    navaids_points_terminalsegmentpoint_pt_scrygh.href AS arccentre_href,
    coalesce(cast(navaids_points_terminalsegmentpoint_pt_ifeyrv.title as varchar), '(' || navaids_points_terminalsegmentpoint_pt_ifeyrv.nilreason[1] || ')') AS visualdescentpoint,
    navaids_points_terminalsegmentpoint_pt_ifeyrv.href AS visualdescentpoint_href,
    coalesce(cast(navaids_points_angleindication_pt_cxsyue.title as varchar), '(' || navaids_points_angleindication_pt_cxsyue.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_cxsyue.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_kisdqs.title as varchar), '(' || navaids_points_distanceindication_pt_kisdqs.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_kisdqs.href AS distance_href,
    coalesce(cast(procedure_holdinguse_pt_uxtdlc.title as varchar), '(' || procedure_holdinguse_pt_uxtdlc.nilreason[1] || ')') AS holding,
    procedure_holdinguse_pt_uxtdlc.href AS holding_href,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_rsqqpf.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_rsqqpf.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_rsqqpf.href AS approach_href,
    coalesce(cast(navaids_points_designatedpoint_pt_qdexnu.title as varchar), '(' || navaids_points_designatedpoint_pt_qdexnu.nilreason[1] || ')') AS finalpathalignmentpointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_qdexnu.href AS finalpathalignmentpointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_wvgvsw.title as varchar), '(' || navaids_points_navaid_pt_wvgvsw.nilreason[1] || ')') AS finalpathalignmentpointnavaidsystem,
    navaids_points_navaid_pt_wvgvsw.href AS finalpathalignmentpointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_vfoypx.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_vfoypx.nilreason[1] || ')') AS finalpathalignmentpointaimingpoint,
    airport_heliport_touchdownliftoff_pt_vfoypx.href AS finalpathalignmentpointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_gzjlmq.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_gzjlmq.nilreason[1] || ')') AS finalpathalignmentpointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_gzjlmq.href AS finalpathalignmentpointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_gqqwcd.title as varchar), '(' || airport_heliport_airportheliport_pt_gqqwcd.nilreason[1] || ')') AS finalpathalignmentpointairportreferencepoint,
    airport_heliport_airportheliport_pt_gqqwcd.href AS finalpathalignmentpointairportreferencepoint_href,
    coalesce(cast(public_fasdatablock_pt_mafwlt.title as varchar), '(' || public_fasdatablock_pt_mafwlt.nilreason[1] || ')') AS fasdata,
    public_fasdatablock_pt_mafwlt.href AS fasdata_href
from procedure.finalleg 
inner join master_join mj2 on procedure.finalleg.id = mj2.source_id
inner join procedure.finalleg_tsp on mj2.target_id = procedure.finalleg_tsp.id
inner join procedure.finalleg_ts on procedure.finalleg_tsp.finallegtimeslice_id = procedure.finalleg_ts.id
left join master_join mj3 on procedure.finalleg_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_dgheul on procedure.finalleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_pt_dgheul.id
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_wnjous on procedure.finalleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_pt_wnjous.id
--snowflake one geometry.curve.trajectory - CurvePropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_scrygh on procedure.finalleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_pt_scrygh.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_cxsyue on procedure.finalleg_ts.angle_id = navaids_points_angleindication_pt_cxsyue.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_kisdqs on procedure.finalleg_ts.distance_id = navaids_points_distanceindication_pt_kisdqs.id
left join procedure.holdinguse_pt procedure_holdinguse_pt_uxtdlc on procedure.finalleg_ts.holding_id = procedure_holdinguse_pt_uxtdlc.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_rsqqpf on procedure.finalleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_rsqqpf.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_qdexnu on procedure.finalleg_ts.finalpathalignmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_qdexnu.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_wvgvsw on procedure.finalleg_ts.finalpathalignmentpoint_navaidsystem_id = navaids_points_navaid_pt_wvgvsw.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_vfoypx on procedure.finalleg_ts.finalpathalignmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_vfoypx.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_gzjlmq on procedure.finalleg_ts.finalpathalignmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_gzjlmq.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_gqqwcd on procedure.finalleg_ts.finalpathalignmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_gqqwcd.id
--snowflake one geometry.point.finalpathalignmentpointposition - PointPropertyType
left join navaids_points.terminalsegmentpoint_pt navaids_points_terminalsegmentpoint_pt_ifeyrv on procedure.finalleg_ts.visualdescentpoint_id = navaids_points_terminalsegmentpoint_pt_ifeyrv.id
left join public.fasdatablock_pt public_fasdatablock_pt_mafwlt on procedure.finalleg_ts.fasdata_id = public_fasdatablock_pt_mafwlt.id
--object many shared.aircraftcharacteristic.aircraftcategory - master_join
--object many shared.obstacleassessmentarea.designsurface - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many procedure.approachcondition.condition - master_join
where procedure.finalleg.feature_status = 'APPROVED'
  and procedure.finalleg_ts.feature_status = 'APPROVED'
group by
    procedure.finalleg.id,
    procedure.finalleg_ts.id,
    procedure.finalleg_tsp.id,
    procedure.finalleg.identifier,
    procedure.finalleg_ts.interpretation,
    procedure.finalleg_ts.sequence_number,
    procedure.finalleg_ts.correction_number,
    procedure.finalleg_ts.valid_time_begin,
    procedure.finalleg_ts.valid_time_end,
    procedure.finalleg_ts.feature_lifetime_begin,
    procedure.finalleg_ts.feature_lifetime_end,
    procedure.finalleg_ts.endconditiondesignator_value,
    procedure.finalleg_ts.endconditiondesignator_nilreason,
    procedure.finalleg_ts.legpath_value,
    procedure.finalleg_ts.legpath_nilreason,
    procedure.finalleg_ts.legtypearinc_value,
    procedure.finalleg_ts.legtypearinc_nilreason,
    procedure.finalleg_ts.course_value,
    procedure.finalleg_ts.course_nilreason,
    procedure.finalleg_ts.coursetype_value,
    procedure.finalleg_ts.coursetype_nilreason,
    procedure.finalleg_ts.coursedirection_value,
    procedure.finalleg_ts.coursedirection_nilreason,
    procedure.finalleg_ts.turndirection_value,
    procedure.finalleg_ts.turndirection_nilreason,
    procedure.finalleg_ts.speedreference_value,
    procedure.finalleg_ts.speedreference_nilreason,
    procedure.finalleg_ts.speedinterpretation_value,
    procedure.finalleg_ts.speedinterpretation_nilreason,
    procedure.finalleg_ts.bankangle_value,
    procedure.finalleg_ts.bankangle_nilreason,
    procedure.finalleg_ts.procedureturnrequired_value,
    procedure.finalleg_ts.procedureturnrequired_nilreason,
    procedure.finalleg_ts.upperlimitreference_value,
    procedure.finalleg_ts.upperlimitreference_nilreason,
    procedure.finalleg_ts.lowerlimitreference_value,
    procedure.finalleg_ts.lowerlimitreference_nilreason,
    procedure.finalleg_ts.altitudeinterpretation_value,
    procedure.finalleg_ts.altitudeinterpretation_nilreason,
    procedure.finalleg_ts.altitudeoverridereference_value,
    procedure.finalleg_ts.altitudeoverridereference_nilreason,
    procedure.finalleg_ts.verticalangle_value,
    procedure.finalleg_ts.verticalangle_nilreason,
    procedure.finalleg_ts.guidancesystem_value,
    procedure.finalleg_ts.guidancesystem_nilreason,
    procedure.finalleg_ts.landingsystemcategory_value,
    procedure.finalleg_ts.landingsystemcategory_nilreason,
    procedure.finalleg_ts.rnpdmeauthorized_value,
    procedure.finalleg_ts.rnpdmeauthorized_nilreason,
    procedure.finalleg_ts.courseoffsetangle_value,
    procedure.finalleg_ts.courseoffsetangle_nilreason,
    procedure.finalleg_ts.courseoffsetside_value,
    procedure.finalleg_ts.courseoffsetside_nilreason,
    procedure.finalleg_ts.coursecentrelineintersect_value,
    procedure.finalleg_ts.coursecentrelineintersect_nilreason,
    procedure.finalleg_ts.speedlimit_value,
    procedure.finalleg_ts.speedlimit_uom,
    procedure.finalleg_ts.speedlimit_nilreason,
    procedure.finalleg_ts.length_value,
    procedure.finalleg_ts.length_uom,
    procedure.finalleg_ts.length_nilreason,
    procedure.finalleg_ts.duration_value,
    procedure.finalleg_ts.duration_uom,
    procedure.finalleg_ts.duration_nilreason,
    procedure.finalleg_ts.upperlimitaltitude_value,
    procedure.finalleg_ts.upperlimitaltitude_uom,
    procedure.finalleg_ts.upperlimitaltitude_nilreason,
    procedure.finalleg_ts.lowerlimitaltitude_value,
    procedure.finalleg_ts.lowerlimitaltitude_uom,
    procedure.finalleg_ts.lowerlimitaltitude_nilreason,
    procedure.finalleg_ts.altitudeoverrideatc_value,
    procedure.finalleg_ts.altitudeoverrideatc_uom,
    procedure.finalleg_ts.altitudeoverrideatc_nilreason,
    procedure.finalleg_ts.minimumbarovnavtemperature_value,
    procedure.finalleg_ts.minimumbarovnavtemperature_uom,
    procedure.finalleg_ts.minimumbarovnavtemperature_nilreason,
    procedure.finalleg_ts.coursecentrelinedistance_value,
    procedure.finalleg_ts.coursecentrelinedistance_uom,
    procedure.finalleg_ts.coursecentrelinedistance_nilreason,
    procedure.finalleg_ts.courseoffsetdistance_value,
    procedure.finalleg_ts.courseoffsetdistance_uom,
    procedure.finalleg_ts.courseoffsetdistance_nilreason,
    navaids_points_terminalsegmentpoint_pt_dgheul.title,
    navaids_points_terminalsegmentpoint_pt_dgheul.nilreason,
    navaids_points_terminalsegmentpoint_pt_dgheul.href,
    navaids_points_terminalsegmentpoint_pt_wnjous.title,
    navaids_points_terminalsegmentpoint_pt_wnjous.nilreason,
    navaids_points_terminalsegmentpoint_pt_wnjous.href,
    navaids_points_terminalsegmentpoint_pt_scrygh.title,
    navaids_points_terminalsegmentpoint_pt_scrygh.nilreason,
    navaids_points_terminalsegmentpoint_pt_scrygh.href,
    navaids_points_angleindication_pt_cxsyue.title,
    navaids_points_angleindication_pt_cxsyue.nilreason,
    navaids_points_angleindication_pt_cxsyue.href,
    navaids_points_distanceindication_pt_kisdqs.title,
    navaids_points_distanceindication_pt_kisdqs.nilreason,
    navaids_points_distanceindication_pt_kisdqs.href,
    procedure_holdinguse_pt_uxtdlc.title,
    procedure_holdinguse_pt_uxtdlc.nilreason,
    procedure_holdinguse_pt_uxtdlc.href,
    procedure_instrumentapproachprocedure_pt_rsqqpf.title,
    procedure_instrumentapproachprocedure_pt_rsqqpf.nilreason,
    procedure_instrumentapproachprocedure_pt_rsqqpf.href,
    navaids_points_designatedpoint_pt_qdexnu.title,
    navaids_points_designatedpoint_pt_qdexnu.nilreason,
    navaids_points_designatedpoint_pt_qdexnu.href,
    navaids_points_navaid_pt_wvgvsw.title,
    navaids_points_navaid_pt_wvgvsw.nilreason,
    navaids_points_navaid_pt_wvgvsw.href,
    airport_heliport_touchdownliftoff_pt_vfoypx.title,
    airport_heliport_touchdownliftoff_pt_vfoypx.nilreason,
    airport_heliport_touchdownliftoff_pt_vfoypx.href,
    airport_heliport_runwaycentrelinepoint_pt_gzjlmq.title,
    airport_heliport_runwaycentrelinepoint_pt_gzjlmq.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_gzjlmq.href,
    airport_heliport_airportheliport_pt_gqqwcd.title,
    airport_heliport_airportheliport_pt_gqqwcd.nilreason,
    airport_heliport_airportheliport_pt_gqqwcd.href,
    navaids_points_terminalsegmentpoint_pt_ifeyrv.title,
    navaids_points_terminalsegmentpoint_pt_ifeyrv.nilreason,
    navaids_points_terminalsegmentpoint_pt_ifeyrv.href,
    public_fasdatablock_pt_mafwlt.title,
    public_fasdatablock_pt_mafwlt.nilreason,
    public_fasdatablock_pt_mafwlt.href
order by finalleg.identifier, finalleg_ts.sequence_number, finalleg_ts.correction_number DESC;
create or replace view service.groundtrafficcontrolservice_publisher_view as
select distinct on (groundtrafficcontrolservice.identifier,groundtrafficcontrolservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.groundtrafficcontrolservice.id,
    service.groundtrafficcontrolservice_ts.id as ts_id,
    service.groundtrafficcontrolservice_tsp.id as tsp_id,
    service.groundtrafficcontrolservice.identifier,
    service.groundtrafficcontrolservice_ts.interpretation,
    service.groundtrafficcontrolservice_ts.sequence_number,
    service.groundtrafficcontrolservice_ts.correction_number,
    service.groundtrafficcontrolservice_ts.valid_time_begin,
    service.groundtrafficcontrolservice_ts.valid_time_end,
    service.groundtrafficcontrolservice_ts.feature_lifetime_begin,
    service.groundtrafficcontrolservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.groundtrafficcontrolservice_ts.flightoperations_value as varchar), '(' || service.groundtrafficcontrolservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.groundtrafficcontrolservice_ts.rank_value as varchar), '(' || service.groundtrafficcontrolservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.groundtrafficcontrolservice_ts.complianticao_value as varchar), '(' || service.groundtrafficcontrolservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.groundtrafficcontrolservice_ts.name_value as varchar), '(' || service.groundtrafficcontrolservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.groundtrafficcontrolservice_ts.radarassisted_value as varchar), '(' || service.groundtrafficcontrolservice_ts.radarassisted_nilreason || ')') as radarassisted,
    coalesce(cast(service.groundtrafficcontrolservice_ts.datalinkenabled_value as varchar), '(' || service.groundtrafficcontrolservice_ts.datalinkenabled_nilreason || ')') as datalinkenabled,
    coalesce(cast(service.groundtrafficcontrolservice_ts.datalinkchannel_value as varchar), '(' || service.groundtrafficcontrolservice_ts.datalinkchannel_nilreason || ')') as datalinkchannel,
    coalesce(cast(service.groundtrafficcontrolservice_ts.type_value as varchar), '(' || service.groundtrafficcontrolservice_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_cbmsdp.title as varchar), '(' || organisation_unit_pt_cbmsdp.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_cbmsdp.href AS serviceprovider_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ckcaov.title as varchar), '(' || airport_heliport_airportheliport_pt_ckcaov.nilreason[1] || ')') AS clientairport,
    airport_heliport_airportheliport_pt_ckcaov.href AS clientairport_href
from service.groundtrafficcontrolservice 
inner join master_join mj2 on service.groundtrafficcontrolservice.id = mj2.source_id
inner join service.groundtrafficcontrolservice_tsp on mj2.target_id = service.groundtrafficcontrolservice_tsp.id
inner join service.groundtrafficcontrolservice_ts on service.groundtrafficcontrolservice_tsp.groundtrafficcontrolservicetimeslice_id = service.groundtrafficcontrolservice_ts.id
left join master_join mj3 on service.groundtrafficcontrolservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_cbmsdp on service.groundtrafficcontrolservice_ts.serviceprovider_id = organisation_unit_pt_cbmsdp.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ckcaov on service.groundtrafficcontrolservice_ts.clientairport_id = airport_heliport_airportheliport_pt_ckcaov.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where service.groundtrafficcontrolservice.feature_status = 'APPROVED'
  and service.groundtrafficcontrolservice_ts.feature_status = 'APPROVED'
group by
    service.groundtrafficcontrolservice.id,
    service.groundtrafficcontrolservice_ts.id,
    service.groundtrafficcontrolservice_tsp.id,
    service.groundtrafficcontrolservice.identifier,
    service.groundtrafficcontrolservice_ts.interpretation,
    service.groundtrafficcontrolservice_ts.sequence_number,
    service.groundtrafficcontrolservice_ts.correction_number,
    service.groundtrafficcontrolservice_ts.valid_time_begin,
    service.groundtrafficcontrolservice_ts.valid_time_end,
    service.groundtrafficcontrolservice_ts.feature_lifetime_begin,
    service.groundtrafficcontrolservice_ts.feature_lifetime_end,
    service.groundtrafficcontrolservice_ts.flightoperations_value,
    service.groundtrafficcontrolservice_ts.flightoperations_nilreason,
    service.groundtrafficcontrolservice_ts.rank_value,
    service.groundtrafficcontrolservice_ts.rank_nilreason,
    service.groundtrafficcontrolservice_ts.complianticao_value,
    service.groundtrafficcontrolservice_ts.complianticao_nilreason,
    service.groundtrafficcontrolservice_ts.name_value,
    service.groundtrafficcontrolservice_ts.name_nilreason,
    service.groundtrafficcontrolservice_ts.radarassisted_value,
    service.groundtrafficcontrolservice_ts.radarassisted_nilreason,
    service.groundtrafficcontrolservice_ts.datalinkenabled_value,
    service.groundtrafficcontrolservice_ts.datalinkenabled_nilreason,
    service.groundtrafficcontrolservice_ts.datalinkchannel_value,
    service.groundtrafficcontrolservice_ts.datalinkchannel_nilreason,
    service.groundtrafficcontrolservice_ts.type_value,
    service.groundtrafficcontrolservice_ts.type_nilreason,
    organisation_unit_pt_cbmsdp.title,
    organisation_unit_pt_cbmsdp.nilreason,
    organisation_unit_pt_cbmsdp.href,
    airport_heliport_airportheliport_pt_ckcaov.title,
    airport_heliport_airportheliport_pt_ckcaov.nilreason,
    airport_heliport_airportheliport_pt_ckcaov.href
order by groundtrafficcontrolservice.identifier, groundtrafficcontrolservice_ts.sequence_number, groundtrafficcontrolservice_ts.correction_number DESC;
create or replace view procedure.instrumentapproachprocedure_publisher_view as
select distinct on (instrumentapproachprocedure.identifier,instrumentapproachprocedure_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.instrumentapproachprocedure.id,
    procedure.instrumentapproachprocedure_ts.id as ts_id,
    procedure.instrumentapproachprocedure_tsp.id as tsp_id,
    procedure.instrumentapproachprocedure.identifier,
    procedure.instrumentapproachprocedure_ts.interpretation,
    procedure.instrumentapproachprocedure_ts.sequence_number,
    procedure.instrumentapproachprocedure_ts.correction_number,
    procedure.instrumentapproachprocedure_ts.valid_time_begin,
    procedure.instrumentapproachprocedure_ts.valid_time_end,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_begin,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.instruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.designcriteria_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.codingstandard_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.flightchecked_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.name_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.rnav_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.approachprefix_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.approachprefix_nilreason || ')') as approachprefix,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.approachtype_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.approachtype_nilreason || ')') as approachtype,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.multipleidentification_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.multipleidentification_nilreason || ')') as multipleidentification,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.coptertrack_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.coptertrack_nilreason || ')') as coptertrack,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.circlingidentification_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.circlingidentification_nilreason || ')') as circlingidentification,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.coursereversalinstruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.coursereversalinstruction_nilreason || ')') as coursereversalinstruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.additionalequipment_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.additionalequipment_nilreason || ')') as additionalequipment,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.channelgnss_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.channelgnss_nilreason || ')') as channelgnss,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.waasreliable_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.waasreliable_nilreason || ')') as waasreliable,
    coalesce(cast(navaids_points_navaid_pt_tlggwu.title as varchar), '(' || navaids_points_navaid_pt_tlggwu.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_tlggwu.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_yndoeq.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_yndoeq.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_yndoeq.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_foxmuk.title as varchar), '(' || surveillance_radarsystem_pt_foxmuk.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_foxmuk.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_aktkba.title as varchar), '(' || procedure_safealtitudearea_pt_aktkba.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_aktkba.href AS safealtitude_href,
    coalesce(cast(procedure_landingtakeoffareacollection_pt_yktcwa.title as varchar), '(' || procedure_landingtakeoffareacollection_pt_yktcwa.nilreason[1] || ')') AS landing,
    procedure_landingtakeoffareacollection_pt_yktcwa.href AS landing_href,
    coalesce(cast(procedure_finalprofile_pt_uysyhr.title as varchar), '(' || procedure_finalprofile_pt_uysyhr.nilreason[1] || ')') AS finalprofile,
    procedure_finalprofile_pt_uysyhr.href AS finalprofile_href
from procedure.instrumentapproachprocedure 
inner join master_join mj2 on procedure.instrumentapproachprocedure.id = mj2.source_id
inner join procedure.instrumentapproachprocedure_tsp on mj2.target_id = procedure.instrumentapproachprocedure_tsp.id
inner join procedure.instrumentapproachprocedure_ts on procedure.instrumentapproachprocedure_tsp.instrumentapproachproceduretimeslice_id = procedure.instrumentapproachprocedure_ts.id
left join master_join mj3 on procedure.instrumentapproachprocedure_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_tlggwu on procedure.instrumentapproachprocedure_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_tlggwu.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_yndoeq on procedure.instrumentapproachprocedure_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_yndoeq.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_foxmuk on procedure.instrumentapproachprocedure_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_foxmuk.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_aktkba on procedure.instrumentapproachprocedure_ts.safealtitude_id = procedure_safealtitudearea_pt_aktkba.id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_yktcwa on procedure.instrumentapproachprocedure_ts.landing_id = procedure_landingtakeoffareacollection_pt_yktcwa.id
left join procedure.finalprofile_pt procedure_finalprofile_pt_uysyhr on procedure.instrumentapproachprocedure_ts.finalprofile_id = procedure_finalprofile_pt_uysyhr.id
--object many procedure.procedureavailability.availability - master_join
--feature many airport_heliport.airportheliport.airportheliport - master_join
--object many shared.aircraftcharacteristic.aircraftcharacteristic - master_join
--object many procedure.proceduretransition.flighttransition - master_join
--snowflake many notes.note.annotation - NotePropertyType
--object many procedure.missedapproachgroup.missedinstruction - master_join
where procedure.instrumentapproachprocedure.feature_status = 'APPROVED'
  and procedure.instrumentapproachprocedure_ts.feature_status = 'APPROVED'
group by
    procedure.instrumentapproachprocedure.id,
    procedure.instrumentapproachprocedure_ts.id,
    procedure.instrumentapproachprocedure_tsp.id,
    procedure.instrumentapproachprocedure.identifier,
    procedure.instrumentapproachprocedure_ts.interpretation,
    procedure.instrumentapproachprocedure_ts.sequence_number,
    procedure.instrumentapproachprocedure_ts.correction_number,
    procedure.instrumentapproachprocedure_ts.valid_time_begin,
    procedure.instrumentapproachprocedure_ts.valid_time_end,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_begin,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_end,
    procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_value,
    procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_nilreason,
    procedure.instrumentapproachprocedure_ts.instruction_value,
    procedure.instrumentapproachprocedure_ts.instruction_nilreason,
    procedure.instrumentapproachprocedure_ts.designcriteria_value,
    procedure.instrumentapproachprocedure_ts.designcriteria_nilreason,
    procedure.instrumentapproachprocedure_ts.codingstandard_value,
    procedure.instrumentapproachprocedure_ts.codingstandard_nilreason,
    procedure.instrumentapproachprocedure_ts.flightchecked_value,
    procedure.instrumentapproachprocedure_ts.flightchecked_nilreason,
    procedure.instrumentapproachprocedure_ts.name_value,
    procedure.instrumentapproachprocedure_ts.name_nilreason,
    procedure.instrumentapproachprocedure_ts.rnav_value,
    procedure.instrumentapproachprocedure_ts.rnav_nilreason,
    procedure.instrumentapproachprocedure_ts.approachprefix_value,
    procedure.instrumentapproachprocedure_ts.approachprefix_nilreason,
    procedure.instrumentapproachprocedure_ts.approachtype_value,
    procedure.instrumentapproachprocedure_ts.approachtype_nilreason,
    procedure.instrumentapproachprocedure_ts.multipleidentification_value,
    procedure.instrumentapproachprocedure_ts.multipleidentification_nilreason,
    procedure.instrumentapproachprocedure_ts.coptertrack_value,
    procedure.instrumentapproachprocedure_ts.coptertrack_nilreason,
    procedure.instrumentapproachprocedure_ts.circlingidentification_value,
    procedure.instrumentapproachprocedure_ts.circlingidentification_nilreason,
    procedure.instrumentapproachprocedure_ts.coursereversalinstruction_value,
    procedure.instrumentapproachprocedure_ts.coursereversalinstruction_nilreason,
    procedure.instrumentapproachprocedure_ts.additionalequipment_value,
    procedure.instrumentapproachprocedure_ts.additionalequipment_nilreason,
    procedure.instrumentapproachprocedure_ts.channelgnss_value,
    procedure.instrumentapproachprocedure_ts.channelgnss_nilreason,
    procedure.instrumentapproachprocedure_ts.waasreliable_value,
    procedure.instrumentapproachprocedure_ts.waasreliable_nilreason,
    navaids_points_navaid_pt_tlggwu.title,
    navaids_points_navaid_pt_tlggwu.nilreason,
    navaids_points_navaid_pt_tlggwu.href,
    navaids_points_specialnavigationsystem_pt_yndoeq.title,
    navaids_points_specialnavigationsystem_pt_yndoeq.nilreason,
    navaids_points_specialnavigationsystem_pt_yndoeq.href,
    surveillance_radarsystem_pt_foxmuk.title,
    surveillance_radarsystem_pt_foxmuk.nilreason,
    surveillance_radarsystem_pt_foxmuk.href,
    procedure_safealtitudearea_pt_aktkba.title,
    procedure_safealtitudearea_pt_aktkba.nilreason,
    procedure_safealtitudearea_pt_aktkba.href,
    procedure_landingtakeoffareacollection_pt_yktcwa.title,
    procedure_landingtakeoffareacollection_pt_yktcwa.nilreason,
    procedure_landingtakeoffareacollection_pt_yktcwa.href,
    procedure_finalprofile_pt_uysyhr.title,
    procedure_finalprofile_pt_uysyhr.nilreason,
    procedure_finalprofile_pt_uysyhr.href
order by instrumentapproachprocedure.identifier, instrumentapproachprocedure_ts.sequence_number, instrumentapproachprocedure_ts.correction_number DESC;
create or replace view organisation.unit_publisher_view as
select distinct on (unit.identifier,unit_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    organisation.unit.id,
    organisation.unit_ts.id as ts_id,
    organisation.unit_tsp.id as tsp_id,
    organisation.unit.identifier,
    organisation.unit_ts.interpretation,
    organisation.unit_ts.sequence_number,
    organisation.unit_ts.correction_number,
    organisation.unit_ts.valid_time_begin,
    organisation.unit_ts.valid_time_end,
    organisation.unit_ts.feature_lifetime_begin,
    organisation.unit_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(organisation.unit_ts.name_value as varchar), '(' || organisation.unit_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation.unit_ts.type_value as varchar), '(' || organisation.unit_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation.unit_ts.complianticao_value as varchar), '(' || organisation.unit_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(organisation.unit_ts.designator_value as varchar), '(' || organisation.unit_ts.designator_nilreason || ')') as designator,
    coalesce(cast(organisation.unit_ts.military_value as varchar), '(' || organisation.unit_ts.military_nilreason || ')') as military,
    coalesce(cast(airport_heliport_airportheliport_pt_rrdogl.title as varchar), '(' || airport_heliport_airportheliport_pt_rrdogl.nilreason[1] || ')') AS airportlocation,
    airport_heliport_airportheliport_pt_rrdogl.href AS airportlocation_href
from organisation.unit 
inner join master_join mj2 on organisation.unit.id = mj2.source_id
inner join organisation.unit_tsp on mj2.target_id = organisation.unit_tsp.id
inner join organisation.unit_ts on organisation.unit_tsp.unittimeslice_id = organisation.unit_ts.id
left join master_join mj3 on organisation.unit_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.position - ElevatedPointPropertyType
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_rrdogl on organisation.unit_ts.airportlocation_id = airport_heliport_airportheliport_pt_rrdogl.id
--snowflake one .organisationauthority.ownerorganisation - OrganisationAuthorityPropertyType
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--object many organisation.unitdependency.relatedunit - master_join
--object many organisation.unitavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where organisation.unit.feature_status = 'APPROVED'
  and organisation.unit_ts.feature_status = 'APPROVED'
group by
    organisation.unit.id,
    organisation.unit_ts.id,
    organisation.unit_tsp.id,
    organisation.unit.identifier,
    organisation.unit_ts.interpretation,
    organisation.unit_ts.sequence_number,
    organisation.unit_ts.correction_number,
    organisation.unit_ts.valid_time_begin,
    organisation.unit_ts.valid_time_end,
    organisation.unit_ts.feature_lifetime_begin,
    organisation.unit_ts.feature_lifetime_end,
    organisation.unit_ts.name_value,
    organisation.unit_ts.name_nilreason,
    organisation.unit_ts.type_value,
    organisation.unit_ts.type_nilreason,
    organisation.unit_ts.complianticao_value,
    organisation.unit_ts.complianticao_nilreason,
    organisation.unit_ts.designator_value,
    organisation.unit_ts.designator_nilreason,
    organisation.unit_ts.military_value,
    organisation.unit_ts.military_nilreason,
    airport_heliport_airportheliport_pt_rrdogl.title,
    airport_heliport_airportheliport_pt_rrdogl.nilreason,
    airport_heliport_airportheliport_pt_rrdogl.href
order by unit.identifier, unit_ts.sequence_number, unit_ts.correction_number DESC;
create or replace view procedure.approachcondition_view as
select
    procedure.approachcondition_pt.id,
    jsonb_agg(notes.note_view.note) AS approachcondition_annotation,
    procedure.approachcondition_pt.nilreason AS approachcondition_annotation,
    coalesce(cast(procedure.approachcondition.finalapproachpath_value as varchar), '(' || procedure.approachcondition.finalapproachpath_nilreason || ')') as finalapproachpath,
    coalesce(cast(procedure.approachcondition.requirednavigationperformance_value as varchar), '(' || procedure.approachcondition.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.approachcondition.climbgradient_value as varchar), '(' || procedure.approachcondition.climbgradient_nilreason || ')') as climbgradient,
    procedure_minima_pt_lnjhdn.id AS minimumset,
    coalesce(cast(airport_heliport_altimetersource_pt_onrnrs.title as varchar), '(' || airport_heliport_altimetersource_pt_onrnrs.nilreason[1] || ')') AS altimeter,
    airport_heliport_altimetersource_pt_onrnrs.href AS altimeter_href,
    jsonb_agg(procedure_circlingrestriction_view_gtyggq.id) AS circlingrestriction,
    jsonb_agg(shared_aircraftcharacteristic_view_hacojo.id) AS aircraftcategory,
    jsonb_agg(procedure_landingtakeoffareacollection_view_ijqcaj.id) AS landingarea,
    jsonb_agg(shared_obstacleassessmentarea_view_lydtau.id) AS designsurface
from procedure.approachcondition_pt 
inner join procedure.approachcondition on procedure.approachcondition_pt.approachcondition_id = procedure.approachcondition.id
left join master_join mj1 on procedure.approachcondition.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join procedure.minima_pt procedure_minima_pt_lnjhdn on procedure.approachcondition.minimumset_id = procedure_minima_pt_lnjhdn.id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_onrnrs on procedure.approachcondition_ts.altimeter_id = airport_heliport_altimetersource_pt_onrnrs.id
left join master_join master_join_nzwrgn on procedure.approachcondition.id = master_join_nzwrgn.source_id
left join procedure.circlingrestriction_view procedure_circlingrestriction_view_gtyggq on master_join_nzwrgn.target_id = procedure_circlingrestriction_view_gtyggq.id
left join master_join master_join_yisfkf on procedure.approachcondition.id = master_join_yisfkf.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_hacojo on master_join_yisfkf.target_id = shared_aircraftcharacteristic_view_hacojo.id
left join master_join master_join_yffpmh on procedure.approachcondition.id = master_join_yffpmh.source_id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_ijqcaj on master_join_yffpmh.target_id = procedure_landingtakeoffareacollection_view_ijqcaj.id
left join master_join master_join_aytrjd on procedure.approachcondition.id = master_join_aytrjd.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_lydtau on master_join_aytrjd.target_id = shared_obstacleassessmentarea_view_lydtau.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    procedure.approachcondition_pt.id,
    procedure.approachcondition_pt.nilreason,
    procedure.approachcondition.finalapproachpath_value,
    procedure.approachcondition.finalapproachpath_nilreason,
    procedure.approachcondition.requirednavigationperformance_value,
    procedure.approachcondition.requirednavigationperformance_nilreason,
    procedure.approachcondition.climbgradient_value,
    procedure.approachcondition.climbgradient_nilreason,
    airport_heliport_altimetersource_pt_onrnrs.title,
    airport_heliport_altimetersource_pt_onrnrs.nilreason,
    airport_heliport_altimetersource_pt_onrnrs.href;
create or replace view airport_heliport.conditioncombination_view as
select
    airport_heliport.conditioncombination_pt.id,
    jsonb_agg(notes.note_view.note) AS conditioncombination_annotation,
    airport_heliport.conditioncombination_pt.nilreason AS conditioncombination_annotation,
    coalesce(cast(airport_heliport.conditioncombination.logicaloperator_value as varchar), '(' || airport_heliport.conditioncombination.logicaloperator_nilreason || ')') as logicaloperator,
    jsonb_agg(shared_timesheet_view_riruhm.id) AS timeinterval,
    jsonb_agg(shared_meteorology_view_euirli.id) AS weather,
    jsonb_agg(shared_aircraftcharacteristic_view_azgdmm.id) AS aircraft,
    jsonb_agg(shared_flightcharacteristic_view_xgjsye.id) AS flight,
    jsonb_agg(airport_heliport_conditioncombination_view_hthcnh.id) AS subcondition
from airport_heliport.conditioncombination_pt 
inner join airport_heliport.conditioncombination on airport_heliport.conditioncombination_pt.conditioncombination_id = airport_heliport.conditioncombination.id
left join master_join mj1 on airport_heliport.conditioncombination.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join master_join master_join_sglngr on airport_heliport.conditioncombination.id = master_join_sglngr.source_id
left join shared.timesheet_view shared_timesheet_view_riruhm on master_join_sglngr.target_id = shared_timesheet_view_riruhm.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_xvqnum on airport_heliport.conditioncombination.id = master_join_xvqnum.source_id
left join shared.meteorology_view shared_meteorology_view_euirli on master_join_xvqnum.target_id = shared_meteorology_view_euirli.id
left join master_join master_join_hnlokp on airport_heliport.conditioncombination.id = master_join_hnlokp.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_azgdmm on master_join_hnlokp.target_id = shared_aircraftcharacteristic_view_azgdmm.id
left join master_join master_join_alhdgk on airport_heliport.conditioncombination.id = master_join_alhdgk.source_id
left join shared.flightcharacteristic_view shared_flightcharacteristic_view_xgjsye on master_join_alhdgk.target_id = shared_flightcharacteristic_view_xgjsye.id
left join master_join master_join_zzauow on airport_heliport.conditioncombination.id = master_join_zzauow.source_id
left join airport_heliport.conditioncombination_view airport_heliport_conditioncombination_view_hthcnh on master_join_zzauow.target_id = airport_heliport_conditioncombination_view_hthcnh.id
group by
    airport_heliport.conditioncombination_pt.id,
    airport_heliport.conditioncombination_pt.nilreason,
    airport_heliport.conditioncombination.logicaloperator_value,
    airport_heliport.conditioncombination.logicaloperator_nilreason;
create or replace view obstacles.verticalstructurepart_view as
select
    obstacles.verticalstructurepart_pt.id,
    jsonb_agg(notes.note_view.note) AS verticalstructurepart_annotation,
    obstacles.verticalstructurepart_pt.nilreason AS verticalstructurepart_annotation,
    coalesce(cast(obstacles.verticalstructurepart.type_value as varchar), '(' || obstacles.verticalstructurepart.type_nilreason || ')') as type,
    coalesce(cast(obstacles.verticalstructurepart.constructionstatus_value as varchar), '(' || obstacles.verticalstructurepart.constructionstatus_nilreason || ')') as constructionstatus,
    coalesce(cast(obstacles.verticalstructurepart.markingpattern_value as varchar), '(' || obstacles.verticalstructurepart.markingpattern_nilreason || ')') as markingpattern,
    coalesce(cast(obstacles.verticalstructurepart.markingfirstcolour_value as varchar), '(' || obstacles.verticalstructurepart.markingfirstcolour_nilreason || ')') as markingfirstcolour,
    coalesce(cast(obstacles.verticalstructurepart.markingsecondcolour_value as varchar), '(' || obstacles.verticalstructurepart.markingsecondcolour_nilreason || ')') as markingsecondcolour,
    coalesce(cast(obstacles.verticalstructurepart.mobile_value as varchar), '(' || obstacles.verticalstructurepart.mobile_nilreason || ')') as mobile,
    coalesce(cast(obstacles.verticalstructurepart.frangible_value as varchar), '(' || obstacles.verticalstructurepart.frangible_nilreason || ')') as frangible,
    coalesce(cast(obstacles.verticalstructurepart.visiblematerial_value as varchar), '(' || obstacles.verticalstructurepart.visiblematerial_nilreason || ')') as visiblematerial,
    coalesce(cast(obstacles.verticalstructurepart.designator_value as varchar), '(' || obstacles.verticalstructurepart.designator_nilreason || ')') as designator,
    coalesce(cast(obstacles.verticalstructurepart.verticalextent_value as varchar) || ' ' || obstacles.verticalstructurepart.verticalextent_uom, '(' || obstacles.verticalstructurepart.verticalextent_nilreason || ')') as verticalextent,
    coalesce(cast(obstacles.verticalstructurepart.verticalextentaccuracy_value as varchar) || ' ' || obstacles.verticalstructurepart.verticalextentaccuracy_uom, '(' || obstacles.verticalstructurepart.verticalextentaccuracy_nilreason || ')') as verticalextentaccuracy,
    jsonb_agg(shared_timesheet_view_ttaaaw.id) AS timeinterval,
    jsonb_agg(shared_lightelement_view_utcnin.id) AS lighting
from obstacles.verticalstructurepart_pt 
inner join obstacles.verticalstructurepart on obstacles.verticalstructurepart_pt.verticalstructurepart_id = obstacles.verticalstructurepart.id
left join master_join mj1 on obstacles.verticalstructurepart.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.horizontalprojectionlocation - ElevatedPointPropertyType
--snowflake one geometry.elevatedcurve.horizontalprojectionlinearextent - ElevatedCurvePropertyType
--snowflake one geometry.elevatedsurface.horizontalprojectionsurfaceextent - ElevatedSurfacePropertyType
left join master_join master_join_nrqtcm on obstacles.verticalstructurepart.id = master_join_nrqtcm.source_id
left join shared.timesheet_view shared_timesheet_view_ttaaaw on master_join_nrqtcm.target_id = shared_timesheet_view_ttaaaw.id
--snowflake many notes.note.annotation - NotePropertyType
--snowflake many .organisationauthority.specialdateauthority - OrganisationAuthorityPropertyType
left join master_join master_join_kkllmd on obstacles.verticalstructurepart.id = master_join_kkllmd.source_id
left join shared.lightelement_view shared_lightelement_view_utcnin on master_join_kkllmd.target_id = shared_lightelement_view_utcnin.id
group by
    obstacles.verticalstructurepart_pt.id,
    obstacles.verticalstructurepart_pt.nilreason,
    obstacles.verticalstructurepart.type_value,
    obstacles.verticalstructurepart.type_nilreason,
    obstacles.verticalstructurepart.constructionstatus_value,
    obstacles.verticalstructurepart.constructionstatus_nilreason,
    obstacles.verticalstructurepart.markingpattern_value,
    obstacles.verticalstructurepart.markingpattern_nilreason,
    obstacles.verticalstructurepart.markingfirstcolour_value,
    obstacles.verticalstructurepart.markingfirstcolour_nilreason,
    obstacles.verticalstructurepart.markingsecondcolour_value,
    obstacles.verticalstructurepart.markingsecondcolour_nilreason,
    obstacles.verticalstructurepart.mobile_value,
    obstacles.verticalstructurepart.mobile_nilreason,
    obstacles.verticalstructurepart.frangible_value,
    obstacles.verticalstructurepart.frangible_nilreason,
    obstacles.verticalstructurepart.visiblematerial_value,
    obstacles.verticalstructurepart.visiblematerial_nilreason,
    obstacles.verticalstructurepart.designator_value,
    obstacles.verticalstructurepart.designator_nilreason,
    obstacles.verticalstructurepart.verticalextent_value,
    obstacles.verticalstructurepart.verticalextent_uom,
    obstacles.verticalstructurepart.verticalextent_nilreason,
    obstacles.verticalstructurepart.verticalextentaccuracy_value,
    obstacles.verticalstructurepart.verticalextentaccuracy_uom,
    obstacles.verticalstructurepart.verticalextentaccuracy_nilreason;
create or replace view service.aircraftgroundservice_publisher_view as
select distinct on (aircraftgroundservice.identifier,aircraftgroundservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.aircraftgroundservice.id,
    service.aircraftgroundservice_ts.id as ts_id,
    service.aircraftgroundservice_tsp.id as tsp_id,
    service.aircraftgroundservice.identifier,
    service.aircraftgroundservice_ts.interpretation,
    service.aircraftgroundservice_ts.sequence_number,
    service.aircraftgroundservice_ts.correction_number,
    service.aircraftgroundservice_ts.valid_time_begin,
    service.aircraftgroundservice_ts.valid_time_end,
    service.aircraftgroundservice_ts.feature_lifetime_begin,
    service.aircraftgroundservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.aircraftgroundservice_ts.flightoperations_value as varchar), '(' || service.aircraftgroundservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.aircraftgroundservice_ts.rank_value as varchar), '(' || service.aircraftgroundservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.aircraftgroundservice_ts.complianticao_value as varchar), '(' || service.aircraftgroundservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.aircraftgroundservice_ts.name_value as varchar), '(' || service.aircraftgroundservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.aircraftgroundservice_ts.type_value as varchar), '(' || service.aircraftgroundservice_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_sctfyl.title as varchar), '(' || organisation_unit_pt_sctfyl.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_sctfyl.href AS serviceprovider_href
from service.aircraftgroundservice 
inner join master_join mj2 on service.aircraftgroundservice.id = mj2.source_id
inner join service.aircraftgroundservice_tsp on mj2.target_id = service.aircraftgroundservice_tsp.id
inner join service.aircraftgroundservice_ts on service.aircraftgroundservice_tsp.aircraftgroundservicetimeslice_id = service.aircraftgroundservice_ts.id
left join master_join mj3 on service.aircraftgroundservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_sctfyl on service.aircraftgroundservice_ts.serviceprovider_id = organisation_unit_pt_sctfyl.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airport_heliport.airportheliport.airportheliport - master_join
where service.aircraftgroundservice.feature_status = 'APPROVED'
  and service.aircraftgroundservice_ts.feature_status = 'APPROVED'
group by
    service.aircraftgroundservice.id,
    service.aircraftgroundservice_ts.id,
    service.aircraftgroundservice_tsp.id,
    service.aircraftgroundservice.identifier,
    service.aircraftgroundservice_ts.interpretation,
    service.aircraftgroundservice_ts.sequence_number,
    service.aircraftgroundservice_ts.correction_number,
    service.aircraftgroundservice_ts.valid_time_begin,
    service.aircraftgroundservice_ts.valid_time_end,
    service.aircraftgroundservice_ts.feature_lifetime_begin,
    service.aircraftgroundservice_ts.feature_lifetime_end,
    service.aircraftgroundservice_ts.flightoperations_value,
    service.aircraftgroundservice_ts.flightoperations_nilreason,
    service.aircraftgroundservice_ts.rank_value,
    service.aircraftgroundservice_ts.rank_nilreason,
    service.aircraftgroundservice_ts.complianticao_value,
    service.aircraftgroundservice_ts.complianticao_nilreason,
    service.aircraftgroundservice_ts.name_value,
    service.aircraftgroundservice_ts.name_nilreason,
    service.aircraftgroundservice_ts.type_value,
    service.aircraftgroundservice_ts.type_nilreason,
    organisation_unit_pt_sctfyl.title,
    organisation_unit_pt_sctfyl.nilreason,
    organisation_unit_pt_sctfyl.href
order by aircraftgroundservice.identifier, aircraftgroundservice_ts.sequence_number, aircraftgroundservice_ts.correction_number DESC;
create or replace view service.airportclearanceservice_publisher_view as
select distinct on (airportclearanceservice.identifier,airportclearanceservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airportclearanceservice.id,
    service.airportclearanceservice_ts.id as ts_id,
    service.airportclearanceservice_tsp.id as tsp_id,
    service.airportclearanceservice.identifier,
    service.airportclearanceservice_ts.interpretation,
    service.airportclearanceservice_ts.sequence_number,
    service.airportclearanceservice_ts.correction_number,
    service.airportclearanceservice_ts.valid_time_begin,
    service.airportclearanceservice_ts.valid_time_end,
    service.airportclearanceservice_ts.feature_lifetime_begin,
    service.airportclearanceservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.airportclearanceservice_ts.flightoperations_value as varchar), '(' || service.airportclearanceservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airportclearanceservice_ts.rank_value as varchar), '(' || service.airportclearanceservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airportclearanceservice_ts.complianticao_value as varchar), '(' || service.airportclearanceservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airportclearanceservice_ts.name_value as varchar), '(' || service.airportclearanceservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airportclearanceservice_ts.snowplan_value as varchar), '(' || service.airportclearanceservice_ts.snowplan_nilreason || ')') as snowplan,
    coalesce(cast(organisation_unit_pt_eruyes.title as varchar), '(' || organisation_unit_pt_eruyes.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_eruyes.href AS serviceprovider_href
from service.airportclearanceservice 
inner join master_join mj2 on service.airportclearanceservice.id = mj2.source_id
inner join service.airportclearanceservice_tsp on mj2.target_id = service.airportclearanceservice_tsp.id
inner join service.airportclearanceservice_ts on service.airportclearanceservice_tsp.airportclearanceservicetimeslice_id = service.airportclearanceservice_ts.id
left join master_join mj3 on service.airportclearanceservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_eruyes on service.airportclearanceservice_ts.serviceprovider_id = organisation_unit_pt_eruyes.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airport_heliport.airportheliport.airportheliport - master_join
where service.airportclearanceservice.feature_status = 'APPROVED'
  and service.airportclearanceservice_ts.feature_status = 'APPROVED'
group by
    service.airportclearanceservice.id,
    service.airportclearanceservice_ts.id,
    service.airportclearanceservice_tsp.id,
    service.airportclearanceservice.identifier,
    service.airportclearanceservice_ts.interpretation,
    service.airportclearanceservice_ts.sequence_number,
    service.airportclearanceservice_ts.correction_number,
    service.airportclearanceservice_ts.valid_time_begin,
    service.airportclearanceservice_ts.valid_time_end,
    service.airportclearanceservice_ts.feature_lifetime_begin,
    service.airportclearanceservice_ts.feature_lifetime_end,
    service.airportclearanceservice_ts.flightoperations_value,
    service.airportclearanceservice_ts.flightoperations_nilreason,
    service.airportclearanceservice_ts.rank_value,
    service.airportclearanceservice_ts.rank_nilreason,
    service.airportclearanceservice_ts.complianticao_value,
    service.airportclearanceservice_ts.complianticao_nilreason,
    service.airportclearanceservice_ts.name_value,
    service.airportclearanceservice_ts.name_nilreason,
    service.airportclearanceservice_ts.snowplan_value,
    service.airportclearanceservice_ts.snowplan_nilreason,
    organisation_unit_pt_eruyes.title,
    organisation_unit_pt_eruyes.nilreason,
    organisation_unit_pt_eruyes.href
order by airportclearanceservice.identifier, airportclearanceservice_ts.sequence_number, airportclearanceservice_ts.correction_number DESC;
create or replace view service.firefightingservice_publisher_view as
select distinct on (firefightingservice.identifier,firefightingservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.firefightingservice.id,
    service.firefightingservice_ts.id as ts_id,
    service.firefightingservice_tsp.id as tsp_id,
    service.firefightingservice.identifier,
    service.firefightingservice_ts.interpretation,
    service.firefightingservice_ts.sequence_number,
    service.firefightingservice_ts.correction_number,
    service.firefightingservice_ts.valid_time_begin,
    service.firefightingservice_ts.valid_time_end,
    service.firefightingservice_ts.feature_lifetime_begin,
    service.firefightingservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.firefightingservice_ts.flightoperations_value as varchar), '(' || service.firefightingservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.firefightingservice_ts.rank_value as varchar), '(' || service.firefightingservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.firefightingservice_ts.complianticao_value as varchar), '(' || service.firefightingservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.firefightingservice_ts.name_value as varchar), '(' || service.firefightingservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.firefightingservice_ts.category_value as varchar), '(' || service.firefightingservice_ts.category_nilreason || ')') as category,
    coalesce(cast(service.firefightingservice_ts.standard_value as varchar), '(' || service.firefightingservice_ts.standard_nilreason || ')') as standard,
    coalesce(cast(organisation_unit_pt_bupfmd.title as varchar), '(' || organisation_unit_pt_bupfmd.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_bupfmd.href AS serviceprovider_href
from service.firefightingservice 
inner join master_join mj2 on service.firefightingservice.id = mj2.source_id
inner join service.firefightingservice_tsp on mj2.target_id = service.firefightingservice_tsp.id
inner join service.firefightingservice_ts on service.firefightingservice_tsp.firefightingservicetimeslice_id = service.firefightingservice_ts.id
left join master_join mj3 on service.firefightingservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_bupfmd on service.firefightingservice_ts.serviceprovider_id = organisation_unit_pt_bupfmd.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airport_heliport.airportheliport.airportheliport - master_join
where service.firefightingservice.feature_status = 'APPROVED'
  and service.firefightingservice_ts.feature_status = 'APPROVED'
group by
    service.firefightingservice.id,
    service.firefightingservice_ts.id,
    service.firefightingservice_tsp.id,
    service.firefightingservice.identifier,
    service.firefightingservice_ts.interpretation,
    service.firefightingservice_ts.sequence_number,
    service.firefightingservice_ts.correction_number,
    service.firefightingservice_ts.valid_time_begin,
    service.firefightingservice_ts.valid_time_end,
    service.firefightingservice_ts.feature_lifetime_begin,
    service.firefightingservice_ts.feature_lifetime_end,
    service.firefightingservice_ts.flightoperations_value,
    service.firefightingservice_ts.flightoperations_nilreason,
    service.firefightingservice_ts.rank_value,
    service.firefightingservice_ts.rank_nilreason,
    service.firefightingservice_ts.complianticao_value,
    service.firefightingservice_ts.complianticao_nilreason,
    service.firefightingservice_ts.name_value,
    service.firefightingservice_ts.name_nilreason,
    service.firefightingservice_ts.category_value,
    service.firefightingservice_ts.category_nilreason,
    service.firefightingservice_ts.standard_value,
    service.firefightingservice_ts.standard_nilreason,
    organisation_unit_pt_bupfmd.title,
    organisation_unit_pt_bupfmd.nilreason,
    organisation_unit_pt_bupfmd.href
order by firefightingservice.identifier, firefightingservice_ts.sequence_number, firefightingservice_ts.correction_number DESC;
create or replace view airport_heliport.guidanceline_publisher_view as
select distinct on (guidanceline.identifier,guidanceline_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidanceline.id,
    airport_heliport.guidanceline_ts.id as ts_id,
    airport_heliport.guidanceline_tsp.id as tsp_id,
    airport_heliport.guidanceline.identifier,
    airport_heliport.guidanceline_ts.interpretation,
    airport_heliport.guidanceline_ts.sequence_number,
    airport_heliport.guidanceline_ts.correction_number,
    airport_heliport.guidanceline_ts.valid_time_begin,
    airport_heliport.guidanceline_ts.valid_time_end,
    airport_heliport.guidanceline_ts.feature_lifetime_begin,
    airport_heliport.guidanceline_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.guidanceline_ts.designator_value as varchar), '(' || airport_heliport.guidanceline_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.guidanceline_ts.type_value as varchar), '(' || airport_heliport.guidanceline_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.guidanceline_ts.usagedirection_value as varchar), '(' || airport_heliport.guidanceline_ts.usagedirection_nilreason || ')') as usagedirection,
    coalesce(cast(airport_heliport.guidanceline_ts.maxspeed_value as varchar) || ' ' || airport_heliport.guidanceline_ts.maxspeed_uom, '(' || airport_heliport.guidanceline_ts.maxspeed_nilreason || ')') as maxspeed
from airport_heliport.guidanceline 
inner join master_join mj2 on airport_heliport.guidanceline.id = mj2.source_id
inner join airport_heliport.guidanceline_tsp on mj2.target_id = airport_heliport.guidanceline_tsp.id
inner join airport_heliport.guidanceline_ts on airport_heliport.guidanceline_tsp.guidancelinetimeslice_id = airport_heliport.guidanceline_ts.id
left join master_join mj3 on airport_heliport.guidanceline_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedcurve.extent - ElevatedCurvePropertyType
--feature many airport_heliport.touchdownliftoff.connectedtouchdownliftoff - master_join
--feature many airport_heliport.runwaycentrelinepoint.connectedrunwaycentrelinepoint - master_join
--feature many airport_heliport.apron.connectedapron - master_join
--feature many airport_heliport.aircraftstand.connectedstand - master_join
--feature many airport_heliport.taxiway.connectedtaxiway - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.guidanceline.feature_status = 'APPROVED'
  and airport_heliport.guidanceline_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidanceline.id,
    airport_heliport.guidanceline_ts.id,
    airport_heliport.guidanceline_tsp.id,
    airport_heliport.guidanceline.identifier,
    airport_heliport.guidanceline_ts.interpretation,
    airport_heliport.guidanceline_ts.sequence_number,
    airport_heliport.guidanceline_ts.correction_number,
    airport_heliport.guidanceline_ts.valid_time_begin,
    airport_heliport.guidanceline_ts.valid_time_end,
    airport_heliport.guidanceline_ts.feature_lifetime_begin,
    airport_heliport.guidanceline_ts.feature_lifetime_end,
    airport_heliport.guidanceline_ts.designator_value,
    airport_heliport.guidanceline_ts.designator_nilreason,
    airport_heliport.guidanceline_ts.type_value,
    airport_heliport.guidanceline_ts.type_nilreason,
    airport_heliport.guidanceline_ts.usagedirection_value,
    airport_heliport.guidanceline_ts.usagedirection_nilreason,
    airport_heliport.guidanceline_ts.maxspeed_value,
    airport_heliport.guidanceline_ts.maxspeed_uom,
    airport_heliport.guidanceline_ts.maxspeed_nilreason
order by guidanceline.identifier, guidanceline_ts.sequence_number, guidanceline_ts.correction_number DESC;
create or replace view navaids_points.navaid_publisher_view as
select distinct on (navaid.identifier,navaid_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.navaid.id,
    navaids_points.navaid_ts.id as ts_id,
    navaids_points.navaid_tsp.id as tsp_id,
    navaids_points.navaid.identifier,
    navaids_points.navaid_ts.interpretation,
    navaids_points.navaid_ts.sequence_number,
    navaids_points.navaid_ts.correction_number,
    navaids_points.navaid_ts.valid_time_begin,
    navaids_points.navaid_ts.valid_time_end,
    navaids_points.navaid_ts.feature_lifetime_begin,
    navaids_points.navaid_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(navaids_points.navaid_ts.type_value as varchar), '(' || navaids_points.navaid_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.navaid_ts.designator_value as varchar), '(' || navaids_points.navaid_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.navaid_ts.name_value as varchar), '(' || navaids_points.navaid_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.navaid_ts.flightchecked_value as varchar), '(' || navaids_points.navaid_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.navaid_ts.purpose_value as varchar), '(' || navaids_points.navaid_ts.purpose_nilreason || ')') as purpose,
    coalesce(cast(navaids_points.navaid_ts.signalperformance_value as varchar), '(' || navaids_points.navaid_ts.signalperformance_nilreason || ')') as signalperformance,
    coalesce(cast(navaids_points.navaid_ts.coursequality_value as varchar), '(' || navaids_points.navaid_ts.coursequality_nilreason || ')') as coursequality,
    coalesce(cast(navaids_points.navaid_ts.integritylevel_value as varchar), '(' || navaids_points.navaid_ts.integritylevel_nilreason || ')') as integritylevel
from navaids_points.navaid 
inner join master_join mj2 on navaids_points.navaid.id = mj2.source_id
inner join navaids_points.navaid_tsp on mj2.target_id = navaids_points.navaid_tsp.id
inner join navaids_points.navaid_ts on navaids_points.navaid_tsp.navaidtimeslice_id = navaids_points.navaid_ts.id
left join master_join mj3 on navaids_points.navaid_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
--feature many airport_heliport.touchdownliftoff.touchdownliftoff - master_join
--object many navaids_points.navaidcomponent.navaidequipment - master_join
--feature many airport_heliport.runwaydirection.runwaydirection - master_join
--feature many airport_heliport.airportheliport.servedairport - master_join
--object many navaids_points.navaidoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where navaids_points.navaid.feature_status = 'APPROVED'
  and navaids_points.navaid_ts.feature_status = 'APPROVED'
group by
    navaids_points.navaid.id,
    navaids_points.navaid_ts.id,
    navaids_points.navaid_tsp.id,
    navaids_points.navaid.identifier,
    navaids_points.navaid_ts.interpretation,
    navaids_points.navaid_ts.sequence_number,
    navaids_points.navaid_ts.correction_number,
    navaids_points.navaid_ts.valid_time_begin,
    navaids_points.navaid_ts.valid_time_end,
    navaids_points.navaid_ts.feature_lifetime_begin,
    navaids_points.navaid_ts.feature_lifetime_end,
    navaids_points.navaid_ts.type_value,
    navaids_points.navaid_ts.type_nilreason,
    navaids_points.navaid_ts.designator_value,
    navaids_points.navaid_ts.designator_nilreason,
    navaids_points.navaid_ts.name_value,
    navaids_points.navaid_ts.name_nilreason,
    navaids_points.navaid_ts.flightchecked_value,
    navaids_points.navaid_ts.flightchecked_nilreason,
    navaids_points.navaid_ts.purpose_value,
    navaids_points.navaid_ts.purpose_nilreason,
    navaids_points.navaid_ts.signalperformance_value,
    navaids_points.navaid_ts.signalperformance_nilreason,
    navaids_points.navaid_ts.coursequality_value,
    navaids_points.navaid_ts.coursequality_nilreason,
    navaids_points.navaid_ts.integritylevel_value,
    navaids_points.navaid_ts.integritylevel_nilreason
order by navaid.identifier, navaid_ts.sequence_number, navaid_ts.correction_number DESC;
create or replace view service.passengerservice_publisher_view as
select distinct on (passengerservice.identifier,passengerservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.passengerservice.id,
    service.passengerservice_ts.id as ts_id,
    service.passengerservice_tsp.id as tsp_id,
    service.passengerservice.identifier,
    service.passengerservice_ts.interpretation,
    service.passengerservice_ts.sequence_number,
    service.passengerservice_ts.correction_number,
    service.passengerservice_ts.valid_time_begin,
    service.passengerservice_ts.valid_time_end,
    service.passengerservice_ts.feature_lifetime_begin,
    service.passengerservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.passengerservice_ts.flightoperations_value as varchar), '(' || service.passengerservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.passengerservice_ts.rank_value as varchar), '(' || service.passengerservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.passengerservice_ts.complianticao_value as varchar), '(' || service.passengerservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.passengerservice_ts.name_value as varchar), '(' || service.passengerservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.passengerservice_ts.type_value as varchar), '(' || service.passengerservice_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_bovvas.title as varchar), '(' || organisation_unit_pt_bovvas.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_bovvas.href AS serviceprovider_href
from service.passengerservice 
inner join master_join mj2 on service.passengerservice.id = mj2.source_id
inner join service.passengerservice_tsp on mj2.target_id = service.passengerservice_tsp.id
inner join service.passengerservice_ts on service.passengerservice_tsp.passengerservicetimeslice_id = service.passengerservice_ts.id
left join master_join mj3 on service.passengerservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_bovvas on service.passengerservice_ts.serviceprovider_id = organisation_unit_pt_bovvas.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airport_heliport.airportheliport.airportheliport - master_join
where service.passengerservice.feature_status = 'APPROVED'
  and service.passengerservice_ts.feature_status = 'APPROVED'
group by
    service.passengerservice.id,
    service.passengerservice_ts.id,
    service.passengerservice_tsp.id,
    service.passengerservice.identifier,
    service.passengerservice_ts.interpretation,
    service.passengerservice_ts.sequence_number,
    service.passengerservice_ts.correction_number,
    service.passengerservice_ts.valid_time_begin,
    service.passengerservice_ts.valid_time_end,
    service.passengerservice_ts.feature_lifetime_begin,
    service.passengerservice_ts.feature_lifetime_end,
    service.passengerservice_ts.flightoperations_value,
    service.passengerservice_ts.flightoperations_nilreason,
    service.passengerservice_ts.rank_value,
    service.passengerservice_ts.rank_nilreason,
    service.passengerservice_ts.complianticao_value,
    service.passengerservice_ts.complianticao_nilreason,
    service.passengerservice_ts.name_value,
    service.passengerservice_ts.name_nilreason,
    service.passengerservice_ts.type_value,
    service.passengerservice_ts.type_nilreason,
    organisation_unit_pt_bovvas.title,
    organisation_unit_pt_bovvas.nilreason,
    organisation_unit_pt_bovvas.href
order by passengerservice.identifier, passengerservice_ts.sequence_number, passengerservice_ts.correction_number DESC;
create or replace view obstacles.verticalstructure_publisher_view as
select distinct on (verticalstructure.identifier,verticalstructure_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    obstacles.verticalstructure.id,
    obstacles.verticalstructure_ts.id as ts_id,
    obstacles.verticalstructure_tsp.id as tsp_id,
    obstacles.verticalstructure.identifier,
    obstacles.verticalstructure_ts.interpretation,
    obstacles.verticalstructure_ts.sequence_number,
    obstacles.verticalstructure_ts.correction_number,
    obstacles.verticalstructure_ts.valid_time_begin,
    obstacles.verticalstructure_ts.valid_time_end,
    obstacles.verticalstructure_ts.feature_lifetime_begin,
    obstacles.verticalstructure_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(obstacles.verticalstructure_ts.name_value as varchar), '(' || obstacles.verticalstructure_ts.name_nilreason || ')') as name,
    coalesce(cast(obstacles.verticalstructure_ts.type_value as varchar), '(' || obstacles.verticalstructure_ts.type_nilreason || ')') as type,
    coalesce(cast(obstacles.verticalstructure_ts.lighted_value as varchar), '(' || obstacles.verticalstructure_ts.lighted_nilreason || ')') as lighted,
    coalesce(cast(obstacles.verticalstructure_ts.markingicaostandard_value as varchar), '(' || obstacles.verticalstructure_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(obstacles.verticalstructure_ts.group_value as varchar), '(' || obstacles.verticalstructure_ts.group_nilreason || ')') as group,
    coalesce(cast(obstacles.verticalstructure_ts.lightingicaostandard_value as varchar), '(' || obstacles.verticalstructure_ts.lightingicaostandard_nilreason || ')') as lightingicaostandard,
    coalesce(cast(obstacles.verticalstructure_ts.synchronisedlighting_value as varchar), '(' || obstacles.verticalstructure_ts.synchronisedlighting_nilreason || ')') as synchronisedlighting,
    coalesce(cast(obstacles.verticalstructure_ts.length_value as varchar) || ' ' || obstacles.verticalstructure_ts.length_uom, '(' || obstacles.verticalstructure_ts.length_nilreason || ')') as length,
    coalesce(cast(obstacles.verticalstructure_ts.width_value as varchar) || ' ' || obstacles.verticalstructure_ts.width_uom, '(' || obstacles.verticalstructure_ts.width_nilreason || ')') as width,
    coalesce(cast(obstacles.verticalstructure_ts.radius_value as varchar) || ' ' || obstacles.verticalstructure_ts.radius_uom, '(' || obstacles.verticalstructure_ts.radius_nilreason || ')') as radius,
    coalesce(cast(navaids_points_markerbeacon_pt_uucyoe.title as varchar), '(' || navaids_points_markerbeacon_pt_uucyoe.nilreason[1] || ')') AS marker,
    navaids_points_markerbeacon_pt_uucyoe.href AS marker_href
from obstacles.verticalstructure 
inner join master_join mj2 on obstacles.verticalstructure.id = mj2.source_id
inner join obstacles.verticalstructure_tsp on mj2.target_id = obstacles.verticalstructure_tsp.id
inner join obstacles.verticalstructure_ts on obstacles.verticalstructure_tsp.verticalstructuretimeslice_id = obstacles.verticalstructure_ts.id
left join master_join mj3 on obstacles.verticalstructure_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join navaids_points.markerbeacon_pt navaids_points_markerbeacon_pt_uucyoe on obstacles.verticalstructure_ts.marker_id = navaids_points_markerbeacon_pt_uucyoe.id
--object many obstacles.verticalstructurepart.part - master_join
--feature many service.passengerservice.hostedpassengerservice - master_join
--feature many navaids_points.specialnavigationstation.hostedspecialnavstation - master_join
--feature many organisation.unit.hostedunit - master_join
--snowflake many .organisationauthority.hostedorganisation - OrganisationAuthorityPropertyType
--snowflake many notes.note.annotation - NotePropertyType
--object many obstacles.verticalstructurelightingstatus.lightingavailability - master_join
where obstacles.verticalstructure.feature_status = 'APPROVED'
  and obstacles.verticalstructure_ts.feature_status = 'APPROVED'
group by
    obstacles.verticalstructure.id,
    obstacles.verticalstructure_ts.id,
    obstacles.verticalstructure_tsp.id,
    obstacles.verticalstructure.identifier,
    obstacles.verticalstructure_ts.interpretation,
    obstacles.verticalstructure_ts.sequence_number,
    obstacles.verticalstructure_ts.correction_number,
    obstacles.verticalstructure_ts.valid_time_begin,
    obstacles.verticalstructure_ts.valid_time_end,
    obstacles.verticalstructure_ts.feature_lifetime_begin,
    obstacles.verticalstructure_ts.feature_lifetime_end,
    obstacles.verticalstructure_ts.name_value,
    obstacles.verticalstructure_ts.name_nilreason,
    obstacles.verticalstructure_ts.type_value,
    obstacles.verticalstructure_ts.type_nilreason,
    obstacles.verticalstructure_ts.lighted_value,
    obstacles.verticalstructure_ts.lighted_nilreason,
    obstacles.verticalstructure_ts.markingicaostandard_value,
    obstacles.verticalstructure_ts.markingicaostandard_nilreason,
    obstacles.verticalstructure_ts.group_value,
    obstacles.verticalstructure_ts.group_nilreason,
    obstacles.verticalstructure_ts.lightingicaostandard_value,
    obstacles.verticalstructure_ts.lightingicaostandard_nilreason,
    obstacles.verticalstructure_ts.synchronisedlighting_value,
    obstacles.verticalstructure_ts.synchronisedlighting_nilreason,
    obstacles.verticalstructure_ts.length_value,
    obstacles.verticalstructure_ts.length_uom,
    obstacles.verticalstructure_ts.length_nilreason,
    obstacles.verticalstructure_ts.width_value,
    obstacles.verticalstructure_ts.width_uom,
    obstacles.verticalstructure_ts.width_nilreason,
    obstacles.verticalstructure_ts.radius_value,
    obstacles.verticalstructure_ts.radius_uom,
    obstacles.verticalstructure_ts.radius_nilreason,
    navaids_points_markerbeacon_pt_uucyoe.title,
    navaids_points_markerbeacon_pt_uucyoe.nilreason,
    navaids_points_markerbeacon_pt_uucyoe.href
order by verticalstructure.identifier, verticalstructure_ts.sequence_number, verticalstructure_ts.correction_number DESC;
create or replace view airport_heliport.airportheliport_publisher_view as
select distinct on (airportheliport.identifier,airportheliport_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportheliport.id,
    airport_heliport.airportheliport_ts.id as ts_id,
    airport_heliport.airportheliport_tsp.id as tsp_id,
    airport_heliport.airportheliport.identifier,
    airport_heliport.airportheliport_ts.interpretation,
    airport_heliport.airportheliport_ts.sequence_number,
    airport_heliport.airportheliport_ts.correction_number,
    airport_heliport.airportheliport_ts.valid_time_begin,
    airport_heliport.airportheliport_ts.valid_time_end,
    airport_heliport.airportheliport_ts.feature_lifetime_begin,
    airport_heliport.airportheliport_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(airport_heliport.airportheliport_ts.designator_value as varchar), '(' || airport_heliport.airportheliport_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.airportheliport_ts.name_value as varchar), '(' || airport_heliport.airportheliport_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport.airportheliport_ts.locationindicatoricao_value as varchar), '(' || airport_heliport.airportheliport_ts.locationindicatoricao_nilreason || ')') as locationindicatoricao,
    coalesce(cast(airport_heliport.airportheliport_ts.designatoriata_value as varchar), '(' || airport_heliport.airportheliport_ts.designatoriata_nilreason || ')') as designatoriata,
    coalesce(cast(airport_heliport.airportheliport_ts.type_value as varchar), '(' || airport_heliport.airportheliport_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.airportheliport_ts.certifiedicao_value as varchar), '(' || airport_heliport.airportheliport_ts.certifiedicao_nilreason || ')') as certifiedicao,
    coalesce(cast(airport_heliport.airportheliport_ts.privateuse_value as varchar), '(' || airport_heliport.airportheliport_ts.privateuse_nilreason || ')') as privateuse,
    coalesce(cast(airport_heliport.airportheliport_ts.controltype_value as varchar), '(' || airport_heliport.airportheliport_ts.controltype_nilreason || ')') as controltype,
    coalesce(cast(airport_heliport.airportheliport_ts.verticaldatum_value as varchar), '(' || airport_heliport.airportheliport_ts.verticaldatum_nilreason || ')') as verticaldatum,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariation_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariationaccuracy_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(airport_heliport.airportheliport_ts.datemagneticvariation_value as varchar), '(' || airport_heliport.airportheliport_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariationchange_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariationchange_nilreason || ')') as magneticvariationchange,
    coalesce(cast(airport_heliport.airportheliport_ts.altimeterchecklocation_value as varchar), '(' || airport_heliport.airportheliport_ts.altimeterchecklocation_nilreason || ')') as altimeterchecklocation,
    coalesce(cast(airport_heliport.airportheliport_ts.secondarypowersupply_value as varchar), '(' || airport_heliport.airportheliport_ts.secondarypowersupply_nilreason || ')') as secondarypowersupply,
    coalesce(cast(airport_heliport.airportheliport_ts.winddirectionindicator_value as varchar), '(' || airport_heliport.airportheliport_ts.winddirectionindicator_nilreason || ')') as winddirectionindicator,
    coalesce(cast(airport_heliport.airportheliport_ts.landingdirectionindicator_value as varchar), '(' || airport_heliport.airportheliport_ts.landingdirectionindicator_nilreason || ')') as landingdirectionindicator,
    coalesce(cast(airport_heliport.airportheliport_ts.abandoned_value as varchar), '(' || airport_heliport.airportheliport_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.airportheliport_ts.fieldelevation_value as varchar) || ' ' || airport_heliport.airportheliport_ts.fieldelevation_uom, '(' || airport_heliport.airportheliport_ts.fieldelevation_nilreason || ')') as fieldelevation,
    coalesce(cast(airport_heliport.airportheliport_ts.fieldelevationaccuracy_value as varchar) || ' ' || airport_heliport.airportheliport_ts.fieldelevationaccuracy_uom, '(' || airport_heliport.airportheliport_ts.fieldelevationaccuracy_nilreason || ')') as fieldelevationaccuracy,
    coalesce(cast(airport_heliport.airportheliport_ts.referencetemperature_value as varchar) || ' ' || airport_heliport.airportheliport_ts.referencetemperature_uom, '(' || airport_heliport.airportheliport_ts.referencetemperature_nilreason || ')') as referencetemperature,
    coalesce(cast(airport_heliport.airportheliport_ts.transitionaltitude_value as varchar) || ' ' || airport_heliport.airportheliport_ts.transitionaltitude_uom, '(' || airport_heliport.airportheliport_ts.transitionaltitude_nilreason || ')') as transitionaltitude,
    coalesce(cast(airport_heliport.airportheliport_ts.transitionlevel_value as varchar) || ' ' || airport_heliport.airportheliport_ts.transitionlevel_uom, '(' || airport_heliport.airportheliport_ts.transitionlevel_nilreason || ')') as transitionlevel,
    coalesce(cast(airport_heliport.airportheliport_ts.lowesttemperature_value as varchar) || ' ' || airport_heliport.airportheliport_ts.lowesttemperature_uom, '(' || airport_heliport.airportheliport_ts.lowesttemperature_nilreason || ')') as lowesttemperature,
    coalesce(cast(airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.title as varchar), '(' || airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.nilreason[1] || ')') AS responsibleorganisation,
    airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.href AS responsibleorganisation_href
from airport_heliport.airportheliport 
inner join master_join mj2 on airport_heliport.airportheliport.id = mj2.source_id
inner join airport_heliport.airportheliport_tsp on mj2.target_id = airport_heliport.airportheliport_tsp.id
inner join airport_heliport.airportheliport_ts on airport_heliport.airportheliport_tsp.airportheliporttimeslice_id = airport_heliport.airportheliport_ts.id
left join master_join mj3 on airport_heliport.airportheliport_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
left join airport_heliport.airportheliportresponsibilityorganisation_pt airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl on airport_heliport.airportheliport_ts.responsibleorganisation_id = airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.id
--snowflake one geometry.elevatedpoint.arp - ElevatedPointPropertyType
--snowflake one geometry.elevatedsurface.aviationboundary - ElevatedSurfacePropertyType
--object many airport_heliport.airportheliportcontamination.contaminant - master_join
--object many airport_heliport.city.servedcity - master_join
--feature many airport_heliport.altimetersource.altimetersource - master_join
--snowflake many .contactinformation.contact - ContactInformationPropertyType
--object many airport_heliport.airportheliportavailability.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
where airport_heliport.airportheliport.feature_status = 'APPROVED'
  and airport_heliport.airportheliport_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportheliport.id,
    airport_heliport.airportheliport_ts.id,
    airport_heliport.airportheliport_tsp.id,
    airport_heliport.airportheliport.identifier,
    airport_heliport.airportheliport_ts.interpretation,
    airport_heliport.airportheliport_ts.sequence_number,
    airport_heliport.airportheliport_ts.correction_number,
    airport_heliport.airportheliport_ts.valid_time_begin,
    airport_heliport.airportheliport_ts.valid_time_end,
    airport_heliport.airportheliport_ts.feature_lifetime_begin,
    airport_heliport.airportheliport_ts.feature_lifetime_end,
    airport_heliport.airportheliport_ts.designator_value,
    airport_heliport.airportheliport_ts.designator_nilreason,
    airport_heliport.airportheliport_ts.name_value,
    airport_heliport.airportheliport_ts.name_nilreason,
    airport_heliport.airportheliport_ts.locationindicatoricao_value,
    airport_heliport.airportheliport_ts.locationindicatoricao_nilreason,
    airport_heliport.airportheliport_ts.designatoriata_value,
    airport_heliport.airportheliport_ts.designatoriata_nilreason,
    airport_heliport.airportheliport_ts.type_value,
    airport_heliport.airportheliport_ts.type_nilreason,
    airport_heliport.airportheliport_ts.certifiedicao_value,
    airport_heliport.airportheliport_ts.certifiedicao_nilreason,
    airport_heliport.airportheliport_ts.privateuse_value,
    airport_heliport.airportheliport_ts.privateuse_nilreason,
    airport_heliport.airportheliport_ts.controltype_value,
    airport_heliport.airportheliport_ts.controltype_nilreason,
    airport_heliport.airportheliport_ts.verticaldatum_value,
    airport_heliport.airportheliport_ts.verticaldatum_nilreason,
    airport_heliport.airportheliport_ts.magneticvariation_value,
    airport_heliport.airportheliport_ts.magneticvariation_nilreason,
    airport_heliport.airportheliport_ts.magneticvariationaccuracy_value,
    airport_heliport.airportheliport_ts.magneticvariationaccuracy_nilreason,
    airport_heliport.airportheliport_ts.datemagneticvariation_value,
    airport_heliport.airportheliport_ts.datemagneticvariation_nilreason,
    airport_heliport.airportheliport_ts.magneticvariationchange_value,
    airport_heliport.airportheliport_ts.magneticvariationchange_nilreason,
    airport_heliport.airportheliport_ts.altimeterchecklocation_value,
    airport_heliport.airportheliport_ts.altimeterchecklocation_nilreason,
    airport_heliport.airportheliport_ts.secondarypowersupply_value,
    airport_heliport.airportheliport_ts.secondarypowersupply_nilreason,
    airport_heliport.airportheliport_ts.winddirectionindicator_value,
    airport_heliport.airportheliport_ts.winddirectionindicator_nilreason,
    airport_heliport.airportheliport_ts.landingdirectionindicator_value,
    airport_heliport.airportheliport_ts.landingdirectionindicator_nilreason,
    airport_heliport.airportheliport_ts.abandoned_value,
    airport_heliport.airportheliport_ts.abandoned_nilreason,
    airport_heliport.airportheliport_ts.fieldelevation_value,
    airport_heliport.airportheliport_ts.fieldelevation_uom,
    airport_heliport.airportheliport_ts.fieldelevation_nilreason,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_value,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_uom,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_nilreason,
    airport_heliport.airportheliport_ts.referencetemperature_value,
    airport_heliport.airportheliport_ts.referencetemperature_uom,
    airport_heliport.airportheliport_ts.referencetemperature_nilreason,
    airport_heliport.airportheliport_ts.transitionaltitude_value,
    airport_heliport.airportheliport_ts.transitionaltitude_uom,
    airport_heliport.airportheliport_ts.transitionaltitude_nilreason,
    airport_heliport.airportheliport_ts.transitionlevel_value,
    airport_heliport.airportheliport_ts.transitionlevel_uom,
    airport_heliport.airportheliport_ts.transitionlevel_nilreason,
    airport_heliport.airportheliport_ts.lowesttemperature_value,
    airport_heliport.airportheliport_ts.lowesttemperature_uom,
    airport_heliport.airportheliport_ts.lowesttemperature_nilreason,
    airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.title,
    airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.nilreason,
    airport_heliport_airportheliportresponsibilityorganisation_pt_gtewbl.href
order by airportheliport.identifier, airportheliport_ts.sequence_number, airportheliport_ts.correction_number DESC;
create or replace view service.searchrescueservice_publisher_view as
select distinct on (searchrescueservice.identifier,searchrescueservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.searchrescueservice.id,
    service.searchrescueservice_ts.id as ts_id,
    service.searchrescueservice_tsp.id as tsp_id,
    service.searchrescueservice.identifier,
    service.searchrescueservice_ts.interpretation,
    service.searchrescueservice_ts.sequence_number,
    service.searchrescueservice_ts.correction_number,
    service.searchrescueservice_ts.valid_time_begin,
    service.searchrescueservice_ts.valid_time_end,
    service.searchrescueservice_ts.feature_lifetime_begin,
    service.searchrescueservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.searchrescueservice_ts.flightoperations_value as varchar), '(' || service.searchrescueservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.searchrescueservice_ts.rank_value as varchar), '(' || service.searchrescueservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.searchrescueservice_ts.complianticao_value as varchar), '(' || service.searchrescueservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.searchrescueservice_ts.name_value as varchar), '(' || service.searchrescueservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.searchrescueservice_ts.type_value as varchar), '(' || service.searchrescueservice_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_xvnkni.title as varchar), '(' || organisation_unit_pt_xvnkni.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_xvnkni.href AS serviceprovider_href
from service.searchrescueservice 
inner join master_join mj2 on service.searchrescueservice.id = mj2.source_id
inner join service.searchrescueservice_tsp on mj2.target_id = service.searchrescueservice_tsp.id
inner join service.searchrescueservice_ts on service.searchrescueservice_tsp.searchrescueservicetimeslice_id = service.searchrescueservice_ts.id
left join master_join mj3 on service.searchrescueservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_xvnkni on service.searchrescueservice_ts.serviceprovider_id = organisation_unit_pt_xvnkni.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airspace.airspace.clientairspace - master_join
--object many routes.routeportion.clientroute - master_join
where service.searchrescueservice.feature_status = 'APPROVED'
  and service.searchrescueservice_ts.feature_status = 'APPROVED'
group by
    service.searchrescueservice.id,
    service.searchrescueservice_ts.id,
    service.searchrescueservice_tsp.id,
    service.searchrescueservice.identifier,
    service.searchrescueservice_ts.interpretation,
    service.searchrescueservice_ts.sequence_number,
    service.searchrescueservice_ts.correction_number,
    service.searchrescueservice_ts.valid_time_begin,
    service.searchrescueservice_ts.valid_time_end,
    service.searchrescueservice_ts.feature_lifetime_begin,
    service.searchrescueservice_ts.feature_lifetime_end,
    service.searchrescueservice_ts.flightoperations_value,
    service.searchrescueservice_ts.flightoperations_nilreason,
    service.searchrescueservice_ts.rank_value,
    service.searchrescueservice_ts.rank_nilreason,
    service.searchrescueservice_ts.complianticao_value,
    service.searchrescueservice_ts.complianticao_nilreason,
    service.searchrescueservice_ts.name_value,
    service.searchrescueservice_ts.name_nilreason,
    service.searchrescueservice_ts.type_value,
    service.searchrescueservice_ts.type_nilreason,
    organisation_unit_pt_xvnkni.title,
    organisation_unit_pt_xvnkni.nilreason,
    organisation_unit_pt_xvnkni.href
order by searchrescueservice.identifier, searchrescueservice_ts.sequence_number, searchrescueservice_ts.correction_number DESC;
create or replace view aerial_refuelling.aerialrefuellingpoint_view as
select
    aerial_refuelling.aerialrefuellingpoint_pt.id,
    jsonb_agg(notes.note_view.note) AS aerialrefuellingpoint_annotation,
    aerial_refuelling.aerialrefuellingpoint_pt.nilreason AS aerialrefuellingpoint_annotation,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.reportingatc_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.flyover_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.waypoint_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.radarguidance_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.sequence_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.sequence_nilreason || ')') as sequence,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.usagetype_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.usagetype_nilreason || ')') as usagetype,
    coalesce(cast(navaids_points_designatedpoint_pt_yegnca.title as varchar), '(' || navaids_points_designatedpoint_pt_yegnca.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_yegnca.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_gdzmhu.title as varchar), '(' || navaids_points_navaid_pt_gdzmhu.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_gdzmhu.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_vganvv.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_vganvv.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_vganvv.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_snyopp.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_snyopp.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_snyopp.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_omkboq.title as varchar), '(' || airport_heliport_airportheliport_pt_omkboq.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_omkboq.href AS pointchoiceairportreferencepoint_href,
    coalesce(cast(shared_radiofrequencyarea_pt_brwbvw.title as varchar), '(' || shared_radiofrequencyarea_pt_brwbvw.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_brwbvw.href AS extendedservicevolume_href,
    jsonb_agg(navaids_points_pointreference_view_birney.id) AS facilitymakeup
from aerial_refuelling.aerialrefuellingpoint_pt 
inner join aerial_refuelling.aerialrefuellingpoint on aerial_refuelling.aerialrefuellingpoint_pt.aerialrefuellingpoint_id = aerial_refuelling.aerialrefuellingpoint.id
left join master_join mj1 on aerial_refuelling.aerialrefuellingpoint.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_yegnca on aerial_refuelling.aerialrefuellingpoint_ts.aerialrefuellingpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_yegnca.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_gdzmhu on aerial_refuelling.aerialrefuellingpoint_ts.aerialrefuellingpoint_navaidsystem_id = navaids_points_navaid_pt_gdzmhu.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_vganvv on aerial_refuelling.aerialrefuellingpoint_ts.aerialrefuellingpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_vganvv.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_snyopp on aerial_refuelling.aerialrefuellingpoint_ts.aerialrefuellingpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_snyopp.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_omkboq on aerial_refuelling.aerialrefuellingpoint_ts.aerialrefuellingpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_omkboq.id
--snowflake one geometry.point.pointchoiceposition - PointPropertyType
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_brwbvw on aerial_refuelling.aerialrefuellingpoint_ts.extendedservicevolume_id = shared_radiofrequencyarea_pt_brwbvw.id
left join master_join master_join_pkkest on aerial_refuelling.aerialrefuellingpoint.id = master_join_pkkest.source_id
left join navaids_points.pointreference_view navaids_points_pointreference_view_birney on master_join_pkkest.target_id = navaids_points_pointreference_view_birney.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    aerial_refuelling.aerialrefuellingpoint_pt.id,
    aerial_refuelling.aerialrefuellingpoint_pt.nilreason,
    aerial_refuelling.aerialrefuellingpoint.reportingatc_value,
    aerial_refuelling.aerialrefuellingpoint.reportingatc_nilreason,
    aerial_refuelling.aerialrefuellingpoint.flyover_value,
    aerial_refuelling.aerialrefuellingpoint.flyover_nilreason,
    aerial_refuelling.aerialrefuellingpoint.waypoint_value,
    aerial_refuelling.aerialrefuellingpoint.waypoint_nilreason,
    aerial_refuelling.aerialrefuellingpoint.radarguidance_value,
    aerial_refuelling.aerialrefuellingpoint.radarguidance_nilreason,
    aerial_refuelling.aerialrefuellingpoint.sequence_value,
    aerial_refuelling.aerialrefuellingpoint.sequence_nilreason,
    aerial_refuelling.aerialrefuellingpoint.usagetype_value,
    aerial_refuelling.aerialrefuellingpoint.usagetype_nilreason,
    navaids_points_designatedpoint_pt_yegnca.title,
    navaids_points_designatedpoint_pt_yegnca.nilreason,
    navaids_points_designatedpoint_pt_yegnca.href,
    navaids_points_navaid_pt_gdzmhu.title,
    navaids_points_navaid_pt_gdzmhu.nilreason,
    navaids_points_navaid_pt_gdzmhu.href,
    airport_heliport_touchdownliftoff_pt_vganvv.title,
    airport_heliport_touchdownliftoff_pt_vganvv.nilreason,
    airport_heliport_touchdownliftoff_pt_vganvv.href,
    airport_heliport_runwaycentrelinepoint_pt_snyopp.title,
    airport_heliport_runwaycentrelinepoint_pt_snyopp.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_snyopp.href,
    airport_heliport_airportheliport_pt_omkboq.title,
    airport_heliport_airportheliport_pt_omkboq.nilreason,
    airport_heliport_airportheliport_pt_omkboq.href,
    shared_radiofrequencyarea_pt_brwbvw.title,
    shared_radiofrequencyarea_pt_brwbvw.nilreason,
    shared_radiofrequencyarea_pt_brwbvw.href;
create or replace view navaids_points.enroutesegmentpoint_view as
select
    navaids_points.enroutesegmentpoint_pt.id,
    jsonb_agg(notes.note_view.note) AS enroutesegmentpoint_annotation,
    navaids_points.enroutesegmentpoint_pt.nilreason AS enroutesegmentpoint_annotation,
    coalesce(cast(navaids_points.enroutesegmentpoint.reportingatc_value as varchar), '(' || navaids_points.enroutesegmentpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(navaids_points.enroutesegmentpoint.flyover_value as varchar), '(' || navaids_points.enroutesegmentpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(navaids_points.enroutesegmentpoint.waypoint_value as varchar), '(' || navaids_points.enroutesegmentpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(navaids_points.enroutesegmentpoint.radarguidance_value as varchar), '(' || navaids_points.enroutesegmentpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolefreeflight_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolefreeflight_nilreason || ')') as rolefreeflight,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolervsm_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolervsm_nilreason || ')') as rolervsm,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolemilitarytraining_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolemilitarytraining_nilreason || ')') as rolemilitarytraining,
    coalesce(cast(navaids_points.enroutesegmentpoint.turnradius_value as varchar) || ' ' || navaids_points.enroutesegmentpoint.turnradius_uom, '(' || navaids_points.enroutesegmentpoint.turnradius_nilreason || ')') as turnradius,
    coalesce(cast(navaids_points_designatedpoint_pt_jjtsqj.title as varchar), '(' || navaids_points_designatedpoint_pt_jjtsqj.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_jjtsqj.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_sonukr.title as varchar), '(' || navaids_points_navaid_pt_sonukr.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_sonukr.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_mtiaoq.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_mtiaoq.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_mtiaoq.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_dvzlku.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_dvzlku.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_dvzlku.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_xwbfhn.title as varchar), '(' || airport_heliport_airportheliport_pt_xwbfhn.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_xwbfhn.href AS pointchoiceairportreferencepoint_href,
    coalesce(cast(shared_radiofrequencyarea_pt_kkmsmk.title as varchar), '(' || shared_radiofrequencyarea_pt_kkmsmk.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_kkmsmk.href AS extendedservicevolume_href,
    jsonb_agg(navaids_points_pointreference_view_tmkwbt.id) AS facilitymakeup
from navaids_points.enroutesegmentpoint_pt 
inner join navaids_points.enroutesegmentpoint on navaids_points.enroutesegmentpoint_pt.enroutesegmentpoint_id = navaids_points.enroutesegmentpoint.id
left join master_join mj1 on navaids_points.enroutesegmentpoint.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_jjtsqj on navaids_points.enroutesegmentpoint_ts.enroutesegmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_jjtsqj.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_sonukr on navaids_points.enroutesegmentpoint_ts.enroutesegmentpoint_navaidsystem_id = navaids_points_navaid_pt_sonukr.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_mtiaoq on navaids_points.enroutesegmentpoint_ts.enroutesegmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_mtiaoq.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_dvzlku on navaids_points.enroutesegmentpoint_ts.enroutesegmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_dvzlku.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_xwbfhn on navaids_points.enroutesegmentpoint_ts.enroutesegmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_xwbfhn.id
--snowflake one geometry.point.pointchoiceposition - PointPropertyType
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_kkmsmk on navaids_points.enroutesegmentpoint_ts.extendedservicevolume_id = shared_radiofrequencyarea_pt_kkmsmk.id
left join master_join master_join_ofomhh on navaids_points.enroutesegmentpoint.id = master_join_ofomhh.source_id
left join navaids_points.pointreference_view navaids_points_pointreference_view_tmkwbt on master_join_ofomhh.target_id = navaids_points_pointreference_view_tmkwbt.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.enroutesegmentpoint_pt.id,
    navaids_points.enroutesegmentpoint_pt.nilreason,
    navaids_points.enroutesegmentpoint.reportingatc_value,
    navaids_points.enroutesegmentpoint.reportingatc_nilreason,
    navaids_points.enroutesegmentpoint.flyover_value,
    navaids_points.enroutesegmentpoint.flyover_nilreason,
    navaids_points.enroutesegmentpoint.waypoint_value,
    navaids_points.enroutesegmentpoint.waypoint_nilreason,
    navaids_points.enroutesegmentpoint.radarguidance_value,
    navaids_points.enroutesegmentpoint.radarguidance_nilreason,
    navaids_points.enroutesegmentpoint.rolefreeflight_value,
    navaids_points.enroutesegmentpoint.rolefreeflight_nilreason,
    navaids_points.enroutesegmentpoint.rolervsm_value,
    navaids_points.enroutesegmentpoint.rolervsm_nilreason,
    navaids_points.enroutesegmentpoint.rolemilitarytraining_value,
    navaids_points.enroutesegmentpoint.rolemilitarytraining_nilreason,
    navaids_points.enroutesegmentpoint.turnradius_value,
    navaids_points.enroutesegmentpoint.turnradius_uom,
    navaids_points.enroutesegmentpoint.turnradius_nilreason,
    navaids_points_designatedpoint_pt_jjtsqj.title,
    navaids_points_designatedpoint_pt_jjtsqj.nilreason,
    navaids_points_designatedpoint_pt_jjtsqj.href,
    navaids_points_navaid_pt_sonukr.title,
    navaids_points_navaid_pt_sonukr.nilreason,
    navaids_points_navaid_pt_sonukr.href,
    airport_heliport_touchdownliftoff_pt_mtiaoq.title,
    airport_heliport_touchdownliftoff_pt_mtiaoq.nilreason,
    airport_heliport_touchdownliftoff_pt_mtiaoq.href,
    airport_heliport_runwaycentrelinepoint_pt_dvzlku.title,
    airport_heliport_runwaycentrelinepoint_pt_dvzlku.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_dvzlku.href,
    airport_heliport_airportheliport_pt_xwbfhn.title,
    airport_heliport_airportheliport_pt_xwbfhn.nilreason,
    airport_heliport_airportheliport_pt_xwbfhn.href,
    shared_radiofrequencyarea_pt_kkmsmk.title,
    shared_radiofrequencyarea_pt_kkmsmk.nilreason,
    shared_radiofrequencyarea_pt_kkmsmk.href;
create or replace view navaids_points.terminalsegmentpoint_view as
select
    navaids_points.terminalsegmentpoint_pt.id,
    jsonb_agg(notes.note_view.note) AS terminalsegmentpoint_annotation,
    navaids_points.terminalsegmentpoint_pt.nilreason AS terminalsegmentpoint_annotation,
    coalesce(cast(navaids_points.terminalsegmentpoint.reportingatc_value as varchar), '(' || navaids_points.terminalsegmentpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(navaids_points.terminalsegmentpoint.flyover_value as varchar), '(' || navaids_points.terminalsegmentpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(navaids_points.terminalsegmentpoint.waypoint_value as varchar), '(' || navaids_points.terminalsegmentpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(navaids_points.terminalsegmentpoint.radarguidance_value as varchar), '(' || navaids_points.terminalsegmentpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(navaids_points.terminalsegmentpoint.role_value as varchar), '(' || navaids_points.terminalsegmentpoint.role_nilreason || ')') as role,
    coalesce(cast(navaids_points.terminalsegmentpoint.leadradial_value as varchar), '(' || navaids_points.terminalsegmentpoint.leadradial_nilreason || ')') as leadradial,
    coalesce(cast(navaids_points.terminalsegmentpoint.indicatorfacf_value as varchar), '(' || navaids_points.terminalsegmentpoint.indicatorfacf_nilreason || ')') as indicatorfacf,
    coalesce(cast(navaids_points.terminalsegmentpoint.leaddme_value as varchar) || ' ' || navaids_points.terminalsegmentpoint.leaddme_uom, '(' || navaids_points.terminalsegmentpoint.leaddme_nilreason || ')') as leaddme,
    coalesce(cast(navaids_points_designatedpoint_pt_qbjebc.title as varchar), '(' || navaids_points_designatedpoint_pt_qbjebc.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_qbjebc.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_wmiwij.title as varchar), '(' || navaids_points_navaid_pt_wmiwij.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_wmiwij.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_frnjuo.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_frnjuo.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_frnjuo.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_ewwqof.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_ewwqof.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_ewwqof.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ixgczi.title as varchar), '(' || airport_heliport_airportheliport_pt_ixgczi.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_ixgczi.href AS pointchoiceairportreferencepoint_href,
    coalesce(cast(shared_radiofrequencyarea_pt_czntqv.title as varchar), '(' || shared_radiofrequencyarea_pt_czntqv.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_czntqv.href AS extendedservicevolume_href,
    jsonb_agg(navaids_points_pointreference_view_covixn.id) AS facilitymakeup
from navaids_points.terminalsegmentpoint_pt 
inner join navaids_points.terminalsegmentpoint on navaids_points.terminalsegmentpoint_pt.terminalsegmentpoint_id = navaids_points.terminalsegmentpoint.id
left join master_join mj1 on navaids_points.terminalsegmentpoint.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_qbjebc on navaids_points.terminalsegmentpoint_ts.terminalsegmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_qbjebc.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_wmiwij on navaids_points.terminalsegmentpoint_ts.terminalsegmentpoint_navaidsystem_id = navaids_points_navaid_pt_wmiwij.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_frnjuo on navaids_points.terminalsegmentpoint_ts.terminalsegmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_frnjuo.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_ewwqof on navaids_points.terminalsegmentpoint_ts.terminalsegmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_ewwqof.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ixgczi on navaids_points.terminalsegmentpoint_ts.terminalsegmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_ixgczi.id
--snowflake one geometry.point.pointchoiceposition - PointPropertyType
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_czntqv on navaids_points.terminalsegmentpoint_ts.extendedservicevolume_id = shared_radiofrequencyarea_pt_czntqv.id
left join master_join master_join_avyizj on navaids_points.terminalsegmentpoint.id = master_join_avyizj.source_id
left join navaids_points.pointreference_view navaids_points_pointreference_view_covixn on master_join_avyizj.target_id = navaids_points_pointreference_view_covixn.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    navaids_points.terminalsegmentpoint_pt.id,
    navaids_points.terminalsegmentpoint_pt.nilreason,
    navaids_points.terminalsegmentpoint.reportingatc_value,
    navaids_points.terminalsegmentpoint.reportingatc_nilreason,
    navaids_points.terminalsegmentpoint.flyover_value,
    navaids_points.terminalsegmentpoint.flyover_nilreason,
    navaids_points.terminalsegmentpoint.waypoint_value,
    navaids_points.terminalsegmentpoint.waypoint_nilreason,
    navaids_points.terminalsegmentpoint.radarguidance_value,
    navaids_points.terminalsegmentpoint.radarguidance_nilreason,
    navaids_points.terminalsegmentpoint.role_value,
    navaids_points.terminalsegmentpoint.role_nilreason,
    navaids_points.terminalsegmentpoint.leadradial_value,
    navaids_points.terminalsegmentpoint.leadradial_nilreason,
    navaids_points.terminalsegmentpoint.indicatorfacf_value,
    navaids_points.terminalsegmentpoint.indicatorfacf_nilreason,
    navaids_points.terminalsegmentpoint.leaddme_value,
    navaids_points.terminalsegmentpoint.leaddme_uom,
    navaids_points.terminalsegmentpoint.leaddme_nilreason,
    navaids_points_designatedpoint_pt_qbjebc.title,
    navaids_points_designatedpoint_pt_qbjebc.nilreason,
    navaids_points_designatedpoint_pt_qbjebc.href,
    navaids_points_navaid_pt_wmiwij.title,
    navaids_points_navaid_pt_wmiwij.nilreason,
    navaids_points_navaid_pt_wmiwij.href,
    airport_heliport_touchdownliftoff_pt_frnjuo.title,
    airport_heliport_touchdownliftoff_pt_frnjuo.nilreason,
    airport_heliport_touchdownliftoff_pt_frnjuo.href,
    airport_heliport_runwaycentrelinepoint_pt_ewwqof.title,
    airport_heliport_runwaycentrelinepoint_pt_ewwqof.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_ewwqof.href,
    airport_heliport_airportheliport_pt_ixgczi.title,
    airport_heliport_airportheliport_pt_ixgczi.nilreason,
    airport_heliport_airportheliport_pt_ixgczi.href,
    shared_radiofrequencyarea_pt_czntqv.title,
    shared_radiofrequencyarea_pt_czntqv.nilreason,
    shared_radiofrequencyarea_pt_czntqv.href;
create or replace view service.airtrafficmanagementservice_publisher_view as
select distinct on (airtrafficmanagementservice.identifier,airtrafficmanagementservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airtrafficmanagementservice.id,
    service.airtrafficmanagementservice_ts.id as ts_id,
    service.airtrafficmanagementservice_tsp.id as tsp_id,
    service.airtrafficmanagementservice.identifier,
    service.airtrafficmanagementservice_ts.interpretation,
    service.airtrafficmanagementservice_ts.sequence_number,
    service.airtrafficmanagementservice_ts.correction_number,
    service.airtrafficmanagementservice_ts.valid_time_begin,
    service.airtrafficmanagementservice_ts.valid_time_end,
    service.airtrafficmanagementservice_ts.feature_lifetime_begin,
    service.airtrafficmanagementservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.airtrafficmanagementservice_ts.flightoperations_value as varchar), '(' || service.airtrafficmanagementservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airtrafficmanagementservice_ts.rank_value as varchar), '(' || service.airtrafficmanagementservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airtrafficmanagementservice_ts.complianticao_value as varchar), '(' || service.airtrafficmanagementservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airtrafficmanagementservice_ts.name_value as varchar), '(' || service.airtrafficmanagementservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airtrafficmanagementservice_ts.type_value as varchar), '(' || service.airtrafficmanagementservice_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_hpmafb.title as varchar), '(' || organisation_unit_pt_hpmafb.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_hpmafb.href AS serviceprovider_href
from service.airtrafficmanagementservice 
inner join master_join mj2 on service.airtrafficmanagementservice.id = mj2.source_id
inner join service.airtrafficmanagementservice_tsp on mj2.target_id = service.airtrafficmanagementservice_tsp.id
inner join service.airtrafficmanagementservice_ts on service.airtrafficmanagementservice_tsp.airtrafficmanagementservicetimeslice_id = service.airtrafficmanagementservice_ts.id
left join master_join mj3 on service.airtrafficmanagementservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_hpmafb on service.airtrafficmanagementservice_ts.serviceprovider_id = organisation_unit_pt_hpmafb.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airspace.airspace.clientairspace - master_join
--feature many aerial_refuelling.aerialrefuelling.clientaerialrefuelling - master_join
--object many routes.routeportion.clientroute - master_join
where service.airtrafficmanagementservice.feature_status = 'APPROVED'
  and service.airtrafficmanagementservice_ts.feature_status = 'APPROVED'
group by
    service.airtrafficmanagementservice.id,
    service.airtrafficmanagementservice_ts.id,
    service.airtrafficmanagementservice_tsp.id,
    service.airtrafficmanagementservice.identifier,
    service.airtrafficmanagementservice_ts.interpretation,
    service.airtrafficmanagementservice_ts.sequence_number,
    service.airtrafficmanagementservice_ts.correction_number,
    service.airtrafficmanagementservice_ts.valid_time_begin,
    service.airtrafficmanagementservice_ts.valid_time_end,
    service.airtrafficmanagementservice_ts.feature_lifetime_begin,
    service.airtrafficmanagementservice_ts.feature_lifetime_end,
    service.airtrafficmanagementservice_ts.flightoperations_value,
    service.airtrafficmanagementservice_ts.flightoperations_nilreason,
    service.airtrafficmanagementservice_ts.rank_value,
    service.airtrafficmanagementservice_ts.rank_nilreason,
    service.airtrafficmanagementservice_ts.complianticao_value,
    service.airtrafficmanagementservice_ts.complianticao_nilreason,
    service.airtrafficmanagementservice_ts.name_value,
    service.airtrafficmanagementservice_ts.name_nilreason,
    service.airtrafficmanagementservice_ts.type_value,
    service.airtrafficmanagementservice_ts.type_nilreason,
    organisation_unit_pt_hpmafb.title,
    organisation_unit_pt_hpmafb.nilreason,
    organisation_unit_pt_hpmafb.href
order by airtrafficmanagementservice.identifier, airtrafficmanagementservice_ts.sequence_number, airtrafficmanagementservice_ts.correction_number DESC;
create or replace view service.airportsuppliesservice_publisher_view as
select distinct on (airportsuppliesservice.identifier,airportsuppliesservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airportsuppliesservice.id,
    service.airportsuppliesservice_ts.id as ts_id,
    service.airportsuppliesservice_tsp.id as tsp_id,
    service.airportsuppliesservice.identifier,
    service.airportsuppliesservice_ts.interpretation,
    service.airportsuppliesservice_ts.sequence_number,
    service.airportsuppliesservice_ts.correction_number,
    service.airportsuppliesservice_ts.valid_time_begin,
    service.airportsuppliesservice_ts.valid_time_end,
    service.airportsuppliesservice_ts.feature_lifetime_begin,
    service.airportsuppliesservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.airportsuppliesservice_ts.flightoperations_value as varchar), '(' || service.airportsuppliesservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airportsuppliesservice_ts.rank_value as varchar), '(' || service.airportsuppliesservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airportsuppliesservice_ts.complianticao_value as varchar), '(' || service.airportsuppliesservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airportsuppliesservice_ts.name_value as varchar), '(' || service.airportsuppliesservice_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation_unit_pt_xgoflg.title as varchar), '(' || organisation_unit_pt_xgoflg.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_xgoflg.href AS serviceprovider_href
from service.airportsuppliesservice 
inner join master_join mj2 on service.airportsuppliesservice.id = mj2.source_id
inner join service.airportsuppliesservice_tsp on mj2.target_id = service.airportsuppliesservice_tsp.id
inner join service.airportsuppliesservice_ts on service.airportsuppliesservice_tsp.airportsuppliesservicetimeslice_id = service.airportsuppliesservice_ts.id
left join master_join mj3 on service.airportsuppliesservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_xgoflg on service.airportsuppliesservice_ts.serviceprovider_id = organisation_unit_pt_xgoflg.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airport_heliport.airportheliport.airportheliport - master_join
--object many service.fuel.fuelsupply - master_join
--object many service.oil.oilsupply - master_join
--object many service.nitrogen.nitrogensupply - master_join
--object many service.oxygen.oxygensupply - master_join
where service.airportsuppliesservice.feature_status = 'APPROVED'
  and service.airportsuppliesservice_ts.feature_status = 'APPROVED'
group by
    service.airportsuppliesservice.id,
    service.airportsuppliesservice_ts.id,
    service.airportsuppliesservice_tsp.id,
    service.airportsuppliesservice.identifier,
    service.airportsuppliesservice_ts.interpretation,
    service.airportsuppliesservice_ts.sequence_number,
    service.airportsuppliesservice_ts.correction_number,
    service.airportsuppliesservice_ts.valid_time_begin,
    service.airportsuppliesservice_ts.valid_time_end,
    service.airportsuppliesservice_ts.feature_lifetime_begin,
    service.airportsuppliesservice_ts.feature_lifetime_end,
    service.airportsuppliesservice_ts.flightoperations_value,
    service.airportsuppliesservice_ts.flightoperations_nilreason,
    service.airportsuppliesservice_ts.rank_value,
    service.airportsuppliesservice_ts.rank_nilreason,
    service.airportsuppliesservice_ts.complianticao_value,
    service.airportsuppliesservice_ts.complianticao_nilreason,
    service.airportsuppliesservice_ts.name_value,
    service.airportsuppliesservice_ts.name_nilreason,
    organisation_unit_pt_xgoflg.title,
    organisation_unit_pt_xgoflg.nilreason,
    organisation_unit_pt_xgoflg.href
order by airportsuppliesservice.identifier, airportsuppliesservice_ts.sequence_number, airportsuppliesservice_ts.correction_number DESC;
create or replace view service.airtrafficcontrolservice_publisher_view as
select distinct on (airtrafficcontrolservice.identifier,airtrafficcontrolservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airtrafficcontrolservice.id,
    service.airtrafficcontrolservice_ts.id as ts_id,
    service.airtrafficcontrolservice_tsp.id as tsp_id,
    service.airtrafficcontrolservice.identifier,
    service.airtrafficcontrolservice_ts.interpretation,
    service.airtrafficcontrolservice_ts.sequence_number,
    service.airtrafficcontrolservice_ts.correction_number,
    service.airtrafficcontrolservice_ts.valid_time_begin,
    service.airtrafficcontrolservice_ts.valid_time_end,
    service.airtrafficcontrolservice_ts.feature_lifetime_begin,
    service.airtrafficcontrolservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.airtrafficcontrolservice_ts.flightoperations_value as varchar), '(' || service.airtrafficcontrolservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airtrafficcontrolservice_ts.rank_value as varchar), '(' || service.airtrafficcontrolservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airtrafficcontrolservice_ts.complianticao_value as varchar), '(' || service.airtrafficcontrolservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airtrafficcontrolservice_ts.name_value as varchar), '(' || service.airtrafficcontrolservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airtrafficcontrolservice_ts.radarassisted_value as varchar), '(' || service.airtrafficcontrolservice_ts.radarassisted_nilreason || ')') as radarassisted,
    coalesce(cast(service.airtrafficcontrolservice_ts.datalinkenabled_value as varchar), '(' || service.airtrafficcontrolservice_ts.datalinkenabled_nilreason || ')') as datalinkenabled,
    coalesce(cast(service.airtrafficcontrolservice_ts.datalinkchannel_value as varchar), '(' || service.airtrafficcontrolservice_ts.datalinkchannel_nilreason || ')') as datalinkchannel,
    coalesce(cast(service.airtrafficcontrolservice_ts.type_value as varchar), '(' || service.airtrafficcontrolservice_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_lebtre.title as varchar), '(' || organisation_unit_pt_lebtre.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_lebtre.href AS serviceprovider_href,
    coalesce(cast(navaids_points_directionfinder_pt_mrfvjv.title as varchar), '(' || navaids_points_directionfinder_pt_mrfvjv.nilreason[1] || ')') AS aircraftlocator,
    navaids_points_directionfinder_pt_mrfvjv.href AS aircraftlocator_href
from service.airtrafficcontrolservice 
inner join master_join mj2 on service.airtrafficcontrolservice.id = mj2.source_id
inner join service.airtrafficcontrolservice_tsp on mj2.target_id = service.airtrafficcontrolservice_tsp.id
inner join service.airtrafficcontrolservice_ts on service.airtrafficcontrolservice_tsp.airtrafficcontrolservicetimeslice_id = service.airtrafficcontrolservice_ts.id
left join master_join mj3 on service.airtrafficcontrolservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_lebtre on service.airtrafficcontrolservice_ts.serviceprovider_id = organisation_unit_pt_lebtre.id
left join navaids_points.directionfinder_pt navaids_points_directionfinder_pt_mrfvjv on service.airtrafficcontrolservice_ts.aircraftlocator_id = navaids_points_directionfinder_pt_mrfvjv.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many airport_heliport.airportheliport.clientairport - master_join
--feature many airspace.airspace.clientairspace - master_join
--object many routes.routeportion.clientroute - master_join
--feature many holding.holdingpattern.clientholding - master_join
--feature many aerial_refuelling.aerialrefuelling.clientaerialrefuelling - master_join
where service.airtrafficcontrolservice.feature_status = 'APPROVED'
  and service.airtrafficcontrolservice_ts.feature_status = 'APPROVED'
group by
    service.airtrafficcontrolservice.id,
    service.airtrafficcontrolservice_ts.id,
    service.airtrafficcontrolservice_tsp.id,
    service.airtrafficcontrolservice.identifier,
    service.airtrafficcontrolservice_ts.interpretation,
    service.airtrafficcontrolservice_ts.sequence_number,
    service.airtrafficcontrolservice_ts.correction_number,
    service.airtrafficcontrolservice_ts.valid_time_begin,
    service.airtrafficcontrolservice_ts.valid_time_end,
    service.airtrafficcontrolservice_ts.feature_lifetime_begin,
    service.airtrafficcontrolservice_ts.feature_lifetime_end,
    service.airtrafficcontrolservice_ts.flightoperations_value,
    service.airtrafficcontrolservice_ts.flightoperations_nilreason,
    service.airtrafficcontrolservice_ts.rank_value,
    service.airtrafficcontrolservice_ts.rank_nilreason,
    service.airtrafficcontrolservice_ts.complianticao_value,
    service.airtrafficcontrolservice_ts.complianticao_nilreason,
    service.airtrafficcontrolservice_ts.name_value,
    service.airtrafficcontrolservice_ts.name_nilreason,
    service.airtrafficcontrolservice_ts.radarassisted_value,
    service.airtrafficcontrolservice_ts.radarassisted_nilreason,
    service.airtrafficcontrolservice_ts.datalinkenabled_value,
    service.airtrafficcontrolservice_ts.datalinkenabled_nilreason,
    service.airtrafficcontrolservice_ts.datalinkchannel_value,
    service.airtrafficcontrolservice_ts.datalinkchannel_nilreason,
    service.airtrafficcontrolservice_ts.type_value,
    service.airtrafficcontrolservice_ts.type_nilreason,
    organisation_unit_pt_lebtre.title,
    organisation_unit_pt_lebtre.nilreason,
    organisation_unit_pt_lebtre.href,
    navaids_points_directionfinder_pt_mrfvjv.title,
    navaids_points_directionfinder_pt_mrfvjv.nilreason,
    navaids_points_directionfinder_pt_mrfvjv.href
order by airtrafficcontrolservice.identifier, airtrafficcontrolservice_ts.sequence_number, airtrafficcontrolservice_ts.correction_number DESC;
create or replace view service.informationservice_publisher_view as
select distinct on (informationservice.identifier,informationservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.informationservice.id,
    service.informationservice_ts.id as ts_id,
    service.informationservice_tsp.id as tsp_id,
    service.informationservice.identifier,
    service.informationservice_ts.interpretation,
    service.informationservice_ts.sequence_number,
    service.informationservice_ts.correction_number,
    service.informationservice_ts.valid_time_begin,
    service.informationservice_ts.valid_time_end,
    service.informationservice_ts.feature_lifetime_begin,
    service.informationservice_ts.feature_lifetime_end,
    jsonb_agg(notes.note_view.note) AS feature_annotation,
    coalesce(cast(service.informationservice_ts.flightoperations_value as varchar), '(' || service.informationservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.informationservice_ts.rank_value as varchar), '(' || service.informationservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.informationservice_ts.complianticao_value as varchar), '(' || service.informationservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.informationservice_ts.name_value as varchar), '(' || service.informationservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.informationservice_ts.type_value as varchar), '(' || service.informationservice_ts.type_nilreason || ')') as type,
    coalesce(cast(service.informationservice_ts.voice_value as varchar), '(' || service.informationservice_ts.voice_nilreason || ')') as voice,
    coalesce(cast(service.informationservice_ts.datalink_value as varchar), '(' || service.informationservice_ts.datalink_nilreason || ')') as datalink,
    coalesce(cast(service.informationservice_ts.recorded_value as varchar), '(' || service.informationservice_ts.recorded_nilreason || ')') as recorded,
    coalesce(cast(organisation_unit_pt_iacfoj.title as varchar), '(' || organisation_unit_pt_iacfoj.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_iacfoj.href AS serviceprovider_href
from service.informationservice 
inner join master_join mj2 on service.informationservice.id = mj2.source_id
inner join service.informationservice_tsp on mj2.target_id = service.informationservice_tsp.id
inner join service.informationservice_ts on service.informationservice_tsp.informationservicetimeslice_id = service.informationservice_ts.id
left join master_join mj3 on service.informationservice_ts.id = mj3.source_id
left join notes.note_view on mj3.target_id = notes.note_view.id
--snowflake one geometry.elevatedpoint.location - ElevatedPointPropertyType
left join organisation.unit_pt organisation_unit_pt_iacfoj on service.informationservice_ts.serviceprovider_id = organisation_unit_pt_iacfoj.id
--object many service.callsigndetail.callsign - master_join
--feature many service.radiocommunicationchannel.radiocommunication - master_join
--snowflake many .contactinformation.groundcommunication - ContactInformationPropertyType
--object many service.serviceoperationalstatus.availability - master_join
--snowflake many notes.note.annotation - NotePropertyType
--feature many navaids_points.vor.navaidbroadcast - master_join
--feature many airspace.airspace.clientairspace - master_join
--feature many airport_heliport.airportheliport.clientairport - master_join
--object many routes.routeportion.clientroute - master_join
--feature many holding.holdingpattern.clientholding - master_join
--feature many aerial_refuelling.aerialrefuelling.clientaerialrefuelling - master_join
where service.informationservice.feature_status = 'APPROVED'
  and service.informationservice_ts.feature_status = 'APPROVED'
group by
    service.informationservice.id,
    service.informationservice_ts.id,
    service.informationservice_tsp.id,
    service.informationservice.identifier,
    service.informationservice_ts.interpretation,
    service.informationservice_ts.sequence_number,
    service.informationservice_ts.correction_number,
    service.informationservice_ts.valid_time_begin,
    service.informationservice_ts.valid_time_end,
    service.informationservice_ts.feature_lifetime_begin,
    service.informationservice_ts.feature_lifetime_end,
    service.informationservice_ts.flightoperations_value,
    service.informationservice_ts.flightoperations_nilreason,
    service.informationservice_ts.rank_value,
    service.informationservice_ts.rank_nilreason,
    service.informationservice_ts.complianticao_value,
    service.informationservice_ts.complianticao_nilreason,
    service.informationservice_ts.name_value,
    service.informationservice_ts.name_nilreason,
    service.informationservice_ts.type_value,
    service.informationservice_ts.type_nilreason,
    service.informationservice_ts.voice_value,
    service.informationservice_ts.voice_nilreason,
    service.informationservice_ts.datalink_value,
    service.informationservice_ts.datalink_nilreason,
    service.informationservice_ts.recorded_value,
    service.informationservice_ts.recorded_nilreason,
    organisation_unit_pt_iacfoj.title,
    organisation_unit_pt_iacfoj.nilreason,
    organisation_unit_pt_iacfoj.href
order by informationservice.identifier, informationservice_ts.sequence_number, informationservice_ts.correction_number DESC;
create or replace view routes.directflightsegment_view as
select
    routes.directflightsegment_pt.id,
    jsonb_agg(notes.note_view.note) AS directflightsegment_annotation,
    routes.directflightsegment_pt.nilreason AS directflightsegment_annotation,
    coalesce(cast(navaids_points_designatedpoint_pt_ohnsto.title as varchar), '(' || navaids_points_designatedpoint_pt_ohnsto.nilreason[1] || ')') AS endfixdesignatedpoint,
    navaids_points_designatedpoint_pt_ohnsto.href AS endfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_nzqxqv.title as varchar), '(' || navaids_points_designatedpoint_pt_nzqxqv.nilreason[1] || ')') AS startfixdesignatedpoint,
    navaids_points_designatedpoint_pt_nzqxqv.href AS startfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_plyjfb.title as varchar), '(' || navaids_points_navaid_pt_plyjfb.nilreason[1] || ')') AS endnavaidsystem,
    navaids_points_navaid_pt_plyjfb.href AS endnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_yaawas.title as varchar), '(' || navaids_points_navaid_pt_yaawas.nilreason[1] || ')') AS startnavaidsystem,
    navaids_points_navaid_pt_yaawas.href AS startnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_cqmyyq.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_cqmyyq.nilreason[1] || ')') AS endaimingpoint,
    airport_heliport_touchdownliftoff_pt_cqmyyq.href AS endaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_bzukpe.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_bzukpe.nilreason[1] || ')') AS startaimingpoint,
    airport_heliport_touchdownliftoff_pt_bzukpe.href AS startaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_trxsfy.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_trxsfy.nilreason[1] || ')') AS endrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_trxsfy.href AS endrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_aysmbz.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_aysmbz.nilreason[1] || ')') AS startrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_aysmbz.href AS startrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ouvaho.title as varchar), '(' || airport_heliport_airportheliport_pt_ouvaho.nilreason[1] || ')') AS endairportreferencepoint,
    airport_heliport_airportheliport_pt_ouvaho.href AS endairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_chylss.title as varchar), '(' || airport_heliport_airportheliport_pt_chylss.nilreason[1] || ')') AS startairportreferencepoint,
    airport_heliport_airportheliport_pt_chylss.href AS startairportreferencepoint_href
from routes.directflightsegment_pt 
inner join routes.directflightsegment on routes.directflightsegment_pt.directflightsegment_id = routes.directflightsegment.id
left join master_join mj1 on routes.directflightsegment.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ohnsto on routes.directflightsegment_ts.end_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ohnsto.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_plyjfb on routes.directflightsegment_ts.end_navaidsystem_id = navaids_points_navaid_pt_plyjfb.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_cqmyyq on routes.directflightsegment_ts.end_aimingpoint_id = airport_heliport_touchdownliftoff_pt_cqmyyq.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_trxsfy on routes.directflightsegment_ts.end_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_trxsfy.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ouvaho on routes.directflightsegment_ts.end_airportreferencepoint_id = airport_heliport_airportheliport_pt_ouvaho.id
--snowflake one geometry.point.endposition - PointPropertyType
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_nzqxqv on routes.directflightsegment_ts.start_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_nzqxqv.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_yaawas on routes.directflightsegment_ts.start_navaidsystem_id = navaids_points_navaid_pt_yaawas.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_bzukpe on routes.directflightsegment_ts.start_aimingpoint_id = airport_heliport_touchdownliftoff_pt_bzukpe.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_aysmbz on routes.directflightsegment_ts.start_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_aysmbz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_chylss on routes.directflightsegment_ts.start_airportreferencepoint_id = airport_heliport_airportheliport_pt_chylss.id
--snowflake one geometry.point.startposition - PointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.directflightsegment_pt.id,
    routes.directflightsegment_pt.nilreason,
    navaids_points_designatedpoint_pt_ohnsto.title,
    navaids_points_designatedpoint_pt_ohnsto.nilreason,
    navaids_points_designatedpoint_pt_ohnsto.href,
    navaids_points_navaid_pt_plyjfb.title,
    navaids_points_navaid_pt_plyjfb.nilreason,
    navaids_points_navaid_pt_plyjfb.href,
    airport_heliport_touchdownliftoff_pt_cqmyyq.title,
    airport_heliport_touchdownliftoff_pt_cqmyyq.nilreason,
    airport_heliport_touchdownliftoff_pt_cqmyyq.href,
    airport_heliport_runwaycentrelinepoint_pt_trxsfy.title,
    airport_heliport_runwaycentrelinepoint_pt_trxsfy.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_trxsfy.href,
    airport_heliport_airportheliport_pt_ouvaho.title,
    airport_heliport_airportheliport_pt_ouvaho.nilreason,
    airport_heliport_airportheliport_pt_ouvaho.href,
    navaids_points_designatedpoint_pt_nzqxqv.title,
    navaids_points_designatedpoint_pt_nzqxqv.nilreason,
    navaids_points_designatedpoint_pt_nzqxqv.href,
    navaids_points_navaid_pt_yaawas.title,
    navaids_points_navaid_pt_yaawas.nilreason,
    navaids_points_navaid_pt_yaawas.href,
    airport_heliport_touchdownliftoff_pt_bzukpe.title,
    airport_heliport_touchdownliftoff_pt_bzukpe.nilreason,
    airport_heliport_touchdownliftoff_pt_bzukpe.href,
    airport_heliport_runwaycentrelinepoint_pt_aysmbz.title,
    airport_heliport_runwaycentrelinepoint_pt_aysmbz.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_aysmbz.href,
    airport_heliport_airportheliport_pt_chylss.title,
    airport_heliport_airportheliport_pt_chylss.nilreason,
    airport_heliport_airportheliport_pt_chylss.href;
create or replace view routes.flightroutingelement_view as
select
    routes.flightroutingelement_pt.id,
    jsonb_agg(notes.note_view.note) AS flightroutingelement_annotation,
    routes.flightroutingelement_pt.nilreason AS flightroutingelement_annotation,
    coalesce(cast(routes.flightroutingelement.ordernumber_value as varchar), '(' || routes.flightroutingelement.ordernumber_nilreason || ')') as ordernumber,
    coalesce(cast(routes.flightroutingelement.speedreference_value as varchar), '(' || routes.flightroutingelement.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(routes.flightroutingelement.speedcriteria_value as varchar), '(' || routes.flightroutingelement.speedcriteria_nilreason || ')') as speedcriteria,
    coalesce(cast(routes.flightroutingelement.speed_value as varchar) || ' ' || routes.flightroutingelement.speed_uom, '(' || routes.flightroutingelement.speed_nilreason || ')') as speed,
    coalesce(cast(procedure_standardinstrumentarrival_pt_uixsol.title as varchar), '(' || procedure_standardinstrumentarrival_pt_uixsol.nilreason[1] || ')') AS elementstandardinstrumentarrivalelement,
    procedure_standardinstrumentarrival_pt_uixsol.href AS elementstandardinstrumentarrivalelement_href,
    coalesce(cast(airspace_airspace_pt_xrptvc.title as varchar), '(' || airspace_airspace_pt_xrptvc.nilreason[1] || ')') AS elementairspaceelement,
    airspace_airspace_pt_xrptvc.href AS elementairspaceelement_href,
    coalesce(cast(navaids_points_designatedpoint_pt_cuahxj.title as varchar), '(' || navaids_points_designatedpoint_pt_cuahxj.nilreason[1] || ')') AS pointelementfixdesignatedpoint,
    navaids_points_designatedpoint_pt_cuahxj.href AS pointelementfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_okbmvi.title as varchar), '(' || navaids_points_navaid_pt_okbmvi.nilreason[1] || ')') AS pointelementnavaidsystem,
    navaids_points_navaid_pt_okbmvi.href AS pointelementnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_zmrszb.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_zmrszb.nilreason[1] || ')') AS pointelementaimingpoint,
    airport_heliport_touchdownliftoff_pt_zmrszb.href AS pointelementaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_rkhrzz.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_rkhrzz.nilreason[1] || ')') AS pointelementrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_rkhrzz.href AS pointelementrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_slyegc.title as varchar), '(' || airport_heliport_airportheliport_pt_slyegc.nilreason[1] || ')') AS pointelementairportreferencepoint,
    airport_heliport_airportheliport_pt_slyegc.href AS pointelementairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ceiuwu.title as varchar), '(' || airport_heliport_airportheliport_pt_ceiuwu.nilreason[1] || ')') AS elementairportheliportelement,
    airport_heliport_airportheliport_pt_ceiuwu.href AS elementairportheliportelement_href,
    routes_directflightsegment_pt_eqymjr.id AS elementdirectflightelement,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_cvezbt.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_cvezbt.nilreason[1] || ')') AS elementstandardinstrumentdepartureelement,
    procedure_standardinstrumentdeparture_pt_cvezbt.href AS elementstandardinstrumentdepartureelement_href,
    routes_routeportion_pt_nsnuxo.id AS elementrouteportionelement,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_ibfxsn.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_ibfxsn.nilreason[1] || ')') AS elementaerialrefuellingelement,
    aerial_refuelling_aerialrefuelling_pt_ibfxsn.href AS elementaerialrefuellingelement_href,
    jsonb_agg(routes_flightrestrictionlevel_view_dsnydm.id) AS flightlevel
from routes.flightroutingelement_pt 
inner join routes.flightroutingelement on routes.flightroutingelement_pt.flightroutingelement_id = routes.flightroutingelement.id
left join master_join mj1 on routes.flightroutingelement.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_uixsol on routes.flightroutingelement_ts.element_standardinstrumentarrivalelement_id = procedure_standardinstrumentarrival_pt_uixsol.id
left join airspace.airspace_pt airspace_airspace_pt_xrptvc on routes.flightroutingelement_ts.element_airspaceelement_id = airspace_airspace_pt_xrptvc.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_cuahxj on routes.flightroutingelement_ts.pointelement_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_cuahxj.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_okbmvi on routes.flightroutingelement_ts.pointelement_navaidsystem_id = navaids_points_navaid_pt_okbmvi.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_zmrszb on routes.flightroutingelement_ts.pointelement_aimingpoint_id = airport_heliport_touchdownliftoff_pt_zmrszb.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_rkhrzz on routes.flightroutingelement_ts.pointelement_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_rkhrzz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_slyegc on routes.flightroutingelement_ts.pointelement_airportreferencepoint_id = airport_heliport_airportheliport_pt_slyegc.id
--snowflake one geometry.point.pointelementposition - PointPropertyType
left join routes.directflightsegment_pt routes_directflightsegment_pt_eqymjr on routes.flightroutingelement.element_directflightelement_id = routes_directflightsegment_pt_eqymjr.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_cvezbt on routes.flightroutingelement_ts.element_standardinstrumentdepartureelement_id = procedure_standardinstrumentdeparture_pt_cvezbt.id
left join routes.routeportion_pt routes_routeportion_pt_nsnuxo on routes.flightroutingelement.element_routeportionelement_id = routes_routeportion_pt_nsnuxo.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ceiuwu on routes.flightroutingelement_ts.element_airportheliportelement_id = airport_heliport_airportheliport_pt_ceiuwu.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_ibfxsn on routes.flightroutingelement_ts.element_aerialrefuellingelement_id = aerial_refuelling_aerialrefuelling_pt_ibfxsn.id
left join master_join master_join_doralq on routes.flightroutingelement.id = master_join_doralq.source_id
left join routes.flightrestrictionlevel_view routes_flightrestrictionlevel_view_dsnydm on master_join_doralq.target_id = routes_flightrestrictionlevel_view_dsnydm.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.flightroutingelement_pt.id,
    routes.flightroutingelement_pt.nilreason,
    routes.flightroutingelement.ordernumber_value,
    routes.flightroutingelement.ordernumber_nilreason,
    routes.flightroutingelement.speedreference_value,
    routes.flightroutingelement.speedreference_nilreason,
    routes.flightroutingelement.speedcriteria_value,
    routes.flightroutingelement.speedcriteria_nilreason,
    routes.flightroutingelement.speed_value,
    routes.flightroutingelement.speed_uom,
    routes.flightroutingelement.speed_nilreason,
    procedure_standardinstrumentarrival_pt_uixsol.title,
    procedure_standardinstrumentarrival_pt_uixsol.nilreason,
    procedure_standardinstrumentarrival_pt_uixsol.href,
    airspace_airspace_pt_xrptvc.title,
    airspace_airspace_pt_xrptvc.nilreason,
    airspace_airspace_pt_xrptvc.href,
    navaids_points_designatedpoint_pt_cuahxj.title,
    navaids_points_designatedpoint_pt_cuahxj.nilreason,
    navaids_points_designatedpoint_pt_cuahxj.href,
    navaids_points_navaid_pt_okbmvi.title,
    navaids_points_navaid_pt_okbmvi.nilreason,
    navaids_points_navaid_pt_okbmvi.href,
    airport_heliport_touchdownliftoff_pt_zmrszb.title,
    airport_heliport_touchdownliftoff_pt_zmrszb.nilreason,
    airport_heliport_touchdownliftoff_pt_zmrszb.href,
    airport_heliport_runwaycentrelinepoint_pt_rkhrzz.title,
    airport_heliport_runwaycentrelinepoint_pt_rkhrzz.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_rkhrzz.href,
    airport_heliport_airportheliport_pt_slyegc.title,
    airport_heliport_airportheliport_pt_slyegc.nilreason,
    airport_heliport_airportheliport_pt_slyegc.href,
    procedure_standardinstrumentdeparture_pt_cvezbt.title,
    procedure_standardinstrumentdeparture_pt_cvezbt.nilreason,
    procedure_standardinstrumentdeparture_pt_cvezbt.href,
    airport_heliport_airportheliport_pt_ceiuwu.title,
    airport_heliport_airportheliport_pt_ceiuwu.nilreason,
    airport_heliport_airportheliport_pt_ceiuwu.href,
    aerial_refuelling_aerialrefuelling_pt_ibfxsn.title,
    aerial_refuelling_aerialrefuelling_pt_ibfxsn.nilreason,
    aerial_refuelling_aerialrefuelling_pt_ibfxsn.href;
create or replace view routes.routeportion_view as
select
    routes.routeportion_pt.id,
    jsonb_agg(notes.note_view.note) AS routeportion_annotation,
    routes.routeportion_pt.nilreason AS routeportion_annotation,
    coalesce(cast(navaids_points_designatedpoint_pt_gpvzro.title as varchar), '(' || navaids_points_designatedpoint_pt_gpvzro.nilreason[1] || ')') AS startfixdesignatedpoint,
    navaids_points_designatedpoint_pt_gpvzro.href AS startfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_kbctvd.title as varchar), '(' || navaids_points_designatedpoint_pt_kbctvd.nilreason[1] || ')') AS intermediatepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_kbctvd.href AS intermediatepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_qsqiht.title as varchar), '(' || navaids_points_designatedpoint_pt_qsqiht.nilreason[1] || ')') AS endfixdesignatedpoint,
    navaids_points_designatedpoint_pt_qsqiht.href AS endfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ygcjbh.title as varchar), '(' || navaids_points_navaid_pt_ygcjbh.nilreason[1] || ')') AS startnavaidsystem,
    navaids_points_navaid_pt_ygcjbh.href AS startnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_pdtlic.title as varchar), '(' || navaids_points_navaid_pt_pdtlic.nilreason[1] || ')') AS intermediatepointnavaidsystem,
    navaids_points_navaid_pt_pdtlic.href AS intermediatepointnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_ywtzgo.title as varchar), '(' || navaids_points_navaid_pt_ywtzgo.nilreason[1] || ')') AS endnavaidsystem,
    navaids_points_navaid_pt_ywtzgo.href AS endnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_wbuqvg.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_wbuqvg.nilreason[1] || ')') AS startaimingpoint,
    airport_heliport_touchdownliftoff_pt_wbuqvg.href AS startaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ktyowb.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ktyowb.nilreason[1] || ')') AS intermediatepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_ktyowb.href AS intermediatepointaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_frmhyl.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_frmhyl.nilreason[1] || ')') AS endaimingpoint,
    airport_heliport_touchdownliftoff_pt_frmhyl.href AS endaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_lekdtf.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_lekdtf.nilreason[1] || ')') AS startrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_lekdtf.href AS startrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_mcnopm.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_mcnopm.nilreason[1] || ')') AS intermediatepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_mcnopm.href AS intermediatepointrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_nwkref.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_nwkref.nilreason[1] || ')') AS endrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_nwkref.href AS endrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_mottpp.title as varchar), '(' || airport_heliport_airportheliport_pt_mottpp.nilreason[1] || ')') AS startairportreferencepoint,
    airport_heliport_airportheliport_pt_mottpp.href AS startairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ecuvhi.title as varchar), '(' || airport_heliport_airportheliport_pt_ecuvhi.nilreason[1] || ')') AS intermediatepointairportreferencepoint,
    airport_heliport_airportheliport_pt_ecuvhi.href AS intermediatepointairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_inlavh.title as varchar), '(' || airport_heliport_airportheliport_pt_inlavh.nilreason[1] || ')') AS endairportreferencepoint,
    airport_heliport_airportheliport_pt_inlavh.href AS endairportreferencepoint_href,
    coalesce(cast(routes_route_pt_rzwadk.title as varchar), '(' || routes_route_pt_rzwadk.nilreason[1] || ')') AS referencedroute,
    routes_route_pt_rzwadk.href AS referencedroute_href
from routes.routeportion_pt 
inner join routes.routeportion on routes.routeportion_pt.routeportion_id = routes.routeportion.id
left join master_join mj1 on routes.routeportion.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_gpvzro on routes.routeportion_ts.start_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_gpvzro.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ygcjbh on routes.routeportion_ts.start_navaidsystem_id = navaids_points_navaid_pt_ygcjbh.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_wbuqvg on routes.routeportion_ts.start_aimingpoint_id = airport_heliport_touchdownliftoff_pt_wbuqvg.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_lekdtf on routes.routeportion_ts.start_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_lekdtf.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_mottpp on routes.routeportion_ts.start_airportreferencepoint_id = airport_heliport_airportheliport_pt_mottpp.id
--snowflake one geometry.point.startposition - PointPropertyType
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_kbctvd on routes.routeportion_ts.intermediatepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_kbctvd.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_pdtlic on routes.routeportion_ts.intermediatepoint_navaidsystem_id = navaids_points_navaid_pt_pdtlic.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ktyowb on routes.routeportion_ts.intermediatepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_ktyowb.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_mcnopm on routes.routeportion_ts.intermediatepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_mcnopm.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ecuvhi on routes.routeportion_ts.intermediatepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_ecuvhi.id
--snowflake one geometry.point.intermediatepointposition - PointPropertyType
left join routes.route_pt routes_route_pt_rzwadk on routes.routeportion_ts.referencedroute_id = routes_route_pt_rzwadk.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_qsqiht on routes.routeportion_ts.end_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_qsqiht.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ywtzgo on routes.routeportion_ts.end_navaidsystem_id = navaids_points_navaid_pt_ywtzgo.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_frmhyl on routes.routeportion_ts.end_aimingpoint_id = airport_heliport_touchdownliftoff_pt_frmhyl.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_nwkref on routes.routeportion_ts.end_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_nwkref.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_inlavh on routes.routeportion_ts.end_airportreferencepoint_id = airport_heliport_airportheliport_pt_inlavh.id
--snowflake one geometry.point.endposition - PointPropertyType
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.routeportion_pt.id,
    routes.routeportion_pt.nilreason,
    navaids_points_designatedpoint_pt_gpvzro.title,
    navaids_points_designatedpoint_pt_gpvzro.nilreason,
    navaids_points_designatedpoint_pt_gpvzro.href,
    navaids_points_navaid_pt_ygcjbh.title,
    navaids_points_navaid_pt_ygcjbh.nilreason,
    navaids_points_navaid_pt_ygcjbh.href,
    airport_heliport_touchdownliftoff_pt_wbuqvg.title,
    airport_heliport_touchdownliftoff_pt_wbuqvg.nilreason,
    airport_heliport_touchdownliftoff_pt_wbuqvg.href,
    airport_heliport_runwaycentrelinepoint_pt_lekdtf.title,
    airport_heliport_runwaycentrelinepoint_pt_lekdtf.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_lekdtf.href,
    airport_heliport_airportheliport_pt_mottpp.title,
    airport_heliport_airportheliport_pt_mottpp.nilreason,
    airport_heliport_airportheliport_pt_mottpp.href,
    navaids_points_designatedpoint_pt_kbctvd.title,
    navaids_points_designatedpoint_pt_kbctvd.nilreason,
    navaids_points_designatedpoint_pt_kbctvd.href,
    navaids_points_navaid_pt_pdtlic.title,
    navaids_points_navaid_pt_pdtlic.nilreason,
    navaids_points_navaid_pt_pdtlic.href,
    airport_heliport_touchdownliftoff_pt_ktyowb.title,
    airport_heliport_touchdownliftoff_pt_ktyowb.nilreason,
    airport_heliport_touchdownliftoff_pt_ktyowb.href,
    airport_heliport_runwaycentrelinepoint_pt_mcnopm.title,
    airport_heliport_runwaycentrelinepoint_pt_mcnopm.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_mcnopm.href,
    airport_heliport_airportheliport_pt_ecuvhi.title,
    airport_heliport_airportheliport_pt_ecuvhi.nilreason,
    airport_heliport_airportheliport_pt_ecuvhi.href,
    routes_route_pt_rzwadk.title,
    routes_route_pt_rzwadk.nilreason,
    routes_route_pt_rzwadk.href,
    navaids_points_designatedpoint_pt_qsqiht.title,
    navaids_points_designatedpoint_pt_qsqiht.nilreason,
    navaids_points_designatedpoint_pt_qsqiht.href,
    navaids_points_navaid_pt_ywtzgo.title,
    navaids_points_navaid_pt_ywtzgo.nilreason,
    navaids_points_navaid_pt_ywtzgo.href,
    airport_heliport_touchdownliftoff_pt_frmhyl.title,
    airport_heliport_touchdownliftoff_pt_frmhyl.nilreason,
    airport_heliport_touchdownliftoff_pt_frmhyl.href,
    airport_heliport_runwaycentrelinepoint_pt_nwkref.title,
    airport_heliport_runwaycentrelinepoint_pt_nwkref.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_nwkref.href,
    airport_heliport_airportheliport_pt_inlavh.title,
    airport_heliport_airportheliport_pt_inlavh.nilreason,
    airport_heliport_airportheliport_pt_inlavh.href;
create or replace view routes.flightconditionelement_view as
select
    routes.flightconditionelement_pt.id,
    jsonb_agg(notes.note_view.note) AS flightconditionelement_annotation,
    routes.flightconditionelement_pt.nilreason AS flightconditionelement_annotation,
    coalesce(cast(routes.flightconditionelement.index_value as varchar), '(' || routes.flightconditionelement.index_nilreason || ')') as index,
    coalesce(cast(airport_heliport_airportheliport_pt_pnzwpl.title as varchar), '(' || airport_heliport_airportheliport_pt_pnzwpl.nilreason[1] || ')') AS flightconditionairportheliportcondition,
    airport_heliport_airportheliport_pt_pnzwpl.href AS flightconditionairportheliportcondition_href,
    coalesce(cast(airport_heliport_airportheliport_pt_gjfruw.title as varchar), '(' || airport_heliport_airportheliport_pt_gjfruw.nilreason[1] || ')') AS significantpointconditionairportreferencepoint,
    airport_heliport_airportheliport_pt_gjfruw.href AS significantpointconditionairportreferencepoint_href,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_pdkkaf.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_pdkkaf.nilreason[1] || ')') AS flightconditionstandardinstrumentdeparturecondition,
    procedure_standardinstrumentdeparture_pt_pdkkaf.href AS flightconditionstandardinstrumentdeparturecondition_href,
    routes_routeportion_pt_dgbqww.id AS flightconditionrouteportioncondition,
    coalesce(cast(navaids_points_designatedpoint_pt_bouyot.title as varchar), '(' || navaids_points_designatedpoint_pt_bouyot.nilreason[1] || ')') AS significantpointconditionfixdesignatedpoint,
    navaids_points_designatedpoint_pt_bouyot.href AS significantpointconditionfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ogdwjs.title as varchar), '(' || navaids_points_navaid_pt_ogdwjs.nilreason[1] || ')') AS significantpointconditionnavaidsystem,
    navaids_points_navaid_pt_ogdwjs.href AS significantpointconditionnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_mgfdlj.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_mgfdlj.nilreason[1] || ')') AS significantpointconditionaimingpoint,
    airport_heliport_touchdownliftoff_pt_mgfdlj.href AS significantpointconditionaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_iemmds.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_iemmds.nilreason[1] || ')') AS significantpointconditionrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_iemmds.href AS significantpointconditionrunwaypoint_href,
    routes_directflight_pt_apwrdi.id AS flightconditiondirectflightcondition,
    shared_aircraftcharacteristic_pt_xheeta.id AS flightconditionaircraft,
    coalesce(cast(routes_airspacebordercrossing_pt_zprwwe.title as varchar), '(' || routes_airspacebordercrossing_pt_zprwwe.nilreason[1] || ')') AS flightconditionbordercrossingcondition,
    routes_airspacebordercrossing_pt_zprwwe.href AS flightconditionbordercrossingcondition_href,
    coalesce(cast(airspace_airspace_pt_xbgmru.title as varchar), '(' || airspace_airspace_pt_xbgmru.nilreason[1] || ')') AS flightconditionairspacecondition,
    airspace_airspace_pt_xbgmru.href AS flightconditionairspacecondition_href,
    shared_flightcharacteristic_pt_eepijy.id AS flightconditionflight,
    coalesce(cast(procedure_standardinstrumentarrival_pt_sdbkhj.title as varchar), '(' || procedure_standardinstrumentarrival_pt_sdbkhj.nilreason[1] || ')') AS flightconditionstandardinstrumentarrivalcondition,
    procedure_standardinstrumentarrival_pt_sdbkhj.href AS flightconditionstandardinstrumentarrivalcondition_href,
    routes_flightconditioncombination_pt_kvminl.id AS flightconditionoperand,
    shared_meteorology_pt_xqciny.id AS flightconditionweather,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_qeoqux.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_qeoqux.nilreason[1] || ')') AS flightconditionaerialrefuellingcondition,
    aerial_refuelling_aerialrefuelling_pt_qeoqux.href AS flightconditionaerialrefuellingcondition_href,
    routes_flightconditioncircumstance_pt_zwlmwf.id AS operationalcondition,
    jsonb_agg(routes_flightrestrictionlevel_view_qdfeaf.id) AS flightlevel
from routes.flightconditionelement_pt 
inner join routes.flightconditionelement on routes.flightconditionelement_pt.flightconditionelement_id = routes.flightconditionelement.id
left join master_join mj1 on routes.flightconditionelement.id = mj1.source_id
left join notes.note_view on mj1.target_id = notes.note_view.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pnzwpl on routes.flightconditionelement_ts.flightcondition_airportheliportcondition_id = airport_heliport_airportheliport_pt_pnzwpl.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_pdkkaf on routes.flightconditionelement_ts.flightcondition_standardinstrumentdeparturecondition_id = procedure_standardinstrumentdeparture_pt_pdkkaf.id
left join routes.routeportion_pt routes_routeportion_pt_dgbqww on routes.flightconditionelement.flightcondition_routeportioncondition_id = routes_routeportion_pt_dgbqww.id
--snowflake one .organisationauthority.flightconditionorganisationcondition - OrganisationAuthorityPropertyType
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_bouyot on routes.flightconditionelement_ts.significantpointcondition_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_bouyot.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ogdwjs on routes.flightconditionelement_ts.significantpointcondition_navaidsystem_id = navaids_points_navaid_pt_ogdwjs.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_mgfdlj on routes.flightconditionelement_ts.significantpointcondition_aimingpoint_id = airport_heliport_touchdownliftoff_pt_mgfdlj.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_iemmds on routes.flightconditionelement_ts.significantpointcondition_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_iemmds.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_gjfruw on routes.flightconditionelement_ts.significantpointcondition_airportreferencepoint_id = airport_heliport_airportheliport_pt_gjfruw.id
--snowflake one geometry.point.significantpointconditionposition - PointPropertyType
left join routes.directflight_pt routes_directflight_pt_apwrdi on routes.flightconditionelement.flightcondition_directflightcondition_id = routes_directflight_pt_apwrdi.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_xheeta on routes.flightconditionelement.flightcondition_aircraft_id = shared_aircraftcharacteristic_pt_xheeta.id
left join routes.airspacebordercrossing_pt routes_airspacebordercrossing_pt_zprwwe on routes.flightconditionelement_ts.flightcondition_bordercrossingcondition_id = routes_airspacebordercrossing_pt_zprwwe.id
left join airspace.airspace_pt airspace_airspace_pt_xbgmru on routes.flightconditionelement_ts.flightcondition_airspacecondition_id = airspace_airspace_pt_xbgmru.id
left join shared.flightcharacteristic_pt shared_flightcharacteristic_pt_eepijy on routes.flightconditionelement.flightcondition_flight_id = shared_flightcharacteristic_pt_eepijy.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_sdbkhj on routes.flightconditionelement_ts.flightcondition_standardinstrumentarrivalcondition_id = procedure_standardinstrumentarrival_pt_sdbkhj.id
left join routes.flightconditioncombination_pt routes_flightconditioncombination_pt_kvminl on routes.flightconditionelement.flightcondition_operand_id = routes_flightconditioncombination_pt_kvminl.id
left join shared.meteorology_pt shared_meteorology_pt_xqciny on routes.flightconditionelement.flightcondition_weather_id = shared_meteorology_pt_xqciny.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_qeoqux on routes.flightconditionelement_ts.flightcondition_aerialrefuellingcondition_id = aerial_refuelling_aerialrefuelling_pt_qeoqux.id
left join routes.flightconditioncircumstance_pt routes_flightconditioncircumstance_pt_zwlmwf on routes.flightconditionelement.operationalcondition_id = routes_flightconditioncircumstance_pt_zwlmwf.id
left join master_join master_join_awfycv on routes.flightconditionelement.id = master_join_awfycv.source_id
left join routes.flightrestrictionlevel_view routes_flightrestrictionlevel_view_qdfeaf on master_join_awfycv.target_id = routes_flightrestrictionlevel_view_qdfeaf.id
--snowflake many notes.note.annotation - NotePropertyType
group by
    routes.flightconditionelement_pt.id,
    routes.flightconditionelement_pt.nilreason,
    routes.flightconditionelement.index_value,
    routes.flightconditionelement.index_nilreason,
    airport_heliport_airportheliport_pt_pnzwpl.title,
    airport_heliport_airportheliport_pt_pnzwpl.nilreason,
    airport_heliport_airportheliport_pt_pnzwpl.href,
    procedure_standardinstrumentdeparture_pt_pdkkaf.title,
    procedure_standardinstrumentdeparture_pt_pdkkaf.nilreason,
    procedure_standardinstrumentdeparture_pt_pdkkaf.href,
    navaids_points_designatedpoint_pt_bouyot.title,
    navaids_points_designatedpoint_pt_bouyot.nilreason,
    navaids_points_designatedpoint_pt_bouyot.href,
    navaids_points_navaid_pt_ogdwjs.title,
    navaids_points_navaid_pt_ogdwjs.nilreason,
    navaids_points_navaid_pt_ogdwjs.href,
    airport_heliport_touchdownliftoff_pt_mgfdlj.title,
    airport_heliport_touchdownliftoff_pt_mgfdlj.nilreason,
    airport_heliport_touchdownliftoff_pt_mgfdlj.href,
    airport_heliport_runwaycentrelinepoint_pt_iemmds.title,
    airport_heliport_runwaycentrelinepoint_pt_iemmds.nilreason,
    airport_heliport_runwaycentrelinepoint_pt_iemmds.href,
    airport_heliport_airportheliport_pt_gjfruw.title,
    airport_heliport_airportheliport_pt_gjfruw.nilreason,
    airport_heliport_airportheliport_pt_gjfruw.href,
    routes_airspacebordercrossing_pt_zprwwe.title,
    routes_airspacebordercrossing_pt_zprwwe.nilreason,
    routes_airspacebordercrossing_pt_zprwwe.href,
    airspace_airspace_pt_xbgmru.title,
    airspace_airspace_pt_xbgmru.nilreason,
    airspace_airspace_pt_xbgmru.href,
    procedure_standardinstrumentarrival_pt_sdbkhj.title,
    procedure_standardinstrumentarrival_pt_sdbkhj.nilreason,
    procedure_standardinstrumentarrival_pt_sdbkhj.href,
    aerial_refuelling_aerialrefuelling_pt_qeoqux.title,
    aerial_refuelling_aerialrefuelling_pt_qeoqux.nilreason,
    aerial_refuelling_aerialrefuelling_pt_qeoqux.href;