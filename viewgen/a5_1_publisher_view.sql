-- LinguisticNotePropertyType
-- []
-- Snowflake SQL : LinguisticNotePropertyType 

CREATE INDEX ON notes.linguisticnote_pt (linguisticnote_id);
CREATE INDEX ON notes.linguisticnote (id);

DROP MATERIALIZED VIEW IF EXISTS notes.linguisticnote_view CASCADE;

CREATE MATERIALIZED VIEW notes.linguisticnote_view AS
SELECT 
    notes.linguisticnote_pt.id,
    notes.linguisticnote.note_lang AS lang,
    COALESCE(notes.linguisticnote.note_value, '('|| notes.linguisticnote.note_nilreason ||')') AS note
FROM notes.linguisticnote_pt
INNER JOIN notes.linguisticnote ON notes.linguisticnote_pt.linguisticnote_id = notes.linguisticnote.id;

CREATE INDEX ON notes.linguisticnote_view (id);
-- NotePropertyType
-- ['notes.linguisticnote_view']
-- Snowflake SQL : NotePropertyType 

CREATE INDEX ON notes.note_pt (note_id);
CREATE INDEX ON notes.note (id);

DROP MATERIALIZED VIEW IF EXISTS notes.note_view CASCADE;

CREATE MATERIALIZED VIEW notes.note_view AS
SELECT
    notes.note_pt.id,
    jsonb_build_object(
        'propertyName', COALESCE(notes.note.propertyname_value, '(' || notes.note.propertyname_nilreason || ')'),
        'purpose', COALESCE(notes.note.purpose_value, '(' || notes.note.purpose_nilreason || ')'),
        'notes', translated_notes.notes_array
    ) AS note
FROM notes.note_pt
INNER JOIN notes.note ON notes.note_pt.note_id = notes.note.id
LEFT JOIN LATERAL (
    SELECT jsonb_agg(
        jsonb_build_object(
            'id', notes.linguisticnote_view.id,
            'lang', notes.linguisticnote_view.lang,
            'note', notes.linguisticnote_view.note
        )
    ) AS notes_array
    FROM master_join
    JOIN notes.linguisticnote_view ON master_join.target_id = notes.linguisticnote_view.id
    WHERE master_join.source_id = notes.note.id
) AS translated_notes ON true;

CREATE INDEX ON notes.note_view (id);
-- AircraftCharacteristicPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.aircraftcharacteristic_view cascade;
create materialized view shared.aircraftcharacteristic_view as
select
    shared.aircraftcharacteristic_pt.id,
    shared.aircraftcharacteristic_pt.nilreason AS aircraftcharacteristic_nilreason,
    coalesce(cast(shared.aircraftcharacteristic.type_value as varchar), '(' || shared.aircraftcharacteristic.type_nilreason || ')') as type,
    coalesce(cast(shared.aircraftcharacteristic.engine_value as varchar), '(' || shared.aircraftcharacteristic.engine_nilreason || ')') as engine,
    coalesce(cast(shared.aircraftcharacteristic.numberengine_value as varchar), '(' || shared.aircraftcharacteristic.numberengine_nilreason || ')') as numberengine,
    coalesce(cast(shared.aircraftcharacteristic.typeaircrafticao_value as varchar), '(' || shared.aircraftcharacteristic.typeaircrafticao_nilreason || ')') as typeaircrafticao,
    coalesce(cast(shared.aircraftcharacteristic.aircraftlandingcategory_value as varchar), '(' || shared.aircraftcharacteristic.aircraftlandingcategory_nilreason || ')') as aircraftlandingcategory,
    coalesce(cast(shared.aircraftcharacteristic.wingspaninterpretation_value as varchar), '(' || shared.aircraftcharacteristic.wingspaninterpretation_nilreason || ')') as wingspaninterpretation,
    coalesce(cast(shared.aircraftcharacteristic.classwingspan_value as varchar), '(' || shared.aircraftcharacteristic.classwingspan_nilreason || ')') as classwingspan,
    coalesce(cast(shared.aircraftcharacteristic.weightinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.weightinterpretation_nilreason || ')') as weightinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.passengers_value as varchar), '(' || shared.aircraftcharacteristic.passengers_nilreason || ')') as passengers,
    coalesce(cast(shared.aircraftcharacteristic.passengersinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.passengersinterpretation_nilreason || ')') as passengersinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.speedinterpretation_value as varchar), '(' || shared.aircraftcharacteristic.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(shared.aircraftcharacteristic.waketurbulence_value as varchar), '(' || shared.aircraftcharacteristic.waketurbulence_nilreason || ')') as waketurbulence,
    coalesce(cast(shared.aircraftcharacteristic.navigationequipment_value as varchar), '(' || shared.aircraftcharacteristic.navigationequipment_nilreason || ')') as navigationequipment,
    coalesce(cast(shared.aircraftcharacteristic.navigationspecification_value as varchar), '(' || shared.aircraftcharacteristic.navigationspecification_nilreason || ')') as navigationspecification,
    coalesce(cast(shared.aircraftcharacteristic.verticalseparationcapability_value as varchar), '(' || shared.aircraftcharacteristic.verticalseparationcapability_nilreason || ')') as verticalseparationcapability,
    coalesce(cast(shared.aircraftcharacteristic.anticollisionandseparationequipment_value as varchar), '(' || shared.aircraftcharacteristic.anticollisionandseparationequipment_nilreason || ')') as anticollisionandseparationequipment,
    coalesce(cast(shared.aircraftcharacteristic.communicationequipment_value as varchar), '(' || shared.aircraftcharacteristic.communicationequipment_nilreason || ')') as communicationequipment,
    coalesce(cast(shared.aircraftcharacteristic.surveillanceequipment_value as varchar), '(' || shared.aircraftcharacteristic.surveillanceequipment_nilreason || ')') as surveillanceequipment,
    coalesce(cast(shared.aircraftcharacteristic.wingspan_value as varchar) || ' ' || shared.aircraftcharacteristic.wingspan_uom, '(' || shared.aircraftcharacteristic.wingspan_nilreason || ')') as wingspan,
    coalesce(cast(shared.aircraftcharacteristic.weight_value as varchar) || ' ' || shared.aircraftcharacteristic.weight_uom, '(' || shared.aircraftcharacteristic.weight_nilreason || ')') as weight,
    coalesce(cast(shared.aircraftcharacteristic.speed_value as varchar) || ' ' || shared.aircraftcharacteristic.speed_uom, '(' || shared.aircraftcharacteristic.speed_nilreason || ')') as speed,
    jsonb_agg(DISTINCT notes_note_view_vicohz.*) AS annotation
from shared.aircraftcharacteristic_pt 
inner join shared.aircraftcharacteristic on shared.aircraftcharacteristic_pt.aircraftcharacteristic_id = shared.aircraftcharacteristic.id
left join master_join master_join_qvfqol on shared.aircraftcharacteristic.id = master_join_qvfqol.source_id
left join notes.note_view notes_note_view_vicohz on master_join_qvfqol.target_id = notes_note_view_vicohz.id
group by
    shared.aircraftcharacteristic_pt.id,
    shared.aircraftcharacteristic_pt.nilreason,
    shared.aircraftcharacteristic.type_value,
    shared.aircraftcharacteristic.type_nilreason,
    shared.aircraftcharacteristic.engine_value,
    shared.aircraftcharacteristic.engine_nilreason,
    shared.aircraftcharacteristic.numberengine_value,
    shared.aircraftcharacteristic.numberengine_nilreason,
    shared.aircraftcharacteristic.typeaircrafticao_value,
    shared.aircraftcharacteristic.typeaircrafticao_nilreason,
    shared.aircraftcharacteristic.aircraftlandingcategory_value,
    shared.aircraftcharacteristic.aircraftlandingcategory_nilreason,
    shared.aircraftcharacteristic.wingspaninterpretation_value,
    shared.aircraftcharacteristic.wingspaninterpretation_nilreason,
    shared.aircraftcharacteristic.classwingspan_value,
    shared.aircraftcharacteristic.classwingspan_nilreason,
    shared.aircraftcharacteristic.weightinterpretation_value,
    shared.aircraftcharacteristic.weightinterpretation_nilreason,
    shared.aircraftcharacteristic.passengers_value,
    shared.aircraftcharacteristic.passengers_nilreason,
    shared.aircraftcharacteristic.passengersinterpretation_value,
    shared.aircraftcharacteristic.passengersinterpretation_nilreason,
    shared.aircraftcharacteristic.speedinterpretation_value,
    shared.aircraftcharacteristic.speedinterpretation_nilreason,
    shared.aircraftcharacteristic.waketurbulence_value,
    shared.aircraftcharacteristic.waketurbulence_nilreason,
    shared.aircraftcharacteristic.navigationequipment_value,
    shared.aircraftcharacteristic.navigationequipment_nilreason,
    shared.aircraftcharacteristic.navigationspecification_value,
    shared.aircraftcharacteristic.navigationspecification_nilreason,
    shared.aircraftcharacteristic.verticalseparationcapability_value,
    shared.aircraftcharacteristic.verticalseparationcapability_nilreason,
    shared.aircraftcharacteristic.anticollisionandseparationequipment_value,
    shared.aircraftcharacteristic.anticollisionandseparationequipment_nilreason,
    shared.aircraftcharacteristic.communicationequipment_value,
    shared.aircraftcharacteristic.communicationequipment_nilreason,
    shared.aircraftcharacteristic.surveillanceequipment_value,
    shared.aircraftcharacteristic.surveillanceequipment_nilreason,
    shared.aircraftcharacteristic.wingspan_value,
    shared.aircraftcharacteristic.wingspan_uom,
    shared.aircraftcharacteristic.wingspan_nilreason,
    shared.aircraftcharacteristic.weight_value,
    shared.aircraftcharacteristic.weight_uom,
    shared.aircraftcharacteristic.weight_nilreason,
    shared.aircraftcharacteristic.speed_value,
    shared.aircraftcharacteristic.speed_uom,
    shared.aircraftcharacteristic.speed_nilreason;
create index on shared.aircraftcharacteristic_view (id);
-- AircraftStandContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.aircraftstandcontamination_view cascade;
create materialized view airport_heliport.aircraftstandcontamination_view as
select
    airport_heliport.aircraftstandcontamination_pt.id,
    airport_heliport.aircraftstandcontamination_pt.nilreason AS aircraftstandcontamination_nilreason,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictionestimation_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.aircraftstandcontamination.frictiondevice_value as varchar), '(' || airport_heliport.aircraftstandcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.aircraftstandcontamination.obscuredlights_value as varchar), '(' || airport_heliport.aircraftstandcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.aircraftstandcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.aircraftstandcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.aircraftstandcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.aircraftstandcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.aircraftstandcontamination.proportion_value as varchar), '(' || airport_heliport.aircraftstandcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.aircraftstandcontamination.depth_value as varchar) || ' ' || airport_heliport.aircraftstandcontamination.depth_uom, '(' || airport_heliport.aircraftstandcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_wfdwqx.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_zozkjp.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_suynwd.*) AS annotation
from airport_heliport.aircraftstandcontamination_pt 
inner join airport_heliport.aircraftstandcontamination on airport_heliport.aircraftstandcontamination_pt.aircraftstandcontamination_id = airport_heliport.aircraftstandcontamination.id
left join master_join master_join_qzdnae on airport_heliport.aircraftstandcontamination.id = master_join_qzdnae.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_wfdwqx on master_join_qzdnae.target_id = airport_heliport_ridge_pt_wfdwqx.id
left join master_join master_join_ehtkkf on airport_heliport.aircraftstandcontamination.id = master_join_ehtkkf.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_zozkjp on master_join_ehtkkf.target_id = airport_heliport_surfacecontaminationlayer_pt_zozkjp.id
left join master_join master_join_lvmuja on airport_heliport.aircraftstandcontamination.id = master_join_lvmuja.source_id
left join notes.note_view notes_note_view_suynwd on master_join_lvmuja.target_id = notes_note_view_suynwd.id
group by
    airport_heliport.aircraftstandcontamination_pt.id,
    airport_heliport.aircraftstandcontamination_pt.nilreason,
    airport_heliport.aircraftstandcontamination.frictioncoefficient_value,
    airport_heliport.aircraftstandcontamination.frictioncoefficient_nilreason,
    airport_heliport.aircraftstandcontamination.frictionestimation_value,
    airport_heliport.aircraftstandcontamination.frictionestimation_nilreason,
    airport_heliport.aircraftstandcontamination.frictiondevice_value,
    airport_heliport.aircraftstandcontamination.frictiondevice_nilreason,
    airport_heliport.aircraftstandcontamination.obscuredlights_value,
    airport_heliport.aircraftstandcontamination.obscuredlights_nilreason,
    airport_heliport.aircraftstandcontamination.furtherclearancetime_value,
    airport_heliport.aircraftstandcontamination.furtherclearancetime_nilreason,
    airport_heliport.aircraftstandcontamination.furthertotalclearance_value,
    airport_heliport.aircraftstandcontamination.furthertotalclearance_nilreason,
    airport_heliport.aircraftstandcontamination.proportion_value,
    airport_heliport.aircraftstandcontamination.proportion_nilreason,
    airport_heliport.aircraftstandcontamination.depth_value,
    airport_heliport.aircraftstandcontamination.depth_uom,
    airport_heliport.aircraftstandcontamination.depth_nilreason;
create index on airport_heliport.aircraftstandcontamination_view (id);
-- AirportHeliportContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.airportheliportcontamination_view cascade;
create materialized view airport_heliport.airportheliportcontamination_view as
select
    airport_heliport.airportheliportcontamination_pt.id,
    airport_heliport.airportheliportcontamination_pt.nilreason AS airportheliportcontamination_nilreason,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictionestimation_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.airportheliportcontamination.frictiondevice_value as varchar), '(' || airport_heliport.airportheliportcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.airportheliportcontamination.obscuredlights_value as varchar), '(' || airport_heliport.airportheliportcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.airportheliportcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.airportheliportcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.airportheliportcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.airportheliportcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.airportheliportcontamination.proportion_value as varchar), '(' || airport_heliport.airportheliportcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.airportheliportcontamination.depth_value as varchar) || ' ' || airport_heliport.airportheliportcontamination.depth_uom, '(' || airport_heliport.airportheliportcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_vsvokz.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_vguxtq.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_oeqecd.*) AS annotation
from airport_heliport.airportheliportcontamination_pt 
inner join airport_heliport.airportheliportcontamination on airport_heliport.airportheliportcontamination_pt.airportheliportcontamination_id = airport_heliport.airportheliportcontamination.id
left join master_join master_join_dpvxqp on airport_heliport.airportheliportcontamination.id = master_join_dpvxqp.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_vsvokz on master_join_dpvxqp.target_id = airport_heliport_ridge_pt_vsvokz.id
left join master_join master_join_uenhyg on airport_heliport.airportheliportcontamination.id = master_join_uenhyg.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_vguxtq on master_join_uenhyg.target_id = airport_heliport_surfacecontaminationlayer_pt_vguxtq.id
left join master_join master_join_crgydt on airport_heliport.airportheliportcontamination.id = master_join_crgydt.source_id
left join notes.note_view notes_note_view_oeqecd on master_join_crgydt.target_id = notes_note_view_oeqecd.id
group by
    airport_heliport.airportheliportcontamination_pt.id,
    airport_heliport.airportheliportcontamination_pt.nilreason,
    airport_heliport.airportheliportcontamination.frictioncoefficient_value,
    airport_heliport.airportheliportcontamination.frictioncoefficient_nilreason,
    airport_heliport.airportheliportcontamination.frictionestimation_value,
    airport_heliport.airportheliportcontamination.frictionestimation_nilreason,
    airport_heliport.airportheliportcontamination.frictiondevice_value,
    airport_heliport.airportheliportcontamination.frictiondevice_nilreason,
    airport_heliport.airportheliportcontamination.obscuredlights_value,
    airport_heliport.airportheliportcontamination.obscuredlights_nilreason,
    airport_heliport.airportheliportcontamination.furtherclearancetime_value,
    airport_heliport.airportheliportcontamination.furtherclearancetime_nilreason,
    airport_heliport.airportheliportcontamination.furthertotalclearance_value,
    airport_heliport.airportheliportcontamination.furthertotalclearance_nilreason,
    airport_heliport.airportheliportcontamination.proportion_value,
    airport_heliport.airportheliportcontamination.proportion_nilreason,
    airport_heliport.airportheliportcontamination.depth_value,
    airport_heliport.airportheliportcontamination.depth_uom,
    airport_heliport.airportheliportcontamination.depth_nilreason;
create index on airport_heliport.airportheliportcontamination_view (id);
-- AirspaceGeometryComponentPropertyType
-- ['notes.note_view']
drop materialized view if exists airspace.airspacegeometrycomponent_view cascade;
create materialized view airspace.airspacegeometrycomponent_view as
select
    airspace.airspacegeometrycomponent_pt.id,
    airspace.airspacegeometrycomponent_pt.nilreason AS airspacegeometrycomponent_nilreason,
    coalesce(cast(airspace.airspacegeometrycomponent.operation_value as varchar), '(' || airspace.airspacegeometrycomponent.operation_nilreason || ')') as operation,
    coalesce(cast(airspace.airspacegeometrycomponent.operationsequence_value as varchar), '(' || airspace.airspacegeometrycomponent.operationsequence_nilreason || ')') as operationsequence,
    airspace_airspacevolume_pt_srqhyd.id AS theairspacevolume,
    jsonb_agg(DISTINCT notes_note_view_evnpnm.*) AS annotation
from airspace.airspacegeometrycomponent_pt 
inner join airspace.airspacegeometrycomponent on airspace.airspacegeometrycomponent_pt.airspacegeometrycomponent_id = airspace.airspacegeometrycomponent.id
left join airspace.airspacevolume_pt airspace_airspacevolume_pt_srqhyd on airspace.airspacegeometrycomponent.theairspacevolume_id = airspace_airspacevolume_pt_srqhyd.id
left join master_join master_join_sapcxi on airspace.airspacegeometrycomponent.id = master_join_sapcxi.source_id
left join notes.note_view notes_note_view_evnpnm on master_join_sapcxi.target_id = notes_note_view_evnpnm.id
group by
    airspace.airspacegeometrycomponent_pt.id,
    airspace.airspacegeometrycomponent_pt.nilreason,
    airspace.airspacegeometrycomponent.operation_value,
    airspace.airspacegeometrycomponent.operation_nilreason,
    airspace.airspacegeometrycomponent.operationsequence_value,
    airspace.airspacegeometrycomponent.operationsequence_nilreason,
    airspace_airspacevolume_pt_srqhyd.id;
create index on airspace.airspacegeometrycomponent_view (id);
-- AirspaceLayerPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.airspacelayer_view cascade;
create materialized view shared.airspacelayer_view as
select
    shared.airspacelayer_pt.id,
    shared.airspacelayer_pt.nilreason AS airspacelayer_nilreason,
    coalesce(cast(shared.airspacelayer.upperlimitreference_value as varchar), '(' || shared.airspacelayer.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.airspacelayer.lowerlimitreference_value as varchar), '(' || shared.airspacelayer.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.airspacelayer.altitudeinterpretation_value as varchar), '(' || shared.airspacelayer.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(shared.airspacelayer.upperlimit_value as varchar) || ' ' || shared.airspacelayer.upperlimit_uom, '(' || shared.airspacelayer.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.airspacelayer.lowerlimit_value as varchar) || ' ' || shared.airspacelayer.lowerlimit_uom, '(' || shared.airspacelayer.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(shared_standardlevelcolumn_pt_hdtpkc.title as varchar), '(' || shared_standardlevelcolumn_pt_hdtpkc.nilreason[1] || ')') AS discretelevelseries,
    shared_standardlevelcolumn_pt_hdtpkc.href AS discretelevelseries_href,
    jsonb_agg(DISTINCT notes_note_view_zkqzto.*) AS annotation
from shared.airspacelayer_pt 
inner join shared.airspacelayer on shared.airspacelayer_pt.airspacelayer_id = shared.airspacelayer.id
left join shared.standardlevelcolumn_pt shared_standardlevelcolumn_pt_hdtpkc on shared.airspacelayer.discretelevelseries_id = shared_standardlevelcolumn_pt_hdtpkc.id
left join master_join master_join_lkjyxd on shared.airspacelayer.id = master_join_lkjyxd.source_id
left join notes.note_view notes_note_view_zkqzto on master_join_lkjyxd.target_id = notes_note_view_zkqzto.id
group by
    shared.airspacelayer_pt.id,
    shared.airspacelayer_pt.nilreason,
    shared.airspacelayer.upperlimitreference_value,
    shared.airspacelayer.upperlimitreference_nilreason,
    shared.airspacelayer.lowerlimitreference_value,
    shared.airspacelayer.lowerlimitreference_nilreason,
    shared.airspacelayer.altitudeinterpretation_value,
    shared.airspacelayer.altitudeinterpretation_nilreason,
    shared.airspacelayer.upperlimit_value,
    shared.airspacelayer.upperlimit_uom,
    shared.airspacelayer.upperlimit_nilreason,
    shared.airspacelayer.lowerlimit_value,
    shared.airspacelayer.lowerlimit_uom,
    shared.airspacelayer.lowerlimit_nilreason,
    shared_standardlevelcolumn_pt_hdtpkc.title,
    shared_standardlevelcolumn_pt_hdtpkc.nilreason[1],
    shared_standardlevelcolumn_pt_hdtpkc.href;
create index on shared.airspacelayer_view (id);
-- AirspaceVolumeDependencyPropertyType
-- ['notes.note_view']
drop materialized view if exists airspace.airspacevolumedependency_view cascade;
create materialized view airspace.airspacevolumedependency_view as
select
    airspace.airspacevolumedependency_pt.id,
    airspace.airspacevolumedependency_pt.nilreason AS airspacevolumedependency_nilreason,
    coalesce(cast(airspace.airspacevolumedependency.dependency_value as varchar), '(' || airspace.airspacevolumedependency.dependency_nilreason || ')') as dependency,
    coalesce(cast(airspace_airspace_pt_lmebdz.title as varchar), '(' || airspace_airspace_pt_lmebdz.nilreason[1] || ')') AS theairspace,
    airspace_airspace_pt_lmebdz.href AS theairspace_href,
    jsonb_agg(DISTINCT notes_note_view_uosfze.*) AS annotation
from airspace.airspacevolumedependency_pt 
inner join airspace.airspacevolumedependency on airspace.airspacevolumedependency_pt.airspacevolumedependency_id = airspace.airspacevolumedependency.id
left join airspace.airspace_pt airspace_airspace_pt_lmebdz on airspace.airspacevolumedependency.theairspace_id = airspace_airspace_pt_lmebdz.id
left join master_join master_join_ngbxrp on airspace.airspacevolumedependency.id = master_join_ngbxrp.source_id
left join notes.note_view notes_note_view_uosfze on master_join_ngbxrp.target_id = notes_note_view_uosfze.id
group by
    airspace.airspacevolumedependency_pt.id,
    airspace.airspacevolumedependency_pt.nilreason,
    airspace.airspacevolumedependency.dependency_value,
    airspace.airspacevolumedependency.dependency_nilreason,
    airspace_airspace_pt_lmebdz.title,
    airspace_airspace_pt_lmebdz.nilreason[1],
    airspace_airspace_pt_lmebdz.href;
create index on airspace.airspacevolumedependency_view (id);
-- AltitudeAdjustmentPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.altitudeadjustment_view cascade;
create materialized view shared.altitudeadjustment_view as
select
    shared.altitudeadjustment_pt.id,
    shared.altitudeadjustment_pt.nilreason AS altitudeadjustment_nilreason,
    coalesce(cast(shared.altitudeadjustment.altitudeadjustmenttype_value as varchar), '(' || shared.altitudeadjustment.altitudeadjustmenttype_nilreason || ')') as altitudeadjustmenttype,
    coalesce(cast(shared.altitudeadjustment.primaryalternateminimum_value as varchar), '(' || shared.altitudeadjustment.primaryalternateminimum_nilreason || ')') as primaryalternateminimum,
    coalesce(cast(shared.altitudeadjustment.localremotecode_value as varchar), '(' || shared.altitudeadjustment.localremotecode_nilreason || ')') as localremotecode,
    coalesce(cast(shared.altitudeadjustment.altitudeadjustment_value as varchar) || ' ' || shared.altitudeadjustment.altitudeadjustment_uom, '(' || shared.altitudeadjustment.altitudeadjustment_nilreason || ')') as altitudeadjustment,
    jsonb_agg(DISTINCT notes_note_view_ouzzgf.*) AS annotation
from shared.altitudeadjustment_pt 
inner join shared.altitudeadjustment on shared.altitudeadjustment_pt.altitudeadjustment_id = shared.altitudeadjustment.id
left join master_join master_join_qioqkl on shared.altitudeadjustment.id = master_join_qioqkl.source_id
left join notes.note_view notes_note_view_ouzzgf on master_join_qioqkl.target_id = notes_note_view_ouzzgf.id
group by
    shared.altitudeadjustment_pt.id,
    shared.altitudeadjustment_pt.nilreason,
    shared.altitudeadjustment.altitudeadjustmenttype_value,
    shared.altitudeadjustment.altitudeadjustmenttype_nilreason,
    shared.altitudeadjustment.primaryalternateminimum_value,
    shared.altitudeadjustment.primaryalternateminimum_nilreason,
    shared.altitudeadjustment.localremotecode_value,
    shared.altitudeadjustment.localremotecode_nilreason,
    shared.altitudeadjustment.altitudeadjustment_value,
    shared.altitudeadjustment.altitudeadjustment_uom,
    shared.altitudeadjustment.altitudeadjustment_nilreason;
create index on shared.altitudeadjustment_view (id);
-- AngleUsePropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.angleuse_view cascade;
create materialized view navaids_points.angleuse_view as
select
    navaids_points.angleuse_pt.id,
    navaids_points.angleuse_pt.nilreason AS angleuse_nilreason,
    coalesce(cast(navaids_points.angleuse.alongcourseguidance_value as varchar), '(' || navaids_points.angleuse.alongcourseguidance_nilreason || ')') as alongcourseguidance,
    coalesce(cast(navaids_points_angleindication_pt_ncjbgl.title as varchar), '(' || navaids_points_angleindication_pt_ncjbgl.nilreason[1] || ')') AS theangleindication,
    navaids_points_angleindication_pt_ncjbgl.href AS theangleindication_href,
    jsonb_agg(DISTINCT notes_note_view_rugphg.*) AS annotation
from navaids_points.angleuse_pt 
inner join navaids_points.angleuse on navaids_points.angleuse_pt.angleuse_id = navaids_points.angleuse.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_ncjbgl on navaids_points.angleuse.theangleindication_id = navaids_points_angleindication_pt_ncjbgl.id
left join master_join master_join_bljgix on navaids_points.angleuse.id = master_join_bljgix.source_id
left join notes.note_view notes_note_view_rugphg on master_join_bljgix.target_id = notes_note_view_rugphg.id
group by
    navaids_points.angleuse_pt.id,
    navaids_points.angleuse_pt.nilreason,
    navaids_points.angleuse.alongcourseguidance_value,
    navaids_points.angleuse.alongcourseguidance_nilreason,
    navaids_points_angleindication_pt_ncjbgl.title,
    navaids_points_angleindication_pt_ncjbgl.nilreason[1],
    navaids_points_angleindication_pt_ncjbgl.href;
create index on navaids_points.angleuse_view (id);
-- ApproachAltitudeTablePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachaltitudetable_view cascade;
create materialized view procedure.approachaltitudetable_view as
select
    procedure.approachaltitudetable_pt.id,
    procedure.approachaltitudetable_pt.nilreason AS approachaltitudetable_nilreason,
    coalesce(cast(procedure.approachaltitudetable.measurementpoint_value as varchar), '(' || procedure.approachaltitudetable.measurementpoint_nilreason || ')') as measurementpoint,
    coalesce(cast(procedure.approachaltitudetable.altitudereference_value as varchar), '(' || procedure.approachaltitudetable.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(procedure.approachaltitudetable.altitude_value as varchar) || ' ' || procedure.approachaltitudetable.altitude_uom, '(' || procedure.approachaltitudetable.altitude_nilreason || ')') as altitude,
    jsonb_agg(DISTINCT notes_note_view_wvkgps.*) AS annotation
from procedure.approachaltitudetable_pt 
inner join procedure.approachaltitudetable on procedure.approachaltitudetable_pt.approachaltitudetable_id = procedure.approachaltitudetable.id
left join master_join master_join_pkmzah on procedure.approachaltitudetable.id = master_join_pkmzah.source_id
left join notes.note_view notes_note_view_wvkgps on master_join_pkmzah.target_id = notes_note_view_wvkgps.id
group by
    procedure.approachaltitudetable_pt.id,
    procedure.approachaltitudetable_pt.nilreason,
    procedure.approachaltitudetable.measurementpoint_value,
    procedure.approachaltitudetable.measurementpoint_nilreason,
    procedure.approachaltitudetable.altitudereference_value,
    procedure.approachaltitudetable.altitudereference_nilreason,
    procedure.approachaltitudetable.altitude_value,
    procedure.approachaltitudetable.altitude_uom,
    procedure.approachaltitudetable.altitude_nilreason;
create index on procedure.approachaltitudetable_view (id);
-- ApproachConditionPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachcondition_view cascade;
create materialized view procedure.approachcondition_view as
select
    procedure.approachcondition_pt.id,
    procedure.approachcondition_pt.nilreason AS approachcondition_nilreason,
    coalesce(cast(procedure.approachcondition.finalapproachpath_value as varchar), '(' || procedure.approachcondition.finalapproachpath_nilreason || ')') as finalapproachpath,
    coalesce(cast(procedure.approachcondition.requirednavigationperformance_value as varchar), '(' || procedure.approachcondition.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.approachcondition.climbgradient_value as varchar), '(' || procedure.approachcondition.climbgradient_nilreason || ')') as climbgradient,
    procedure_minima_pt_oxlfpo.id AS minimumset,
    coalesce(cast(airport_heliport_altimetersource_pt_zyvalj.title as varchar), '(' || airport_heliport_altimetersource_pt_zyvalj.nilreason[1] || ')') AS altimeter,
    airport_heliport_altimetersource_pt_zyvalj.href AS altimeter_href,
    jsonb_agg(DISTINCT procedure_circlingrestriction_pt_srbvzm.id) AS circlingrestriction,
    jsonb_agg(DISTINCT shared_aircraftcharacteristic_pt_mgrtze.id) AS aircraftcategory,
    jsonb_agg(DISTINCT procedure_landingtakeoffareacollection_pt_kjxviw.id) AS landingarea,
    jsonb_agg(DISTINCT shared_obstacleassessmentarea_pt_fxlddn.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_stfofc.*) AS annotation
from procedure.approachcondition_pt 
inner join procedure.approachcondition on procedure.approachcondition_pt.approachcondition_id = procedure.approachcondition.id
left join procedure.minima_pt procedure_minima_pt_oxlfpo on procedure.approachcondition.minimumset_id = procedure_minima_pt_oxlfpo.id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_zyvalj on procedure.approachcondition.altimeter_id = airport_heliport_altimetersource_pt_zyvalj.id
left join master_join master_join_xuodfv on procedure.approachcondition.id = master_join_xuodfv.source_id
left join procedure.circlingrestriction_pt procedure_circlingrestriction_pt_srbvzm on master_join_xuodfv.target_id = procedure_circlingrestriction_pt_srbvzm.id
left join master_join master_join_iteajl on procedure.approachcondition.id = master_join_iteajl.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_mgrtze on master_join_iteajl.target_id = shared_aircraftcharacteristic_pt_mgrtze.id
left join master_join master_join_aepcxn on procedure.approachcondition.id = master_join_aepcxn.source_id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_kjxviw on master_join_aepcxn.target_id = procedure_landingtakeoffareacollection_pt_kjxviw.id
left join master_join master_join_ocrqff on procedure.approachcondition.id = master_join_ocrqff.source_id
left join shared.obstacleassessmentarea_pt shared_obstacleassessmentarea_pt_fxlddn on master_join_ocrqff.target_id = shared_obstacleassessmentarea_pt_fxlddn.id
left join master_join master_join_nxrzjv on procedure.approachcondition.id = master_join_nxrzjv.source_id
left join notes.note_view notes_note_view_stfofc on master_join_nxrzjv.target_id = notes_note_view_stfofc.id
group by
    procedure.approachcondition_pt.id,
    procedure.approachcondition_pt.nilreason,
    procedure.approachcondition.finalapproachpath_value,
    procedure.approachcondition.finalapproachpath_nilreason,
    procedure.approachcondition.requirednavigationperformance_value,
    procedure.approachcondition.requirednavigationperformance_nilreason,
    procedure.approachcondition.climbgradient_value,
    procedure.approachcondition.climbgradient_nilreason,
    procedure_minima_pt_oxlfpo.id,
    airport_heliport_altimetersource_pt_zyvalj.title,
    airport_heliport_altimetersource_pt_zyvalj.nilreason[1],
    airport_heliport_altimetersource_pt_zyvalj.href;
create index on procedure.approachcondition_view (id);
-- ApproachDistanceTablePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachdistancetable_view cascade;
create materialized view procedure.approachdistancetable_view as
select
    procedure.approachdistancetable_pt.id,
    procedure.approachdistancetable_pt.nilreason AS approachdistancetable_nilreason,
    coalesce(cast(procedure.approachdistancetable.startingmeasurementpoint_value as varchar), '(' || procedure.approachdistancetable.startingmeasurementpoint_nilreason || ')') as startingmeasurementpoint,
    coalesce(cast(procedure.approachdistancetable.endingmeasurementpoint_value as varchar), '(' || procedure.approachdistancetable.endingmeasurementpoint_nilreason || ')') as endingmeasurementpoint,
    coalesce(cast(procedure.approachdistancetable.valuehat_value as varchar) || ' ' || procedure.approachdistancetable.valuehat_uom, '(' || procedure.approachdistancetable.valuehat_nilreason || ')') as valuehat,
    coalesce(cast(procedure.approachdistancetable.distance_value as varchar) || ' ' || procedure.approachdistancetable.distance_uom, '(' || procedure.approachdistancetable.distance_nilreason || ')') as distance,
    jsonb_agg(DISTINCT notes_note_view_fcszdz.*) AS annotation
from procedure.approachdistancetable_pt 
inner join procedure.approachdistancetable on procedure.approachdistancetable_pt.approachdistancetable_id = procedure.approachdistancetable.id
left join master_join master_join_tbwamm on procedure.approachdistancetable.id = master_join_tbwamm.source_id
left join notes.note_view notes_note_view_fcszdz on master_join_tbwamm.target_id = notes_note_view_fcszdz.id
group by
    procedure.approachdistancetable_pt.id,
    procedure.approachdistancetable_pt.nilreason,
    procedure.approachdistancetable.startingmeasurementpoint_value,
    procedure.approachdistancetable.startingmeasurementpoint_nilreason,
    procedure.approachdistancetable.endingmeasurementpoint_value,
    procedure.approachdistancetable.endingmeasurementpoint_nilreason,
    procedure.approachdistancetable.valuehat_value,
    procedure.approachdistancetable.valuehat_uom,
    procedure.approachdistancetable.valuehat_nilreason,
    procedure.approachdistancetable.distance_value,
    procedure.approachdistancetable.distance_uom,
    procedure.approachdistancetable.distance_nilreason;
create index on procedure.approachdistancetable_view (id);
-- ApproachTimingTablePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.approachtimingtable_view cascade;
create materialized view procedure.approachtimingtable_view as
select
    procedure.approachtimingtable_pt.id,
    procedure.approachtimingtable_pt.nilreason AS approachtimingtable_nilreason,
    coalesce(cast(procedure.approachtimingtable.startingmeasurementpoint_value as varchar), '(' || procedure.approachtimingtable.startingmeasurementpoint_nilreason || ')') as startingmeasurementpoint,
    coalesce(cast(procedure.approachtimingtable.endingmeasurementpoint_value as varchar), '(' || procedure.approachtimingtable.endingmeasurementpoint_nilreason || ')') as endingmeasurementpoint,
    coalesce(cast(procedure.approachtimingtable.time_value as varchar) || ' ' || procedure.approachtimingtable.time_uom, '(' || procedure.approachtimingtable.time_nilreason || ')') as time,
    coalesce(cast(procedure.approachtimingtable.speed_value as varchar) || ' ' || procedure.approachtimingtable.speed_uom, '(' || procedure.approachtimingtable.speed_nilreason || ')') as speed,
    jsonb_agg(DISTINCT notes_note_view_wpumwh.*) AS annotation
from procedure.approachtimingtable_pt 
inner join procedure.approachtimingtable on procedure.approachtimingtable_pt.approachtimingtable_id = procedure.approachtimingtable.id
left join master_join master_join_sbtgzp on procedure.approachtimingtable.id = master_join_sbtgzp.source_id
left join notes.note_view notes_note_view_wpumwh on master_join_sbtgzp.target_id = notes_note_view_wpumwh.id
group by
    procedure.approachtimingtable_pt.id,
    procedure.approachtimingtable_pt.nilreason,
    procedure.approachtimingtable.startingmeasurementpoint_value,
    procedure.approachtimingtable.startingmeasurementpoint_nilreason,
    procedure.approachtimingtable.endingmeasurementpoint_value,
    procedure.approachtimingtable.endingmeasurementpoint_nilreason,
    procedure.approachtimingtable.time_value,
    procedure.approachtimingtable.time_uom,
    procedure.approachtimingtable.time_nilreason,
    procedure.approachtimingtable.speed_value,
    procedure.approachtimingtable.speed_uom,
    procedure.approachtimingtable.speed_nilreason;
create index on procedure.approachtimingtable_view (id);
-- ApronContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.aproncontamination_view cascade;
create materialized view airport_heliport.aproncontamination_view as
select
    airport_heliport.aproncontamination_pt.id,
    airport_heliport.aproncontamination_pt.nilreason AS aproncontamination_nilreason,
    coalesce(cast(airport_heliport.aproncontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.aproncontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.aproncontamination.frictionestimation_value as varchar), '(' || airport_heliport.aproncontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.aproncontamination.frictiondevice_value as varchar), '(' || airport_heliport.aproncontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.aproncontamination.obscuredlights_value as varchar), '(' || airport_heliport.aproncontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.aproncontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.aproncontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.aproncontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.aproncontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.aproncontamination.proportion_value as varchar), '(' || airport_heliport.aproncontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.aproncontamination.depth_value as varchar) || ' ' || airport_heliport.aproncontamination.depth_uom, '(' || airport_heliport.aproncontamination.depth_nilreason || ')') as depth,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_trzwbq.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_lrjixf.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_saojpv.*) AS annotation
from airport_heliport.aproncontamination_pt 
inner join airport_heliport.aproncontamination on airport_heliport.aproncontamination_pt.aproncontamination_id = airport_heliport.aproncontamination.id
left join master_join master_join_wnnabj on airport_heliport.aproncontamination.id = master_join_wnnabj.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_trzwbq on master_join_wnnabj.target_id = airport_heliport_ridge_pt_trzwbq.id
left join master_join master_join_bdklai on airport_heliport.aproncontamination.id = master_join_bdklai.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_lrjixf on master_join_bdklai.target_id = airport_heliport_surfacecontaminationlayer_pt_lrjixf.id
left join master_join master_join_qachbp on airport_heliport.aproncontamination.id = master_join_qachbp.source_id
left join notes.note_view notes_note_view_saojpv on master_join_qachbp.target_id = notes_note_view_saojpv.id
group by
    airport_heliport.aproncontamination_pt.id,
    airport_heliport.aproncontamination_pt.nilreason,
    airport_heliport.aproncontamination.frictioncoefficient_value,
    airport_heliport.aproncontamination.frictioncoefficient_nilreason,
    airport_heliport.aproncontamination.frictionestimation_value,
    airport_heliport.aproncontamination.frictionestimation_nilreason,
    airport_heliport.aproncontamination.frictiondevice_value,
    airport_heliport.aproncontamination.frictiondevice_nilreason,
    airport_heliport.aproncontamination.obscuredlights_value,
    airport_heliport.aproncontamination.obscuredlights_nilreason,
    airport_heliport.aproncontamination.furtherclearancetime_value,
    airport_heliport.aproncontamination.furtherclearancetime_nilreason,
    airport_heliport.aproncontamination.furthertotalclearance_value,
    airport_heliport.aproncontamination.furthertotalclearance_nilreason,
    airport_heliport.aproncontamination.proportion_value,
    airport_heliport.aproncontamination.proportion_nilreason,
    airport_heliport.aproncontamination.depth_value,
    airport_heliport.aproncontamination.depth_uom,
    airport_heliport.aproncontamination.depth_nilreason;
create index on airport_heliport.aproncontamination_view (id);
-- AuthorityForAerialRefuellingPropertyType
-- ['notes.note_view']
drop materialized view if exists aerial_refuelling.authorityforaerialrefuelling_view cascade;
create materialized view aerial_refuelling.authorityforaerialrefuelling_view as
select
    aerial_refuelling.authorityforaerialrefuelling_pt.id,
    aerial_refuelling.authorityforaerialrefuelling_pt.nilreason AS authorityforaerialrefuelling_nilreason,
    coalesce(cast(aerial_refuelling.authorityforaerialrefuelling.type_value as varchar), '(' || aerial_refuelling.authorityforaerialrefuelling.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_bwtomr.title as varchar), '(' || organisation_organisationauthority_pt_bwtomr.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_bwtomr.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT notes_note_view_somkrl.*) AS annotation
from aerial_refuelling.authorityforaerialrefuelling_pt 
inner join aerial_refuelling.authorityforaerialrefuelling on aerial_refuelling.authorityforaerialrefuelling_pt.authorityforaerialrefuelling_id = aerial_refuelling.authorityforaerialrefuelling.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_bwtomr on aerial_refuelling.authorityforaerialrefuelling.theorganisationauthority_id = organisation_organisationauthority_pt_bwtomr.id
left join master_join master_join_xswgia on aerial_refuelling.authorityforaerialrefuelling.id = master_join_xswgia.source_id
left join notes.note_view notes_note_view_somkrl on master_join_xswgia.target_id = notes_note_view_somkrl.id
group by
    aerial_refuelling.authorityforaerialrefuelling_pt.id,
    aerial_refuelling.authorityforaerialrefuelling_pt.nilreason,
    aerial_refuelling.authorityforaerialrefuelling.type_value,
    aerial_refuelling.authorityforaerialrefuelling.type_nilreason,
    organisation_organisationauthority_pt_bwtomr.title,
    organisation_organisationauthority_pt_bwtomr.nilreason[1],
    organisation_organisationauthority_pt_bwtomr.href;
create index on aerial_refuelling.authorityforaerialrefuelling_view (id);
-- AuthorityForNavaidEquipmentPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.authorityfornavaidequipment_view cascade;
create materialized view navaids_points.authorityfornavaidequipment_view as
select
    navaids_points.authorityfornavaidequipment_pt.id,
    navaids_points.authorityfornavaidequipment_pt.nilreason AS authorityfornavaidequipment_nilreason,
    coalesce(cast(navaids_points.authorityfornavaidequipment.type_value as varchar), '(' || navaids_points.authorityfornavaidequipment.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_udxrsy.title as varchar), '(' || organisation_organisationauthority_pt_udxrsy.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_udxrsy.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT notes_note_view_hebfng.*) AS annotation
from navaids_points.authorityfornavaidequipment_pt 
inner join navaids_points.authorityfornavaidequipment on navaids_points.authorityfornavaidequipment_pt.authorityfornavaidequipment_id = navaids_points.authorityfornavaidequipment.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_udxrsy on navaids_points.authorityfornavaidequipment.theorganisationauthority_id = organisation_organisationauthority_pt_udxrsy.id
left join master_join master_join_ykjxuy on navaids_points.authorityfornavaidequipment.id = master_join_ykjxuy.source_id
left join notes.note_view notes_note_view_hebfng on master_join_ykjxuy.target_id = notes_note_view_hebfng.id
group by
    navaids_points.authorityfornavaidequipment_pt.id,
    navaids_points.authorityfornavaidequipment_pt.nilreason,
    navaids_points.authorityfornavaidequipment.type_value,
    navaids_points.authorityfornavaidequipment.type_nilreason,
    organisation_organisationauthority_pt_udxrsy.title,
    organisation_organisationauthority_pt_udxrsy.nilreason[1],
    organisation_organisationauthority_pt_udxrsy.href;
create index on navaids_points.authorityfornavaidequipment_view (id);
-- AuthorityForSpecialNavigationStationPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.authorityforspecialnavigationstation_view cascade;
create materialized view navaids_points.authorityforspecialnavigationstation_view as
select
    navaids_points.authorityforspecialnavigationstation_pt.id,
    navaids_points.authorityforspecialnavigationstation_pt.nilreason AS authorityforspecialnavigationstation_nilreason,
    coalesce(cast(navaids_points.authorityforspecialnavigationstation.type_value as varchar), '(' || navaids_points.authorityforspecialnavigationstation.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_eznhet.title as varchar), '(' || organisation_organisationauthority_pt_eznhet.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_eznhet.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT notes_note_view_ptzsuf.*) AS annotation
from navaids_points.authorityforspecialnavigationstation_pt 
inner join navaids_points.authorityforspecialnavigationstation on navaids_points.authorityforspecialnavigationstation_pt.authorityforspecialnavigationstation_id = navaids_points.authorityforspecialnavigationstation.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_eznhet on navaids_points.authorityforspecialnavigationstation.theorganisationauthority_id = organisation_organisationauthority_pt_eznhet.id
left join master_join master_join_bqpjnb on navaids_points.authorityforspecialnavigationstation.id = master_join_bqpjnb.source_id
left join notes.note_view notes_note_view_ptzsuf on master_join_bqpjnb.target_id = notes_note_view_ptzsuf.id
group by
    navaids_points.authorityforspecialnavigationstation_pt.id,
    navaids_points.authorityforspecialnavigationstation_pt.nilreason,
    navaids_points.authorityforspecialnavigationstation.type_value,
    navaids_points.authorityforspecialnavigationstation.type_nilreason,
    organisation_organisationauthority_pt_eznhet.title,
    organisation_organisationauthority_pt_eznhet.nilreason[1],
    organisation_organisationauthority_pt_eznhet.href;
create index on navaids_points.authorityforspecialnavigationstation_view (id);
-- AuthorityForSpecialNavigationSystemPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.authorityforspecialnavigationsystem_view cascade;
create materialized view navaids_points.authorityforspecialnavigationsystem_view as
select
    navaids_points.authorityforspecialnavigationsystem_pt.id,
    navaids_points.authorityforspecialnavigationsystem_pt.nilreason AS authorityforspecialnavigationsystem_nilreason,
    coalesce(cast(navaids_points.authorityforspecialnavigationsystem.type_value as varchar), '(' || navaids_points.authorityforspecialnavigationsystem.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_sngcke.title as varchar), '(' || organisation_organisationauthority_pt_sngcke.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_sngcke.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT notes_note_view_yxbfaw.*) AS annotation
from navaids_points.authorityforspecialnavigationsystem_pt 
inner join navaids_points.authorityforspecialnavigationsystem on navaids_points.authorityforspecialnavigationsystem_pt.authorityforspecialnavigationsystem_id = navaids_points.authorityforspecialnavigationsystem.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_sngcke on navaids_points.authorityforspecialnavigationsystem.theorganisationauthority_id = organisation_organisationauthority_pt_sngcke.id
left join master_join master_join_tjpfiz on navaids_points.authorityforspecialnavigationsystem.id = master_join_tjpfiz.source_id
left join notes.note_view notes_note_view_yxbfaw on master_join_tjpfiz.target_id = notes_note_view_yxbfaw.id
group by
    navaids_points.authorityforspecialnavigationsystem_pt.id,
    navaids_points.authorityforspecialnavigationsystem_pt.nilreason,
    navaids_points.authorityforspecialnavigationsystem.type_value,
    navaids_points.authorityforspecialnavigationsystem.type_nilreason,
    organisation_organisationauthority_pt_sngcke.title,
    organisation_organisationauthority_pt_sngcke.nilreason[1],
    organisation_organisationauthority_pt_sngcke.href;
create index on navaids_points.authorityforspecialnavigationsystem_view (id);
-- CallsignDetailPropertyType
-- ['notes.note_view']
drop materialized view if exists service.callsigndetail_view cascade;
create materialized view service.callsigndetail_view as
select
    service.callsigndetail_pt.id,
    service.callsigndetail_pt.nilreason AS callsigndetail_nilreason,
    coalesce(cast(service.callsigndetail.callsign_value as varchar), '(' || service.callsigndetail.callsign_nilreason || ')') as callsign,
    coalesce(cast(service.callsigndetail.language_value as varchar), '(' || service.callsigndetail.language_nilreason || ')') as language,
    jsonb_agg(DISTINCT notes_note_view_hqwgpo.*) AS annotation
from service.callsigndetail_pt 
inner join service.callsigndetail on service.callsigndetail_pt.callsigndetail_id = service.callsigndetail.id
left join master_join master_join_vufqmf on service.callsigndetail.id = master_join_vufqmf.source_id
left join notes.note_view notes_note_view_hqwgpo on master_join_vufqmf.target_id = notes_note_view_hqwgpo.id
group by
    service.callsigndetail_pt.id,
    service.callsigndetail_pt.nilreason,
    service.callsigndetail.callsign_value,
    service.callsigndetail.callsign_nilreason,
    service.callsigndetail.language_value,
    service.callsigndetail.language_nilreason;
create index on service.callsigndetail_view (id);
-- CircleSectorPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.circlesector_view cascade;
create materialized view shared.circlesector_view as
select
    shared.circlesector_pt.id,
    shared.circlesector_pt.nilreason AS circlesector_nilreason,
    coalesce(cast(shared.circlesector.arcdirection_value as varchar), '(' || shared.circlesector.arcdirection_nilreason || ')') as arcdirection,
    coalesce(cast(shared.circlesector.fromangle_value as varchar), '(' || shared.circlesector.fromangle_nilreason || ')') as fromangle,
    coalesce(cast(shared.circlesector.toangle_value as varchar), '(' || shared.circlesector.toangle_nilreason || ')') as toangle,
    coalesce(cast(shared.circlesector.angletype_value as varchar), '(' || shared.circlesector.angletype_nilreason || ')') as angletype,
    coalesce(cast(shared.circlesector.angledirectionreference_value as varchar), '(' || shared.circlesector.angledirectionreference_nilreason || ')') as angledirectionreference,
    coalesce(cast(shared.circlesector.upperlimitreference_value as varchar), '(' || shared.circlesector.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.circlesector.lowerlimitreference_value as varchar), '(' || shared.circlesector.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.circlesector.innerdistance_value as varchar) || ' ' || shared.circlesector.innerdistance_uom, '(' || shared.circlesector.innerdistance_nilreason || ')') as innerdistance,
    coalesce(cast(shared.circlesector.outerdistance_value as varchar) || ' ' || shared.circlesector.outerdistance_uom, '(' || shared.circlesector.outerdistance_nilreason || ')') as outerdistance,
    coalesce(cast(shared.circlesector.upperlimit_value as varchar) || ' ' || shared.circlesector.upperlimit_uom, '(' || shared.circlesector.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.circlesector.lowerlimit_value as varchar) || ' ' || shared.circlesector.lowerlimit_uom, '(' || shared.circlesector.lowerlimit_nilreason || ')') as lowerlimit,
    jsonb_agg(DISTINCT notes_note_view_qkjkcm.*) AS annotation
from shared.circlesector_pt 
inner join shared.circlesector on shared.circlesector_pt.circlesector_id = shared.circlesector.id
left join master_join master_join_kcnbql on shared.circlesector.id = master_join_kcnbql.source_id
left join notes.note_view notes_note_view_qkjkcm on master_join_kcnbql.target_id = notes_note_view_qkjkcm.id
group by
    shared.circlesector_pt.id,
    shared.circlesector_pt.nilreason,
    shared.circlesector.arcdirection_value,
    shared.circlesector.arcdirection_nilreason,
    shared.circlesector.fromangle_value,
    shared.circlesector.fromangle_nilreason,
    shared.circlesector.toangle_value,
    shared.circlesector.toangle_nilreason,
    shared.circlesector.angletype_value,
    shared.circlesector.angletype_nilreason,
    shared.circlesector.angledirectionreference_value,
    shared.circlesector.angledirectionreference_nilreason,
    shared.circlesector.upperlimitreference_value,
    shared.circlesector.upperlimitreference_nilreason,
    shared.circlesector.lowerlimitreference_value,
    shared.circlesector.lowerlimitreference_nilreason,
    shared.circlesector.innerdistance_value,
    shared.circlesector.innerdistance_uom,
    shared.circlesector.innerdistance_nilreason,
    shared.circlesector.outerdistance_value,
    shared.circlesector.outerdistance_uom,
    shared.circlesector.outerdistance_nilreason,
    shared.circlesector.upperlimit_value,
    shared.circlesector.upperlimit_uom,
    shared.circlesector.upperlimit_nilreason,
    shared.circlesector.lowerlimit_value,
    shared.circlesector.lowerlimit_uom,
    shared.circlesector.lowerlimit_nilreason;
create index on shared.circlesector_view (id);
-- CityPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.city_view cascade;
create materialized view airport_heliport.city_view as
select
    airport_heliport.city_pt.id,
    airport_heliport.city_pt.nilreason AS city_nilreason,
    coalesce(cast(airport_heliport.city.name_value as varchar), '(' || airport_heliport.city.name_nilreason || ')') as name,
    jsonb_agg(DISTINCT notes_note_view_dhvfkh.*) AS annotation
from airport_heliport.city_pt 
inner join airport_heliport.city on airport_heliport.city_pt.city_id = airport_heliport.city.id
left join master_join master_join_ifipms on airport_heliport.city.id = master_join_ifipms.source_id
left join notes.note_view notes_note_view_dhvfkh on master_join_ifipms.target_id = notes_note_view_dhvfkh.id
group by
    airport_heliport.city_pt.id,
    airport_heliport.city_pt.nilreason,
    airport_heliport.city.name_value,
    airport_heliport.city.name_nilreason;
create index on airport_heliport.city_view (id);
-- CurvePropertyType
-- ['notes.note_view']
-- Snowflake SQL : CurvePropertyType 

DROP MATERIALIZED VIEW IF EXISTS geometry.curve_view CASCADE;

CREATE MATERIALIZED VIEW geometry.curve_view AS
WITH 
center AS (
    SELECT 
		id, 
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 100) AS n, 	
        center
),
arc_line AS (
    SELECT 
        interpolated_points.id,
        ST_MakeLine(point_geom) AS arc_geom
    FROM interpolated_points
    GROUP BY id
),
segment_union AS (
    SELECT 
		id, 
		ST_ReducePrecision(linestring,0.000000000000001) AS geom
    FROM
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 0
    UNION ALL 
    SELECT 
		id, 
		ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 1000)::geometry AS geom
    FROM 
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 1
    UNION ALL 
    SELECT 
		id, 
		ST_ReducePrecision(arc_geom, 0.000000000000001) AS geom
    FROM 
		arc_line
),
merged_segments AS (
    SELECT 
        geometry.curve_pt.id,
        ST_LineMerge(ST_Collect(segment_union.geom)) AS merged_geom,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		nilreason
    FROM 
        geometry.curve_pt
    INNER JOIN 
		master_join_geometry ON  geometry.curve_pt.id = master_join_geometry.source_id 
    INNER JOIN 
        segment_union ON master_join_geometry.target_id = segment_union.id
    GROUP BY geometry.curve_pt.id
)
SELECT 
    merged_segments.id, 
	merged_geom as geom,
	COALESCE(merged_segments.horizontalaccuracy || ' ' || merged_segments.horizontalaccuracy_uom, '(' || merged_segments.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM merged_segments;

CREATE INDEX ON geometry.curve_view (id);
-- DepartureArrivalConditionPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.departurearrivalcondition_view cascade;
create materialized view procedure.departurearrivalcondition_view as
select
    procedure.departurearrivalcondition_pt.id,
    procedure.departurearrivalcondition_pt.nilreason AS departurearrivalcondition_nilreason,
    coalesce(cast(procedure.departurearrivalcondition.minimumcrossingatendreference_value as varchar), '(' || procedure.departurearrivalcondition.minimumcrossingatendreference_nilreason || ')') as minimumcrossingatendreference,
    coalesce(cast(procedure.departurearrivalcondition.maximumcrossingatendreference_value as varchar), '(' || procedure.departurearrivalcondition.maximumcrossingatendreference_nilreason || ')') as maximumcrossingatendreference,
    coalesce(cast(procedure.departurearrivalcondition.minimumenroutealtitude_value as varchar) || ' ' || procedure.departurearrivalcondition.minimumenroutealtitude_uom, '(' || procedure.departurearrivalcondition.minimumenroutealtitude_nilreason || ')') as minimumenroutealtitude,
    coalesce(cast(procedure.departurearrivalcondition.minimumcrossingatend_value as varchar) || ' ' || procedure.departurearrivalcondition.minimumcrossingatend_uom, '(' || procedure.departurearrivalcondition.minimumcrossingatend_nilreason || ')') as minimumcrossingatend,
    coalesce(cast(procedure.departurearrivalcondition.maximumcrossingatend_value as varchar) || ' ' || procedure.departurearrivalcondition.maximumcrossingatend_uom, '(' || procedure.departurearrivalcondition.maximumcrossingatend_nilreason || ')') as maximumcrossingatend,
    shared_aircraftcharacteristic_pt_ylyzod.id AS enginetype,
    jsonb_agg(DISTINCT notes_note_view_mirzwc.*) AS annotation
from procedure.departurearrivalcondition_pt 
inner join procedure.departurearrivalcondition on procedure.departurearrivalcondition_pt.departurearrivalcondition_id = procedure.departurearrivalcondition.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_ylyzod on procedure.departurearrivalcondition.engine_id = shared_aircraftcharacteristic_pt_ylyzod.id
left join master_join master_join_pclfjy on procedure.departurearrivalcondition.id = master_join_pclfjy.source_id
left join notes.note_view notes_note_view_mirzwc on master_join_pclfjy.target_id = notes_note_view_mirzwc.id
group by
    procedure.departurearrivalcondition_pt.id,
    procedure.departurearrivalcondition_pt.nilreason,
    procedure.departurearrivalcondition.minimumcrossingatendreference_value,
    procedure.departurearrivalcondition.minimumcrossingatendreference_nilreason,
    procedure.departurearrivalcondition.maximumcrossingatendreference_value,
    procedure.departurearrivalcondition.maximumcrossingatendreference_nilreason,
    procedure.departurearrivalcondition.minimumenroutealtitude_value,
    procedure.departurearrivalcondition.minimumenroutealtitude_uom,
    procedure.departurearrivalcondition.minimumenroutealtitude_nilreason,
    procedure.departurearrivalcondition.minimumcrossingatend_value,
    procedure.departurearrivalcondition.minimumcrossingatend_uom,
    procedure.departurearrivalcondition.minimumcrossingatend_nilreason,
    procedure.departurearrivalcondition.maximumcrossingatend_value,
    procedure.departurearrivalcondition.maximumcrossingatend_uom,
    procedure.departurearrivalcondition.maximumcrossingatend_nilreason,
    shared_aircraftcharacteristic_pt_ylyzod.id;
create index on procedure.departurearrivalcondition_view (id);
-- DirectFlightClassPropertyType
-- ['notes.note_view']
drop materialized view if exists routes.directflightclass_view cascade;
create materialized view routes.directflightclass_view as
select
    routes.directflightclass_pt.id,
    routes.directflightclass_pt.nilreason AS directflightclass_nilreason,
    coalesce(cast(routes.directflightclass.exceedlength_value as varchar) || ' ' || routes.directflightclass.exceedlength_uom, '(' || routes.directflightclass.exceedlength_nilreason || ')') as exceedlength,
    jsonb_agg(DISTINCT notes_note_view_axyaaf.*) AS annotation
from routes.directflightclass_pt 
inner join routes.directflightclass on routes.directflightclass_pt.directflightclass_id = routes.directflightclass.id
left join master_join master_join_yxejmm on routes.directflightclass.id = master_join_yxejmm.source_id
left join notes.note_view notes_note_view_axyaaf on master_join_yxejmm.target_id = notes_note_view_axyaaf.id
group by
    routes.directflightclass_pt.id,
    routes.directflightclass_pt.nilreason,
    routes.directflightclass.exceedlength_value,
    routes.directflightclass.exceedlength_uom,
    routes.directflightclass.exceedlength_nilreason;
create index on routes.directflightclass_view (id);
-- ElevatedCurvePropertyType
-- ['notes.note_view']
-- Snowflake SQL : ElevatedCurvePropertyType

DROP MATERIALIZED VIEW IF EXISTS geometry.elevatedcurve_view CASCADE;

CREATE MATERIALIZED VIEW geometry.elevatedcurve_view AS
WITH 
center AS (
    SELECT 
		id, 
		point,
		radius,
		start_angle,
		end_angle,
		(end_angle - start_angle) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 2
	UNION ALL 
	SELECT 
		id, 
		point,
		radius,
		0 as start_angle,
		2*PI() as end_angle,
		(0 - 2*PI()) / 100 AS step_size
    FROM geometry.linestring_segment 
	WHERE geometry.linestring_segment.interpretation = 3
),
interpolated_points AS (
    SELECT 
        center.id,
		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
    FROM 
        generate_series(0, 100) AS n, 	
        center
),
arc_line AS (
    SELECT 
        id,
        ST_MakeLine(point_geom) AS arc_geom
    FROM interpolated_points
    GROUP BY id
),
segment_union AS (
    SELECT 
		id, 
		ST_ReducePrecision(linestring,0.000000000000001) AS geom
    FROM
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 0
    UNION ALL 
    SELECT 
		id, 
		ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 1000)::geometry AS geom
    FROM 
		geometry.linestring_segment 
    WHERE 
		geometry.linestring_segment.interpretation = 1
    UNION ALL 
    SELECT 
		id, 
		ST_ReducePrecision(arc_geom, 0.000000000000001) AS geom
    FROM 
		arc_line
),
merged_segments AS (
    SELECT 
        geometry.elevated_curve_pt.id,
        ST_LineMerge(ST_Collect(segment_union.geom)) AS merged_geom,
		elevation,
		elevation_uom,
		elevation_nilreason,
		geoidundulation,
		geoidundulation_uom,
		geoidundulation_nilreason,
		horizontalaccuracy,
		horizontalaccuracy_uom,
		horizontalaccuracy_nilreason,
		verticalaccuracy,
		verticalaccuracy_uom,
		verticalaccuracy_nilreason,
		verticaldatum,
		verticaldatum_nilreason,
		nilreason
    FROM 
        geometry.elevated_curve_pt
    INNER JOIN 
		master_join_geometry ON  geometry.elevated_curve_pt.id = master_join_geometry.source_id 
    INNER JOIN 
        segment_union ON master_join_geometry.target_id  = segment_union.id
    GROUP BY geometry.elevated_curve_pt.id
)
SELECT 
    merged_segments.id,
	merged_geom as geom,
	COALESCE(merged_segments.elevation || ' ' || merged_segments.elevation_uom, '(' || merged_segments.elevation_nilreason || ')') AS elevation,
	COALESCE(merged_segments.geoidundulation || ' ' || merged_segments.geoidundulation_uom, '(' || merged_segments.geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(merged_segments.verticaldatum || ' ' || merged_segments.geoidundulation_uom, '(' || merged_segments.geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(CAST(merged_segments.verticalaccuracy AS varchar), '(' || merged_segments.verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(merged_segments.horizontalaccuracy || ' ' || merged_segments.horizontalaccuracy_uom, '(' || merged_segments.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM merged_segments;

CREATE INDEX ON geometry.elevatedcurve_view (id);
-- ElevatedPointPropertyType
-- ['notes.note_view']
-- Snowflake SQL : ElevatedPointPropertyType

DROP MATERIALIZED VIEW IF EXISTS geometry.elevatedpoint_view CASCADE;

CREATE MATERIALIZED VIEW geometry.elevatedpoint_view AS
SELECT 
    id, 
    point as geom,
	COALESCE(elevation || ' ' || elevation_uom, '(' || elevation_nilreason || ')') AS elevation,
	COALESCE(geoidundulation || ' ' || geoidundulation_uom, '(' || geoidundulation_nilreason || ')') AS geoidUndulation,
	COALESCE(verticaldatum || ' ' || geoidundulation_uom, '(' || geoidundulation_nilreason || ')') AS verticalDatum,
	COALESCE(verticalaccuracy || ' ' || horizontalaccuracy_uom, '(' || verticaldatum_nilreason || ')') AS verticalAccuracy,
	COALESCE(horizontalaccuracy || ' ' || horizontalaccuracy_uom, '(' || horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM geometry.elevated_point_pt;

CREATE INDEX ON geometry.elevatedpoint_view (id);
-- ElevatedSurfacePropertyType
-- ['notes.note_view']
-- -- Snowflake SQL : ElevatedSurfacePropertyType

-- DROP VIEW IF EXISTS geometry.elevatedpoint_view CASCADE;

-- CREATE MATERIALIZED VIEW partial_elevatedsurface_view AS
-- WITH  
-- segment_ref AS(
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		SUBSTRING(
-- 	        curve_ref 
-- 	        FROM '([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$'
-- 	    ) AS uuid
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 4
-- ),
-- segment_value AS(
-- 	SELECT 
-- 		airspace.geoborder.identifier AS uuid,
-- 		geom
-- 	FROM airspace.geoborder
-- 	INNER JOIN public.geoborder_timeslice
-- 		ON airspace.geoborder.id = public.geoborder_timeslice.geoborder_id
-- 	INNER JOIN airspace.geoborder_tsp
-- 		ON public.geoborder_timeslice.geoborder_tsp_id = airspace.geoborder_tsp.id
-- 	INNER JOIN airspace.geoborder_ts
-- 		ON airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
-- 	INNER JOIN public.curve_pt
-- 		ON airspace.geoborder_ts.border_id = public.curve_pt.id
-- 	INNER JOIN geometry.curve_view
-- 		ON public.curve_pt.id = geometry.curve_view.id
-- ),
-- center AS (
--     SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		start_angle,
-- 		end_angle,
-- 		(end_angle - start_angle) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 2
-- 	UNION ALL 
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		0 as start_angle,
-- 		2*PI() as end_angle,
-- 		(0 - 2*PI()) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 3
-- ),
-- interpolated_points AS (
--     SELECT 
--         center.id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
--     FROM 
--         generate_series(0, 256) AS n, 	
--         center
-- ),
-- arc_line AS (
--     SELECT 
--         id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_MakeLine(point_geom) AS geom
--     FROM interpolated_points
--     GROUP BY 
-- 		id, 
-- 		curve_xml_id,
-- 		part, 
-- 		member, 
-- 		sequence, 
-- 		interpretation
-- ),
-- segment_union AS (
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(linestring, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 0
--     UNION ALL 
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 10000)::geometry as geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 1
-- 	UNION ALL
-- 	SELECT
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM
-- 		arc_line
-- 	UNION ALL
-- 	SELECT
-- 		id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM segment_ref
-- 	INNER JOIN segment_value
-- 	ON segment_ref.uuid = segment_value.uuid		
-- ),
-- segement_ownership AS (
-- 	SELECT 
-- 		public.elevated_surface_pt.id,
--         public.elevated_surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point as first_point,
-- 		segment_union.last_point as last_point,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         public.elevated_surface_pt
--     INNER JOIN 
--         public.elevatedsurface_exterior 
--         ON public.elevated_surface_pt.id = public.elevatedsurface_exterior.elevatedsurfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.elevatedsurface_exterior.exteriorlinestring_id = segment_union.id
-- 	UNION ALL
-- 	SELECT 
-- 		public.elevated_surface_pt.id,
--         public.elevated_surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point AS first_point,
-- 		segment_union.last_point AS last_point,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         public.elevated_surface_pt
--     INNER JOIN 
--         public.elevatedsurface_interior 
--         ON public.elevated_surface_pt.id = public.elevatedsurface_interior.elevatedsurfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.elevatedsurface_interior.interiorlinestring_id = segment_union.id
-- ),
-- ordered_segments AS (
--     SELECT 
-- 		id,
--         xml_id, 
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point, 
--         last_point,
-- 		ST_IsClosed(segement_ownership.geom) AS closed,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         segement_ownership
--     ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member, 
-- 		sequence
-- ),
-- connecting_segments AS (
--     SELECT 
--         id,
-- 		xml_id,
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point,
--         last_point,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         ordered_segments
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member,
--         curr.sequence + 0.5 AS sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		NULL AS elevation,
-- 		NULL AS elevation_uom,
-- 		NULL AS elevation_nilreason,
-- 		NULL AS geoidundulation,
-- 		NULL AS geoidundulation_uom,
-- 		NULL AS geoidundulation_nilreason,
-- 		NULL AS horizontalaccuracy,
-- 		NULL AS horizontalaccuracy_uom,
-- 		NULL AS horizontalaccuracy_nilreason,
-- 		NULL AS verticalaccuracy,
-- 		NULL AS verticalaccuracy_uom,
-- 		NULL AS verticalaccuracy_nilreason,
-- 		NULL AS verticaldatum,
-- 		NULL AS verticaldatum_nilreason,
-- 		NULL AS nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.sequence + 1 = next.sequence
-- 		AND curr.member = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member + 0.5 AS member,
--         curr.sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		NULL AS elevation,
-- 		NULL AS elevation_uom,
-- 		NULL AS elevation_nilreason,
-- 		NULL AS geoidundulation,
-- 		NULL AS geoidundulation_uom,
-- 		NULL AS geoidundulation_nilreason,
-- 		NULL AS horizontalaccuracy,
-- 		NULL AS horizontalaccuracy_uom,
-- 		NULL AS horizontalaccuracy_nilreason,
-- 		NULL AS verticalaccuracy,
-- 		NULL AS verticalaccuracy_uom,
-- 		NULL AS verticalaccuracy_nilreason,
-- 		NULL AS verticaldatum,
-- 		NULL AS verticaldatum_nilreason,
-- 		NULL AS nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.member + 1 = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     ORDER BY 
--         xml_id, 
--         part, 
--         member,
--         sequence
-- ),
-- clustered_segments AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         geom,
-- 		ST_ClusterDBSCAN(geom, eps := 0, minpoints := 1) OVER (PARTITION BY xml_id, part)  AS cluster_id,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation != 4
-- 	UNION ALL
--     SELECT 
--         id, 
-- 		xml_id,
-- 		curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         geom,
-- 		Null AS cluster_id,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation = 4
-- 	ORDER BY
-- 		xml_id,
-- 		part, 
-- 		member
-- ),
-- partial_ring AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY_AGG(curve_xml_id) as curve_xml_id,
--         part,
--         MIN(member) AS member,
-- 		MIN(interpretation) AS interpretation,
--         ST_IsClosed(ST_LineMerge(ST_Collect(geom))) AS closed,
--         ST_GeometryType(ST_LineMerge(ST_Collect(geom))) AS type, 
--         ST_LineMerge(ST_Collect(geom)) AS geom,
--         NULL::geometry AS points,
-- 		MAX(elevation) AS elevation,
-- 		MAX(elevation_uom) AS elevation_uom,
-- 		MAX(elevation_nilreason) AS elevation_nilreason,
-- 		MAX(geoidundulation) AS geoidundulation,
-- 		MAX(geoidundulation_uom) AS geoidundulation_uom,
-- 		MAX(geoidundulation_nilreason) AS geoidundulation_nilreason,
-- 		MAX(horizontalaccuracy) AS horizontalaccuracy,
-- 		MAX(horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MAX(horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MAX(verticalaccuracy) AS verticalaccuracy,
-- 		MAX(verticalaccuracy_uom) AS verticalaccuracy_uom,
-- 		MAX(verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
-- 		MAX(verticaldatum) AS verticaldatum,
-- 		MAX(verticaldatum_nilreason) AS verticaldatum_nilreason,
-- 		MAX(nilreason) AS nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation != 4
--     GROUP BY 
-- 		id,
--         xml_id, 
--         part, 
--         cluster_id,
--         horizontalaccuracy, 
--         horizontalaccuracy_uom, 
--         horizontalaccuracy_nilreason,	
--         nilreason
-- 	UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY[curve_xml_id] AS curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         ST_IsClosed(geom) AS closed,
--         ST_GeometryType(geom) AS type, 
-- 		geom AS geom,
-- 		ST_Points(geom) AS points,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation = 4
-- 	ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member
-- ),
-- output AS (
--     SELECT 
--         pr.id, 
--         pr.xml_id,
-- 		pr.curve_xml_id,
--         pr.part,
-- 		ROW_NUMBER() OVER (PARTITION BY xml_id, part ORDER BY id) - 1 AS increment,
-- 		COUNT(*) OVER (PARTITION BY xml_id, part ) AS total_count,
-- 		pr.interpretation,
-- 		pr.points,
--         COALESCE(dumped.geom, pr.geom) AS geom,
-- 		pr.elevation,
-- 		pr.elevation_uom,
-- 		pr.elevation_nilreason,
-- 		pr.geoidundulation,
-- 		pr.geoidundulation_uom,
-- 		pr.geoidundulation_nilreason,
-- 		pr.horizontalaccuracy,
-- 		pr.horizontalaccuracy_uom,
-- 		pr.horizontalaccuracy_nilreason,
-- 		pr.verticalaccuracy,
-- 		pr.verticalaccuracy_uom,
-- 		pr.verticalaccuracy_nilreason,
-- 		pr.verticaldatum,
-- 		pr.verticaldatum_nilreason,
-- 		pr.nilreason
--     FROM 
--         partial_ring pr
--     LEFT JOIN LATERAL (
--         SELECT (ST_Dump(pr.geom)).geom
--         WHERE ST_GeometryType(pr.geom) = 'ST_MultiLineString'
--     ) dumped ON true
-- 	ORDER BY
-- 		xml_id, 
-- 		part, 
-- 		member
-- )
-- SELECT 
-- 	ST_GeometryType(geom),
-- 	output.id, 
-- 	to_jsonb(output.xml_id) AS xml_id,
-- 	to_jsonb(output.curve_xml_id) AS curve_xml_id,
-- 	output.part,
-- 	output.increment,
-- 	output.total_count,
-- 	output.interpretation,
-- 	output.geom,
-- 	output.points,
-- 	output.elevation,
-- 	output.elevation_uom,
-- 	output.elevation_nilreason,
-- 	output.geoidundulation,
-- 	output.geoidundulation_uom,
-- 	output.geoidundulation_nilreason,
-- 	output.horizontalaccuracy,
-- 	output.horizontalaccuracy_uom,
-- 	output.horizontalaccuracy_nilreason,
-- 	output.verticalaccuracy,
-- 	output.verticalaccuracy_uom,
-- 	output.verticalaccuracy_nilreason,
-- 	output.verticaldatum,
-- 	output.verticaldatum_nilreason,
-- 	output.nilreason
-- FROM
-- output;

-- -- R1 : Simple feature, closed
-- -- R2 : Simple feature, unclosed
-- -- G1 : Complex feature wiht a single geoborder, 
-- -- G2 : Complex feature with multiple geoborder,
-- CREATE MATERIALIZED VIEW geometry.elevatedsurface_view AS
-- WITH 
-- g1_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(ring.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(ring.geom)) AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view ring
-- 	ON 
--         ring.xml_id = geoborder.xml_id
-- 		AND
-- 		ring.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE 
-- 		geoborder.total_count = 2
-- 		AND
-- 		geoborder.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.geom, 
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.geom, 
-- 		ring.geom,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_elevated_surface_view.id, 
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		partial_elevated_surface_view.increment,
-- 		partial_elevated_surface_view.interpretation,
-- 		partial_elevated_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view
-- 	WHERE 
-- 		partial_elevated_surface_view.total_count = 2 
-- 		AND
-- 		partial_elevated_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		geoborder.geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom, ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,	ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view geoborder
-- 	JOIN
-- 		partial_elevated_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_elevated_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.elevation,
-- 		geoborder.elevation_uom,
-- 		geoborder.elevation_nilreason,
-- 		geoborder.geoidundulation,
-- 		geoborder.geoidundulation_uom,
-- 		geoborder.geoidundulation_nilreason,
-- 		geoborder.horizontalaccuracy,
-- 		geoborder.horizontalaccuracy_uom,
-- 		geoborder.horizontalaccuracy_nilreason,
-- 		geoborder.verticalaccuracy,
-- 		geoborder.verticalaccuracy_uom,
-- 		geoborder.verticalaccuracy_nilreason,
-- 		geoborder.verticaldatum,
-- 		geoborder.verticaldatum_nilreason,
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_elevated_surface_view.id, 
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		partial_elevated_surface_view.increment,
-- 		partial_elevated_surface_view.interpretation,
-- 		partial_elevated_surface_view.total_count,
-- 		partial_elevated_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM 
-- 		partial_elevated_surface_view
-- 	WHERE 
-- 		partial_elevated_surface_view.total_count > 2 
-- 		AND
-- 		partial_elevated_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment_filtered AS (
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		curr.geom AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.start_segment])) AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment)  
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment])) AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment, curr.start_segment])) AS geom,
-- 		curr.elevation,
-- 		curr.elevation_uom,
-- 		curr.elevation_nilreason,
-- 		curr.geoidundulation,
-- 		curr.geoidundulation_uom,
-- 		curr.geoidundulation_nilreason,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.verticalaccuracy,
-- 		curr.verticalaccuracy_uom,
-- 		curr.verticalaccuracy_nilreason,
-- 		curr.verticaldatum,
-- 		curr.verticaldatum_nilreason,
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 	g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT
-- 		g2_segment.id, 
-- 		g2_segment.xml_id,
-- 		g2_segment.curve_xml_id,
-- 		g2_segment.part,
-- 		g2_segment.increment,
-- 		g2_segment.geom,
-- 		g2_segment.elevation,
-- 		g2_segment.elevation_uom,
-- 		g2_segment.elevation_nilreason,
-- 		g2_segment.geoidundulation,
-- 		g2_segment.geoidundulation_uom,
-- 		g2_segment.geoidundulation_nilreason,
-- 		g2_segment.horizontalaccuracy,
-- 		g2_segment.horizontalaccuracy_uom,
-- 		g2_segment.horizontalaccuracy_nilreason,
-- 		g2_segment.verticalaccuracy,
-- 		g2_segment.verticalaccuracy_uom,
-- 		g2_segment.verticalaccuracy_nilreason,
-- 		g2_segment.verticaldatum,
-- 		g2_segment.verticaldatum_nilreason,
-- 		g2_segment.nilreason
-- 	FROM 
-- 		g2_segment
-- 	WHERE 
-- 		g2_segment.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- r1 AS (
-- 	SELECT
-- 		partial_elevated_surface_view.id,
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		partial_elevated_surface_view.geom,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM
-- 		partial_elevated_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_elevated_surface_view.geom) = true
-- 		AND 
-- 		partial_elevated_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(geom) >= 4
-- ),
-- r2 AS (
-- 	SELECT
-- 		partial_elevated_surface_view.id,
-- 		partial_elevated_surface_view.xml_id,
-- 		partial_elevated_surface_view.curve_xml_id,
-- 		partial_elevated_surface_view.part,
-- 		ST_AddPoint(partial_elevated_surface_view.geom, ST_StartPoint(partial_elevated_surface_view.geom)) AS geom,
-- 		partial_elevated_surface_view.elevation,
-- 		partial_elevated_surface_view.elevation_uom,
-- 		partial_elevated_surface_view.elevation_nilreason,
-- 		partial_elevated_surface_view.geoidundulation,
-- 		partial_elevated_surface_view.geoidundulation_uom,
-- 		partial_elevated_surface_view.geoidundulation_nilreason,
-- 		partial_elevated_surface_view.horizontalaccuracy,
-- 		partial_elevated_surface_view.horizontalaccuracy_uom,
-- 		partial_elevated_surface_view.horizontalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticalaccuracy,
-- 		partial_elevated_surface_view.verticalaccuracy_uom,
-- 		partial_elevated_surface_view.verticalaccuracy_nilreason,
-- 		partial_elevated_surface_view.verticaldatum,
-- 		partial_elevated_surface_view.verticaldatum_nilreason,
-- 		partial_elevated_surface_view.nilreason
-- 	FROM
-- 		partial_elevated_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_elevated_surface_view.geom) = false
-- 		AND 
-- 		partial_elevated_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(ST_AddPoint(partial_elevated_surface_view.geom, ST_StartPoint(partial_elevated_surface_view.geom))) >= 4		
-- ),
-- g1 AS (
-- 	SELECT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.elevation,
-- 		ring.elevation_uom,
-- 		ring.elevation_nilreason,
-- 		ring.geoidundulation,
-- 		ring.geoidundulation_uom,
-- 		ring.geoidundulation_nilreason,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.verticalaccuracy,
-- 		ring.verticalaccuracy_uom,
-- 		ring.verticalaccuracy_nilreason,
-- 		ring.verticaldatum,
-- 		ring.verticaldatum_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		NOT ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- 	UNION ALL
-- 	SELECT DISTINCT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.elevation,
-- 		ring.elevation_uom,
-- 		ring.elevation_nilreason,
-- 		ring.geoidundulation,
-- 		ring.geoidundulation_uom,
-- 		ring.geoidundulation_nilreason,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.verticalaccuracy,
-- 		ring.verticalaccuracy_uom,
-- 		ring.verticalaccuracy_nilreason,
-- 		ring.verticaldatum,
-- 		ring.verticaldatum_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- ),
-- g2 AS (	
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_LineMerge(ST_Collect(g2_segment_filtered.geom)) AS geom,
-- 		MAX(g2_segment_filtered.elevation) AS elevation,
-- 		MAX(g2_segment_filtered.elevation_uom) AS elevation_uom,
-- 		MAX(g2_segment_filtered.elevation_nilreason) AS elevation_nilreason,
-- 		MAX(g2_segment_filtered.geoidundulation) AS geoidundulation,
-- 		MAX(g2_segment_filtered.geoidundulation_uom) AS geoidundulation_uom,
-- 		MAX(g2_segment_filtered.geoidundulation_nilreason) AS geoidundulation_nilreason,
-- 		MAX(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticalaccuracy) AS verticalaccuracy,
-- 		MAX(g2_segment_filtered.verticalaccuracy_uom) AS verticalaccuracy_uom,
-- 		MAX(g2_segment_filtered.verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticaldatum) AS verticaldatum,
-- 		MAX(g2_segment_filtered.verticaldatum_nilreason) AS verticaldatum_nilreason,
-- 		MAX(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = true
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- 	UNION ALL
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_AddPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)), ST_StartPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)))) AS geom,
-- 		MAX(g2_segment_filtered.elevation) AS elevation,
-- 		MAX(g2_segment_filtered.elevation_uom) AS elevation_uom,
-- 		MAX(g2_segment_filtered.elevation_nilreason) AS elevation_nilreason,
-- 		MAX(g2_segment_filtered.geoidundulation) AS geoidundulation,
-- 		MAX(g2_segment_filtered.geoidundulation_uom) AS geoidundulation_uom,
-- 		MAX(g2_segment_filtered.geoidundulation_nilreason) AS geoidundulation_nilreason,
-- 		MAX(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MAX(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticalaccuracy) AS verticalaccuracy,
-- 		MAX(g2_segment_filtered.verticalaccuracy_uom) AS verticalaccuracy_uom,
-- 		MAX(g2_segment_filtered.verticalaccuracy_nilreason) AS verticalaccuracy_nilreason,
-- 		MAX(g2_segment_filtered.verticaldatum) AS verticaldatum,
-- 		MAX(g2_segment_filtered.verticaldatum_nilreason) AS verticaldatum_nilreason,
-- 		MAX(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = false
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- ),
-- combined_data AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
-- 		geom,
-- 		part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         r1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         geom,
--         part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         r2
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         g1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         part,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         g2
-- ),
-- outer_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         ST_MakePolygon(geom) AS geom,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part = 0
-- ),
-- inner_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
-- 		elevation,
-- 		elevation_uom,
-- 		elevation_nilreason,
-- 		geoidundulation,
-- 		geoidundulation_uom,
-- 		geoidundulation_nilreason,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		verticalaccuracy,
-- 		verticalaccuracy_uom,
-- 		verticalaccuracy_nilreason,
-- 		verticaldatum,
-- 		verticaldatum_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part <> 0
-- )
-- SELECT 
--     outer_shells.id, 
--     ST_MakePolygon(
--         ST_ExteriorRing(outer_shells.geom),
--         ARRAY(
--             SELECT ST_ExteriorRing(inner_shells.geom)
--             FROM inner_shells 
--             WHERE inner_shells.id = outer_shells.id
--         )
--     ) AS geom,
-- 	COALESCE(outer_shells.elevation || ' ' || outer_shells.elevation_uom, '(' || outer_shells.elevation_nilreason || ')') AS elevation,
-- 	COALESCE(outer_shells.geoidundulation || ' ' || outer_shells.geoidundulation_uom, '(' || outer_shells.geoidundulation_nilreason || ')') AS geoidUndulation,
-- 	COALESCE(outer_shells.verticaldatum || ' ' || outer_shells.outer_shells.geoidundulation_uom, '(' || outer_shells.geoidundulation_nilreason || ')') AS verticalDatum,
-- 	COALESCE(CAST(outer_shells.verticalaccuracy AS varchar), '(' || outer_shells.verticaldatum_nilreason || ')') AS verticalAccuracy,
-- 	COALESCE(outer_shells.horizontalaccuracy || ' ' || outer_shells.horizontalaccuracy_uom, '(' || outer_shells.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
-- FROM 
-- outer_shells;

-- CREATE INDEX ON geometry.elevatedsurface_view (id);

DROP MATERIALIZED VIEW IF EXISTS geometry.elevatedsurface_view CASCADE;

CREATE MATERIALIZED VIEW geometry.elevatedsurface_view AS

SELECT 
0 AS id,
ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 4326) AS geom,
0 AS elevation,
0 AS geoidUndulation,
0 AS verticalDatum,
0 AS verticalAccuracy,
0 AS horizontalAccuracy;
-- EquipmentUnavailableAdjustmentColumnPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.equipmentunavailableadjustmentcolumn_view cascade;
create materialized view procedure.equipmentunavailableadjustmentcolumn_view as
select
    procedure.equipmentunavailableadjustmentcolumn_pt.id,
    procedure.equipmentunavailableadjustmentcolumn_pt.nilreason AS equipmentunavailableadjustmentcolumn_nilreason,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_nilreason || ')') as guidanceequipment,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_nilreason || ')') as landingsystemlights,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_nilreason || ')') as equipmentrvr,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_value as varchar), '(' || procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_nilreason || ')') as approachlightinginoperative,
    coalesce(cast(procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_value as varchar) || ' ' || procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_uom, '(' || procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_nilreason || ')') as visibilityadjustment,
    jsonb_agg(DISTINCT notes_note_view_kbzaut.*) AS annotation
from procedure.equipmentunavailableadjustmentcolumn_pt 
inner join procedure.equipmentunavailableadjustmentcolumn on procedure.equipmentunavailableadjustmentcolumn_pt.equipmentunavailableadjustmentcolumn_id = procedure.equipmentunavailableadjustmentcolumn.id
left join master_join master_join_skrqzr on procedure.equipmentunavailableadjustmentcolumn.id = master_join_skrqzr.source_id
left join notes.note_view notes_note_view_kbzaut on master_join_skrqzr.target_id = notes_note_view_kbzaut.id
group by
    procedure.equipmentunavailableadjustmentcolumn_pt.id,
    procedure.equipmentunavailableadjustmentcolumn_pt.nilreason,
    procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_value,
    procedure.equipmentunavailableadjustmentcolumn.guidanceequipment_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_value,
    procedure.equipmentunavailableadjustmentcolumn.landingsystemlights_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_value,
    procedure.equipmentunavailableadjustmentcolumn.equipmentrvr_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_value,
    procedure.equipmentunavailableadjustmentcolumn.approachlightinginoperative_nilreason,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_value,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_uom,
    procedure.equipmentunavailableadjustmentcolumn.visibilityadjustment_nilreason;
create index on procedure.equipmentunavailableadjustmentcolumn_view (id);
-- EquipmentUnavailableAdjustmentPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.equipmentunavailableadjustment_view cascade;
create materialized view procedure.equipmentunavailableadjustment_view as
select
    procedure.equipmentunavailableadjustment_pt.id,
    procedure.equipmentunavailableadjustment_pt.nilreason AS equipmentunavailableadjustment_nilreason,
    coalesce(cast(procedure.equipmentunavailableadjustment.type_value as varchar), '(' || procedure.equipmentunavailableadjustment.type_nilreason || ')') as type,
    coalesce(cast(procedure.equipmentunavailableadjustment.approachlightinginoperative_value as varchar), '(' || procedure.equipmentunavailableadjustment.approachlightinginoperative_nilreason || ')') as approachlightinginoperative,
    jsonb_agg(DISTINCT procedure_equipmentunavailableadjustmentcolumn_pt_zrfxcq.id) AS adjustmentinopcol,
    jsonb_agg(DISTINCT notes_note_view_mlejmz.*) AS annotation
from procedure.equipmentunavailableadjustment_pt 
inner join procedure.equipmentunavailableadjustment on procedure.equipmentunavailableadjustment_pt.equipmentunavailableadjustment_id = procedure.equipmentunavailableadjustment.id
left join master_join master_join_shzfxc on procedure.equipmentunavailableadjustment.id = master_join_shzfxc.source_id
left join procedure.equipmentunavailableadjustmentcolumn_pt procedure_equipmentunavailableadjustmentcolumn_pt_zrfxcq on master_join_shzfxc.target_id = procedure_equipmentunavailableadjustmentcolumn_pt_zrfxcq.id
left join master_join master_join_bbirye on procedure.equipmentunavailableadjustment.id = master_join_bbirye.source_id
left join notes.note_view notes_note_view_mlejmz on master_join_bbirye.target_id = notes_note_view_mlejmz.id
group by
    procedure.equipmentunavailableadjustment_pt.id,
    procedure.equipmentunavailableadjustment_pt.nilreason,
    procedure.equipmentunavailableadjustment.type_value,
    procedure.equipmentunavailableadjustment.type_nilreason,
    procedure.equipmentunavailableadjustment.approachlightinginoperative_value,
    procedure.equipmentunavailableadjustment.approachlightinginoperative_nilreason;
create index on procedure.equipmentunavailableadjustment_view (id);
-- FASDataBlockPropertyType
-- ['notes.note_view']
drop materialized view if exists public.fasdatablock_view cascade;
create materialized view public.fasdatablock_view as
select
    public.fasdatablock_pt.id,
    public.fasdatablock_pt.nilreason AS fasdatablock_nilreason,
    coalesce(cast(public.fasdatablock.horizontalalarmlimit_value as varchar), '(' || public.fasdatablock.horizontalalarmlimit_nilreason || ')') as horizontalalarmlimit,
    coalesce(cast(public.fasdatablock.verticalalarmlimit_value as varchar), '(' || public.fasdatablock.verticalalarmlimit_nilreason || ')') as verticalalarmlimit,
    coalesce(cast(public.fasdatablock.crcremainder_value as varchar), '(' || public.fasdatablock.crcremainder_nilreason || ')') as crcremainder,
    coalesce(cast(public.fasdatablock.operationtype_value as varchar), '(' || public.fasdatablock.operationtype_nilreason || ')') as operationtype,
    coalesce(cast(public.fasdatablock.serviceprovidersbas_value as varchar), '(' || public.fasdatablock.serviceprovidersbas_nilreason || ')') as serviceprovidersbas,
    coalesce(cast(public.fasdatablock.approachperformancedesignator_value as varchar), '(' || public.fasdatablock.approachperformancedesignator_nilreason || ')') as approachperformancedesignator,
    coalesce(cast(public.fasdatablock.referencepathdataselector_value as varchar), '(' || public.fasdatablock.referencepathdataselector_nilreason || ')') as referencepathdataselector,
    coalesce(cast(public.fasdatablock.thresholdcoursewidth_value as varchar) || ' ' || public.fasdatablock.thresholdcoursewidth_uom, '(' || public.fasdatablock.thresholdcoursewidth_nilreason || ')') as thresholdcoursewidth,
    coalesce(cast(public.fasdatablock.lengthoffset_value as varchar) || ' ' || public.fasdatablock.lengthoffset_uom, '(' || public.fasdatablock.lengthoffset_nilreason || ')') as lengthoffset,
    jsonb_agg(DISTINCT notes_note_view_lgodah.*) AS annotation
from public.fasdatablock_pt 
inner join public.fasdatablock on public.fasdatablock_pt.fasdatablock_id = public.fasdatablock.id
left join master_join master_join_ptbyqk on public.fasdatablock.id = master_join_ptbyqk.source_id
left join notes.note_view notes_note_view_lgodah on master_join_ptbyqk.target_id = notes_note_view_lgodah.id
group by
    public.fasdatablock_pt.id,
    public.fasdatablock_pt.nilreason,
    public.fasdatablock.horizontalalarmlimit_value,
    public.fasdatablock.horizontalalarmlimit_nilreason,
    public.fasdatablock.verticalalarmlimit_value,
    public.fasdatablock.verticalalarmlimit_nilreason,
    public.fasdatablock.crcremainder_value,
    public.fasdatablock.crcremainder_nilreason,
    public.fasdatablock.operationtype_value,
    public.fasdatablock.operationtype_nilreason,
    public.fasdatablock.serviceprovidersbas_value,
    public.fasdatablock.serviceprovidersbas_nilreason,
    public.fasdatablock.approachperformancedesignator_value,
    public.fasdatablock.approachperformancedesignator_nilreason,
    public.fasdatablock.referencepathdataselector_value,
    public.fasdatablock.referencepathdataselector_nilreason,
    public.fasdatablock.thresholdcoursewidth_value,
    public.fasdatablock.thresholdcoursewidth_uom,
    public.fasdatablock.thresholdcoursewidth_nilreason,
    public.fasdatablock.lengthoffset_value,
    public.fasdatablock.lengthoffset_uom,
    public.fasdatablock.lengthoffset_nilreason;
create index on public.fasdatablock_view (id);
-- FinalProfilePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.finalprofile_view cascade;
create materialized view procedure.finalprofile_view as
select
    procedure.finalprofile_pt.id,
    procedure.finalprofile_pt.nilreason AS finalprofile_nilreason,
    jsonb_agg(DISTINCT procedure_approachaltitudetable_pt_hgnqas.id) AS altitude,
    jsonb_agg(DISTINCT procedure_approachdistancetable_pt_rgzhcl.id) AS distance,
    jsonb_agg(DISTINCT procedure_approachtimingtable_pt_xodanw.id) AS timing,
    jsonb_agg(DISTINCT notes_note_view_mtlnxp.*) AS annotation
from procedure.finalprofile_pt 
inner join procedure.finalprofile on procedure.finalprofile_pt.finalprofile_id = procedure.finalprofile.id
left join master_join master_join_lujflx on procedure.finalprofile.id = master_join_lujflx.source_id
left join procedure.approachaltitudetable_pt procedure_approachaltitudetable_pt_hgnqas on master_join_lujflx.target_id = procedure_approachaltitudetable_pt_hgnqas.id
left join master_join master_join_bjxddn on procedure.finalprofile.id = master_join_bjxddn.source_id
left join procedure.approachdistancetable_pt procedure_approachdistancetable_pt_rgzhcl on master_join_bjxddn.target_id = procedure_approachdistancetable_pt_rgzhcl.id
left join master_join master_join_tsmivu on procedure.finalprofile.id = master_join_tsmivu.source_id
left join procedure.approachtimingtable_pt procedure_approachtimingtable_pt_xodanw on master_join_tsmivu.target_id = procedure_approachtimingtable_pt_xodanw.id
left join master_join master_join_lrcrzr on procedure.finalprofile.id = master_join_lrcrzr.source_id
left join notes.note_view notes_note_view_mtlnxp on master_join_lrcrzr.target_id = notes_note_view_mtlnxp.id
group by
    procedure.finalprofile_pt.id,
    procedure.finalprofile_pt.nilreason;
create index on procedure.finalprofile_view (id);
-- FlightCharacteristicPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.flightcharacteristic_view cascade;
create materialized view shared.flightcharacteristic_view as
select
    shared.flightcharacteristic_pt.id,
    shared.flightcharacteristic_pt.nilreason AS flightcharacteristic_nilreason,
    coalesce(cast(shared.flightcharacteristic.type_value as varchar), '(' || shared.flightcharacteristic.type_nilreason || ')') as type,
    coalesce(cast(shared.flightcharacteristic.rule_value as varchar), '(' || shared.flightcharacteristic.rule_nilreason || ')') as rule,
    coalesce(cast(shared.flightcharacteristic.status_value as varchar), '(' || shared.flightcharacteristic.status_nilreason || ')') as status,
    coalesce(cast(shared.flightcharacteristic.military_value as varchar), '(' || shared.flightcharacteristic.military_nilreason || ')') as military,
    coalesce(cast(shared.flightcharacteristic.origin_value as varchar), '(' || shared.flightcharacteristic.origin_nilreason || ')') as origin,
    coalesce(cast(shared.flightcharacteristic.purpose_value as varchar), '(' || shared.flightcharacteristic.purpose_nilreason || ')') as purpose,
    jsonb_agg(DISTINCT notes_note_view_dwvexe.*) AS annotation
from shared.flightcharacteristic_pt 
inner join shared.flightcharacteristic on shared.flightcharacteristic_pt.flightcharacteristic_id = shared.flightcharacteristic.id
left join master_join master_join_eiwgvm on shared.flightcharacteristic.id = master_join_eiwgvm.source_id
left join notes.note_view notes_note_view_dwvexe on master_join_eiwgvm.target_id = notes_note_view_dwvexe.id
group by
    shared.flightcharacteristic_pt.id,
    shared.flightcharacteristic_pt.nilreason,
    shared.flightcharacteristic.type_value,
    shared.flightcharacteristic.type_nilreason,
    shared.flightcharacteristic.rule_value,
    shared.flightcharacteristic.rule_nilreason,
    shared.flightcharacteristic.status_value,
    shared.flightcharacteristic.status_nilreason,
    shared.flightcharacteristic.military_value,
    shared.flightcharacteristic.military_nilreason,
    shared.flightcharacteristic.origin_value,
    shared.flightcharacteristic.origin_nilreason,
    shared.flightcharacteristic.purpose_value,
    shared.flightcharacteristic.purpose_nilreason;
create index on shared.flightcharacteristic_view (id);
-- FlightConditionCircumstancePropertyType
-- ['notes.note_view']
drop materialized view if exists routes.flightconditioncircumstance_view cascade;
create materialized view routes.flightconditioncircumstance_view as
select
    routes.flightconditioncircumstance_pt.id,
    routes.flightconditioncircumstance_pt.nilreason AS flightconditioncircumstance_nilreason,
    coalesce(cast(routes.flightconditioncircumstance.referencelocation_value as varchar), '(' || routes.flightconditioncircumstance.referencelocation_nilreason || ')') as referencelocation,
    coalesce(cast(routes.flightconditioncircumstance.relationwithlocation_value as varchar), '(' || routes.flightconditioncircumstance.relationwithlocation_nilreason || ')') as relationwithlocation,
    jsonb_agg(DISTINCT notes_note_view_bbhbzr.*) AS annotation
from routes.flightconditioncircumstance_pt 
inner join routes.flightconditioncircumstance on routes.flightconditioncircumstance_pt.flightconditioncircumstance_id = routes.flightconditioncircumstance.id
left join master_join master_join_nrmcms on routes.flightconditioncircumstance.id = master_join_nrmcms.source_id
left join notes.note_view notes_note_view_bbhbzr on master_join_nrmcms.target_id = notes_note_view_bbhbzr.id
group by
    routes.flightconditioncircumstance_pt.id,
    routes.flightconditioncircumstance_pt.nilreason,
    routes.flightconditioncircumstance.referencelocation_value,
    routes.flightconditioncircumstance.referencelocation_nilreason,
    routes.flightconditioncircumstance.relationwithlocation_value,
    routes.flightconditioncircumstance.relationwithlocation_nilreason;
create index on routes.flightconditioncircumstance_view (id);
-- FlightRestrictionLevelPropertyType
-- ['notes.note_view']
drop materialized view if exists routes.flightrestrictionlevel_view cascade;
create materialized view routes.flightrestrictionlevel_view as
select
    routes.flightrestrictionlevel_pt.id,
    routes.flightrestrictionlevel_pt.nilreason AS flightrestrictionlevel_nilreason,
    coalesce(cast(routes.flightrestrictionlevel.upperlevelreference_value as varchar), '(' || routes.flightrestrictionlevel.upperlevelreference_nilreason || ')') as upperlevelreference,
    coalesce(cast(routes.flightrestrictionlevel.lowerlevelreference_value as varchar), '(' || routes.flightrestrictionlevel.lowerlevelreference_nilreason || ')') as lowerlevelreference,
    coalesce(cast(routes.flightrestrictionlevel.upperlevel_value as varchar) || ' ' || routes.flightrestrictionlevel.upperlevel_uom, '(' || routes.flightrestrictionlevel.upperlevel_nilreason || ')') as upperlevel,
    coalesce(cast(routes.flightrestrictionlevel.lowerlevel_value as varchar) || ' ' || routes.flightrestrictionlevel.lowerlevel_uom, '(' || routes.flightrestrictionlevel.lowerlevel_nilreason || ')') as lowerlevel,
    jsonb_agg(DISTINCT notes_note_view_martdr.*) AS annotation
from routes.flightrestrictionlevel_pt 
inner join routes.flightrestrictionlevel on routes.flightrestrictionlevel_pt.flightrestrictionlevel_id = routes.flightrestrictionlevel.id
left join master_join master_join_luchcw on routes.flightrestrictionlevel.id = master_join_luchcw.source_id
left join notes.note_view notes_note_view_martdr on master_join_luchcw.target_id = notes_note_view_martdr.id
group by
    routes.flightrestrictionlevel_pt.id,
    routes.flightrestrictionlevel_pt.nilreason,
    routes.flightrestrictionlevel.upperlevelreference_value,
    routes.flightrestrictionlevel.upperlevelreference_nilreason,
    routes.flightrestrictionlevel.lowerlevelreference_value,
    routes.flightrestrictionlevel.lowerlevelreference_nilreason,
    routes.flightrestrictionlevel.upperlevel_value,
    routes.flightrestrictionlevel.upperlevel_uom,
    routes.flightrestrictionlevel.upperlevel_nilreason,
    routes.flightrestrictionlevel.lowerlevel_value,
    routes.flightrestrictionlevel.lowerlevel_uom,
    routes.flightrestrictionlevel.lowerlevel_nilreason;
create index on routes.flightrestrictionlevel_view (id);
-- FuelPropertyType
-- ['notes.note_view']
drop materialized view if exists service.fuel_view cascade;
create materialized view service.fuel_view as
select
    service.fuel_pt.id,
    service.fuel_pt.nilreason AS fuel_nilreason,
    coalesce(cast(service.fuel.category_value as varchar), '(' || service.fuel.category_nilreason || ')') as category,
    jsonb_agg(DISTINCT notes_note_view_wbkzyk.*) AS annotation
from service.fuel_pt 
inner join service.fuel on service.fuel_pt.fuel_id = service.fuel.id
left join master_join master_join_ruivxl on service.fuel.id = master_join_ruivxl.source_id
left join notes.note_view notes_note_view_wbkzyk on master_join_ruivxl.target_id = notes_note_view_wbkzyk.id
group by
    service.fuel_pt.id,
    service.fuel_pt.nilreason,
    service.fuel.category_value,
    service.fuel.category_nilreason;
create index on service.fuel_view (id);
-- HoldingPatternDistancePropertyType
-- ['notes.note_view']
drop materialized view if exists holding.holdingpatterndistance_view cascade;
create materialized view holding.holdingpatterndistance_view as
select
    holding.holdingpatterndistance_pt.id,
    holding.holdingpatterndistance_pt.nilreason AS holdingpatterndistance_nilreason,
    coalesce(cast(holding.holdingpatterndistance.length_value as varchar) || ' ' || holding.holdingpatterndistance.length_uom, '(' || holding.holdingpatterndistance.length_nilreason || ')') as length,
    jsonb_agg(DISTINCT notes_note_view_vdxtsi.*) AS annotation
from holding.holdingpatterndistance_pt 
inner join holding.holdingpatterndistance on holding.holdingpatterndistance_pt.holdingpatterndistance_id = holding.holdingpatterndistance.id
left join master_join master_join_lgznib on holding.holdingpatterndistance.id = master_join_lgznib.source_id
left join notes.note_view notes_note_view_vdxtsi on master_join_lgznib.target_id = notes_note_view_vdxtsi.id
group by
    holding.holdingpatterndistance_pt.id,
    holding.holdingpatterndistance_pt.nilreason,
    holding.holdingpatterndistance.length_value,
    holding.holdingpatterndistance.length_uom,
    holding.holdingpatterndistance.length_nilreason;
create index on holding.holdingpatterndistance_view (id);
-- HoldingPatternDurationPropertyType
-- ['notes.note_view']
drop materialized view if exists holding.holdingpatternduration_view cascade;
create materialized view holding.holdingpatternduration_view as
select
    holding.holdingpatternduration_pt.id,
    holding.holdingpatternduration_pt.nilreason AS holdingpatternduration_nilreason,
    coalesce(cast(holding.holdingpatternduration.duration_value as varchar) || ' ' || holding.holdingpatternduration.duration_uom, '(' || holding.holdingpatternduration.duration_nilreason || ')') as duration,
    jsonb_agg(DISTINCT notes_note_view_foudxw.*) AS annotation
from holding.holdingpatternduration_pt 
inner join holding.holdingpatternduration on holding.holdingpatternduration_pt.holdingpatternduration_id = holding.holdingpatternduration.id
left join master_join master_join_madnnk on holding.holdingpatternduration.id = master_join_madnnk.source_id
left join notes.note_view notes_note_view_foudxw on master_join_madnnk.target_id = notes_note_view_foudxw.id
group by
    holding.holdingpatternduration_pt.id,
    holding.holdingpatternduration_pt.nilreason,
    holding.holdingpatternduration.duration_value,
    holding.holdingpatternduration.duration_uom,
    holding.holdingpatternduration.duration_nilreason;
create index on holding.holdingpatternduration_view (id);
-- HoldingUsePropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.holdinguse_view cascade;
create materialized view procedure.holdinguse_view as
select
    procedure.holdinguse_pt.id,
    procedure.holdinguse_pt.nilreason AS holdinguse_nilreason,
    coalesce(cast(procedure.holdinguse.holdinguse_value as varchar), '(' || procedure.holdinguse.holdinguse_nilreason || ')') as holdinguse,
    coalesce(cast(procedure.holdinguse.instruction_value as varchar), '(' || procedure.holdinguse.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.holdinguse.instructionaltitudereference_value as varchar), '(' || procedure.holdinguse.instructionaltitudereference_nilreason || ')') as instructionaltitudereference,
    coalesce(cast(procedure.holdinguse.instructedaltitude_value as varchar) || ' ' || procedure.holdinguse.instructedaltitude_uom, '(' || procedure.holdinguse.instructedaltitude_nilreason || ')') as instructedaltitude,
    coalesce(cast(holding_holdingpattern_pt_lgkzjf.title as varchar), '(' || holding_holdingpattern_pt_lgkzjf.nilreason[1] || ')') AS theholdingpattern,
    holding_holdingpattern_pt_lgkzjf.href AS theholdingpattern_href,
    jsonb_agg(DISTINCT notes_note_view_uvbatb.*) AS annotation
from procedure.holdinguse_pt 
inner join procedure.holdinguse on procedure.holdinguse_pt.holdinguse_id = procedure.holdinguse.id
left join holding.holdingpattern_pt holding_holdingpattern_pt_lgkzjf on procedure.holdinguse.theholdingpattern_id = holding_holdingpattern_pt_lgkzjf.id
left join master_join master_join_dfhxok on procedure.holdinguse.id = master_join_dfhxok.source_id
left join notes.note_view notes_note_view_uvbatb on master_join_dfhxok.target_id = notes_note_view_uvbatb.id
group by
    procedure.holdinguse_pt.id,
    procedure.holdinguse_pt.nilreason,
    procedure.holdinguse.holdinguse_value,
    procedure.holdinguse.holdinguse_nilreason,
    procedure.holdinguse.instruction_value,
    procedure.holdinguse.instruction_nilreason,
    procedure.holdinguse.instructionaltitudereference_value,
    procedure.holdinguse.instructionaltitudereference_nilreason,
    procedure.holdinguse.instructedaltitude_value,
    procedure.holdinguse.instructedaltitude_uom,
    procedure.holdinguse.instructedaltitude_nilreason,
    holding_holdingpattern_pt_lgkzjf.title,
    holding_holdingpattern_pt_lgkzjf.nilreason[1],
    holding_holdingpattern_pt_lgkzjf.href;
create index on procedure.holdinguse_view (id);
-- LandingTakeoffAreaCollectionPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.landingtakeoffareacollection_view cascade;
create materialized view procedure.landingtakeoffareacollection_view as
select
    procedure.landingtakeoffareacollection_pt.id,
    procedure.landingtakeoffareacollection_pt.nilreason AS landingtakeoffareacollection_nilreason,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_hvhudy.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_hvhudy.title AS varchar), '(' || airport_heliport_runwaydirection_pt_hvhudy.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_hvhudy.href)) AS runway,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_touchdownliftoff_pt_wxfyhc.id,
    'title', coalesce(cast(airport_heliport_touchdownliftoff_pt_wxfyhc.title AS varchar), '(' || airport_heliport_touchdownliftoff_pt_wxfyhc.nilreason[1] || ')'),
    'href', airport_heliport_touchdownliftoff_pt_wxfyhc.href)) AS tlof,
    jsonb_agg(DISTINCT notes_note_view_ojrpdz.*) AS annotation
from procedure.landingtakeoffareacollection_pt 
inner join procedure.landingtakeoffareacollection on procedure.landingtakeoffareacollection_pt.landingtakeoffareacollection_id = procedure.landingtakeoffareacollection.id
left join master_join master_join_zkbgjq on procedure.landingtakeoffareacollection.id = master_join_zkbgjq.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_hvhudy on master_join_zkbgjq.target_id = airport_heliport_runwaydirection_pt_hvhudy.id
left join master_join master_join_rygrbo on procedure.landingtakeoffareacollection.id = master_join_rygrbo.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_wxfyhc on master_join_rygrbo.target_id = airport_heliport_touchdownliftoff_pt_wxfyhc.id
left join master_join master_join_vohieb on procedure.landingtakeoffareacollection.id = master_join_vohieb.source_id
left join notes.note_view notes_note_view_ojrpdz on master_join_vohieb.target_id = notes_note_view_ojrpdz.id
group by
    procedure.landingtakeoffareacollection_pt.id,
    procedure.landingtakeoffareacollection_pt.nilreason;
create index on procedure.landingtakeoffareacollection_view (id);
-- LightActivationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.lightactivation_view cascade;
create materialized view airport_heliport.lightactivation_view as
select
    airport_heliport.lightactivation_pt.id,
    airport_heliport.lightactivation_pt.nilreason AS lightactivation_nilreason,
    coalesce(cast(airport_heliport.lightactivation.clicks_value as varchar), '(' || airport_heliport.lightactivation.clicks_nilreason || ')') as clicks,
    coalesce(cast(airport_heliport.lightactivation.intensitylevel_value as varchar), '(' || airport_heliport.lightactivation.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.lightactivation.activation_value as varchar), '(' || airport_heliport.lightactivation.activation_nilreason || ')') as activation,
    jsonb_agg(DISTINCT notes_note_view_ustpnp.*) AS annotation
from airport_heliport.lightactivation_pt 
inner join airport_heliport.lightactivation on airport_heliport.lightactivation_pt.lightactivation_id = airport_heliport.lightactivation.id
left join master_join master_join_gdahgy on airport_heliport.lightactivation.id = master_join_gdahgy.source_id
left join notes.note_view notes_note_view_ustpnp on master_join_gdahgy.target_id = notes_note_view_ustpnp.id
group by
    airport_heliport.lightactivation_pt.id,
    airport_heliport.lightactivation_pt.nilreason,
    airport_heliport.lightactivation.clicks_value,
    airport_heliport.lightactivation.clicks_nilreason,
    airport_heliport.lightactivation.intensitylevel_value,
    airport_heliport.lightactivation.intensitylevel_nilreason,
    airport_heliport.lightactivation.activation_value,
    airport_heliport.lightactivation.activation_nilreason;
create index on airport_heliport.lightactivation_view (id);
-- MeteorologyPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.meteorology_view cascade;
create materialized view shared.meteorology_view as
select
    shared.meteorology_pt.id,
    shared.meteorology_pt.nilreason AS meteorology_nilreason,
    coalesce(cast(shared.meteorology.flightconditions_value as varchar), '(' || shared.meteorology.flightconditions_nilreason || ')') as flightconditions,
    coalesce(cast(shared.meteorology.visibilityinterpretation_value as varchar), '(' || shared.meteorology.visibilityinterpretation_nilreason || ')') as visibilityinterpretation,
    coalesce(cast(shared.meteorology.runwayvisualrangeinterpretation_value as varchar), '(' || shared.meteorology.runwayvisualrangeinterpretation_nilreason || ')') as runwayvisualrangeinterpretation,
    coalesce(cast(shared.meteorology.visibility_value as varchar) || ' ' || shared.meteorology.visibility_uom, '(' || shared.meteorology.visibility_nilreason || ')') as visibility,
    coalesce(cast(shared.meteorology.runwayvisualrange_value as varchar) || ' ' || shared.meteorology.runwayvisualrange_uom, '(' || shared.meteorology.runwayvisualrange_nilreason || ')') as runwayvisualrange,
    jsonb_agg(DISTINCT notes_note_view_wgwbmq.*) AS annotation
from shared.meteorology_pt 
inner join shared.meteorology on shared.meteorology_pt.meteorology_id = shared.meteorology.id
left join master_join master_join_hdppbz on shared.meteorology.id = master_join_hdppbz.source_id
left join notes.note_view notes_note_view_wgwbmq on master_join_hdppbz.target_id = notes_note_view_wgwbmq.id
group by
    shared.meteorology_pt.id,
    shared.meteorology_pt.nilreason,
    shared.meteorology.flightconditions_value,
    shared.meteorology.flightconditions_nilreason,
    shared.meteorology.visibilityinterpretation_value,
    shared.meteorology.visibilityinterpretation_nilreason,
    shared.meteorology.runwayvisualrangeinterpretation_value,
    shared.meteorology.runwayvisualrangeinterpretation_nilreason,
    shared.meteorology.visibility_value,
    shared.meteorology.visibility_uom,
    shared.meteorology.visibility_nilreason,
    shared.meteorology.runwayvisualrange_value,
    shared.meteorology.runwayvisualrange_uom,
    shared.meteorology.runwayvisualrange_nilreason;
create index on shared.meteorology_view (id);
-- MinimaPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.minima_view cascade;
create materialized view procedure.minima_view as
select
    procedure.minima_pt.id,
    procedure.minima_pt.nilreason AS minima_nilreason,
    coalesce(cast(procedure.minima.altitudecode_value as varchar), '(' || procedure.minima.altitudecode_nilreason || ')') as altitudecode,
    coalesce(cast(procedure.minima.altitudereference_value as varchar), '(' || procedure.minima.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(procedure.minima.heightcode_value as varchar), '(' || procedure.minima.heightcode_nilreason || ')') as heightcode,
    coalesce(cast(procedure.minima.heightreference_value as varchar), '(' || procedure.minima.heightreference_nilreason || ')') as heightreference,
    coalesce(cast(procedure.minima.mandatoryrvr_value as varchar), '(' || procedure.minima.mandatoryrvr_nilreason || ')') as mandatoryrvr,
    coalesce(cast(procedure.minima.remotealtimeterminima_value as varchar), '(' || procedure.minima.remotealtimeterminima_nilreason || ')') as remotealtimeterminima,
    coalesce(cast(procedure.minima.altitude_value as varchar) || ' ' || procedure.minima.altitude_uom, '(' || procedure.minima.altitude_nilreason || ')') as altitude,
    coalesce(cast(procedure.minima.height_value as varchar) || ' ' || procedure.minima.height_uom, '(' || procedure.minima.height_nilreason || ')') as height,
    coalesce(cast(procedure.minima.militaryheight_value as varchar) || ' ' || procedure.minima.militaryheight_uom, '(' || procedure.minima.militaryheight_nilreason || ')') as militaryheight,
    coalesce(cast(procedure.minima.radioheight_value as varchar) || ' ' || procedure.minima.radioheight_uom, '(' || procedure.minima.radioheight_nilreason || ')') as radioheight,
    coalesce(cast(procedure.minima.visibility_value as varchar) || ' ' || procedure.minima.visibility_uom, '(' || procedure.minima.visibility_nilreason || ')') as visibility,
    coalesce(cast(procedure.minima.militaryvisibility_value as varchar) || ' ' || procedure.minima.militaryvisibility_uom, '(' || procedure.minima.militaryvisibility_nilreason || ')') as militaryvisibility,
    jsonb_agg(DISTINCT procedure_equipmentunavailableadjustment_pt_awespa.id) AS adjustmentinop,
    jsonb_agg(DISTINCT notes_note_view_ibwquw.*) AS annotation
from procedure.minima_pt 
inner join procedure.minima on procedure.minima_pt.minima_id = procedure.minima.id
left join master_join master_join_fejxsg on procedure.minima.id = master_join_fejxsg.source_id
left join procedure.equipmentunavailableadjustment_pt procedure_equipmentunavailableadjustment_pt_awespa on master_join_fejxsg.target_id = procedure_equipmentunavailableadjustment_pt_awespa.id
left join master_join master_join_bdpwan on procedure.minima.id = master_join_bdpwan.source_id
left join notes.note_view notes_note_view_ibwquw on master_join_bdpwan.target_id = notes_note_view_ibwquw.id
group by
    procedure.minima_pt.id,
    procedure.minima_pt.nilreason,
    procedure.minima.altitudecode_value,
    procedure.minima.altitudecode_nilreason,
    procedure.minima.altitudereference_value,
    procedure.minima.altitudereference_nilreason,
    procedure.minima.heightcode_value,
    procedure.minima.heightcode_nilreason,
    procedure.minima.heightreference_value,
    procedure.minima.heightreference_nilreason,
    procedure.minima.mandatoryrvr_value,
    procedure.minima.mandatoryrvr_nilreason,
    procedure.minima.remotealtimeterminima_value,
    procedure.minima.remotealtimeterminima_nilreason,
    procedure.minima.altitude_value,
    procedure.minima.altitude_uom,
    procedure.minima.altitude_nilreason,
    procedure.minima.height_value,
    procedure.minima.height_uom,
    procedure.minima.height_nilreason,
    procedure.minima.militaryheight_value,
    procedure.minima.militaryheight_uom,
    procedure.minima.militaryheight_nilreason,
    procedure.minima.radioheight_value,
    procedure.minima.radioheight_uom,
    procedure.minima.radioheight_nilreason,
    procedure.minima.visibility_value,
    procedure.minima.visibility_uom,
    procedure.minima.visibility_nilreason,
    procedure.minima.militaryvisibility_value,
    procedure.minima.militaryvisibility_uom,
    procedure.minima.militaryvisibility_nilreason;
create index on procedure.minima_view (id);
-- MissedApproachGroupPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.missedapproachgroup_view cascade;
create materialized view procedure.missedapproachgroup_view as
select
    procedure.missedapproachgroup_pt.id,
    procedure.missedapproachgroup_pt.nilreason AS missedapproachgroup_nilreason,
    coalesce(cast(procedure.missedapproachgroup.instruction_value as varchar), '(' || procedure.missedapproachgroup.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.missedapproachgroup.alternateclimbinstruction_value as varchar), '(' || procedure.missedapproachgroup.alternateclimbinstruction_nilreason || ')') as alternateclimbinstruction,
    coalesce(cast(procedure.missedapproachgroup.alternateclimbaltitude_value as varchar) || ' ' || procedure.missedapproachgroup.alternateclimbaltitude_uom, '(' || procedure.missedapproachgroup.alternateclimbaltitude_nilreason || ')') as alternateclimbaltitude,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_altimetersource_pt_zaopaz.id,
    'title', coalesce(cast(airport_heliport_altimetersource_pt_zaopaz.title AS varchar), '(' || airport_heliport_altimetersource_pt_zaopaz.nilreason[1] || ')'),
    'href', airport_heliport_altimetersource_pt_zaopaz.href)) AS altimeter,
    jsonb_agg(DISTINCT notes_note_view_xhkhgq.*) AS annotation
from procedure.missedapproachgroup_pt 
inner join procedure.missedapproachgroup on procedure.missedapproachgroup_pt.missedapproachgroup_id = procedure.missedapproachgroup.id
left join master_join master_join_uebbdy on procedure.missedapproachgroup.id = master_join_uebbdy.source_id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_zaopaz on master_join_uebbdy.target_id = airport_heliport_altimetersource_pt_zaopaz.id
left join master_join master_join_irebob on procedure.missedapproachgroup.id = master_join_irebob.source_id
left join notes.note_view notes_note_view_xhkhgq on master_join_irebob.target_id = notes_note_view_xhkhgq.id
group by
    procedure.missedapproachgroup_pt.id,
    procedure.missedapproachgroup_pt.nilreason,
    procedure.missedapproachgroup.instruction_value,
    procedure.missedapproachgroup.instruction_nilreason,
    procedure.missedapproachgroup.alternateclimbinstruction_value,
    procedure.missedapproachgroup.alternateclimbinstruction_nilreason,
    procedure.missedapproachgroup.alternateclimbaltitude_value,
    procedure.missedapproachgroup.alternateclimbaltitude_uom,
    procedure.missedapproachgroup.alternateclimbaltitude_nilreason;
create index on procedure.missedapproachgroup_view (id);
-- NavaidComponentPropertyType
-- ['notes.note_view']
drop materialized view if exists navaids_points.navaidcomponent_view cascade;
create materialized view navaids_points.navaidcomponent_view as
select
    navaids_points.navaidcomponent_pt.id,
    navaids_points.navaidcomponent_pt.nilreason AS navaidcomponent_nilreason,
    coalesce(cast(navaids_points.navaidcomponent.collocationgroup_value as varchar), '(' || navaids_points.navaidcomponent.collocationgroup_nilreason || ')') as collocationgroup,
    coalesce(cast(navaids_points.navaidcomponent.markerposition_value as varchar), '(' || navaids_points.navaidcomponent.markerposition_nilreason || ')') as markerposition,
    coalesce(cast(navaids_points.navaidcomponent.providesnavigablelocation_value as varchar), '(' || navaids_points.navaidcomponent.providesnavigablelocation_nilreason || ')') as providesnavigablelocation,
    jsonb_agg(DISTINCT notes_note_view_hbtpzo.*) AS annotation
from navaids_points.navaidcomponent_pt 
inner join navaids_points.navaidcomponent on navaids_points.navaidcomponent_pt.navaidcomponent_id = navaids_points.navaidcomponent.id
left join master_join master_join_lwanvi on navaids_points.navaidcomponent.id = master_join_lwanvi.source_id
left join notes.note_view notes_note_view_hbtpzo on master_join_lwanvi.target_id = notes_note_view_hbtpzo.id
group by
    navaids_points.navaidcomponent_pt.id,
    navaids_points.navaidcomponent_pt.nilreason,
    navaids_points.navaidcomponent.collocationgroup_value,
    navaids_points.navaidcomponent.collocationgroup_nilreason,
    navaids_points.navaidcomponent.markerposition_value,
    navaids_points.navaidcomponent.markerposition_nilreason,
    navaids_points.navaidcomponent.providesnavigablelocation_value,
    navaids_points.navaidcomponent.providesnavigablelocation_nilreason;
create index on navaids_points.navaidcomponent_view (id);
-- NavaidEquipmentDistancePropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.navaidequipmentdistance_view cascade;
create materialized view airport_heliport.navaidequipmentdistance_view as
select
    airport_heliport.navaidequipmentdistance_pt.id,
    airport_heliport.navaidequipmentdistance_pt.nilreason AS navaidequipmentdistance_nilreason,
    coalesce(cast(airport_heliport.navaidequipmentdistance.distance_value as varchar) || ' ' || airport_heliport.navaidequipmentdistance.distance_uom, '(' || airport_heliport.navaidequipmentdistance.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.navaidequipmentdistance.distanceaccuracy_value as varchar) || ' ' || airport_heliport.navaidequipmentdistance.distanceaccuracy_uom, '(' || airport_heliport.navaidequipmentdistance.distanceaccuracy_nilreason || ')') as distanceaccuracy,
    jsonb_agg(DISTINCT notes_note_view_fnaxtb.*) AS annotation
from airport_heliport.navaidequipmentdistance_pt 
inner join airport_heliport.navaidequipmentdistance on airport_heliport.navaidequipmentdistance_pt.navaidequipmentdistance_id = airport_heliport.navaidequipmentdistance.id
left join master_join master_join_jmrvzv on airport_heliport.navaidequipmentdistance.id = master_join_jmrvzv.source_id
left join notes.note_view notes_note_view_fnaxtb on master_join_jmrvzv.target_id = notes_note_view_fnaxtb.id
group by
    airport_heliport.navaidequipmentdistance_pt.id,
    airport_heliport.navaidequipmentdistance_pt.nilreason,
    airport_heliport.navaidequipmentdistance.distance_value,
    airport_heliport.navaidequipmentdistance.distance_uom,
    airport_heliport.navaidequipmentdistance.distance_nilreason,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_value,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_uom,
    airport_heliport.navaidequipmentdistance.distanceaccuracy_nilreason;
create index on airport_heliport.navaidequipmentdistance_view (id);
-- NitrogenPropertyType
-- ['notes.note_view']
drop materialized view if exists service.nitrogen_view cascade;
create materialized view service.nitrogen_view as
select
    service.nitrogen_pt.id,
    service.nitrogen_pt.nilreason AS nitrogen_nilreason,
    coalesce(cast(service.nitrogen.type_value as varchar), '(' || service.nitrogen.type_nilreason || ')') as type,
    jsonb_agg(DISTINCT notes_note_view_fjrqyf.*) AS annotation
from service.nitrogen_pt 
inner join service.nitrogen on service.nitrogen_pt.nitrogen_id = service.nitrogen.id
left join master_join master_join_tkbmtd on service.nitrogen.id = master_join_tkbmtd.source_id
left join notes.note_view notes_note_view_fjrqyf on master_join_tkbmtd.target_id = notes_note_view_fjrqyf.id
group by
    service.nitrogen_pt.id,
    service.nitrogen_pt.nilreason,
    service.nitrogen.type_value,
    service.nitrogen.type_nilreason;
create index on service.nitrogen_view (id);
-- ObstaclePlacementPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.obstacleplacement_view cascade;
create materialized view shared.obstacleplacement_view as
select
    shared.obstacleplacement_pt.id,
    shared.obstacleplacement_pt.nilreason AS obstacleplacement_nilreason,
    coalesce(cast(shared.obstacleplacement.obstaclebearing_value as varchar), '(' || shared.obstacleplacement.obstaclebearing_nilreason || ')') as obstaclebearing,
    coalesce(cast(shared.obstacleplacement.pointtype_value as varchar), '(' || shared.obstacleplacement.pointtype_nilreason || ')') as pointtype,
    coalesce(cast(shared.obstacleplacement.obstacleplacement_value as varchar), '(' || shared.obstacleplacement.obstacleplacement_nilreason || ')') as obstacleplacement,
    coalesce(cast(shared.obstacleplacement.obstacledistance_value as varchar) || ' ' || shared.obstacleplacement.obstacledistance_uom, '(' || shared.obstacleplacement.obstacledistance_nilreason || ')') as obstacledistance,
    jsonb_agg(DISTINCT notes_note_view_sucyma.*) AS annotation
from shared.obstacleplacement_pt 
inner join shared.obstacleplacement on shared.obstacleplacement_pt.obstacleplacement_id = shared.obstacleplacement.id
left join master_join master_join_svimyq on shared.obstacleplacement.id = master_join_svimyq.source_id
left join notes.note_view notes_note_view_sucyma on master_join_svimyq.target_id = notes_note_view_sucyma.id
group by
    shared.obstacleplacement_pt.id,
    shared.obstacleplacement_pt.nilreason,
    shared.obstacleplacement.obstaclebearing_value,
    shared.obstacleplacement.obstaclebearing_nilreason,
    shared.obstacleplacement.pointtype_value,
    shared.obstacleplacement.pointtype_nilreason,
    shared.obstacleplacement.obstacleplacement_value,
    shared.obstacleplacement.obstacleplacement_nilreason,
    shared.obstacleplacement.obstacledistance_value,
    shared.obstacleplacement.obstacledistance_uom,
    shared.obstacleplacement.obstacledistance_nilreason;
create index on shared.obstacleplacement_view (id);
-- ObstructionPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.obstruction_view cascade;
create materialized view shared.obstruction_view as
select
    shared.obstruction_pt.id,
    shared.obstruction_pt.nilreason AS obstruction_nilreason,
    coalesce(cast(shared.obstruction.surfacepenetration_value as varchar), '(' || shared.obstruction.surfacepenetration_nilreason || ')') as surfacepenetration,
    coalesce(cast(shared.obstruction.slopepenetration_value as varchar), '(' || shared.obstruction.slopepenetration_nilreason || ')') as slopepenetration,
    coalesce(cast(shared.obstruction.controlling_value as varchar), '(' || shared.obstruction.controlling_nilreason || ')') as controlling,
    coalesce(cast(shared.obstruction.closein_value as varchar), '(' || shared.obstruction.closein_nilreason || ')') as closein,
    coalesce(cast(shared.obstruction.requiredclearance_value as varchar) || ' ' || shared.obstruction.requiredclearance_uom, '(' || shared.obstruction.requiredclearance_nilreason || ')') as requiredclearance,
    coalesce(cast(shared.obstruction.minimumaltitude_value as varchar) || ' ' || shared.obstruction.minimumaltitude_uom, '(' || shared.obstruction.minimumaltitude_nilreason || ')') as minimumaltitude,
    coalesce(cast(obstacles_verticalstructure_pt_egkicw.title as varchar), '(' || obstacles_verticalstructure_pt_egkicw.nilreason[1] || ')') AS theverticalstructure,
    obstacles_verticalstructure_pt_egkicw.href AS theverticalstructure_href,
    jsonb_agg(DISTINCT shared_altitudeadjustment_pt_wjfbzq.id) AS adjustment,
    jsonb_agg(DISTINCT shared_obstacleplacement_pt_dlfkbj.id) AS obstacleplacement,
    jsonb_agg(DISTINCT notes_note_view_sunkpu.*) AS annotation
from shared.obstruction_pt 
inner join shared.obstruction on shared.obstruction_pt.obstruction_id = shared.obstruction.id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_egkicw on shared.obstruction.theverticalstructure_id = obstacles_verticalstructure_pt_egkicw.id
left join master_join master_join_gciugq on shared.obstruction.id = master_join_gciugq.source_id
left join shared.altitudeadjustment_pt shared_altitudeadjustment_pt_wjfbzq on master_join_gciugq.target_id = shared_altitudeadjustment_pt_wjfbzq.id
left join master_join master_join_mghsmh on shared.obstruction.id = master_join_mghsmh.source_id
left join shared.obstacleplacement_pt shared_obstacleplacement_pt_dlfkbj on master_join_mghsmh.target_id = shared_obstacleplacement_pt_dlfkbj.id
left join master_join master_join_gtykas on shared.obstruction.id = master_join_gtykas.source_id
left join notes.note_view notes_note_view_sunkpu on master_join_gtykas.target_id = notes_note_view_sunkpu.id
group by
    shared.obstruction_pt.id,
    shared.obstruction_pt.nilreason,
    shared.obstruction.surfacepenetration_value,
    shared.obstruction.surfacepenetration_nilreason,
    shared.obstruction.slopepenetration_value,
    shared.obstruction.slopepenetration_nilreason,
    shared.obstruction.controlling_value,
    shared.obstruction.controlling_nilreason,
    shared.obstruction.closein_value,
    shared.obstruction.closein_nilreason,
    shared.obstruction.requiredclearance_value,
    shared.obstruction.requiredclearance_uom,
    shared.obstruction.requiredclearance_nilreason,
    shared.obstruction.minimumaltitude_value,
    shared.obstruction.minimumaltitude_uom,
    shared.obstruction.minimumaltitude_nilreason,
    obstacles_verticalstructure_pt_egkicw.title,
    obstacles_verticalstructure_pt_egkicw.nilreason[1],
    obstacles_verticalstructure_pt_egkicw.href;
create index on shared.obstruction_view (id);
-- OilPropertyType
-- ['notes.note_view']
drop materialized view if exists service.oil_view cascade;
create materialized view service.oil_view as
select
    service.oil_pt.id,
    service.oil_pt.nilreason AS oil_nilreason,
    coalesce(cast(service.oil.category_value as varchar), '(' || service.oil.category_nilreason || ')') as category,
    jsonb_agg(DISTINCT notes_note_view_kreyxk.*) AS annotation
from service.oil_pt 
inner join service.oil on service.oil_pt.oil_id = service.oil.id
left join master_join master_join_svckzr on service.oil.id = master_join_svckzr.source_id
left join notes.note_view notes_note_view_kreyxk on master_join_svckzr.target_id = notes_note_view_kreyxk.id
group by
    service.oil_pt.id,
    service.oil_pt.nilreason,
    service.oil.category_value,
    service.oil.category_nilreason;
create index on service.oil_view (id);
-- OrganisationAuthorityAssociationPropertyType
-- ['notes.note_view']
drop materialized view if exists organisation.organisationauthorityassociation_view cascade;
create materialized view organisation.organisationauthorityassociation_view as
select
    organisation.organisationauthorityassociation_pt.id,
    organisation.organisationauthorityassociation_pt.nilreason AS organisationauthorityassociation_nilreason,
    coalesce(cast(organisation.organisationauthorityassociation.type_value as varchar), '(' || organisation.organisationauthorityassociation.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_vwzqeu.title as varchar), '(' || organisation_organisationauthority_pt_vwzqeu.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_vwzqeu.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT notes_note_view_rovafc.*) AS annotation
from organisation.organisationauthorityassociation_pt 
inner join organisation.organisationauthorityassociation on organisation.organisationauthorityassociation_pt.organisationauthorityassociation_id = organisation.organisationauthorityassociation.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_vwzqeu on organisation.organisationauthorityassociation.theorganisationauthority_id = organisation_organisationauthority_pt_vwzqeu.id
left join master_join master_join_snwxah on organisation.organisationauthorityassociation.id = master_join_snwxah.source_id
left join notes.note_view notes_note_view_rovafc on master_join_snwxah.target_id = notes_note_view_rovafc.id
group by
    organisation.organisationauthorityassociation_pt.id,
    organisation.organisationauthorityassociation_pt.nilreason,
    organisation.organisationauthorityassociation.type_value,
    organisation.organisationauthorityassociation.type_nilreason,
    organisation_organisationauthority_pt_vwzqeu.title,
    organisation_organisationauthority_pt_vwzqeu.nilreason[1],
    organisation_organisationauthority_pt_vwzqeu.href;
create index on organisation.organisationauthorityassociation_view (id);
-- OxygenPropertyType
-- ['notes.note_view']
drop materialized view if exists service.oxygen_view cascade;
create materialized view service.oxygen_view as
select
    service.oxygen_pt.id,
    service.oxygen_pt.nilreason AS oxygen_nilreason,
    coalesce(cast(service.oxygen.type_value as varchar), '(' || service.oxygen.type_nilreason || ')') as type,
    jsonb_agg(DISTINCT notes_note_view_wvvjzb.*) AS annotation
from service.oxygen_pt 
inner join service.oxygen on service.oxygen_pt.oxygen_id = service.oxygen.id
left join master_join master_join_hxvbin on service.oxygen.id = master_join_hxvbin.source_id
left join notes.note_view notes_note_view_wvvjzb on master_join_hxvbin.target_id = notes_note_view_wvvjzb.id
group by
    service.oxygen_pt.id,
    service.oxygen_pt.nilreason,
    service.oxygen.type_value,
    service.oxygen.type_nilreason;
create index on service.oxygen_view (id);
-- PointPropertyType
-- ['notes.note_view']
-- Snowflake SQL : PointPropertyType

DROP MATERIALIZED VIEW IF EXISTS geometry.point_view CASCADE;

CREATE MATERIALIZED VIEW geometry.point_view AS
SELECT
    id, 
	point as geom,
	COALESCE(horizontalaccuracy || ' ' || horizontalaccuracy_uom, '(' || horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
FROM geometry.point_pt;

CREATE INDEX ON geometry.point_view (id);
-- ProcedureTransitionLegPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.proceduretransitionleg_view cascade;
create materialized view procedure.proceduretransitionleg_view as
select
    procedure.proceduretransitionleg_pt.id,
    procedure.proceduretransitionleg_pt.nilreason AS proceduretransitionleg_nilreason,
    coalesce(cast(procedure.proceduretransitionleg.seqnumberarinc_value as varchar), '(' || procedure.proceduretransitionleg.seqnumberarinc_nilreason || ')') as seqnumberarinc,
    jsonb_agg(DISTINCT notes_note_view_ykpwxu.*) AS annotation
from procedure.proceduretransitionleg_pt 
inner join procedure.proceduretransitionleg on procedure.proceduretransitionleg_pt.proceduretransitionleg_id = procedure.proceduretransitionleg.id
left join master_join master_join_hfdyjp on procedure.proceduretransitionleg.id = master_join_hfdyjp.source_id
left join notes.note_view notes_note_view_ykpwxu on master_join_hfdyjp.target_id = notes_note_view_ykpwxu.id
group by
    procedure.proceduretransitionleg_pt.id,
    procedure.proceduretransitionleg_pt.nilreason,
    procedure.proceduretransitionleg.seqnumberarinc_value,
    procedure.proceduretransitionleg.seqnumberarinc_nilreason;
create index on procedure.proceduretransitionleg_view (id);
-- RadarComponentPropertyType
-- ['notes.note_view']
drop materialized view if exists surveillance.radarcomponent_view cascade;
create materialized view surveillance.radarcomponent_view as
select
    surveillance.radarcomponent_pt.id,
    surveillance.radarcomponent_pt.nilreason AS radarcomponent_nilreason,
    coalesce(cast(surveillance.radarcomponent.collocationgroup_value as varchar), '(' || surveillance.radarcomponent.collocationgroup_nilreason || ')') as collocationgroup,
    jsonb_agg(DISTINCT notes_note_view_tkoyyj.*) AS annotation
from surveillance.radarcomponent_pt 
inner join surveillance.radarcomponent on surveillance.radarcomponent_pt.radarcomponent_id = surveillance.radarcomponent.id
left join master_join master_join_jbfifr on surveillance.radarcomponent.id = master_join_jbfifr.source_id
left join notes.note_view notes_note_view_tkoyyj on master_join_jbfifr.target_id = notes_note_view_tkoyyj.id
group by
    surveillance.radarcomponent_pt.id,
    surveillance.radarcomponent_pt.nilreason,
    surveillance.radarcomponent.collocationgroup_value,
    surveillance.radarcomponent.collocationgroup_nilreason;
create index on surveillance.radarcomponent_view (id);
-- RidgePropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.ridge_view cascade;
create materialized view airport_heliport.ridge_view as
select
    airport_heliport.ridge_pt.id,
    airport_heliport.ridge_pt.nilreason AS ridge_nilreason,
    coalesce(cast(airport_heliport.ridge.side_value as varchar), '(' || airport_heliport.ridge.side_nilreason || ')') as side,
    coalesce(cast(airport_heliport.ridge.distance_value as varchar) || ' ' || airport_heliport.ridge.distance_uom, '(' || airport_heliport.ridge.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.ridge.depth_value as varchar) || ' ' || airport_heliport.ridge.depth_uom, '(' || airport_heliport.ridge.depth_nilreason || ')') as depth,
    jsonb_agg(DISTINCT notes_note_view_yesghk.*) AS annotation
from airport_heliport.ridge_pt 
inner join airport_heliport.ridge on airport_heliport.ridge_pt.ridge_id = airport_heliport.ridge.id
left join master_join master_join_ydqrmx on airport_heliport.ridge.id = master_join_ydqrmx.source_id
left join notes.note_view notes_note_view_yesghk on master_join_ydqrmx.target_id = notes_note_view_yesghk.id
group by
    airport_heliport.ridge_pt.id,
    airport_heliport.ridge_pt.nilreason,
    airport_heliport.ridge.side_value,
    airport_heliport.ridge.side_nilreason,
    airport_heliport.ridge.distance_value,
    airport_heliport.ridge.distance_uom,
    airport_heliport.ridge.distance_nilreason,
    airport_heliport.ridge.depth_value,
    airport_heliport.ridge.depth_uom,
    airport_heliport.ridge.depth_nilreason;
create index on airport_heliport.ridge_view (id);
-- RunwayContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.runwaycontamination_view cascade;
create materialized view airport_heliport.runwaycontamination_view as
select
    airport_heliport.runwaycontamination_pt.id,
    airport_heliport.runwaycontamination_pt.nilreason AS runwaycontamination_nilreason,
    coalesce(cast(airport_heliport.runwaycontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.runwaycontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.runwaycontamination.frictionestimation_value as varchar), '(' || airport_heliport.runwaycontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.runwaycontamination.frictiondevice_value as varchar), '(' || airport_heliport.runwaycontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.runwaycontamination.obscuredlights_value as varchar), '(' || airport_heliport.runwaycontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.runwaycontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.runwaycontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.runwaycontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.runwaycontamination.proportion_value as varchar), '(' || airport_heliport.runwaycontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.runwaycontamination.clearedside_value as varchar), '(' || airport_heliport.runwaycontamination.clearedside_nilreason || ')') as clearedside,
    coalesce(cast(airport_heliport.runwaycontamination.obscuredlightsside_value as varchar), '(' || airport_heliport.runwaycontamination.obscuredlightsside_nilreason || ')') as obscuredlightsside,
    coalesce(cast(airport_heliport.runwaycontamination.taxiwayavailable_value as varchar), '(' || airport_heliport.runwaycontamination.taxiwayavailable_nilreason || ')') as taxiwayavailable,
    coalesce(cast(airport_heliport.runwaycontamination.apronavailable_value as varchar), '(' || airport_heliport.runwaycontamination.apronavailable_nilreason || ')') as apronavailable,
    coalesce(cast(airport_heliport.runwaycontamination.depth_value as varchar) || ' ' || airport_heliport.runwaycontamination.depth_uom, '(' || airport_heliport.runwaycontamination.depth_nilreason || ')') as depth,
    coalesce(cast(airport_heliport.runwaycontamination.clearedlength_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedlength_uom, '(' || airport_heliport.runwaycontamination.clearedlength_nilreason || ')') as clearedlength,
    coalesce(cast(airport_heliport.runwaycontamination.clearedwidth_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedwidth_uom, '(' || airport_heliport.runwaycontamination.clearedwidth_nilreason || ')') as clearedwidth,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancelength_value as varchar) || ' ' || airport_heliport.runwaycontamination.furtherclearancelength_uom, '(' || airport_heliport.runwaycontamination.furtherclearancelength_nilreason || ')') as furtherclearancelength,
    coalesce(cast(airport_heliport.runwaycontamination.furtherclearancewidth_value as varchar) || ' ' || airport_heliport.runwaycontamination.furtherclearancewidth_uom, '(' || airport_heliport.runwaycontamination.furtherclearancewidth_nilreason || ')') as furtherclearancewidth,
    coalesce(cast(airport_heliport.runwaycontamination.clearedlengthbegin_value as varchar) || ' ' || airport_heliport.runwaycontamination.clearedlengthbegin_uom, '(' || airport_heliport.runwaycontamination.clearedlengthbegin_nilreason || ')') as clearedlengthbegin,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_tqcbpf.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_olgdxj.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_aodnjz.*) AS annotation
from airport_heliport.runwaycontamination_pt 
inner join airport_heliport.runwaycontamination on airport_heliport.runwaycontamination_pt.runwaycontamination_id = airport_heliport.runwaycontamination.id
left join master_join master_join_efxezx on airport_heliport.runwaycontamination.id = master_join_efxezx.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_tqcbpf on master_join_efxezx.target_id = airport_heliport_ridge_pt_tqcbpf.id
left join master_join master_join_xblcms on airport_heliport.runwaycontamination.id = master_join_xblcms.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_olgdxj on master_join_xblcms.target_id = airport_heliport_surfacecontaminationlayer_pt_olgdxj.id
left join master_join master_join_ifopdt on airport_heliport.runwaycontamination.id = master_join_ifopdt.source_id
left join notes.note_view notes_note_view_aodnjz on master_join_ifopdt.target_id = notes_note_view_aodnjz.id
group by
    airport_heliport.runwaycontamination_pt.id,
    airport_heliport.runwaycontamination_pt.nilreason,
    airport_heliport.runwaycontamination.frictioncoefficient_value,
    airport_heliport.runwaycontamination.frictioncoefficient_nilreason,
    airport_heliport.runwaycontamination.frictionestimation_value,
    airport_heliport.runwaycontamination.frictionestimation_nilreason,
    airport_heliport.runwaycontamination.frictiondevice_value,
    airport_heliport.runwaycontamination.frictiondevice_nilreason,
    airport_heliport.runwaycontamination.obscuredlights_value,
    airport_heliport.runwaycontamination.obscuredlights_nilreason,
    airport_heliport.runwaycontamination.furtherclearancetime_value,
    airport_heliport.runwaycontamination.furtherclearancetime_nilreason,
    airport_heliport.runwaycontamination.furthertotalclearance_value,
    airport_heliport.runwaycontamination.furthertotalclearance_nilreason,
    airport_heliport.runwaycontamination.proportion_value,
    airport_heliport.runwaycontamination.proportion_nilreason,
    airport_heliport.runwaycontamination.clearedside_value,
    airport_heliport.runwaycontamination.clearedside_nilreason,
    airport_heliport.runwaycontamination.obscuredlightsside_value,
    airport_heliport.runwaycontamination.obscuredlightsside_nilreason,
    airport_heliport.runwaycontamination.taxiwayavailable_value,
    airport_heliport.runwaycontamination.taxiwayavailable_nilreason,
    airport_heliport.runwaycontamination.apronavailable_value,
    airport_heliport.runwaycontamination.apronavailable_nilreason,
    airport_heliport.runwaycontamination.depth_value,
    airport_heliport.runwaycontamination.depth_uom,
    airport_heliport.runwaycontamination.depth_nilreason,
    airport_heliport.runwaycontamination.clearedlength_value,
    airport_heliport.runwaycontamination.clearedlength_uom,
    airport_heliport.runwaycontamination.clearedlength_nilreason,
    airport_heliport.runwaycontamination.clearedwidth_value,
    airport_heliport.runwaycontamination.clearedwidth_uom,
    airport_heliport.runwaycontamination.clearedwidth_nilreason,
    airport_heliport.runwaycontamination.furtherclearancelength_value,
    airport_heliport.runwaycontamination.furtherclearancelength_uom,
    airport_heliport.runwaycontamination.furtherclearancelength_nilreason,
    airport_heliport.runwaycontamination.furtherclearancewidth_value,
    airport_heliport.runwaycontamination.furtherclearancewidth_uom,
    airport_heliport.runwaycontamination.furtherclearancewidth_nilreason,
    airport_heliport.runwaycontamination.clearedlengthbegin_value,
    airport_heliport.runwaycontamination.clearedlengthbegin_uom,
    airport_heliport.runwaycontamination.clearedlengthbegin_nilreason;
create index on airport_heliport.runwaycontamination_view (id);
-- RunwayDeclaredDistancePropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.runwaydeclareddistance_view cascade;
create materialized view airport_heliport.runwaydeclareddistance_view as
select
    airport_heliport.runwaydeclareddistance_pt.id,
    airport_heliport.runwaydeclareddistance_pt.nilreason AS runwaydeclareddistance_nilreason,
    coalesce(cast(airport_heliport.runwaydeclareddistance.type_value as varchar), '(' || airport_heliport.runwaydeclareddistance.type_nilreason || ')') as type,
    jsonb_agg(DISTINCT airport_heliport_runwaydeclareddistancevalue_pt_naslzx.id) AS declaredvalue,
    jsonb_agg(DISTINCT notes_note_view_hjuxvr.*) AS annotation
from airport_heliport.runwaydeclareddistance_pt 
inner join airport_heliport.runwaydeclareddistance on airport_heliport.runwaydeclareddistance_pt.runwaydeclareddistance_id = airport_heliport.runwaydeclareddistance.id
left join master_join master_join_rtitcv on airport_heliport.runwaydeclareddistance.id = master_join_rtitcv.source_id
left join airport_heliport.runwaydeclareddistancevalue_pt airport_heliport_runwaydeclareddistancevalue_pt_naslzx on master_join_rtitcv.target_id = airport_heliport_runwaydeclareddistancevalue_pt_naslzx.id
left join master_join master_join_fjwvnx on airport_heliport.runwaydeclareddistance.id = master_join_fjwvnx.source_id
left join notes.note_view notes_note_view_hjuxvr on master_join_fjwvnx.target_id = notes_note_view_hjuxvr.id
group by
    airport_heliport.runwaydeclareddistance_pt.id,
    airport_heliport.runwaydeclareddistance_pt.nilreason,
    airport_heliport.runwaydeclareddistance.type_value,
    airport_heliport.runwaydeclareddistance.type_nilreason;
create index on airport_heliport.runwaydeclareddistance_view (id);
-- RunwaySectionContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.runwaysectioncontamination_view cascade;
create materialized view airport_heliport.runwaysectioncontamination_view as
select
    airport_heliport.runwaysectioncontamination_pt.id,
    airport_heliport.runwaysectioncontamination_pt.nilreason AS runwaysectioncontamination_nilreason,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictionestimation_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.runwaysectioncontamination.frictiondevice_value as varchar), '(' || airport_heliport.runwaysectioncontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.runwaysectioncontamination.obscuredlights_value as varchar), '(' || airport_heliport.runwaysectioncontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.runwaysectioncontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.runwaysectioncontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.runwaysectioncontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.runwaysectioncontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.runwaysectioncontamination.proportion_value as varchar), '(' || airport_heliport.runwaysectioncontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.runwaysectioncontamination.section_value as varchar), '(' || airport_heliport.runwaysectioncontamination.section_nilreason || ')') as section,
    coalesce(cast(airport_heliport.runwaysectioncontamination.depth_value as varchar) || ' ' || airport_heliport.runwaysectioncontamination.depth_uom, '(' || airport_heliport.runwaysectioncontamination.depth_nilreason || ')') as depth,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_rcgscw.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_unzeib.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_sdbpup.*) AS annotation
from airport_heliport.runwaysectioncontamination_pt 
inner join airport_heliport.runwaysectioncontamination on airport_heliport.runwaysectioncontamination_pt.runwaysectioncontamination_id = airport_heliport.runwaysectioncontamination.id
left join master_join master_join_zfwamm on airport_heliport.runwaysectioncontamination.id = master_join_zfwamm.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_rcgscw on master_join_zfwamm.target_id = airport_heliport_ridge_pt_rcgscw.id
left join master_join master_join_bpcwfr on airport_heliport.runwaysectioncontamination.id = master_join_bpcwfr.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_unzeib on master_join_bpcwfr.target_id = airport_heliport_surfacecontaminationlayer_pt_unzeib.id
left join master_join master_join_wdfhaa on airport_heliport.runwaysectioncontamination.id = master_join_wdfhaa.source_id
left join notes.note_view notes_note_view_sdbpup on master_join_wdfhaa.target_id = notes_note_view_sdbpup.id
group by
    airport_heliport.runwaysectioncontamination_pt.id,
    airport_heliport.runwaysectioncontamination_pt.nilreason,
    airport_heliport.runwaysectioncontamination.frictioncoefficient_value,
    airport_heliport.runwaysectioncontamination.frictioncoefficient_nilreason,
    airport_heliport.runwaysectioncontamination.frictionestimation_value,
    airport_heliport.runwaysectioncontamination.frictionestimation_nilreason,
    airport_heliport.runwaysectioncontamination.frictiondevice_value,
    airport_heliport.runwaysectioncontamination.frictiondevice_nilreason,
    airport_heliport.runwaysectioncontamination.obscuredlights_value,
    airport_heliport.runwaysectioncontamination.obscuredlights_nilreason,
    airport_heliport.runwaysectioncontamination.furtherclearancetime_value,
    airport_heliport.runwaysectioncontamination.furtherclearancetime_nilreason,
    airport_heliport.runwaysectioncontamination.furthertotalclearance_value,
    airport_heliport.runwaysectioncontamination.furthertotalclearance_nilreason,
    airport_heliport.runwaysectioncontamination.proportion_value,
    airport_heliport.runwaysectioncontamination.proportion_nilreason,
    airport_heliport.runwaysectioncontamination.section_value,
    airport_heliport.runwaysectioncontamination.section_nilreason,
    airport_heliport.runwaysectioncontamination.depth_value,
    airport_heliport.runwaysectioncontamination.depth_uom,
    airport_heliport.runwaysectioncontamination.depth_nilreason;
create index on airport_heliport.runwaysectioncontamination_view (id);
-- SectorDesignPropertyType
-- ['notes.note_view']
drop materialized view if exists procedure.sectordesign_view cascade;
create materialized view procedure.sectordesign_view as
select
    procedure.sectordesign_pt.id,
    procedure.sectordesign_pt.nilreason AS sectordesign_nilreason,
    coalesce(cast(procedure.sectordesign.turndirection_value as varchar), '(' || procedure.sectordesign.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.sectordesign.designgradient_value as varchar), '(' || procedure.sectordesign.designgradient_nilreason || ')') as designgradient,
    coalesce(cast(procedure.sectordesign.turnpermitted_value as varchar), '(' || procedure.sectordesign.turnpermitted_nilreason || ')') as turnpermitted,
    coalesce(cast(procedure.sectordesign.terminationaltitude_value as varchar) || ' ' || procedure.sectordesign.terminationaltitude_uom, '(' || procedure.sectordesign.terminationaltitude_nilreason || ')') as terminationaltitude,
    jsonb_agg(DISTINCT notes_note_view_wmfkpq.*) AS annotation
from procedure.sectordesign_pt 
inner join procedure.sectordesign on procedure.sectordesign_pt.sectordesign_id = procedure.sectordesign.id
left join master_join master_join_xlvnnb on procedure.sectordesign.id = master_join_xlvnnb.source_id
left join notes.note_view notes_note_view_wmfkpq on master_join_xlvnnb.target_id = notes_note_view_wmfkpq.id
group by
    procedure.sectordesign_pt.id,
    procedure.sectordesign_pt.nilreason,
    procedure.sectordesign.turndirection_value,
    procedure.sectordesign.turndirection_nilreason,
    procedure.sectordesign.designgradient_value,
    procedure.sectordesign.designgradient_nilreason,
    procedure.sectordesign.turnpermitted_value,
    procedure.sectordesign.turnpermitted_nilreason,
    procedure.sectordesign.terminationaltitude_value,
    procedure.sectordesign.terminationaltitude_uom,
    procedure.sectordesign.terminationaltitude_nilreason;
create index on procedure.sectordesign_view (id);
-- StandardLevelPropertyType
-- ['notes.note_view']
drop materialized view if exists shared.standardlevel_view cascade;
create materialized view shared.standardlevel_view as
select
    shared.standardlevel_pt.id,
    shared.standardlevel_pt.nilreason AS standardlevel_nilreason,
    coalesce(cast(shared.standardlevel.verticaldistance_value as varchar) || ' ' || shared.standardlevel.verticaldistance_uom, '(' || shared.standardlevel.verticaldistance_nilreason || ')') as verticaldistance,
    jsonb_agg(DISTINCT notes_note_view_gieevv.*) AS annotation
from shared.standardlevel_pt 
inner join shared.standardlevel on shared.standardlevel_pt.standardlevel_id = shared.standardlevel.id
left join master_join master_join_fqefpj on shared.standardlevel.id = master_join_fqefpj.source_id
left join notes.note_view notes_note_view_gieevv on master_join_fqefpj.target_id = notes_note_view_gieevv.id
group by
    shared.standardlevel_pt.id,
    shared.standardlevel_pt.nilreason,
    shared.standardlevel.verticaldistance_value,
    shared.standardlevel.verticaldistance_uom,
    shared.standardlevel.verticaldistance_nilreason;
create index on shared.standardlevel_view (id);
-- SurfaceCharacteristicsPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.surfacecharacteristics_view cascade;
create materialized view airport_heliport.surfacecharacteristics_view as
select
    airport_heliport.surfacecharacteristics_pt.id,
    airport_heliport.surfacecharacteristics_pt.nilreason AS surfacecharacteristics_nilreason,
    coalesce(cast(airport_heliport.surfacecharacteristics.composition_value as varchar), '(' || airport_heliport.surfacecharacteristics.composition_nilreason || ')') as composition,
    coalesce(cast(airport_heliport.surfacecharacteristics.preparation_value as varchar), '(' || airport_heliport.surfacecharacteristics.preparation_nilreason || ')') as preparation,
    coalesce(cast(airport_heliport.surfacecharacteristics.surfacecondition_value as varchar), '(' || airport_heliport.surfacecharacteristics.surfacecondition_nilreason || ')') as surfacecondition,
    coalesce(cast(airport_heliport.surfacecharacteristics.classpcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.classpcn_nilreason || ')') as classpcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.pavementtypepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.pavementtypepcn_nilreason || ')') as pavementtypepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.pavementsubgradepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.pavementsubgradepcn_nilreason || ')') as pavementsubgradepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.maxtyrepressurepcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.maxtyrepressurepcn_nilreason || ')') as maxtyrepressurepcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.evaluationmethodpcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.evaluationmethodpcn_nilreason || ')') as evaluationmethodpcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.classlcn_value as varchar), '(' || airport_heliport.surfacecharacteristics.classlcn_nilreason || ')') as classlcn,
    coalesce(cast(airport_heliport.surfacecharacteristics.weightsiwl_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.weightsiwl_uom, '(' || airport_heliport.surfacecharacteristics.weightsiwl_nilreason || ')') as weightsiwl,
    coalesce(cast(airport_heliport.surfacecharacteristics.tyrepressuresiwl_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.tyrepressuresiwl_uom, '(' || airport_heliport.surfacecharacteristics.tyrepressuresiwl_nilreason || ')') as tyrepressuresiwl,
    coalesce(cast(airport_heliport.surfacecharacteristics.weightauw_value as varchar) || ' ' || airport_heliport.surfacecharacteristics.weightauw_uom, '(' || airport_heliport.surfacecharacteristics.weightauw_nilreason || ')') as weightauw,
    jsonb_agg(DISTINCT notes_note_view_zvletf.*) AS annotation
from airport_heliport.surfacecharacteristics_pt 
inner join airport_heliport.surfacecharacteristics on airport_heliport.surfacecharacteristics_pt.surfacecharacteristics_id = airport_heliport.surfacecharacteristics.id
left join master_join master_join_ujbtor on airport_heliport.surfacecharacteristics.id = master_join_ujbtor.source_id
left join notes.note_view notes_note_view_zvletf on master_join_ujbtor.target_id = notes_note_view_zvletf.id
group by
    airport_heliport.surfacecharacteristics_pt.id,
    airport_heliport.surfacecharacteristics_pt.nilreason,
    airport_heliport.surfacecharacteristics.composition_value,
    airport_heliport.surfacecharacteristics.composition_nilreason,
    airport_heliport.surfacecharacteristics.preparation_value,
    airport_heliport.surfacecharacteristics.preparation_nilreason,
    airport_heliport.surfacecharacteristics.surfacecondition_value,
    airport_heliport.surfacecharacteristics.surfacecondition_nilreason,
    airport_heliport.surfacecharacteristics.classpcn_value,
    airport_heliport.surfacecharacteristics.classpcn_nilreason,
    airport_heliport.surfacecharacteristics.pavementtypepcn_value,
    airport_heliport.surfacecharacteristics.pavementtypepcn_nilreason,
    airport_heliport.surfacecharacteristics.pavementsubgradepcn_value,
    airport_heliport.surfacecharacteristics.pavementsubgradepcn_nilreason,
    airport_heliport.surfacecharacteristics.maxtyrepressurepcn_value,
    airport_heliport.surfacecharacteristics.maxtyrepressurepcn_nilreason,
    airport_heliport.surfacecharacteristics.evaluationmethodpcn_value,
    airport_heliport.surfacecharacteristics.evaluationmethodpcn_nilreason,
    airport_heliport.surfacecharacteristics.classlcn_value,
    airport_heliport.surfacecharacteristics.classlcn_nilreason,
    airport_heliport.surfacecharacteristics.weightsiwl_value,
    airport_heliport.surfacecharacteristics.weightsiwl_uom,
    airport_heliport.surfacecharacteristics.weightsiwl_nilreason,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_value,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_uom,
    airport_heliport.surfacecharacteristics.tyrepressuresiwl_nilreason,
    airport_heliport.surfacecharacteristics.weightauw_value,
    airport_heliport.surfacecharacteristics.weightauw_uom,
    airport_heliport.surfacecharacteristics.weightauw_nilreason;
create index on airport_heliport.surfacecharacteristics_view (id);
-- SurfacePropertyType
-- ['notes.note_view']
-- -- Snowflake SQL : SurfacePropertyType

-- CREATE MATERIALIZED VIEW partial_surface_view AS
-- WITH  
-- segment_ref AS(
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		SUBSTRING(
-- 	        curve_ref 
-- 	        FROM '([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})$'
-- 	    ) AS uuid
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 4
-- ),
-- segment_value AS(
-- 	SELECT 
-- 		airspace.geoborder.identifier AS uuid,
-- 		geom
-- 	FROM airspace.geoborder
-- 	INNER JOIN public.geoborder_timeslice
-- 		ON airspace.geoborder.id = public.geoborder_timeslice.geoborder_id
-- 	INNER JOIN airspace.geoborder_tsp
-- 		ON public.geoborder_timeslice.geoborder_tsp_id = airspace.geoborder_tsp.id
-- 	INNER JOIN airspace.geoborder_ts
-- 		ON airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
-- 	INNER JOIN public.curve_pt
-- 		ON airspace.geoborder_ts.border_id = public.curve_pt.id
-- 	INNER JOIN geometry.curve_view
-- 		ON public.curve_pt.id = geometry.curve_view.id
-- ),
-- center AS (
--     SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		start_angle,
-- 		end_angle,
-- 		(end_angle - start_angle) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 2
-- 	UNION ALL 
-- 	SELECT 
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		point,
-- 		radius,
-- 		0 as start_angle,
-- 		2*PI() as end_angle,
-- 		(0 - 2*PI()) / 256 AS step_size
--     FROM public.polygon_segment 
-- 	WHERE public.polygon_segment.interpretation = 3
-- ),
-- interpolated_points AS (
--     SELECT 
--         center.id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_Project(center.point::geography, center.radius, center.start_angle + center.step_size * n)::geometry AS point_geom
--     FROM 
--         generate_series(0, 256) AS n, 	
--         center
-- ),
-- arc_line AS (
--     SELECT 
--         id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_MakeLine(point_geom) AS geom
--     FROM interpolated_points
--     GROUP BY 
-- 		id, 
-- 		curve_xml_id,
-- 		part, 
-- 		member, 
-- 		sequence, 
-- 		interpretation
-- ),
-- segment_union AS (
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(linestring, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 0
--     UNION ALL 
--     SELECT 
--         id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
--         ST_Segmentize((ST_ReducePrecision(linestring, 0.000000000000001)::geography), 10000)::geometry as geom,
-- 		ST_StartPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(linestring, 0.000000000000001)) as last_point
--     FROM 
--         public.polygon_segment 
--     WHERE 
--         public.polygon_segment.interpretation = 1
-- 	UNION ALL
-- 	SELECT
-- 		id, 
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM
-- 		arc_line
-- 	UNION ALL
-- 	SELECT
-- 		id,
-- 		curve_xml_id,
-- 		part,
-- 		member,
-- 		sequence,
-- 		interpretation,
-- 		ST_ReducePrecision(geom, 0.000000000000001) AS geom,
-- 		ST_StartPoint(ST_ReducePrecision(geom, 0.000000000000001)) as first_point,
-- 		ST_EndPoint(ST_ReducePrecision(geom, 0.000000000000001)) as last_point
-- 	FROM segment_ref
-- 	INNER JOIN segment_value
-- 	ON segment_ref.uuid = segment_value.uuid		
-- ),
-- segement_ownership AS (
-- 	SELECT 
-- 		public.surface_pt.id,
--         public.surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point as first_point,
-- 		segment_union.last_point as last_point,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         public.surface_pt
--     INNER JOIN 
--         public.surface_exterior 
--         ON public.surface_pt.id = public.surface_exterior.surfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.surface_exterior.exteriorlinestring_id = segment_union.id
-- 	UNION ALL
-- 	SELECT 
-- 		public.surface_pt.id,
--         public.surface_pt.xml_id,
-- 		segment_union.curve_xml_id,
-- 		segment_union.part AS part,
-- 		segment_union.member AS member,
-- 		segment_union.sequence AS sequence,
-- 		segment_union.interpretation AS interpretation,
-- 		segment_union.geom AS geom,
-- 		segment_union.first_point AS first_point,
-- 		segment_union.last_point AS last_point,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         public.surface_pt
--     INNER JOIN 
--         public.surface_interior 
--         ON public.surface_pt.id = public.surface_interior.surfacepropertytype_id
--     INNER JOIN 
--         segment_union 
--         ON public.surface_interior.interiorlinestring_id = segment_union.id
-- ),
-- ordered_segments AS (
--     SELECT 
-- 		id,
--         xml_id, 
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point, 
--         last_point,
-- 		ST_IsClosed(segement_ownership.geom) AS closed,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         segement_ownership
--     ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member, 
-- 		sequence
-- ),
-- connecting_segments AS (
--     SELECT 
--         id,
-- 		xml_id,
-- 		curve_xml_id,
--         part,
-- 		member,
--         sequence,
-- 		interpretation,
--         geom,
--         first_point,
--         last_point,
-- 		horizontalaccuracy,
-- 		horizontalaccuracy_uom,
-- 		horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         ordered_segments
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member,
--         curr.sequence + 0.5 AS sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.sequence + 1 = next.sequence
-- 		AND curr.member = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     UNION ALL
--     SELECT 
--         curr.id,
-- 		curr.xml_id,
-- 		Null AS curve_xml_id,
--         curr.part,
-- 		curr.member + 0.5 AS member,
--         curr.sequence,
-- 		1,
--         ST_MakeLine(curr.last_point, next.first_point) AS geom,
--         curr.last_point AS first_point,
--         next.first_point AS last_point,
-- 		curr.horizontalaccuracy,
-- 		curr.horizontalaccuracy_uom,
-- 		curr.horizontalaccuracy_nilreason,
-- 		curr.nilreason
--     FROM 
--         ordered_segments curr
--     JOIN 
--         ordered_segments next
--     ON 
--         curr.xml_id = next.xml_id
--         AND curr.part = next.part
--         AND curr.member + 1 = next.member
-- 	WHERE 
-- 		ST_IsClosed(curr.geom) = false
-- 		AND
-- 		curr.interpretation != 4
-- 		AND
-- 		next.interpretation != 4
--     ORDER BY 
--         xml_id, 
--         part, 
--         member,
--         sequence
-- ),
-- clustered_segments AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         part,
--         member,
--         geom,
-- 		interpretation,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason,
--         ST_ClusterDBSCAN(geom, eps := 0, minpoints := 1) OVER (PARTITION BY xml_id, part)  AS cluster_id
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation != 4
-- 	UNION ALL
--     SELECT 
--         id, 
-- 		xml_id,
-- 		curve_xml_id,
--         part,
--         member,
--         geom,
-- 		interpretation,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason,
--         Null AS cluster_id
--     FROM 
--         connecting_segments
--     WHERE 
--         interpretation = 4
-- 	ORDER BY
-- 		xml_id,
-- 		part, 
-- 		member
-- ),
-- partial_ring AS (
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY_AGG(curve_xml_id) as curve_xml_id,
--         part,
--         MIN(member) AS member,
-- 		MIN(interpretation) AS interpretation,
--         ST_IsClosed(ST_LineMerge(ST_Collect(geom))) AS closed,
--         ST_GeometryType(ST_LineMerge(ST_Collect(geom))) AS type, 
--         ST_LineMerge(ST_Collect(geom)) AS geom,
--         NULL::geometry AS points,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation != 4
--     GROUP BY 
-- 		id,
--         xml_id, 
--         part, 
--         cluster_id,
--         horizontalaccuracy, 
--         horizontalaccuracy_uom, 
--         horizontalaccuracy_nilreason,	
--         nilreason
-- 	UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		ARRAY[curve_xml_id] AS curve_xml_id,
--         part,
--         member,
-- 		interpretation,
--         ST_IsClosed(geom) AS closed,
--         ST_GeometryType(geom) AS type, 
-- 		geom AS geom,
-- 		ST_Points(geom) AS points,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
--         nilreason
--     FROM 
--         clustered_segments
-- 	WHERE 
-- 		interpretation = 4
-- 	ORDER BY 
--         xml_id, 
-- 		part, 
-- 		member
-- ),
-- output AS (
--     SELECT 
--         pr.id, 
--         pr.xml_id,
-- 		pr.curve_xml_id,
--         pr.part,
-- 		ROW_NUMBER() OVER (PARTITION BY xml_id, part ORDER BY id) - 1 AS increment,
-- 		COUNT(*) OVER (PARTITION BY xml_id, part ) AS total_count,
-- 		pr.interpretation,
-- 		pr.points,
--         COALESCE(dumped.geom, pr.geom) AS geom,
--         pr.horizontalaccuracy,
--         pr.horizontalaccuracy_uom,
--         pr.horizontalaccuracy_nilreason,
--         pr.nilreason
--     FROM 
--         partial_ring pr
--     LEFT JOIN LATERAL (
--         SELECT (ST_Dump(pr.geom)).geom
--         WHERE ST_GeometryType(pr.geom) = 'ST_MultiLineString'
--     ) dumped ON true
-- 	ORDER BY
-- 		xml_id, 
-- 		part, 
-- 		member
-- )
-- SELECT 
-- 	ST_GeometryType(geom),
-- 	output.id, 
-- 	to_jsonb(output.xml_id) AS xml_id,
-- 	to_jsonb(output.curve_xml_id) AS curve_xml_id,
-- 	output.part,
-- 	output.increment,
-- 	output.total_count,
-- 	output.interpretation,
-- 	output.geom,
-- 	output.points,
-- 	output.horizontalaccuracy,
-- 	output.horizontalaccuracy_uom,
-- 	output.horizontalaccuracy_nilreason,
-- 	output.nilreason
-- FROM
-- 	output;

-- -- R1 : Simple feature, closed
-- -- R2 : Simple feature, unclosed
-- -- G1 : Complex feature wiht a single geoborder, 
-- -- G2 : Complex feature with multiple geoborder,
-- CREATE MATERIALIZED VIEW geometry.surface_view AS
-- WITH 
-- g1_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(ring.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(ring.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(ring.geom)) AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view ring
-- 	ON 
--         ring.xml_id = geoborder.xml_id
-- 		AND
-- 		ring.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE 
-- 		geoborder.total_count = 2
-- 		AND
-- 		geoborder.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.geom, 
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.geom, 
-- 		ring.geom,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_surface_view.id, 
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		partial_surface_view.increment,
-- 		partial_surface_view.interpretation,
-- 		partial_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_surface_view.horizontalaccuracy, 
-- 		partial_surface_view.horizontalaccuracy_uom, 
-- 		partial_surface_view.horizontalaccuracy_nilreason, 
-- 		partial_surface_view.nilreason
-- 	FROM 
-- 		partial_surface_view
-- 	WHERE 
-- 		partial_surface_view.total_count = 2 
-- 		AND
-- 		partial_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment AS (
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		geoborder.geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,
-- 			ST_Union(
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom)),
-- 				ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		)).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom, ST_ClosestPoint(ST_Collect(geoborder.points), ST_EndPoint(before.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_EndPoint(before.geom)) AS  start_segment,
-- 		Null::geometry AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id, 
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		(ST_Dump(
-- 		  ST_Split(
-- 			geoborder.geom,	ST_ClosestPoint(ST_Collect(geoborder.points), ST_StartPoint(after.geom))
-- 			)
-- 		  )
-- 		).geom AS geom,
-- 		Null::geometry AS  start_segment,
-- 		ST_ShortestLine(ST_Collect(geoborder.points), ST_StartPoint(after.geom)) AS end_segment,
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	FROM 
-- 		partial_surface_view geoborder
-- 	JOIN
-- 		partial_surface_view before
-- 	ON 
--         before.xml_id = geoborder.xml_id
-- 		AND
-- 		before.part = geoborder.part
-- 	    AND (
-- 	        before.increment = geoborder.increment - 1
-- 	        OR (before.increment = geoborder.total_count - 1 AND geoborder.increment = 0)
-- 	    )
-- 	JOIN
-- 		partial_surface_view after
-- 	ON 
--         after.xml_id = geoborder.xml_id
-- 		AND
-- 		after.part = geoborder.part
-- 	    AND (
-- 	        after.increment = geoborder.increment + 1
-- 	        OR (after.increment = 0 AND geoborder.increment = geoborder.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		geoborder.total_count > 2 
-- 		AND
-- 		geoborder.interpretation = 4
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	GROUP BY
-- 		geoborder.id, 
-- 		geoborder.xml_id,
-- 		geoborder.curve_xml_id,
-- 		geoborder.part,
-- 		before.geom, 
-- 		after.geom,
-- 		geoborder.increment,
-- 		geoborder.interpretation,
-- 		geoborder.total_count,
-- 		before.increment,
-- 		after.increment,
-- 		geoborder.geom, 
-- 		geoborder.horizontalaccuracy, 
-- 		geoborder.horizontalaccuracy_uom, 
-- 		geoborder.horizontalaccuracy_nilreason, 
-- 		geoborder.nilreason
-- 	UNION ALL
-- 	SELECT
-- 		partial_surface_view.id, 
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		partial_surface_view.increment,
-- 		partial_surface_view.interpretation,
-- 		partial_surface_view.total_count,
-- 		partial_surface_view.geom,
-- 		Null::geometry AS start_segment,
-- 		Null::geometry AS end_segment,
-- 		partial_surface_view.horizontalaccuracy, 
-- 		partial_surface_view.horizontalaccuracy_uom, 
-- 		partial_surface_view.horizontalaccuracy_nilreason, 
-- 		partial_surface_view.nilreason
-- 	FROM 
-- 		partial_surface_view
-- 	WHERE 
-- 		partial_surface_view.total_count > 2 
-- 		AND
-- 		partial_surface_view.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- g2_segment_filtered AS (
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		curr.geom AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.start_segment])) AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment)  
-- 		AND 
-- 		ST_Intersects(curr.geom, after.geom)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation = 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment])) AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 		g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, before.geom) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation = 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT 
-- 		curr.id, 
-- 		curr.xml_id,
-- 		curr.curve_xml_id,
-- 		curr.part,
-- 		curr.increment,
-- 		ST_LineMerge(ST_Collect(ARRAY[curr.geom, curr.end_segment, curr.start_segment])) AS geom,
-- 		curr.horizontalaccuracy, 
-- 		curr.horizontalaccuracy_uom, 
-- 		curr.horizontalaccuracy_nilreason, 
-- 		curr.nilreason
-- 	FROM
-- 		g2_segment curr
-- 	JOIN
-- 		g2_segment before
-- 	ON 
--         before.xml_id = curr.xml_id
-- 		AND
-- 		before.part = curr.part
-- 	    AND (
-- 	        before.increment = curr.increment - 1
-- 	        OR (before.increment = curr.total_count - 1 AND curr.increment = 0)
-- 	    )
-- 	JOIN	
-- 	g2_segment after
-- 	ON 
--         after.xml_id = curr.xml_id
-- 		AND
-- 		after.part = curr.part
-- 	    AND (
-- 	        after.increment = curr.increment + 1
-- 	        OR (after.increment = 0 AND curr.increment = curr.total_count - 1)
-- 	    )
-- 	WHERE 
-- 		curr.interpretation = 4
-- 		AND
-- 		ST_Intersects(curr.geom, curr.start_segment) 
-- 		AND 
-- 		ST_Intersects(curr.geom, curr.end_segment)
-- 		AND 
-- 		before.interpretation != 4
-- 		AND 
-- 		after.interpretation != 4
-- 	UNION ALL
-- 	SELECT
-- 		g2_segment.id, 
-- 		g2_segment.xml_id,
-- 		g2_segment.curve_xml_id,
-- 		g2_segment.part,
-- 		g2_segment.increment,
-- 		g2_segment.geom,
-- 		g2_segment.horizontalaccuracy, 
-- 		g2_segment.horizontalaccuracy_uom, 
-- 		g2_segment.horizontalaccuracy_nilreason, 
-- 		g2_segment.nilreason
-- 	FROM 
-- 		g2_segment
-- 	WHERE 
-- 		g2_segment.interpretation != 4
-- 	ORDER BY
-- 		id, 
-- 		xml_id, 
-- 		part,
-- 		increment
-- ),
-- r1 AS (
-- 	SELECT
-- 		partial_surface_view.id,
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		partial_surface_view.geom,
-- 		partial_surface_view.horizontalaccuracy,
-- 		partial_surface_view.horizontalaccuracy_uom,
-- 		partial_surface_view.horizontalaccuracy_nilreason,
-- 		partial_surface_view.nilreason
-- 	FROM
-- 		partial_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_surface_view.geom) = true
-- 		AND 
-- 		partial_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(geom) >= 4
-- ),
-- r2 AS (
-- 	SELECT
-- 		partial_surface_view.id,
-- 		partial_surface_view.xml_id,
-- 		partial_surface_view.curve_xml_id,
-- 		partial_surface_view.part,
-- 		ST_AddPoint(partial_surface_view.geom, ST_StartPoint(partial_surface_view.geom)) AS geom,
-- 		partial_surface_view.horizontalaccuracy,
-- 		partial_surface_view.horizontalaccuracy_uom,
-- 		partial_surface_view.horizontalaccuracy_nilreason,
-- 		partial_surface_view.nilreason
-- 	FROM
-- 		partial_surface_view
-- 	WHERE
-- 		ST_IsClosed(partial_surface_view.geom) = false
-- 		AND 
-- 		partial_surface_view.total_count = 1
-- 		AND 
-- 		ST_NPoints(ST_AddPoint(partial_surface_view.geom, ST_StartPoint(partial_surface_view.geom))) >= 4		
-- ),
-- g1 AS (
-- 	SELECT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		NOT ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- 	UNION ALL
-- 	SELECT DISTINCT 
-- 		ring.id,
-- 		ring.xml_id || geoborder.xml_id AS xml_id,
-- 		ring.curve_xml_id || geoborder.curve_xml_id AS curve_xml_id,
-- 		ring.part,
-- 		ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.end_segment, geoborder.start_segment])) AS geom,
-- 		ring.horizontalaccuracy,
-- 		ring.horizontalaccuracy_uom,
-- 		ring.horizontalaccuracy_nilreason,
-- 		ring.nilreason
-- 	FROM
-- 	g1_segment ring
-- 	JOIN
-- 	g1_segment geoborder
-- 	ON 
-- 		ring.xml_id = geoborder.xml_id
-- 		AND
-- 		geoborder.part = geoborder.part
-- 		AND 
-- 		ring.increment <> geoborder.increment
-- 	WHERE
-- 		ST_Intersects(geoborder.geom, geoborder.start_segment) 
-- 		AND 
-- 		ST_Intersects(geoborder.geom, geoborder.end_segment)
-- 		AND 
-- 		ST_Intersects(geoborder.start_segment, geoborder.end_segment)
-- 		AND
-- 		ST_NPoints(ST_LineMerge(ST_Collect(ARRAY[ring.geom, geoborder.geom, geoborder.end_segment, geoborder.start_segment]))) >= 4
-- ),
-- g2 AS (	
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_LineMerge(ST_Collect(g2_segment_filtered.geom)) AS geom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MIN(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = true
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- 	UNION ALL
-- 	SELECT 
-- 		MIN(g2_segment_filtered.id) AS id,
-- 		JSONB_AGG(g2_segment_filtered.xml_id) AS xml_id,
-- 		JSONB_AGG(g2_segment_filtered.curve_xml_id) AS curve_xml_id,
-- 		MIN(g2_segment_filtered.part) AS part,
-- 		ST_AddPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)), ST_StartPoint(ST_LineMerge(ST_Collect(g2_segment_filtered.geom)))) AS geom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy) AS horizontalaccuracy,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_uom) AS horizontalaccuracy_uom,
-- 		MIN(g2_segment_filtered.horizontalaccuracy_nilreason) AS horizontalaccuracy_nilreason,
-- 		MIN(g2_segment_filtered.nilreason) AS nilreason
-- 	FROM
-- 		g2_segment_filtered
-- 	GROUP BY
-- 		g2_segment_filtered.id,
-- 		g2_segment_filtered.xml_id,
-- 		g2_segment_filtered.part
-- 	HAVING
-- 		ST_IsClosed(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = false
-- 		AND
-- 		ST_GeometryType(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) = 'ST_LineString'
-- 		AND 
-- 		ST_NPoints(ST_LineMerge(ST_Collect(g2_segment_filtered.geom))) >= 4
-- ),
-- combined_data AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
-- 		geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         r1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id,
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         r2
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         g1
--     UNION ALL
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason,
--         part
--     FROM 
--         g2
-- ),
-- outer_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         ST_MakePolygon(geom) AS geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part = 0
-- ),
-- inner_shells AS (
--     SELECT 
--         id, 
--         xml_id, 
-- 		curve_xml_id,
--         geom,
--         horizontalaccuracy,
--         horizontalaccuracy_uom,
--         horizontalaccuracy_nilreason,
-- 		nilreason
--     FROM 
--         combined_data
--     WHERE 
--         part <> 0
-- )
-- SELECT 
--     outer_shells.id,
--     ST_MakePolygon(
--         ST_ExteriorRing(outer_shells.geom),
--         ARRAY(
--             SELECT ST_ExteriorRing(inner_shells.geom)
--             FROM inner_shells 
--             WHERE inner_shells.id = outer_shells.id
--         )
--     ) AS geom,
-- 	COALESCE(outer_shells.horizontalaccuracy || ' ' ||outer_shells. horizontalaccuracy_uom, '(' || outer_shells.horizontalaccuracy_nilreason || ')') AS horizontalAccuracy
-- FROM 
-- outer_shells;

-- CREATE INDEX ON geometry.surface_view (id);

DROP MATERIALIZED VIEW IF EXISTS geometry.surface_view CASCADE;

CREATE MATERIALIZED VIEW geometry.surface_view AS
SELECT 
0 AS id,
ST_GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1, 0 0))', 4326) AS geom,
0 AS horizontalAccuracy;
-- SurveillanceGroundStationPropertyType
-- ['notes.note_view']
drop materialized view if exists surveillance.surveillancegroundstation_view cascade;
create materialized view surveillance.surveillancegroundstation_view as
select
    surveillance.surveillancegroundstation_pt.id,
    surveillance.surveillancegroundstation_pt.nilreason AS surveillancegroundstation_nilreason,
    coalesce(cast(surveillance.surveillancegroundstation.videomap_value as varchar), '(' || surveillance.surveillancegroundstation.videomap_nilreason || ')') as videomap,
    coalesce(cast(organisation_unit_pt_sozdwv.title as varchar), '(' || organisation_unit_pt_sozdwv.nilreason[1] || ')') AS theunit,
    organisation_unit_pt_sozdwv.href AS theunit_href,
    jsonb_agg(DISTINCT notes_note_view_cbknwy.*) AS annotation
from surveillance.surveillancegroundstation_pt 
inner join surveillance.surveillancegroundstation on surveillance.surveillancegroundstation_pt.surveillancegroundstation_id = surveillance.surveillancegroundstation.id
left join organisation.unit_pt organisation_unit_pt_sozdwv on surveillance.surveillancegroundstation.theunit_id = organisation_unit_pt_sozdwv.id
left join master_join master_join_vfgkmq on surveillance.surveillancegroundstation.id = master_join_vfgkmq.source_id
left join notes.note_view notes_note_view_cbknwy on master_join_vfgkmq.target_id = notes_note_view_cbknwy.id
group by
    surveillance.surveillancegroundstation_pt.id,
    surveillance.surveillancegroundstation_pt.nilreason,
    surveillance.surveillancegroundstation.videomap_value,
    surveillance.surveillancegroundstation.videomap_nilreason,
    organisation_unit_pt_sozdwv.title,
    organisation_unit_pt_sozdwv.nilreason[1],
    organisation_unit_pt_sozdwv.href;
create index on surveillance.surveillancegroundstation_view (id);
-- TaxiwayContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.taxiwaycontamination_view cascade;
create materialized view airport_heliport.taxiwaycontamination_view as
select
    airport_heliport.taxiwaycontamination_pt.id,
    airport_heliport.taxiwaycontamination_pt.nilreason AS taxiwaycontamination_nilreason,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictionestimation_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.taxiwaycontamination.frictiondevice_value as varchar), '(' || airport_heliport.taxiwaycontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.taxiwaycontamination.obscuredlights_value as varchar), '(' || airport_heliport.taxiwaycontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.taxiwaycontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.taxiwaycontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.taxiwaycontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.taxiwaycontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.taxiwaycontamination.proportion_value as varchar), '(' || airport_heliport.taxiwaycontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.taxiwaycontamination.depth_value as varchar) || ' ' || airport_heliport.taxiwaycontamination.depth_uom, '(' || airport_heliport.taxiwaycontamination.depth_nilreason || ')') as depth,
    coalesce(cast(airport_heliport.taxiwaycontamination.clearedwidth_value as varchar) || ' ' || airport_heliport.taxiwaycontamination.clearedwidth_uom, '(' || airport_heliport.taxiwaycontamination.clearedwidth_nilreason || ')') as clearedwidth,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_vgbuqn.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_sqdked.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_aaxabx.*) AS annotation
from airport_heliport.taxiwaycontamination_pt 
inner join airport_heliport.taxiwaycontamination on airport_heliport.taxiwaycontamination_pt.taxiwaycontamination_id = airport_heliport.taxiwaycontamination.id
left join master_join master_join_euiirw on airport_heliport.taxiwaycontamination.id = master_join_euiirw.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_vgbuqn on master_join_euiirw.target_id = airport_heliport_ridge_pt_vgbuqn.id
left join master_join master_join_uboegh on airport_heliport.taxiwaycontamination.id = master_join_uboegh.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_sqdked on master_join_uboegh.target_id = airport_heliport_surfacecontaminationlayer_pt_sqdked.id
left join master_join master_join_yiivmf on airport_heliport.taxiwaycontamination.id = master_join_yiivmf.source_id
left join notes.note_view notes_note_view_aaxabx on master_join_yiivmf.target_id = notes_note_view_aaxabx.id
group by
    airport_heliport.taxiwaycontamination_pt.id,
    airport_heliport.taxiwaycontamination_pt.nilreason,
    airport_heliport.taxiwaycontamination.frictioncoefficient_value,
    airport_heliport.taxiwaycontamination.frictioncoefficient_nilreason,
    airport_heliport.taxiwaycontamination.frictionestimation_value,
    airport_heliport.taxiwaycontamination.frictionestimation_nilreason,
    airport_heliport.taxiwaycontamination.frictiondevice_value,
    airport_heliport.taxiwaycontamination.frictiondevice_nilreason,
    airport_heliport.taxiwaycontamination.obscuredlights_value,
    airport_heliport.taxiwaycontamination.obscuredlights_nilreason,
    airport_heliport.taxiwaycontamination.furtherclearancetime_value,
    airport_heliport.taxiwaycontamination.furtherclearancetime_nilreason,
    airport_heliport.taxiwaycontamination.furthertotalclearance_value,
    airport_heliport.taxiwaycontamination.furthertotalclearance_nilreason,
    airport_heliport.taxiwaycontamination.proportion_value,
    airport_heliport.taxiwaycontamination.proportion_nilreason,
    airport_heliport.taxiwaycontamination.depth_value,
    airport_heliport.taxiwaycontamination.depth_uom,
    airport_heliport.taxiwaycontamination.depth_nilreason,
    airport_heliport.taxiwaycontamination.clearedwidth_value,
    airport_heliport.taxiwaycontamination.clearedwidth_uom,
    airport_heliport.taxiwaycontamination.clearedwidth_nilreason;
create index on airport_heliport.taxiwaycontamination_view (id);
-- TimesheetPropertyType
-- ['notes.note_view']
-- Snowflake SQL : TimesheetPropertyType 

DROP MATERIALIZED VIEW IF EXISTS shared.timesheet_view CASCADE;

CREATE MATERIALIZED VIEW shared.timesheet_view AS
SELECT
shared.timesheet_pt.id,
jsonb_build_object(
	'timereference', COALESCE(shared.timesheet.timereference_value, '(' || shared.timesheet.timereference_nilreason || ')'),
	'startdate', COALESCE(shared.timesheet.startdate_value, '(' || shared.timesheet.startdate_nilreason || ')'),
	'enddate', COALESCE(shared.timesheet.enddate_value, '(' || shared.timesheet.enddate_nilreason || ')'),
	'day', COALESCE(shared.timesheet.day_value, '(' || shared.timesheet.day_nilreason || ')'),
	'daytil', COALESCE(shared.timesheet.daytil_value, '(' || shared.timesheet.daytil_nilreason || ')'),
	'starttime', COALESCE(shared.timesheet.starttime_value, '(' || shared.timesheet.starttime_nilreason || ')'),
	'startevent', COALESCE(shared.timesheet.startevent_value, '(' || shared.timesheet.startevent_nilreason || ')'),
	'starteventinterpretation', COALESCE(shared.timesheet.starteventinterpretation_value, '(' || shared.timesheet.starteventinterpretation_nilreason || ')'),
	'starttimerelativeevent', COALESCE(shared.timesheet.starttimerelativeevent_value || ' ' || shared.timesheet.starttimerelativeevent_uom, '(' || shared.timesheet.starttimerelativeevent_nilreason || ')'),
	'endtime', COALESCE(shared.timesheet.endtime_value, '(' || shared.timesheet.endtime_nilreason || ')'),
	'endevent', COALESCE(shared.timesheet.endevent_value, '(' || shared.timesheet.endevent_nilreason || ')'),
	'endeventinterpretation', COALESCE(shared.timesheet.endeventinterpretation_value, '(' || shared.timesheet.endeventinterpretation_nilreason || ')'),
	'endtimerelativeevent', COALESCE(shared.timesheet.endtimerelativeevent_value || ' ' || shared.timesheet.endtimerelativeevent_uom, '(' || shared.timesheet.endtimerelativeevent_nilreason || ')'),
	'daylightsavingadjust',COALESCE(shared.timesheet.daylightsavingadjust_value, '(' || shared.timesheet.daylightsavingadjust_nilreason || ')'),
	'excluded', COALESCE(shared.timesheet.excluded_value, '(' || shared.timesheet.excluded_nilreason || ')'),
	'annotations', COALESCE(jsonb_agg(notes.note_view.note), '[]'::jsonb)
)
FROM shared.timesheet_pt
INNER JOIN shared.timesheet ON shared.timesheet_pt.timesheet_id = shared.timesheet.id
LEFT JOIN master_join ON shared.timesheet.id = master_join.source_id
LEFT JOIN notes.note_view ON master_join.target_id = notes.note_view.id
GROUP BY
    shared.timesheet_pt.id,
    shared.timesheet.timereference_value,
    shared.timesheet.timereference_nilreason,
    shared.timesheet.startdate_value,
    shared.timesheet.startdate_nilreason,
    shared.timesheet.enddate_value,
    shared.timesheet.enddate_nilreason,
    shared.timesheet.day_value,
    shared.timesheet.day_nilreason,
    shared.timesheet.daytil_value,
    shared.timesheet.daytil_nilreason,
    shared.timesheet.starttime_value,
    shared.timesheet.starttime_nilreason,
    shared.timesheet.startevent_value,
    shared.timesheet.startevent_nilreason,
    shared.timesheet.starteventinterpretation_value,
    shared.timesheet.starteventinterpretation_nilreason,
    shared.timesheet.endtime_value,
    shared.timesheet.endtime_nilreason,
    shared.timesheet.endevent_value,
    shared.timesheet.endevent_nilreason,
    shared.timesheet.endeventinterpretation_value,
    shared.timesheet.endeventinterpretation_nilreason,
    shared.timesheet.daylightsavingadjust_value,
    shared.timesheet.daylightsavingadjust_nilreason,
    shared.timesheet.excluded_value,
    shared.timesheet.excluded_nilreason,
    shared.timesheet.starttimerelativeevent_value,
    shared.timesheet.starttimerelativeevent_uom,
    shared.timesheet.starttimerelativeevent_nilreason,
    shared.timesheet.endtimerelativeevent_value,
    shared.timesheet.endtimerelativeevent_uom,
    shared.timesheet.endtimerelativeevent_nilreason;

CREATE INDEX ON shared.timesheet_view (id);
-- TouchDownLiftOffContaminationPropertyType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.touchdownliftoffcontamination_view cascade;
create materialized view airport_heliport.touchdownliftoffcontamination_view as
select
    airport_heliport.touchdownliftoffcontamination_pt.id,
    airport_heliport.touchdownliftoffcontamination_pt.nilreason AS touchdownliftoffcontamination_nilreason,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictioncoefficient_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictioncoefficient_nilreason || ')') as frictioncoefficient,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictionestimation_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictionestimation_nilreason || ')') as frictionestimation,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.frictiondevice_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.frictiondevice_nilreason || ')') as frictiondevice,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.obscuredlights_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.obscuredlights_nilreason || ')') as obscuredlights,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.furtherclearancetime_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.furtherclearancetime_nilreason || ')') as furtherclearancetime,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.furthertotalclearance_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.furthertotalclearance_nilreason || ')') as furthertotalclearance,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.proportion_value as varchar), '(' || airport_heliport.touchdownliftoffcontamination.proportion_nilreason || ')') as proportion,
    coalesce(cast(airport_heliport.touchdownliftoffcontamination.depth_value as varchar) || ' ' || airport_heliport.touchdownliftoffcontamination.depth_uom, '(' || airport_heliport.touchdownliftoffcontamination.depth_nilreason || ')') as depth,
    jsonb_agg(DISTINCT airport_heliport_ridge_pt_ziycpu.id) AS criticalridge,
    jsonb_agg(DISTINCT airport_heliport_surfacecontaminationlayer_pt_bgaras.id) AS layer,
    jsonb_agg(DISTINCT notes_note_view_rsxfva.*) AS annotation
from airport_heliport.touchdownliftoffcontamination_pt 
inner join airport_heliport.touchdownliftoffcontamination on airport_heliport.touchdownliftoffcontamination_pt.touchdownliftoffcontamination_id = airport_heliport.touchdownliftoffcontamination.id
left join master_join master_join_fiknnd on airport_heliport.touchdownliftoffcontamination.id = master_join_fiknnd.source_id
left join airport_heliport.ridge_pt airport_heliport_ridge_pt_ziycpu on master_join_fiknnd.target_id = airport_heliport_ridge_pt_ziycpu.id
left join master_join master_join_bipzdr on airport_heliport.touchdownliftoffcontamination.id = master_join_bipzdr.source_id
left join airport_heliport.surfacecontaminationlayer_pt airport_heliport_surfacecontaminationlayer_pt_bgaras on master_join_bipzdr.target_id = airport_heliport_surfacecontaminationlayer_pt_bgaras.id
left join master_join master_join_bvokqt on airport_heliport.touchdownliftoffcontamination.id = master_join_bvokqt.source_id
left join notes.note_view notes_note_view_rsxfva on master_join_bvokqt.target_id = notes_note_view_rsxfva.id
group by
    airport_heliport.touchdownliftoffcontamination_pt.id,
    airport_heliport.touchdownliftoffcontamination_pt.nilreason,
    airport_heliport.touchdownliftoffcontamination.frictioncoefficient_value,
    airport_heliport.touchdownliftoffcontamination.frictioncoefficient_nilreason,
    airport_heliport.touchdownliftoffcontamination.frictionestimation_value,
    airport_heliport.touchdownliftoffcontamination.frictionestimation_nilreason,
    airport_heliport.touchdownliftoffcontamination.frictiondevice_value,
    airport_heliport.touchdownliftoffcontamination.frictiondevice_nilreason,
    airport_heliport.touchdownliftoffcontamination.obscuredlights_value,
    airport_heliport.touchdownliftoffcontamination.obscuredlights_nilreason,
    airport_heliport.touchdownliftoffcontamination.furtherclearancetime_value,
    airport_heliport.touchdownliftoffcontamination.furtherclearancetime_nilreason,
    airport_heliport.touchdownliftoffcontamination.furthertotalclearance_value,
    airport_heliport.touchdownliftoffcontamination.furthertotalclearance_nilreason,
    airport_heliport.touchdownliftoffcontamination.proportion_value,
    airport_heliport.touchdownliftoffcontamination.proportion_nilreason,
    airport_heliport.touchdownliftoffcontamination.depth_value,
    airport_heliport.touchdownliftoffcontamination.depth_uom,
    airport_heliport.touchdownliftoffcontamination.depth_nilreason;
create index on airport_heliport.touchdownliftoffcontamination_view (id);
-- UnitDependencyPropertyType
-- ['notes.note_view']
drop materialized view if exists organisation.unitdependency_view cascade;
create materialized view organisation.unitdependency_view as
select
    organisation.unitdependency_pt.id,
    organisation.unitdependency_pt.nilreason AS unitdependency_nilreason,
    coalesce(cast(organisation.unitdependency.type_value as varchar), '(' || organisation.unitdependency.type_nilreason || ')') as type,
    coalesce(cast(organisation_unit_pt_ahaikk.title as varchar), '(' || organisation_unit_pt_ahaikk.nilreason[1] || ')') AS theunit,
    organisation_unit_pt_ahaikk.href AS theunit_href,
    jsonb_agg(DISTINCT notes_note_view_asdxia.*) AS annotation
from organisation.unitdependency_pt 
inner join organisation.unitdependency on organisation.unitdependency_pt.unitdependency_id = organisation.unitdependency.id
left join organisation.unit_pt organisation_unit_pt_ahaikk on organisation.unitdependency.theunit_id = organisation_unit_pt_ahaikk.id
left join master_join master_join_rsppuo on organisation.unitdependency.id = master_join_rsppuo.source_id
left join notes.note_view notes_note_view_asdxia on master_join_rsppuo.target_id = notes_note_view_asdxia.id
group by
    organisation.unitdependency_pt.id,
    organisation.unitdependency_pt.nilreason,
    organisation.unitdependency.type_value,
    organisation.unitdependency.type_nilreason,
    organisation_unit_pt_ahaikk.title,
    organisation_unit_pt_ahaikk.nilreason[1],
    organisation_unit_pt_ahaikk.href;
create index on organisation.unitdependency_view (id);
-- AerialRefuellingTrackPropertyType
-- ['geometry.curve_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuellingtrack_view cascade;
create materialized view aerial_refuelling.aerialrefuellingtrack_view as
select
    aerial_refuelling.aerialrefuellingtrack_pt.id,
    aerial_refuelling.aerialrefuellingtrack_pt.nilreason AS aerialrefuellingtrack_nilreason,
    geometry_curve_view_uphumb.geom AS extent_geom,
    geometry_curve_view_uphumb.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(DISTINCT aerial_refuelling_aerialrefuellingpoint_pt_eccmxj.id) AS point,
    jsonb_agg(DISTINCT shared_airspacelayer_pt_ciqkec.id) AS verticalextent,
    jsonb_agg(DISTINCT notes_note_view_anwdsl.*) AS annotation
from aerial_refuelling.aerialrefuellingtrack_pt 
inner join aerial_refuelling.aerialrefuellingtrack on aerial_refuelling.aerialrefuellingtrack_pt.aerialrefuellingtrack_id = aerial_refuelling.aerialrefuellingtrack.id
left join geometry.curve_view geometry_curve_view_uphumb on aerial_refuelling.aerialrefuellingtrack.extent_id = geometry_curve_view_uphumb.id
left join master_join master_join_lnnbtg on aerial_refuelling.aerialrefuellingtrack.id = master_join_lnnbtg.source_id
left join aerial_refuelling.aerialrefuellingpoint_pt aerial_refuelling_aerialrefuellingpoint_pt_eccmxj on master_join_lnnbtg.target_id = aerial_refuelling_aerialrefuellingpoint_pt_eccmxj.id
left join master_join master_join_aodcxp on aerial_refuelling.aerialrefuellingtrack.id = master_join_aodcxp.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_ciqkec on master_join_aodcxp.target_id = shared_airspacelayer_pt_ciqkec.id
left join master_join master_join_uimkmb on aerial_refuelling.aerialrefuellingtrack.id = master_join_uimkmb.source_id
left join notes.note_view notes_note_view_anwdsl on master_join_uimkmb.target_id = notes_note_view_anwdsl.id
group by
    aerial_refuelling.aerialrefuellingtrack_pt.id,
    aerial_refuelling.aerialrefuellingtrack_pt.nilreason,
    geometry_curve_view_uphumb.geom,
    geometry_curve_view_uphumb.horizontalAccuracy;
create index on aerial_refuelling.aerialrefuellingtrack_view (id);
-- ProcedureTransitionPropertyType
-- ['geometry.curve_view', 'notes.note_view']
drop materialized view if exists procedure.proceduretransition_view cascade;
create materialized view procedure.proceduretransition_view as
select
    procedure.proceduretransition_pt.id,
    procedure.proceduretransition_pt.nilreason AS proceduretransition_nilreason,
    coalesce(cast(procedure.proceduretransition.transitionid_value as varchar), '(' || procedure.proceduretransition.transitionid_nilreason || ')') as transitionid,
    coalesce(cast(procedure.proceduretransition.type_value as varchar), '(' || procedure.proceduretransition.type_nilreason || ')') as type,
    coalesce(cast(procedure.proceduretransition.instruction_value as varchar), '(' || procedure.proceduretransition.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.proceduretransition.vectorheading_value as varchar), '(' || procedure.proceduretransition.vectorheading_nilreason || ')') as vectorheading,
    procedure_landingtakeoffareacollection_pt_ozskco.id AS departurerunwaytransition,
    geometry_curve_view_xaxvrf.geom AS trajectory_geom,
    geometry_curve_view_xaxvrf.horizontalAccuracy as trajectory_horizontalaccuracy,
    jsonb_agg(DISTINCT procedure_proceduretransitionleg_pt_popiaq.id) AS transitionleg,
    jsonb_agg(DISTINCT notes_note_view_dzpbzc.*) AS annotation
from procedure.proceduretransition_pt 
inner join procedure.proceduretransition on procedure.proceduretransition_pt.proceduretransition_id = procedure.proceduretransition.id
left join procedure.landingtakeoffareacollection_pt procedure_landingtakeoffareacollection_pt_ozskco on procedure.proceduretransition.departurerunwaytransition_id = procedure_landingtakeoffareacollection_pt_ozskco.id
left join geometry.curve_view geometry_curve_view_xaxvrf on procedure.proceduretransition.trajectory_id = geometry_curve_view_xaxvrf.id
left join master_join master_join_hobscv on procedure.proceduretransition.id = master_join_hobscv.source_id
left join procedure.proceduretransitionleg_pt procedure_proceduretransitionleg_pt_popiaq on master_join_hobscv.target_id = procedure_proceduretransitionleg_pt_popiaq.id
left join master_join master_join_eljltt on procedure.proceduretransition.id = master_join_eljltt.source_id
left join notes.note_view notes_note_view_dzpbzc on master_join_eljltt.target_id = notes_note_view_dzpbzc.id
group by
    procedure.proceduretransition_pt.id,
    procedure.proceduretransition_pt.nilreason,
    procedure.proceduretransition.transitionid_value,
    procedure.proceduretransition.transitionid_nilreason,
    procedure.proceduretransition.type_value,
    procedure.proceduretransition.type_nilreason,
    procedure.proceduretransition.instruction_value,
    procedure.proceduretransition.instruction_nilreason,
    procedure.proceduretransition.vectorheading_value,
    procedure.proceduretransition.vectorheading_nilreason,
    procedure_landingtakeoffareacollection_pt_ozskco.id,
    geometry_curve_view_xaxvrf.geom,
    geometry_curve_view_xaxvrf.horizontalAccuracy;
create index on procedure.proceduretransition_view (id);
-- LightElementPropertyType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists shared.lightelement_view cascade;
create materialized view shared.lightelement_view as
select
    shared.lightelement_pt.id,
    shared.lightelement_pt.nilreason AS lightelement_nilreason,
    coalesce(cast(shared.lightelement.colour_value as varchar), '(' || shared.lightelement.colour_nilreason || ')') as colour,
    coalesce(cast(shared.lightelement.intensitylevel_value as varchar), '(' || shared.lightelement.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(shared.lightelement.type_value as varchar), '(' || shared.lightelement.type_nilreason || ')') as type,
    coalesce(cast(shared.lightelement.intensity_value as varchar) || ' ' || shared.lightelement.intensity_uom, '(' || shared.lightelement.intensity_nilreason || ')') as intensity,
    geometry_elevatedpoint_view_wluuxt.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_wluuxt.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_wluuxt.geom) AS location_latitude,
    geometry_elevatedpoint_view_wluuxt.elevation AS location_elevation,
    geometry_elevatedpoint_view_wluuxt.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_wluuxt.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_wluuxt.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_wluuxt.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_pikedl.*) AS annotation,
    jsonb_agg(DISTINCT shared_lightelementstatus_pt_nczcku.id) AS availability
from shared.lightelement_pt 
inner join shared.lightelement on shared.lightelement_pt.lightelement_id = shared.lightelement.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_wluuxt on shared.lightelement.location_id = geometry_elevatedpoint_view_wluuxt.id
left join master_join master_join_vbguag on shared.lightelement.id = master_join_vbguag.source_id
left join notes.note_view notes_note_view_pikedl on master_join_vbguag.target_id = notes_note_view_pikedl.id
left join master_join master_join_tsjzgu on shared.lightelement.id = master_join_tsjzgu.source_id
left join shared.lightelementstatus_pt shared_lightelementstatus_pt_nczcku on master_join_tsjzgu.target_id = shared_lightelementstatus_pt_nczcku.id
group by
    shared.lightelement_pt.id,
    shared.lightelement_pt.nilreason,
    shared.lightelement.colour_value,
    shared.lightelement.colour_nilreason,
    shared.lightelement.intensitylevel_value,
    shared.lightelement.intensitylevel_nilreason,
    shared.lightelement.type_value,
    shared.lightelement.type_nilreason,
    shared.lightelement.intensity_value,
    shared.lightelement.intensity_uom,
    shared.lightelement.intensity_nilreason,
    geometry_elevatedpoint_view_wluuxt.geom,
    geometry_elevatedpoint_view_wluuxt.elevation,
    geometry_elevatedpoint_view_wluuxt.geoidUndulation,
    geometry_elevatedpoint_view_wluuxt.verticalDatum,
    geometry_elevatedpoint_view_wluuxt.verticalAccuracy,
    geometry_elevatedpoint_view_wluuxt.horizontalAccuracy;
create index on shared.lightelement_view (id);
-- ReflectorPropertyType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists surveillance.reflector_view cascade;
create materialized view surveillance.reflector_view as
select
    surveillance.reflector_pt.id,
    surveillance.reflector_pt.nilreason AS reflector_nilreason,
    coalesce(cast(surveillance.reflector.type_value as varchar), '(' || surveillance.reflector.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_ctynhj.geom AS touchdownreflector_geom,
    ST_X(geometry_elevatedpoint_view_ctynhj.geom) AS touchdownreflector_longitude,
    ST_Y(geometry_elevatedpoint_view_ctynhj.geom) AS touchdownreflector_latitude,
    geometry_elevatedpoint_view_ctynhj.elevation AS touchdownreflector_elevation,
    geometry_elevatedpoint_view_ctynhj.geoidUndulation AS touchdownreflector_geoidundulation,
    geometry_elevatedpoint_view_ctynhj.verticalDatum AS touchdownreflector_verticaldatum,
    geometry_elevatedpoint_view_ctynhj.verticalAccuracy AS touchdownreflector_verticalaccuracy,
    geometry_elevatedpoint_view_ctynhj.horizontalAccuracy AS touchdownreflector_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_wchgwn.*) AS annotation
from surveillance.reflector_pt 
inner join surveillance.reflector on surveillance.reflector_pt.reflector_id = surveillance.reflector.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_ctynhj on surveillance.reflector.touchdownreflector_id = geometry_elevatedpoint_view_ctynhj.id
left join master_join master_join_mnlmzi on surveillance.reflector.id = master_join_mnlmzi.source_id
left join notes.note_view notes_note_view_wchgwn on master_join_mnlmzi.target_id = notes_note_view_wchgwn.id
group by
    surveillance.reflector_pt.id,
    surveillance.reflector_pt.nilreason,
    surveillance.reflector.type_value,
    surveillance.reflector.type_nilreason,
    geometry_elevatedpoint_view_ctynhj.geom,
    geometry_elevatedpoint_view_ctynhj.elevation,
    geometry_elevatedpoint_view_ctynhj.geoidUndulation,
    geometry_elevatedpoint_view_ctynhj.verticalDatum,
    geometry_elevatedpoint_view_ctynhj.verticalAccuracy,
    geometry_elevatedpoint_view_ctynhj.horizontalAccuracy;
create index on surveillance.reflector_view (id);
-- MarkingElementPropertyType
-- ['geometry.elevatedpoint_view', 'geometry.elevatedcurve_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.markingelement_view cascade;
create materialized view airport_heliport.markingelement_view as
select
    airport_heliport.markingelement_pt.id,
    airport_heliport.markingelement_pt.nilreason AS markingelement_nilreason,
    coalesce(cast(airport_heliport.markingelement.colour_value as varchar), '(' || airport_heliport.markingelement.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.markingelement.style_value as varchar), '(' || airport_heliport.markingelement.style_nilreason || ')') as style,
    geometry_elevatedsurface_view_edywyl.geom AS extentsurfaceextent_geom,
    geometry_elevatedsurface_view_edywyl.elevation AS extentsurfaceextent_elevation,
    geometry_elevatedsurface_view_edywyl.geoidUndulation AS extentsurfaceextent_geoidundulation,
    geometry_elevatedsurface_view_edywyl.verticalDatum AS extentsurfaceextent_verticaldatum,
    geometry_elevatedsurface_view_edywyl.verticalAccuracy AS extentsurfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_edywyl.horizontalAccuracy AS extentsurfaceextent_horizontalaccuracy,
    geometry_elevatedcurve_view_qjjknv.geom AS extentcurveextent_geom,
    geometry_elevatedcurve_view_qjjknv.elevation AS extentcurveextent_elevation,
    geometry_elevatedcurve_view_qjjknv.geoidUndulation AS extentcurveextent_geoidundulation,
    geometry_elevatedcurve_view_qjjknv.verticalDatum AS extentcurveextent_verticaldatum,
    geometry_elevatedcurve_view_qjjknv.verticalAccuracy AS extentcurveextent_verticalaccuracy,
    geometry_elevatedcurve_view_qjjknv.horizontalAccuracy AS extentcurveextent_horizontalaccuracy,
    geometry_elevatedpoint_view_kbbaqo.geom AS extentlocation_geom,
    ST_X(geometry_elevatedpoint_view_kbbaqo.geom) AS extentlocation_longitude,
    ST_Y(geometry_elevatedpoint_view_kbbaqo.geom) AS extentlocation_latitude,
    geometry_elevatedpoint_view_kbbaqo.elevation AS extentlocation_elevation,
    geometry_elevatedpoint_view_kbbaqo.geoidUndulation AS extentlocation_geoidundulation,
    geometry_elevatedpoint_view_kbbaqo.verticalDatum AS extentlocation_verticaldatum,
    geometry_elevatedpoint_view_kbbaqo.verticalAccuracy AS extentlocation_verticalaccuracy,
    geometry_elevatedpoint_view_kbbaqo.horizontalAccuracy AS extentlocation_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_ymqjro.*) AS annotation
from airport_heliport.markingelement_pt 
inner join airport_heliport.markingelement on airport_heliport.markingelement_pt.markingelement_id = airport_heliport.markingelement.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_edywyl on airport_heliport.markingelement.extent_surfaceextent_id = geometry_elevatedsurface_view_edywyl.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_qjjknv on airport_heliport.markingelement.extent_curveextent_id = geometry_elevatedcurve_view_qjjknv.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_kbbaqo on airport_heliport.markingelement.extent_location_id = geometry_elevatedpoint_view_kbbaqo.id
left join master_join master_join_uyghui on airport_heliport.markingelement.id = master_join_uyghui.source_id
left join notes.note_view notes_note_view_ymqjro on master_join_uyghui.target_id = notes_note_view_ymqjro.id
group by
    airport_heliport.markingelement_pt.id,
    airport_heliport.markingelement_pt.nilreason,
    airport_heliport.markingelement.colour_value,
    airport_heliport.markingelement.colour_nilreason,
    airport_heliport.markingelement.style_value,
    airport_heliport.markingelement.style_nilreason,
    geometry_elevatedsurface_view_edywyl.geom,
    geometry_elevatedsurface_view_edywyl.elevation,
    geometry_elevatedsurface_view_edywyl.geoidUndulation,
    geometry_elevatedsurface_view_edywyl.verticalDatum,
    geometry_elevatedsurface_view_edywyl.verticalAccuracy,
    geometry_elevatedsurface_view_edywyl.horizontalAccuracy,
    geometry_elevatedcurve_view_qjjknv.geom,
    geometry_elevatedcurve_view_qjjknv.elevation,
    geometry_elevatedcurve_view_qjjknv.geoidUndulation,
    geometry_elevatedcurve_view_qjjknv.verticalDatum,
    geometry_elevatedcurve_view_qjjknv.verticalAccuracy,
    geometry_elevatedcurve_view_qjjknv.horizontalAccuracy,
    geometry_elevatedpoint_view_kbbaqo.geom,
    geometry_elevatedpoint_view_kbbaqo.elevation,
    geometry_elevatedpoint_view_kbbaqo.geoidUndulation,
    geometry_elevatedpoint_view_kbbaqo.verticalDatum,
    geometry_elevatedpoint_view_kbbaqo.verticalAccuracy,
    geometry_elevatedpoint_view_kbbaqo.horizontalAccuracy;
create index on airport_heliport.markingelement_view (id);
-- SurfaceContaminationLayerPropertyType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.surfacecontaminationlayer_view cascade;
create materialized view airport_heliport.surfacecontaminationlayer_view as
select
    airport_heliport.surfacecontaminationlayer_pt.id,
    airport_heliport.surfacecontaminationlayer_pt.nilreason AS surfacecontaminationlayer_nilreason,
    coalesce(cast(airport_heliport.surfacecontaminationlayer.layerorder_value as varchar), '(' || airport_heliport.surfacecontaminationlayer.layerorder_nilreason || ')') as layerorder,
    coalesce(cast(airport_heliport.surfacecontaminationlayer.type_value as varchar), '(' || airport_heliport.surfacecontaminationlayer.type_nilreason || ')') as type,
    ST_Collect(DISTINCT geometry_elevatedsurface_view_ekqxkf.geom) AS extent_geom,
    jsonb_agg(DISTINCT notes_note_view_sejhrp.*) AS annotation
from airport_heliport.surfacecontaminationlayer_pt 
inner join airport_heliport.surfacecontaminationlayer on airport_heliport.surfacecontaminationlayer_pt.surfacecontaminationlayer_id = airport_heliport.surfacecontaminationlayer.id
left join master_join master_join_qkjuyl on airport_heliport.surfacecontaminationlayer.id = master_join_qkjuyl.source_id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_ekqxkf on master_join_qkjuyl.target_id = geometry_elevatedsurface_view_ekqxkf.id
left join master_join master_join_flnluq on airport_heliport.surfacecontaminationlayer.id = master_join_flnluq.source_id
left join notes.note_view notes_note_view_sejhrp on master_join_flnluq.target_id = notes_note_view_sejhrp.id
group by
    airport_heliport.surfacecontaminationlayer_pt.id,
    airport_heliport.surfacecontaminationlayer_pt.nilreason,
    airport_heliport.surfacecontaminationlayer.layerorder_value,
    airport_heliport.surfacecontaminationlayer.layerorder_nilreason,
    airport_heliport.surfacecontaminationlayer.type_value,
    airport_heliport.surfacecontaminationlayer.type_nilreason;
create index on airport_heliport.surfacecontaminationlayer_view (id);
-- AerialRefuellingPointPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuellingpoint_view cascade;
create materialized view aerial_refuelling.aerialrefuellingpoint_view as
select
    aerial_refuelling.aerialrefuellingpoint_pt.id,
    aerial_refuelling.aerialrefuellingpoint_pt.nilreason AS aerialrefuellingpoint_nilreason,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.reportingatc_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.flyover_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.waypoint_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.radarguidance_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.sequence_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.sequence_nilreason || ')') as sequence,
    coalesce(cast(aerial_refuelling.aerialrefuellingpoint.usagetype_value as varchar), '(' || aerial_refuelling.aerialrefuellingpoint.usagetype_nilreason || ')') as usagetype,
    coalesce(cast(navaids_points_designatedpoint_pt_lfpise.title as varchar), '(' || navaids_points_designatedpoint_pt_lfpise.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_lfpise.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_tshhdv.title as varchar), '(' || navaids_points_navaid_pt_tshhdv.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_tshhdv.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_foqkcz.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_foqkcz.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_foqkcz.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_adcihr.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_adcihr.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_adcihr.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_unwrpu.title as varchar), '(' || airport_heliport_airportheliport_pt_unwrpu.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_unwrpu.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_ztqmgh.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_ztqmgh.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_ztqmgh.geom) AS pointchoiceposition_latitude,
    geometry_point_view_ztqmgh.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    coalesce(cast(shared_radiofrequencyarea_pt_htvowg.title as varchar), '(' || shared_radiofrequencyarea_pt_htvowg.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_htvowg.href AS extendedservicevolume_href,
    jsonb_agg(DISTINCT navaids_points_pointreference_pt_imcwrl.id) AS facilitymakeup,
    jsonb_agg(DISTINCT notes_note_view_zsdjwq.*) AS annotation
from aerial_refuelling.aerialrefuellingpoint_pt 
inner join aerial_refuelling.aerialrefuellingpoint on aerial_refuelling.aerialrefuellingpoint_pt.aerialrefuellingpoint_id = aerial_refuelling.aerialrefuellingpoint.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_lfpise on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_lfpise.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_tshhdv on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_navaidsystem_id = navaids_points_navaid_pt_tshhdv.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_foqkcz on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_foqkcz.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_adcihr on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_adcihr.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_unwrpu on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_unwrpu.id
left join geometry.point_view geometry_point_view_ztqmgh on aerial_refuelling.aerialrefuellingpoint.aerialrefuellingpoint_position_id = geometry_point_view_ztqmgh.id
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_htvowg on aerial_refuelling.aerialrefuellingpoint.extendedservicevolume_id = shared_radiofrequencyarea_pt_htvowg.id
left join master_join master_join_dcafra on aerial_refuelling.aerialrefuellingpoint.id = master_join_dcafra.source_id
left join navaids_points.pointreference_pt navaids_points_pointreference_pt_imcwrl on master_join_dcafra.target_id = navaids_points_pointreference_pt_imcwrl.id
left join master_join master_join_kvuyuo on aerial_refuelling.aerialrefuellingpoint.id = master_join_kvuyuo.source_id
left join notes.note_view notes_note_view_zsdjwq on master_join_kvuyuo.target_id = notes_note_view_zsdjwq.id
group by
    aerial_refuelling.aerialrefuellingpoint_pt.id,
    aerial_refuelling.aerialrefuellingpoint_pt.nilreason,
    aerial_refuelling.aerialrefuellingpoint.reportingatc_value,
    aerial_refuelling.aerialrefuellingpoint.reportingatc_nilreason,
    aerial_refuelling.aerialrefuellingpoint.flyover_value,
    aerial_refuelling.aerialrefuellingpoint.flyover_nilreason,
    aerial_refuelling.aerialrefuellingpoint.waypoint_value,
    aerial_refuelling.aerialrefuellingpoint.waypoint_nilreason,
    aerial_refuelling.aerialrefuellingpoint.radarguidance_value,
    aerial_refuelling.aerialrefuellingpoint.radarguidance_nilreason,
    aerial_refuelling.aerialrefuellingpoint.sequence_value,
    aerial_refuelling.aerialrefuellingpoint.sequence_nilreason,
    aerial_refuelling.aerialrefuellingpoint.usagetype_value,
    aerial_refuelling.aerialrefuellingpoint.usagetype_nilreason,
    navaids_points_designatedpoint_pt_lfpise.title,
    navaids_points_designatedpoint_pt_lfpise.nilreason[1],
    navaids_points_designatedpoint_pt_lfpise.href,
    navaids_points_navaid_pt_tshhdv.title,
    navaids_points_navaid_pt_tshhdv.nilreason[1],
    navaids_points_navaid_pt_tshhdv.href,
    airport_heliport_touchdownliftoff_pt_foqkcz.title,
    airport_heliport_touchdownliftoff_pt_foqkcz.nilreason[1],
    airport_heliport_touchdownliftoff_pt_foqkcz.href,
    airport_heliport_runwaycentrelinepoint_pt_adcihr.title,
    airport_heliport_runwaycentrelinepoint_pt_adcihr.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_adcihr.href,
    airport_heliport_airportheliport_pt_unwrpu.title,
    airport_heliport_airportheliport_pt_unwrpu.nilreason[1],
    airport_heliport_airportheliport_pt_unwrpu.href,
    geometry_point_view_ztqmgh.geom,
    geometry_point_view_ztqmgh.horizontalAccuracy,
    shared_radiofrequencyarea_pt_htvowg.title,
    shared_radiofrequencyarea_pt_htvowg.nilreason[1],
    shared_radiofrequencyarea_pt_htvowg.href;
create index on aerial_refuelling.aerialrefuellingpoint_view (id);
-- DirectFlightSegmentPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.directflightsegment_view cascade;
create materialized view routes.directflightsegment_view as
select
    routes.directflightsegment_pt.id,
    routes.directflightsegment_pt.nilreason AS directflightsegment_nilreason,
    coalesce(cast(navaids_points_designatedpoint_pt_lvfaix.title as varchar), '(' || navaids_points_designatedpoint_pt_lvfaix.nilreason[1] || ')') AS endfixdesignatedpoint,
    navaids_points_designatedpoint_pt_lvfaix.href AS endfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_cwidmu.title as varchar), '(' || navaids_points_designatedpoint_pt_cwidmu.nilreason[1] || ')') AS startfixdesignatedpoint,
    navaids_points_designatedpoint_pt_cwidmu.href AS startfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_xcdnxf.title as varchar), '(' || navaids_points_navaid_pt_xcdnxf.nilreason[1] || ')') AS endnavaidsystem,
    navaids_points_navaid_pt_xcdnxf.href AS endnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_sjauti.title as varchar), '(' || navaids_points_navaid_pt_sjauti.nilreason[1] || ')') AS startnavaidsystem,
    navaids_points_navaid_pt_sjauti.href AS startnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_lnsotu.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_lnsotu.nilreason[1] || ')') AS endaimingpoint,
    airport_heliport_touchdownliftoff_pt_lnsotu.href AS endaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_zhghgz.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_zhghgz.nilreason[1] || ')') AS startaimingpoint,
    airport_heliport_touchdownliftoff_pt_zhghgz.href AS startaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_owdnjf.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_owdnjf.nilreason[1] || ')') AS endrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_owdnjf.href AS endrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_wugbgf.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_wugbgf.nilreason[1] || ')') AS startrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_wugbgf.href AS startrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_upuiwq.title as varchar), '(' || airport_heliport_airportheliport_pt_upuiwq.nilreason[1] || ')') AS endairportreferencepoint,
    airport_heliport_airportheliport_pt_upuiwq.href AS endairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_leqwlm.title as varchar), '(' || airport_heliport_airportheliport_pt_leqwlm.nilreason[1] || ')') AS startairportreferencepoint,
    airport_heliport_airportheliport_pt_leqwlm.href AS startairportreferencepoint_href,
    geometry_point_view_gbftys.geom AS endposition_geom,
    ST_X(geometry_point_view_gbftys.geom) AS endposition_longitude,
    ST_Y(geometry_point_view_gbftys.geom) AS endposition_latitude,
    geometry_point_view_gbftys.horizontalAccuracy AS endposition_horizontalaccuracy,
    geometry_point_view_acsxdq.geom AS startposition_geom,
    ST_X(geometry_point_view_acsxdq.geom) AS startposition_longitude,
    ST_Y(geometry_point_view_acsxdq.geom) AS startposition_latitude,
    geometry_point_view_acsxdq.horizontalAccuracy AS startposition_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_zbbuxg.*) AS annotation
from routes.directflightsegment_pt 
inner join routes.directflightsegment on routes.directflightsegment_pt.directflightsegment_id = routes.directflightsegment.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_lvfaix on routes.directflightsegment.end_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_lvfaix.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_xcdnxf on routes.directflightsegment.end_navaidsystem_id = navaids_points_navaid_pt_xcdnxf.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_lnsotu on routes.directflightsegment.end_aimingpoint_id = airport_heliport_touchdownliftoff_pt_lnsotu.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_owdnjf on routes.directflightsegment.end_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_owdnjf.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_upuiwq on routes.directflightsegment.end_airportreferencepoint_id = airport_heliport_airportheliport_pt_upuiwq.id
left join geometry.point_view geometry_point_view_gbftys on routes.directflightsegment.end_position_id = geometry_point_view_gbftys.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_cwidmu on routes.directflightsegment.start_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_cwidmu.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_sjauti on routes.directflightsegment.start_navaidsystem_id = navaids_points_navaid_pt_sjauti.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_zhghgz on routes.directflightsegment.start_aimingpoint_id = airport_heliport_touchdownliftoff_pt_zhghgz.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_wugbgf on routes.directflightsegment.start_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_wugbgf.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_leqwlm on routes.directflightsegment.start_airportreferencepoint_id = airport_heliport_airportheliport_pt_leqwlm.id
left join geometry.point_view geometry_point_view_acsxdq on routes.directflightsegment.start_position_id = geometry_point_view_acsxdq.id
left join master_join master_join_rcdrfd on routes.directflightsegment.id = master_join_rcdrfd.source_id
left join notes.note_view notes_note_view_zbbuxg on master_join_rcdrfd.target_id = notes_note_view_zbbuxg.id
group by
    routes.directflightsegment_pt.id,
    routes.directflightsegment_pt.nilreason,
    navaids_points_designatedpoint_pt_lvfaix.title,
    navaids_points_designatedpoint_pt_lvfaix.nilreason[1],
    navaids_points_designatedpoint_pt_lvfaix.href,
    navaids_points_navaid_pt_xcdnxf.title,
    navaids_points_navaid_pt_xcdnxf.nilreason[1],
    navaids_points_navaid_pt_xcdnxf.href,
    airport_heliport_touchdownliftoff_pt_lnsotu.title,
    airport_heliport_touchdownliftoff_pt_lnsotu.nilreason[1],
    airport_heliport_touchdownliftoff_pt_lnsotu.href,
    airport_heliport_runwaycentrelinepoint_pt_owdnjf.title,
    airport_heliport_runwaycentrelinepoint_pt_owdnjf.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_owdnjf.href,
    airport_heliport_airportheliport_pt_upuiwq.title,
    airport_heliport_airportheliport_pt_upuiwq.nilreason[1],
    airport_heliport_airportheliport_pt_upuiwq.href,
    geometry_point_view_gbftys.geom,
    geometry_point_view_gbftys.horizontalAccuracy,
    navaids_points_designatedpoint_pt_cwidmu.title,
    navaids_points_designatedpoint_pt_cwidmu.nilreason[1],
    navaids_points_designatedpoint_pt_cwidmu.href,
    navaids_points_navaid_pt_sjauti.title,
    navaids_points_navaid_pt_sjauti.nilreason[1],
    navaids_points_navaid_pt_sjauti.href,
    airport_heliport_touchdownliftoff_pt_zhghgz.title,
    airport_heliport_touchdownliftoff_pt_zhghgz.nilreason[1],
    airport_heliport_touchdownliftoff_pt_zhghgz.href,
    airport_heliport_runwaycentrelinepoint_pt_wugbgf.title,
    airport_heliport_runwaycentrelinepoint_pt_wugbgf.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_wugbgf.href,
    airport_heliport_airportheliport_pt_leqwlm.title,
    airport_heliport_airportheliport_pt_leqwlm.nilreason[1],
    airport_heliport_airportheliport_pt_leqwlm.href,
    geometry_point_view_acsxdq.geom,
    geometry_point_view_acsxdq.horizontalAccuracy;
create index on routes.directflightsegment_view (id);
-- EnRouteSegmentPointPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.enroutesegmentpoint_view cascade;
create materialized view navaids_points.enroutesegmentpoint_view as
select
    navaids_points.enroutesegmentpoint_pt.id,
    navaids_points.enroutesegmentpoint_pt.nilreason AS enroutesegmentpoint_nilreason,
    coalesce(cast(navaids_points.enroutesegmentpoint.reportingatc_value as varchar), '(' || navaids_points.enroutesegmentpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(navaids_points.enroutesegmentpoint.flyover_value as varchar), '(' || navaids_points.enroutesegmentpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(navaids_points.enroutesegmentpoint.waypoint_value as varchar), '(' || navaids_points.enroutesegmentpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(navaids_points.enroutesegmentpoint.radarguidance_value as varchar), '(' || navaids_points.enroutesegmentpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolefreeflight_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolefreeflight_nilreason || ')') as rolefreeflight,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolervsm_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolervsm_nilreason || ')') as rolervsm,
    coalesce(cast(navaids_points.enroutesegmentpoint.rolemilitarytraining_value as varchar), '(' || navaids_points.enroutesegmentpoint.rolemilitarytraining_nilreason || ')') as rolemilitarytraining,
    coalesce(cast(navaids_points.enroutesegmentpoint.turnradius_value as varchar) || ' ' || navaids_points.enroutesegmentpoint.turnradius_uom, '(' || navaids_points.enroutesegmentpoint.turnradius_nilreason || ')') as turnradius,
    coalesce(cast(navaids_points_designatedpoint_pt_odtsgt.title as varchar), '(' || navaids_points_designatedpoint_pt_odtsgt.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_odtsgt.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_glrwri.title as varchar), '(' || navaids_points_navaid_pt_glrwri.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_glrwri.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_eedtvg.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_eedtvg.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_eedtvg.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_tubtxb.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_tubtxb.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_tubtxb.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_luwcbb.title as varchar), '(' || airport_heliport_airportheliport_pt_luwcbb.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_luwcbb.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_wpgijn.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_wpgijn.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_wpgijn.geom) AS pointchoiceposition_latitude,
    geometry_point_view_wpgijn.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    coalesce(cast(shared_radiofrequencyarea_pt_gvxuwk.title as varchar), '(' || shared_radiofrequencyarea_pt_gvxuwk.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_gvxuwk.href AS extendedservicevolume_href,
    jsonb_agg(DISTINCT navaids_points_pointreference_pt_pgvlrf.id) AS facilitymakeup,
    jsonb_agg(DISTINCT notes_note_view_ywtjua.*) AS annotation
from navaids_points.enroutesegmentpoint_pt 
inner join navaids_points.enroutesegmentpoint on navaids_points.enroutesegmentpoint_pt.enroutesegmentpoint_id = navaids_points.enroutesegmentpoint.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_odtsgt on navaids_points.enroutesegmentpoint.enroutesegmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_odtsgt.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_glrwri on navaids_points.enroutesegmentpoint.enroutesegmentpoint_navaidsystem_id = navaids_points_navaid_pt_glrwri.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_eedtvg on navaids_points.enroutesegmentpoint.enroutesegmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_eedtvg.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_tubtxb on navaids_points.enroutesegmentpoint.enroutesegmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_tubtxb.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_luwcbb on navaids_points.enroutesegmentpoint.enroutesegmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_luwcbb.id
left join geometry.point_view geometry_point_view_wpgijn on navaids_points.enroutesegmentpoint.enroutesegmentpoint_position_id = geometry_point_view_wpgijn.id
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_gvxuwk on navaids_points.enroutesegmentpoint.extendedservicevolume_id = shared_radiofrequencyarea_pt_gvxuwk.id
left join master_join master_join_mjntlb on navaids_points.enroutesegmentpoint.id = master_join_mjntlb.source_id
left join navaids_points.pointreference_pt navaids_points_pointreference_pt_pgvlrf on master_join_mjntlb.target_id = navaids_points_pointreference_pt_pgvlrf.id
left join master_join master_join_imoeok on navaids_points.enroutesegmentpoint.id = master_join_imoeok.source_id
left join notes.note_view notes_note_view_ywtjua on master_join_imoeok.target_id = notes_note_view_ywtjua.id
group by
    navaids_points.enroutesegmentpoint_pt.id,
    navaids_points.enroutesegmentpoint_pt.nilreason,
    navaids_points.enroutesegmentpoint.reportingatc_value,
    navaids_points.enroutesegmentpoint.reportingatc_nilreason,
    navaids_points.enroutesegmentpoint.flyover_value,
    navaids_points.enroutesegmentpoint.flyover_nilreason,
    navaids_points.enroutesegmentpoint.waypoint_value,
    navaids_points.enroutesegmentpoint.waypoint_nilreason,
    navaids_points.enroutesegmentpoint.radarguidance_value,
    navaids_points.enroutesegmentpoint.radarguidance_nilreason,
    navaids_points.enroutesegmentpoint.rolefreeflight_value,
    navaids_points.enroutesegmentpoint.rolefreeflight_nilreason,
    navaids_points.enroutesegmentpoint.rolervsm_value,
    navaids_points.enroutesegmentpoint.rolervsm_nilreason,
    navaids_points.enroutesegmentpoint.rolemilitarytraining_value,
    navaids_points.enroutesegmentpoint.rolemilitarytraining_nilreason,
    navaids_points.enroutesegmentpoint.turnradius_value,
    navaids_points.enroutesegmentpoint.turnradius_uom,
    navaids_points.enroutesegmentpoint.turnradius_nilreason,
    navaids_points_designatedpoint_pt_odtsgt.title,
    navaids_points_designatedpoint_pt_odtsgt.nilreason[1],
    navaids_points_designatedpoint_pt_odtsgt.href,
    navaids_points_navaid_pt_glrwri.title,
    navaids_points_navaid_pt_glrwri.nilreason[1],
    navaids_points_navaid_pt_glrwri.href,
    airport_heliport_touchdownliftoff_pt_eedtvg.title,
    airport_heliport_touchdownliftoff_pt_eedtvg.nilreason[1],
    airport_heliport_touchdownliftoff_pt_eedtvg.href,
    airport_heliport_runwaycentrelinepoint_pt_tubtxb.title,
    airport_heliport_runwaycentrelinepoint_pt_tubtxb.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_tubtxb.href,
    airport_heliport_airportheliport_pt_luwcbb.title,
    airport_heliport_airportheliport_pt_luwcbb.nilreason[1],
    airport_heliport_airportheliport_pt_luwcbb.href,
    geometry_point_view_wpgijn.geom,
    geometry_point_view_wpgijn.horizontalAccuracy,
    shared_radiofrequencyarea_pt_gvxuwk.title,
    shared_radiofrequencyarea_pt_gvxuwk.nilreason[1],
    shared_radiofrequencyarea_pt_gvxuwk.href;
create index on navaids_points.enroutesegmentpoint_view (id);
-- FlightConditionElementPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.flightconditionelement_view cascade;
create materialized view routes.flightconditionelement_view as
select
    routes.flightconditionelement_pt.id,
    routes.flightconditionelement_pt.nilreason AS flightconditionelement_nilreason,
    coalesce(cast(routes.flightconditionelement.index_value as varchar), '(' || routes.flightconditionelement.index_nilreason || ')') as index,
    coalesce(cast(airport_heliport_airportheliport_pt_teloar.title as varchar), '(' || airport_heliport_airportheliport_pt_teloar.nilreason[1] || ')') AS flightconditionairportheliportcondition,
    airport_heliport_airportheliport_pt_teloar.href AS flightconditionairportheliportcondition_href,
    coalesce(cast(airport_heliport_airportheliport_pt_thmdet.title as varchar), '(' || airport_heliport_airportheliport_pt_thmdet.nilreason[1] || ')') AS significantpointconditionairportreferencepoint,
    airport_heliport_airportheliport_pt_thmdet.href AS significantpointconditionairportreferencepoint_href,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_qxhecc.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_qxhecc.nilreason[1] || ')') AS flightconditionstandardinstrumentdeparturecondition,
    procedure_standardinstrumentdeparture_pt_qxhecc.href AS flightconditionstandardinstrumentdeparturecondition_href,
    routes_routeportion_pt_onoouu.id AS flightconditionrouteportioncondition,
    coalesce(cast(organisation_organisationauthority_pt_gdkprk.title as varchar), '(' || organisation_organisationauthority_pt_gdkprk.nilreason[1] || ')') AS flightconditionorganisationcondition,
    organisation_organisationauthority_pt_gdkprk.href AS flightconditionorganisationcondition_href,
    coalesce(cast(navaids_points_designatedpoint_pt_jdvazf.title as varchar), '(' || navaids_points_designatedpoint_pt_jdvazf.nilreason[1] || ')') AS significantpointconditionfixdesignatedpoint,
    navaids_points_designatedpoint_pt_jdvazf.href AS significantpointconditionfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_qzkuur.title as varchar), '(' || navaids_points_navaid_pt_qzkuur.nilreason[1] || ')') AS significantpointconditionnavaidsystem,
    navaids_points_navaid_pt_qzkuur.href AS significantpointconditionnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_khcvrl.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_khcvrl.nilreason[1] || ')') AS significantpointconditionaimingpoint,
    airport_heliport_touchdownliftoff_pt_khcvrl.href AS significantpointconditionaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_kkpfkk.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_kkpfkk.nilreason[1] || ')') AS significantpointconditionrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_kkpfkk.href AS significantpointconditionrunwaypoint_href,
    geometry_point_view_qybhen.geom AS significantpointconditionposition_geom,
    ST_X(geometry_point_view_qybhen.geom) AS significantpointconditionposition_longitude,
    ST_Y(geometry_point_view_qybhen.geom) AS significantpointconditionposition_latitude,
    geometry_point_view_qybhen.horizontalAccuracy AS significantpointconditionposition_horizontalaccuracy,
    shared_aircraftcharacteristic_pt_swtcri.id AS flightconditionaircraft,
    coalesce(cast(routes_airspacebordercrossing_pt_xqnsqf.title as varchar), '(' || routes_airspacebordercrossing_pt_xqnsqf.nilreason[1] || ')') AS flightconditionbordercrossingcondition,
    routes_airspacebordercrossing_pt_xqnsqf.href AS flightconditionbordercrossingcondition_href,
    coalesce(cast(airspace_airspace_pt_bopqug.title as varchar), '(' || airspace_airspace_pt_bopqug.nilreason[1] || ')') AS flightconditionairspacecondition,
    airspace_airspace_pt_bopqug.href AS flightconditionairspacecondition_href,
    shared_flightcharacteristic_pt_jaknry.id AS flightconditionflight,
    coalesce(cast(procedure_standardinstrumentarrival_pt_qehzbm.title as varchar), '(' || procedure_standardinstrumentarrival_pt_qehzbm.nilreason[1] || ')') AS flightconditionstandardinstrumentarrivalcondition,
    procedure_standardinstrumentarrival_pt_qehzbm.href AS flightconditionstandardinstrumentarrivalcondition_href,
    routes_flightconditioncombination_pt_apelrb.id AS flightconditionoperand,
    shared_meteorology_pt_hdqiea.id AS flightconditionweather,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_qzbpis.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_qzbpis.nilreason[1] || ')') AS flightconditionaerialrefuellingcondition,
    aerial_refuelling_aerialrefuelling_pt_qzbpis.href AS flightconditionaerialrefuellingcondition_href,
    routes_flightconditioncircumstance_pt_tqsarv.id AS operationalcondition,
    jsonb_agg(DISTINCT routes_flightrestrictionlevel_pt_rqqsct.id) AS flightlevel,
    jsonb_agg(DISTINCT notes_note_view_qvkpno.*) AS annotation
from routes.flightconditionelement_pt 
inner join routes.flightconditionelement on routes.flightconditionelement_pt.flightconditionelement_id = routes.flightconditionelement.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_teloar on routes.flightconditionelement.flightcondition_airportheliportcondition_id = airport_heliport_airportheliport_pt_teloar.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_qxhecc on routes.flightconditionelement.flightcondition_standardinstrumentdeparturecondition_id = procedure_standardinstrumentdeparture_pt_qxhecc.id
left join routes.routeportion_pt routes_routeportion_pt_onoouu on routes.flightconditionelement.flightcondition_routeportioncondition_id = routes_routeportion_pt_onoouu.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_gdkprk on routes.flightconditionelement.flightcondition_organisationcondition_id = organisation_organisationauthority_pt_gdkprk.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_jdvazf on routes.flightconditionelement.significantpointcondition_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_jdvazf.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_qzkuur on routes.flightconditionelement.significantpointcondition_navaidsystem_id = navaids_points_navaid_pt_qzkuur.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_khcvrl on routes.flightconditionelement.significantpointcondition_aimingpoint_id = airport_heliport_touchdownliftoff_pt_khcvrl.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_kkpfkk on routes.flightconditionelement.significantpointcondition_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_kkpfkk.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_thmdet on routes.flightconditionelement.significantpointcondition_airportreferencepoint_id = airport_heliport_airportheliport_pt_thmdet.id
left join geometry.point_view geometry_point_view_qybhen on routes.flightconditionelement.significantpointcondition_position_id = geometry_point_view_qybhen.id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_swtcri on routes.flightconditionelement.flightcondition_aircraft_id = shared_aircraftcharacteristic_pt_swtcri.id
left join routes.airspacebordercrossing_pt routes_airspacebordercrossing_pt_xqnsqf on routes.flightconditionelement.flightcondition_bordercrossingcondition_id = routes_airspacebordercrossing_pt_xqnsqf.id
left join airspace.airspace_pt airspace_airspace_pt_bopqug on routes.flightconditionelement.flightcondition_airspacecondition_id = airspace_airspace_pt_bopqug.id
left join shared.flightcharacteristic_pt shared_flightcharacteristic_pt_jaknry on routes.flightconditionelement.flightcondition_flight_id = shared_flightcharacteristic_pt_jaknry.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_qehzbm on routes.flightconditionelement.flightcondition_standardinstrumentarrivalcondition_id = procedure_standardinstrumentarrival_pt_qehzbm.id
left join routes.flightconditioncombination_pt routes_flightconditioncombination_pt_apelrb on routes.flightconditionelement.flightcondition_operand_id = routes_flightconditioncombination_pt_apelrb.id
left join shared.meteorology_pt shared_meteorology_pt_hdqiea on routes.flightconditionelement.flightcondition_weather_id = shared_meteorology_pt_hdqiea.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_qzbpis on routes.flightconditionelement.flightcondition_aerialrefuellingcondition_id = aerial_refuelling_aerialrefuelling_pt_qzbpis.id
left join routes.flightconditioncircumstance_pt routes_flightconditioncircumstance_pt_tqsarv on routes.flightconditionelement.operationalcondition_id = routes_flightconditioncircumstance_pt_tqsarv.id
left join master_join master_join_zjgtur on routes.flightconditionelement.id = master_join_zjgtur.source_id
left join routes.flightrestrictionlevel_pt routes_flightrestrictionlevel_pt_rqqsct on master_join_zjgtur.target_id = routes_flightrestrictionlevel_pt_rqqsct.id
left join master_join master_join_kjqmpi on routes.flightconditionelement.id = master_join_kjqmpi.source_id
left join notes.note_view notes_note_view_qvkpno on master_join_kjqmpi.target_id = notes_note_view_qvkpno.id
group by
    routes.flightconditionelement_pt.id,
    routes.flightconditionelement_pt.nilreason,
    routes.flightconditionelement.index_value,
    routes.flightconditionelement.index_nilreason,
    airport_heliport_airportheliport_pt_teloar.title,
    airport_heliport_airportheliport_pt_teloar.nilreason[1],
    airport_heliport_airportheliport_pt_teloar.href,
    procedure_standardinstrumentdeparture_pt_qxhecc.title,
    procedure_standardinstrumentdeparture_pt_qxhecc.nilreason[1],
    procedure_standardinstrumentdeparture_pt_qxhecc.href,
    routes_routeportion_pt_onoouu.id,
    organisation_organisationauthority_pt_gdkprk.title,
    organisation_organisationauthority_pt_gdkprk.nilreason[1],
    organisation_organisationauthority_pt_gdkprk.href,
    navaids_points_designatedpoint_pt_jdvazf.title,
    navaids_points_designatedpoint_pt_jdvazf.nilreason[1],
    navaids_points_designatedpoint_pt_jdvazf.href,
    navaids_points_navaid_pt_qzkuur.title,
    navaids_points_navaid_pt_qzkuur.nilreason[1],
    navaids_points_navaid_pt_qzkuur.href,
    airport_heliport_touchdownliftoff_pt_khcvrl.title,
    airport_heliport_touchdownliftoff_pt_khcvrl.nilreason[1],
    airport_heliport_touchdownliftoff_pt_khcvrl.href,
    airport_heliport_runwaycentrelinepoint_pt_kkpfkk.title,
    airport_heliport_runwaycentrelinepoint_pt_kkpfkk.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_kkpfkk.href,
    airport_heliport_airportheliport_pt_thmdet.title,
    airport_heliport_airportheliport_pt_thmdet.nilreason[1],
    airport_heliport_airportheliport_pt_thmdet.href,
    geometry_point_view_qybhen.geom,
    geometry_point_view_qybhen.horizontalAccuracy,
    shared_aircraftcharacteristic_pt_swtcri.id,
    routes_airspacebordercrossing_pt_xqnsqf.title,
    routes_airspacebordercrossing_pt_xqnsqf.nilreason[1],
    routes_airspacebordercrossing_pt_xqnsqf.href,
    airspace_airspace_pt_bopqug.title,
    airspace_airspace_pt_bopqug.nilreason[1],
    airspace_airspace_pt_bopqug.href,
    shared_flightcharacteristic_pt_jaknry.id,
    procedure_standardinstrumentarrival_pt_qehzbm.title,
    procedure_standardinstrumentarrival_pt_qehzbm.nilreason[1],
    procedure_standardinstrumentarrival_pt_qehzbm.href,
    routes_flightconditioncombination_pt_apelrb.id,
    shared_meteorology_pt_hdqiea.id,
    aerial_refuelling_aerialrefuelling_pt_qzbpis.title,
    aerial_refuelling_aerialrefuelling_pt_qzbpis.nilreason[1],
    aerial_refuelling_aerialrefuelling_pt_qzbpis.href,
    routes_flightconditioncircumstance_pt_tqsarv.id;
create index on routes.flightconditionelement_view (id);
-- FlightRoutingElementPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.flightroutingelement_view cascade;
create materialized view routes.flightroutingelement_view as
select
    routes.flightroutingelement_pt.id,
    routes.flightroutingelement_pt.nilreason AS flightroutingelement_nilreason,
    coalesce(cast(routes.flightroutingelement.ordernumber_value as varchar), '(' || routes.flightroutingelement.ordernumber_nilreason || ')') as ordernumber,
    coalesce(cast(routes.flightroutingelement.speedreference_value as varchar), '(' || routes.flightroutingelement.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(routes.flightroutingelement.speedcriteria_value as varchar), '(' || routes.flightroutingelement.speedcriteria_nilreason || ')') as speedcriteria,
    coalesce(cast(routes.flightroutingelement.speed_value as varchar) || ' ' || routes.flightroutingelement.speed_uom, '(' || routes.flightroutingelement.speed_nilreason || ')') as speed,
    coalesce(cast(procedure_standardinstrumentarrival_pt_qghkvk.title as varchar), '(' || procedure_standardinstrumentarrival_pt_qghkvk.nilreason[1] || ')') AS elementstandardinstrumentarrivalelement,
    procedure_standardinstrumentarrival_pt_qghkvk.href AS elementstandardinstrumentarrivalelement_href,
    coalesce(cast(airspace_airspace_pt_viilrk.title as varchar), '(' || airspace_airspace_pt_viilrk.nilreason[1] || ')') AS elementairspaceelement,
    airspace_airspace_pt_viilrk.href AS elementairspaceelement_href,
    coalesce(cast(navaids_points_designatedpoint_pt_ludqbm.title as varchar), '(' || navaids_points_designatedpoint_pt_ludqbm.nilreason[1] || ')') AS pointelementfixdesignatedpoint,
    navaids_points_designatedpoint_pt_ludqbm.href AS pointelementfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_whxhqc.title as varchar), '(' || navaids_points_navaid_pt_whxhqc.nilreason[1] || ')') AS pointelementnavaidsystem,
    navaids_points_navaid_pt_whxhqc.href AS pointelementnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_fxsoam.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_fxsoam.nilreason[1] || ')') AS pointelementaimingpoint,
    airport_heliport_touchdownliftoff_pt_fxsoam.href AS pointelementaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_nmxcdr.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_nmxcdr.nilreason[1] || ')') AS pointelementrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_nmxcdr.href AS pointelementrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_bivkqj.title as varchar), '(' || airport_heliport_airportheliport_pt_bivkqj.nilreason[1] || ')') AS pointelementairportreferencepoint,
    airport_heliport_airportheliport_pt_bivkqj.href AS pointelementairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_raytue.title as varchar), '(' || airport_heliport_airportheliport_pt_raytue.nilreason[1] || ')') AS elementairportheliportelement,
    airport_heliport_airportheliport_pt_raytue.href AS elementairportheliportelement_href,
    geometry_point_view_llbgwz.geom AS pointelementposition_geom,
    ST_X(geometry_point_view_llbgwz.geom) AS pointelementposition_longitude,
    ST_Y(geometry_point_view_llbgwz.geom) AS pointelementposition_latitude,
    geometry_point_view_llbgwz.horizontalAccuracy AS pointelementposition_horizontalaccuracy,
    routes_directflightsegment_pt_greszr.id AS elementdirectflightelement,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_tqzoqe.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_tqzoqe.nilreason[1] || ')') AS elementstandardinstrumentdepartureelement,
    procedure_standardinstrumentdeparture_pt_tqzoqe.href AS elementstandardinstrumentdepartureelement_href,
    routes_routeportion_pt_qakrpo.id AS elementrouteportionelement,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_cnizro.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_cnizro.nilreason[1] || ')') AS elementaerialrefuellingelement,
    aerial_refuelling_aerialrefuelling_pt_cnizro.href AS elementaerialrefuellingelement_href,
    jsonb_agg(DISTINCT routes_flightrestrictionlevel_pt_hipnox.id) AS flightlevel,
    jsonb_agg(DISTINCT notes_note_view_siinul.*) AS annotation
from routes.flightroutingelement_pt 
inner join routes.flightroutingelement on routes.flightroutingelement_pt.flightroutingelement_id = routes.flightroutingelement.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_qghkvk on routes.flightroutingelement.element_standardinstrumentarrivalelement_id = procedure_standardinstrumentarrival_pt_qghkvk.id
left join airspace.airspace_pt airspace_airspace_pt_viilrk on routes.flightroutingelement.element_airspaceelement_id = airspace_airspace_pt_viilrk.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_ludqbm on routes.flightroutingelement.pointelement_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_ludqbm.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_whxhqc on routes.flightroutingelement.pointelement_navaidsystem_id = navaids_points_navaid_pt_whxhqc.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_fxsoam on routes.flightroutingelement.pointelement_aimingpoint_id = airport_heliport_touchdownliftoff_pt_fxsoam.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_nmxcdr on routes.flightroutingelement.pointelement_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_nmxcdr.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_bivkqj on routes.flightroutingelement.pointelement_airportreferencepoint_id = airport_heliport_airportheliport_pt_bivkqj.id
left join geometry.point_view geometry_point_view_llbgwz on routes.flightroutingelement.pointelement_position_id = geometry_point_view_llbgwz.id
left join routes.directflightsegment_pt routes_directflightsegment_pt_greszr on routes.flightroutingelement.element_directflightelement_id = routes_directflightsegment_pt_greszr.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_tqzoqe on routes.flightroutingelement.element_standardinstrumentdepartureelement_id = procedure_standardinstrumentdeparture_pt_tqzoqe.id
left join routes.routeportion_pt routes_routeportion_pt_qakrpo on routes.flightroutingelement.element_routeportionelement_id = routes_routeportion_pt_qakrpo.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_raytue on routes.flightroutingelement.element_airportheliportelement_id = airport_heliport_airportheliport_pt_raytue.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_cnizro on routes.flightroutingelement.element_aerialrefuellingelement_id = aerial_refuelling_aerialrefuelling_pt_cnizro.id
left join master_join master_join_merkmn on routes.flightroutingelement.id = master_join_merkmn.source_id
left join routes.flightrestrictionlevel_pt routes_flightrestrictionlevel_pt_hipnox on master_join_merkmn.target_id = routes_flightrestrictionlevel_pt_hipnox.id
left join master_join master_join_vjoipd on routes.flightroutingelement.id = master_join_vjoipd.source_id
left join notes.note_view notes_note_view_siinul on master_join_vjoipd.target_id = notes_note_view_siinul.id
group by
    routes.flightroutingelement_pt.id,
    routes.flightroutingelement_pt.nilreason,
    routes.flightroutingelement.ordernumber_value,
    routes.flightroutingelement.ordernumber_nilreason,
    routes.flightroutingelement.speedreference_value,
    routes.flightroutingelement.speedreference_nilreason,
    routes.flightroutingelement.speedcriteria_value,
    routes.flightroutingelement.speedcriteria_nilreason,
    routes.flightroutingelement.speed_value,
    routes.flightroutingelement.speed_uom,
    routes.flightroutingelement.speed_nilreason,
    procedure_standardinstrumentarrival_pt_qghkvk.title,
    procedure_standardinstrumentarrival_pt_qghkvk.nilreason[1],
    procedure_standardinstrumentarrival_pt_qghkvk.href,
    airspace_airspace_pt_viilrk.title,
    airspace_airspace_pt_viilrk.nilreason[1],
    airspace_airspace_pt_viilrk.href,
    navaids_points_designatedpoint_pt_ludqbm.title,
    navaids_points_designatedpoint_pt_ludqbm.nilreason[1],
    navaids_points_designatedpoint_pt_ludqbm.href,
    navaids_points_navaid_pt_whxhqc.title,
    navaids_points_navaid_pt_whxhqc.nilreason[1],
    navaids_points_navaid_pt_whxhqc.href,
    airport_heliport_touchdownliftoff_pt_fxsoam.title,
    airport_heliport_touchdownliftoff_pt_fxsoam.nilreason[1],
    airport_heliport_touchdownliftoff_pt_fxsoam.href,
    airport_heliport_runwaycentrelinepoint_pt_nmxcdr.title,
    airport_heliport_runwaycentrelinepoint_pt_nmxcdr.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_nmxcdr.href,
    airport_heliport_airportheliport_pt_bivkqj.title,
    airport_heliport_airportheliport_pt_bivkqj.nilreason[1],
    airport_heliport_airportheliport_pt_bivkqj.href,
    geometry_point_view_llbgwz.geom,
    geometry_point_view_llbgwz.horizontalAccuracy,
    routes_directflightsegment_pt_greszr.id,
    procedure_standardinstrumentdeparture_pt_tqzoqe.title,
    procedure_standardinstrumentdeparture_pt_tqzoqe.nilreason[1],
    procedure_standardinstrumentdeparture_pt_tqzoqe.href,
    routes_routeportion_pt_qakrpo.id,
    airport_heliport_airportheliport_pt_raytue.title,
    airport_heliport_airportheliport_pt_raytue.nilreason[1],
    airport_heliport_airportheliport_pt_raytue.href,
    aerial_refuelling_aerialrefuelling_pt_cnizro.title,
    aerial_refuelling_aerialrefuelling_pt_cnizro.nilreason[1],
    aerial_refuelling_aerialrefuelling_pt_cnizro.href;
create index on routes.flightroutingelement_view (id);
-- RoutePortionPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.routeportion_view cascade;
create materialized view routes.routeportion_view as
select
    routes.routeportion_pt.id,
    routes.routeportion_pt.nilreason AS routeportion_nilreason,
    coalesce(cast(navaids_points_designatedpoint_pt_imicbb.title as varchar), '(' || navaids_points_designatedpoint_pt_imicbb.nilreason[1] || ')') AS startfixdesignatedpoint,
    navaids_points_designatedpoint_pt_imicbb.href AS startfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_xgrrrh.title as varchar), '(' || navaids_points_designatedpoint_pt_xgrrrh.nilreason[1] || ')') AS intermediatepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_xgrrrh.href AS intermediatepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_qexgim.title as varchar), '(' || navaids_points_designatedpoint_pt_qexgim.nilreason[1] || ')') AS endfixdesignatedpoint,
    navaids_points_designatedpoint_pt_qexgim.href AS endfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_zhjczk.title as varchar), '(' || navaids_points_navaid_pt_zhjczk.nilreason[1] || ')') AS startnavaidsystem,
    navaids_points_navaid_pt_zhjczk.href AS startnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_ezxetw.title as varchar), '(' || navaids_points_navaid_pt_ezxetw.nilreason[1] || ')') AS intermediatepointnavaidsystem,
    navaids_points_navaid_pt_ezxetw.href AS intermediatepointnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_xtpspu.title as varchar), '(' || navaids_points_navaid_pt_xtpspu.nilreason[1] || ')') AS endnavaidsystem,
    navaids_points_navaid_pt_xtpspu.href AS endnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_quhpos.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_quhpos.nilreason[1] || ')') AS startaimingpoint,
    airport_heliport_touchdownliftoff_pt_quhpos.href AS startaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_uouoau.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_uouoau.nilreason[1] || ')') AS intermediatepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_uouoau.href AS intermediatepointaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_zimvnp.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_zimvnp.nilreason[1] || ')') AS endaimingpoint,
    airport_heliport_touchdownliftoff_pt_zimvnp.href AS endaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_jlzcbr.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_jlzcbr.nilreason[1] || ')') AS startrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_jlzcbr.href AS startrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_oeetxb.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_oeetxb.nilreason[1] || ')') AS intermediatepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_oeetxb.href AS intermediatepointrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_ttpapr.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_ttpapr.nilreason[1] || ')') AS endrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_ttpapr.href AS endrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_obrqmw.title as varchar), '(' || airport_heliport_airportheliport_pt_obrqmw.nilreason[1] || ')') AS startairportreferencepoint,
    airport_heliport_airportheliport_pt_obrqmw.href AS startairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_cgmvbe.title as varchar), '(' || airport_heliport_airportheliport_pt_cgmvbe.nilreason[1] || ')') AS intermediatepointairportreferencepoint,
    airport_heliport_airportheliport_pt_cgmvbe.href AS intermediatepointairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_mrzjge.title as varchar), '(' || airport_heliport_airportheliport_pt_mrzjge.nilreason[1] || ')') AS endairportreferencepoint,
    airport_heliport_airportheliport_pt_mrzjge.href AS endairportreferencepoint_href,
    geometry_point_view_ztyszm.geom AS startposition_geom,
    ST_X(geometry_point_view_ztyszm.geom) AS startposition_longitude,
    ST_Y(geometry_point_view_ztyszm.geom) AS startposition_latitude,
    geometry_point_view_ztyszm.horizontalAccuracy AS startposition_horizontalaccuracy,
    geometry_point_view_fndhnc.geom AS intermediatepointposition_geom,
    ST_X(geometry_point_view_fndhnc.geom) AS intermediatepointposition_longitude,
    ST_Y(geometry_point_view_fndhnc.geom) AS intermediatepointposition_latitude,
    geometry_point_view_fndhnc.horizontalAccuracy AS intermediatepointposition_horizontalaccuracy,
    geometry_point_view_rhibxf.geom AS endposition_geom,
    ST_X(geometry_point_view_rhibxf.geom) AS endposition_longitude,
    ST_Y(geometry_point_view_rhibxf.geom) AS endposition_latitude,
    geometry_point_view_rhibxf.horizontalAccuracy AS endposition_horizontalaccuracy,
    coalesce(cast(routes_route_pt_bqljbs.title as varchar), '(' || routes_route_pt_bqljbs.nilreason[1] || ')') AS referencedroute,
    routes_route_pt_bqljbs.href AS referencedroute_href,
    jsonb_agg(DISTINCT notes_note_view_pqaapz.*) AS annotation
from routes.routeportion_pt 
inner join routes.routeportion on routes.routeportion_pt.routeportion_id = routes.routeportion.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_imicbb on routes.routeportion.start_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_imicbb.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_zhjczk on routes.routeportion.start_navaidsystem_id = navaids_points_navaid_pt_zhjczk.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_quhpos on routes.routeportion.start_aimingpoint_id = airport_heliport_touchdownliftoff_pt_quhpos.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_jlzcbr on routes.routeportion.start_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_jlzcbr.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_obrqmw on routes.routeportion.start_airportreferencepoint_id = airport_heliport_airportheliport_pt_obrqmw.id
left join geometry.point_view geometry_point_view_ztyszm on routes.routeportion.start_position_id = geometry_point_view_ztyszm.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_xgrrrh on routes.routeportion.intermediatepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_xgrrrh.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ezxetw on routes.routeportion.intermediatepoint_navaidsystem_id = navaids_points_navaid_pt_ezxetw.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_uouoau on routes.routeportion.intermediatepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_uouoau.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_oeetxb on routes.routeportion.intermediatepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_oeetxb.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cgmvbe on routes.routeportion.intermediatepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_cgmvbe.id
left join geometry.point_view geometry_point_view_fndhnc on routes.routeportion.intermediatepoint_position_id = geometry_point_view_fndhnc.id
left join routes.route_pt routes_route_pt_bqljbs on routes.routeportion.referencedroute_id = routes_route_pt_bqljbs.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_qexgim on routes.routeportion.end_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_qexgim.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_xtpspu on routes.routeportion.end_navaidsystem_id = navaids_points_navaid_pt_xtpspu.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_zimvnp on routes.routeportion.end_aimingpoint_id = airport_heliport_touchdownliftoff_pt_zimvnp.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_ttpapr on routes.routeportion.end_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_ttpapr.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_mrzjge on routes.routeportion.end_airportreferencepoint_id = airport_heliport_airportheliport_pt_mrzjge.id
left join geometry.point_view geometry_point_view_rhibxf on routes.routeportion.end_position_id = geometry_point_view_rhibxf.id
left join master_join master_join_mdvznj on routes.routeportion.id = master_join_mdvznj.source_id
left join notes.note_view notes_note_view_pqaapz on master_join_mdvznj.target_id = notes_note_view_pqaapz.id
group by
    routes.routeportion_pt.id,
    routes.routeportion_pt.nilreason,
    navaids_points_designatedpoint_pt_imicbb.title,
    navaids_points_designatedpoint_pt_imicbb.nilreason[1],
    navaids_points_designatedpoint_pt_imicbb.href,
    navaids_points_navaid_pt_zhjczk.title,
    navaids_points_navaid_pt_zhjczk.nilreason[1],
    navaids_points_navaid_pt_zhjczk.href,
    airport_heliport_touchdownliftoff_pt_quhpos.title,
    airport_heliport_touchdownliftoff_pt_quhpos.nilreason[1],
    airport_heliport_touchdownliftoff_pt_quhpos.href,
    airport_heliport_runwaycentrelinepoint_pt_jlzcbr.title,
    airport_heliport_runwaycentrelinepoint_pt_jlzcbr.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_jlzcbr.href,
    airport_heliport_airportheliport_pt_obrqmw.title,
    airport_heliport_airportheliport_pt_obrqmw.nilreason[1],
    airport_heliport_airportheliport_pt_obrqmw.href,
    geometry_point_view_ztyszm.geom,
    geometry_point_view_ztyszm.horizontalAccuracy,
    navaids_points_designatedpoint_pt_xgrrrh.title,
    navaids_points_designatedpoint_pt_xgrrrh.nilreason[1],
    navaids_points_designatedpoint_pt_xgrrrh.href,
    navaids_points_navaid_pt_ezxetw.title,
    navaids_points_navaid_pt_ezxetw.nilreason[1],
    navaids_points_navaid_pt_ezxetw.href,
    airport_heliport_touchdownliftoff_pt_uouoau.title,
    airport_heliport_touchdownliftoff_pt_uouoau.nilreason[1],
    airport_heliport_touchdownliftoff_pt_uouoau.href,
    airport_heliport_runwaycentrelinepoint_pt_oeetxb.title,
    airport_heliport_runwaycentrelinepoint_pt_oeetxb.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_oeetxb.href,
    airport_heliport_airportheliport_pt_cgmvbe.title,
    airport_heliport_airportheliport_pt_cgmvbe.nilreason[1],
    airport_heliport_airportheliport_pt_cgmvbe.href,
    geometry_point_view_fndhnc.geom,
    geometry_point_view_fndhnc.horizontalAccuracy,
    routes_route_pt_bqljbs.title,
    routes_route_pt_bqljbs.nilreason[1],
    routes_route_pt_bqljbs.href,
    navaids_points_designatedpoint_pt_qexgim.title,
    navaids_points_designatedpoint_pt_qexgim.nilreason[1],
    navaids_points_designatedpoint_pt_qexgim.href,
    navaids_points_navaid_pt_xtpspu.title,
    navaids_points_navaid_pt_xtpspu.nilreason[1],
    navaids_points_navaid_pt_xtpspu.href,
    airport_heliport_touchdownliftoff_pt_zimvnp.title,
    airport_heliport_touchdownliftoff_pt_zimvnp.nilreason[1],
    airport_heliport_touchdownliftoff_pt_zimvnp.href,
    airport_heliport_runwaycentrelinepoint_pt_ttpapr.title,
    airport_heliport_runwaycentrelinepoint_pt_ttpapr.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_ttpapr.href,
    airport_heliport_airportheliport_pt_mrzjge.title,
    airport_heliport_airportheliport_pt_mrzjge.nilreason[1],
    airport_heliport_airportheliport_pt_mrzjge.href,
    geometry_point_view_rhibxf.geom,
    geometry_point_view_rhibxf.horizontalAccuracy;
create index on routes.routeportion_view (id);
-- TerminalSegmentPointPropertyType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.terminalsegmentpoint_view cascade;
create materialized view navaids_points.terminalsegmentpoint_view as
select
    navaids_points.terminalsegmentpoint_pt.id,
    navaids_points.terminalsegmentpoint_pt.nilreason AS terminalsegmentpoint_nilreason,
    coalesce(cast(navaids_points.terminalsegmentpoint.reportingatc_value as varchar), '(' || navaids_points.terminalsegmentpoint.reportingatc_nilreason || ')') as reportingatc,
    coalesce(cast(navaids_points.terminalsegmentpoint.flyover_value as varchar), '(' || navaids_points.terminalsegmentpoint.flyover_nilreason || ')') as flyover,
    coalesce(cast(navaids_points.terminalsegmentpoint.waypoint_value as varchar), '(' || navaids_points.terminalsegmentpoint.waypoint_nilreason || ')') as waypoint,
    coalesce(cast(navaids_points.terminalsegmentpoint.radarguidance_value as varchar), '(' || navaids_points.terminalsegmentpoint.radarguidance_nilreason || ')') as radarguidance,
    coalesce(cast(navaids_points.terminalsegmentpoint.role_value as varchar), '(' || navaids_points.terminalsegmentpoint.role_nilreason || ')') as role,
    coalesce(cast(navaids_points.terminalsegmentpoint.leadradial_value as varchar), '(' || navaids_points.terminalsegmentpoint.leadradial_nilreason || ')') as leadradial,
    coalesce(cast(navaids_points.terminalsegmentpoint.indicatorfacf_value as varchar), '(' || navaids_points.terminalsegmentpoint.indicatorfacf_nilreason || ')') as indicatorfacf,
    coalesce(cast(navaids_points.terminalsegmentpoint.leaddme_value as varchar) || ' ' || navaids_points.terminalsegmentpoint.leaddme_uom, '(' || navaids_points.terminalsegmentpoint.leaddme_nilreason || ')') as leaddme,
    coalesce(cast(navaids_points_designatedpoint_pt_eqymmo.title as varchar), '(' || navaids_points_designatedpoint_pt_eqymmo.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_eqymmo.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ippcdg.title as varchar), '(' || navaids_points_navaid_pt_ippcdg.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_ippcdg.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_uvwdru.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_uvwdru.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_uvwdru.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_hlvnxi.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_hlvnxi.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_hlvnxi.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_rmusjp.title as varchar), '(' || airport_heliport_airportheliport_pt_rmusjp.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_rmusjp.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_jkvxyz.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_jkvxyz.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_jkvxyz.geom) AS pointchoiceposition_latitude,
    geometry_point_view_jkvxyz.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    coalesce(cast(shared_radiofrequencyarea_pt_bznkdk.title as varchar), '(' || shared_radiofrequencyarea_pt_bznkdk.nilreason[1] || ')') AS extendedservicevolume,
    shared_radiofrequencyarea_pt_bznkdk.href AS extendedservicevolume_href,
    jsonb_agg(DISTINCT navaids_points_pointreference_pt_tfpjql.id) AS facilitymakeup,
    jsonb_agg(DISTINCT notes_note_view_fkmxpu.*) AS annotation
from navaids_points.terminalsegmentpoint_pt 
inner join navaids_points.terminalsegmentpoint on navaids_points.terminalsegmentpoint_pt.terminalsegmentpoint_id = navaids_points.terminalsegmentpoint.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_eqymmo on navaids_points.terminalsegmentpoint.terminalsegmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_eqymmo.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ippcdg on navaids_points.terminalsegmentpoint.terminalsegmentpoint_navaidsystem_id = navaids_points_navaid_pt_ippcdg.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_uvwdru on navaids_points.terminalsegmentpoint.terminalsegmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_uvwdru.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_hlvnxi on navaids_points.terminalsegmentpoint.terminalsegmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_hlvnxi.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_rmusjp on navaids_points.terminalsegmentpoint.terminalsegmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_rmusjp.id
left join geometry.point_view geometry_point_view_jkvxyz on navaids_points.terminalsegmentpoint.terminalsegmentpoint_position_id = geometry_point_view_jkvxyz.id
left join shared.radiofrequencyarea_pt shared_radiofrequencyarea_pt_bznkdk on navaids_points.terminalsegmentpoint.extendedservicevolume_id = shared_radiofrequencyarea_pt_bznkdk.id
left join master_join master_join_gowxpt on navaids_points.terminalsegmentpoint.id = master_join_gowxpt.source_id
left join navaids_points.pointreference_pt navaids_points_pointreference_pt_tfpjql on master_join_gowxpt.target_id = navaids_points_pointreference_pt_tfpjql.id
left join master_join master_join_ddufce on navaids_points.terminalsegmentpoint.id = master_join_ddufce.source_id
left join notes.note_view notes_note_view_fkmxpu on master_join_ddufce.target_id = notes_note_view_fkmxpu.id
group by
    navaids_points.terminalsegmentpoint_pt.id,
    navaids_points.terminalsegmentpoint_pt.nilreason,
    navaids_points.terminalsegmentpoint.reportingatc_value,
    navaids_points.terminalsegmentpoint.reportingatc_nilreason,
    navaids_points.terminalsegmentpoint.flyover_value,
    navaids_points.terminalsegmentpoint.flyover_nilreason,
    navaids_points.terminalsegmentpoint.waypoint_value,
    navaids_points.terminalsegmentpoint.waypoint_nilreason,
    navaids_points.terminalsegmentpoint.radarguidance_value,
    navaids_points.terminalsegmentpoint.radarguidance_nilreason,
    navaids_points.terminalsegmentpoint.role_value,
    navaids_points.terminalsegmentpoint.role_nilreason,
    navaids_points.terminalsegmentpoint.leadradial_value,
    navaids_points.terminalsegmentpoint.leadradial_nilreason,
    navaids_points.terminalsegmentpoint.indicatorfacf_value,
    navaids_points.terminalsegmentpoint.indicatorfacf_nilreason,
    navaids_points.terminalsegmentpoint.leaddme_value,
    navaids_points.terminalsegmentpoint.leaddme_uom,
    navaids_points.terminalsegmentpoint.leaddme_nilreason,
    navaids_points_designatedpoint_pt_eqymmo.title,
    navaids_points_designatedpoint_pt_eqymmo.nilreason[1],
    navaids_points_designatedpoint_pt_eqymmo.href,
    navaids_points_navaid_pt_ippcdg.title,
    navaids_points_navaid_pt_ippcdg.nilreason[1],
    navaids_points_navaid_pt_ippcdg.href,
    airport_heliport_touchdownliftoff_pt_uvwdru.title,
    airport_heliport_touchdownliftoff_pt_uvwdru.nilreason[1],
    airport_heliport_touchdownliftoff_pt_uvwdru.href,
    airport_heliport_runwaycentrelinepoint_pt_hlvnxi.title,
    airport_heliport_runwaycentrelinepoint_pt_hlvnxi.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_hlvnxi.href,
    airport_heliport_airportheliport_pt_rmusjp.title,
    airport_heliport_airportheliport_pt_rmusjp.nilreason[1],
    airport_heliport_airportheliport_pt_rmusjp.href,
    geometry_point_view_jkvxyz.geom,
    geometry_point_view_jkvxyz.horizontalAccuracy,
    shared_radiofrequencyarea_pt_bznkdk.title,
    shared_radiofrequencyarea_pt_bznkdk.nilreason[1],
    shared_radiofrequencyarea_pt_bznkdk.href;
create index on navaids_points.terminalsegmentpoint_view (id);
-- AerialRefuellingAnchorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuellinganchor_view cascade;
create materialized view aerial_refuelling.aerialrefuellinganchor_view as
select
    aerial_refuelling.aerialrefuellinganchor_pt.id,
    aerial_refuelling.aerialrefuellinganchor_pt.nilreason AS aerialrefuellinganchor_nilreason,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.outboundcourse_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.outboundcourse_nilreason || ')') as outboundcourse,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_nilreason || ')') as outboundcoursetype,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.inboundcourse_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.inboundcourse_nilreason || ')') as inboundcourse,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.turndirection_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_value as varchar), '(' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_nilreason || ')') as refuellingbaselevelreference,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.speedlimit_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.speedlimit_uom, '(' || aerial_refuelling.aerialrefuellinganchor.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.legseparation_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.legseparation_uom, '(' || aerial_refuelling.aerialrefuellinganchor.legseparation_nilreason || ')') as legseparation,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.leglength_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.leglength_uom, '(' || aerial_refuelling.aerialrefuellinganchor.leglength_nilreason || ')') as leglength,
    coalesce(cast(aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_value as varchar) || ' ' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_uom, '(' || aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_nilreason || ')') as refuellingbaselevel,
    geometry_surface_view_jdynhh.geom AS extent_geom,
    geometry_surface_view_jdynhh.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(DISTINCT shared_airspacelayer_pt_kqvpmb.id) AS verticalextent,
    jsonb_agg(DISTINCT aerial_refuelling_aerialrefuellingpoint_pt_qmvkab.id) AS point,
    jsonb_agg(DISTINCT notes_note_view_ifczqh.*) AS annotation
from aerial_refuelling.aerialrefuellinganchor_pt 
inner join aerial_refuelling.aerialrefuellinganchor on aerial_refuelling.aerialrefuellinganchor_pt.aerialrefuellinganchor_id = aerial_refuelling.aerialrefuellinganchor.id
left join geometry.surface_view geometry_surface_view_jdynhh on aerial_refuelling.aerialrefuellinganchor.extent_id = geometry_surface_view_jdynhh.id
left join master_join master_join_trqvmf on aerial_refuelling.aerialrefuellinganchor.id = master_join_trqvmf.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_kqvpmb on master_join_trqvmf.target_id = shared_airspacelayer_pt_kqvpmb.id
left join master_join master_join_xilbjh on aerial_refuelling.aerialrefuellinganchor.id = master_join_xilbjh.source_id
left join aerial_refuelling.aerialrefuellingpoint_pt aerial_refuelling_aerialrefuellingpoint_pt_qmvkab on master_join_xilbjh.target_id = aerial_refuelling_aerialrefuellingpoint_pt_qmvkab.id
left join master_join master_join_yywboi on aerial_refuelling.aerialrefuellinganchor.id = master_join_yywboi.source_id
left join notes.note_view notes_note_view_ifczqh on master_join_yywboi.target_id = notes_note_view_ifczqh.id
group by
    aerial_refuelling.aerialrefuellinganchor_pt.id,
    aerial_refuelling.aerialrefuellinganchor_pt.nilreason,
    aerial_refuelling.aerialrefuellinganchor.outboundcourse_value,
    aerial_refuelling.aerialrefuellinganchor.outboundcourse_nilreason,
    aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_value,
    aerial_refuelling.aerialrefuellinganchor.outboundcoursetype_nilreason,
    aerial_refuelling.aerialrefuellinganchor.inboundcourse_value,
    aerial_refuelling.aerialrefuellinganchor.inboundcourse_nilreason,
    aerial_refuelling.aerialrefuellinganchor.turndirection_value,
    aerial_refuelling.aerialrefuellinganchor.turndirection_nilreason,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_value,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevelreference_nilreason,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_value,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_uom,
    aerial_refuelling.aerialrefuellinganchor.speedlimit_nilreason,
    aerial_refuelling.aerialrefuellinganchor.legseparation_value,
    aerial_refuelling.aerialrefuellinganchor.legseparation_uom,
    aerial_refuelling.aerialrefuellinganchor.legseparation_nilreason,
    aerial_refuelling.aerialrefuellinganchor.leglength_value,
    aerial_refuelling.aerialrefuellinganchor.leglength_uom,
    aerial_refuelling.aerialrefuellinganchor.leglength_nilreason,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_value,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_uom,
    aerial_refuelling.aerialrefuellinganchor.refuellingbaselevel_nilreason,
    geometry_surface_view_jdynhh.geom,
    geometry_surface_view_jdynhh.horizontalAccuracy;
create index on aerial_refuelling.aerialrefuellinganchor_view (id);
-- AirspaceVolumePropertyType
-- ['geometry.surface_view', 'geometry.curve_view', 'notes.note_view']
drop materialized view if exists airspace.airspacevolume_view cascade;
create materialized view airspace.airspacevolume_view as
select
    airspace.airspacevolume_pt.id,
    airspace.airspacevolume_pt.nilreason AS airspacevolume_nilreason,
    coalesce(cast(airspace.airspacevolume.upperlimitreference_value as varchar), '(' || airspace.airspacevolume.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(airspace.airspacevolume.maximumlimitreference_value as varchar), '(' || airspace.airspacevolume.maximumlimitreference_nilreason || ')') as maximumlimitreference,
    coalesce(cast(airspace.airspacevolume.lowerlimitreference_value as varchar), '(' || airspace.airspacevolume.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(airspace.airspacevolume.minimumlimitreference_value as varchar), '(' || airspace.airspacevolume.minimumlimitreference_nilreason || ')') as minimumlimitreference,
    coalesce(cast(airspace.airspacevolume.upperlimit_value as varchar) || ' ' || airspace.airspacevolume.upperlimit_uom, '(' || airspace.airspacevolume.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(airspace.airspacevolume.maximumlimit_value as varchar) || ' ' || airspace.airspacevolume.maximumlimit_uom, '(' || airspace.airspacevolume.maximumlimit_nilreason || ')') as maximumlimit,
    coalesce(cast(airspace.airspacevolume.lowerlimit_value as varchar) || ' ' || airspace.airspacevolume.lowerlimit_uom, '(' || airspace.airspacevolume.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(airspace.airspacevolume.minimumlimit_value as varchar) || ' ' || airspace.airspacevolume.minimumlimit_uom, '(' || airspace.airspacevolume.minimumlimit_nilreason || ')') as minimumlimit,
    coalesce(cast(airspace.airspacevolume.width_value as varchar) || ' ' || airspace.airspacevolume.width_uom, '(' || airspace.airspacevolume.width_nilreason || ')') as width,
    geometry_surface_view_lqsixr.geom AS horizontalprojection_geom,
    geometry_surface_view_lqsixr.horizontalAccuracy as horizontalprojection_horizontalaccuracy,
    geometry_curve_view_xtfdan.geom AS centreline_geom,
    geometry_curve_view_xtfdan.horizontalAccuracy as centreline_horizontalaccuracy,
    airspace_airspacevolumedependency_pt_eyjdvq.id AS contributorairspace,
    jsonb_agg(DISTINCT notes_note_view_wazqly.*) AS annotation
from airspace.airspacevolume_pt 
inner join airspace.airspacevolume on airspace.airspacevolume_pt.airspacevolume_id = airspace.airspacevolume.id
left join geometry.surface_view geometry_surface_view_lqsixr on airspace.airspacevolume.horizontalprojection_id = geometry_surface_view_lqsixr.id
left join geometry.curve_view geometry_curve_view_xtfdan on airspace.airspacevolume.centreline_id = geometry_curve_view_xtfdan.id
left join airspace.airspacevolumedependency_pt airspace_airspacevolumedependency_pt_eyjdvq on airspace.airspacevolume.contributorairspace_id = airspace_airspacevolumedependency_pt_eyjdvq.id
left join master_join master_join_dfalla on airspace.airspacevolume.id = master_join_dfalla.source_id
left join notes.note_view notes_note_view_wazqly on master_join_dfalla.target_id = notes_note_view_wazqly.id
group by
    airspace.airspacevolume_pt.id,
    airspace.airspacevolume_pt.nilreason,
    airspace.airspacevolume.upperlimitreference_value,
    airspace.airspacevolume.upperlimitreference_nilreason,
    airspace.airspacevolume.maximumlimitreference_value,
    airspace.airspacevolume.maximumlimitreference_nilreason,
    airspace.airspacevolume.lowerlimitreference_value,
    airspace.airspacevolume.lowerlimitreference_nilreason,
    airspace.airspacevolume.minimumlimitreference_value,
    airspace.airspacevolume.minimumlimitreference_nilreason,
    airspace.airspacevolume.upperlimit_value,
    airspace.airspacevolume.upperlimit_uom,
    airspace.airspacevolume.upperlimit_nilreason,
    airspace.airspacevolume.maximumlimit_value,
    airspace.airspacevolume.maximumlimit_uom,
    airspace.airspacevolume.maximumlimit_nilreason,
    airspace.airspacevolume.lowerlimit_value,
    airspace.airspacevolume.lowerlimit_uom,
    airspace.airspacevolume.lowerlimit_nilreason,
    airspace.airspacevolume.minimumlimit_value,
    airspace.airspacevolume.minimumlimit_uom,
    airspace.airspacevolume.minimumlimit_nilreason,
    airspace.airspacevolume.width_value,
    airspace.airspacevolume.width_uom,
    airspace.airspacevolume.width_nilreason,
    geometry_surface_view_lqsixr.geom,
    geometry_surface_view_lqsixr.horizontalAccuracy,
    geometry_curve_view_xtfdan.geom,
    geometry_curve_view_xtfdan.horizontalAccuracy,
    airspace_airspacevolumedependency_pt_eyjdvq.id;
create index on airspace.airspacevolume_view (id);
-- NavigationAreaSectorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.navigationareasector_view cascade;
create materialized view procedure.navigationareasector_view as
select
    procedure.navigationareasector_pt.id,
    procedure.navigationareasector_pt.nilreason AS navigationareasector_nilreason,
    shared_circlesector_pt_hmeuhp.id AS sectordefinition,
    geometry_surface_view_yoxczq.geom AS extent_geom,
    geometry_surface_view_yoxczq.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(DISTINCT shared_obstruction_pt_uupeve.id) AS significantobstacle,
    jsonb_agg(DISTINCT procedure_sectordesign_pt_irrtek.id) AS sectorcriteria,
    jsonb_agg(DISTINCT notes_note_view_hpuual.*) AS annotation
from procedure.navigationareasector_pt 
inner join procedure.navigationareasector on procedure.navigationareasector_pt.navigationareasector_id = procedure.navigationareasector.id
left join shared.circlesector_pt shared_circlesector_pt_hmeuhp on procedure.navigationareasector.sectordefinition_id = shared_circlesector_pt_hmeuhp.id
left join geometry.surface_view geometry_surface_view_yoxczq on procedure.navigationareasector.extent_id = geometry_surface_view_yoxczq.id
left join master_join master_join_detdkd on procedure.navigationareasector.id = master_join_detdkd.source_id
left join shared.obstruction_pt shared_obstruction_pt_uupeve on master_join_detdkd.target_id = shared_obstruction_pt_uupeve.id
left join master_join master_join_mfwwqb on procedure.navigationareasector.id = master_join_mfwwqb.source_id
left join procedure.sectordesign_pt procedure_sectordesign_pt_irrtek on master_join_mfwwqb.target_id = procedure_sectordesign_pt_irrtek.id
left join master_join master_join_rkszjh on procedure.navigationareasector.id = master_join_rkszjh.source_id
left join notes.note_view notes_note_view_hpuual on master_join_rkszjh.target_id = notes_note_view_hpuual.id
group by
    procedure.navigationareasector_pt.id,
    procedure.navigationareasector_pt.nilreason,
    shared_circlesector_pt_hmeuhp.id,
    geometry_surface_view_yoxczq.geom,
    geometry_surface_view_yoxczq.horizontalAccuracy;
create index on procedure.navigationareasector_view (id);
-- ObstacleAssessmentAreaPropertyType
-- ['geometry.surface_view', 'geometry.curve_view', 'notes.note_view']
drop materialized view if exists shared.obstacleassessmentarea_view cascade;
create materialized view shared.obstacleassessmentarea_view as
select
    shared.obstacleassessmentarea_pt.id,
    shared.obstacleassessmentarea_pt.nilreason AS obstacleassessmentarea_nilreason,
    coalesce(cast(shared.obstacleassessmentarea.type_value as varchar), '(' || shared.obstacleassessmentarea.type_nilreason || ')') as type,
    coalesce(cast(shared.obstacleassessmentarea.sectionnumber_value as varchar), '(' || shared.obstacleassessmentarea.sectionnumber_nilreason || ')') as sectionnumber,
    coalesce(cast(shared.obstacleassessmentarea.slope_value as varchar), '(' || shared.obstacleassessmentarea.slope_nilreason || ')') as slope,
    coalesce(cast(shared.obstacleassessmentarea.gradientlowhigh_value as varchar), '(' || shared.obstacleassessmentarea.gradientlowhigh_nilreason || ')') as gradientlowhigh,
    coalesce(cast(shared.obstacleassessmentarea.surfacezone_value as varchar), '(' || shared.obstacleassessmentarea.surfacezone_nilreason || ')') as surfacezone,
    coalesce(cast(shared.obstacleassessmentarea.safetyregulation_value as varchar), '(' || shared.obstacleassessmentarea.safetyregulation_nilreason || ')') as safetyregulation,
    coalesce(cast(shared.obstacleassessmentarea.assessedaltitude_value as varchar) || ' ' || shared.obstacleassessmentarea.assessedaltitude_uom, '(' || shared.obstacleassessmentarea.assessedaltitude_nilreason || ')') as assessedaltitude,
    coalesce(cast(shared.obstacleassessmentarea.slopeloweraltitude_value as varchar) || ' ' || shared.obstacleassessmentarea.slopeloweraltitude_uom, '(' || shared.obstacleassessmentarea.slopeloweraltitude_nilreason || ')') as slopeloweraltitude,
    geometry_surface_view_bfqemg.geom AS surface_geom,
    geometry_surface_view_bfqemg.horizontalAccuracy as surface_horizontalaccuracy,
    geometry_curve_view_oxosov.geom AS startingcurve_geom,
    geometry_curve_view_oxosov.horizontalAccuracy as startingcurve_horizontalaccuracy,
    jsonb_agg(DISTINCT shared_aircraftcharacteristic_pt_hbybae.id) AS aircraftcategory,
    jsonb_agg(DISTINCT shared_obstruction_pt_blaurx.id) AS significantobstacle,
    jsonb_agg(DISTINCT notes_note_view_zzbxgi.*) AS annotation
from shared.obstacleassessmentarea_pt 
inner join shared.obstacleassessmentarea on shared.obstacleassessmentarea_pt.obstacleassessmentarea_id = shared.obstacleassessmentarea.id
left join geometry.surface_view geometry_surface_view_bfqemg on shared.obstacleassessmentarea.surface_id = geometry_surface_view_bfqemg.id
left join geometry.curve_view geometry_curve_view_oxosov on shared.obstacleassessmentarea.startingcurve_id = geometry_curve_view_oxosov.id
left join master_join master_join_wovrka on shared.obstacleassessmentarea.id = master_join_wovrka.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_hbybae on master_join_wovrka.target_id = shared_aircraftcharacteristic_pt_hbybae.id
left join master_join master_join_lqmqcw on shared.obstacleassessmentarea.id = master_join_lqmqcw.source_id
left join shared.obstruction_pt shared_obstruction_pt_blaurx on master_join_lqmqcw.target_id = shared_obstruction_pt_blaurx.id
left join master_join master_join_jndxgt on shared.obstacleassessmentarea.id = master_join_jndxgt.source_id
left join notes.note_view notes_note_view_zzbxgi on master_join_jndxgt.target_id = notes_note_view_zzbxgi.id
group by
    shared.obstacleassessmentarea_pt.id,
    shared.obstacleassessmentarea_pt.nilreason,
    shared.obstacleassessmentarea.type_value,
    shared.obstacleassessmentarea.type_nilreason,
    shared.obstacleassessmentarea.sectionnumber_value,
    shared.obstacleassessmentarea.sectionnumber_nilreason,
    shared.obstacleassessmentarea.slope_value,
    shared.obstacleassessmentarea.slope_nilreason,
    shared.obstacleassessmentarea.gradientlowhigh_value,
    shared.obstacleassessmentarea.gradientlowhigh_nilreason,
    shared.obstacleassessmentarea.surfacezone_value,
    shared.obstacleassessmentarea.surfacezone_nilreason,
    shared.obstacleassessmentarea.safetyregulation_value,
    shared.obstacleassessmentarea.safetyregulation_nilreason,
    shared.obstacleassessmentarea.assessedaltitude_value,
    shared.obstacleassessmentarea.assessedaltitude_uom,
    shared.obstacleassessmentarea.assessedaltitude_nilreason,
    shared.obstacleassessmentarea.slopeloweraltitude_value,
    shared.obstacleassessmentarea.slopeloweraltitude_uom,
    shared.obstacleassessmentarea.slopeloweraltitude_nilreason,
    geometry_surface_view_bfqemg.geom,
    geometry_surface_view_bfqemg.horizontalAccuracy,
    geometry_curve_view_oxosov.geom,
    geometry_curve_view_oxosov.horizontalAccuracy;
create index on shared.obstacleassessmentarea_view (id);
-- PointReferencePropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists navaids_points.pointreference_view cascade;
create materialized view navaids_points.pointreference_view as
select
    navaids_points.pointreference_pt.id,
    navaids_points.pointreference_pt.nilreason AS pointreference_nilreason,
    coalesce(cast(navaids_points.pointreference.role_value as varchar), '(' || navaids_points.pointreference.role_nilreason || ')') as role,
    coalesce(cast(navaids_points.pointreference.priorfixtolerance_value as varchar) || ' ' || navaids_points.pointreference.priorfixtolerance_uom, '(' || navaids_points.pointreference.priorfixtolerance_nilreason || ')') as priorfixtolerance,
    coalesce(cast(navaids_points.pointreference.postfixtolerance_value as varchar) || ' ' || navaids_points.pointreference.postfixtolerance_uom, '(' || navaids_points.pointreference.postfixtolerance_nilreason || ')') as postfixtolerance,
    coalesce(cast(navaids_points_designatedpoint_pt_rtmhyb.title as varchar), '(' || navaids_points_designatedpoint_pt_rtmhyb.nilreason[1] || ')') AS point,
    navaids_points_designatedpoint_pt_rtmhyb.href AS point_href,
    geometry_surface_view_ltiphe.geom AS fixtolerancearea_geom,
    geometry_surface_view_ltiphe.horizontalAccuracy as fixtolerancearea_horizontalaccuracy,
    jsonb_agg(DISTINCT navaids_points_angleuse_pt_cfcjbu.id) AS facilityangle,
    jsonb_agg(DISTINCT jsonb_build_object('id', navaids_points_distanceindication_pt_ojbzgy.id,
    'title', coalesce(cast(navaids_points_distanceindication_pt_ojbzgy.title AS varchar), '(' || navaids_points_distanceindication_pt_ojbzgy.nilreason[1] || ')'),
    'href', navaids_points_distanceindication_pt_ojbzgy.href)) AS facilitydistance,
    jsonb_agg(DISTINCT notes_note_view_etqgma.*) AS annotation
from navaids_points.pointreference_pt 
inner join navaids_points.pointreference on navaids_points.pointreference_pt.pointreference_id = navaids_points.pointreference.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_rtmhyb on navaids_points.pointreference.point_id = navaids_points_designatedpoint_pt_rtmhyb.id
left join geometry.surface_view geometry_surface_view_ltiphe on navaids_points.pointreference.fixtolerancearea_id = geometry_surface_view_ltiphe.id
left join master_join master_join_ldpsub on navaids_points.pointreference.id = master_join_ldpsub.source_id
left join navaids_points.angleuse_pt navaids_points_angleuse_pt_cfcjbu on master_join_ldpsub.target_id = navaids_points_angleuse_pt_cfcjbu.id
left join master_join master_join_znkvmf on navaids_points.pointreference.id = master_join_znkvmf.source_id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_ojbzgy on master_join_znkvmf.target_id = navaids_points_distanceindication_pt_ojbzgy.id
left join master_join master_join_cajuzq on navaids_points.pointreference.id = master_join_cajuzq.source_id
left join notes.note_view notes_note_view_etqgma on master_join_cajuzq.target_id = notes_note_view_etqgma.id
group by
    navaids_points.pointreference_pt.id,
    navaids_points.pointreference_pt.nilreason,
    navaids_points.pointreference.role_value,
    navaids_points.pointreference.role_nilreason,
    navaids_points.pointreference.priorfixtolerance_value,
    navaids_points.pointreference.priorfixtolerance_uom,
    navaids_points.pointreference.priorfixtolerance_nilreason,
    navaids_points.pointreference.postfixtolerance_value,
    navaids_points.pointreference.postfixtolerance_uom,
    navaids_points.pointreference.postfixtolerance_nilreason,
    navaids_points_designatedpoint_pt_rtmhyb.title,
    navaids_points_designatedpoint_pt_rtmhyb.nilreason[1],
    navaids_points_designatedpoint_pt_rtmhyb.href,
    geometry_surface_view_ltiphe.geom,
    geometry_surface_view_ltiphe.horizontalAccuracy;
create index on navaids_points.pointreference_view (id);
-- SafeAltitudeAreaSectorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.safealtitudeareasector_view cascade;
create materialized view procedure.safealtitudeareasector_view as
select
    procedure.safealtitudeareasector_pt.id,
    procedure.safealtitudeareasector_pt.nilreason AS safealtitudeareasector_nilreason,
    coalesce(cast(procedure.safealtitudeareasector.bufferwidth_value as varchar) || ' ' || procedure.safealtitudeareasector.bufferwidth_uom, '(' || procedure.safealtitudeareasector.bufferwidth_nilreason || ')') as bufferwidth,
    geometry_surface_view_onocpj.geom AS extent_geom,
    geometry_surface_view_onocpj.horizontalAccuracy as extent_horizontalaccuracy,
    shared_circlesector_pt_melfrj.id AS sectordefinition,
    jsonb_agg(DISTINCT shared_obstruction_pt_whcwat.id) AS significantobstacle,
    jsonb_agg(DISTINCT notes_note_view_abmief.*) AS annotation
from procedure.safealtitudeareasector_pt 
inner join procedure.safealtitudeareasector on procedure.safealtitudeareasector_pt.safealtitudeareasector_id = procedure.safealtitudeareasector.id
left join geometry.surface_view geometry_surface_view_onocpj on procedure.safealtitudeareasector.extent_id = geometry_surface_view_onocpj.id
left join shared.circlesector_pt shared_circlesector_pt_melfrj on procedure.safealtitudeareasector.sectordefinition_id = shared_circlesector_pt_melfrj.id
left join master_join master_join_mfdqfg on procedure.safealtitudeareasector.id = master_join_mfdqfg.source_id
left join shared.obstruction_pt shared_obstruction_pt_whcwat on master_join_mfdqfg.target_id = shared_obstruction_pt_whcwat.id
left join master_join master_join_mdebvw on procedure.safealtitudeareasector.id = master_join_mdebvw.source_id
left join notes.note_view notes_note_view_abmief on master_join_mdebvw.target_id = notes_note_view_abmief.id
group by
    procedure.safealtitudeareasector_pt.id,
    procedure.safealtitudeareasector_pt.nilreason,
    procedure.safealtitudeareasector.bufferwidth_value,
    procedure.safealtitudeareasector.bufferwidth_uom,
    procedure.safealtitudeareasector.bufferwidth_nilreason,
    geometry_surface_view_onocpj.geom,
    geometry_surface_view_onocpj.horizontalAccuracy,
    shared_circlesector_pt_melfrj.id;
create index on procedure.safealtitudeareasector_view (id);
-- TerminalArrivalAreaSectorPropertyType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists procedure.terminalarrivalareasector_view cascade;
create materialized view procedure.terminalarrivalareasector_view as
select
    procedure.terminalarrivalareasector_pt.id,
    procedure.terminalarrivalareasector_pt.nilreason AS terminalarrivalareasector_nilreason,
    coalesce(cast(procedure.terminalarrivalareasector.flybycode_value as varchar), '(' || procedure.terminalarrivalareasector.flybycode_nilreason || ')') as flybycode,
    coalesce(cast(procedure.terminalarrivalareasector.procedureturnrequired_value as varchar), '(' || procedure.terminalarrivalareasector.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.terminalarrivalareasector.altitudedescription_value as varchar), '(' || procedure.terminalarrivalareasector.altitudedescription_nilreason || ')') as altitudedescription,
    shared_circlesector_pt_fmuqat.id AS sectordefinition,
    geometry_surface_view_ihsnmw.geom AS extent_geom,
    geometry_surface_view_ihsnmw.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(DISTINCT shared_obstruction_pt_hutdim.id) AS significantobstacle,
    jsonb_agg(DISTINCT notes_note_view_ufrvcz.*) AS annotation
from procedure.terminalarrivalareasector_pt 
inner join procedure.terminalarrivalareasector on procedure.terminalarrivalareasector_pt.terminalarrivalareasector_id = procedure.terminalarrivalareasector.id
left join shared.circlesector_pt shared_circlesector_pt_fmuqat on procedure.terminalarrivalareasector.sectordefinition_id = shared_circlesector_pt_fmuqat.id
left join geometry.surface_view geometry_surface_view_ihsnmw on procedure.terminalarrivalareasector.extent_id = geometry_surface_view_ihsnmw.id
left join master_join master_join_ecddfp on procedure.terminalarrivalareasector.id = master_join_ecddfp.source_id
left join shared.obstruction_pt shared_obstruction_pt_hutdim on master_join_ecddfp.target_id = shared_obstruction_pt_hutdim.id
left join master_join master_join_wjwene on procedure.terminalarrivalareasector.id = master_join_wjwene.source_id
left join notes.note_view notes_note_view_ufrvcz on master_join_wjwene.target_id = notes_note_view_ufrvcz.id
group by
    procedure.terminalarrivalareasector_pt.id,
    procedure.terminalarrivalareasector_pt.nilreason,
    procedure.terminalarrivalareasector.flybycode_value,
    procedure.terminalarrivalareasector.flybycode_nilreason,
    procedure.terminalarrivalareasector.procedureturnrequired_value,
    procedure.terminalarrivalareasector.procedureturnrequired_nilreason,
    procedure.terminalarrivalareasector.altitudedescription_value,
    procedure.terminalarrivalareasector.altitudedescription_nilreason,
    shared_circlesector_pt_fmuqat.id,
    geometry_surface_view_ihsnmw.geom,
    geometry_surface_view_ihsnmw.horizontalAccuracy;
create index on procedure.terminalarrivalareasector_view (id);
-- AirportHeliportAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airportheliportavailability_view cascade;
create materialized view airport_heliport.airportheliportavailability_view as
select
    airport_heliport.airportheliportavailability_pt.id,
    airport_heliport.airportheliportavailability_pt.nilreason AS airportheliportavailability_nilreason,
    coalesce(cast(airport_heliport.airportheliportavailability.operationalstatus_value as varchar), '(' || airport_heliport.airportheliportavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.airportheliportavailability.warning_value as varchar), '(' || airport_heliport.airportheliportavailability.warning_nilreason || ')') as warning,
    jsonb_agg(DISTINCT shared_timesheet_view_neumep.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_eyskls.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_rpdgug.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_rpdgug.title AS varchar), '(' || organisation_organisationauthority_pt_rpdgug.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_rpdgug.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT airport_heliport_airportheliportusage_pt_iawnjl.id) AS usage
from airport_heliport.airportheliportavailability_pt 
inner join airport_heliport.airportheliportavailability on airport_heliport.airportheliportavailability_pt.airportheliportavailability_id = airport_heliport.airportheliportavailability.id
left join master_join master_join_vahryg on airport_heliport.airportheliportavailability.id = master_join_vahryg.source_id
left join shared.timesheet_view shared_timesheet_view_neumep on master_join_vahryg.target_id = shared_timesheet_view_neumep.id
left join master_join master_join_gikcui on airport_heliport.airportheliportavailability.id = master_join_gikcui.source_id
left join notes.note_view notes_note_view_eyskls on master_join_gikcui.target_id = notes_note_view_eyskls.id
left join master_join master_join_szpqov on airport_heliport.airportheliportavailability.id = master_join_szpqov.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_rpdgug on master_join_szpqov.target_id = organisation_organisationauthority_pt_rpdgug.id
left join master_join master_join_ykmgrh on airport_heliport.airportheliportavailability.id = master_join_ykmgrh.source_id
left join airport_heliport.airportheliportusage_pt airport_heliport_airportheliportusage_pt_iawnjl on master_join_ykmgrh.target_id = airport_heliport_airportheliportusage_pt_iawnjl.id
group by
    airport_heliport.airportheliportavailability_pt.id,
    airport_heliport.airportheliportavailability_pt.nilreason,
    airport_heliport.airportheliportavailability.operationalstatus_value,
    airport_heliport.airportheliportavailability.operationalstatus_nilreason,
    airport_heliport.airportheliportavailability.warning_value,
    airport_heliport.airportheliportavailability.warning_nilreason;
create index on airport_heliport.airportheliportavailability_view (id);
-- AirportHeliportResponsibilityOrganisationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airportheliportresponsibilityorganisation_view cascade;
create materialized view airport_heliport.airportheliportresponsibilityorganisation_view as
select
    airport_heliport.airportheliportresponsibilityorganisation_pt.id,
    airport_heliport.airportheliportresponsibilityorganisation_pt.nilreason AS airportheliportresponsibilityorganisation_nilreason,
    coalesce(cast(airport_heliport.airportheliportresponsibilityorganisation.role_value as varchar), '(' || airport_heliport.airportheliportresponsibilityorganisation.role_nilreason || ')') as role,
    coalesce(cast(organisation_organisationauthority_pt_qermxw.title as varchar), '(' || organisation_organisationauthority_pt_qermxw.nilreason[1] || ')') AS theorganisationauthority,
    organisation_organisationauthority_pt_qermxw.href AS theorganisationauthority_href,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_paetht.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_paetht.title AS varchar), '(' || organisation_organisationauthority_pt_paetht.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_paetht.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT shared_timesheet_view_amqxfl.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_ynslul.*) AS annotation
from airport_heliport.airportheliportresponsibilityorganisation_pt 
inner join airport_heliport.airportheliportresponsibilityorganisation on airport_heliport.airportheliportresponsibilityorganisation_pt.airportheliportresponsibilityorganisation_id = airport_heliport.airportheliportresponsibilityorganisation.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_qermxw on airport_heliport.airportheliportresponsibilityorganisation.theorganisationauthority_id = organisation_organisationauthority_pt_qermxw.id
left join master_join master_join_vmyjrw on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_vmyjrw.source_id
left join shared.timesheet_view shared_timesheet_view_amqxfl on master_join_vmyjrw.target_id = shared_timesheet_view_amqxfl.id
left join master_join master_join_ntcmfe on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_ntcmfe.source_id
left join notes.note_view notes_note_view_ynslul on master_join_ntcmfe.target_id = notes_note_view_ynslul.id
left join master_join master_join_cgohtp on airport_heliport.airportheliportresponsibilityorganisation.id = master_join_cgohtp.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_paetht on master_join_cgohtp.target_id = organisation_organisationauthority_pt_paetht.id
group by
    airport_heliport.airportheliportresponsibilityorganisation_pt.id,
    airport_heliport.airportheliportresponsibilityorganisation_pt.nilreason,
    airport_heliport.airportheliportresponsibilityorganisation.role_value,
    airport_heliport.airportheliportresponsibilityorganisation.role_nilreason,
    organisation_organisationauthority_pt_qermxw.title,
    organisation_organisationauthority_pt_qermxw.nilreason[1],
    organisation_organisationauthority_pt_qermxw.href;
create index on airport_heliport.airportheliportresponsibilityorganisation_view (id);
-- AirspaceActivationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airspace.airspaceactivation_view cascade;
create materialized view airspace.airspaceactivation_view as
select
    airspace.airspaceactivation_pt.id,
    airspace.airspaceactivation_pt.nilreason AS airspaceactivation_nilreason,
    coalesce(cast(airspace.airspaceactivation.activity_value as varchar), '(' || airspace.airspaceactivation.activity_nilreason || ')') as activity,
    coalesce(cast(airspace.airspaceactivation.status_value as varchar), '(' || airspace.airspaceactivation.status_nilreason || ')') as status,
    jsonb_agg(DISTINCT shared_timesheet_view_jwvriy.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_vpbulc.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_djiino.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_djiino.title AS varchar), '(' || organisation_organisationauthority_pt_djiino.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_djiino.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_krhibn.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_krhibn.title AS varchar), '(' || organisation_organisationauthority_pt_krhibn.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_krhibn.href)) AS user,
    jsonb_agg(DISTINCT shared_airspacelayer_pt_lvbued.id) AS levels,
    jsonb_agg(DISTINCT shared_aircraftcharacteristic_pt_jmfkpo.id) AS aircraft
from airspace.airspaceactivation_pt 
inner join airspace.airspaceactivation on airspace.airspaceactivation_pt.airspaceactivation_id = airspace.airspaceactivation.id
left join master_join master_join_egaacj on airspace.airspaceactivation.id = master_join_egaacj.source_id
left join shared.timesheet_view shared_timesheet_view_jwvriy on master_join_egaacj.target_id = shared_timesheet_view_jwvriy.id
left join master_join master_join_jtdana on airspace.airspaceactivation.id = master_join_jtdana.source_id
left join notes.note_view notes_note_view_vpbulc on master_join_jtdana.target_id = notes_note_view_vpbulc.id
left join master_join master_join_tnarnn on airspace.airspaceactivation.id = master_join_tnarnn.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_djiino on master_join_tnarnn.target_id = organisation_organisationauthority_pt_djiino.id
left join master_join master_join_qqsvdi on airspace.airspaceactivation.id = master_join_qqsvdi.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_lvbued on master_join_qqsvdi.target_id = shared_airspacelayer_pt_lvbued.id
left join master_join master_join_orddea on airspace.airspaceactivation.id = master_join_orddea.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_krhibn on master_join_orddea.target_id = organisation_organisationauthority_pt_krhibn.id
left join master_join master_join_smkhoj on airspace.airspaceactivation.id = master_join_smkhoj.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_jmfkpo on master_join_smkhoj.target_id = shared_aircraftcharacteristic_pt_jmfkpo.id
group by
    airspace.airspaceactivation_pt.id,
    airspace.airspaceactivation_pt.nilreason,
    airspace.airspaceactivation.activity_value,
    airspace.airspaceactivation.activity_nilreason,
    airspace.airspaceactivation.status_value,
    airspace.airspaceactivation.status_nilreason;
create index on airspace.airspaceactivation_view (id);
-- AirspaceLayerClassPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airspace.airspacelayerclass_view cascade;
create materialized view airspace.airspacelayerclass_view as
select
    airspace.airspacelayerclass_pt.id,
    airspace.airspacelayerclass_pt.nilreason AS airspacelayerclass_nilreason,
    coalesce(cast(airspace.airspacelayerclass.classification_value as varchar), '(' || airspace.airspacelayerclass.classification_nilreason || ')') as classification,
    jsonb_agg(DISTINCT shared_timesheet_view_hprsrn.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_awstfb.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_thdrcs.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_thdrcs.title AS varchar), '(' || organisation_organisationauthority_pt_thdrcs.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_thdrcs.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT shared_airspacelayer_pt_ubjzfm.id) AS associatedlevels
from airspace.airspacelayerclass_pt 
inner join airspace.airspacelayerclass on airspace.airspacelayerclass_pt.airspacelayerclass_id = airspace.airspacelayerclass.id
left join master_join master_join_uhatvp on airspace.airspacelayerclass.id = master_join_uhatvp.source_id
left join shared.timesheet_view shared_timesheet_view_hprsrn on master_join_uhatvp.target_id = shared_timesheet_view_hprsrn.id
left join master_join master_join_mqafyc on airspace.airspacelayerclass.id = master_join_mqafyc.source_id
left join notes.note_view notes_note_view_awstfb on master_join_mqafyc.target_id = notes_note_view_awstfb.id
left join master_join master_join_igjkvu on airspace.airspacelayerclass.id = master_join_igjkvu.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_thdrcs on master_join_igjkvu.target_id = organisation_organisationauthority_pt_thdrcs.id
left join master_join master_join_rguldn on airspace.airspacelayerclass.id = master_join_rguldn.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_ubjzfm on master_join_rguldn.target_id = shared_airspacelayer_pt_ubjzfm.id
group by
    airspace.airspacelayerclass_pt.id,
    airspace.airspacelayerclass_pt.nilreason,
    airspace.airspacelayerclass.classification_value,
    airspace.airspacelayerclass.classification_nilreason;
create index on airspace.airspacelayerclass_view (id);
-- AltimeterSourceStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.altimetersourcestatus_view cascade;
create materialized view airport_heliport.altimetersourcestatus_view as
select
    airport_heliport.altimetersourcestatus_pt.id,
    airport_heliport.altimetersourcestatus_pt.nilreason AS altimetersourcestatus_nilreason,
    coalesce(cast(airport_heliport.altimetersourcestatus.operationalstatus_value as varchar), '(' || airport_heliport.altimetersourcestatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(DISTINCT shared_timesheet_view_puaolf.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_kivuvt.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_tsilvy.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_tsilvy.title AS varchar), '(' || organisation_organisationauthority_pt_tsilvy.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_tsilvy.href)) AS specialdateauthority
from airport_heliport.altimetersourcestatus_pt 
inner join airport_heliport.altimetersourcestatus on airport_heliport.altimetersourcestatus_pt.altimetersourcestatus_id = airport_heliport.altimetersourcestatus.id
left join master_join master_join_sgizpn on airport_heliport.altimetersourcestatus.id = master_join_sgizpn.source_id
left join shared.timesheet_view shared_timesheet_view_puaolf on master_join_sgizpn.target_id = shared_timesheet_view_puaolf.id
left join master_join master_join_qlkktk on airport_heliport.altimetersourcestatus.id = master_join_qlkktk.source_id
left join notes.note_view notes_note_view_kivuvt on master_join_qlkktk.target_id = notes_note_view_kivuvt.id
left join master_join master_join_hpriqj on airport_heliport.altimetersourcestatus.id = master_join_hpriqj.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_tsilvy on master_join_hpriqj.target_id = organisation_organisationauthority_pt_tsilvy.id
group by
    airport_heliport.altimetersourcestatus_pt.id,
    airport_heliport.altimetersourcestatus_pt.nilreason,
    airport_heliport.altimetersourcestatus.operationalstatus_value,
    airport_heliport.altimetersourcestatus.operationalstatus_nilreason;
create index on airport_heliport.altimetersourcestatus_view (id);
-- ApronAreaAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.apronareaavailability_view cascade;
create materialized view airport_heliport.apronareaavailability_view as
select
    airport_heliport.apronareaavailability_pt.id,
    airport_heliport.apronareaavailability_pt.nilreason AS apronareaavailability_nilreason,
    coalesce(cast(airport_heliport.apronareaavailability.operationalstatus_value as varchar), '(' || airport_heliport.apronareaavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.apronareaavailability.warning_value as varchar), '(' || airport_heliport.apronareaavailability.warning_nilreason || ')') as warning,
    jsonb_agg(DISTINCT shared_timesheet_view_pixelo.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_ryojdm.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_annbyc.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_annbyc.title AS varchar), '(' || organisation_organisationauthority_pt_annbyc.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_annbyc.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT airport_heliport_apronareausage_pt_leiile.id) AS usage
from airport_heliport.apronareaavailability_pt 
inner join airport_heliport.apronareaavailability on airport_heliport.apronareaavailability_pt.apronareaavailability_id = airport_heliport.apronareaavailability.id
left join master_join master_join_yymhfp on airport_heliport.apronareaavailability.id = master_join_yymhfp.source_id
left join shared.timesheet_view shared_timesheet_view_pixelo on master_join_yymhfp.target_id = shared_timesheet_view_pixelo.id
left join master_join master_join_whgckl on airport_heliport.apronareaavailability.id = master_join_whgckl.source_id
left join notes.note_view notes_note_view_ryojdm on master_join_whgckl.target_id = notes_note_view_ryojdm.id
left join master_join master_join_dmxgzp on airport_heliport.apronareaavailability.id = master_join_dmxgzp.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_annbyc on master_join_dmxgzp.target_id = organisation_organisationauthority_pt_annbyc.id
left join master_join master_join_tobuyv on airport_heliport.apronareaavailability.id = master_join_tobuyv.source_id
left join airport_heliport.apronareausage_pt airport_heliport_apronareausage_pt_leiile on master_join_tobuyv.target_id = airport_heliport_apronareausage_pt_leiile.id
group by
    airport_heliport.apronareaavailability_pt.id,
    airport_heliport.apronareaavailability_pt.nilreason,
    airport_heliport.apronareaavailability.operationalstatus_value,
    airport_heliport.apronareaavailability.operationalstatus_nilreason,
    airport_heliport.apronareaavailability.warning_value,
    airport_heliport.apronareaavailability.warning_nilreason;
create index on airport_heliport.apronareaavailability_view (id);
-- CirclingRestrictionPropertyType
-- ['geometry.surface_view', 'shared.timesheet_view', 'notes.note_view']
drop materialized view if exists procedure.circlingrestriction_view cascade;
create materialized view procedure.circlingrestriction_view as
select
    procedure.circlingrestriction_pt.id,
    procedure.circlingrestriction_pt.nilreason AS circlingrestriction_nilreason,
    shared_circlesector_pt_csfsdh.id AS sectordescription,
    geometry_surface_view_kwwjzd.geom AS restrictionarea_geom,
    geometry_surface_view_kwwjzd.horizontalAccuracy as restrictionarea_horizontalaccuracy,
    jsonb_agg(DISTINCT shared_timesheet_view_zkmfas.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_zaaidk.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_pilwno.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_pilwno.title AS varchar), '(' || organisation_organisationauthority_pt_pilwno.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_pilwno.href)) AS specialdateauthority
from procedure.circlingrestriction_pt 
inner join procedure.circlingrestriction on procedure.circlingrestriction_pt.circlingrestriction_id = procedure.circlingrestriction.id
left join shared.circlesector_pt shared_circlesector_pt_csfsdh on procedure.circlingrestriction.sectordescription_id = shared_circlesector_pt_csfsdh.id
left join geometry.surface_view geometry_surface_view_kwwjzd on procedure.circlingrestriction.restrictionarea_id = geometry_surface_view_kwwjzd.id
left join master_join master_join_waeeoi on procedure.circlingrestriction.id = master_join_waeeoi.source_id
left join shared.timesheet_view shared_timesheet_view_zkmfas on master_join_waeeoi.target_id = shared_timesheet_view_zkmfas.id
left join master_join master_join_bfgblz on procedure.circlingrestriction.id = master_join_bfgblz.source_id
left join notes.note_view notes_note_view_zaaidk on master_join_bfgblz.target_id = notes_note_view_zaaidk.id
left join master_join master_join_ejqldg on procedure.circlingrestriction.id = master_join_ejqldg.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_pilwno on master_join_ejqldg.target_id = organisation_organisationauthority_pt_pilwno.id
group by
    procedure.circlingrestriction_pt.id,
    procedure.circlingrestriction_pt.nilreason,
    shared_circlesector_pt_csfsdh.id,
    geometry_surface_view_kwwjzd.geom,
    geometry_surface_view_kwwjzd.horizontalAccuracy;
create index on procedure.circlingrestriction_view (id);
-- ConditionCombinationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.conditioncombination_view cascade;
create materialized view airport_heliport.conditioncombination_view as
select
    airport_heliport.conditioncombination_pt.id,
    airport_heliport.conditioncombination_pt.nilreason AS conditioncombination_nilreason,
    coalesce(cast(airport_heliport.conditioncombination.logicaloperator_value as varchar), '(' || airport_heliport.conditioncombination.logicaloperator_nilreason || ')') as logicaloperator,
    jsonb_agg(DISTINCT shared_timesheet_view_cymsek.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_hghnrg.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_bnnwpm.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_bnnwpm.title AS varchar), '(' || organisation_organisationauthority_pt_bnnwpm.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_bnnwpm.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT shared_meteorology_pt_fvtwuy.id) AS weather,
    jsonb_agg(DISTINCT shared_aircraftcharacteristic_pt_odrqie.id) AS aircraft,
    jsonb_agg(DISTINCT shared_flightcharacteristic_pt_rjpqlb.id) AS flight,
    jsonb_agg(DISTINCT airport_heliport_conditioncombination_pt_prjrxc.id) AS subcondition
from airport_heliport.conditioncombination_pt 
inner join airport_heliport.conditioncombination on airport_heliport.conditioncombination_pt.conditioncombination_id = airport_heliport.conditioncombination.id
left join master_join master_join_qibyak on airport_heliport.conditioncombination.id = master_join_qibyak.source_id
left join shared.timesheet_view shared_timesheet_view_cymsek on master_join_qibyak.target_id = shared_timesheet_view_cymsek.id
left join master_join master_join_fatfli on airport_heliport.conditioncombination.id = master_join_fatfli.source_id
left join notes.note_view notes_note_view_hghnrg on master_join_fatfli.target_id = notes_note_view_hghnrg.id
left join master_join master_join_wtrgdr on airport_heliport.conditioncombination.id = master_join_wtrgdr.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_bnnwpm on master_join_wtrgdr.target_id = organisation_organisationauthority_pt_bnnwpm.id
left join master_join master_join_sfsaky on airport_heliport.conditioncombination.id = master_join_sfsaky.source_id
left join shared.meteorology_pt shared_meteorology_pt_fvtwuy on master_join_sfsaky.target_id = shared_meteorology_pt_fvtwuy.id
left join master_join master_join_auceyx on airport_heliport.conditioncombination.id = master_join_auceyx.source_id
left join shared.aircraftcharacteristic_pt shared_aircraftcharacteristic_pt_odrqie on master_join_auceyx.target_id = shared_aircraftcharacteristic_pt_odrqie.id
left join master_join master_join_cwwznz on airport_heliport.conditioncombination.id = master_join_cwwznz.source_id
left join shared.flightcharacteristic_pt shared_flightcharacteristic_pt_rjpqlb on master_join_cwwznz.target_id = shared_flightcharacteristic_pt_rjpqlb.id
left join master_join master_join_zltxbn on airport_heliport.conditioncombination.id = master_join_zltxbn.source_id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_prjrxc on master_join_zltxbn.target_id = airport_heliport_conditioncombination_pt_prjrxc.id
group by
    airport_heliport.conditioncombination_pt.id,
    airport_heliport.conditioncombination_pt.nilreason,
    airport_heliport.conditioncombination.logicaloperator_value,
    airport_heliport.conditioncombination.logicaloperator_nilreason;
create index on airport_heliport.conditioncombination_view (id);
-- FlightConditionCombinationPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists routes.flightconditioncombination_view cascade;
create materialized view routes.flightconditioncombination_view as
select
    routes.flightconditioncombination_pt.id,
    routes.flightconditioncombination_pt.nilreason AS flightconditioncombination_nilreason,
    coalesce(cast(routes.flightconditioncombination.logicaloperator_value as varchar), '(' || routes.flightconditioncombination.logicaloperator_nilreason || ')') as logicaloperator,
    jsonb_agg(DISTINCT shared_timesheet_view_qevmdo.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_vdeuyq.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_zpcgwz.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_zpcgwz.title AS varchar), '(' || organisation_organisationauthority_pt_zpcgwz.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_zpcgwz.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT routes_flightconditionelement_pt_reojgj.id) AS element
from routes.flightconditioncombination_pt 
inner join routes.flightconditioncombination on routes.flightconditioncombination_pt.flightconditioncombination_id = routes.flightconditioncombination.id
left join master_join master_join_ncpqbf on routes.flightconditioncombination.id = master_join_ncpqbf.source_id
left join shared.timesheet_view shared_timesheet_view_qevmdo on master_join_ncpqbf.target_id = shared_timesheet_view_qevmdo.id
left join master_join master_join_peunuq on routes.flightconditioncombination.id = master_join_peunuq.source_id
left join notes.note_view notes_note_view_vdeuyq on master_join_peunuq.target_id = notes_note_view_vdeuyq.id
left join master_join master_join_sqvslz on routes.flightconditioncombination.id = master_join_sqvslz.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_zpcgwz on master_join_sqvslz.target_id = organisation_organisationauthority_pt_zpcgwz.id
left join master_join master_join_figuua on routes.flightconditioncombination.id = master_join_figuua.source_id
left join routes.flightconditionelement_pt routes_flightconditionelement_pt_reojgj on master_join_figuua.target_id = routes_flightconditionelement_pt_reojgj.id
group by
    routes.flightconditioncombination_pt.id,
    routes.flightconditioncombination_pt.nilreason,
    routes.flightconditioncombination.logicaloperator_value,
    routes.flightconditioncombination.logicaloperator_nilreason;
create index on routes.flightconditioncombination_view (id);
-- GroundLightingAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.groundlightingavailability_view cascade;
create materialized view airport_heliport.groundlightingavailability_view as
select
    airport_heliport.groundlightingavailability_pt.id,
    airport_heliport.groundlightingavailability_pt.nilreason AS groundlightingavailability_nilreason,
    coalesce(cast(airport_heliport.groundlightingavailability.operationalstatus_value as varchar), '(' || airport_heliport.groundlightingavailability.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(DISTINCT shared_timesheet_view_jfskjk.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_zdelps.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_dqwbdb.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_dqwbdb.title AS varchar), '(' || organisation_organisationauthority_pt_dqwbdb.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_dqwbdb.href)) AS specialdateauthority
from airport_heliport.groundlightingavailability_pt 
inner join airport_heliport.groundlightingavailability on airport_heliport.groundlightingavailability_pt.groundlightingavailability_id = airport_heliport.groundlightingavailability.id
left join master_join master_join_rkpyuk on airport_heliport.groundlightingavailability.id = master_join_rkpyuk.source_id
left join shared.timesheet_view shared_timesheet_view_jfskjk on master_join_rkpyuk.target_id = shared_timesheet_view_jfskjk.id
left join master_join master_join_rffvyq on airport_heliport.groundlightingavailability.id = master_join_rffvyq.source_id
left join notes.note_view notes_note_view_zdelps on master_join_rffvyq.target_id = notes_note_view_zdelps.id
left join master_join master_join_ssmjvx on airport_heliport.groundlightingavailability.id = master_join_ssmjvx.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_dqwbdb on master_join_ssmjvx.target_id = organisation_organisationauthority_pt_dqwbdb.id
group by
    airport_heliport.groundlightingavailability_pt.id,
    airport_heliport.groundlightingavailability_pt.nilreason,
    airport_heliport.groundlightingavailability.operationalstatus_value,
    airport_heliport.groundlightingavailability.operationalstatus_nilreason;
create index on airport_heliport.groundlightingavailability_view (id);
-- LightElementStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.lightelementstatus_view cascade;
create materialized view shared.lightelementstatus_view as
select
    shared.lightelementstatus_pt.id,
    shared.lightelementstatus_pt.nilreason AS lightelementstatus_nilreason,
    coalesce(cast(shared.lightelementstatus.status_value as varchar), '(' || shared.lightelementstatus.status_nilreason || ')') as status,
    jsonb_agg(DISTINCT shared_timesheet_view_gicrrw.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_jrbrgq.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_rlolsq.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_rlolsq.title AS varchar), '(' || organisation_organisationauthority_pt_rlolsq.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_rlolsq.href)) AS specialdateauthority
from shared.lightelementstatus_pt 
inner join shared.lightelementstatus on shared.lightelementstatus_pt.lightelementstatus_id = shared.lightelementstatus.id
left join master_join master_join_uzvhwa on shared.lightelementstatus.id = master_join_uzvhwa.source_id
left join shared.timesheet_view shared_timesheet_view_gicrrw on master_join_uzvhwa.target_id = shared_timesheet_view_gicrrw.id
left join master_join master_join_icxhph on shared.lightelementstatus.id = master_join_icxhph.source_id
left join notes.note_view notes_note_view_jrbrgq on master_join_icxhph.target_id = notes_note_view_jrbrgq.id
left join master_join master_join_wuxggz on shared.lightelementstatus.id = master_join_wuxggz.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_rlolsq on master_join_wuxggz.target_id = organisation_organisationauthority_pt_rlolsq.id
group by
    shared.lightelementstatus_pt.id,
    shared.lightelementstatus_pt.nilreason,
    shared.lightelementstatus.status_value,
    shared.lightelementstatus.status_nilreason;
create index on shared.lightelementstatus_view (id);
-- ManoeuvringAreaAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.manoeuvringareaavailability_view cascade;
create materialized view airport_heliport.manoeuvringareaavailability_view as
select
    airport_heliport.manoeuvringareaavailability_pt.id,
    airport_heliport.manoeuvringareaavailability_pt.nilreason AS manoeuvringareaavailability_nilreason,
    coalesce(cast(airport_heliport.manoeuvringareaavailability.operationalstatus_value as varchar), '(' || airport_heliport.manoeuvringareaavailability.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(airport_heliport.manoeuvringareaavailability.warning_value as varchar), '(' || airport_heliport.manoeuvringareaavailability.warning_nilreason || ')') as warning,
    jsonb_agg(DISTINCT shared_timesheet_view_vfdpqs.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_bldoqc.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ubetxq.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ubetxq.title AS varchar), '(' || organisation_organisationauthority_pt_ubetxq.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ubetxq.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT airport_heliport_manoeuvringareausage_pt_mpkqzs.id) AS usage
from airport_heliport.manoeuvringareaavailability_pt 
inner join airport_heliport.manoeuvringareaavailability on airport_heliport.manoeuvringareaavailability_pt.manoeuvringareaavailability_id = airport_heliport.manoeuvringareaavailability.id
left join master_join master_join_qxyjph on airport_heliport.manoeuvringareaavailability.id = master_join_qxyjph.source_id
left join shared.timesheet_view shared_timesheet_view_vfdpqs on master_join_qxyjph.target_id = shared_timesheet_view_vfdpqs.id
left join master_join master_join_qfdmvy on airport_heliport.manoeuvringareaavailability.id = master_join_qfdmvy.source_id
left join notes.note_view notes_note_view_bldoqc on master_join_qfdmvy.target_id = notes_note_view_bldoqc.id
left join master_join master_join_tgyzdz on airport_heliport.manoeuvringareaavailability.id = master_join_tgyzdz.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ubetxq on master_join_tgyzdz.target_id = organisation_organisationauthority_pt_ubetxq.id
left join master_join master_join_xbrxqr on airport_heliport.manoeuvringareaavailability.id = master_join_xbrxqr.source_id
left join airport_heliport.manoeuvringareausage_pt airport_heliport_manoeuvringareausage_pt_mpkqzs on master_join_xbrxqr.target_id = airport_heliport_manoeuvringareausage_pt_mpkqzs.id
group by
    airport_heliport.manoeuvringareaavailability_pt.id,
    airport_heliport.manoeuvringareaavailability_pt.nilreason,
    airport_heliport.manoeuvringareaavailability.operationalstatus_value,
    airport_heliport.manoeuvringareaavailability.operationalstatus_nilreason,
    airport_heliport.manoeuvringareaavailability.warning_value,
    airport_heliport.manoeuvringareaavailability.warning_nilreason;
create index on airport_heliport.manoeuvringareaavailability_view (id);
-- NavaidEquipmentMonitoringPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists navaids_points.navaidequipmentmonitoring_view cascade;
create materialized view navaids_points.navaidequipmentmonitoring_view as
select
    navaids_points.navaidequipmentmonitoring_pt.id,
    navaids_points.navaidequipmentmonitoring_pt.nilreason AS navaidequipmentmonitoring_nilreason,
    coalesce(cast(navaids_points.navaidequipmentmonitoring.monitored_value as varchar), '(' || navaids_points.navaidequipmentmonitoring.monitored_nilreason || ')') as monitored,
    jsonb_agg(DISTINCT shared_timesheet_view_vaeyoi.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_qtooff.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_nbhaoa.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_nbhaoa.title AS varchar), '(' || organisation_organisationauthority_pt_nbhaoa.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_nbhaoa.href)) AS specialdateauthority
from navaids_points.navaidequipmentmonitoring_pt 
inner join navaids_points.navaidequipmentmonitoring on navaids_points.navaidequipmentmonitoring_pt.navaidequipmentmonitoring_id = navaids_points.navaidequipmentmonitoring.id
left join master_join master_join_mhxdyo on navaids_points.navaidequipmentmonitoring.id = master_join_mhxdyo.source_id
left join shared.timesheet_view shared_timesheet_view_vaeyoi on master_join_mhxdyo.target_id = shared_timesheet_view_vaeyoi.id
left join master_join master_join_dowohu on navaids_points.navaidequipmentmonitoring.id = master_join_dowohu.source_id
left join notes.note_view notes_note_view_qtooff on master_join_dowohu.target_id = notes_note_view_qtooff.id
left join master_join master_join_busntu on navaids_points.navaidequipmentmonitoring.id = master_join_busntu.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_nbhaoa on master_join_busntu.target_id = organisation_organisationauthority_pt_nbhaoa.id
group by
    navaids_points.navaidequipmentmonitoring_pt.id,
    navaids_points.navaidequipmentmonitoring_pt.nilreason,
    navaids_points.navaidequipmentmonitoring.monitored_value,
    navaids_points.navaidequipmentmonitoring.monitored_nilreason;
create index on navaids_points.navaidequipmentmonitoring_view (id);
-- NavaidOperationalStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists navaids_points.navaidoperationalstatus_view cascade;
create materialized view navaids_points.navaidoperationalstatus_view as
select
    navaids_points.navaidoperationalstatus_pt.id,
    navaids_points.navaidoperationalstatus_pt.nilreason AS navaidoperationalstatus_nilreason,
    coalesce(cast(navaids_points.navaidoperationalstatus.operationalstatus_value as varchar), '(' || navaids_points.navaidoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    coalesce(cast(navaids_points.navaidoperationalstatus.signaltype_value as varchar), '(' || navaids_points.navaidoperationalstatus.signaltype_nilreason || ')') as signaltype,
    jsonb_agg(DISTINCT shared_timesheet_view_tfywpl.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_dptzgb.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_qslxuq.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_qslxuq.title AS varchar), '(' || organisation_organisationauthority_pt_qslxuq.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_qslxuq.href)) AS specialdateauthority
from navaids_points.navaidoperationalstatus_pt 
inner join navaids_points.navaidoperationalstatus on navaids_points.navaidoperationalstatus_pt.navaidoperationalstatus_id = navaids_points.navaidoperationalstatus.id
left join master_join master_join_ckpaxl on navaids_points.navaidoperationalstatus.id = master_join_ckpaxl.source_id
left join shared.timesheet_view shared_timesheet_view_tfywpl on master_join_ckpaxl.target_id = shared_timesheet_view_tfywpl.id
left join master_join master_join_tnvgml on navaids_points.navaidoperationalstatus.id = master_join_tnvgml.source_id
left join notes.note_view notes_note_view_dptzgb on master_join_tnvgml.target_id = notes_note_view_dptzgb.id
left join master_join master_join_xzrjal on navaids_points.navaidoperationalstatus.id = master_join_xzrjal.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_qslxuq on master_join_xzrjal.target_id = organisation_organisationauthority_pt_qslxuq.id
group by
    navaids_points.navaidoperationalstatus_pt.id,
    navaids_points.navaidoperationalstatus_pt.nilreason,
    navaids_points.navaidoperationalstatus.operationalstatus_value,
    navaids_points.navaidoperationalstatus.operationalstatus_nilreason,
    navaids_points.navaidoperationalstatus.signaltype_value,
    navaids_points.navaidoperationalstatus.signaltype_nilreason;
create index on navaids_points.navaidoperationalstatus_view (id);
-- OnlineContactPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.onlinecontact_view cascade;
create materialized view shared.onlinecontact_view as
select
    shared.onlinecontact_pt.id,
    shared.onlinecontact_pt.nilreason AS onlinecontact_nilreason,
    coalesce(cast(shared.onlinecontact.network_value as varchar), '(' || shared.onlinecontact.network_nilreason || ')') as network,
    coalesce(cast(shared.onlinecontact.linkage_value as varchar), '(' || shared.onlinecontact.linkage_nilreason || ')') as linkage,
    coalesce(cast(shared.onlinecontact.protocol_value as varchar), '(' || shared.onlinecontact.protocol_nilreason || ')') as protocol,
    coalesce(cast(shared.onlinecontact.email_value as varchar), '(' || shared.onlinecontact.email_nilreason || ')') as email,
    jsonb_agg(DISTINCT shared_timesheet_view_rcqdqr.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_aluswu.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ypiytw.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ypiytw.title AS varchar), '(' || organisation_organisationauthority_pt_ypiytw.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ypiytw.href)) AS specialdateauthority
from shared.onlinecontact_pt 
inner join shared.onlinecontact on shared.onlinecontact_pt.onlinecontact_id = shared.onlinecontact.id
left join master_join master_join_ntbvux on shared.onlinecontact.id = master_join_ntbvux.source_id
left join shared.timesheet_view shared_timesheet_view_rcqdqr on master_join_ntbvux.target_id = shared_timesheet_view_rcqdqr.id
left join master_join master_join_jogfmi on shared.onlinecontact.id = master_join_jogfmi.source_id
left join notes.note_view notes_note_view_aluswu on master_join_jogfmi.target_id = notes_note_view_aluswu.id
left join master_join master_join_cjqjgu on shared.onlinecontact.id = master_join_cjqjgu.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ypiytw on master_join_cjqjgu.target_id = organisation_organisationauthority_pt_ypiytw.id
group by
    shared.onlinecontact_pt.id,
    shared.onlinecontact_pt.nilreason,
    shared.onlinecontact.network_value,
    shared.onlinecontact.network_nilreason,
    shared.onlinecontact.linkage_value,
    shared.onlinecontact.linkage_nilreason,
    shared.onlinecontact.protocol_value,
    shared.onlinecontact.protocol_nilreason,
    shared.onlinecontact.email_value,
    shared.onlinecontact.email_nilreason;
create index on shared.onlinecontact_view (id);
-- PostalAddressPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.postaladdress_view cascade;
create materialized view shared.postaladdress_view as
select
    shared.postaladdress_pt.id,
    shared.postaladdress_pt.nilreason AS postaladdress_nilreason,
    coalesce(cast(shared.postaladdress.deliverypoint_value as varchar), '(' || shared.postaladdress.deliverypoint_nilreason || ')') as deliverypoint,
    coalesce(cast(shared.postaladdress.city_value as varchar), '(' || shared.postaladdress.city_nilreason || ')') as city,
    coalesce(cast(shared.postaladdress.administrativearea_value as varchar), '(' || shared.postaladdress.administrativearea_nilreason || ')') as administrativearea,
    coalesce(cast(shared.postaladdress.postalcode_value as varchar), '(' || shared.postaladdress.postalcode_nilreason || ')') as postalcode,
    coalesce(cast(shared.postaladdress.country_value as varchar), '(' || shared.postaladdress.country_nilreason || ')') as country,
    jsonb_agg(DISTINCT shared_timesheet_view_dianbz.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_benzge.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_qzlklk.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_qzlklk.title AS varchar), '(' || organisation_organisationauthority_pt_qzlklk.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_qzlklk.href)) AS specialdateauthority
from shared.postaladdress_pt 
inner join shared.postaladdress on shared.postaladdress_pt.postaladdress_id = shared.postaladdress.id
left join master_join master_join_ehbmsg on shared.postaladdress.id = master_join_ehbmsg.source_id
left join shared.timesheet_view shared_timesheet_view_dianbz on master_join_ehbmsg.target_id = shared_timesheet_view_dianbz.id
left join master_join master_join_zdihso on shared.postaladdress.id = master_join_zdihso.source_id
left join notes.note_view notes_note_view_benzge on master_join_zdihso.target_id = notes_note_view_benzge.id
left join master_join master_join_ebdwyk on shared.postaladdress.id = master_join_ebdwyk.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_qzlklk on master_join_ebdwyk.target_id = organisation_organisationauthority_pt_qzlklk.id
group by
    shared.postaladdress_pt.id,
    shared.postaladdress_pt.nilreason,
    shared.postaladdress.deliverypoint_value,
    shared.postaladdress.deliverypoint_nilreason,
    shared.postaladdress.city_value,
    shared.postaladdress.city_nilreason,
    shared.postaladdress.administrativearea_value,
    shared.postaladdress.administrativearea_nilreason,
    shared.postaladdress.postalcode_value,
    shared.postaladdress.postalcode_nilreason,
    shared.postaladdress.country_value,
    shared.postaladdress.country_nilreason;
create index on shared.postaladdress_view (id);
-- ProcedureAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists procedure.procedureavailability_view cascade;
create materialized view procedure.procedureavailability_view as
select
    procedure.procedureavailability_pt.id,
    procedure.procedureavailability_pt.nilreason AS procedureavailability_nilreason,
    coalesce(cast(procedure.procedureavailability.status_value as varchar), '(' || procedure.procedureavailability.status_nilreason || ')') as status,
    jsonb_agg(DISTINCT shared_timesheet_view_nojgus.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_bnuxmr.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_dormzp.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_dormzp.title AS varchar), '(' || organisation_organisationauthority_pt_dormzp.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_dormzp.href)) AS specialdateauthority
from procedure.procedureavailability_pt 
inner join procedure.procedureavailability on procedure.procedureavailability_pt.procedureavailability_id = procedure.procedureavailability.id
left join master_join master_join_kmyfjj on procedure.procedureavailability.id = master_join_kmyfjj.source_id
left join shared.timesheet_view shared_timesheet_view_nojgus on master_join_kmyfjj.target_id = shared_timesheet_view_nojgus.id
left join master_join master_join_bnhfht on procedure.procedureavailability.id = master_join_bnhfht.source_id
left join notes.note_view notes_note_view_bnuxmr on master_join_bnhfht.target_id = notes_note_view_bnuxmr.id
left join master_join master_join_hcsnuw on procedure.procedureavailability.id = master_join_hcsnuw.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_dormzp on master_join_hcsnuw.target_id = organisation_organisationauthority_pt_dormzp.id
group by
    procedure.procedureavailability_pt.id,
    procedure.procedureavailability_pt.nilreason,
    procedure.procedureavailability.status_value,
    procedure.procedureavailability.status_nilreason;
create index on procedure.procedureavailability_view (id);
-- RadioCommunicationOperationalStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists service.radiocommunicationoperationalstatus_view cascade;
create materialized view service.radiocommunicationoperationalstatus_view as
select
    service.radiocommunicationoperationalstatus_pt.id,
    service.radiocommunicationoperationalstatus_pt.nilreason AS radiocommunicationoperationalstatus_nilreason,
    coalesce(cast(service.radiocommunicationoperationalstatus.operationalstatus_value as varchar), '(' || service.radiocommunicationoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(DISTINCT shared_timesheet_view_dxwsoq.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_ojzjfo.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_utouqc.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_utouqc.title AS varchar), '(' || organisation_organisationauthority_pt_utouqc.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_utouqc.href)) AS specialdateauthority
from service.radiocommunicationoperationalstatus_pt 
inner join service.radiocommunicationoperationalstatus on service.radiocommunicationoperationalstatus_pt.radiocommunicationoperationalstatus_id = service.radiocommunicationoperationalstatus.id
left join master_join master_join_ydztse on service.radiocommunicationoperationalstatus.id = master_join_ydztse.source_id
left join shared.timesheet_view shared_timesheet_view_dxwsoq on master_join_ydztse.target_id = shared_timesheet_view_dxwsoq.id
left join master_join master_join_ahkyhi on service.radiocommunicationoperationalstatus.id = master_join_ahkyhi.source_id
left join notes.note_view notes_note_view_ojzjfo on master_join_ahkyhi.target_id = notes_note_view_ojzjfo.id
left join master_join master_join_twiphm on service.radiocommunicationoperationalstatus.id = master_join_twiphm.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_utouqc on master_join_twiphm.target_id = organisation_organisationauthority_pt_utouqc.id
group by
    service.radiocommunicationoperationalstatus_pt.id,
    service.radiocommunicationoperationalstatus_pt.nilreason,
    service.radiocommunicationoperationalstatus.operationalstatus_value,
    service.radiocommunicationoperationalstatus.operationalstatus_nilreason;
create index on service.radiocommunicationoperationalstatus_view (id);
-- RouteAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists routes.routeavailability_view cascade;
create materialized view routes.routeavailability_view as
select
    routes.routeavailability_pt.id,
    routes.routeavailability_pt.nilreason AS routeavailability_nilreason,
    coalesce(cast(routes.routeavailability.direction_value as varchar), '(' || routes.routeavailability.direction_nilreason || ')') as direction,
    coalesce(cast(routes.routeavailability.cardinaldirection_value as varchar), '(' || routes.routeavailability.cardinaldirection_nilreason || ')') as cardinaldirection,
    coalesce(cast(routes.routeavailability.status_value as varchar), '(' || routes.routeavailability.status_nilreason || ')') as status,
    jsonb_agg(DISTINCT shared_timesheet_view_hjwhxq.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_trkfur.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_vutjng.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_vutjng.title AS varchar), '(' || organisation_organisationauthority_pt_vutjng.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_vutjng.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT shared_airspacelayer_pt_ggxjcp.id) AS levels
from routes.routeavailability_pt 
inner join routes.routeavailability on routes.routeavailability_pt.routeavailability_id = routes.routeavailability.id
left join master_join master_join_uoqrdz on routes.routeavailability.id = master_join_uoqrdz.source_id
left join shared.timesheet_view shared_timesheet_view_hjwhxq on master_join_uoqrdz.target_id = shared_timesheet_view_hjwhxq.id
left join master_join master_join_tbnjbz on routes.routeavailability.id = master_join_tbnjbz.source_id
left join notes.note_view notes_note_view_trkfur on master_join_tbnjbz.target_id = notes_note_view_trkfur.id
left join master_join master_join_udyria on routes.routeavailability.id = master_join_udyria.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_vutjng on master_join_udyria.target_id = organisation_organisationauthority_pt_vutjng.id
left join master_join master_join_cupksv on routes.routeavailability.id = master_join_cupksv.source_id
left join shared.airspacelayer_pt shared_airspacelayer_pt_ggxjcp on master_join_cupksv.target_id = shared_airspacelayer_pt_ggxjcp.id
group by
    routes.routeavailability_pt.id,
    routes.routeavailability_pt.nilreason,
    routes.routeavailability.direction_value,
    routes.routeavailability.direction_nilreason,
    routes.routeavailability.cardinaldirection_value,
    routes.routeavailability.cardinaldirection_nilreason,
    routes.routeavailability.status_value,
    routes.routeavailability.status_nilreason;
create index on routes.routeavailability_view (id);
-- RunwayDeclaredDistanceValuePropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwaydeclareddistancevalue_view cascade;
create materialized view airport_heliport.runwaydeclareddistancevalue_view as
select
    airport_heliport.runwaydeclareddistancevalue_pt.id,
    airport_heliport.runwaydeclareddistancevalue_pt.nilreason AS runwaydeclareddistancevalue_nilreason,
    coalesce(cast(airport_heliport.runwaydeclareddistancevalue.distance_value as varchar) || ' ' || airport_heliport.runwaydeclareddistancevalue.distance_uom, '(' || airport_heliport.runwaydeclareddistancevalue.distance_nilreason || ')') as distance,
    coalesce(cast(airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_value as varchar) || ' ' || airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_uom, '(' || airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_nilreason || ')') as distanceaccuracy,
    jsonb_agg(DISTINCT shared_timesheet_view_nmedet.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_sygwrs.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_wywmrq.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_wywmrq.title AS varchar), '(' || organisation_organisationauthority_pt_wywmrq.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_wywmrq.href)) AS specialdateauthority
from airport_heliport.runwaydeclareddistancevalue_pt 
inner join airport_heliport.runwaydeclareddistancevalue on airport_heliport.runwaydeclareddistancevalue_pt.runwaydeclareddistancevalue_id = airport_heliport.runwaydeclareddistancevalue.id
left join master_join master_join_ksmrlj on airport_heliport.runwaydeclareddistancevalue.id = master_join_ksmrlj.source_id
left join shared.timesheet_view shared_timesheet_view_nmedet on master_join_ksmrlj.target_id = shared_timesheet_view_nmedet.id
left join master_join master_join_abckfs on airport_heliport.runwaydeclareddistancevalue.id = master_join_abckfs.source_id
left join notes.note_view notes_note_view_sygwrs on master_join_abckfs.target_id = notes_note_view_sygwrs.id
left join master_join master_join_mspehz on airport_heliport.runwaydeclareddistancevalue.id = master_join_mspehz.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_wywmrq on master_join_mspehz.target_id = organisation_organisationauthority_pt_wywmrq.id
group by
    airport_heliport.runwaydeclareddistancevalue_pt.id,
    airport_heliport.runwaydeclareddistancevalue_pt.nilreason,
    airport_heliport.runwaydeclareddistancevalue.distance_value,
    airport_heliport.runwaydeclareddistancevalue.distance_uom,
    airport_heliport.runwaydeclareddistancevalue.distance_nilreason,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_value,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_uom,
    airport_heliport.runwaydeclareddistancevalue.distanceaccuracy_nilreason;
create index on airport_heliport.runwaydeclareddistancevalue_view (id);
-- ServiceOperationalStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists service.serviceoperationalstatus_view cascade;
create materialized view service.serviceoperationalstatus_view as
select
    service.serviceoperationalstatus_pt.id,
    service.serviceoperationalstatus_pt.nilreason AS serviceoperationalstatus_nilreason,
    coalesce(cast(service.serviceoperationalstatus.operationalstatus_value as varchar), '(' || service.serviceoperationalstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(DISTINCT shared_timesheet_view_uevllk.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_gethnw.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_jekyer.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_jekyer.title AS varchar), '(' || organisation_organisationauthority_pt_jekyer.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_jekyer.href)) AS specialdateauthority
from service.serviceoperationalstatus_pt 
inner join service.serviceoperationalstatus on service.serviceoperationalstatus_pt.serviceoperationalstatus_id = service.serviceoperationalstatus.id
left join master_join master_join_tssbtr on service.serviceoperationalstatus.id = master_join_tssbtr.source_id
left join shared.timesheet_view shared_timesheet_view_uevllk on master_join_tssbtr.target_id = shared_timesheet_view_uevllk.id
left join master_join master_join_nuyqkl on service.serviceoperationalstatus.id = master_join_nuyqkl.source_id
left join notes.note_view notes_note_view_gethnw on master_join_nuyqkl.target_id = notes_note_view_gethnw.id
left join master_join master_join_xdaweh on service.serviceoperationalstatus.id = master_join_xdaweh.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_jekyer on master_join_xdaweh.target_id = organisation_organisationauthority_pt_jekyer.id
group by
    service.serviceoperationalstatus_pt.id,
    service.serviceoperationalstatus_pt.nilreason,
    service.serviceoperationalstatus.operationalstatus_value,
    service.serviceoperationalstatus.operationalstatus_nilreason;
create index on service.serviceoperationalstatus_view (id);
-- SpecialNavigationStationStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists navaids_points.specialnavigationstationstatus_view cascade;
create materialized view navaids_points.specialnavigationstationstatus_view as
select
    navaids_points.specialnavigationstationstatus_pt.id,
    navaids_points.specialnavigationstationstatus_pt.nilreason AS specialnavigationstationstatus_nilreason,
    coalesce(cast(navaids_points.specialnavigationstationstatus.operationalstatus_value as varchar), '(' || navaids_points.specialnavigationstationstatus.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(DISTINCT shared_timesheet_view_cuvgus.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_hcmmyk.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_dbzhxh.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_dbzhxh.title AS varchar), '(' || organisation_organisationauthority_pt_dbzhxh.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_dbzhxh.href)) AS specialdateauthority
from navaids_points.specialnavigationstationstatus_pt 
inner join navaids_points.specialnavigationstationstatus on navaids_points.specialnavigationstationstatus_pt.specialnavigationstationstatus_id = navaids_points.specialnavigationstationstatus.id
left join master_join master_join_umjboe on navaids_points.specialnavigationstationstatus.id = master_join_umjboe.source_id
left join shared.timesheet_view shared_timesheet_view_cuvgus on master_join_umjboe.target_id = shared_timesheet_view_cuvgus.id
left join master_join master_join_jsxopw on navaids_points.specialnavigationstationstatus.id = master_join_jsxopw.source_id
left join notes.note_view notes_note_view_hcmmyk on master_join_jsxopw.target_id = notes_note_view_hcmmyk.id
left join master_join master_join_dheocy on navaids_points.specialnavigationstationstatus.id = master_join_dheocy.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_dbzhxh on master_join_dheocy.target_id = organisation_organisationauthority_pt_dbzhxh.id
group by
    navaids_points.specialnavigationstationstatus_pt.id,
    navaids_points.specialnavigationstationstatus_pt.nilreason,
    navaids_points.specialnavigationstationstatus.operationalstatus_value,
    navaids_points.specialnavigationstationstatus.operationalstatus_nilreason;
create index on navaids_points.specialnavigationstationstatus_view (id);
-- TelephoneContactPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists shared.telephonecontact_view cascade;
create materialized view shared.telephonecontact_view as
select
    shared.telephonecontact_pt.id,
    shared.telephonecontact_pt.nilreason AS telephonecontact_nilreason,
    coalesce(cast(shared.telephonecontact.voice_value as varchar), '(' || shared.telephonecontact.voice_nilreason || ')') as voice,
    coalesce(cast(shared.telephonecontact.facsimile_value as varchar), '(' || shared.telephonecontact.facsimile_nilreason || ')') as facsimile,
    jsonb_agg(DISTINCT shared_timesheet_view_bjktwz.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_xegqqu.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_heajzo.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_heajzo.title AS varchar), '(' || organisation_organisationauthority_pt_heajzo.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_heajzo.href)) AS specialdateauthority
from shared.telephonecontact_pt 
inner join shared.telephonecontact on shared.telephonecontact_pt.telephonecontact_id = shared.telephonecontact.id
left join master_join master_join_kotyyn on shared.telephonecontact.id = master_join_kotyyn.source_id
left join shared.timesheet_view shared_timesheet_view_bjktwz on master_join_kotyyn.target_id = shared_timesheet_view_bjktwz.id
left join master_join master_join_nbcfcu on shared.telephonecontact.id = master_join_nbcfcu.source_id
left join notes.note_view notes_note_view_xegqqu on master_join_nbcfcu.target_id = notes_note_view_xegqqu.id
left join master_join master_join_innlvc on shared.telephonecontact.id = master_join_innlvc.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_heajzo on master_join_innlvc.target_id = organisation_organisationauthority_pt_heajzo.id
group by
    shared.telephonecontact_pt.id,
    shared.telephonecontact_pt.nilreason,
    shared.telephonecontact.voice_value,
    shared.telephonecontact.voice_nilreason,
    shared.telephonecontact.facsimile_value,
    shared.telephonecontact.facsimile_nilreason;
create index on shared.telephonecontact_view (id);
-- UnitAvailabilityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists organisation.unitavailability_view cascade;
create materialized view organisation.unitavailability_view as
select
    organisation.unitavailability_pt.id,
    organisation.unitavailability_pt.nilreason AS unitavailability_nilreason,
    coalesce(cast(organisation.unitavailability.operationalstatus_value as varchar), '(' || organisation.unitavailability.operationalstatus_nilreason || ')') as operationalstatus,
    jsonb_agg(DISTINCT shared_timesheet_view_wqczoh.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_nvjxom.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_aqauae.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_aqauae.title AS varchar), '(' || organisation_organisationauthority_pt_aqauae.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_aqauae.href)) AS specialdateauthority
from organisation.unitavailability_pt 
inner join organisation.unitavailability on organisation.unitavailability_pt.unitavailability_id = organisation.unitavailability.id
left join master_join master_join_xzsyge on organisation.unitavailability.id = master_join_xzsyge.source_id
left join shared.timesheet_view shared_timesheet_view_wqczoh on master_join_xzsyge.target_id = shared_timesheet_view_wqczoh.id
left join master_join master_join_jbyoay on organisation.unitavailability.id = master_join_jbyoay.source_id
left join notes.note_view notes_note_view_nvjxom on master_join_jbyoay.target_id = notes_note_view_nvjxom.id
left join master_join master_join_qpeygm on organisation.unitavailability.id = master_join_qpeygm.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_aqauae on master_join_qpeygm.target_id = organisation_organisationauthority_pt_aqauae.id
group by
    organisation.unitavailability_pt.id,
    organisation.unitavailability_pt.nilreason,
    organisation.unitavailability.operationalstatus_value,
    organisation.unitavailability.operationalstatus_nilreason;
create index on organisation.unitavailability_view (id);
-- VerticalStructureLightingStatusPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists obstacles.verticalstructurelightingstatus_view cascade;
create materialized view obstacles.verticalstructurelightingstatus_view as
select
    obstacles.verticalstructurelightingstatus_pt.id,
    obstacles.verticalstructurelightingstatus_pt.nilreason AS verticalstructurelightingstatus_nilreason,
    coalesce(cast(obstacles.verticalstructurelightingstatus.status_value as varchar), '(' || obstacles.verticalstructurelightingstatus.status_nilreason || ')') as status,
    jsonb_agg(DISTINCT shared_timesheet_view_ndzbun.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_ckxizn.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_mhaxqw.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_mhaxqw.title AS varchar), '(' || organisation_organisationauthority_pt_mhaxqw.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_mhaxqw.href)) AS specialdateauthority
from obstacles.verticalstructurelightingstatus_pt 
inner join obstacles.verticalstructurelightingstatus on obstacles.verticalstructurelightingstatus_pt.verticalstructurelightingstatus_id = obstacles.verticalstructurelightingstatus.id
left join master_join master_join_javyzu on obstacles.verticalstructurelightingstatus.id = master_join_javyzu.source_id
left join shared.timesheet_view shared_timesheet_view_ndzbun on master_join_javyzu.target_id = shared_timesheet_view_ndzbun.id
left join master_join master_join_pklqha on obstacles.verticalstructurelightingstatus.id = master_join_pklqha.source_id
left join notes.note_view notes_note_view_ckxizn on master_join_pklqha.target_id = notes_note_view_ckxizn.id
left join master_join master_join_mkyiue on obstacles.verticalstructurelightingstatus.id = master_join_mkyiue.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_mhaxqw on master_join_mkyiue.target_id = organisation_organisationauthority_pt_mhaxqw.id
group by
    obstacles.verticalstructurelightingstatus_pt.id,
    obstacles.verticalstructurelightingstatus_pt.nilreason,
    obstacles.verticalstructurelightingstatus.status_value,
    obstacles.verticalstructurelightingstatus.status_nilreason;
create index on obstacles.verticalstructurelightingstatus_view (id);
-- VerticalStructurePartPropertyType
-- ['geometry.elevatedcurve_view', 'geometry.elevatedpoint_view', 'shared.timesheet_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists obstacles.verticalstructurepart_view cascade;
create materialized view obstacles.verticalstructurepart_view as
select
    obstacles.verticalstructurepart_pt.id,
    obstacles.verticalstructurepart_pt.nilreason AS verticalstructurepart_nilreason,
    coalesce(cast(obstacles.verticalstructurepart.type_value as varchar), '(' || obstacles.verticalstructurepart.type_nilreason || ')') as type,
    coalesce(cast(obstacles.verticalstructurepart.constructionstatus_value as varchar), '(' || obstacles.verticalstructurepart.constructionstatus_nilreason || ')') as constructionstatus,
    coalesce(cast(obstacles.verticalstructurepart.markingpattern_value as varchar), '(' || obstacles.verticalstructurepart.markingpattern_nilreason || ')') as markingpattern,
    coalesce(cast(obstacles.verticalstructurepart.markingfirstcolour_value as varchar), '(' || obstacles.verticalstructurepart.markingfirstcolour_nilreason || ')') as markingfirstcolour,
    coalesce(cast(obstacles.verticalstructurepart.markingsecondcolour_value as varchar), '(' || obstacles.verticalstructurepart.markingsecondcolour_nilreason || ')') as markingsecondcolour,
    coalesce(cast(obstacles.verticalstructurepart.mobile_value as varchar), '(' || obstacles.verticalstructurepart.mobile_nilreason || ')') as mobile,
    coalesce(cast(obstacles.verticalstructurepart.frangible_value as varchar), '(' || obstacles.verticalstructurepart.frangible_nilreason || ')') as frangible,
    coalesce(cast(obstacles.verticalstructurepart.visiblematerial_value as varchar), '(' || obstacles.verticalstructurepart.visiblematerial_nilreason || ')') as visiblematerial,
    coalesce(cast(obstacles.verticalstructurepart.designator_value as varchar), '(' || obstacles.verticalstructurepart.designator_nilreason || ')') as designator,
    coalesce(cast(obstacles.verticalstructurepart.verticalextent_value as varchar) || ' ' || obstacles.verticalstructurepart.verticalextent_uom, '(' || obstacles.verticalstructurepart.verticalextent_nilreason || ')') as verticalextent,
    coalesce(cast(obstacles.verticalstructurepart.verticalextentaccuracy_value as varchar) || ' ' || obstacles.verticalstructurepart.verticalextentaccuracy_uom, '(' || obstacles.verticalstructurepart.verticalextentaccuracy_nilreason || ')') as verticalextentaccuracy,
    geometry_elevatedpoint_view_yofrns.geom AS horizontalprojectionlocation_geom,
    ST_X(geometry_elevatedpoint_view_yofrns.geom) AS horizontalprojectionlocation_longitude,
    ST_Y(geometry_elevatedpoint_view_yofrns.geom) AS horizontalprojectionlocation_latitude,
    geometry_elevatedpoint_view_yofrns.elevation AS horizontalprojectionlocation_elevation,
    geometry_elevatedpoint_view_yofrns.geoidUndulation AS horizontalprojectionlocation_geoidundulation,
    geometry_elevatedpoint_view_yofrns.verticalDatum AS horizontalprojectionlocation_verticaldatum,
    geometry_elevatedpoint_view_yofrns.verticalAccuracy AS horizontalprojectionlocation_verticalaccuracy,
    geometry_elevatedpoint_view_yofrns.horizontalAccuracy AS horizontalprojectionlocation_horizontalaccuracy,
    geometry_elevatedcurve_view_vbeqgm.geom AS horizontalprojectionlinearextent_geom,
    geometry_elevatedcurve_view_vbeqgm.elevation AS horizontalprojectionlinearextent_elevation,
    geometry_elevatedcurve_view_vbeqgm.geoidUndulation AS horizontalprojectionlinearextent_geoidundulation,
    geometry_elevatedcurve_view_vbeqgm.verticalDatum AS horizontalprojectionlinearextent_verticaldatum,
    geometry_elevatedcurve_view_vbeqgm.verticalAccuracy AS horizontalprojectionlinearextent_verticalaccuracy,
    geometry_elevatedcurve_view_vbeqgm.horizontalAccuracy AS horizontalprojectionlinearextent_horizontalaccuracy,
    geometry_elevatedsurface_view_afatbc.geom AS horizontalprojectionsurfaceextent_geom,
    geometry_elevatedsurface_view_afatbc.elevation AS horizontalprojectionsurfaceextent_elevation,
    geometry_elevatedsurface_view_afatbc.geoidUndulation AS horizontalprojectionsurfaceextent_geoidundulation,
    geometry_elevatedsurface_view_afatbc.verticalDatum AS horizontalprojectionsurfaceextent_verticaldatum,
    geometry_elevatedsurface_view_afatbc.verticalAccuracy AS horizontalprojectionsurfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_afatbc.horizontalAccuracy AS horizontalprojectionsurfaceextent_horizontalaccuracy,
    jsonb_agg(DISTINCT shared_timesheet_view_btsaac.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_bfudsb.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_kxvsra.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_kxvsra.title AS varchar), '(' || organisation_organisationauthority_pt_kxvsra.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_kxvsra.href)) AS specialdateauthority,
    jsonb_agg(DISTINCT shared_lightelement_pt_lxnine.id) AS lighting
from obstacles.verticalstructurepart_pt 
inner join obstacles.verticalstructurepart on obstacles.verticalstructurepart_pt.verticalstructurepart_id = obstacles.verticalstructurepart.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_yofrns on obstacles.verticalstructurepart.horizontalprojection_location_id = geometry_elevatedpoint_view_yofrns.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_vbeqgm on obstacles.verticalstructurepart.horizontalprojection_linearextent_id = geometry_elevatedcurve_view_vbeqgm.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_afatbc on obstacles.verticalstructurepart.horizontalprojection_surfaceextent_id = geometry_elevatedsurface_view_afatbc.id
left join master_join master_join_obblcc on obstacles.verticalstructurepart.id = master_join_obblcc.source_id
left join shared.timesheet_view shared_timesheet_view_btsaac on master_join_obblcc.target_id = shared_timesheet_view_btsaac.id
left join master_join master_join_ibqffq on obstacles.verticalstructurepart.id = master_join_ibqffq.source_id
left join notes.note_view notes_note_view_bfudsb on master_join_ibqffq.target_id = notes_note_view_bfudsb.id
left join master_join master_join_kbcfpn on obstacles.verticalstructurepart.id = master_join_kbcfpn.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_kxvsra on master_join_kbcfpn.target_id = organisation_organisationauthority_pt_kxvsra.id
left join master_join master_join_kkncnx on obstacles.verticalstructurepart.id = master_join_kkncnx.source_id
left join shared.lightelement_pt shared_lightelement_pt_lxnine on master_join_kkncnx.target_id = shared_lightelement_pt_lxnine.id
group by
    obstacles.verticalstructurepart_pt.id,
    obstacles.verticalstructurepart_pt.nilreason,
    obstacles.verticalstructurepart.type_value,
    obstacles.verticalstructurepart.type_nilreason,
    obstacles.verticalstructurepart.constructionstatus_value,
    obstacles.verticalstructurepart.constructionstatus_nilreason,
    obstacles.verticalstructurepart.markingpattern_value,
    obstacles.verticalstructurepart.markingpattern_nilreason,
    obstacles.verticalstructurepart.markingfirstcolour_value,
    obstacles.verticalstructurepart.markingfirstcolour_nilreason,
    obstacles.verticalstructurepart.markingsecondcolour_value,
    obstacles.verticalstructurepart.markingsecondcolour_nilreason,
    obstacles.verticalstructurepart.mobile_value,
    obstacles.verticalstructurepart.mobile_nilreason,
    obstacles.verticalstructurepart.frangible_value,
    obstacles.verticalstructurepart.frangible_nilreason,
    obstacles.verticalstructurepart.visiblematerial_value,
    obstacles.verticalstructurepart.visiblematerial_nilreason,
    obstacles.verticalstructurepart.designator_value,
    obstacles.verticalstructurepart.designator_nilreason,
    obstacles.verticalstructurepart.verticalextent_value,
    obstacles.verticalstructurepart.verticalextent_uom,
    obstacles.verticalstructurepart.verticalextent_nilreason,
    obstacles.verticalstructurepart.verticalextentaccuracy_value,
    obstacles.verticalstructurepart.verticalextentaccuracy_uom,
    obstacles.verticalstructurepart.verticalextentaccuracy_nilreason,
    geometry_elevatedpoint_view_yofrns.geom,
    geometry_elevatedpoint_view_yofrns.elevation,
    geometry_elevatedpoint_view_yofrns.geoidUndulation,
    geometry_elevatedpoint_view_yofrns.verticalDatum,
    geometry_elevatedpoint_view_yofrns.verticalAccuracy,
    geometry_elevatedpoint_view_yofrns.horizontalAccuracy,
    geometry_elevatedcurve_view_vbeqgm.geom,
    geometry_elevatedcurve_view_vbeqgm.elevation,
    geometry_elevatedcurve_view_vbeqgm.geoidUndulation,
    geometry_elevatedcurve_view_vbeqgm.verticalDatum,
    geometry_elevatedcurve_view_vbeqgm.verticalAccuracy,
    geometry_elevatedcurve_view_vbeqgm.horizontalAccuracy,
    geometry_elevatedsurface_view_afatbc.geom,
    geometry_elevatedsurface_view_afatbc.elevation,
    geometry_elevatedsurface_view_afatbc.geoidUndulation,
    geometry_elevatedsurface_view_afatbc.verticalDatum,
    geometry_elevatedsurface_view_afatbc.verticalAccuracy,
    geometry_elevatedsurface_view_afatbc.horizontalAccuracy;
create index on obstacles.verticalstructurepart_view (id);
-- WorkareaActivityPropertyType
-- ['shared.timesheet_view', 'notes.note_view']
drop materialized view if exists airport_heliport.workareaactivity_view cascade;
create materialized view airport_heliport.workareaactivity_view as
select
    airport_heliport.workareaactivity_pt.id,
    airport_heliport.workareaactivity_pt.nilreason AS workareaactivity_nilreason,
    coalesce(cast(airport_heliport.workareaactivity.isactive_value as varchar), '(' || airport_heliport.workareaactivity.isactive_nilreason || ')') as isactive,
    jsonb_agg(DISTINCT shared_timesheet_view_nqqaos.*) AS timeinterval,
    jsonb_agg(DISTINCT notes_note_view_hsveng.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_muauoe.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_muauoe.title AS varchar), '(' || organisation_organisationauthority_pt_muauoe.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_muauoe.href)) AS specialdateauthority
from airport_heliport.workareaactivity_pt 
inner join airport_heliport.workareaactivity on airport_heliport.workareaactivity_pt.workareaactivity_id = airport_heliport.workareaactivity.id
left join master_join master_join_dbeeex on airport_heliport.workareaactivity.id = master_join_dbeeex.source_id
left join shared.timesheet_view shared_timesheet_view_nqqaos on master_join_dbeeex.target_id = shared_timesheet_view_nqqaos.id
left join master_join master_join_cdpqnf on airport_heliport.workareaactivity.id = master_join_cdpqnf.source_id
left join notes.note_view notes_note_view_hsveng on master_join_cdpqnf.target_id = notes_note_view_hsveng.id
left join master_join master_join_vxaaaa on airport_heliport.workareaactivity.id = master_join_vxaaaa.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_muauoe on master_join_vxaaaa.target_id = organisation_organisationauthority_pt_muauoe.id
group by
    airport_heliport.workareaactivity_pt.id,
    airport_heliport.workareaactivity_pt.nilreason,
    airport_heliport.workareaactivity.isactive_value,
    airport_heliport.workareaactivity.isactive_nilreason;
create index on airport_heliport.workareaactivity_view (id);
-- ContactInformationPropertyType
-- ['shared.postaladdress_view', 'shared.onlinecontact_view', 'notes.note_view', 'shared.telephonecontact_view']
-- Snowflake SQL : ContactInformationPropertyType 

DROP MATERIALIZED VIEW IF EXISTS shared.contactinformation_view CASCADE;

CREATE MATERIALIZED VIEW shared.contactinformation_view AS
SELECT 
0 AS id;
-- AirportHeliportUsagePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists airport_heliport.airportheliportusage_view cascade;
create materialized view airport_heliport.airportheliportusage_view as
select
    airport_heliport.airportheliportusage_pt.id,
    airport_heliport.airportheliportusage_pt.nilreason AS airportheliportusage_nilreason,
    coalesce(cast(airport_heliport.airportheliportusage.type_value as varchar), '(' || airport_heliport.airportheliportusage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.airportheliportusage.operation_value as varchar), '(' || airport_heliport.airportheliportusage.operation_nilreason || ')') as operation,
    coalesce(cast(airport_heliport.airportheliportusage.priorpermission_value as varchar) || ' ' || airport_heliport.airportheliportusage.priorpermission_uom, '(' || airport_heliport.airportheliportusage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_fruxib.id AS selection,
    jsonb_agg(DISTINCT notes_note_view_luvxar.*) AS annotation
from airport_heliport.airportheliportusage_pt 
inner join airport_heliport.airportheliportusage on airport_heliport.airportheliportusage_pt.airportheliportusage_id = airport_heliport.airportheliportusage.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_fruxib on airport_heliport.airportheliportusage.selection_id = airport_heliport_conditioncombination_pt_fruxib.id
left join master_join master_join_zsohcz on airport_heliport.airportheliportusage.id = master_join_zsohcz.source_id
left join shared.contactinformation_view shared_contactinformation_view_xtrpoe on master_join_zsohcz.target_id = shared_contactinformation_view_xtrpoe.id
left join master_join master_join_uzfbmf on airport_heliport.airportheliportusage.id = master_join_uzfbmf.source_id
left join notes.note_view notes_note_view_luvxar on master_join_uzfbmf.target_id = notes_note_view_luvxar.id
group by
    airport_heliport.airportheliportusage_pt.id,
    airport_heliport.airportheliportusage_pt.nilreason,
    airport_heliport.airportheliportusage.type_value,
    airport_heliport.airportheliportusage.type_nilreason,
    airport_heliport.airportheliportusage.operation_value,
    airport_heliport.airportheliportusage.operation_nilreason,
    airport_heliport.airportheliportusage.priorpermission_value,
    airport_heliport.airportheliportusage.priorpermission_uom,
    airport_heliport.airportheliportusage.priorpermission_nilreason,
    airport_heliport_conditioncombination_pt_fruxib.id;
create index on airport_heliport.airportheliportusage_view (id);
-- ApronAreaUsagePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists airport_heliport.apronareausage_view cascade;
create materialized view airport_heliport.apronareausage_view as
select
    airport_heliport.apronareausage_pt.id,
    airport_heliport.apronareausage_pt.nilreason AS apronareausage_nilreason,
    coalesce(cast(airport_heliport.apronareausage.type_value as varchar), '(' || airport_heliport.apronareausage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.apronareausage.priorpermission_value as varchar) || ' ' || airport_heliport.apronareausage.priorpermission_uom, '(' || airport_heliport.apronareausage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_jppadn.id AS selection,
    jsonb_agg(DISTINCT notes_note_view_qbqifh.*) AS annotation
from airport_heliport.apronareausage_pt 
inner join airport_heliport.apronareausage on airport_heliport.apronareausage_pt.apronareausage_id = airport_heliport.apronareausage.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_jppadn on airport_heliport.apronareausage.selection_id = airport_heliport_conditioncombination_pt_jppadn.id
left join master_join master_join_ldqfww on airport_heliport.apronareausage.id = master_join_ldqfww.source_id
left join shared.contactinformation_view shared_contactinformation_view_pvbqiu on master_join_ldqfww.target_id = shared_contactinformation_view_pvbqiu.id
left join master_join master_join_eqvjiy on airport_heliport.apronareausage.id = master_join_eqvjiy.source_id
left join notes.note_view notes_note_view_qbqifh on master_join_eqvjiy.target_id = notes_note_view_qbqifh.id
group by
    airport_heliport.apronareausage_pt.id,
    airport_heliport.apronareausage_pt.nilreason,
    airport_heliport.apronareausage.type_value,
    airport_heliport.apronareausage.type_nilreason,
    airport_heliport.apronareausage.priorpermission_value,
    airport_heliport.apronareausage.priorpermission_uom,
    airport_heliport.apronareausage.priorpermission_nilreason,
    airport_heliport_conditioncombination_pt_jppadn.id;
create index on airport_heliport.apronareausage_view (id);
-- FlightRestrictionRoutePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists routes.flightrestrictionroute_view cascade;
create materialized view routes.flightrestrictionroute_view as
select
    routes.flightrestrictionroute_pt.id,
    routes.flightrestrictionroute_pt.nilreason AS flightrestrictionroute_nilreason,
    coalesce(cast(routes.flightrestrictionroute.priorpermission_value as varchar), '(' || routes.flightrestrictionroute.priorpermission_nilreason || ')') as priorpermission,
    jsonb_agg(DISTINCT routes_flightroutingelement_pt_kvupiz.id) AS routeelement,
    jsonb_agg(DISTINCT notes_note_view_gtrgbz.*) AS annotation
from routes.flightrestrictionroute_pt 
inner join routes.flightrestrictionroute on routes.flightrestrictionroute_pt.flightrestrictionroute_id = routes.flightrestrictionroute.id
left join master_join master_join_bynzeu on routes.flightrestrictionroute.id = master_join_bynzeu.source_id
left join routes.flightroutingelement_pt routes_flightroutingelement_pt_kvupiz on master_join_bynzeu.target_id = routes_flightroutingelement_pt_kvupiz.id
left join master_join master_join_pwlcny on routes.flightrestrictionroute.id = master_join_pwlcny.source_id
left join shared.contactinformation_view shared_contactinformation_view_iyjzqb on master_join_pwlcny.target_id = shared_contactinformation_view_iyjzqb.id
left join master_join master_join_xwachm on routes.flightrestrictionroute.id = master_join_xwachm.source_id
left join notes.note_view notes_note_view_gtrgbz on master_join_xwachm.target_id = notes_note_view_gtrgbz.id
group by
    routes.flightrestrictionroute_pt.id,
    routes.flightrestrictionroute_pt.nilreason,
    routes.flightrestrictionroute.priorpermission_value,
    routes.flightrestrictionroute.priorpermission_nilreason;
create index on routes.flightrestrictionroute_view (id);
-- ManoeuvringAreaUsagePropertyType
-- ['notes.note_view', 'shared.contactinformation_view']
drop materialized view if exists airport_heliport.manoeuvringareausage_view cascade;
create materialized view airport_heliport.manoeuvringareausage_view as
select
    airport_heliport.manoeuvringareausage_pt.id,
    airport_heliport.manoeuvringareausage_pt.nilreason AS manoeuvringareausage_nilreason,
    coalesce(cast(airport_heliport.manoeuvringareausage.type_value as varchar), '(' || airport_heliport.manoeuvringareausage.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.manoeuvringareausage.operation_value as varchar), '(' || airport_heliport.manoeuvringareausage.operation_nilreason || ')') as operation,
    coalesce(cast(airport_heliport.manoeuvringareausage.priorpermission_value as varchar) || ' ' || airport_heliport.manoeuvringareausage.priorpermission_uom, '(' || airport_heliport.manoeuvringareausage.priorpermission_nilreason || ')') as priorpermission,
    airport_heliport_conditioncombination_pt_kunyjf.id AS selection,
    jsonb_agg(DISTINCT notes_note_view_nfaloc.*) AS annotation
from airport_heliport.manoeuvringareausage_pt 
inner join airport_heliport.manoeuvringareausage on airport_heliport.manoeuvringareausage_pt.manoeuvringareausage_id = airport_heliport.manoeuvringareausage.id
left join airport_heliport.conditioncombination_pt airport_heliport_conditioncombination_pt_kunyjf on airport_heliport.manoeuvringareausage.selection_id = airport_heliport_conditioncombination_pt_kunyjf.id
left join master_join master_join_cvadev on airport_heliport.manoeuvringareausage.id = master_join_cvadev.source_id
left join shared.contactinformation_view shared_contactinformation_view_uwqhwi on master_join_cvadev.target_id = shared_contactinformation_view_uwqhwi.id
left join master_join master_join_jqnhpr on airport_heliport.manoeuvringareausage.id = master_join_jqnhpr.source_id
left join notes.note_view notes_note_view_nfaloc on master_join_jqnhpr.target_id = notes_note_view_nfaloc.id
group by
    airport_heliport.manoeuvringareausage_pt.id,
    airport_heliport.manoeuvringareausage_pt.nilreason,
    airport_heliport.manoeuvringareausage.type_value,
    airport_heliport.manoeuvringareausage.type_nilreason,
    airport_heliport.manoeuvringareausage.operation_value,
    airport_heliport.manoeuvringareausage.operation_nilreason,
    airport_heliport.manoeuvringareausage.priorpermission_value,
    airport_heliport.manoeuvringareausage.priorpermission_uom,
    airport_heliport.manoeuvringareausage.priorpermission_nilreason,
    airport_heliport_conditioncombination_pt_kunyjf.id;
create index on airport_heliport.manoeuvringareausage_view (id);
-- AerialRefuellingTimeSliceType
-- ['aerial_refuelling.aerialrefuellingtrack_view', 'aerial_refuelling.aerialrefuellinganchor_view', 'aerial_refuelling.authorityforaerialrefuelling_view', 'routes.routeavailability_view', 'notes.note_view']
drop materialized view if exists aerial_refuelling.aerialrefuelling_view cascade;
create materialized view aerial_refuelling.aerialrefuelling_view as
select distinct on (aerialrefuelling.identifier,aerialrefuelling_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    aerial_refuelling.aerialrefuelling.id,
    aerial_refuelling.aerialrefuelling_ts.id as ts_id,
    aerial_refuelling.aerialrefuelling_tsp.id as tsp_id,
    aerial_refuelling.aerialrefuelling.identifier,
    aerial_refuelling.aerialrefuelling_ts.interpretation,
    aerial_refuelling.aerialrefuelling_ts.sequence_number,
    aerial_refuelling.aerialrefuelling_ts.correction_number,
    aerial_refuelling.aerialrefuelling_ts.valid_time_begin,
    aerial_refuelling.aerialrefuelling_ts.valid_time_end,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_begin,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_end,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatorprefix_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatorprefix_nilreason || ')') as designatorprefix,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatornumber_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatornumber_nilreason || ')') as designatornumber,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatorsuffix_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatorsuffix_nilreason || ')') as designatorsuffix,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.designatordirection_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.designatordirection_nilreason || ')') as designatordirection,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.name_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.name_nilreason || ')') as name,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.type_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.type_nilreason || ')') as type,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_nilreason || ')') as radarbeaconsetting,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_nilreason || ')') as xbandradarsetting,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.tankerchannel_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.tankerchannel_nilreason || ')') as tankerchannel,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.receiverchannel_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.receiverchannel_nilreason || ')') as receiverchannel,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.helicopterroute_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.helicopterroute_nilreason || ')') as helicopterroute,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.specialrefuelling_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.specialrefuelling_nilreason || ')') as specialrefuelling,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_nilreason || ')') as bidirectionaluse,
    coalesce(cast(aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_value as varchar), '(' || aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_nilreason || ')') as reversedirectionturn,
    coalesce(cast(aerial_refuelling_aerialrefuelling_pt_pnfaiq.title as varchar), '(' || aerial_refuelling_aerialrefuelling_pt_pnfaiq.nilreason[1] || ')') AS oppositetrack,
    aerial_refuelling_aerialrefuelling_pt_pnfaiq.href AS oppositetrack_href,
    jsonb_agg(routes_routeavailability_view_upwczc.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_qpgsco.id,
    'title', coalesce(cast(airspace_airspace_pt_qpgsco.title AS varchar), '(' || airspace_airspace_pt_qpgsco.nilreason[1] || ')'),
    'href', airspace_airspace_pt_qpgsco.href)) AS protectingairspace,
    jsonb_agg(aerial_refuelling_aerialrefuellingtrack_view_lwrpcb.id) AS track,
    jsonb_agg(aerial_refuelling_aerialrefuellinganchor_view_zvnpys.id) AS anchor,
    jsonb_agg(aerial_refuelling_authorityforaerialrefuelling_view_teeoai.id) AS managingorganisation,
    jsonb_agg(DISTINCT notes_note_view_tiuyex.*) AS annotation
from aerial_refuelling.aerialrefuelling 
inner join master_join mj2 on aerial_refuelling.aerialrefuelling.id = mj2.source_id
inner join aerial_refuelling.aerialrefuelling_tsp on mj2.target_id = aerial_refuelling.aerialrefuelling_tsp.id
inner join aerial_refuelling.aerialrefuelling_ts on aerial_refuelling.aerialrefuelling_tsp.aerialrefuellingtimeslice_id = aerial_refuelling.aerialrefuelling_ts.id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_pnfaiq on aerial_refuelling.aerialrefuelling_ts.oppositetrack_id = aerial_refuelling_aerialrefuelling_pt_pnfaiq.id
left join master_join master_join_qhvpdw on aerial_refuelling.aerialrefuelling_ts.id = master_join_qhvpdw.source_id
left join routes.routeavailability_view routes_routeavailability_view_upwczc on master_join_qhvpdw.target_id = routes_routeavailability_view_upwczc.id
left join master_join master_join_czlaib on aerial_refuelling.aerialrefuelling_ts.id = master_join_czlaib.source_id
left join airspace.airspace_pt airspace_airspace_pt_qpgsco on master_join_czlaib.target_id = airspace_airspace_pt_qpgsco.id
left join master_join master_join_mcejtr on aerial_refuelling.aerialrefuelling_ts.id = master_join_mcejtr.source_id
left join aerial_refuelling.aerialrefuellingtrack_view aerial_refuelling_aerialrefuellingtrack_view_lwrpcb on master_join_mcejtr.target_id = aerial_refuelling_aerialrefuellingtrack_view_lwrpcb.id
left join master_join master_join_tahyiu on aerial_refuelling.aerialrefuelling_ts.id = master_join_tahyiu.source_id
left join aerial_refuelling.aerialrefuellinganchor_view aerial_refuelling_aerialrefuellinganchor_view_zvnpys on master_join_tahyiu.target_id = aerial_refuelling_aerialrefuellinganchor_view_zvnpys.id
left join master_join master_join_bviglp on aerial_refuelling.aerialrefuelling_ts.id = master_join_bviglp.source_id
left join aerial_refuelling.authorityforaerialrefuelling_view aerial_refuelling_authorityforaerialrefuelling_view_teeoai on master_join_bviglp.target_id = aerial_refuelling_authorityforaerialrefuelling_view_teeoai.id
left join master_join master_join_jinhhl on aerial_refuelling.aerialrefuelling_ts.id = master_join_jinhhl.source_id
left join notes.note_view notes_note_view_tiuyex on master_join_jinhhl.target_id = notes_note_view_tiuyex.id
where aerial_refuelling.aerialrefuelling.feature_status = 'APPROVED'
  and aerial_refuelling.aerialrefuelling_ts.feature_status = 'APPROVED'
group by
    aerial_refuelling.aerialrefuelling.id,
    aerial_refuelling.aerialrefuelling_ts.id,
    aerial_refuelling.aerialrefuelling_tsp.id,
    aerial_refuelling.aerialrefuelling.identifier,
    aerial_refuelling.aerialrefuelling_ts.interpretation,
    aerial_refuelling.aerialrefuelling_ts.sequence_number,
    aerial_refuelling.aerialrefuelling_ts.correction_number,
    aerial_refuelling.aerialrefuelling_ts.valid_time_begin,
    aerial_refuelling.aerialrefuelling_ts.valid_time_end,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_begin,
    aerial_refuelling.aerialrefuelling_ts.feature_lifetime_end,
    aerial_refuelling.aerialrefuelling_ts.designatorprefix_value,
    aerial_refuelling.aerialrefuelling_ts.designatorprefix_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatornumber_value,
    aerial_refuelling.aerialrefuelling_ts.designatornumber_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatorsuffix_value,
    aerial_refuelling.aerialrefuelling_ts.designatorsuffix_nilreason,
    aerial_refuelling.aerialrefuelling_ts.designatordirection_value,
    aerial_refuelling.aerialrefuelling_ts.designatordirection_nilreason,
    aerial_refuelling.aerialrefuelling_ts.name_value,
    aerial_refuelling.aerialrefuelling_ts.name_nilreason,
    aerial_refuelling.aerialrefuelling_ts.type_value,
    aerial_refuelling.aerialrefuelling_ts.type_nilreason,
    aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_value,
    aerial_refuelling.aerialrefuelling_ts.radarbeaconsetting_nilreason,
    aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_value,
    aerial_refuelling.aerialrefuelling_ts.xbandradarsetting_nilreason,
    aerial_refuelling.aerialrefuelling_ts.tankerchannel_value,
    aerial_refuelling.aerialrefuelling_ts.tankerchannel_nilreason,
    aerial_refuelling.aerialrefuelling_ts.receiverchannel_value,
    aerial_refuelling.aerialrefuelling_ts.receiverchannel_nilreason,
    aerial_refuelling.aerialrefuelling_ts.helicopterroute_value,
    aerial_refuelling.aerialrefuelling_ts.helicopterroute_nilreason,
    aerial_refuelling.aerialrefuelling_ts.specialrefuelling_value,
    aerial_refuelling.aerialrefuelling_ts.specialrefuelling_nilreason,
    aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_value,
    aerial_refuelling.aerialrefuelling_ts.bidirectionaluse_nilreason,
    aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_value,
    aerial_refuelling.aerialrefuelling_ts.reversedirectionturn_nilreason,
    aerial_refuelling_aerialrefuelling_pt_pnfaiq.title,
    aerial_refuelling_aerialrefuelling_pt_pnfaiq.nilreason[1],
    aerial_refuelling_aerialrefuelling_pt_pnfaiq.href
order by aerialrefuelling.identifier, aerialrefuelling_ts.sequence_number, aerialrefuelling_ts.correction_number DESC;
create index on aerial_refuelling.aerialrefuelling_view (id);
-- AeronauticalGroundLightTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.aeronauticalgroundlight_view cascade;
create materialized view navaids_points.aeronauticalgroundlight_view as
select distinct on (aeronauticalgroundlight.identifier,aeronauticalgroundlight_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.aeronauticalgroundlight.id,
    navaids_points.aeronauticalgroundlight_ts.id as ts_id,
    navaids_points.aeronauticalgroundlight_tsp.id as tsp_id,
    navaids_points.aeronauticalgroundlight.identifier,
    navaids_points.aeronauticalgroundlight_ts.interpretation,
    navaids_points.aeronauticalgroundlight_ts.sequence_number,
    navaids_points.aeronauticalgroundlight_ts.correction_number,
    navaids_points.aeronauticalgroundlight_ts.valid_time_begin,
    navaids_points.aeronauticalgroundlight_ts.valid_time_end,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_begin,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.name_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.type_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.colour_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.colour_nilreason || ')') as colour,
    coalesce(cast(navaids_points.aeronauticalgroundlight_ts.flashing_value as varchar), '(' || navaids_points.aeronauticalgroundlight_ts.flashing_nilreason || ')') as flashing,
    coalesce(cast(obstacles_verticalstructure_pt_rypkdu.title as varchar), '(' || obstacles_verticalstructure_pt_rypkdu.nilreason[1] || ')') AS structurebeacon,
    obstacles_verticalstructure_pt_rypkdu.href AS structurebeacon_href,
    coalesce(cast(airport_heliport_airportheliport_pt_atjjvx.title as varchar), '(' || airport_heliport_airportheliport_pt_atjjvx.nilreason[1] || ')') AS aerodromebeacon,
    airport_heliport_airportheliport_pt_atjjvx.href AS aerodromebeacon_href,
    geometry_elevatedpoint_view_cxknlf.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_cxknlf.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_cxknlf.geom) AS location_latitude,
    geometry_elevatedpoint_view_cxknlf.elevation AS location_elevation,
    geometry_elevatedpoint_view_cxknlf.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_cxknlf.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_cxknlf.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_cxknlf.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_swgxcf.*) AS annotation
from navaids_points.aeronauticalgroundlight 
inner join master_join mj2 on navaids_points.aeronauticalgroundlight.id = mj2.source_id
inner join navaids_points.aeronauticalgroundlight_tsp on mj2.target_id = navaids_points.aeronauticalgroundlight_tsp.id
inner join navaids_points.aeronauticalgroundlight_ts on navaids_points.aeronauticalgroundlight_tsp.aeronauticalgroundlighttimeslice_id = navaids_points.aeronauticalgroundlight_ts.id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_rypkdu on navaids_points.aeronauticalgroundlight_ts.structurebeacon_id = obstacles_verticalstructure_pt_rypkdu.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_atjjvx on navaids_points.aeronauticalgroundlight_ts.aerodromebeacon_id = airport_heliport_airportheliport_pt_atjjvx.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_cxknlf on navaids_points.aeronauticalgroundlight_ts.location_id = geometry_elevatedpoint_view_cxknlf.id
left join master_join master_join_korufd on navaids_points.aeronauticalgroundlight_ts.id = master_join_korufd.source_id
left join notes.note_view notes_note_view_swgxcf on master_join_korufd.target_id = notes_note_view_swgxcf.id
where navaids_points.aeronauticalgroundlight.feature_status = 'APPROVED'
  and navaids_points.aeronauticalgroundlight_ts.feature_status = 'APPROVED'
group by
    navaids_points.aeronauticalgroundlight.id,
    navaids_points.aeronauticalgroundlight_ts.id,
    navaids_points.aeronauticalgroundlight_tsp.id,
    navaids_points.aeronauticalgroundlight.identifier,
    navaids_points.aeronauticalgroundlight_ts.interpretation,
    navaids_points.aeronauticalgroundlight_ts.sequence_number,
    navaids_points.aeronauticalgroundlight_ts.correction_number,
    navaids_points.aeronauticalgroundlight_ts.valid_time_begin,
    navaids_points.aeronauticalgroundlight_ts.valid_time_end,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_begin,
    navaids_points.aeronauticalgroundlight_ts.feature_lifetime_end,
    navaids_points.aeronauticalgroundlight_ts.name_value,
    navaids_points.aeronauticalgroundlight_ts.name_nilreason,
    navaids_points.aeronauticalgroundlight_ts.type_value,
    navaids_points.aeronauticalgroundlight_ts.type_nilreason,
    navaids_points.aeronauticalgroundlight_ts.colour_value,
    navaids_points.aeronauticalgroundlight_ts.colour_nilreason,
    navaids_points.aeronauticalgroundlight_ts.flashing_value,
    navaids_points.aeronauticalgroundlight_ts.flashing_nilreason,
    obstacles_verticalstructure_pt_rypkdu.title,
    obstacles_verticalstructure_pt_rypkdu.nilreason[1],
    obstacles_verticalstructure_pt_rypkdu.href,
    airport_heliport_airportheliport_pt_atjjvx.title,
    airport_heliport_airportheliport_pt_atjjvx.nilreason[1],
    airport_heliport_airportheliport_pt_atjjvx.href,
    geometry_elevatedpoint_view_cxknlf.geom,
    geometry_elevatedpoint_view_cxknlf.elevation,
    geometry_elevatedpoint_view_cxknlf.geoidUndulation,
    geometry_elevatedpoint_view_cxknlf.verticalDatum,
    geometry_elevatedpoint_view_cxknlf.verticalAccuracy,
    geometry_elevatedpoint_view_cxknlf.horizontalAccuracy
order by aeronauticalgroundlight.identifier, aeronauticalgroundlight_ts.sequence_number, aeronauticalgroundlight_ts.correction_number DESC;
create index on navaids_points.aeronauticalgroundlight_view (id);
-- AircraftGroundServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.aircraftgroundservice_view cascade;
create materialized view service.aircraftgroundservice_view as
select distinct on (aircraftgroundservice.identifier,aircraftgroundservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.aircraftgroundservice.id,
    service.aircraftgroundservice_ts.id as ts_id,
    service.aircraftgroundservice_tsp.id as tsp_id,
    service.aircraftgroundservice.identifier,
    service.aircraftgroundservice_ts.interpretation,
    service.aircraftgroundservice_ts.sequence_number,
    service.aircraftgroundservice_ts.correction_number,
    service.aircraftgroundservice_ts.valid_time_begin,
    service.aircraftgroundservice_ts.valid_time_end,
    service.aircraftgroundservice_ts.feature_lifetime_begin,
    service.aircraftgroundservice_ts.feature_lifetime_end,
    coalesce(cast(service.aircraftgroundservice_ts.flightoperations_value as varchar), '(' || service.aircraftgroundservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.aircraftgroundservice_ts.rank_value as varchar), '(' || service.aircraftgroundservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.aircraftgroundservice_ts.complianticao_value as varchar), '(' || service.aircraftgroundservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.aircraftgroundservice_ts.name_value as varchar), '(' || service.aircraftgroundservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.aircraftgroundservice_ts.type_value as varchar), '(' || service.aircraftgroundservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_xzvzbp.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_xzvzbp.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_xzvzbp.geom) AS location_latitude,
    geometry_elevatedpoint_view_xzvzbp.elevation AS location_elevation,
    geometry_elevatedpoint_view_xzvzbp.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_xzvzbp.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_xzvzbp.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_xzvzbp.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_ddhhmz.title as varchar), '(' || organisation_unit_pt_ddhhmz.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_ddhhmz.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_xbyxuo.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_xyfstw.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_xyfstw.title AS varchar), '(' || service_radiocommunicationchannel_pt_xyfstw.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_xyfstw.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_armfvn.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_xsjgqj.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_pyeldz.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_pyeldz.title AS varchar), '(' || airport_heliport_airportheliport_pt_pyeldz.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_pyeldz.href)) AS airportheliport
from service.aircraftgroundservice 
inner join master_join mj2 on service.aircraftgroundservice.id = mj2.source_id
inner join service.aircraftgroundservice_tsp on mj2.target_id = service.aircraftgroundservice_tsp.id
inner join service.aircraftgroundservice_ts on service.aircraftgroundservice_tsp.aircraftgroundservicetimeslice_id = service.aircraftgroundservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_xzvzbp on service.aircraftgroundservice_ts.location_id = geometry_elevatedpoint_view_xzvzbp.id
left join organisation.unit_pt organisation_unit_pt_ddhhmz on service.aircraftgroundservice_ts.serviceprovider_id = organisation_unit_pt_ddhhmz.id
left join master_join master_join_wlghvv on service.aircraftgroundservice_ts.id = master_join_wlghvv.source_id
left join service.callsigndetail_view service_callsigndetail_view_xbyxuo on master_join_wlghvv.target_id = service_callsigndetail_view_xbyxuo.id
left join master_join master_join_intejt on service.aircraftgroundservice_ts.id = master_join_intejt.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_xyfstw on master_join_intejt.target_id = service_radiocommunicationchannel_pt_xyfstw.id
left join master_join master_join_zgeyok on service.aircraftgroundservice_ts.id = master_join_zgeyok.source_id
left join shared.contactinformation_view shared_contactinformation_view_ojysbu on master_join_zgeyok.target_id = shared_contactinformation_view_ojysbu.id
left join master_join master_join_cnleci on service.aircraftgroundservice_ts.id = master_join_cnleci.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_armfvn on master_join_cnleci.target_id = service_serviceoperationalstatus_view_armfvn.id
left join master_join master_join_niyqwk on service.aircraftgroundservice_ts.id = master_join_niyqwk.source_id
left join notes.note_view notes_note_view_xsjgqj on master_join_niyqwk.target_id = notes_note_view_xsjgqj.id
left join master_join master_join_exqypn on service.aircraftgroundservice_ts.id = master_join_exqypn.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pyeldz on master_join_exqypn.target_id = airport_heliport_airportheliport_pt_pyeldz.id
where service.aircraftgroundservice.feature_status = 'APPROVED'
  and service.aircraftgroundservice_ts.feature_status = 'APPROVED'
group by
    service.aircraftgroundservice.id,
    service.aircraftgroundservice_ts.id,
    service.aircraftgroundservice_tsp.id,
    service.aircraftgroundservice.identifier,
    service.aircraftgroundservice_ts.interpretation,
    service.aircraftgroundservice_ts.sequence_number,
    service.aircraftgroundservice_ts.correction_number,
    service.aircraftgroundservice_ts.valid_time_begin,
    service.aircraftgroundservice_ts.valid_time_end,
    service.aircraftgroundservice_ts.feature_lifetime_begin,
    service.aircraftgroundservice_ts.feature_lifetime_end,
    service.aircraftgroundservice_ts.flightoperations_value,
    service.aircraftgroundservice_ts.flightoperations_nilreason,
    service.aircraftgroundservice_ts.rank_value,
    service.aircraftgroundservice_ts.rank_nilreason,
    service.aircraftgroundservice_ts.complianticao_value,
    service.aircraftgroundservice_ts.complianticao_nilreason,
    service.aircraftgroundservice_ts.name_value,
    service.aircraftgroundservice_ts.name_nilreason,
    service.aircraftgroundservice_ts.type_value,
    service.aircraftgroundservice_ts.type_nilreason,
    geometry_elevatedpoint_view_xzvzbp.geom,
    geometry_elevatedpoint_view_xzvzbp.elevation,
    geometry_elevatedpoint_view_xzvzbp.geoidUndulation,
    geometry_elevatedpoint_view_xzvzbp.verticalDatum,
    geometry_elevatedpoint_view_xzvzbp.verticalAccuracy,
    geometry_elevatedpoint_view_xzvzbp.horizontalAccuracy,
    organisation_unit_pt_ddhhmz.title,
    organisation_unit_pt_ddhhmz.nilreason[1],
    organisation_unit_pt_ddhhmz.href
order by aircraftgroundservice.identifier, aircraftgroundservice_ts.sequence_number, aircraftgroundservice_ts.correction_number DESC;
create index on service.aircraftgroundservice_view (id);
-- AircraftStandTimeSliceType
-- ['airport_heliport.aircraftstandcontamination_view', 'airport_heliport.apronareaavailability_view', 'geometry.elevatedpoint_view', 'airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.aircraftstand_view cascade;
create materialized view airport_heliport.aircraftstand_view as
select distinct on (aircraftstand.identifier,aircraftstand_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.aircraftstand.id,
    airport_heliport.aircraftstand_ts.id as ts_id,
    airport_heliport.aircraftstand_tsp.id as tsp_id,
    airport_heliport.aircraftstand.identifier,
    airport_heliport.aircraftstand_ts.interpretation,
    airport_heliport.aircraftstand_ts.sequence_number,
    airport_heliport.aircraftstand_ts.correction_number,
    airport_heliport.aircraftstand_ts.valid_time_begin,
    airport_heliport.aircraftstand_ts.valid_time_end,
    airport_heliport.aircraftstand_ts.feature_lifetime_begin,
    airport_heliport.aircraftstand_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.aircraftstand_ts.designator_value as varchar), '(' || airport_heliport.aircraftstand_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.aircraftstand_ts.type_value as varchar), '(' || airport_heliport.aircraftstand_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.aircraftstand_ts.visualdockingsystem_value as varchar), '(' || airport_heliport.aircraftstand_ts.visualdockingsystem_nilreason || ')') as visualdockingsystem,
    airport_heliport_surfacecharacteristics_view_zyaejj.id AS surfaceproperties,
    geometry_elevatedpoint_view_fkbfgb.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_fkbfgb.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_fkbfgb.geom) AS location_latitude,
    geometry_elevatedpoint_view_fkbfgb.elevation AS location_elevation,
    geometry_elevatedpoint_view_fkbfgb.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_fkbfgb.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_fkbfgb.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_fkbfgb.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(airport_heliport_apronelement_pt_dghahw.title as varchar), '(' || airport_heliport_apronelement_pt_dghahw.nilreason[1] || ')') AS apronlocation,
    airport_heliport_apronelement_pt_dghahw.href AS apronlocation_href,
    geometry_elevatedsurface_view_cbwegf.geom AS extent_geom,
    geometry_elevatedsurface_view_cbwegf.elevation AS extent_elevation,
    geometry_elevatedsurface_view_cbwegf.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_cbwegf.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_cbwegf.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_cbwegf.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(airport_heliport_aircraftstandcontamination_view_ydfbhw.id) AS contaminant,
    jsonb_agg(DISTINCT notes_note_view_ewgyqg.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_jkfsas.id) AS availability
from airport_heliport.aircraftstand 
inner join master_join mj2 on airport_heliport.aircraftstand.id = mj2.source_id
inner join airport_heliport.aircraftstand_tsp on mj2.target_id = airport_heliport.aircraftstand_tsp.id
inner join airport_heliport.aircraftstand_ts on airport_heliport.aircraftstand_tsp.aircraftstandtimeslice_id = airport_heliport.aircraftstand_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_zyaejj on airport_heliport.aircraftstand_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_zyaejj.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_fkbfgb on airport_heliport.aircraftstand_ts.location_id = geometry_elevatedpoint_view_fkbfgb.id
left join airport_heliport.apronelement_pt airport_heliport_apronelement_pt_dghahw on airport_heliport.aircraftstand_ts.apronlocation_id = airport_heliport_apronelement_pt_dghahw.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_cbwegf on airport_heliport.aircraftstand_ts.extent_id = geometry_elevatedsurface_view_cbwegf.id
left join master_join master_join_bescms on airport_heliport.aircraftstand_ts.id = master_join_bescms.source_id
left join airport_heliport.aircraftstandcontamination_view airport_heliport_aircraftstandcontamination_view_ydfbhw on master_join_bescms.target_id = airport_heliport_aircraftstandcontamination_view_ydfbhw.id
left join master_join master_join_prvlfy on airport_heliport.aircraftstand_ts.id = master_join_prvlfy.source_id
left join notes.note_view notes_note_view_ewgyqg on master_join_prvlfy.target_id = notes_note_view_ewgyqg.id
left join master_join master_join_svagnw on airport_heliport.aircraftstand_ts.id = master_join_svagnw.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_jkfsas on master_join_svagnw.target_id = airport_heliport_apronareaavailability_view_jkfsas.id
where airport_heliport.aircraftstand.feature_status = 'APPROVED'
  and airport_heliport.aircraftstand_ts.feature_status = 'APPROVED'
group by
    airport_heliport.aircraftstand.id,
    airport_heliport.aircraftstand_ts.id,
    airport_heliport.aircraftstand_tsp.id,
    airport_heliport.aircraftstand.identifier,
    airport_heliport.aircraftstand_ts.interpretation,
    airport_heliport.aircraftstand_ts.sequence_number,
    airport_heliport.aircraftstand_ts.correction_number,
    airport_heliport.aircraftstand_ts.valid_time_begin,
    airport_heliport.aircraftstand_ts.valid_time_end,
    airport_heliport.aircraftstand_ts.feature_lifetime_begin,
    airport_heliport.aircraftstand_ts.feature_lifetime_end,
    airport_heliport.aircraftstand_ts.designator_value,
    airport_heliport.aircraftstand_ts.designator_nilreason,
    airport_heliport.aircraftstand_ts.type_value,
    airport_heliport.aircraftstand_ts.type_nilreason,
    airport_heliport.aircraftstand_ts.visualdockingsystem_value,
    airport_heliport.aircraftstand_ts.visualdockingsystem_nilreason,
    airport_heliport_surfacecharacteristics_view_zyaejj.id,
    geometry_elevatedpoint_view_fkbfgb.geom,
    geometry_elevatedpoint_view_fkbfgb.elevation,
    geometry_elevatedpoint_view_fkbfgb.geoidUndulation,
    geometry_elevatedpoint_view_fkbfgb.verticalDatum,
    geometry_elevatedpoint_view_fkbfgb.verticalAccuracy,
    geometry_elevatedpoint_view_fkbfgb.horizontalAccuracy,
    airport_heliport_apronelement_pt_dghahw.title,
    airport_heliport_apronelement_pt_dghahw.nilreason[1],
    airport_heliport_apronelement_pt_dghahw.href,
    geometry_elevatedsurface_view_cbwegf.geom,
    geometry_elevatedsurface_view_cbwegf.elevation,
    geometry_elevatedsurface_view_cbwegf.geoidUndulation,
    geometry_elevatedsurface_view_cbwegf.verticalDatum,
    geometry_elevatedsurface_view_cbwegf.verticalAccuracy,
    geometry_elevatedsurface_view_cbwegf.horizontalAccuracy
order by aircraftstand.identifier, aircraftstand_ts.sequence_number, aircraftstand_ts.correction_number DESC;
create index on airport_heliport.aircraftstand_view (id);
-- AirportClearanceServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.airportclearanceservice_view cascade;
create materialized view service.airportclearanceservice_view as
select distinct on (airportclearanceservice.identifier,airportclearanceservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airportclearanceservice.id,
    service.airportclearanceservice_ts.id as ts_id,
    service.airportclearanceservice_tsp.id as tsp_id,
    service.airportclearanceservice.identifier,
    service.airportclearanceservice_ts.interpretation,
    service.airportclearanceservice_ts.sequence_number,
    service.airportclearanceservice_ts.correction_number,
    service.airportclearanceservice_ts.valid_time_begin,
    service.airportclearanceservice_ts.valid_time_end,
    service.airportclearanceservice_ts.feature_lifetime_begin,
    service.airportclearanceservice_ts.feature_lifetime_end,
    coalesce(cast(service.airportclearanceservice_ts.flightoperations_value as varchar), '(' || service.airportclearanceservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airportclearanceservice_ts.rank_value as varchar), '(' || service.airportclearanceservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airportclearanceservice_ts.complianticao_value as varchar), '(' || service.airportclearanceservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airportclearanceservice_ts.name_value as varchar), '(' || service.airportclearanceservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airportclearanceservice_ts.snowplan_value as varchar), '(' || service.airportclearanceservice_ts.snowplan_nilreason || ')') as snowplan,
    geometry_elevatedpoint_view_wksurm.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_wksurm.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_wksurm.geom) AS location_latitude,
    geometry_elevatedpoint_view_wksurm.elevation AS location_elevation,
    geometry_elevatedpoint_view_wksurm.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_wksurm.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_wksurm.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_wksurm.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_lnzkxm.title as varchar), '(' || organisation_unit_pt_lnzkxm.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_lnzkxm.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_ipkwii.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_icmccu.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_icmccu.title AS varchar), '(' || service_radiocommunicationchannel_pt_icmccu.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_icmccu.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_ojiflu.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_jqdglv.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_synyyf.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_synyyf.title AS varchar), '(' || airport_heliport_airportheliport_pt_synyyf.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_synyyf.href)) AS airportheliport
from service.airportclearanceservice 
inner join master_join mj2 on service.airportclearanceservice.id = mj2.source_id
inner join service.airportclearanceservice_tsp on mj2.target_id = service.airportclearanceservice_tsp.id
inner join service.airportclearanceservice_ts on service.airportclearanceservice_tsp.airportclearanceservicetimeslice_id = service.airportclearanceservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_wksurm on service.airportclearanceservice_ts.location_id = geometry_elevatedpoint_view_wksurm.id
left join organisation.unit_pt organisation_unit_pt_lnzkxm on service.airportclearanceservice_ts.serviceprovider_id = organisation_unit_pt_lnzkxm.id
left join master_join master_join_rwvtsr on service.airportclearanceservice_ts.id = master_join_rwvtsr.source_id
left join service.callsigndetail_view service_callsigndetail_view_ipkwii on master_join_rwvtsr.target_id = service_callsigndetail_view_ipkwii.id
left join master_join master_join_rypbfl on service.airportclearanceservice_ts.id = master_join_rypbfl.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_icmccu on master_join_rypbfl.target_id = service_radiocommunicationchannel_pt_icmccu.id
left join master_join master_join_fwiunq on service.airportclearanceservice_ts.id = master_join_fwiunq.source_id
left join shared.contactinformation_view shared_contactinformation_view_hhmqvl on master_join_fwiunq.target_id = shared_contactinformation_view_hhmqvl.id
left join master_join master_join_fxpnlq on service.airportclearanceservice_ts.id = master_join_fxpnlq.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_ojiflu on master_join_fxpnlq.target_id = service_serviceoperationalstatus_view_ojiflu.id
left join master_join master_join_zwqput on service.airportclearanceservice_ts.id = master_join_zwqput.source_id
left join notes.note_view notes_note_view_jqdglv on master_join_zwqput.target_id = notes_note_view_jqdglv.id
left join master_join master_join_hcbwpv on service.airportclearanceservice_ts.id = master_join_hcbwpv.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_synyyf on master_join_hcbwpv.target_id = airport_heliport_airportheliport_pt_synyyf.id
where service.airportclearanceservice.feature_status = 'APPROVED'
  and service.airportclearanceservice_ts.feature_status = 'APPROVED'
group by
    service.airportclearanceservice.id,
    service.airportclearanceservice_ts.id,
    service.airportclearanceservice_tsp.id,
    service.airportclearanceservice.identifier,
    service.airportclearanceservice_ts.interpretation,
    service.airportclearanceservice_ts.sequence_number,
    service.airportclearanceservice_ts.correction_number,
    service.airportclearanceservice_ts.valid_time_begin,
    service.airportclearanceservice_ts.valid_time_end,
    service.airportclearanceservice_ts.feature_lifetime_begin,
    service.airportclearanceservice_ts.feature_lifetime_end,
    service.airportclearanceservice_ts.flightoperations_value,
    service.airportclearanceservice_ts.flightoperations_nilreason,
    service.airportclearanceservice_ts.rank_value,
    service.airportclearanceservice_ts.rank_nilreason,
    service.airportclearanceservice_ts.complianticao_value,
    service.airportclearanceservice_ts.complianticao_nilreason,
    service.airportclearanceservice_ts.name_value,
    service.airportclearanceservice_ts.name_nilreason,
    service.airportclearanceservice_ts.snowplan_value,
    service.airportclearanceservice_ts.snowplan_nilreason,
    geometry_elevatedpoint_view_wksurm.geom,
    geometry_elevatedpoint_view_wksurm.elevation,
    geometry_elevatedpoint_view_wksurm.geoidUndulation,
    geometry_elevatedpoint_view_wksurm.verticalDatum,
    geometry_elevatedpoint_view_wksurm.verticalAccuracy,
    geometry_elevatedpoint_view_wksurm.horizontalAccuracy,
    organisation_unit_pt_lnzkxm.title,
    organisation_unit_pt_lnzkxm.nilreason[1],
    organisation_unit_pt_lnzkxm.href
order by airportclearanceservice.identifier, airportclearanceservice_ts.sequence_number, airportclearanceservice_ts.correction_number DESC;
create index on service.airportclearanceservice_view (id);
-- AirportHeliportCollocationTimeSliceType
-- ['notes.note_view']
drop materialized view if exists airport_heliport.airportheliportcollocation_view cascade;
create materialized view airport_heliport.airportheliportcollocation_view as
select distinct on (airportheliportcollocation.identifier,airportheliportcollocation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportheliportcollocation.id,
    airport_heliport.airportheliportcollocation_ts.id as ts_id,
    airport_heliport.airportheliportcollocation_tsp.id as tsp_id,
    airport_heliport.airportheliportcollocation.identifier,
    airport_heliport.airportheliportcollocation_ts.interpretation,
    airport_heliport.airportheliportcollocation_ts.sequence_number,
    airport_heliport.airportheliportcollocation_ts.correction_number,
    airport_heliport.airportheliportcollocation_ts.valid_time_begin,
    airport_heliport.airportheliportcollocation_ts.valid_time_end,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_begin,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airportheliportcollocation_ts.type_value as varchar), '(' || airport_heliport.airportheliportcollocation_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_airportheliport_pt_cryszk.title as varchar), '(' || airport_heliport_airportheliport_pt_cryszk.nilreason[1] || ')') AS hostairport,
    airport_heliport_airportheliport_pt_cryszk.href AS hostairport_href,
    coalesce(cast(airport_heliport_airportheliport_pt_cromul.title as varchar), '(' || airport_heliport_airportheliport_pt_cromul.nilreason[1] || ')') AS dependentairport,
    airport_heliport_airportheliport_pt_cromul.href AS dependentairport_href,
    jsonb_agg(DISTINCT notes_note_view_cgorzi.*) AS annotation
from airport_heliport.airportheliportcollocation 
inner join master_join mj2 on airport_heliport.airportheliportcollocation.id = mj2.source_id
inner join airport_heliport.airportheliportcollocation_tsp on mj2.target_id = airport_heliport.airportheliportcollocation_tsp.id
inner join airport_heliport.airportheliportcollocation_ts on airport_heliport.airportheliportcollocation_tsp.airportheliportcollocationtimeslice_id = airport_heliport.airportheliportcollocation_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cryszk on airport_heliport.airportheliportcollocation_ts.hostairport_id = airport_heliport_airportheliport_pt_cryszk.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cromul on airport_heliport.airportheliportcollocation_ts.dependentairport_id = airport_heliport_airportheliport_pt_cromul.id
left join master_join master_join_lrbnxj on airport_heliport.airportheliportcollocation_ts.id = master_join_lrbnxj.source_id
left join notes.note_view notes_note_view_cgorzi on master_join_lrbnxj.target_id = notes_note_view_cgorzi.id
where airport_heliport.airportheliportcollocation.feature_status = 'APPROVED'
  and airport_heliport.airportheliportcollocation_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportheliportcollocation.id,
    airport_heliport.airportheliportcollocation_ts.id,
    airport_heliport.airportheliportcollocation_tsp.id,
    airport_heliport.airportheliportcollocation.identifier,
    airport_heliport.airportheliportcollocation_ts.interpretation,
    airport_heliport.airportheliportcollocation_ts.sequence_number,
    airport_heliport.airportheliportcollocation_ts.correction_number,
    airport_heliport.airportheliportcollocation_ts.valid_time_begin,
    airport_heliport.airportheliportcollocation_ts.valid_time_end,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_begin,
    airport_heliport.airportheliportcollocation_ts.feature_lifetime_end,
    airport_heliport.airportheliportcollocation_ts.type_value,
    airport_heliport.airportheliportcollocation_ts.type_nilreason,
    airport_heliport_airportheliport_pt_cryszk.title,
    airport_heliport_airportheliport_pt_cryszk.nilreason[1],
    airport_heliport_airportheliport_pt_cryszk.href,
    airport_heliport_airportheliport_pt_cromul.title,
    airport_heliport_airportheliport_pt_cromul.nilreason[1],
    airport_heliport_airportheliport_pt_cromul.href
order by airportheliportcollocation.identifier, airportheliportcollocation_ts.sequence_number, airportheliportcollocation_ts.correction_number DESC;
create index on airport_heliport.airportheliportcollocation_view (id);
-- AirportHeliportTimeSliceType
-- ['airport_heliport.airportheliportavailability_view', 'airport_heliport.city_view', 'airport_heliport.airportheliportresponsibilityorganisation_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'geometry.elevatedsurface_view', 'airport_heliport.airportheliportcontamination_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airportheliport_view cascade;
create materialized view airport_heliport.airportheliport_view as
select distinct on (airportheliport.identifier,airportheliport_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportheliport.id,
    airport_heliport.airportheliport_ts.id as ts_id,
    airport_heliport.airportheliport_tsp.id as tsp_id,
    airport_heliport.airportheliport.identifier,
    airport_heliport.airportheliport_ts.interpretation,
    airport_heliport.airportheliport_ts.sequence_number,
    airport_heliport.airportheliport_ts.correction_number,
    airport_heliport.airportheliport_ts.valid_time_begin,
    airport_heliport.airportheliport_ts.valid_time_end,
    airport_heliport.airportheliport_ts.feature_lifetime_begin,
    airport_heliport.airportheliport_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airportheliport_ts.designator_value as varchar), '(' || airport_heliport.airportheliport_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.airportheliport_ts.name_value as varchar), '(' || airport_heliport.airportheliport_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport.airportheliport_ts.locationindicatoricao_value as varchar), '(' || airport_heliport.airportheliport_ts.locationindicatoricao_nilreason || ')') as locationindicatoricao,
    coalesce(cast(airport_heliport.airportheliport_ts.designatoriata_value as varchar), '(' || airport_heliport.airportheliport_ts.designatoriata_nilreason || ')') as designatoriata,
    coalesce(cast(airport_heliport.airportheliport_ts.type_value as varchar), '(' || airport_heliport.airportheliport_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.airportheliport_ts.certifiedicao_value as varchar), '(' || airport_heliport.airportheliport_ts.certifiedicao_nilreason || ')') as certifiedicao,
    coalesce(cast(airport_heliport.airportheliport_ts.privateuse_value as varchar), '(' || airport_heliport.airportheliport_ts.privateuse_nilreason || ')') as privateuse,
    coalesce(cast(airport_heliport.airportheliport_ts.controltype_value as varchar), '(' || airport_heliport.airportheliport_ts.controltype_nilreason || ')') as controltype,
    coalesce(cast(airport_heliport.airportheliport_ts.verticaldatum_value as varchar), '(' || airport_heliport.airportheliport_ts.verticaldatum_nilreason || ')') as verticaldatum,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariation_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariationaccuracy_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(airport_heliport.airportheliport_ts.datemagneticvariation_value as varchar), '(' || airport_heliport.airportheliport_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(airport_heliport.airportheliport_ts.magneticvariationchange_value as varchar), '(' || airport_heliport.airportheliport_ts.magneticvariationchange_nilreason || ')') as magneticvariationchange,
    coalesce(cast(airport_heliport.airportheliport_ts.altimeterchecklocation_value as varchar), '(' || airport_heliport.airportheliport_ts.altimeterchecklocation_nilreason || ')') as altimeterchecklocation,
    coalesce(cast(airport_heliport.airportheliport_ts.secondarypowersupply_value as varchar), '(' || airport_heliport.airportheliport_ts.secondarypowersupply_nilreason || ')') as secondarypowersupply,
    coalesce(cast(airport_heliport.airportheliport_ts.winddirectionindicator_value as varchar), '(' || airport_heliport.airportheliport_ts.winddirectionindicator_nilreason || ')') as winddirectionindicator,
    coalesce(cast(airport_heliport.airportheliport_ts.landingdirectionindicator_value as varchar), '(' || airport_heliport.airportheliport_ts.landingdirectionindicator_nilreason || ')') as landingdirectionindicator,
    coalesce(cast(airport_heliport.airportheliport_ts.abandoned_value as varchar), '(' || airport_heliport.airportheliport_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.airportheliport_ts.fieldelevation_value as varchar) || ' ' || airport_heliport.airportheliport_ts.fieldelevation_uom, '(' || airport_heliport.airportheliport_ts.fieldelevation_nilreason || ')') as fieldelevation,
    coalesce(cast(airport_heliport.airportheliport_ts.fieldelevationaccuracy_value as varchar) || ' ' || airport_heliport.airportheliport_ts.fieldelevationaccuracy_uom, '(' || airport_heliport.airportheliport_ts.fieldelevationaccuracy_nilreason || ')') as fieldelevationaccuracy,
    coalesce(cast(airport_heliport.airportheliport_ts.referencetemperature_value as varchar) || ' ' || airport_heliport.airportheliport_ts.referencetemperature_uom, '(' || airport_heliport.airportheliport_ts.referencetemperature_nilreason || ')') as referencetemperature,
    coalesce(cast(airport_heliport.airportheliport_ts.transitionaltitude_value as varchar) || ' ' || airport_heliport.airportheliport_ts.transitionaltitude_uom, '(' || airport_heliport.airportheliport_ts.transitionaltitude_nilreason || ')') as transitionaltitude,
    coalesce(cast(airport_heliport.airportheliport_ts.transitionlevel_value as varchar) || ' ' || airport_heliport.airportheliport_ts.transitionlevel_uom, '(' || airport_heliport.airportheliport_ts.transitionlevel_nilreason || ')') as transitionlevel,
    coalesce(cast(airport_heliport.airportheliport_ts.lowesttemperature_value as varchar) || ' ' || airport_heliport.airportheliport_ts.lowesttemperature_uom, '(' || airport_heliport.airportheliport_ts.lowesttemperature_nilreason || ')') as lowesttemperature,
    airport_heliport_airportheliportresponsibilityorganisation_view_ayewev.id AS responsibleorganisation,
    geometry_elevatedpoint_view_nleioa.geom AS arp_geom,
    ST_X(geometry_elevatedpoint_view_nleioa.geom) AS arp_longitude,
    ST_Y(geometry_elevatedpoint_view_nleioa.geom) AS arp_latitude,
    geometry_elevatedpoint_view_nleioa.elevation AS arp_elevation,
    geometry_elevatedpoint_view_nleioa.geoidUndulation AS arp_geoidundulation,
    geometry_elevatedpoint_view_nleioa.verticalDatum AS arp_verticaldatum,
    geometry_elevatedpoint_view_nleioa.verticalAccuracy AS arp_verticalaccuracy,
    geometry_elevatedpoint_view_nleioa.horizontalAccuracy AS arp_horizontalaccuracy,
    geometry_elevatedsurface_view_exhhbx.geom AS aviationboundary_geom,
    geometry_elevatedsurface_view_exhhbx.elevation AS aviationboundary_elevation,
    geometry_elevatedsurface_view_exhhbx.geoidUndulation AS aviationboundary_geoidundulation,
    geometry_elevatedsurface_view_exhhbx.verticalDatum AS aviationboundary_verticaldatum,
    geometry_elevatedsurface_view_exhhbx.verticalAccuracy AS aviationboundary_verticalaccuracy,
    geometry_elevatedsurface_view_exhhbx.horizontalAccuracy AS aviationboundary_horizontalaccuracy,
    jsonb_agg(airport_heliport_airportheliportcontamination_view_iqhmnd.id) AS contaminant,
    jsonb_agg(airport_heliport_city_view_pxkumk.id) AS servedcity,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_altimetersource_pt_wcmeic.id,
    'title', coalesce(cast(airport_heliport_altimetersource_pt_wcmeic.title AS varchar), '(' || airport_heliport_altimetersource_pt_wcmeic.nilreason[1] || ')'),
    'href', airport_heliport_altimetersource_pt_wcmeic.href)) AS altimetersource,
    jsonb_agg(airport_heliport_airportheliportavailability_view_bbjhrs.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_itspej.*) AS annotation
from airport_heliport.airportheliport 
inner join master_join mj2 on airport_heliport.airportheliport.id = mj2.source_id
inner join airport_heliport.airportheliport_tsp on mj2.target_id = airport_heliport.airportheliport_tsp.id
inner join airport_heliport.airportheliport_ts on airport_heliport.airportheliport_tsp.airportheliporttimeslice_id = airport_heliport.airportheliport_ts.id
left join airport_heliport.airportheliportresponsibilityorganisation_view airport_heliport_airportheliportresponsibilityorganisation_view_ayewev on airport_heliport.airportheliport_ts.responsibleorganisation_id = airport_heliport_airportheliportresponsibilityorganisation_view_ayewev.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_nleioa on airport_heliport.airportheliport_ts.arp_id = geometry_elevatedpoint_view_nleioa.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_exhhbx on airport_heliport.airportheliport_ts.aviationboundary_id = geometry_elevatedsurface_view_exhhbx.id
left join master_join master_join_hwglxs on airport_heliport.airportheliport_ts.id = master_join_hwglxs.source_id
left join airport_heliport.airportheliportcontamination_view airport_heliport_airportheliportcontamination_view_iqhmnd on master_join_hwglxs.target_id = airport_heliport_airportheliportcontamination_view_iqhmnd.id
left join master_join master_join_gxubnr on airport_heliport.airportheliport_ts.id = master_join_gxubnr.source_id
left join airport_heliport.city_view airport_heliport_city_view_pxkumk on master_join_gxubnr.target_id = airport_heliport_city_view_pxkumk.id
left join master_join master_join_vwonxj on airport_heliport.airportheliport_ts.id = master_join_vwonxj.source_id
left join airport_heliport.altimetersource_pt airport_heliport_altimetersource_pt_wcmeic on master_join_vwonxj.target_id = airport_heliport_altimetersource_pt_wcmeic.id
left join master_join master_join_bncyzc on airport_heliport.airportheliport_ts.id = master_join_bncyzc.source_id
left join shared.contactinformation_view shared_contactinformation_view_vzvdeo on master_join_bncyzc.target_id = shared_contactinformation_view_vzvdeo.id
left join master_join master_join_eelhlr on airport_heliport.airportheliport_ts.id = master_join_eelhlr.source_id
left join airport_heliport.airportheliportavailability_view airport_heliport_airportheliportavailability_view_bbjhrs on master_join_eelhlr.target_id = airport_heliport_airportheliportavailability_view_bbjhrs.id
left join master_join master_join_votpfj on airport_heliport.airportheliport_ts.id = master_join_votpfj.source_id
left join notes.note_view notes_note_view_itspej on master_join_votpfj.target_id = notes_note_view_itspej.id
where airport_heliport.airportheliport.feature_status = 'APPROVED'
  and airport_heliport.airportheliport_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportheliport.id,
    airport_heliport.airportheliport_ts.id,
    airport_heliport.airportheliport_tsp.id,
    airport_heliport.airportheliport.identifier,
    airport_heliport.airportheliport_ts.interpretation,
    airport_heliport.airportheliport_ts.sequence_number,
    airport_heliport.airportheliport_ts.correction_number,
    airport_heliport.airportheliport_ts.valid_time_begin,
    airport_heliport.airportheliport_ts.valid_time_end,
    airport_heliport.airportheliport_ts.feature_lifetime_begin,
    airport_heliport.airportheliport_ts.feature_lifetime_end,
    airport_heliport.airportheliport_ts.designator_value,
    airport_heliport.airportheliport_ts.designator_nilreason,
    airport_heliport.airportheliport_ts.name_value,
    airport_heliport.airportheliport_ts.name_nilreason,
    airport_heliport.airportheliport_ts.locationindicatoricao_value,
    airport_heliport.airportheliport_ts.locationindicatoricao_nilreason,
    airport_heliport.airportheliport_ts.designatoriata_value,
    airport_heliport.airportheliport_ts.designatoriata_nilreason,
    airport_heliport.airportheliport_ts.type_value,
    airport_heliport.airportheliport_ts.type_nilreason,
    airport_heliport.airportheliport_ts.certifiedicao_value,
    airport_heliport.airportheliport_ts.certifiedicao_nilreason,
    airport_heliport.airportheliport_ts.privateuse_value,
    airport_heliport.airportheliport_ts.privateuse_nilreason,
    airport_heliport.airportheliport_ts.controltype_value,
    airport_heliport.airportheliport_ts.controltype_nilreason,
    airport_heliport.airportheliport_ts.verticaldatum_value,
    airport_heliport.airportheliport_ts.verticaldatum_nilreason,
    airport_heliport.airportheliport_ts.magneticvariation_value,
    airport_heliport.airportheliport_ts.magneticvariation_nilreason,
    airport_heliport.airportheliport_ts.magneticvariationaccuracy_value,
    airport_heliport.airportheliport_ts.magneticvariationaccuracy_nilreason,
    airport_heliport.airportheliport_ts.datemagneticvariation_value,
    airport_heliport.airportheliport_ts.datemagneticvariation_nilreason,
    airport_heliport.airportheliport_ts.magneticvariationchange_value,
    airport_heliport.airportheliport_ts.magneticvariationchange_nilreason,
    airport_heliport.airportheliport_ts.altimeterchecklocation_value,
    airport_heliport.airportheliport_ts.altimeterchecklocation_nilreason,
    airport_heliport.airportheliport_ts.secondarypowersupply_value,
    airport_heliport.airportheliport_ts.secondarypowersupply_nilreason,
    airport_heliport.airportheliport_ts.winddirectionindicator_value,
    airport_heliport.airportheliport_ts.winddirectionindicator_nilreason,
    airport_heliport.airportheliport_ts.landingdirectionindicator_value,
    airport_heliport.airportheliport_ts.landingdirectionindicator_nilreason,
    airport_heliport.airportheliport_ts.abandoned_value,
    airport_heliport.airportheliport_ts.abandoned_nilreason,
    airport_heliport.airportheliport_ts.fieldelevation_value,
    airport_heliport.airportheliport_ts.fieldelevation_uom,
    airport_heliport.airportheliport_ts.fieldelevation_nilreason,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_value,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_uom,
    airport_heliport.airportheliport_ts.fieldelevationaccuracy_nilreason,
    airport_heliport.airportheliport_ts.referencetemperature_value,
    airport_heliport.airportheliport_ts.referencetemperature_uom,
    airport_heliport.airportheliport_ts.referencetemperature_nilreason,
    airport_heliport.airportheliport_ts.transitionaltitude_value,
    airport_heliport.airportheliport_ts.transitionaltitude_uom,
    airport_heliport.airportheliport_ts.transitionaltitude_nilreason,
    airport_heliport.airportheliport_ts.transitionlevel_value,
    airport_heliport.airportheliport_ts.transitionlevel_uom,
    airport_heliport.airportheliport_ts.transitionlevel_nilreason,
    airport_heliport.airportheliport_ts.lowesttemperature_value,
    airport_heliport.airportheliport_ts.lowesttemperature_uom,
    airport_heliport.airportheliport_ts.lowesttemperature_nilreason,
    airport_heliport_airportheliportresponsibilityorganisation_view_ayewev.id,
    geometry_elevatedpoint_view_nleioa.geom,
    geometry_elevatedpoint_view_nleioa.elevation,
    geometry_elevatedpoint_view_nleioa.geoidUndulation,
    geometry_elevatedpoint_view_nleioa.verticalDatum,
    geometry_elevatedpoint_view_nleioa.verticalAccuracy,
    geometry_elevatedpoint_view_nleioa.horizontalAccuracy,
    geometry_elevatedsurface_view_exhhbx.geom,
    geometry_elevatedsurface_view_exhhbx.elevation,
    geometry_elevatedsurface_view_exhhbx.geoidUndulation,
    geometry_elevatedsurface_view_exhhbx.verticalDatum,
    geometry_elevatedsurface_view_exhhbx.verticalAccuracy,
    geometry_elevatedsurface_view_exhhbx.horizontalAccuracy
order by airportheliport.identifier, airportheliport_ts.sequence_number, airportheliport_ts.correction_number DESC;
create index on airport_heliport.airportheliport_view (id);
-- AirportHotSpotTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airporthotspot_view cascade;
create materialized view airport_heliport.airporthotspot_view as
select distinct on (airporthotspot.identifier,airporthotspot_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airporthotspot.id,
    airport_heliport.airporthotspot_ts.id as ts_id,
    airport_heliport.airporthotspot_tsp.id as tsp_id,
    airport_heliport.airporthotspot.identifier,
    airport_heliport.airporthotspot_ts.interpretation,
    airport_heliport.airporthotspot_ts.sequence_number,
    airport_heliport.airporthotspot_ts.correction_number,
    airport_heliport.airporthotspot_ts.valid_time_begin,
    airport_heliport.airporthotspot_ts.valid_time_end,
    airport_heliport.airporthotspot_ts.feature_lifetime_begin,
    airport_heliport.airporthotspot_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airporthotspot_ts.designator_value as varchar), '(' || airport_heliport.airporthotspot_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.airporthotspot_ts.instruction_value as varchar), '(' || airport_heliport.airporthotspot_ts.instruction_nilreason || ')') as instruction,
    geometry_elevatedsurface_view_cyqhqw.geom AS area_geom,
    geometry_elevatedsurface_view_cyqhqw.elevation AS area_elevation,
    geometry_elevatedsurface_view_cyqhqw.geoidUndulation AS area_geoidundulation,
    geometry_elevatedsurface_view_cyqhqw.verticalDatum AS area_verticaldatum,
    geometry_elevatedsurface_view_cyqhqw.verticalAccuracy AS area_verticalaccuracy,
    geometry_elevatedsurface_view_cyqhqw.horizontalAccuracy AS area_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_vjlhfx.title as varchar), '(' || airport_heliport_airportheliport_pt_vjlhfx.nilreason[1] || ')') AS affectedairport,
    airport_heliport_airportheliport_pt_vjlhfx.href AS affectedairport_href,
    jsonb_agg(DISTINCT notes_note_view_balyet.*) AS annotation
from airport_heliport.airporthotspot 
inner join master_join mj2 on airport_heliport.airporthotspot.id = mj2.source_id
inner join airport_heliport.airporthotspot_tsp on mj2.target_id = airport_heliport.airporthotspot_tsp.id
inner join airport_heliport.airporthotspot_ts on airport_heliport.airporthotspot_tsp.airporthotspottimeslice_id = airport_heliport.airporthotspot_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_cyqhqw on airport_heliport.airporthotspot_ts.area_id = geometry_elevatedsurface_view_cyqhqw.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_vjlhfx on airport_heliport.airporthotspot_ts.affectedairport_id = airport_heliport_airportheliport_pt_vjlhfx.id
left join master_join master_join_mljrwt on airport_heliport.airporthotspot_ts.id = master_join_mljrwt.source_id
left join notes.note_view notes_note_view_balyet on master_join_mljrwt.target_id = notes_note_view_balyet.id
where airport_heliport.airporthotspot.feature_status = 'APPROVED'
  and airport_heliport.airporthotspot_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airporthotspot.id,
    airport_heliport.airporthotspot_ts.id,
    airport_heliport.airporthotspot_tsp.id,
    airport_heliport.airporthotspot.identifier,
    airport_heliport.airporthotspot_ts.interpretation,
    airport_heliport.airporthotspot_ts.sequence_number,
    airport_heliport.airporthotspot_ts.correction_number,
    airport_heliport.airporthotspot_ts.valid_time_begin,
    airport_heliport.airporthotspot_ts.valid_time_end,
    airport_heliport.airporthotspot_ts.feature_lifetime_begin,
    airport_heliport.airporthotspot_ts.feature_lifetime_end,
    airport_heliport.airporthotspot_ts.designator_value,
    airport_heliport.airporthotspot_ts.designator_nilreason,
    airport_heliport.airporthotspot_ts.instruction_value,
    airport_heliport.airporthotspot_ts.instruction_nilreason,
    geometry_elevatedsurface_view_cyqhqw.geom,
    geometry_elevatedsurface_view_cyqhqw.elevation,
    geometry_elevatedsurface_view_cyqhqw.geoidUndulation,
    geometry_elevatedsurface_view_cyqhqw.verticalDatum,
    geometry_elevatedsurface_view_cyqhqw.verticalAccuracy,
    geometry_elevatedsurface_view_cyqhqw.horizontalAccuracy,
    airport_heliport_airportheliport_pt_vjlhfx.title,
    airport_heliport_airportheliport_pt_vjlhfx.nilreason[1],
    airport_heliport_airportheliport_pt_vjlhfx.href
order by airporthotspot.identifier, airporthotspot_ts.sequence_number, airporthotspot_ts.correction_number DESC;
create index on airport_heliport.airporthotspot_view (id);
-- AirportProtectionAreaMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.airportprotectionareamarking_view cascade;
create materialized view airport_heliport.airportprotectionareamarking_view as
select distinct on (airportprotectionareamarking.identifier,airportprotectionareamarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.airportprotectionareamarking.id,
    airport_heliport.airportprotectionareamarking_ts.id as ts_id,
    airport_heliport.airportprotectionareamarking_tsp.id as tsp_id,
    airport_heliport.airportprotectionareamarking.identifier,
    airport_heliport.airportprotectionareamarking_ts.interpretation,
    airport_heliport.airportprotectionareamarking_ts.sequence_number,
    airport_heliport.airportprotectionareamarking_ts.correction_number,
    airport_heliport.airportprotectionareamarking_ts.valid_time_begin,
    airport_heliport.airportprotectionareamarking_ts.valid_time_end,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_begin,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.condition_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.airportprotectionareamarking_ts.markinglocation_value as varchar), '(' || airport_heliport.airportprotectionareamarking_ts.markinglocation_nilreason || ')') as markinglocation,
    jsonb_agg(airport_heliport_markingelement_view_purauq.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_mynmyg.*) AS annotation
from airport_heliport.airportprotectionareamarking 
inner join master_join mj2 on airport_heliport.airportprotectionareamarking.id = mj2.source_id
inner join airport_heliport.airportprotectionareamarking_tsp on mj2.target_id = airport_heliport.airportprotectionareamarking_tsp.id
inner join airport_heliport.airportprotectionareamarking_ts on airport_heliport.airportprotectionareamarking_tsp.airportprotectionareamarkingtimeslice_id = airport_heliport.airportprotectionareamarking_ts.id
left join master_join master_join_raiqng on airport_heliport.airportprotectionareamarking_ts.id = master_join_raiqng.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_purauq on master_join_raiqng.target_id = airport_heliport_markingelement_view_purauq.id
left join master_join master_join_tynqhu on airport_heliport.airportprotectionareamarking_ts.id = master_join_tynqhu.source_id
left join notes.note_view notes_note_view_mynmyg on master_join_tynqhu.target_id = notes_note_view_mynmyg.id
where airport_heliport.airportprotectionareamarking.feature_status = 'APPROVED'
  and airport_heliport.airportprotectionareamarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.airportprotectionareamarking.id,
    airport_heliport.airportprotectionareamarking_ts.id,
    airport_heliport.airportprotectionareamarking_tsp.id,
    airport_heliport.airportprotectionareamarking.identifier,
    airport_heliport.airportprotectionareamarking_ts.interpretation,
    airport_heliport.airportprotectionareamarking_ts.sequence_number,
    airport_heliport.airportprotectionareamarking_ts.correction_number,
    airport_heliport.airportprotectionareamarking_ts.valid_time_begin,
    airport_heliport.airportprotectionareamarking_ts.valid_time_end,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_begin,
    airport_heliport.airportprotectionareamarking_ts.feature_lifetime_end,
    airport_heliport.airportprotectionareamarking_ts.markingicaostandard_value,
    airport_heliport.airportprotectionareamarking_ts.markingicaostandard_nilreason,
    airport_heliport.airportprotectionareamarking_ts.condition_value,
    airport_heliport.airportprotectionareamarking_ts.condition_nilreason,
    airport_heliport.airportprotectionareamarking_ts.markinglocation_value,
    airport_heliport.airportprotectionareamarking_ts.markinglocation_nilreason
order by airportprotectionareamarking.identifier, airportprotectionareamarking_ts.sequence_number, airportprotectionareamarking_ts.correction_number DESC;
create index on airport_heliport.airportprotectionareamarking_view (id);
-- AirportSuppliesServiceTimeSliceType
-- ['service.nitrogen_view', 'service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'service.oxygen_view', 'service.callsigndetail_view', 'service.oil_view', 'service.fuel_view', 'notes.note_view']
drop materialized view if exists service.airportsuppliesservice_view cascade;
create materialized view service.airportsuppliesservice_view as
select distinct on (airportsuppliesservice.identifier,airportsuppliesservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airportsuppliesservice.id,
    service.airportsuppliesservice_ts.id as ts_id,
    service.airportsuppliesservice_tsp.id as tsp_id,
    service.airportsuppliesservice.identifier,
    service.airportsuppliesservice_ts.interpretation,
    service.airportsuppliesservice_ts.sequence_number,
    service.airportsuppliesservice_ts.correction_number,
    service.airportsuppliesservice_ts.valid_time_begin,
    service.airportsuppliesservice_ts.valid_time_end,
    service.airportsuppliesservice_ts.feature_lifetime_begin,
    service.airportsuppliesservice_ts.feature_lifetime_end,
    coalesce(cast(service.airportsuppliesservice_ts.flightoperations_value as varchar), '(' || service.airportsuppliesservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airportsuppliesservice_ts.rank_value as varchar), '(' || service.airportsuppliesservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airportsuppliesservice_ts.complianticao_value as varchar), '(' || service.airportsuppliesservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airportsuppliesservice_ts.name_value as varchar), '(' || service.airportsuppliesservice_ts.name_nilreason || ')') as name,
    geometry_elevatedpoint_view_cffwlu.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_cffwlu.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_cffwlu.geom) AS location_latitude,
    geometry_elevatedpoint_view_cffwlu.elevation AS location_elevation,
    geometry_elevatedpoint_view_cffwlu.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_cffwlu.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_cffwlu.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_cffwlu.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_yyrszx.title as varchar), '(' || organisation_unit_pt_yyrszx.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_yyrszx.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_ytjlld.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_rnckkc.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_rnckkc.title AS varchar), '(' || service_radiocommunicationchannel_pt_rnckkc.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_rnckkc.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_uhitsp.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_uiptdi.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_lzxaun.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_lzxaun.title AS varchar), '(' || airport_heliport_airportheliport_pt_lzxaun.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_lzxaun.href)) AS airportheliport,
    jsonb_agg(service_fuel_view_cpwchu.id) AS fuelsupply,
    jsonb_agg(service_oil_view_rahulx.id) AS oilsupply,
    jsonb_agg(service_nitrogen_view_sfayxr.id) AS nitrogensupply,
    jsonb_agg(service_oxygen_view_qvfmoz.id) AS oxygensupply
from service.airportsuppliesservice 
inner join master_join mj2 on service.airportsuppliesservice.id = mj2.source_id
inner join service.airportsuppliesservice_tsp on mj2.target_id = service.airportsuppliesservice_tsp.id
inner join service.airportsuppliesservice_ts on service.airportsuppliesservice_tsp.airportsuppliesservicetimeslice_id = service.airportsuppliesservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_cffwlu on service.airportsuppliesservice_ts.location_id = geometry_elevatedpoint_view_cffwlu.id
left join organisation.unit_pt organisation_unit_pt_yyrszx on service.airportsuppliesservice_ts.serviceprovider_id = organisation_unit_pt_yyrszx.id
left join master_join master_join_foqpdx on service.airportsuppliesservice_ts.id = master_join_foqpdx.source_id
left join service.callsigndetail_view service_callsigndetail_view_ytjlld on master_join_foqpdx.target_id = service_callsigndetail_view_ytjlld.id
left join master_join master_join_gxvviu on service.airportsuppliesservice_ts.id = master_join_gxvviu.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_rnckkc on master_join_gxvviu.target_id = service_radiocommunicationchannel_pt_rnckkc.id
left join master_join master_join_ewtuyp on service.airportsuppliesservice_ts.id = master_join_ewtuyp.source_id
left join shared.contactinformation_view shared_contactinformation_view_ophane on master_join_ewtuyp.target_id = shared_contactinformation_view_ophane.id
left join master_join master_join_bkoafj on service.airportsuppliesservice_ts.id = master_join_bkoafj.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_uhitsp on master_join_bkoafj.target_id = service_serviceoperationalstatus_view_uhitsp.id
left join master_join master_join_fsgkyj on service.airportsuppliesservice_ts.id = master_join_fsgkyj.source_id
left join notes.note_view notes_note_view_uiptdi on master_join_fsgkyj.target_id = notes_note_view_uiptdi.id
left join master_join master_join_liphof on service.airportsuppliesservice_ts.id = master_join_liphof.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_lzxaun on master_join_liphof.target_id = airport_heliport_airportheliport_pt_lzxaun.id
left join master_join master_join_uapxbb on service.airportsuppliesservice_ts.id = master_join_uapxbb.source_id
left join service.fuel_view service_fuel_view_cpwchu on master_join_uapxbb.target_id = service_fuel_view_cpwchu.id
left join master_join master_join_yzqixi on service.airportsuppliesservice_ts.id = master_join_yzqixi.source_id
left join service.oil_view service_oil_view_rahulx on master_join_yzqixi.target_id = service_oil_view_rahulx.id
left join master_join master_join_qdvmel on service.airportsuppliesservice_ts.id = master_join_qdvmel.source_id
left join service.nitrogen_view service_nitrogen_view_sfayxr on master_join_qdvmel.target_id = service_nitrogen_view_sfayxr.id
left join master_join master_join_ibdjtu on service.airportsuppliesservice_ts.id = master_join_ibdjtu.source_id
left join service.oxygen_view service_oxygen_view_qvfmoz on master_join_ibdjtu.target_id = service_oxygen_view_qvfmoz.id
where service.airportsuppliesservice.feature_status = 'APPROVED'
  and service.airportsuppliesservice_ts.feature_status = 'APPROVED'
group by
    service.airportsuppliesservice.id,
    service.airportsuppliesservice_ts.id,
    service.airportsuppliesservice_tsp.id,
    service.airportsuppliesservice.identifier,
    service.airportsuppliesservice_ts.interpretation,
    service.airportsuppliesservice_ts.sequence_number,
    service.airportsuppliesservice_ts.correction_number,
    service.airportsuppliesservice_ts.valid_time_begin,
    service.airportsuppliesservice_ts.valid_time_end,
    service.airportsuppliesservice_ts.feature_lifetime_begin,
    service.airportsuppliesservice_ts.feature_lifetime_end,
    service.airportsuppliesservice_ts.flightoperations_value,
    service.airportsuppliesservice_ts.flightoperations_nilreason,
    service.airportsuppliesservice_ts.rank_value,
    service.airportsuppliesservice_ts.rank_nilreason,
    service.airportsuppliesservice_ts.complianticao_value,
    service.airportsuppliesservice_ts.complianticao_nilreason,
    service.airportsuppliesservice_ts.name_value,
    service.airportsuppliesservice_ts.name_nilreason,
    geometry_elevatedpoint_view_cffwlu.geom,
    geometry_elevatedpoint_view_cffwlu.elevation,
    geometry_elevatedpoint_view_cffwlu.geoidUndulation,
    geometry_elevatedpoint_view_cffwlu.verticalDatum,
    geometry_elevatedpoint_view_cffwlu.verticalAccuracy,
    geometry_elevatedpoint_view_cffwlu.horizontalAccuracy,
    organisation_unit_pt_yyrszx.title,
    organisation_unit_pt_yyrszx.nilreason[1],
    organisation_unit_pt_yyrszx.href
order by airportsuppliesservice.identifier, airportsuppliesservice_ts.sequence_number, airportsuppliesservice_ts.correction_number DESC;
create index on service.airportsuppliesservice_view (id);
-- AirspaceBorderCrossingTimeSliceType
-- ['notes.note_view']
drop materialized view if exists routes.airspacebordercrossing_view cascade;
create materialized view routes.airspacebordercrossing_view as
select distinct on (airspacebordercrossing.identifier,airspacebordercrossing_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.airspacebordercrossing.id,
    routes.airspacebordercrossing_ts.id as ts_id,
    routes.airspacebordercrossing_tsp.id as tsp_id,
    routes.airspacebordercrossing.identifier,
    routes.airspacebordercrossing_ts.interpretation,
    routes.airspacebordercrossing_ts.sequence_number,
    routes.airspacebordercrossing_ts.correction_number,
    routes.airspacebordercrossing_ts.valid_time_begin,
    routes.airspacebordercrossing_ts.valid_time_end,
    routes.airspacebordercrossing_ts.feature_lifetime_begin,
    routes.airspacebordercrossing_ts.feature_lifetime_end,
    coalesce(cast(airspace_airspace_pt_shhlyn.title as varchar), '(' || airspace_airspace_pt_shhlyn.nilreason[1] || ')') AS exitedairspace,
    airspace_airspace_pt_shhlyn.href AS exitedairspace_href,
    coalesce(cast(airspace_airspace_pt_ncbhrh.title as varchar), '(' || airspace_airspace_pt_ncbhrh.nilreason[1] || ')') AS enteredairspace,
    airspace_airspace_pt_ncbhrh.href AS enteredairspace_href,
    jsonb_agg(DISTINCT notes_note_view_fdrykv.*) AS annotation
from routes.airspacebordercrossing 
inner join master_join mj2 on routes.airspacebordercrossing.id = mj2.source_id
inner join routes.airspacebordercrossing_tsp on mj2.target_id = routes.airspacebordercrossing_tsp.id
inner join routes.airspacebordercrossing_ts on routes.airspacebordercrossing_tsp.airspacebordercrossingtimeslice_id = routes.airspacebordercrossing_ts.id
left join airspace.airspace_pt airspace_airspace_pt_shhlyn on routes.airspacebordercrossing_ts.exitedairspace_id = airspace_airspace_pt_shhlyn.id
left join airspace.airspace_pt airspace_airspace_pt_ncbhrh on routes.airspacebordercrossing_ts.enteredairspace_id = airspace_airspace_pt_ncbhrh.id
left join master_join master_join_khapzh on routes.airspacebordercrossing_ts.id = master_join_khapzh.source_id
left join notes.note_view notes_note_view_fdrykv on master_join_khapzh.target_id = notes_note_view_fdrykv.id
where routes.airspacebordercrossing.feature_status = 'APPROVED'
  and routes.airspacebordercrossing_ts.feature_status = 'APPROVED'
group by
    routes.airspacebordercrossing.id,
    routes.airspacebordercrossing_ts.id,
    routes.airspacebordercrossing_tsp.id,
    routes.airspacebordercrossing.identifier,
    routes.airspacebordercrossing_ts.interpretation,
    routes.airspacebordercrossing_ts.sequence_number,
    routes.airspacebordercrossing_ts.correction_number,
    routes.airspacebordercrossing_ts.valid_time_begin,
    routes.airspacebordercrossing_ts.valid_time_end,
    routes.airspacebordercrossing_ts.feature_lifetime_begin,
    routes.airspacebordercrossing_ts.feature_lifetime_end,
    airspace_airspace_pt_shhlyn.title,
    airspace_airspace_pt_shhlyn.nilreason[1],
    airspace_airspace_pt_shhlyn.href,
    airspace_airspace_pt_ncbhrh.title,
    airspace_airspace_pt_ncbhrh.nilreason[1],
    airspace_airspace_pt_ncbhrh.href
order by airspacebordercrossing.identifier, airspacebordercrossing_ts.sequence_number, airspacebordercrossing_ts.correction_number DESC;
create index on routes.airspacebordercrossing_view (id);
-- AirspaceTimeSliceType
-- ['airspace.airspacelayerclass_view', 'notes.note_view', 'airspace.airspaceactivation_view', 'airspace.airspacegeometrycomponent_view']
drop materialized view if exists airspace.airspace_view cascade;
create materialized view airspace.airspace_view as
select distinct on (airspace.identifier,airspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.airspace.id,
    airspace.airspace_ts.id as ts_id,
    airspace.airspace_tsp.id as tsp_id,
    airspace.airspace.identifier,
    airspace.airspace_ts.interpretation,
    airspace.airspace_ts.sequence_number,
    airspace.airspace_ts.correction_number,
    airspace.airspace_ts.valid_time_begin,
    airspace.airspace_ts.valid_time_end,
    airspace.airspace_ts.feature_lifetime_begin,
    airspace.airspace_ts.feature_lifetime_end,
    coalesce(cast(airspace.airspace_ts.type_value as varchar), '(' || airspace.airspace_ts.type_nilreason || ')') as type,
    coalesce(cast(airspace.airspace_ts.designator_value as varchar), '(' || airspace.airspace_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airspace.airspace_ts.localtype_value as varchar), '(' || airspace.airspace_ts.localtype_nilreason || ')') as localtype,
    coalesce(cast(airspace.airspace_ts.name_value as varchar), '(' || airspace.airspace_ts.name_nilreason || ')') as name,
    coalesce(cast(airspace.airspace_ts.designatoricao_value as varchar), '(' || airspace.airspace_ts.designatoricao_nilreason || ')') as designatoricao,
    coalesce(cast(airspace.airspace_ts.controltype_value as varchar), '(' || airspace.airspace_ts.controltype_nilreason || ')') as controltype,
    coalesce(cast(airspace.airspace_ts.upperlowerseparation_value as varchar) || ' ' || airspace.airspace_ts.upperlowerseparation_uom, '(' || airspace.airspace_ts.upperlowerseparation_nilreason || ')') as upperlowerseparation,
    coalesce(cast(routes_route_pt_kdnjwa.title as varchar), '(' || routes_route_pt_kdnjwa.nilreason[1] || ')') AS protectedroute,
    routes_route_pt_kdnjwa.href AS protectedroute_href,
    jsonb_agg(airspace_airspacelayerclass_view_kqiqvq.id) AS clazz,
    jsonb_agg(airspace_airspacegeometrycomponent_view_mfkcdc.id) AS geometrycomponent,
    jsonb_agg(airspace_airspaceactivation_view_fzwnwx.id) AS activation,
    jsonb_agg(DISTINCT notes_note_view_maxwnt.*) AS annotation
from airspace.airspace 
inner join master_join mj2 on airspace.airspace.id = mj2.source_id
inner join airspace.airspace_tsp on mj2.target_id = airspace.airspace_tsp.id
inner join airspace.airspace_ts on airspace.airspace_tsp.airspacetimeslice_id = airspace.airspace_ts.id
left join routes.route_pt routes_route_pt_kdnjwa on airspace.airspace_ts.protectedroute_id = routes_route_pt_kdnjwa.id
left join master_join master_join_syfduo on airspace.airspace_ts.id = master_join_syfduo.source_id
left join airspace.airspacelayerclass_view airspace_airspacelayerclass_view_kqiqvq on master_join_syfduo.target_id = airspace_airspacelayerclass_view_kqiqvq.id
left join master_join master_join_rsnfgk on airspace.airspace_ts.id = master_join_rsnfgk.source_id
left join airspace.airspacegeometrycomponent_view airspace_airspacegeometrycomponent_view_mfkcdc on master_join_rsnfgk.target_id = airspace_airspacegeometrycomponent_view_mfkcdc.id
left join master_join master_join_ubvfty on airspace.airspace_ts.id = master_join_ubvfty.source_id
left join airspace.airspaceactivation_view airspace_airspaceactivation_view_fzwnwx on master_join_ubvfty.target_id = airspace_airspaceactivation_view_fzwnwx.id
left join master_join master_join_epgltz on airspace.airspace_ts.id = master_join_epgltz.source_id
left join notes.note_view notes_note_view_maxwnt on master_join_epgltz.target_id = notes_note_view_maxwnt.id
where airspace.airspace.feature_status = 'APPROVED'
  and airspace.airspace_ts.feature_status = 'APPROVED'
group by
    airspace.airspace.id,
    airspace.airspace_ts.id,
    airspace.airspace_tsp.id,
    airspace.airspace.identifier,
    airspace.airspace_ts.interpretation,
    airspace.airspace_ts.sequence_number,
    airspace.airspace_ts.correction_number,
    airspace.airspace_ts.valid_time_begin,
    airspace.airspace_ts.valid_time_end,
    airspace.airspace_ts.feature_lifetime_begin,
    airspace.airspace_ts.feature_lifetime_end,
    airspace.airspace_ts.type_value,
    airspace.airspace_ts.type_nilreason,
    airspace.airspace_ts.designator_value,
    airspace.airspace_ts.designator_nilreason,
    airspace.airspace_ts.localtype_value,
    airspace.airspace_ts.localtype_nilreason,
    airspace.airspace_ts.name_value,
    airspace.airspace_ts.name_nilreason,
    airspace.airspace_ts.designatoricao_value,
    airspace.airspace_ts.designatoricao_nilreason,
    airspace.airspace_ts.controltype_value,
    airspace.airspace_ts.controltype_nilreason,
    airspace.airspace_ts.upperlowerseparation_value,
    airspace.airspace_ts.upperlowerseparation_uom,
    airspace.airspace_ts.upperlowerseparation_nilreason,
    routes_route_pt_kdnjwa.title,
    routes_route_pt_kdnjwa.nilreason[1],
    routes_route_pt_kdnjwa.href
order by airspace.identifier, airspace_ts.sequence_number, airspace_ts.correction_number DESC;
create index on airspace.airspace_view (id);
-- AirTrafficControlServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'routes.routeportion_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.airtrafficcontrolservice_view cascade;
create materialized view service.airtrafficcontrolservice_view as
select distinct on (airtrafficcontrolservice.identifier,airtrafficcontrolservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airtrafficcontrolservice.id,
    service.airtrafficcontrolservice_ts.id as ts_id,
    service.airtrafficcontrolservice_tsp.id as tsp_id,
    service.airtrafficcontrolservice.identifier,
    service.airtrafficcontrolservice_ts.interpretation,
    service.airtrafficcontrolservice_ts.sequence_number,
    service.airtrafficcontrolservice_ts.correction_number,
    service.airtrafficcontrolservice_ts.valid_time_begin,
    service.airtrafficcontrolservice_ts.valid_time_end,
    service.airtrafficcontrolservice_ts.feature_lifetime_begin,
    service.airtrafficcontrolservice_ts.feature_lifetime_end,
    coalesce(cast(service.airtrafficcontrolservice_ts.flightoperations_value as varchar), '(' || service.airtrafficcontrolservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airtrafficcontrolservice_ts.rank_value as varchar), '(' || service.airtrafficcontrolservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airtrafficcontrolservice_ts.complianticao_value as varchar), '(' || service.airtrafficcontrolservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airtrafficcontrolservice_ts.name_value as varchar), '(' || service.airtrafficcontrolservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airtrafficcontrolservice_ts.radarassisted_value as varchar), '(' || service.airtrafficcontrolservice_ts.radarassisted_nilreason || ')') as radarassisted,
    coalesce(cast(service.airtrafficcontrolservice_ts.datalinkenabled_value as varchar), '(' || service.airtrafficcontrolservice_ts.datalinkenabled_nilreason || ')') as datalinkenabled,
    coalesce(cast(service.airtrafficcontrolservice_ts.datalinkchannel_value as varchar), '(' || service.airtrafficcontrolservice_ts.datalinkchannel_nilreason || ')') as datalinkchannel,
    coalesce(cast(service.airtrafficcontrolservice_ts.type_value as varchar), '(' || service.airtrafficcontrolservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_sqhfpm.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_sqhfpm.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_sqhfpm.geom) AS location_latitude,
    geometry_elevatedpoint_view_sqhfpm.elevation AS location_elevation,
    geometry_elevatedpoint_view_sqhfpm.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_sqhfpm.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_sqhfpm.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_sqhfpm.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_qldrkz.title as varchar), '(' || organisation_unit_pt_qldrkz.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_qldrkz.href AS serviceprovider_href,
    coalesce(cast(navaids_points_directionfinder_pt_wqrkzc.title as varchar), '(' || navaids_points_directionfinder_pt_wqrkzc.nilreason[1] || ')') AS aircraftlocator,
    navaids_points_directionfinder_pt_wqrkzc.href AS aircraftlocator_href,
    jsonb_agg(service_callsigndetail_view_cxjrnn.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_fofseg.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_fofseg.title AS varchar), '(' || service_radiocommunicationchannel_pt_fofseg.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_fofseg.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_fqwecx.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_cvjpxy.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_icsqhb.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_icsqhb.title AS varchar), '(' || airport_heliport_airportheliport_pt_icsqhb.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_icsqhb.href)) AS clientairport,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_itidio.id,
    'title', coalesce(cast(airspace_airspace_pt_itidio.title AS varchar), '(' || airspace_airspace_pt_itidio.nilreason[1] || ')'),
    'href', airspace_airspace_pt_itidio.href)) AS clientairspace,
    jsonb_agg(routes_routeportion_view_mvbnhv.id) AS clientroute,
    jsonb_agg(DISTINCT jsonb_build_object('id', holding_holdingpattern_pt_ireitd.id,
    'title', coalesce(cast(holding_holdingpattern_pt_ireitd.title AS varchar), '(' || holding_holdingpattern_pt_ireitd.nilreason[1] || ')'),
    'href', holding_holdingpattern_pt_ireitd.href)) AS clientholding,
    jsonb_agg(DISTINCT jsonb_build_object('id', aerial_refuelling_aerialrefuelling_pt_neekpu.id,
    'title', coalesce(cast(aerial_refuelling_aerialrefuelling_pt_neekpu.title AS varchar), '(' || aerial_refuelling_aerialrefuelling_pt_neekpu.nilreason[1] || ')'),
    'href', aerial_refuelling_aerialrefuelling_pt_neekpu.href)) AS clientaerialrefuelling
from service.airtrafficcontrolservice 
inner join master_join mj2 on service.airtrafficcontrolservice.id = mj2.source_id
inner join service.airtrafficcontrolservice_tsp on mj2.target_id = service.airtrafficcontrolservice_tsp.id
inner join service.airtrafficcontrolservice_ts on service.airtrafficcontrolservice_tsp.airtrafficcontrolservicetimeslice_id = service.airtrafficcontrolservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_sqhfpm on service.airtrafficcontrolservice_ts.location_id = geometry_elevatedpoint_view_sqhfpm.id
left join organisation.unit_pt organisation_unit_pt_qldrkz on service.airtrafficcontrolservice_ts.serviceprovider_id = organisation_unit_pt_qldrkz.id
left join navaids_points.directionfinder_pt navaids_points_directionfinder_pt_wqrkzc on service.airtrafficcontrolservice_ts.aircraftlocator_id = navaids_points_directionfinder_pt_wqrkzc.id
left join master_join master_join_jptohg on service.airtrafficcontrolservice_ts.id = master_join_jptohg.source_id
left join service.callsigndetail_view service_callsigndetail_view_cxjrnn on master_join_jptohg.target_id = service_callsigndetail_view_cxjrnn.id
left join master_join master_join_gxrbne on service.airtrafficcontrolservice_ts.id = master_join_gxrbne.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_fofseg on master_join_gxrbne.target_id = service_radiocommunicationchannel_pt_fofseg.id
left join master_join master_join_byqtmd on service.airtrafficcontrolservice_ts.id = master_join_byqtmd.source_id
left join shared.contactinformation_view shared_contactinformation_view_lftjea on master_join_byqtmd.target_id = shared_contactinformation_view_lftjea.id
left join master_join master_join_vqwlfj on service.airtrafficcontrolservice_ts.id = master_join_vqwlfj.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_fqwecx on master_join_vqwlfj.target_id = service_serviceoperationalstatus_view_fqwecx.id
left join master_join master_join_bgehvp on service.airtrafficcontrolservice_ts.id = master_join_bgehvp.source_id
left join notes.note_view notes_note_view_cvjpxy on master_join_bgehvp.target_id = notes_note_view_cvjpxy.id
left join master_join master_join_xdoymd on service.airtrafficcontrolservice_ts.id = master_join_xdoymd.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_icsqhb on master_join_xdoymd.target_id = airport_heliport_airportheliport_pt_icsqhb.id
left join master_join master_join_fchlzn on service.airtrafficcontrolservice_ts.id = master_join_fchlzn.source_id
left join airspace.airspace_pt airspace_airspace_pt_itidio on master_join_fchlzn.target_id = airspace_airspace_pt_itidio.id
left join master_join master_join_cpiori on service.airtrafficcontrolservice_ts.id = master_join_cpiori.source_id
left join routes.routeportion_view routes_routeportion_view_mvbnhv on master_join_cpiori.target_id = routes_routeportion_view_mvbnhv.id
left join master_join master_join_kxbccs on service.airtrafficcontrolservice_ts.id = master_join_kxbccs.source_id
left join holding.holdingpattern_pt holding_holdingpattern_pt_ireitd on master_join_kxbccs.target_id = holding_holdingpattern_pt_ireitd.id
left join master_join master_join_ensole on service.airtrafficcontrolservice_ts.id = master_join_ensole.source_id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_neekpu on master_join_ensole.target_id = aerial_refuelling_aerialrefuelling_pt_neekpu.id
where service.airtrafficcontrolservice.feature_status = 'APPROVED'
  and service.airtrafficcontrolservice_ts.feature_status = 'APPROVED'
group by
    service.airtrafficcontrolservice.id,
    service.airtrafficcontrolservice_ts.id,
    service.airtrafficcontrolservice_tsp.id,
    service.airtrafficcontrolservice.identifier,
    service.airtrafficcontrolservice_ts.interpretation,
    service.airtrafficcontrolservice_ts.sequence_number,
    service.airtrafficcontrolservice_ts.correction_number,
    service.airtrafficcontrolservice_ts.valid_time_begin,
    service.airtrafficcontrolservice_ts.valid_time_end,
    service.airtrafficcontrolservice_ts.feature_lifetime_begin,
    service.airtrafficcontrolservice_ts.feature_lifetime_end,
    service.airtrafficcontrolservice_ts.flightoperations_value,
    service.airtrafficcontrolservice_ts.flightoperations_nilreason,
    service.airtrafficcontrolservice_ts.rank_value,
    service.airtrafficcontrolservice_ts.rank_nilreason,
    service.airtrafficcontrolservice_ts.complianticao_value,
    service.airtrafficcontrolservice_ts.complianticao_nilreason,
    service.airtrafficcontrolservice_ts.name_value,
    service.airtrafficcontrolservice_ts.name_nilreason,
    service.airtrafficcontrolservice_ts.radarassisted_value,
    service.airtrafficcontrolservice_ts.radarassisted_nilreason,
    service.airtrafficcontrolservice_ts.datalinkenabled_value,
    service.airtrafficcontrolservice_ts.datalinkenabled_nilreason,
    service.airtrafficcontrolservice_ts.datalinkchannel_value,
    service.airtrafficcontrolservice_ts.datalinkchannel_nilreason,
    service.airtrafficcontrolservice_ts.type_value,
    service.airtrafficcontrolservice_ts.type_nilreason,
    geometry_elevatedpoint_view_sqhfpm.geom,
    geometry_elevatedpoint_view_sqhfpm.elevation,
    geometry_elevatedpoint_view_sqhfpm.geoidUndulation,
    geometry_elevatedpoint_view_sqhfpm.verticalDatum,
    geometry_elevatedpoint_view_sqhfpm.verticalAccuracy,
    geometry_elevatedpoint_view_sqhfpm.horizontalAccuracy,
    organisation_unit_pt_qldrkz.title,
    organisation_unit_pt_qldrkz.nilreason[1],
    organisation_unit_pt_qldrkz.href,
    navaids_points_directionfinder_pt_wqrkzc.title,
    navaids_points_directionfinder_pt_wqrkzc.nilreason[1],
    navaids_points_directionfinder_pt_wqrkzc.href
order by airtrafficcontrolservice.identifier, airtrafficcontrolservice_ts.sequence_number, airtrafficcontrolservice_ts.correction_number DESC;
create index on service.airtrafficcontrolservice_view (id);
-- AirTrafficManagementServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'routes.routeportion_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.airtrafficmanagementservice_view cascade;
create materialized view service.airtrafficmanagementservice_view as
select distinct on (airtrafficmanagementservice.identifier,airtrafficmanagementservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.airtrafficmanagementservice.id,
    service.airtrafficmanagementservice_ts.id as ts_id,
    service.airtrafficmanagementservice_tsp.id as tsp_id,
    service.airtrafficmanagementservice.identifier,
    service.airtrafficmanagementservice_ts.interpretation,
    service.airtrafficmanagementservice_ts.sequence_number,
    service.airtrafficmanagementservice_ts.correction_number,
    service.airtrafficmanagementservice_ts.valid_time_begin,
    service.airtrafficmanagementservice_ts.valid_time_end,
    service.airtrafficmanagementservice_ts.feature_lifetime_begin,
    service.airtrafficmanagementservice_ts.feature_lifetime_end,
    coalesce(cast(service.airtrafficmanagementservice_ts.flightoperations_value as varchar), '(' || service.airtrafficmanagementservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.airtrafficmanagementservice_ts.rank_value as varchar), '(' || service.airtrafficmanagementservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.airtrafficmanagementservice_ts.complianticao_value as varchar), '(' || service.airtrafficmanagementservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.airtrafficmanagementservice_ts.name_value as varchar), '(' || service.airtrafficmanagementservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.airtrafficmanagementservice_ts.type_value as varchar), '(' || service.airtrafficmanagementservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_nqhthz.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_nqhthz.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_nqhthz.geom) AS location_latitude,
    geometry_elevatedpoint_view_nqhthz.elevation AS location_elevation,
    geometry_elevatedpoint_view_nqhthz.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_nqhthz.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_nqhthz.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_nqhthz.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_ktcexx.title as varchar), '(' || organisation_unit_pt_ktcexx.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_ktcexx.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_psxqlc.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_yqkttl.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_yqkttl.title AS varchar), '(' || service_radiocommunicationchannel_pt_yqkttl.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_yqkttl.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_rllave.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_didgoo.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_fgurnd.id,
    'title', coalesce(cast(airspace_airspace_pt_fgurnd.title AS varchar), '(' || airspace_airspace_pt_fgurnd.nilreason[1] || ')'),
    'href', airspace_airspace_pt_fgurnd.href)) AS clientairspace,
    jsonb_agg(DISTINCT jsonb_build_object('id', aerial_refuelling_aerialrefuelling_pt_xrhgiw.id,
    'title', coalesce(cast(aerial_refuelling_aerialrefuelling_pt_xrhgiw.title AS varchar), '(' || aerial_refuelling_aerialrefuelling_pt_xrhgiw.nilreason[1] || ')'),
    'href', aerial_refuelling_aerialrefuelling_pt_xrhgiw.href)) AS clientaerialrefuelling,
    jsonb_agg(routes_routeportion_view_alqxpn.id) AS clientroute
from service.airtrafficmanagementservice 
inner join master_join mj2 on service.airtrafficmanagementservice.id = mj2.source_id
inner join service.airtrafficmanagementservice_tsp on mj2.target_id = service.airtrafficmanagementservice_tsp.id
inner join service.airtrafficmanagementservice_ts on service.airtrafficmanagementservice_tsp.airtrafficmanagementservicetimeslice_id = service.airtrafficmanagementservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_nqhthz on service.airtrafficmanagementservice_ts.location_id = geometry_elevatedpoint_view_nqhthz.id
left join organisation.unit_pt organisation_unit_pt_ktcexx on service.airtrafficmanagementservice_ts.serviceprovider_id = organisation_unit_pt_ktcexx.id
left join master_join master_join_iagzky on service.airtrafficmanagementservice_ts.id = master_join_iagzky.source_id
left join service.callsigndetail_view service_callsigndetail_view_psxqlc on master_join_iagzky.target_id = service_callsigndetail_view_psxqlc.id
left join master_join master_join_cilnor on service.airtrafficmanagementservice_ts.id = master_join_cilnor.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_yqkttl on master_join_cilnor.target_id = service_radiocommunicationchannel_pt_yqkttl.id
left join master_join master_join_gxpkcz on service.airtrafficmanagementservice_ts.id = master_join_gxpkcz.source_id
left join shared.contactinformation_view shared_contactinformation_view_juxxqg on master_join_gxpkcz.target_id = shared_contactinformation_view_juxxqg.id
left join master_join master_join_nryphs on service.airtrafficmanagementservice_ts.id = master_join_nryphs.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_rllave on master_join_nryphs.target_id = service_serviceoperationalstatus_view_rllave.id
left join master_join master_join_wpbrkr on service.airtrafficmanagementservice_ts.id = master_join_wpbrkr.source_id
left join notes.note_view notes_note_view_didgoo on master_join_wpbrkr.target_id = notes_note_view_didgoo.id
left join master_join master_join_eowaxy on service.airtrafficmanagementservice_ts.id = master_join_eowaxy.source_id
left join airspace.airspace_pt airspace_airspace_pt_fgurnd on master_join_eowaxy.target_id = airspace_airspace_pt_fgurnd.id
left join master_join master_join_mczbgk on service.airtrafficmanagementservice_ts.id = master_join_mczbgk.source_id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_xrhgiw on master_join_mczbgk.target_id = aerial_refuelling_aerialrefuelling_pt_xrhgiw.id
left join master_join master_join_htwukp on service.airtrafficmanagementservice_ts.id = master_join_htwukp.source_id
left join routes.routeportion_view routes_routeportion_view_alqxpn on master_join_htwukp.target_id = routes_routeportion_view_alqxpn.id
where service.airtrafficmanagementservice.feature_status = 'APPROVED'
  and service.airtrafficmanagementservice_ts.feature_status = 'APPROVED'
group by
    service.airtrafficmanagementservice.id,
    service.airtrafficmanagementservice_ts.id,
    service.airtrafficmanagementservice_tsp.id,
    service.airtrafficmanagementservice.identifier,
    service.airtrafficmanagementservice_ts.interpretation,
    service.airtrafficmanagementservice_ts.sequence_number,
    service.airtrafficmanagementservice_ts.correction_number,
    service.airtrafficmanagementservice_ts.valid_time_begin,
    service.airtrafficmanagementservice_ts.valid_time_end,
    service.airtrafficmanagementservice_ts.feature_lifetime_begin,
    service.airtrafficmanagementservice_ts.feature_lifetime_end,
    service.airtrafficmanagementservice_ts.flightoperations_value,
    service.airtrafficmanagementservice_ts.flightoperations_nilreason,
    service.airtrafficmanagementservice_ts.rank_value,
    service.airtrafficmanagementservice_ts.rank_nilreason,
    service.airtrafficmanagementservice_ts.complianticao_value,
    service.airtrafficmanagementservice_ts.complianticao_nilreason,
    service.airtrafficmanagementservice_ts.name_value,
    service.airtrafficmanagementservice_ts.name_nilreason,
    service.airtrafficmanagementservice_ts.type_value,
    service.airtrafficmanagementservice_ts.type_nilreason,
    geometry_elevatedpoint_view_nqhthz.geom,
    geometry_elevatedpoint_view_nqhthz.elevation,
    geometry_elevatedpoint_view_nqhthz.geoidUndulation,
    geometry_elevatedpoint_view_nqhthz.verticalDatum,
    geometry_elevatedpoint_view_nqhthz.verticalAccuracy,
    geometry_elevatedpoint_view_nqhthz.horizontalAccuracy,
    organisation_unit_pt_ktcexx.title,
    organisation_unit_pt_ktcexx.nilreason[1],
    organisation_unit_pt_ktcexx.href
order by airtrafficmanagementservice.identifier, airtrafficmanagementservice_ts.sequence_number, airtrafficmanagementservice_ts.correction_number DESC;
create index on service.airtrafficmanagementservice_view (id);
-- AltimeterSourceTimeSliceType
-- ['notes.note_view', 'airport_heliport.altimetersourcestatus_view']
drop materialized view if exists airport_heliport.altimetersource_view cascade;
create materialized view airport_heliport.altimetersource_view as
select distinct on (altimetersource.identifier,altimetersource_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.altimetersource.id,
    airport_heliport.altimetersource_ts.id as ts_id,
    airport_heliport.altimetersource_tsp.id as tsp_id,
    airport_heliport.altimetersource.identifier,
    airport_heliport.altimetersource_ts.interpretation,
    airport_heliport.altimetersource_ts.sequence_number,
    airport_heliport.altimetersource_ts.correction_number,
    airport_heliport.altimetersource_ts.valid_time_begin,
    airport_heliport.altimetersource_ts.valid_time_end,
    airport_heliport.altimetersource_ts.feature_lifetime_begin,
    airport_heliport.altimetersource_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.altimetersource_ts.isremote_value as varchar), '(' || airport_heliport.altimetersource_ts.isremote_nilreason || ')') as isremote,
    coalesce(cast(airport_heliport.altimetersource_ts.isprimary_value as varchar), '(' || airport_heliport.altimetersource_ts.isprimary_nilreason || ')') as isprimary,
    jsonb_agg(airport_heliport_altimetersourcestatus_view_zufjng.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_dffuzh.*) AS annotation
from airport_heliport.altimetersource 
inner join master_join mj2 on airport_heliport.altimetersource.id = mj2.source_id
inner join airport_heliport.altimetersource_tsp on mj2.target_id = airport_heliport.altimetersource_tsp.id
inner join airport_heliport.altimetersource_ts on airport_heliport.altimetersource_tsp.altimetersourcetimeslice_id = airport_heliport.altimetersource_ts.id
left join master_join master_join_ecnpch on airport_heliport.altimetersource_ts.id = master_join_ecnpch.source_id
left join airport_heliport.altimetersourcestatus_view airport_heliport_altimetersourcestatus_view_zufjng on master_join_ecnpch.target_id = airport_heliport_altimetersourcestatus_view_zufjng.id
left join master_join master_join_aawawf on airport_heliport.altimetersource_ts.id = master_join_aawawf.source_id
left join notes.note_view notes_note_view_dffuzh on master_join_aawawf.target_id = notes_note_view_dffuzh.id
where airport_heliport.altimetersource.feature_status = 'APPROVED'
  and airport_heliport.altimetersource_ts.feature_status = 'APPROVED'
group by
    airport_heliport.altimetersource.id,
    airport_heliport.altimetersource_ts.id,
    airport_heliport.altimetersource_tsp.id,
    airport_heliport.altimetersource.identifier,
    airport_heliport.altimetersource_ts.interpretation,
    airport_heliport.altimetersource_ts.sequence_number,
    airport_heliport.altimetersource_ts.correction_number,
    airport_heliport.altimetersource_ts.valid_time_begin,
    airport_heliport.altimetersource_ts.valid_time_end,
    airport_heliport.altimetersource_ts.feature_lifetime_begin,
    airport_heliport.altimetersource_ts.feature_lifetime_end,
    airport_heliport.altimetersource_ts.isremote_value,
    airport_heliport.altimetersource_ts.isremote_nilreason,
    airport_heliport.altimetersource_ts.isprimary_value,
    airport_heliport.altimetersource_ts.isprimary_nilreason
order by altimetersource.identifier, altimetersource_ts.sequence_number, altimetersource_ts.correction_number DESC;
create index on airport_heliport.altimetersource_view (id);
-- AngleIndicationTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.angleindication_view cascade;
create materialized view navaids_points.angleindication_view as
select distinct on (angleindication.identifier,angleindication_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.angleindication.id,
    navaids_points.angleindication_ts.id as ts_id,
    navaids_points.angleindication_tsp.id as tsp_id,
    navaids_points.angleindication.identifier,
    navaids_points.angleindication_ts.interpretation,
    navaids_points.angleindication_ts.sequence_number,
    navaids_points.angleindication_ts.correction_number,
    navaids_points.angleindication_ts.valid_time_begin,
    navaids_points.angleindication_ts.valid_time_end,
    navaids_points.angleindication_ts.feature_lifetime_begin,
    navaids_points.angleindication_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.angleindication_ts.angle_value as varchar), '(' || navaids_points.angleindication_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.angleindication_ts.angletype_value as varchar), '(' || navaids_points.angleindication_ts.angletype_nilreason || ')') as angletype,
    coalesce(cast(navaids_points.angleindication_ts.indicationdirection_value as varchar), '(' || navaids_points.angleindication_ts.indicationdirection_nilreason || ')') as indicationdirection,
    coalesce(cast(navaids_points.angleindication_ts.trueangle_value as varchar), '(' || navaids_points.angleindication_ts.trueangle_nilreason || ')') as trueangle,
    coalesce(cast(navaids_points.angleindication_ts.cardinaldirection_value as varchar), '(' || navaids_points.angleindication_ts.cardinaldirection_nilreason || ')') as cardinaldirection,
    coalesce(cast(navaids_points.angleindication_ts.minimumreceptionaltitude_value as varchar) || ' ' || navaids_points.angleindication_ts.minimumreceptionaltitude_uom, '(' || navaids_points.angleindication_ts.minimumreceptionaltitude_nilreason || ')') as minimumreceptionaltitude,
    coalesce(cast(navaids_points_designatedpoint_pt_tzsqsj.title as varchar), '(' || navaids_points_designatedpoint_pt_tzsqsj.nilreason[1] || ')') AS fix,
    navaids_points_designatedpoint_pt_tzsqsj.href AS fix_href,
    coalesce(cast(navaids_points_designatedpoint_pt_rszwom.title as varchar), '(' || navaids_points_designatedpoint_pt_rszwom.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_rszwom.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_bxtbxc.title as varchar), '(' || navaids_points_navaid_pt_bxtbxc.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_bxtbxc.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_zkffvh.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_zkffvh.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_zkffvh.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_vavnqz.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_vavnqz.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_vavnqz.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_deeqwz.title as varchar), '(' || airport_heliport_airportheliport_pt_deeqwz.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_deeqwz.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_ubsgei.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_ubsgei.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_ubsgei.geom) AS pointchoiceposition_latitude,
    geometry_point_view_ubsgei.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_qiesna.*) AS annotation
from navaids_points.angleindication 
inner join master_join mj2 on navaids_points.angleindication.id = mj2.source_id
inner join navaids_points.angleindication_tsp on mj2.target_id = navaids_points.angleindication_tsp.id
inner join navaids_points.angleindication_ts on navaids_points.angleindication_tsp.angleindicationtimeslice_id = navaids_points.angleindication_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_tzsqsj on navaids_points.angleindication_ts.fix_id = navaids_points_designatedpoint_pt_tzsqsj.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_rszwom on navaids_points.angleindication_ts.angleindication_ts_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_rszwom.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_bxtbxc on navaids_points.angleindication_ts.angleindication_ts_navaidsystem_id = navaids_points_navaid_pt_bxtbxc.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_zkffvh on navaids_points.angleindication_ts.angleindication_ts_aimingpoint_id = airport_heliport_touchdownliftoff_pt_zkffvh.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_vavnqz on navaids_points.angleindication_ts.angleindication_ts_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_vavnqz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_deeqwz on navaids_points.angleindication_ts.angleindication_ts_airportreferencepoint_id = airport_heliport_airportheliport_pt_deeqwz.id
left join geometry.point_view geometry_point_view_ubsgei on navaids_points.angleindication_ts.angleindication_ts_position_id = geometry_point_view_ubsgei.id
left join master_join master_join_upqsas on navaids_points.angleindication_ts.id = master_join_upqsas.source_id
left join notes.note_view notes_note_view_qiesna on master_join_upqsas.target_id = notes_note_view_qiesna.id
where navaids_points.angleindication.feature_status = 'APPROVED'
  and navaids_points.angleindication_ts.feature_status = 'APPROVED'
group by
    navaids_points.angleindication.id,
    navaids_points.angleindication_ts.id,
    navaids_points.angleindication_tsp.id,
    navaids_points.angleindication.identifier,
    navaids_points.angleindication_ts.interpretation,
    navaids_points.angleindication_ts.sequence_number,
    navaids_points.angleindication_ts.correction_number,
    navaids_points.angleindication_ts.valid_time_begin,
    navaids_points.angleindication_ts.valid_time_end,
    navaids_points.angleindication_ts.feature_lifetime_begin,
    navaids_points.angleindication_ts.feature_lifetime_end,
    navaids_points.angleindication_ts.angle_value,
    navaids_points.angleindication_ts.angle_nilreason,
    navaids_points.angleindication_ts.angletype_value,
    navaids_points.angleindication_ts.angletype_nilreason,
    navaids_points.angleindication_ts.indicationdirection_value,
    navaids_points.angleindication_ts.indicationdirection_nilreason,
    navaids_points.angleindication_ts.trueangle_value,
    navaids_points.angleindication_ts.trueangle_nilreason,
    navaids_points.angleindication_ts.cardinaldirection_value,
    navaids_points.angleindication_ts.cardinaldirection_nilreason,
    navaids_points.angleindication_ts.minimumreceptionaltitude_value,
    navaids_points.angleindication_ts.minimumreceptionaltitude_uom,
    navaids_points.angleindication_ts.minimumreceptionaltitude_nilreason,
    navaids_points_designatedpoint_pt_tzsqsj.title,
    navaids_points_designatedpoint_pt_tzsqsj.nilreason[1],
    navaids_points_designatedpoint_pt_tzsqsj.href,
    navaids_points_designatedpoint_pt_rszwom.title,
    navaids_points_designatedpoint_pt_rszwom.nilreason[1],
    navaids_points_designatedpoint_pt_rszwom.href,
    navaids_points_navaid_pt_bxtbxc.title,
    navaids_points_navaid_pt_bxtbxc.nilreason[1],
    navaids_points_navaid_pt_bxtbxc.href,
    airport_heliport_touchdownliftoff_pt_zkffvh.title,
    airport_heliport_touchdownliftoff_pt_zkffvh.nilreason[1],
    airport_heliport_touchdownliftoff_pt_zkffvh.href,
    airport_heliport_runwaycentrelinepoint_pt_vavnqz.title,
    airport_heliport_runwaycentrelinepoint_pt_vavnqz.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_vavnqz.href,
    airport_heliport_airportheliport_pt_deeqwz.title,
    airport_heliport_airportheliport_pt_deeqwz.nilreason[1],
    airport_heliport_airportheliport_pt_deeqwz.href,
    geometry_point_view_ubsgei.geom,
    geometry_point_view_ubsgei.horizontalAccuracy
order by angleindication.identifier, angleindication_ts.sequence_number, angleindication_ts.correction_number DESC;
create index on navaids_points.angleindication_view (id);
-- ApproachLightingSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.approachlightingsystem_view cascade;
create materialized view airport_heliport.approachlightingsystem_view as
select distinct on (approachlightingsystem.identifier,approachlightingsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.approachlightingsystem.id,
    airport_heliport.approachlightingsystem_ts.id as ts_id,
    airport_heliport.approachlightingsystem_tsp.id as tsp_id,
    airport_heliport.approachlightingsystem.identifier,
    airport_heliport.approachlightingsystem_ts.interpretation,
    airport_heliport.approachlightingsystem_ts.sequence_number,
    airport_heliport.approachlightingsystem_ts.correction_number,
    airport_heliport.approachlightingsystem_ts.valid_time_begin,
    airport_heliport.approachlightingsystem_ts.valid_time_end,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_begin,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.colour_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.classicao_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.classicao_nilreason || ')') as classicao,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.type_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.sequencedflashing_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.sequencedflashing_nilreason || ')') as sequencedflashing,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.alignmentindicator_value as varchar), '(' || airport_heliport.approachlightingsystem_ts.alignmentindicator_nilreason || ')') as alignmentindicator,
    coalesce(cast(airport_heliport.approachlightingsystem_ts.length_value as varchar) || ' ' || airport_heliport.approachlightingsystem_ts.length_uom, '(' || airport_heliport.approachlightingsystem_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_runwaydirection_pt_uykvni.title as varchar), '(' || airport_heliport_runwaydirection_pt_uykvni.nilreason[1] || ')') AS servedrunwaydirection,
    airport_heliport_runwaydirection_pt_uykvni.href AS servedrunwaydirection_href,
    jsonb_agg(shared_lightelement_view_mnycyc.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_hafukl.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_paeqsq.*) AS annotation
from airport_heliport.approachlightingsystem 
inner join master_join mj2 on airport_heliport.approachlightingsystem.id = mj2.source_id
inner join airport_heliport.approachlightingsystem_tsp on mj2.target_id = airport_heliport.approachlightingsystem_tsp.id
inner join airport_heliport.approachlightingsystem_ts on airport_heliport.approachlightingsystem_tsp.approachlightingsystemtimeslice_id = airport_heliport.approachlightingsystem_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_uykvni on airport_heliport.approachlightingsystem_ts.servedrunwaydirection_id = airport_heliport_runwaydirection_pt_uykvni.id
left join master_join master_join_ztqleu on airport_heliport.approachlightingsystem_ts.id = master_join_ztqleu.source_id
left join shared.lightelement_view shared_lightelement_view_mnycyc on master_join_ztqleu.target_id = shared_lightelement_view_mnycyc.id
left join master_join master_join_ovttdp on airport_heliport.approachlightingsystem_ts.id = master_join_ovttdp.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_hafukl on master_join_ovttdp.target_id = airport_heliport_groundlightingavailability_view_hafukl.id
left join master_join master_join_qabrza on airport_heliport.approachlightingsystem_ts.id = master_join_qabrza.source_id
left join notes.note_view notes_note_view_paeqsq on master_join_qabrza.target_id = notes_note_view_paeqsq.id
where airport_heliport.approachlightingsystem.feature_status = 'APPROVED'
  and airport_heliport.approachlightingsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.approachlightingsystem.id,
    airport_heliport.approachlightingsystem_ts.id,
    airport_heliport.approachlightingsystem_tsp.id,
    airport_heliport.approachlightingsystem.identifier,
    airport_heliport.approachlightingsystem_ts.interpretation,
    airport_heliport.approachlightingsystem_ts.sequence_number,
    airport_heliport.approachlightingsystem_ts.correction_number,
    airport_heliport.approachlightingsystem_ts.valid_time_begin,
    airport_heliport.approachlightingsystem_ts.valid_time_end,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_begin,
    airport_heliport.approachlightingsystem_ts.feature_lifetime_end,
    airport_heliport.approachlightingsystem_ts.emergencylighting_value,
    airport_heliport.approachlightingsystem_ts.emergencylighting_nilreason,
    airport_heliport.approachlightingsystem_ts.intensitylevel_value,
    airport_heliport.approachlightingsystem_ts.intensitylevel_nilreason,
    airport_heliport.approachlightingsystem_ts.colour_value,
    airport_heliport.approachlightingsystem_ts.colour_nilreason,
    airport_heliport.approachlightingsystem_ts.classicao_value,
    airport_heliport.approachlightingsystem_ts.classicao_nilreason,
    airport_heliport.approachlightingsystem_ts.type_value,
    airport_heliport.approachlightingsystem_ts.type_nilreason,
    airport_heliport.approachlightingsystem_ts.sequencedflashing_value,
    airport_heliport.approachlightingsystem_ts.sequencedflashing_nilreason,
    airport_heliport.approachlightingsystem_ts.alignmentindicator_value,
    airport_heliport.approachlightingsystem_ts.alignmentindicator_nilreason,
    airport_heliport.approachlightingsystem_ts.length_value,
    airport_heliport.approachlightingsystem_ts.length_uom,
    airport_heliport.approachlightingsystem_ts.length_nilreason,
    airport_heliport_runwaydirection_pt_uykvni.title,
    airport_heliport_runwaydirection_pt_uykvni.nilreason[1],
    airport_heliport_runwaydirection_pt_uykvni.href
order by approachlightingsystem.identifier, approachlightingsystem_ts.sequence_number, approachlightingsystem_ts.correction_number DESC;
create index on airport_heliport.approachlightingsystem_view (id);
-- ApronElementTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.apronareaavailability_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.apronelement_view cascade;
create materialized view airport_heliport.apronelement_view as
select distinct on (apronelement.identifier,apronelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronelement.id,
    airport_heliport.apronelement_ts.id as ts_id,
    airport_heliport.apronelement_tsp.id as tsp_id,
    airport_heliport.apronelement.identifier,
    airport_heliport.apronelement_ts.interpretation,
    airport_heliport.apronelement_ts.sequence_number,
    airport_heliport.apronelement_ts.correction_number,
    airport_heliport.apronelement_ts.valid_time_begin,
    airport_heliport.apronelement_ts.valid_time_end,
    airport_heliport.apronelement_ts.feature_lifetime_begin,
    airport_heliport.apronelement_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apronelement_ts.type_value as varchar), '(' || airport_heliport.apronelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.apronelement_ts.jetwayavailability_value as varchar), '(' || airport_heliport.apronelement_ts.jetwayavailability_nilreason || ')') as jetwayavailability,
    coalesce(cast(airport_heliport.apronelement_ts.towingavailability_value as varchar), '(' || airport_heliport.apronelement_ts.towingavailability_nilreason || ')') as towingavailability,
    coalesce(cast(airport_heliport.apronelement_ts.dockingavailability_value as varchar), '(' || airport_heliport.apronelement_ts.dockingavailability_nilreason || ')') as dockingavailability,
    coalesce(cast(airport_heliport.apronelement_ts.groundpoweravailability_value as varchar), '(' || airport_heliport.apronelement_ts.groundpoweravailability_nilreason || ')') as groundpoweravailability,
    coalesce(cast(airport_heliport.apronelement_ts.length_value as varchar) || ' ' || airport_heliport.apronelement_ts.length_uom, '(' || airport_heliport.apronelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.apronelement_ts.width_value as varchar) || ' ' || airport_heliport.apronelement_ts.width_uom, '(' || airport_heliport.apronelement_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport_apron_pt_ssymgt.title as varchar), '(' || airport_heliport_apron_pt_ssymgt.nilreason[1] || ')') AS associatedapron,
    airport_heliport_apron_pt_ssymgt.href AS associatedapron_href,
    airport_heliport_surfacecharacteristics_view_ligkds.id AS surfaceproperties,
    geometry_elevatedsurface_view_muzahg.geom AS extent_geom,
    geometry_elevatedsurface_view_muzahg.elevation AS extent_elevation,
    geometry_elevatedsurface_view_muzahg.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_muzahg.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_muzahg.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_muzahg.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_airportsuppliesservice_pt_uokbmu.id,
    'title', coalesce(cast(service_airportsuppliesservice_pt_uokbmu.title AS varchar), '(' || service_airportsuppliesservice_pt_uokbmu.nilreason[1] || ')'),
    'href', service_airportsuppliesservice_pt_uokbmu.href)) AS supplyservice,
    jsonb_agg(DISTINCT notes_note_view_ddxzex.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_ydthzs.id) AS availability
from airport_heliport.apronelement 
inner join master_join mj2 on airport_heliport.apronelement.id = mj2.source_id
inner join airport_heliport.apronelement_tsp on mj2.target_id = airport_heliport.apronelement_tsp.id
inner join airport_heliport.apronelement_ts on airport_heliport.apronelement_tsp.apronelementtimeslice_id = airport_heliport.apronelement_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_ssymgt on airport_heliport.apronelement_ts.associatedapron_id = airport_heliport_apron_pt_ssymgt.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_ligkds on airport_heliport.apronelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_ligkds.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_muzahg on airport_heliport.apronelement_ts.extent_id = geometry_elevatedsurface_view_muzahg.id
left join master_join master_join_pkprlq on airport_heliport.apronelement_ts.id = master_join_pkprlq.source_id
left join service.airportsuppliesservice_pt service_airportsuppliesservice_pt_uokbmu on master_join_pkprlq.target_id = service_airportsuppliesservice_pt_uokbmu.id
left join master_join master_join_ekpaft on airport_heliport.apronelement_ts.id = master_join_ekpaft.source_id
left join notes.note_view notes_note_view_ddxzex on master_join_ekpaft.target_id = notes_note_view_ddxzex.id
left join master_join master_join_mdkvse on airport_heliport.apronelement_ts.id = master_join_mdkvse.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_ydthzs on master_join_mdkvse.target_id = airport_heliport_apronareaavailability_view_ydthzs.id
where airport_heliport.apronelement.feature_status = 'APPROVED'
  and airport_heliport.apronelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronelement.id,
    airport_heliport.apronelement_ts.id,
    airport_heliport.apronelement_tsp.id,
    airport_heliport.apronelement.identifier,
    airport_heliport.apronelement_ts.interpretation,
    airport_heliport.apronelement_ts.sequence_number,
    airport_heliport.apronelement_ts.correction_number,
    airport_heliport.apronelement_ts.valid_time_begin,
    airport_heliport.apronelement_ts.valid_time_end,
    airport_heliport.apronelement_ts.feature_lifetime_begin,
    airport_heliport.apronelement_ts.feature_lifetime_end,
    airport_heliport.apronelement_ts.type_value,
    airport_heliport.apronelement_ts.type_nilreason,
    airport_heliport.apronelement_ts.jetwayavailability_value,
    airport_heliport.apronelement_ts.jetwayavailability_nilreason,
    airport_heliport.apronelement_ts.towingavailability_value,
    airport_heliport.apronelement_ts.towingavailability_nilreason,
    airport_heliport.apronelement_ts.dockingavailability_value,
    airport_heliport.apronelement_ts.dockingavailability_nilreason,
    airport_heliport.apronelement_ts.groundpoweravailability_value,
    airport_heliport.apronelement_ts.groundpoweravailability_nilreason,
    airport_heliport.apronelement_ts.length_value,
    airport_heliport.apronelement_ts.length_uom,
    airport_heliport.apronelement_ts.length_nilreason,
    airport_heliport.apronelement_ts.width_value,
    airport_heliport.apronelement_ts.width_uom,
    airport_heliport.apronelement_ts.width_nilreason,
    airport_heliport_apron_pt_ssymgt.title,
    airport_heliport_apron_pt_ssymgt.nilreason[1],
    airport_heliport_apron_pt_ssymgt.href,
    airport_heliport_surfacecharacteristics_view_ligkds.id,
    geometry_elevatedsurface_view_muzahg.geom,
    geometry_elevatedsurface_view_muzahg.elevation,
    geometry_elevatedsurface_view_muzahg.geoidUndulation,
    geometry_elevatedsurface_view_muzahg.verticalDatum,
    geometry_elevatedsurface_view_muzahg.verticalAccuracy,
    geometry_elevatedsurface_view_muzahg.horizontalAccuracy
order by apronelement.identifier, apronelement_ts.sequence_number, apronelement_ts.correction_number DESC;
create index on airport_heliport.apronelement_view (id);
-- ApronLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.apronlightsystem_view cascade;
create materialized view airport_heliport.apronlightsystem_view as
select distinct on (apronlightsystem.identifier,apronlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronlightsystem.id,
    airport_heliport.apronlightsystem_ts.id as ts_id,
    airport_heliport.apronlightsystem_tsp.id as tsp_id,
    airport_heliport.apronlightsystem.identifier,
    airport_heliport.apronlightsystem_ts.interpretation,
    airport_heliport.apronlightsystem_ts.sequence_number,
    airport_heliport.apronlightsystem_ts.correction_number,
    airport_heliport.apronlightsystem_ts.valid_time_begin,
    airport_heliport.apronlightsystem_ts.valid_time_end,
    airport_heliport.apronlightsystem_ts.feature_lifetime_begin,
    airport_heliport.apronlightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apronlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.apronlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.apronlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.apronlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.apronlightsystem_ts.colour_value as varchar), '(' || airport_heliport.apronlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.apronlightsystem_ts.position_value as varchar), '(' || airport_heliport.apronlightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_apron_pt_xkvibh.title as varchar), '(' || airport_heliport_apron_pt_xkvibh.nilreason[1] || ')') AS lightedapron,
    airport_heliport_apron_pt_xkvibh.href AS lightedapron_href,
    jsonb_agg(shared_lightelement_view_vyjpwj.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_hwlybn.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_rwycqx.*) AS annotation
from airport_heliport.apronlightsystem 
inner join master_join mj2 on airport_heliport.apronlightsystem.id = mj2.source_id
inner join airport_heliport.apronlightsystem_tsp on mj2.target_id = airport_heliport.apronlightsystem_tsp.id
inner join airport_heliport.apronlightsystem_ts on airport_heliport.apronlightsystem_tsp.apronlightsystemtimeslice_id = airport_heliport.apronlightsystem_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_xkvibh on airport_heliport.apronlightsystem_ts.lightedapron_id = airport_heliport_apron_pt_xkvibh.id
left join master_join master_join_ducqch on airport_heliport.apronlightsystem_ts.id = master_join_ducqch.source_id
left join shared.lightelement_view shared_lightelement_view_vyjpwj on master_join_ducqch.target_id = shared_lightelement_view_vyjpwj.id
left join master_join master_join_nzmtxc on airport_heliport.apronlightsystem_ts.id = master_join_nzmtxc.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_hwlybn on master_join_nzmtxc.target_id = airport_heliport_groundlightingavailability_view_hwlybn.id
left join master_join master_join_hbkgoj on airport_heliport.apronlightsystem_ts.id = master_join_hbkgoj.source_id
left join notes.note_view notes_note_view_rwycqx on master_join_hbkgoj.target_id = notes_note_view_rwycqx.id
where airport_heliport.apronlightsystem.feature_status = 'APPROVED'
  and airport_heliport.apronlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronlightsystem.id,
    airport_heliport.apronlightsystem_ts.id,
    airport_heliport.apronlightsystem_tsp.id,
    airport_heliport.apronlightsystem.identifier,
    airport_heliport.apronlightsystem_ts.interpretation,
    airport_heliport.apronlightsystem_ts.sequence_number,
    airport_heliport.apronlightsystem_ts.correction_number,
    airport_heliport.apronlightsystem_ts.valid_time_begin,
    airport_heliport.apronlightsystem_ts.valid_time_end,
    airport_heliport.apronlightsystem_ts.feature_lifetime_begin,
    airport_heliport.apronlightsystem_ts.feature_lifetime_end,
    airport_heliport.apronlightsystem_ts.emergencylighting_value,
    airport_heliport.apronlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.apronlightsystem_ts.intensitylevel_value,
    airport_heliport.apronlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.apronlightsystem_ts.colour_value,
    airport_heliport.apronlightsystem_ts.colour_nilreason,
    airport_heliport.apronlightsystem_ts.position_value,
    airport_heliport.apronlightsystem_ts.position_nilreason,
    airport_heliport_apron_pt_xkvibh.title,
    airport_heliport_apron_pt_xkvibh.nilreason[1],
    airport_heliport_apron_pt_xkvibh.href
order by apronlightsystem.identifier, apronlightsystem_ts.sequence_number, apronlightsystem_ts.correction_number DESC;
create index on airport_heliport.apronlightsystem_view (id);
-- ApronMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.apronmarking_view cascade;
create materialized view airport_heliport.apronmarking_view as
select distinct on (apronmarking.identifier,apronmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apronmarking.id,
    airport_heliport.apronmarking_ts.id as ts_id,
    airport_heliport.apronmarking_tsp.id as tsp_id,
    airport_heliport.apronmarking.identifier,
    airport_heliport.apronmarking_ts.interpretation,
    airport_heliport.apronmarking_ts.sequence_number,
    airport_heliport.apronmarking_ts.correction_number,
    airport_heliport.apronmarking_ts.valid_time_begin,
    airport_heliport.apronmarking_ts.valid_time_end,
    airport_heliport.apronmarking_ts.feature_lifetime_begin,
    airport_heliport.apronmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apronmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.apronmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.apronmarking_ts.condition_value as varchar), '(' || airport_heliport.apronmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.apronmarking_ts.markinglocation_value as varchar), '(' || airport_heliport.apronmarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_apron_pt_suwvvh.title as varchar), '(' || airport_heliport_apron_pt_suwvvh.nilreason[1] || ')') AS markedapron,
    airport_heliport_apron_pt_suwvvh.href AS markedapron_href,
    jsonb_agg(airport_heliport_markingelement_view_syuwue.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_pcozho.*) AS annotation
from airport_heliport.apronmarking 
inner join master_join mj2 on airport_heliport.apronmarking.id = mj2.source_id
inner join airport_heliport.apronmarking_tsp on mj2.target_id = airport_heliport.apronmarking_tsp.id
inner join airport_heliport.apronmarking_ts on airport_heliport.apronmarking_tsp.apronmarkingtimeslice_id = airport_heliport.apronmarking_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_suwvvh on airport_heliport.apronmarking_ts.markedapron_id = airport_heliport_apron_pt_suwvvh.id
left join master_join master_join_nhjain on airport_heliport.apronmarking_ts.id = master_join_nhjain.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_syuwue on master_join_nhjain.target_id = airport_heliport_markingelement_view_syuwue.id
left join master_join master_join_ycoltq on airport_heliport.apronmarking_ts.id = master_join_ycoltq.source_id
left join notes.note_view notes_note_view_pcozho on master_join_ycoltq.target_id = notes_note_view_pcozho.id
where airport_heliport.apronmarking.feature_status = 'APPROVED'
  and airport_heliport.apronmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apronmarking.id,
    airport_heliport.apronmarking_ts.id,
    airport_heliport.apronmarking_tsp.id,
    airport_heliport.apronmarking.identifier,
    airport_heliport.apronmarking_ts.interpretation,
    airport_heliport.apronmarking_ts.sequence_number,
    airport_heliport.apronmarking_ts.correction_number,
    airport_heliport.apronmarking_ts.valid_time_begin,
    airport_heliport.apronmarking_ts.valid_time_end,
    airport_heliport.apronmarking_ts.feature_lifetime_begin,
    airport_heliport.apronmarking_ts.feature_lifetime_end,
    airport_heliport.apronmarking_ts.markingicaostandard_value,
    airport_heliport.apronmarking_ts.markingicaostandard_nilreason,
    airport_heliport.apronmarking_ts.condition_value,
    airport_heliport.apronmarking_ts.condition_nilreason,
    airport_heliport.apronmarking_ts.markinglocation_value,
    airport_heliport.apronmarking_ts.markinglocation_nilreason,
    airport_heliport_apron_pt_suwvvh.title,
    airport_heliport_apron_pt_suwvvh.nilreason[1],
    airport_heliport_apron_pt_suwvvh.href
order by apronmarking.identifier, apronmarking_ts.sequence_number, apronmarking_ts.correction_number DESC;
create index on airport_heliport.apronmarking_view (id);
-- ApronTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.apronareaavailability_view', 'notes.note_view', 'airport_heliport.aproncontamination_view']
drop materialized view if exists airport_heliport.apron_view cascade;
create materialized view airport_heliport.apron_view as
select distinct on (apron.identifier,apron_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.apron.id,
    airport_heliport.apron_ts.id as ts_id,
    airport_heliport.apron_tsp.id as tsp_id,
    airport_heliport.apron.identifier,
    airport_heliport.apron_ts.interpretation,
    airport_heliport.apron_ts.sequence_number,
    airport_heliport.apron_ts.correction_number,
    airport_heliport.apron_ts.valid_time_begin,
    airport_heliport.apron_ts.valid_time_end,
    airport_heliport.apron_ts.feature_lifetime_begin,
    airport_heliport.apron_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.apron_ts.name_value as varchar), '(' || airport_heliport.apron_ts.name_nilreason || ')') as name,
    coalesce(cast(airport_heliport.apron_ts.abandoned_value as varchar), '(' || airport_heliport.apron_ts.abandoned_nilreason || ')') as abandoned,
    airport_heliport_surfacecharacteristics_view_cxwacc.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_hoqiuy.title as varchar), '(' || airport_heliport_airportheliport_pt_hoqiuy.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_hoqiuy.href AS associatedairportheliport_href,
    jsonb_agg(airport_heliport_aproncontamination_view_rbnbhz.id) AS contaminant,
    jsonb_agg(DISTINCT notes_note_view_jppvrg.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_rtcvfc.id) AS availability
from airport_heliport.apron 
inner join master_join mj2 on airport_heliport.apron.id = mj2.source_id
inner join airport_heliport.apron_tsp on mj2.target_id = airport_heliport.apron_tsp.id
inner join airport_heliport.apron_ts on airport_heliport.apron_tsp.aprontimeslice_id = airport_heliport.apron_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_cxwacc on airport_heliport.apron_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_cxwacc.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hoqiuy on airport_heliport.apron_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_hoqiuy.id
left join master_join master_join_yafehy on airport_heliport.apron_ts.id = master_join_yafehy.source_id
left join airport_heliport.aproncontamination_view airport_heliport_aproncontamination_view_rbnbhz on master_join_yafehy.target_id = airport_heliport_aproncontamination_view_rbnbhz.id
left join master_join master_join_tilugb on airport_heliport.apron_ts.id = master_join_tilugb.source_id
left join notes.note_view notes_note_view_jppvrg on master_join_tilugb.target_id = notes_note_view_jppvrg.id
left join master_join master_join_sloopg on airport_heliport.apron_ts.id = master_join_sloopg.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_rtcvfc on master_join_sloopg.target_id = airport_heliport_apronareaavailability_view_rtcvfc.id
where airport_heliport.apron.feature_status = 'APPROVED'
  and airport_heliport.apron_ts.feature_status = 'APPROVED'
group by
    airport_heliport.apron.id,
    airport_heliport.apron_ts.id,
    airport_heliport.apron_tsp.id,
    airport_heliport.apron.identifier,
    airport_heliport.apron_ts.interpretation,
    airport_heliport.apron_ts.sequence_number,
    airport_heliport.apron_ts.correction_number,
    airport_heliport.apron_ts.valid_time_begin,
    airport_heliport.apron_ts.valid_time_end,
    airport_heliport.apron_ts.feature_lifetime_begin,
    airport_heliport.apron_ts.feature_lifetime_end,
    airport_heliport.apron_ts.name_value,
    airport_heliport.apron_ts.name_nilreason,
    airport_heliport.apron_ts.abandoned_value,
    airport_heliport.apron_ts.abandoned_nilreason,
    airport_heliport_surfacecharacteristics_view_cxwacc.id,
    airport_heliport_airportheliport_pt_hoqiuy.title,
    airport_heliport_airportheliport_pt_hoqiuy.nilreason[1],
    airport_heliport_airportheliport_pt_hoqiuy.href
order by apron.identifier, apron_ts.sequence_number, apron_ts.correction_number DESC;
create index on airport_heliport.apron_view (id);
-- ArrestingGearTimeSliceType
-- ['geometry.elevatedcurve_view', 'geometry.elevatedpoint_view', 'airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.arrestinggear_view cascade;
create materialized view airport_heliport.arrestinggear_view as
select distinct on (arrestinggear.identifier,arrestinggear_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.arrestinggear.id,
    airport_heliport.arrestinggear_ts.id as ts_id,
    airport_heliport.arrestinggear_tsp.id as tsp_id,
    airport_heliport.arrestinggear.identifier,
    airport_heliport.arrestinggear_ts.interpretation,
    airport_heliport.arrestinggear_ts.sequence_number,
    airport_heliport.arrestinggear_ts.correction_number,
    airport_heliport.arrestinggear_ts.valid_time_begin,
    airport_heliport.arrestinggear_ts.valid_time_end,
    airport_heliport.arrestinggear_ts.feature_lifetime_begin,
    airport_heliport.arrestinggear_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.arrestinggear_ts.status_value as varchar), '(' || airport_heliport.arrestinggear_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.arrestinggear_ts.engagedevice_value as varchar), '(' || airport_heliport.arrestinggear_ts.engagedevice_nilreason || ')') as engagedevice,
    coalesce(cast(airport_heliport.arrestinggear_ts.absorbtype_value as varchar), '(' || airport_heliport.arrestinggear_ts.absorbtype_nilreason || ')') as absorbtype,
    coalesce(cast(airport_heliport.arrestinggear_ts.bidirectional_value as varchar), '(' || airport_heliport.arrestinggear_ts.bidirectional_nilreason || ')') as bidirectional,
    coalesce(cast(airport_heliport.arrestinggear_ts.length_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.length_uom, '(' || airport_heliport.arrestinggear_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.arrestinggear_ts.width_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.width_uom, '(' || airport_heliport.arrestinggear_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.arrestinggear_ts.location_value as varchar) || ' ' || airport_heliport.arrestinggear_ts.location_uom, '(' || airport_heliport.arrestinggear_ts.location_nilreason || ')') as location,
    airport_heliport_surfacecharacteristics_view_lofxwr.id AS surfaceproperties,
    geometry_elevatedcurve_view_pqaluc.geom AS extentcurveextent_geom,
    geometry_elevatedcurve_view_pqaluc.elevation AS extentcurveextent_elevation,
    geometry_elevatedcurve_view_pqaluc.geoidUndulation AS extentcurveextent_geoidundulation,
    geometry_elevatedcurve_view_pqaluc.verticalDatum AS extentcurveextent_verticaldatum,
    geometry_elevatedcurve_view_pqaluc.verticalAccuracy AS extentcurveextent_verticalaccuracy,
    geometry_elevatedcurve_view_pqaluc.horizontalAccuracy AS extentcurveextent_horizontalaccuracy,
    geometry_elevatedsurface_view_nvylqf.geom AS extentsurfaceextent_geom,
    geometry_elevatedsurface_view_nvylqf.elevation AS extentsurfaceextent_elevation,
    geometry_elevatedsurface_view_nvylqf.geoidUndulation AS extentsurfaceextent_geoidundulation,
    geometry_elevatedsurface_view_nvylqf.verticalDatum AS extentsurfaceextent_verticaldatum,
    geometry_elevatedsurface_view_nvylqf.verticalAccuracy AS extentsurfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_nvylqf.horizontalAccuracy AS extentsurfaceextent_horizontalaccuracy,
    geometry_elevatedpoint_view_lkxurz.geom AS extentpointextent_geom,
    ST_X(geometry_elevatedpoint_view_lkxurz.geom) AS extentpointextent_longitude,
    ST_Y(geometry_elevatedpoint_view_lkxurz.geom) AS extentpointextent_latitude,
    geometry_elevatedpoint_view_lkxurz.elevation AS extentpointextent_elevation,
    geometry_elevatedpoint_view_lkxurz.geoidUndulation AS extentpointextent_geoidundulation,
    geometry_elevatedpoint_view_lkxurz.verticalDatum AS extentpointextent_verticaldatum,
    geometry_elevatedpoint_view_lkxurz.verticalAccuracy AS extentpointextent_verticalaccuracy,
    geometry_elevatedpoint_view_lkxurz.horizontalAccuracy AS extentpointextent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_jcenen.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_jcenen.title AS varchar), '(' || airport_heliport_runwaydirection_pt_jcenen.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_jcenen.href)) AS runwaydirection,
    jsonb_agg(DISTINCT notes_note_view_wohpba.*) AS annotation
from airport_heliport.arrestinggear 
inner join master_join mj2 on airport_heliport.arrestinggear.id = mj2.source_id
inner join airport_heliport.arrestinggear_tsp on mj2.target_id = airport_heliport.arrestinggear_tsp.id
inner join airport_heliport.arrestinggear_ts on airport_heliport.arrestinggear_tsp.arrestinggeartimeslice_id = airport_heliport.arrestinggear_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_lofxwr on airport_heliport.arrestinggear_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_lofxwr.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_pqaluc on airport_heliport.arrestinggear_ts.extent_curveextent_id = geometry_elevatedcurve_view_pqaluc.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_nvylqf on airport_heliport.arrestinggear_ts.extent_surfaceextent_id = geometry_elevatedsurface_view_nvylqf.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_lkxurz on airport_heliport.arrestinggear_ts.extent_pointextent_id = geometry_elevatedpoint_view_lkxurz.id
left join master_join master_join_tnnlfz on airport_heliport.arrestinggear_ts.id = master_join_tnnlfz.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_jcenen on master_join_tnnlfz.target_id = airport_heliport_runwaydirection_pt_jcenen.id
left join master_join master_join_anbtjo on airport_heliport.arrestinggear_ts.id = master_join_anbtjo.source_id
left join notes.note_view notes_note_view_wohpba on master_join_anbtjo.target_id = notes_note_view_wohpba.id
where airport_heliport.arrestinggear.feature_status = 'APPROVED'
  and airport_heliport.arrestinggear_ts.feature_status = 'APPROVED'
group by
    airport_heliport.arrestinggear.id,
    airport_heliport.arrestinggear_ts.id,
    airport_heliport.arrestinggear_tsp.id,
    airport_heliport.arrestinggear.identifier,
    airport_heliport.arrestinggear_ts.interpretation,
    airport_heliport.arrestinggear_ts.sequence_number,
    airport_heliport.arrestinggear_ts.correction_number,
    airport_heliport.arrestinggear_ts.valid_time_begin,
    airport_heliport.arrestinggear_ts.valid_time_end,
    airport_heliport.arrestinggear_ts.feature_lifetime_begin,
    airport_heliport.arrestinggear_ts.feature_lifetime_end,
    airport_heliport.arrestinggear_ts.status_value,
    airport_heliport.arrestinggear_ts.status_nilreason,
    airport_heliport.arrestinggear_ts.engagedevice_value,
    airport_heliport.arrestinggear_ts.engagedevice_nilreason,
    airport_heliport.arrestinggear_ts.absorbtype_value,
    airport_heliport.arrestinggear_ts.absorbtype_nilreason,
    airport_heliport.arrestinggear_ts.bidirectional_value,
    airport_heliport.arrestinggear_ts.bidirectional_nilreason,
    airport_heliport.arrestinggear_ts.length_value,
    airport_heliport.arrestinggear_ts.length_uom,
    airport_heliport.arrestinggear_ts.length_nilreason,
    airport_heliport.arrestinggear_ts.width_value,
    airport_heliport.arrestinggear_ts.width_uom,
    airport_heliport.arrestinggear_ts.width_nilreason,
    airport_heliport.arrestinggear_ts.location_value,
    airport_heliport.arrestinggear_ts.location_uom,
    airport_heliport.arrestinggear_ts.location_nilreason,
    airport_heliport_surfacecharacteristics_view_lofxwr.id,
    geometry_elevatedcurve_view_pqaluc.geom,
    geometry_elevatedcurve_view_pqaluc.elevation,
    geometry_elevatedcurve_view_pqaluc.geoidUndulation,
    geometry_elevatedcurve_view_pqaluc.verticalDatum,
    geometry_elevatedcurve_view_pqaluc.verticalAccuracy,
    geometry_elevatedcurve_view_pqaluc.horizontalAccuracy,
    geometry_elevatedsurface_view_nvylqf.geom,
    geometry_elevatedsurface_view_nvylqf.elevation,
    geometry_elevatedsurface_view_nvylqf.geoidUndulation,
    geometry_elevatedsurface_view_nvylqf.verticalDatum,
    geometry_elevatedsurface_view_nvylqf.verticalAccuracy,
    geometry_elevatedsurface_view_nvylqf.horizontalAccuracy,
    geometry_elevatedpoint_view_lkxurz.geom,
    geometry_elevatedpoint_view_lkxurz.elevation,
    geometry_elevatedpoint_view_lkxurz.geoidUndulation,
    geometry_elevatedpoint_view_lkxurz.verticalDatum,
    geometry_elevatedpoint_view_lkxurz.verticalAccuracy,
    geometry_elevatedpoint_view_lkxurz.horizontalAccuracy
order by arrestinggear.identifier, arrestinggear_ts.sequence_number, arrestinggear_ts.correction_number DESC;
create index on airport_heliport.arrestinggear_view (id);
-- ArrivalFeederLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.arrivalfeederleg_view cascade;
create materialized view procedure.arrivalfeederleg_view as
select distinct on (arrivalfeederleg.identifier,arrivalfeederleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.arrivalfeederleg.id,
    procedure.arrivalfeederleg_ts.id as ts_id,
    procedure.arrivalfeederleg_tsp.id as tsp_id,
    procedure.arrivalfeederleg.identifier,
    procedure.arrivalfeederleg_ts.interpretation,
    procedure.arrivalfeederleg_ts.sequence_number,
    procedure.arrivalfeederleg_ts.correction_number,
    procedure.arrivalfeederleg_ts.valid_time_begin,
    procedure.arrivalfeederleg_ts.valid_time_end,
    procedure.arrivalfeederleg_ts.feature_lifetime_begin,
    procedure.arrivalfeederleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.arrivalfeederleg_ts.endconditiondesignator_value as varchar), '(' || procedure.arrivalfeederleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.arrivalfeederleg_ts.legpath_value as varchar), '(' || procedure.arrivalfeederleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.arrivalfeederleg_ts.legtypearinc_value as varchar), '(' || procedure.arrivalfeederleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.arrivalfeederleg_ts.course_value as varchar), '(' || procedure.arrivalfeederleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.arrivalfeederleg_ts.coursetype_value as varchar), '(' || procedure.arrivalfeederleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.arrivalfeederleg_ts.coursedirection_value as varchar), '(' || procedure.arrivalfeederleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.arrivalfeederleg_ts.turndirection_value as varchar), '(' || procedure.arrivalfeederleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedinterpretation_value as varchar), '(' || procedure.arrivalfeederleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.arrivalfeederleg_ts.bankangle_value as varchar), '(' || procedure.arrivalfeederleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.arrivalfeederleg_ts.procedureturnrequired_value as varchar), '(' || procedure.arrivalfeederleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.arrivalfeederleg_ts.upperlimitreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.lowerlimitreference_value as varchar), '(' || procedure.arrivalfeederleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.arrivalfeederleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.arrivalfeederleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.arrivalfeederleg_ts.verticalangle_value as varchar), '(' || procedure.arrivalfeederleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.arrivalfeederleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.arrivalfeederleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.arrivalfeederleg_ts.speedlimit_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.speedlimit_uom, '(' || procedure.arrivalfeederleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.arrivalfeederleg_ts.length_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.length_uom, '(' || procedure.arrivalfeederleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.arrivalfeederleg_ts.duration_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.duration_uom, '(' || procedure.arrivalfeederleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.arrivalfeederleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.upperlimitaltitude_uom, '(' || procedure.arrivalfeederleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.arrivalfeederleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.lowerlimitaltitude_uom, '(' || procedure.arrivalfeederleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.arrivalfeederleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.arrivalfeederleg_ts.altitudeoverrideatc_uom, '(' || procedure.arrivalfeederleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_enwfjn.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_pfhirf.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_avylbw.id AS arccentre,
    geometry_curve_view_jlgerq.geom AS trajectory_geom,
    geometry_curve_view_jlgerq.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_gzcxmy.title as varchar), '(' || navaids_points_angleindication_pt_gzcxmy.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_gzcxmy.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_akqfpo.title as varchar), '(' || navaids_points_distanceindication_pt_akqfpo.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_akqfpo.href AS distance_href,
    procedure_holdinguse_view_apaoaj.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_fykhmx.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_fykhmx.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_fykhmx.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_sszrol.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_jyqnze.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_lonpqp.*) AS annotation
from procedure.arrivalfeederleg 
inner join master_join mj2 on procedure.arrivalfeederleg.id = mj2.source_id
inner join procedure.arrivalfeederleg_tsp on mj2.target_id = procedure.arrivalfeederleg_tsp.id
inner join procedure.arrivalfeederleg_ts on procedure.arrivalfeederleg_tsp.arrivalfeederlegtimeslice_id = procedure.arrivalfeederleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_enwfjn on procedure.arrivalfeederleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_enwfjn.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_pfhirf on procedure.arrivalfeederleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_pfhirf.id
left join geometry.curve_view geometry_curve_view_jlgerq on procedure.arrivalfeederleg_ts.trajectory_id = geometry_curve_view_jlgerq.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_avylbw on procedure.arrivalfeederleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_avylbw.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_gzcxmy on procedure.arrivalfeederleg_ts.angle_id = navaids_points_angleindication_pt_gzcxmy.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_akqfpo on procedure.arrivalfeederleg_ts.distance_id = navaids_points_distanceindication_pt_akqfpo.id
left join procedure.holdinguse_view procedure_holdinguse_view_apaoaj on procedure.arrivalfeederleg_ts.holding_id = procedure_holdinguse_view_apaoaj.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_fykhmx on procedure.arrivalfeederleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_fykhmx.id
left join master_join master_join_iplmdw on procedure.arrivalfeederleg_ts.id = master_join_iplmdw.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_sszrol on master_join_iplmdw.target_id = shared_aircraftcharacteristic_view_sszrol.id
left join master_join master_join_olamqq on procedure.arrivalfeederleg_ts.id = master_join_olamqq.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_jyqnze on master_join_olamqq.target_id = shared_obstacleassessmentarea_view_jyqnze.id
left join master_join master_join_aavcbu on procedure.arrivalfeederleg_ts.id = master_join_aavcbu.source_id
left join notes.note_view notes_note_view_lonpqp on master_join_aavcbu.target_id = notes_note_view_lonpqp.id
where procedure.arrivalfeederleg.feature_status = 'APPROVED'
  and procedure.arrivalfeederleg_ts.feature_status = 'APPROVED'
group by
    procedure.arrivalfeederleg.id,
    procedure.arrivalfeederleg_ts.id,
    procedure.arrivalfeederleg_tsp.id,
    procedure.arrivalfeederleg.identifier,
    procedure.arrivalfeederleg_ts.interpretation,
    procedure.arrivalfeederleg_ts.sequence_number,
    procedure.arrivalfeederleg_ts.correction_number,
    procedure.arrivalfeederleg_ts.valid_time_begin,
    procedure.arrivalfeederleg_ts.valid_time_end,
    procedure.arrivalfeederleg_ts.feature_lifetime_begin,
    procedure.arrivalfeederleg_ts.feature_lifetime_end,
    procedure.arrivalfeederleg_ts.endconditiondesignator_value,
    procedure.arrivalfeederleg_ts.endconditiondesignator_nilreason,
    procedure.arrivalfeederleg_ts.legpath_value,
    procedure.arrivalfeederleg_ts.legpath_nilreason,
    procedure.arrivalfeederleg_ts.legtypearinc_value,
    procedure.arrivalfeederleg_ts.legtypearinc_nilreason,
    procedure.arrivalfeederleg_ts.course_value,
    procedure.arrivalfeederleg_ts.course_nilreason,
    procedure.arrivalfeederleg_ts.coursetype_value,
    procedure.arrivalfeederleg_ts.coursetype_nilreason,
    procedure.arrivalfeederleg_ts.coursedirection_value,
    procedure.arrivalfeederleg_ts.coursedirection_nilreason,
    procedure.arrivalfeederleg_ts.turndirection_value,
    procedure.arrivalfeederleg_ts.turndirection_nilreason,
    procedure.arrivalfeederleg_ts.speedreference_value,
    procedure.arrivalfeederleg_ts.speedreference_nilreason,
    procedure.arrivalfeederleg_ts.speedinterpretation_value,
    procedure.arrivalfeederleg_ts.speedinterpretation_nilreason,
    procedure.arrivalfeederleg_ts.bankangle_value,
    procedure.arrivalfeederleg_ts.bankangle_nilreason,
    procedure.arrivalfeederleg_ts.procedureturnrequired_value,
    procedure.arrivalfeederleg_ts.procedureturnrequired_nilreason,
    procedure.arrivalfeederleg_ts.upperlimitreference_value,
    procedure.arrivalfeederleg_ts.upperlimitreference_nilreason,
    procedure.arrivalfeederleg_ts.lowerlimitreference_value,
    procedure.arrivalfeederleg_ts.lowerlimitreference_nilreason,
    procedure.arrivalfeederleg_ts.altitudeinterpretation_value,
    procedure.arrivalfeederleg_ts.altitudeinterpretation_nilreason,
    procedure.arrivalfeederleg_ts.altitudeoverridereference_value,
    procedure.arrivalfeederleg_ts.altitudeoverridereference_nilreason,
    procedure.arrivalfeederleg_ts.verticalangle_value,
    procedure.arrivalfeederleg_ts.verticalangle_nilreason,
    procedure.arrivalfeederleg_ts.requirednavigationperformance_value,
    procedure.arrivalfeederleg_ts.requirednavigationperformance_nilreason,
    procedure.arrivalfeederleg_ts.speedlimit_value,
    procedure.arrivalfeederleg_ts.speedlimit_uom,
    procedure.arrivalfeederleg_ts.speedlimit_nilreason,
    procedure.arrivalfeederleg_ts.length_value,
    procedure.arrivalfeederleg_ts.length_uom,
    procedure.arrivalfeederleg_ts.length_nilreason,
    procedure.arrivalfeederleg_ts.duration_value,
    procedure.arrivalfeederleg_ts.duration_uom,
    procedure.arrivalfeederleg_ts.duration_nilreason,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_value,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_uom,
    procedure.arrivalfeederleg_ts.upperlimitaltitude_nilreason,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_value,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_uom,
    procedure.arrivalfeederleg_ts.lowerlimitaltitude_nilreason,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_value,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_uom,
    procedure.arrivalfeederleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_enwfjn.id,
    navaids_points_terminalsegmentpoint_view_pfhirf.id,
    geometry_curve_view_jlgerq.geom,
    geometry_curve_view_jlgerq.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_avylbw.id,
    navaids_points_angleindication_pt_gzcxmy.title,
    navaids_points_angleindication_pt_gzcxmy.nilreason[1],
    navaids_points_angleindication_pt_gzcxmy.href,
    navaids_points_distanceindication_pt_akqfpo.title,
    navaids_points_distanceindication_pt_akqfpo.nilreason[1],
    navaids_points_distanceindication_pt_akqfpo.href,
    procedure_holdinguse_view_apaoaj.id,
    procedure_instrumentapproachprocedure_pt_fykhmx.title,
    procedure_instrumentapproachprocedure_pt_fykhmx.nilreason[1],
    procedure_instrumentapproachprocedure_pt_fykhmx.href
order by arrivalfeederleg.identifier, arrivalfeederleg_ts.sequence_number, arrivalfeederleg_ts.correction_number DESC;
create index on procedure.arrivalfeederleg_view (id);
-- ArrivalLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.arrivalleg_view cascade;
create materialized view procedure.arrivalleg_view as
select distinct on (arrivalleg.identifier,arrivalleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.arrivalleg.id,
    procedure.arrivalleg_ts.id as ts_id,
    procedure.arrivalleg_tsp.id as tsp_id,
    procedure.arrivalleg.identifier,
    procedure.arrivalleg_ts.interpretation,
    procedure.arrivalleg_ts.sequence_number,
    procedure.arrivalleg_ts.correction_number,
    procedure.arrivalleg_ts.valid_time_begin,
    procedure.arrivalleg_ts.valid_time_end,
    procedure.arrivalleg_ts.feature_lifetime_begin,
    procedure.arrivalleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.arrivalleg_ts.endconditiondesignator_value as varchar), '(' || procedure.arrivalleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.arrivalleg_ts.legpath_value as varchar), '(' || procedure.arrivalleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.arrivalleg_ts.legtypearinc_value as varchar), '(' || procedure.arrivalleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.arrivalleg_ts.course_value as varchar), '(' || procedure.arrivalleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.arrivalleg_ts.coursetype_value as varchar), '(' || procedure.arrivalleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.arrivalleg_ts.coursedirection_value as varchar), '(' || procedure.arrivalleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.arrivalleg_ts.turndirection_value as varchar), '(' || procedure.arrivalleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.arrivalleg_ts.speedreference_value as varchar), '(' || procedure.arrivalleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.arrivalleg_ts.speedinterpretation_value as varchar), '(' || procedure.arrivalleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.arrivalleg_ts.bankangle_value as varchar), '(' || procedure.arrivalleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.arrivalleg_ts.procedureturnrequired_value as varchar), '(' || procedure.arrivalleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.arrivalleg_ts.upperlimitreference_value as varchar), '(' || procedure.arrivalleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.arrivalleg_ts.lowerlimitreference_value as varchar), '(' || procedure.arrivalleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.arrivalleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.arrivalleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.arrivalleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.arrivalleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.arrivalleg_ts.verticalangle_value as varchar), '(' || procedure.arrivalleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.arrivalleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.arrivalleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.arrivalleg_ts.speedlimit_value as varchar) || ' ' || procedure.arrivalleg_ts.speedlimit_uom, '(' || procedure.arrivalleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.arrivalleg_ts.length_value as varchar) || ' ' || procedure.arrivalleg_ts.length_uom, '(' || procedure.arrivalleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.arrivalleg_ts.duration_value as varchar) || ' ' || procedure.arrivalleg_ts.duration_uom, '(' || procedure.arrivalleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.arrivalleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.arrivalleg_ts.upperlimitaltitude_uom, '(' || procedure.arrivalleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.arrivalleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.arrivalleg_ts.lowerlimitaltitude_uom, '(' || procedure.arrivalleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.arrivalleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.arrivalleg_ts.altitudeoverrideatc_uom, '(' || procedure.arrivalleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_jsjenw.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_xhxudo.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_czjrui.id AS arccentre,
    geometry_curve_view_cnpqhj.geom AS trajectory_geom,
    geometry_curve_view_cnpqhj.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_oqlopl.title as varchar), '(' || navaids_points_angleindication_pt_oqlopl.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_oqlopl.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_crduua.title as varchar), '(' || navaids_points_distanceindication_pt_crduua.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_crduua.href AS distance_href,
    procedure_holdinguse_view_bdmnhl.id AS holding,
    coalesce(cast(procedure_standardinstrumentarrival_pt_aqlbyt.title as varchar), '(' || procedure_standardinstrumentarrival_pt_aqlbyt.nilreason[1] || ')') AS arrival,
    procedure_standardinstrumentarrival_pt_aqlbyt.href AS arrival_href,
    jsonb_agg(shared_aircraftcharacteristic_view_rmmzvo.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_ylbklf.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_waudqx.*) AS annotation
from procedure.arrivalleg 
inner join master_join mj2 on procedure.arrivalleg.id = mj2.source_id
inner join procedure.arrivalleg_tsp on mj2.target_id = procedure.arrivalleg_tsp.id
inner join procedure.arrivalleg_ts on procedure.arrivalleg_tsp.arrivallegtimeslice_id = procedure.arrivalleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_jsjenw on procedure.arrivalleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_jsjenw.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_xhxudo on procedure.arrivalleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_xhxudo.id
left join geometry.curve_view geometry_curve_view_cnpqhj on procedure.arrivalleg_ts.trajectory_id = geometry_curve_view_cnpqhj.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_czjrui on procedure.arrivalleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_czjrui.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_oqlopl on procedure.arrivalleg_ts.angle_id = navaids_points_angleindication_pt_oqlopl.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_crduua on procedure.arrivalleg_ts.distance_id = navaids_points_distanceindication_pt_crduua.id
left join procedure.holdinguse_view procedure_holdinguse_view_bdmnhl on procedure.arrivalleg_ts.holding_id = procedure_holdinguse_view_bdmnhl.id
left join procedure.standardinstrumentarrival_pt procedure_standardinstrumentarrival_pt_aqlbyt on procedure.arrivalleg_ts.arrival_id = procedure_standardinstrumentarrival_pt_aqlbyt.id
left join master_join master_join_pxlawb on procedure.arrivalleg_ts.id = master_join_pxlawb.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_rmmzvo on master_join_pxlawb.target_id = shared_aircraftcharacteristic_view_rmmzvo.id
left join master_join master_join_kpapxr on procedure.arrivalleg_ts.id = master_join_kpapxr.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_ylbklf on master_join_kpapxr.target_id = shared_obstacleassessmentarea_view_ylbklf.id
left join master_join master_join_uigato on procedure.arrivalleg_ts.id = master_join_uigato.source_id
left join notes.note_view notes_note_view_waudqx on master_join_uigato.target_id = notes_note_view_waudqx.id
where procedure.arrivalleg.feature_status = 'APPROVED'
  and procedure.arrivalleg_ts.feature_status = 'APPROVED'
group by
    procedure.arrivalleg.id,
    procedure.arrivalleg_ts.id,
    procedure.arrivalleg_tsp.id,
    procedure.arrivalleg.identifier,
    procedure.arrivalleg_ts.interpretation,
    procedure.arrivalleg_ts.sequence_number,
    procedure.arrivalleg_ts.correction_number,
    procedure.arrivalleg_ts.valid_time_begin,
    procedure.arrivalleg_ts.valid_time_end,
    procedure.arrivalleg_ts.feature_lifetime_begin,
    procedure.arrivalleg_ts.feature_lifetime_end,
    procedure.arrivalleg_ts.endconditiondesignator_value,
    procedure.arrivalleg_ts.endconditiondesignator_nilreason,
    procedure.arrivalleg_ts.legpath_value,
    procedure.arrivalleg_ts.legpath_nilreason,
    procedure.arrivalleg_ts.legtypearinc_value,
    procedure.arrivalleg_ts.legtypearinc_nilreason,
    procedure.arrivalleg_ts.course_value,
    procedure.arrivalleg_ts.course_nilreason,
    procedure.arrivalleg_ts.coursetype_value,
    procedure.arrivalleg_ts.coursetype_nilreason,
    procedure.arrivalleg_ts.coursedirection_value,
    procedure.arrivalleg_ts.coursedirection_nilreason,
    procedure.arrivalleg_ts.turndirection_value,
    procedure.arrivalleg_ts.turndirection_nilreason,
    procedure.arrivalleg_ts.speedreference_value,
    procedure.arrivalleg_ts.speedreference_nilreason,
    procedure.arrivalleg_ts.speedinterpretation_value,
    procedure.arrivalleg_ts.speedinterpretation_nilreason,
    procedure.arrivalleg_ts.bankangle_value,
    procedure.arrivalleg_ts.bankangle_nilreason,
    procedure.arrivalleg_ts.procedureturnrequired_value,
    procedure.arrivalleg_ts.procedureturnrequired_nilreason,
    procedure.arrivalleg_ts.upperlimitreference_value,
    procedure.arrivalleg_ts.upperlimitreference_nilreason,
    procedure.arrivalleg_ts.lowerlimitreference_value,
    procedure.arrivalleg_ts.lowerlimitreference_nilreason,
    procedure.arrivalleg_ts.altitudeinterpretation_value,
    procedure.arrivalleg_ts.altitudeinterpretation_nilreason,
    procedure.arrivalleg_ts.altitudeoverridereference_value,
    procedure.arrivalleg_ts.altitudeoverridereference_nilreason,
    procedure.arrivalleg_ts.verticalangle_value,
    procedure.arrivalleg_ts.verticalangle_nilreason,
    procedure.arrivalleg_ts.requirednavigationperformance_value,
    procedure.arrivalleg_ts.requirednavigationperformance_nilreason,
    procedure.arrivalleg_ts.speedlimit_value,
    procedure.arrivalleg_ts.speedlimit_uom,
    procedure.arrivalleg_ts.speedlimit_nilreason,
    procedure.arrivalleg_ts.length_value,
    procedure.arrivalleg_ts.length_uom,
    procedure.arrivalleg_ts.length_nilreason,
    procedure.arrivalleg_ts.duration_value,
    procedure.arrivalleg_ts.duration_uom,
    procedure.arrivalleg_ts.duration_nilreason,
    procedure.arrivalleg_ts.upperlimitaltitude_value,
    procedure.arrivalleg_ts.upperlimitaltitude_uom,
    procedure.arrivalleg_ts.upperlimitaltitude_nilreason,
    procedure.arrivalleg_ts.lowerlimitaltitude_value,
    procedure.arrivalleg_ts.lowerlimitaltitude_uom,
    procedure.arrivalleg_ts.lowerlimitaltitude_nilreason,
    procedure.arrivalleg_ts.altitudeoverrideatc_value,
    procedure.arrivalleg_ts.altitudeoverrideatc_uom,
    procedure.arrivalleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_jsjenw.id,
    navaids_points_terminalsegmentpoint_view_xhxudo.id,
    geometry_curve_view_cnpqhj.geom,
    geometry_curve_view_cnpqhj.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_czjrui.id,
    navaids_points_angleindication_pt_oqlopl.title,
    navaids_points_angleindication_pt_oqlopl.nilreason[1],
    navaids_points_angleindication_pt_oqlopl.href,
    navaids_points_distanceindication_pt_crduua.title,
    navaids_points_distanceindication_pt_crduua.nilreason[1],
    navaids_points_distanceindication_pt_crduua.href,
    procedure_holdinguse_view_bdmnhl.id,
    procedure_standardinstrumentarrival_pt_aqlbyt.title,
    procedure_standardinstrumentarrival_pt_aqlbyt.nilreason[1],
    procedure_standardinstrumentarrival_pt_aqlbyt.href
order by arrivalleg.identifier, arrivalleg_ts.sequence_number, arrivalleg_ts.correction_number DESC;
create index on procedure.arrivalleg_view (id);
-- AuthorityForAirspaceTimeSliceType
-- ['notes.note_view']
drop materialized view if exists airspace.authorityforairspace_view cascade;
create materialized view airspace.authorityforairspace_view as
select distinct on (authorityforairspace.identifier,authorityforairspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.authorityforairspace.id,
    airspace.authorityforairspace_ts.id as ts_id,
    airspace.authorityforairspace_tsp.id as tsp_id,
    airspace.authorityforairspace.identifier,
    airspace.authorityforairspace_ts.interpretation,
    airspace.authorityforairspace_ts.sequence_number,
    airspace.authorityforairspace_ts.correction_number,
    airspace.authorityforairspace_ts.valid_time_begin,
    airspace.authorityforairspace_ts.valid_time_end,
    airspace.authorityforairspace_ts.feature_lifetime_begin,
    airspace.authorityforairspace_ts.feature_lifetime_end,
    coalesce(cast(airspace.authorityforairspace_ts.type_value as varchar), '(' || airspace.authorityforairspace_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation_organisationauthority_pt_ltenhw.title as varchar), '(' || organisation_organisationauthority_pt_ltenhw.nilreason[1] || ')') AS responsibleorganisation,
    organisation_organisationauthority_pt_ltenhw.href AS responsibleorganisation_href,
    coalesce(cast(airspace_airspace_pt_pguvsg.title as varchar), '(' || airspace_airspace_pt_pguvsg.nilreason[1] || ')') AS assignedairspace,
    airspace_airspace_pt_pguvsg.href AS assignedairspace_href,
    jsonb_agg(DISTINCT notes_note_view_mcojsw.*) AS annotation
from airspace.authorityforairspace 
inner join master_join mj2 on airspace.authorityforairspace.id = mj2.source_id
inner join airspace.authorityforairspace_tsp on mj2.target_id = airspace.authorityforairspace_tsp.id
inner join airspace.authorityforairspace_ts on airspace.authorityforairspace_tsp.authorityforairspacetimeslice_id = airspace.authorityforairspace_ts.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ltenhw on airspace.authorityforairspace_ts.responsibleorganisation_id = organisation_organisationauthority_pt_ltenhw.id
left join airspace.airspace_pt airspace_airspace_pt_pguvsg on airspace.authorityforairspace_ts.assignedairspace_id = airspace_airspace_pt_pguvsg.id
left join master_join master_join_apdxbu on airspace.authorityforairspace_ts.id = master_join_apdxbu.source_id
left join notes.note_view notes_note_view_mcojsw on master_join_apdxbu.target_id = notes_note_view_mcojsw.id
where airspace.authorityforairspace.feature_status = 'APPROVED'
  and airspace.authorityforairspace_ts.feature_status = 'APPROVED'
group by
    airspace.authorityforairspace.id,
    airspace.authorityforairspace_ts.id,
    airspace.authorityforairspace_tsp.id,
    airspace.authorityforairspace.identifier,
    airspace.authorityforairspace_ts.interpretation,
    airspace.authorityforairspace_ts.sequence_number,
    airspace.authorityforairspace_ts.correction_number,
    airspace.authorityforairspace_ts.valid_time_begin,
    airspace.authorityforairspace_ts.valid_time_end,
    airspace.authorityforairspace_ts.feature_lifetime_begin,
    airspace.authorityforairspace_ts.feature_lifetime_end,
    airspace.authorityforairspace_ts.type_value,
    airspace.authorityforairspace_ts.type_nilreason,
    organisation_organisationauthority_pt_ltenhw.title,
    organisation_organisationauthority_pt_ltenhw.nilreason[1],
    organisation_organisationauthority_pt_ltenhw.href,
    airspace_airspace_pt_pguvsg.title,
    airspace_airspace_pt_pguvsg.nilreason[1],
    airspace_airspace_pt_pguvsg.href
order by authorityforairspace.identifier, authorityforairspace_ts.sequence_number, authorityforairspace_ts.correction_number DESC;
create index on airspace.authorityforairspace_view (id);
-- AzimuthTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.azimuth_view cascade;
create materialized view navaids_points.azimuth_view as
select distinct on (azimuth.identifier,azimuth_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.azimuth.id,
    navaids_points.azimuth_ts.id as ts_id,
    navaids_points.azimuth_tsp.id as tsp_id,
    navaids_points.azimuth.identifier,
    navaids_points.azimuth_ts.interpretation,
    navaids_points.azimuth_ts.sequence_number,
    navaids_points.azimuth_ts.correction_number,
    navaids_points.azimuth_ts.valid_time_begin,
    navaids_points.azimuth_ts.valid_time_end,
    navaids_points.azimuth_ts.feature_lifetime_begin,
    navaids_points.azimuth_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.azimuth_ts.designator_value as varchar), '(' || navaids_points.azimuth_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.azimuth_ts.name_value as varchar), '(' || navaids_points.azimuth_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.azimuth_ts.emissionclass_value as varchar), '(' || navaids_points.azimuth_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.azimuth_ts.mobile_value as varchar), '(' || navaids_points.azimuth_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.azimuth_ts.magneticvariation_value as varchar), '(' || navaids_points.azimuth_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.azimuth_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.azimuth_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.azimuth_ts.datemagneticvariation_value as varchar), '(' || navaids_points.azimuth_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.azimuth_ts.flightchecked_value as varchar), '(' || navaids_points.azimuth_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.azimuth_ts.type_value as varchar), '(' || navaids_points.azimuth_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.azimuth_ts.truebearing_value as varchar), '(' || navaids_points.azimuth_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.azimuth_ts.truebearingaccuracy_value as varchar), '(' || navaids_points.azimuth_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(navaids_points.azimuth_ts.magneticbearing_value as varchar), '(' || navaids_points.azimuth_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.azimuth_ts.angleproportionalleft_value as varchar), '(' || navaids_points.azimuth_ts.angleproportionalleft_nilreason || ')') as angleproportionalleft,
    coalesce(cast(navaids_points.azimuth_ts.angleproportionalright_value as varchar), '(' || navaids_points.azimuth_ts.angleproportionalright_nilreason || ')') as angleproportionalright,
    coalesce(cast(navaids_points.azimuth_ts.anglecoverleft_value as varchar), '(' || navaids_points.azimuth_ts.anglecoverleft_nilreason || ')') as anglecoverleft,
    coalesce(cast(navaids_points.azimuth_ts.anglecoverright_value as varchar), '(' || navaids_points.azimuth_ts.anglecoverright_nilreason || ')') as anglecoverright,
    coalesce(cast(navaids_points.azimuth_ts.channel_value as varchar), '(' || navaids_points.azimuth_ts.channel_nilreason || ')') as channel,
    geometry_elevatedpoint_view_xyycrx.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_xyycrx.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_xyycrx.geom) AS location_latitude,
    geometry_elevatedpoint_view_xyycrx.elevation AS location_elevation,
    geometry_elevatedpoint_view_xyycrx.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_xyycrx.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_xyycrx.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_xyycrx.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_rewuol.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_ohjszb.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_mbqlkk.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_wxknhu.*) AS annotation
from navaids_points.azimuth 
inner join master_join mj2 on navaids_points.azimuth.id = mj2.source_id
inner join navaids_points.azimuth_tsp on mj2.target_id = navaids_points.azimuth_tsp.id
inner join navaids_points.azimuth_ts on navaids_points.azimuth_tsp.azimuthtimeslice_id = navaids_points.azimuth_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_xyycrx on navaids_points.azimuth_ts.location_id = geometry_elevatedpoint_view_xyycrx.id
left join master_join master_join_ucodvz on navaids_points.azimuth_ts.id = master_join_ucodvz.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_rewuol on master_join_ucodvz.target_id = navaids_points_authorityfornavaidequipment_view_rewuol.id
left join master_join master_join_ezmlbq on navaids_points.azimuth_ts.id = master_join_ezmlbq.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_ohjszb on master_join_ezmlbq.target_id = navaids_points_navaidequipmentmonitoring_view_ohjszb.id
left join master_join master_join_najbju on navaids_points.azimuth_ts.id = master_join_najbju.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_mbqlkk on master_join_najbju.target_id = navaids_points_navaidoperationalstatus_view_mbqlkk.id
left join master_join master_join_pthgyt on navaids_points.azimuth_ts.id = master_join_pthgyt.source_id
left join notes.note_view notes_note_view_wxknhu on master_join_pthgyt.target_id = notes_note_view_wxknhu.id
where navaids_points.azimuth.feature_status = 'APPROVED'
  and navaids_points.azimuth_ts.feature_status = 'APPROVED'
group by
    navaids_points.azimuth.id,
    navaids_points.azimuth_ts.id,
    navaids_points.azimuth_tsp.id,
    navaids_points.azimuth.identifier,
    navaids_points.azimuth_ts.interpretation,
    navaids_points.azimuth_ts.sequence_number,
    navaids_points.azimuth_ts.correction_number,
    navaids_points.azimuth_ts.valid_time_begin,
    navaids_points.azimuth_ts.valid_time_end,
    navaids_points.azimuth_ts.feature_lifetime_begin,
    navaids_points.azimuth_ts.feature_lifetime_end,
    navaids_points.azimuth_ts.designator_value,
    navaids_points.azimuth_ts.designator_nilreason,
    navaids_points.azimuth_ts.name_value,
    navaids_points.azimuth_ts.name_nilreason,
    navaids_points.azimuth_ts.emissionclass_value,
    navaids_points.azimuth_ts.emissionclass_nilreason,
    navaids_points.azimuth_ts.mobile_value,
    navaids_points.azimuth_ts.mobile_nilreason,
    navaids_points.azimuth_ts.magneticvariation_value,
    navaids_points.azimuth_ts.magneticvariation_nilreason,
    navaids_points.azimuth_ts.magneticvariationaccuracy_value,
    navaids_points.azimuth_ts.magneticvariationaccuracy_nilreason,
    navaids_points.azimuth_ts.datemagneticvariation_value,
    navaids_points.azimuth_ts.datemagneticvariation_nilreason,
    navaids_points.azimuth_ts.flightchecked_value,
    navaids_points.azimuth_ts.flightchecked_nilreason,
    navaids_points.azimuth_ts.type_value,
    navaids_points.azimuth_ts.type_nilreason,
    navaids_points.azimuth_ts.truebearing_value,
    navaids_points.azimuth_ts.truebearing_nilreason,
    navaids_points.azimuth_ts.truebearingaccuracy_value,
    navaids_points.azimuth_ts.truebearingaccuracy_nilreason,
    navaids_points.azimuth_ts.magneticbearing_value,
    navaids_points.azimuth_ts.magneticbearing_nilreason,
    navaids_points.azimuth_ts.angleproportionalleft_value,
    navaids_points.azimuth_ts.angleproportionalleft_nilreason,
    navaids_points.azimuth_ts.angleproportionalright_value,
    navaids_points.azimuth_ts.angleproportionalright_nilreason,
    navaids_points.azimuth_ts.anglecoverleft_value,
    navaids_points.azimuth_ts.anglecoverleft_nilreason,
    navaids_points.azimuth_ts.anglecoverright_value,
    navaids_points.azimuth_ts.anglecoverright_nilreason,
    navaids_points.azimuth_ts.channel_value,
    navaids_points.azimuth_ts.channel_nilreason,
    geometry_elevatedpoint_view_xyycrx.geom,
    geometry_elevatedpoint_view_xyycrx.elevation,
    geometry_elevatedpoint_view_xyycrx.geoidUndulation,
    geometry_elevatedpoint_view_xyycrx.verticalDatum,
    geometry_elevatedpoint_view_xyycrx.verticalAccuracy,
    geometry_elevatedpoint_view_xyycrx.horizontalAccuracy
order by azimuth.identifier, azimuth_ts.sequence_number, azimuth_ts.correction_number DESC;
create index on navaids_points.azimuth_view (id);
-- ChangeOverPointTimeSliceType
-- ['routes.routeportion_view', 'geometry.point_view', 'notes.note_view']
drop materialized view if exists routes.changeoverpoint_view cascade;
create materialized view routes.changeoverpoint_view as
select distinct on (changeoverpoint.identifier,changeoverpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.changeoverpoint.id,
    routes.changeoverpoint_ts.id as ts_id,
    routes.changeoverpoint_tsp.id as tsp_id,
    routes.changeoverpoint.identifier,
    routes.changeoverpoint_ts.interpretation,
    routes.changeoverpoint_ts.sequence_number,
    routes.changeoverpoint_ts.correction_number,
    routes.changeoverpoint_ts.valid_time_begin,
    routes.changeoverpoint_ts.valid_time_end,
    routes.changeoverpoint_ts.feature_lifetime_begin,
    routes.changeoverpoint_ts.feature_lifetime_end,
    coalesce(cast(routes.changeoverpoint_ts.distance_value as varchar) || ' ' || routes.changeoverpoint_ts.distance_uom, '(' || routes.changeoverpoint_ts.distance_nilreason || ')') as distance,
    coalesce(cast(navaids_points_designatedpoint_pt_uubuju.title as varchar), '(' || navaids_points_designatedpoint_pt_uubuju.nilreason[1] || ')') AS locationfixdesignatedpoint,
    navaids_points_designatedpoint_pt_uubuju.href AS locationfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ytivwx.title as varchar), '(' || navaids_points_navaid_pt_ytivwx.nilreason[1] || ')') AS locationnavaidsystem,
    navaids_points_navaid_pt_ytivwx.href AS locationnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ownwom.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ownwom.nilreason[1] || ')') AS locationaimingpoint,
    airport_heliport_touchdownliftoff_pt_ownwom.href AS locationaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_esskuw.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_esskuw.nilreason[1] || ')') AS locationrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_esskuw.href AS locationrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_qfsbfs.title as varchar), '(' || airport_heliport_airportheliport_pt_qfsbfs.nilreason[1] || ')') AS locationairportreferencepoint,
    airport_heliport_airportheliport_pt_qfsbfs.href AS locationairportreferencepoint_href,
    geometry_point_view_pktudm.geom AS locationposition_geom,
    ST_X(geometry_point_view_pktudm.geom) AS locationposition_longitude,
    ST_Y(geometry_point_view_pktudm.geom) AS locationposition_latitude,
    geometry_point_view_pktudm.horizontalAccuracy AS locationposition_horizontalaccuracy,
    routes_routeportion_view_mkulkj.id AS applicablerouteportion,
    jsonb_agg(DISTINCT notes_note_view_ubvwtu.*) AS annotation
from routes.changeoverpoint 
inner join master_join mj2 on routes.changeoverpoint.id = mj2.source_id
inner join routes.changeoverpoint_tsp on mj2.target_id = routes.changeoverpoint_tsp.id
inner join routes.changeoverpoint_ts on routes.changeoverpoint_tsp.changeoverpointtimeslice_id = routes.changeoverpoint_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_uubuju on routes.changeoverpoint_ts.location_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_uubuju.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ytivwx on routes.changeoverpoint_ts.location_navaidsystem_id = navaids_points_navaid_pt_ytivwx.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ownwom on routes.changeoverpoint_ts.location_aimingpoint_id = airport_heliport_touchdownliftoff_pt_ownwom.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_esskuw on routes.changeoverpoint_ts.location_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_esskuw.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_qfsbfs on routes.changeoverpoint_ts.location_airportreferencepoint_id = airport_heliport_airportheliport_pt_qfsbfs.id
left join geometry.point_view geometry_point_view_pktudm on routes.changeoverpoint_ts.location_position_id = geometry_point_view_pktudm.id
left join routes.routeportion_view routes_routeportion_view_mkulkj on routes.changeoverpoint_ts.applicablerouteportion_id = routes_routeportion_view_mkulkj.id
left join master_join master_join_omncgp on routes.changeoverpoint_ts.id = master_join_omncgp.source_id
left join notes.note_view notes_note_view_ubvwtu on master_join_omncgp.target_id = notes_note_view_ubvwtu.id
where routes.changeoverpoint.feature_status = 'APPROVED'
  and routes.changeoverpoint_ts.feature_status = 'APPROVED'
group by
    routes.changeoverpoint.id,
    routes.changeoverpoint_ts.id,
    routes.changeoverpoint_tsp.id,
    routes.changeoverpoint.identifier,
    routes.changeoverpoint_ts.interpretation,
    routes.changeoverpoint_ts.sequence_number,
    routes.changeoverpoint_ts.correction_number,
    routes.changeoverpoint_ts.valid_time_begin,
    routes.changeoverpoint_ts.valid_time_end,
    routes.changeoverpoint_ts.feature_lifetime_begin,
    routes.changeoverpoint_ts.feature_lifetime_end,
    routes.changeoverpoint_ts.distance_value,
    routes.changeoverpoint_ts.distance_uom,
    routes.changeoverpoint_ts.distance_nilreason,
    navaids_points_designatedpoint_pt_uubuju.title,
    navaids_points_designatedpoint_pt_uubuju.nilreason[1],
    navaids_points_designatedpoint_pt_uubuju.href,
    navaids_points_navaid_pt_ytivwx.title,
    navaids_points_navaid_pt_ytivwx.nilreason[1],
    navaids_points_navaid_pt_ytivwx.href,
    airport_heliport_touchdownliftoff_pt_ownwom.title,
    airport_heliport_touchdownliftoff_pt_ownwom.nilreason[1],
    airport_heliport_touchdownliftoff_pt_ownwom.href,
    airport_heliport_runwaycentrelinepoint_pt_esskuw.title,
    airport_heliport_runwaycentrelinepoint_pt_esskuw.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_esskuw.href,
    airport_heliport_airportheliport_pt_qfsbfs.title,
    airport_heliport_airportheliport_pt_qfsbfs.nilreason[1],
    airport_heliport_airportheliport_pt_qfsbfs.href,
    geometry_point_view_pktudm.geom,
    geometry_point_view_pktudm.horizontalAccuracy,
    routes_routeportion_view_mkulkj.id
order by changeoverpoint.identifier, changeoverpoint_ts.sequence_number, changeoverpoint_ts.correction_number DESC;
create index on routes.changeoverpoint_view (id);
-- CheckpointINSTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.checkpointins_view cascade;
create materialized view navaids_points.checkpointins_view as
select distinct on (checkpointins.identifier,checkpointins_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.checkpointins.id,
    navaids_points.checkpointins_ts.id as ts_id,
    navaids_points.checkpointins_tsp.id as tsp_id,
    navaids_points.checkpointins.identifier,
    navaids_points.checkpointins_ts.interpretation,
    navaids_points.checkpointins_ts.sequence_number,
    navaids_points.checkpointins_ts.correction_number,
    navaids_points.checkpointins_ts.valid_time_begin,
    navaids_points.checkpointins_ts.valid_time_end,
    navaids_points.checkpointins_ts.feature_lifetime_begin,
    navaids_points.checkpointins_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.checkpointins_ts.category_value as varchar), '(' || navaids_points.checkpointins_ts.category_nilreason || ')') as category,
    coalesce(cast(navaids_points.checkpointins_ts.upperlimitreference_value as varchar), '(' || navaids_points.checkpointins_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(navaids_points.checkpointins_ts.lowerlimitreference_value as varchar), '(' || navaids_points.checkpointins_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(navaids_points.checkpointins_ts.altitudeinterpretation_value as varchar), '(' || navaids_points.checkpointins_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(navaids_points.checkpointins_ts.angle_value as varchar), '(' || navaids_points.checkpointins_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.checkpointins_ts.upperlimit_value as varchar) || ' ' || navaids_points.checkpointins_ts.upperlimit_uom, '(' || navaids_points.checkpointins_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(navaids_points.checkpointins_ts.lowerlimit_value as varchar) || ' ' || navaids_points.checkpointins_ts.lowerlimit_uom, '(' || navaids_points.checkpointins_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(navaids_points.checkpointins_ts.distance_value as varchar) || ' ' || navaids_points.checkpointins_ts.distance_uom, '(' || navaids_points.checkpointins_ts.distance_nilreason || ')') as distance,
    geometry_elevatedpoint_view_wbwljv.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_wbwljv.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_wbwljv.geom) AS position_latitude,
    geometry_elevatedpoint_view_wbwljv.elevation AS position_elevation,
    geometry_elevatedpoint_view_wbwljv.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_wbwljv.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_wbwljv.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_wbwljv.horizontalAccuracy AS position_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_mkxkik.title as varchar), '(' || airport_heliport_airportheliport_pt_mkxkik.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_mkxkik.href AS airportheliport_href,
    jsonb_agg(DISTINCT notes_note_view_jbdacz.*) AS annotation
from navaids_points.checkpointins 
inner join master_join mj2 on navaids_points.checkpointins.id = mj2.source_id
inner join navaids_points.checkpointins_tsp on mj2.target_id = navaids_points.checkpointins_tsp.id
inner join navaids_points.checkpointins_ts on navaids_points.checkpointins_tsp.checkpointinstimeslice_id = navaids_points.checkpointins_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_wbwljv on navaids_points.checkpointins_ts.position_id = geometry_elevatedpoint_view_wbwljv.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_mkxkik on navaids_points.checkpointins_ts.airportheliport_id = airport_heliport_airportheliport_pt_mkxkik.id
left join master_join master_join_mrfsgs on navaids_points.checkpointins_ts.id = master_join_mrfsgs.source_id
left join notes.note_view notes_note_view_jbdacz on master_join_mrfsgs.target_id = notes_note_view_jbdacz.id
where navaids_points.checkpointins.feature_status = 'APPROVED'
  and navaids_points.checkpointins_ts.feature_status = 'APPROVED'
group by
    navaids_points.checkpointins.id,
    navaids_points.checkpointins_ts.id,
    navaids_points.checkpointins_tsp.id,
    navaids_points.checkpointins.identifier,
    navaids_points.checkpointins_ts.interpretation,
    navaids_points.checkpointins_ts.sequence_number,
    navaids_points.checkpointins_ts.correction_number,
    navaids_points.checkpointins_ts.valid_time_begin,
    navaids_points.checkpointins_ts.valid_time_end,
    navaids_points.checkpointins_ts.feature_lifetime_begin,
    navaids_points.checkpointins_ts.feature_lifetime_end,
    navaids_points.checkpointins_ts.category_value,
    navaids_points.checkpointins_ts.category_nilreason,
    navaids_points.checkpointins_ts.upperlimitreference_value,
    navaids_points.checkpointins_ts.upperlimitreference_nilreason,
    navaids_points.checkpointins_ts.lowerlimitreference_value,
    navaids_points.checkpointins_ts.lowerlimitreference_nilreason,
    navaids_points.checkpointins_ts.altitudeinterpretation_value,
    navaids_points.checkpointins_ts.altitudeinterpretation_nilreason,
    navaids_points.checkpointins_ts.angle_value,
    navaids_points.checkpointins_ts.angle_nilreason,
    navaids_points.checkpointins_ts.upperlimit_value,
    navaids_points.checkpointins_ts.upperlimit_uom,
    navaids_points.checkpointins_ts.upperlimit_nilreason,
    navaids_points.checkpointins_ts.lowerlimit_value,
    navaids_points.checkpointins_ts.lowerlimit_uom,
    navaids_points.checkpointins_ts.lowerlimit_nilreason,
    navaids_points.checkpointins_ts.distance_value,
    navaids_points.checkpointins_ts.distance_uom,
    navaids_points.checkpointins_ts.distance_nilreason,
    geometry_elevatedpoint_view_wbwljv.geom,
    geometry_elevatedpoint_view_wbwljv.elevation,
    geometry_elevatedpoint_view_wbwljv.geoidUndulation,
    geometry_elevatedpoint_view_wbwljv.verticalDatum,
    geometry_elevatedpoint_view_wbwljv.verticalAccuracy,
    geometry_elevatedpoint_view_wbwljv.horizontalAccuracy,
    airport_heliport_airportheliport_pt_mkxkik.title,
    airport_heliport_airportheliport_pt_mkxkik.nilreason[1],
    airport_heliport_airportheliport_pt_mkxkik.href
order by checkpointins.identifier, checkpointins_ts.sequence_number, checkpointins_ts.correction_number DESC;
create index on navaids_points.checkpointins_view (id);
-- CheckpointVORTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.checkpointvor_view cascade;
create materialized view navaids_points.checkpointvor_view as
select distinct on (checkpointvor.identifier,checkpointvor_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.checkpointvor.id,
    navaids_points.checkpointvor_ts.id as ts_id,
    navaids_points.checkpointvor_tsp.id as tsp_id,
    navaids_points.checkpointvor.identifier,
    navaids_points.checkpointvor_ts.interpretation,
    navaids_points.checkpointvor_ts.sequence_number,
    navaids_points.checkpointvor_ts.correction_number,
    navaids_points.checkpointvor_ts.valid_time_begin,
    navaids_points.checkpointvor_ts.valid_time_end,
    navaids_points.checkpointvor_ts.feature_lifetime_begin,
    navaids_points.checkpointvor_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.checkpointvor_ts.category_value as varchar), '(' || navaids_points.checkpointvor_ts.category_nilreason || ')') as category,
    coalesce(cast(navaids_points.checkpointvor_ts.upperlimitreference_value as varchar), '(' || navaids_points.checkpointvor_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(navaids_points.checkpointvor_ts.lowerlimitreference_value as varchar), '(' || navaids_points.checkpointvor_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(navaids_points.checkpointvor_ts.altitudeinterpretation_value as varchar), '(' || navaids_points.checkpointvor_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(navaids_points.checkpointvor_ts.angle_value as varchar), '(' || navaids_points.checkpointvor_ts.angle_nilreason || ')') as angle,
    coalesce(cast(navaids_points.checkpointvor_ts.upperlimit_value as varchar) || ' ' || navaids_points.checkpointvor_ts.upperlimit_uom, '(' || navaids_points.checkpointvor_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(navaids_points.checkpointvor_ts.lowerlimit_value as varchar) || ' ' || navaids_points.checkpointvor_ts.lowerlimit_uom, '(' || navaids_points.checkpointvor_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(navaids_points.checkpointvor_ts.distance_value as varchar) || ' ' || navaids_points.checkpointvor_ts.distance_uom, '(' || navaids_points.checkpointvor_ts.distance_nilreason || ')') as distance,
    geometry_elevatedpoint_view_zqmusa.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_zqmusa.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_zqmusa.geom) AS position_latitude,
    geometry_elevatedpoint_view_zqmusa.elevation AS position_elevation,
    geometry_elevatedpoint_view_zqmusa.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_zqmusa.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_zqmusa.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_zqmusa.horizontalAccuracy AS position_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_gebqai.title as varchar), '(' || airport_heliport_airportheliport_pt_gebqai.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_gebqai.href AS airportheliport_href,
    coalesce(cast(navaids_points_vor_pt_mtcbky.title as varchar), '(' || navaids_points_vor_pt_mtcbky.nilreason[1] || ')') AS checkpointfacility,
    navaids_points_vor_pt_mtcbky.href AS checkpointfacility_href,
    jsonb_agg(DISTINCT notes_note_view_xcthwe.*) AS annotation
from navaids_points.checkpointvor 
inner join master_join mj2 on navaids_points.checkpointvor.id = mj2.source_id
inner join navaids_points.checkpointvor_tsp on mj2.target_id = navaids_points.checkpointvor_tsp.id
inner join navaids_points.checkpointvor_ts on navaids_points.checkpointvor_tsp.checkpointvortimeslice_id = navaids_points.checkpointvor_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_zqmusa on navaids_points.checkpointvor_ts.position_id = geometry_elevatedpoint_view_zqmusa.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_gebqai on navaids_points.checkpointvor_ts.airportheliport_id = airport_heliport_airportheliport_pt_gebqai.id
left join navaids_points.vor_pt navaids_points_vor_pt_mtcbky on navaids_points.checkpointvor_ts.checkpointfacility_id = navaids_points_vor_pt_mtcbky.id
left join master_join master_join_enrzsj on navaids_points.checkpointvor_ts.id = master_join_enrzsj.source_id
left join notes.note_view notes_note_view_xcthwe on master_join_enrzsj.target_id = notes_note_view_xcthwe.id
where navaids_points.checkpointvor.feature_status = 'APPROVED'
  and navaids_points.checkpointvor_ts.feature_status = 'APPROVED'
group by
    navaids_points.checkpointvor.id,
    navaids_points.checkpointvor_ts.id,
    navaids_points.checkpointvor_tsp.id,
    navaids_points.checkpointvor.identifier,
    navaids_points.checkpointvor_ts.interpretation,
    navaids_points.checkpointvor_ts.sequence_number,
    navaids_points.checkpointvor_ts.correction_number,
    navaids_points.checkpointvor_ts.valid_time_begin,
    navaids_points.checkpointvor_ts.valid_time_end,
    navaids_points.checkpointvor_ts.feature_lifetime_begin,
    navaids_points.checkpointvor_ts.feature_lifetime_end,
    navaids_points.checkpointvor_ts.category_value,
    navaids_points.checkpointvor_ts.category_nilreason,
    navaids_points.checkpointvor_ts.upperlimitreference_value,
    navaids_points.checkpointvor_ts.upperlimitreference_nilreason,
    navaids_points.checkpointvor_ts.lowerlimitreference_value,
    navaids_points.checkpointvor_ts.lowerlimitreference_nilreason,
    navaids_points.checkpointvor_ts.altitudeinterpretation_value,
    navaids_points.checkpointvor_ts.altitudeinterpretation_nilreason,
    navaids_points.checkpointvor_ts.angle_value,
    navaids_points.checkpointvor_ts.angle_nilreason,
    navaids_points.checkpointvor_ts.upperlimit_value,
    navaids_points.checkpointvor_ts.upperlimit_uom,
    navaids_points.checkpointvor_ts.upperlimit_nilreason,
    navaids_points.checkpointvor_ts.lowerlimit_value,
    navaids_points.checkpointvor_ts.lowerlimit_uom,
    navaids_points.checkpointvor_ts.lowerlimit_nilreason,
    navaids_points.checkpointvor_ts.distance_value,
    navaids_points.checkpointvor_ts.distance_uom,
    navaids_points.checkpointvor_ts.distance_nilreason,
    geometry_elevatedpoint_view_zqmusa.geom,
    geometry_elevatedpoint_view_zqmusa.elevation,
    geometry_elevatedpoint_view_zqmusa.geoidUndulation,
    geometry_elevatedpoint_view_zqmusa.verticalDatum,
    geometry_elevatedpoint_view_zqmusa.verticalAccuracy,
    geometry_elevatedpoint_view_zqmusa.horizontalAccuracy,
    airport_heliport_airportheliport_pt_gebqai.title,
    airport_heliport_airportheliport_pt_gebqai.nilreason[1],
    airport_heliport_airportheliport_pt_gebqai.href,
    navaids_points_vor_pt_mtcbky.title,
    navaids_points_vor_pt_mtcbky.nilreason[1],
    navaids_points_vor_pt_mtcbky.href
order by checkpointvor.identifier, checkpointvor_ts.sequence_number, checkpointvor_ts.correction_number DESC;
create index on navaids_points.checkpointvor_view (id);
-- CirclingAreaTimeSliceType
-- ['procedure.approachcondition_view', 'shared.aircraftcharacteristic_view', 'geometry.surface_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists public.circlingarea_view cascade;
create materialized view public.circlingarea_view as
select distinct on (circlingarea.identifier,circlingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    public.circlingarea.id,
    public.circlingarea_ts.id as ts_id,
    public.circlingarea_tsp.id as tsp_id,
    public.circlingarea.identifier,
    public.circlingarea_ts.interpretation,
    public.circlingarea_ts.sequence_number,
    public.circlingarea_ts.correction_number,
    public.circlingarea_ts.valid_time_begin,
    public.circlingarea_ts.valid_time_end,
    public.circlingarea_ts.feature_lifetime_begin,
    public.circlingarea_ts.feature_lifetime_end,
    geometry_surface_view_cxuqvt.geom AS extent_geom,
    geometry_surface_view_cxuqvt.horizontalAccuracy as extent_horizontalaccuracy,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_ultbph.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_ultbph.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_ultbph.href AS approach_href,
    shared_aircraftcharacteristic_view_byqwpl.id AS aircraftcategory,
    jsonb_agg(procedure_approachcondition_view_hjeobh.id) AS condition,
    jsonb_agg(shared_obstacleassessmentarea_view_xqyfdf.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_lytbim.*) AS annotation
from public.circlingarea 
inner join master_join mj2 on public.circlingarea.id = mj2.source_id
inner join public.circlingarea_tsp on mj2.target_id = public.circlingarea_tsp.id
inner join public.circlingarea_ts on public.circlingarea_tsp.circlingareatimeslice_id = public.circlingarea_ts.id
left join geometry.surface_view geometry_surface_view_cxuqvt on public.circlingarea_ts.extent_id = geometry_surface_view_cxuqvt.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_ultbph on public.circlingarea_ts.approach_id = procedure_instrumentapproachprocedure_pt_ultbph.id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_byqwpl on public.circlingarea_ts.aircraftcategory_id = shared_aircraftcharacteristic_view_byqwpl.id
left join master_join master_join_mauhle on public.circlingarea_ts.id = master_join_mauhle.source_id
left join procedure.approachcondition_view procedure_approachcondition_view_hjeobh on master_join_mauhle.target_id = procedure_approachcondition_view_hjeobh.id
left join master_join master_join_owmhqh on public.circlingarea_ts.id = master_join_owmhqh.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_xqyfdf on master_join_owmhqh.target_id = shared_obstacleassessmentarea_view_xqyfdf.id
left join master_join master_join_enmoyr on public.circlingarea_ts.id = master_join_enmoyr.source_id
left join notes.note_view notes_note_view_lytbim on master_join_enmoyr.target_id = notes_note_view_lytbim.id
where public.circlingarea.feature_status = 'APPROVED'
  and public.circlingarea_ts.feature_status = 'APPROVED'
group by
    public.circlingarea.id,
    public.circlingarea_ts.id,
    public.circlingarea_tsp.id,
    public.circlingarea.identifier,
    public.circlingarea_ts.interpretation,
    public.circlingarea_ts.sequence_number,
    public.circlingarea_ts.correction_number,
    public.circlingarea_ts.valid_time_begin,
    public.circlingarea_ts.valid_time_end,
    public.circlingarea_ts.feature_lifetime_begin,
    public.circlingarea_ts.feature_lifetime_end,
    geometry_surface_view_cxuqvt.geom,
    geometry_surface_view_cxuqvt.horizontalAccuracy,
    procedure_instrumentapproachprocedure_pt_ultbph.title,
    procedure_instrumentapproachprocedure_pt_ultbph.nilreason[1],
    procedure_instrumentapproachprocedure_pt_ultbph.href,
    shared_aircraftcharacteristic_view_byqwpl.id
order by circlingarea.identifier, circlingarea_ts.sequence_number, circlingarea_ts.correction_number DESC;
create index on public.circlingarea_view (id);
-- DeicingAreaMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.deicingareamarking_view cascade;
create materialized view airport_heliport.deicingareamarking_view as
select distinct on (deicingareamarking.identifier,deicingareamarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.deicingareamarking.id,
    airport_heliport.deicingareamarking_ts.id as ts_id,
    airport_heliport.deicingareamarking_tsp.id as tsp_id,
    airport_heliport.deicingareamarking.identifier,
    airport_heliport.deicingareamarking_ts.interpretation,
    airport_heliport.deicingareamarking_ts.sequence_number,
    airport_heliport.deicingareamarking_ts.correction_number,
    airport_heliport.deicingareamarking_ts.valid_time_begin,
    airport_heliport.deicingareamarking_ts.valid_time_end,
    airport_heliport.deicingareamarking_ts.feature_lifetime_begin,
    airport_heliport.deicingareamarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.deicingareamarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.deicingareamarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.deicingareamarking_ts.condition_value as varchar), '(' || airport_heliport.deicingareamarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_deicingarea_pt_dgxhbf.title as varchar), '(' || airport_heliport_deicingarea_pt_dgxhbf.nilreason[1] || ')') AS markeddeicingarea,
    airport_heliport_deicingarea_pt_dgxhbf.href AS markeddeicingarea_href,
    jsonb_agg(airport_heliport_markingelement_view_nhmwfb.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_agudgg.*) AS annotation
from airport_heliport.deicingareamarking 
inner join master_join mj2 on airport_heliport.deicingareamarking.id = mj2.source_id
inner join airport_heliport.deicingareamarking_tsp on mj2.target_id = airport_heliport.deicingareamarking_tsp.id
inner join airport_heliport.deicingareamarking_ts on airport_heliport.deicingareamarking_tsp.deicingareamarkingtimeslice_id = airport_heliport.deicingareamarking_ts.id
left join airport_heliport.deicingarea_pt airport_heliport_deicingarea_pt_dgxhbf on airport_heliport.deicingareamarking_ts.markeddeicingarea_id = airport_heliport_deicingarea_pt_dgxhbf.id
left join master_join master_join_ofucgh on airport_heliport.deicingareamarking_ts.id = master_join_ofucgh.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_nhmwfb on master_join_ofucgh.target_id = airport_heliport_markingelement_view_nhmwfb.id
left join master_join master_join_varvvg on airport_heliport.deicingareamarking_ts.id = master_join_varvvg.source_id
left join notes.note_view notes_note_view_agudgg on master_join_varvvg.target_id = notes_note_view_agudgg.id
where airport_heliport.deicingareamarking.feature_status = 'APPROVED'
  and airport_heliport.deicingareamarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.deicingareamarking.id,
    airport_heliport.deicingareamarking_ts.id,
    airport_heliport.deicingareamarking_tsp.id,
    airport_heliport.deicingareamarking.identifier,
    airport_heliport.deicingareamarking_ts.interpretation,
    airport_heliport.deicingareamarking_ts.sequence_number,
    airport_heliport.deicingareamarking_ts.correction_number,
    airport_heliport.deicingareamarking_ts.valid_time_begin,
    airport_heliport.deicingareamarking_ts.valid_time_end,
    airport_heliport.deicingareamarking_ts.feature_lifetime_begin,
    airport_heliport.deicingareamarking_ts.feature_lifetime_end,
    airport_heliport.deicingareamarking_ts.markingicaostandard_value,
    airport_heliport.deicingareamarking_ts.markingicaostandard_nilreason,
    airport_heliport.deicingareamarking_ts.condition_value,
    airport_heliport.deicingareamarking_ts.condition_nilreason,
    airport_heliport_deicingarea_pt_dgxhbf.title,
    airport_heliport_deicingarea_pt_dgxhbf.nilreason[1],
    airport_heliport_deicingarea_pt_dgxhbf.href
order by deicingareamarking.identifier, deicingareamarking_ts.sequence_number, deicingareamarking_ts.correction_number DESC;
create index on airport_heliport.deicingareamarking_view (id);
-- DeicingAreaTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.apronareaavailability_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.deicingarea_view cascade;
create materialized view airport_heliport.deicingarea_view as
select distinct on (deicingarea.identifier,deicingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.deicingarea.id,
    airport_heliport.deicingarea_ts.id as ts_id,
    airport_heliport.deicingarea_tsp.id as tsp_id,
    airport_heliport.deicingarea.identifier,
    airport_heliport.deicingarea_ts.interpretation,
    airport_heliport.deicingarea_ts.sequence_number,
    airport_heliport.deicingarea_ts.correction_number,
    airport_heliport.deicingarea_ts.valid_time_begin,
    airport_heliport.deicingarea_ts.valid_time_end,
    airport_heliport.deicingarea_ts.feature_lifetime_begin,
    airport_heliport.deicingarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport_apron_pt_lwclvx.title as varchar), '(' || airport_heliport_apron_pt_lwclvx.nilreason[1] || ')') AS associatedapron,
    airport_heliport_apron_pt_lwclvx.href AS associatedapron_href,
    coalesce(cast(airport_heliport_taxiway_pt_qxvxla.title as varchar), '(' || airport_heliport_taxiway_pt_qxvxla.nilreason[1] || ')') AS taxiwaylocation,
    airport_heliport_taxiway_pt_qxvxla.href AS taxiwaylocation_href,
    coalesce(cast(airport_heliport_aircraftstand_pt_ctdnrs.title as varchar), '(' || airport_heliport_aircraftstand_pt_ctdnrs.nilreason[1] || ')') AS standlocation,
    airport_heliport_aircraftstand_pt_ctdnrs.href AS standlocation_href,
    airport_heliport_surfacecharacteristics_view_avmxee.id AS surfaceproperties,
    geometry_elevatedsurface_view_wltzmy.geom AS extent_geom,
    geometry_elevatedsurface_view_wltzmy.elevation AS extent_elevation,
    geometry_elevatedsurface_view_wltzmy.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_wltzmy.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_wltzmy.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_wltzmy.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_jlseft.*) AS annotation,
    jsonb_agg(airport_heliport_apronareaavailability_view_znjvmd.id) AS availability
from airport_heliport.deicingarea 
inner join master_join mj2 on airport_heliport.deicingarea.id = mj2.source_id
inner join airport_heliport.deicingarea_tsp on mj2.target_id = airport_heliport.deicingarea_tsp.id
inner join airport_heliport.deicingarea_ts on airport_heliport.deicingarea_tsp.deicingareatimeslice_id = airport_heliport.deicingarea_ts.id
left join airport_heliport.apron_pt airport_heliport_apron_pt_lwclvx on airport_heliport.deicingarea_ts.associatedapron_id = airport_heliport_apron_pt_lwclvx.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_qxvxla on airport_heliport.deicingarea_ts.taxiwaylocation_id = airport_heliport_taxiway_pt_qxvxla.id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_ctdnrs on airport_heliport.deicingarea_ts.standlocation_id = airport_heliport_aircraftstand_pt_ctdnrs.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_avmxee on airport_heliport.deicingarea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_avmxee.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_wltzmy on airport_heliport.deicingarea_ts.extent_id = geometry_elevatedsurface_view_wltzmy.id
left join master_join master_join_pbsxff on airport_heliport.deicingarea_ts.id = master_join_pbsxff.source_id
left join notes.note_view notes_note_view_jlseft on master_join_pbsxff.target_id = notes_note_view_jlseft.id
left join master_join master_join_xpthds on airport_heliport.deicingarea_ts.id = master_join_xpthds.source_id
left join airport_heliport.apronareaavailability_view airport_heliport_apronareaavailability_view_znjvmd on master_join_xpthds.target_id = airport_heliport_apronareaavailability_view_znjvmd.id
where airport_heliport.deicingarea.feature_status = 'APPROVED'
  and airport_heliport.deicingarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.deicingarea.id,
    airport_heliport.deicingarea_ts.id,
    airport_heliport.deicingarea_tsp.id,
    airport_heliport.deicingarea.identifier,
    airport_heliport.deicingarea_ts.interpretation,
    airport_heliport.deicingarea_ts.sequence_number,
    airport_heliport.deicingarea_ts.correction_number,
    airport_heliport.deicingarea_ts.valid_time_begin,
    airport_heliport.deicingarea_ts.valid_time_end,
    airport_heliport.deicingarea_ts.feature_lifetime_begin,
    airport_heliport.deicingarea_ts.feature_lifetime_end,
    airport_heliport_apron_pt_lwclvx.title,
    airport_heliport_apron_pt_lwclvx.nilreason[1],
    airport_heliport_apron_pt_lwclvx.href,
    airport_heliport_taxiway_pt_qxvxla.title,
    airport_heliport_taxiway_pt_qxvxla.nilreason[1],
    airport_heliport_taxiway_pt_qxvxla.href,
    airport_heliport_aircraftstand_pt_ctdnrs.title,
    airport_heliport_aircraftstand_pt_ctdnrs.nilreason[1],
    airport_heliport_aircraftstand_pt_ctdnrs.href,
    airport_heliport_surfacecharacteristics_view_avmxee.id,
    geometry_elevatedsurface_view_wltzmy.geom,
    geometry_elevatedsurface_view_wltzmy.elevation,
    geometry_elevatedsurface_view_wltzmy.geoidUndulation,
    geometry_elevatedsurface_view_wltzmy.verticalDatum,
    geometry_elevatedsurface_view_wltzmy.verticalAccuracy,
    geometry_elevatedsurface_view_wltzmy.horizontalAccuracy
order by deicingarea.identifier, deicingarea_ts.sequence_number, deicingarea_ts.correction_number DESC;
create index on airport_heliport.deicingarea_view (id);
-- DepartureLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'procedure.departurearrivalcondition_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.departureleg_view cascade;
create materialized view procedure.departureleg_view as
select distinct on (departureleg.identifier,departureleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.departureleg.id,
    procedure.departureleg_ts.id as ts_id,
    procedure.departureleg_tsp.id as tsp_id,
    procedure.departureleg.identifier,
    procedure.departureleg_ts.interpretation,
    procedure.departureleg_ts.sequence_number,
    procedure.departureleg_ts.correction_number,
    procedure.departureleg_ts.valid_time_begin,
    procedure.departureleg_ts.valid_time_end,
    procedure.departureleg_ts.feature_lifetime_begin,
    procedure.departureleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.departureleg_ts.endconditiondesignator_value as varchar), '(' || procedure.departureleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.departureleg_ts.legpath_value as varchar), '(' || procedure.departureleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.departureleg_ts.legtypearinc_value as varchar), '(' || procedure.departureleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.departureleg_ts.course_value as varchar), '(' || procedure.departureleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.departureleg_ts.coursetype_value as varchar), '(' || procedure.departureleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.departureleg_ts.coursedirection_value as varchar), '(' || procedure.departureleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.departureleg_ts.turndirection_value as varchar), '(' || procedure.departureleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.departureleg_ts.speedreference_value as varchar), '(' || procedure.departureleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.departureleg_ts.speedinterpretation_value as varchar), '(' || procedure.departureleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.departureleg_ts.bankangle_value as varchar), '(' || procedure.departureleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.departureleg_ts.procedureturnrequired_value as varchar), '(' || procedure.departureleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.departureleg_ts.upperlimitreference_value as varchar), '(' || procedure.departureleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.departureleg_ts.lowerlimitreference_value as varchar), '(' || procedure.departureleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.departureleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.departureleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.departureleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.departureleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.departureleg_ts.verticalangle_value as varchar), '(' || procedure.departureleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.departureleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.departureleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.departureleg_ts.speedlimit_value as varchar) || ' ' || procedure.departureleg_ts.speedlimit_uom, '(' || procedure.departureleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.departureleg_ts.length_value as varchar) || ' ' || procedure.departureleg_ts.length_uom, '(' || procedure.departureleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.departureleg_ts.duration_value as varchar) || ' ' || procedure.departureleg_ts.duration_uom, '(' || procedure.departureleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.departureleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.departureleg_ts.upperlimitaltitude_uom, '(' || procedure.departureleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.departureleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.departureleg_ts.lowerlimitaltitude_uom, '(' || procedure.departureleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.departureleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.departureleg_ts.altitudeoverrideatc_uom, '(' || procedure.departureleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.departureleg_ts.minimumobstacleclearancealtitude_value as varchar) || ' ' || procedure.departureleg_ts.minimumobstacleclearancealtitude_uom, '(' || procedure.departureleg_ts.minimumobstacleclearancealtitude_nilreason || ')') as minimumobstacleclearancealtitude,
    navaids_points_terminalsegmentpoint_view_lakdas.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_qsqnqk.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_wqifjc.id AS arccentre,
    geometry_curve_view_xvcjuj.geom AS trajectory_geom,
    geometry_curve_view_xvcjuj.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_hwqwxn.title as varchar), '(' || navaids_points_angleindication_pt_hwqwxn.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_hwqwxn.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_qhxqdb.title as varchar), '(' || navaids_points_distanceindication_pt_qhxqdb.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_qhxqdb.href AS distance_href,
    procedure_holdinguse_view_oqwgdm.id AS holding,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_vuirpc.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_vuirpc.nilreason[1] || ')') AS departure,
    procedure_standardinstrumentdeparture_pt_vuirpc.href AS departure_href,
    jsonb_agg(shared_aircraftcharacteristic_view_dfhluv.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_gdixcz.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_nontnv.*) AS annotation,
    jsonb_agg(procedure_departurearrivalcondition_view_ffwqgu.id) AS condition
from procedure.departureleg 
inner join master_join mj2 on procedure.departureleg.id = mj2.source_id
inner join procedure.departureleg_tsp on mj2.target_id = procedure.departureleg_tsp.id
inner join procedure.departureleg_ts on procedure.departureleg_tsp.departurelegtimeslice_id = procedure.departureleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_lakdas on procedure.departureleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_lakdas.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_qsqnqk on procedure.departureleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_qsqnqk.id
left join geometry.curve_view geometry_curve_view_xvcjuj on procedure.departureleg_ts.trajectory_id = geometry_curve_view_xvcjuj.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_wqifjc on procedure.departureleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_wqifjc.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_hwqwxn on procedure.departureleg_ts.angle_id = navaids_points_angleindication_pt_hwqwxn.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_qhxqdb on procedure.departureleg_ts.distance_id = navaids_points_distanceindication_pt_qhxqdb.id
left join procedure.holdinguse_view procedure_holdinguse_view_oqwgdm on procedure.departureleg_ts.holding_id = procedure_holdinguse_view_oqwgdm.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_vuirpc on procedure.departureleg_ts.departure_id = procedure_standardinstrumentdeparture_pt_vuirpc.id
left join master_join master_join_erznzl on procedure.departureleg_ts.id = master_join_erznzl.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_dfhluv on master_join_erznzl.target_id = shared_aircraftcharacteristic_view_dfhluv.id
left join master_join master_join_bezuii on procedure.departureleg_ts.id = master_join_bezuii.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_gdixcz on master_join_bezuii.target_id = shared_obstacleassessmentarea_view_gdixcz.id
left join master_join master_join_gsyukx on procedure.departureleg_ts.id = master_join_gsyukx.source_id
left join notes.note_view notes_note_view_nontnv on master_join_gsyukx.target_id = notes_note_view_nontnv.id
left join master_join master_join_atipgc on procedure.departureleg_ts.id = master_join_atipgc.source_id
left join procedure.departurearrivalcondition_view procedure_departurearrivalcondition_view_ffwqgu on master_join_atipgc.target_id = procedure_departurearrivalcondition_view_ffwqgu.id
where procedure.departureleg.feature_status = 'APPROVED'
  and procedure.departureleg_ts.feature_status = 'APPROVED'
group by
    procedure.departureleg.id,
    procedure.departureleg_ts.id,
    procedure.departureleg_tsp.id,
    procedure.departureleg.identifier,
    procedure.departureleg_ts.interpretation,
    procedure.departureleg_ts.sequence_number,
    procedure.departureleg_ts.correction_number,
    procedure.departureleg_ts.valid_time_begin,
    procedure.departureleg_ts.valid_time_end,
    procedure.departureleg_ts.feature_lifetime_begin,
    procedure.departureleg_ts.feature_lifetime_end,
    procedure.departureleg_ts.endconditiondesignator_value,
    procedure.departureleg_ts.endconditiondesignator_nilreason,
    procedure.departureleg_ts.legpath_value,
    procedure.departureleg_ts.legpath_nilreason,
    procedure.departureleg_ts.legtypearinc_value,
    procedure.departureleg_ts.legtypearinc_nilreason,
    procedure.departureleg_ts.course_value,
    procedure.departureleg_ts.course_nilreason,
    procedure.departureleg_ts.coursetype_value,
    procedure.departureleg_ts.coursetype_nilreason,
    procedure.departureleg_ts.coursedirection_value,
    procedure.departureleg_ts.coursedirection_nilreason,
    procedure.departureleg_ts.turndirection_value,
    procedure.departureleg_ts.turndirection_nilreason,
    procedure.departureleg_ts.speedreference_value,
    procedure.departureleg_ts.speedreference_nilreason,
    procedure.departureleg_ts.speedinterpretation_value,
    procedure.departureleg_ts.speedinterpretation_nilreason,
    procedure.departureleg_ts.bankangle_value,
    procedure.departureleg_ts.bankangle_nilreason,
    procedure.departureleg_ts.procedureturnrequired_value,
    procedure.departureleg_ts.procedureturnrequired_nilreason,
    procedure.departureleg_ts.upperlimitreference_value,
    procedure.departureleg_ts.upperlimitreference_nilreason,
    procedure.departureleg_ts.lowerlimitreference_value,
    procedure.departureleg_ts.lowerlimitreference_nilreason,
    procedure.departureleg_ts.altitudeinterpretation_value,
    procedure.departureleg_ts.altitudeinterpretation_nilreason,
    procedure.departureleg_ts.altitudeoverridereference_value,
    procedure.departureleg_ts.altitudeoverridereference_nilreason,
    procedure.departureleg_ts.verticalangle_value,
    procedure.departureleg_ts.verticalangle_nilreason,
    procedure.departureleg_ts.requirednavigationperformance_value,
    procedure.departureleg_ts.requirednavigationperformance_nilreason,
    procedure.departureleg_ts.speedlimit_value,
    procedure.departureleg_ts.speedlimit_uom,
    procedure.departureleg_ts.speedlimit_nilreason,
    procedure.departureleg_ts.length_value,
    procedure.departureleg_ts.length_uom,
    procedure.departureleg_ts.length_nilreason,
    procedure.departureleg_ts.duration_value,
    procedure.departureleg_ts.duration_uom,
    procedure.departureleg_ts.duration_nilreason,
    procedure.departureleg_ts.upperlimitaltitude_value,
    procedure.departureleg_ts.upperlimitaltitude_uom,
    procedure.departureleg_ts.upperlimitaltitude_nilreason,
    procedure.departureleg_ts.lowerlimitaltitude_value,
    procedure.departureleg_ts.lowerlimitaltitude_uom,
    procedure.departureleg_ts.lowerlimitaltitude_nilreason,
    procedure.departureleg_ts.altitudeoverrideatc_value,
    procedure.departureleg_ts.altitudeoverrideatc_uom,
    procedure.departureleg_ts.altitudeoverrideatc_nilreason,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_value,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_uom,
    procedure.departureleg_ts.minimumobstacleclearancealtitude_nilreason,
    navaids_points_terminalsegmentpoint_view_lakdas.id,
    navaids_points_terminalsegmentpoint_view_qsqnqk.id,
    geometry_curve_view_xvcjuj.geom,
    geometry_curve_view_xvcjuj.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_wqifjc.id,
    navaids_points_angleindication_pt_hwqwxn.title,
    navaids_points_angleindication_pt_hwqwxn.nilreason[1],
    navaids_points_angleindication_pt_hwqwxn.href,
    navaids_points_distanceindication_pt_qhxqdb.title,
    navaids_points_distanceindication_pt_qhxqdb.nilreason[1],
    navaids_points_distanceindication_pt_qhxqdb.href,
    procedure_holdinguse_view_oqwgdm.id,
    procedure_standardinstrumentdeparture_pt_vuirpc.title,
    procedure_standardinstrumentdeparture_pt_vuirpc.nilreason[1],
    procedure_standardinstrumentdeparture_pt_vuirpc.href
order by departureleg.identifier, departureleg_ts.sequence_number, departureleg_ts.correction_number DESC;
create index on procedure.departureleg_view (id);
-- DesignatedPointTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.designatedpoint_view cascade;
create materialized view navaids_points.designatedpoint_view as
select distinct on (designatedpoint.identifier,designatedpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.designatedpoint.id,
    navaids_points.designatedpoint_ts.id as ts_id,
    navaids_points.designatedpoint_tsp.id as tsp_id,
    navaids_points.designatedpoint.identifier,
    navaids_points.designatedpoint_ts.interpretation,
    navaids_points.designatedpoint_ts.sequence_number,
    navaids_points.designatedpoint_ts.correction_number,
    navaids_points.designatedpoint_ts.valid_time_begin,
    navaids_points.designatedpoint_ts.valid_time_end,
    navaids_points.designatedpoint_ts.feature_lifetime_begin,
    navaids_points.designatedpoint_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.designatedpoint_ts.designator_value as varchar), '(' || navaids_points.designatedpoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.designatedpoint_ts.type_value as varchar), '(' || navaids_points.designatedpoint_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.designatedpoint_ts.name_value as varchar), '(' || navaids_points.designatedpoint_ts.name_nilreason || ')') as name,
    geometry_point_view_wuvjcw.geom AS location_geom,
    ST_X(geometry_point_view_wuvjcw.geom) AS location_longitude,
    ST_Y(geometry_point_view_wuvjcw.geom) AS location_latitude,
    geometry_point_view_wuvjcw.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_oarmat.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_oarmat.nilreason[1] || ')') AS aimingpoint,
    airport_heliport_touchdownliftoff_pt_oarmat.href AS aimingpoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_cwdvdn.title as varchar), '(' || airport_heliport_airportheliport_pt_cwdvdn.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_cwdvdn.href AS airportheliport_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_srxcnj.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_srxcnj.nilreason[1] || ')') AS runwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_srxcnj.href AS runwaypoint_href,
    jsonb_agg(DISTINCT notes_note_view_gopdgy.*) AS annotation
from navaids_points.designatedpoint 
inner join master_join mj2 on navaids_points.designatedpoint.id = mj2.source_id
inner join navaids_points.designatedpoint_tsp on mj2.target_id = navaids_points.designatedpoint_tsp.id
inner join navaids_points.designatedpoint_ts on navaids_points.designatedpoint_tsp.designatedpointtimeslice_id = navaids_points.designatedpoint_ts.id
left join geometry.point_view geometry_point_view_wuvjcw on navaids_points.designatedpoint_ts.location_id = geometry_point_view_wuvjcw.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_oarmat on navaids_points.designatedpoint_ts.aimingpoint_id = airport_heliport_touchdownliftoff_pt_oarmat.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cwdvdn on navaids_points.designatedpoint_ts.airportheliport_id = airport_heliport_airportheliport_pt_cwdvdn.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_srxcnj on navaids_points.designatedpoint_ts.runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_srxcnj.id
left join master_join master_join_swcojx on navaids_points.designatedpoint_ts.id = master_join_swcojx.source_id
left join notes.note_view notes_note_view_gopdgy on master_join_swcojx.target_id = notes_note_view_gopdgy.id
where navaids_points.designatedpoint.feature_status = 'APPROVED'
  and navaids_points.designatedpoint_ts.feature_status = 'APPROVED'
group by
    navaids_points.designatedpoint.id,
    navaids_points.designatedpoint_ts.id,
    navaids_points.designatedpoint_tsp.id,
    navaids_points.designatedpoint.identifier,
    navaids_points.designatedpoint_ts.interpretation,
    navaids_points.designatedpoint_ts.sequence_number,
    navaids_points.designatedpoint_ts.correction_number,
    navaids_points.designatedpoint_ts.valid_time_begin,
    navaids_points.designatedpoint_ts.valid_time_end,
    navaids_points.designatedpoint_ts.feature_lifetime_begin,
    navaids_points.designatedpoint_ts.feature_lifetime_end,
    navaids_points.designatedpoint_ts.designator_value,
    navaids_points.designatedpoint_ts.designator_nilreason,
    navaids_points.designatedpoint_ts.type_value,
    navaids_points.designatedpoint_ts.type_nilreason,
    navaids_points.designatedpoint_ts.name_value,
    navaids_points.designatedpoint_ts.name_nilreason,
    geometry_point_view_wuvjcw.geom,
    geometry_point_view_wuvjcw.horizontalAccuracy,
    airport_heliport_touchdownliftoff_pt_oarmat.title,
    airport_heliport_touchdownliftoff_pt_oarmat.nilreason[1],
    airport_heliport_touchdownliftoff_pt_oarmat.href,
    airport_heliport_airportheliport_pt_cwdvdn.title,
    airport_heliport_airportheliport_pt_cwdvdn.nilreason[1],
    airport_heliport_airportheliport_pt_cwdvdn.href,
    airport_heliport_runwaycentrelinepoint_pt_srxcnj.title,
    airport_heliport_runwaycentrelinepoint_pt_srxcnj.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_srxcnj.href
order by designatedpoint.identifier, designatedpoint_ts.sequence_number, designatedpoint_ts.correction_number DESC;
create index on navaids_points.designatedpoint_view (id);
-- DirectionFinderTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.directionfinder_view cascade;
create materialized view navaids_points.directionfinder_view as
select distinct on (directionfinder.identifier,directionfinder_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.directionfinder.id,
    navaids_points.directionfinder_ts.id as ts_id,
    navaids_points.directionfinder_tsp.id as tsp_id,
    navaids_points.directionfinder.identifier,
    navaids_points.directionfinder_ts.interpretation,
    navaids_points.directionfinder_ts.sequence_number,
    navaids_points.directionfinder_ts.correction_number,
    navaids_points.directionfinder_ts.valid_time_begin,
    navaids_points.directionfinder_ts.valid_time_end,
    navaids_points.directionfinder_ts.feature_lifetime_begin,
    navaids_points.directionfinder_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.directionfinder_ts.designator_value as varchar), '(' || navaids_points.directionfinder_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.directionfinder_ts.name_value as varchar), '(' || navaids_points.directionfinder_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.directionfinder_ts.emissionclass_value as varchar), '(' || navaids_points.directionfinder_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.directionfinder_ts.mobile_value as varchar), '(' || navaids_points.directionfinder_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.directionfinder_ts.magneticvariation_value as varchar), '(' || navaids_points.directionfinder_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.directionfinder_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.directionfinder_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.directionfinder_ts.datemagneticvariation_value as varchar), '(' || navaids_points.directionfinder_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.directionfinder_ts.flightchecked_value as varchar), '(' || navaids_points.directionfinder_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.directionfinder_ts.doppler_value as varchar), '(' || navaids_points.directionfinder_ts.doppler_nilreason || ')') as doppler,
    geometry_elevatedpoint_view_gyilqe.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_gyilqe.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_gyilqe.geom) AS location_latitude,
    geometry_elevatedpoint_view_gyilqe.elevation AS location_elevation,
    geometry_elevatedpoint_view_gyilqe.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_gyilqe.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_gyilqe.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_gyilqe.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_zjcexz.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_eopezt.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_yhguqp.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_btolgv.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_informationservice_pt_dupmst.id,
    'title', coalesce(cast(service_informationservice_pt_dupmst.title AS varchar), '(' || service_informationservice_pt_dupmst.nilreason[1] || ')'),
    'href', service_informationservice_pt_dupmst.href)) AS informationprovision
from navaids_points.directionfinder 
inner join master_join mj2 on navaids_points.directionfinder.id = mj2.source_id
inner join navaids_points.directionfinder_tsp on mj2.target_id = navaids_points.directionfinder_tsp.id
inner join navaids_points.directionfinder_ts on navaids_points.directionfinder_tsp.directionfindertimeslice_id = navaids_points.directionfinder_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_gyilqe on navaids_points.directionfinder_ts.location_id = geometry_elevatedpoint_view_gyilqe.id
left join master_join master_join_yklzea on navaids_points.directionfinder_ts.id = master_join_yklzea.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_zjcexz on master_join_yklzea.target_id = navaids_points_authorityfornavaidequipment_view_zjcexz.id
left join master_join master_join_kcbffa on navaids_points.directionfinder_ts.id = master_join_kcbffa.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_eopezt on master_join_kcbffa.target_id = navaids_points_navaidequipmentmonitoring_view_eopezt.id
left join master_join master_join_xxgqgn on navaids_points.directionfinder_ts.id = master_join_xxgqgn.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_yhguqp on master_join_xxgqgn.target_id = navaids_points_navaidoperationalstatus_view_yhguqp.id
left join master_join master_join_vrcacn on navaids_points.directionfinder_ts.id = master_join_vrcacn.source_id
left join notes.note_view notes_note_view_btolgv on master_join_vrcacn.target_id = notes_note_view_btolgv.id
left join master_join master_join_rmabqd on navaids_points.directionfinder_ts.id = master_join_rmabqd.source_id
left join service.informationservice_pt service_informationservice_pt_dupmst on master_join_rmabqd.target_id = service_informationservice_pt_dupmst.id
where navaids_points.directionfinder.feature_status = 'APPROVED'
  and navaids_points.directionfinder_ts.feature_status = 'APPROVED'
group by
    navaids_points.directionfinder.id,
    navaids_points.directionfinder_ts.id,
    navaids_points.directionfinder_tsp.id,
    navaids_points.directionfinder.identifier,
    navaids_points.directionfinder_ts.interpretation,
    navaids_points.directionfinder_ts.sequence_number,
    navaids_points.directionfinder_ts.correction_number,
    navaids_points.directionfinder_ts.valid_time_begin,
    navaids_points.directionfinder_ts.valid_time_end,
    navaids_points.directionfinder_ts.feature_lifetime_begin,
    navaids_points.directionfinder_ts.feature_lifetime_end,
    navaids_points.directionfinder_ts.designator_value,
    navaids_points.directionfinder_ts.designator_nilreason,
    navaids_points.directionfinder_ts.name_value,
    navaids_points.directionfinder_ts.name_nilreason,
    navaids_points.directionfinder_ts.emissionclass_value,
    navaids_points.directionfinder_ts.emissionclass_nilreason,
    navaids_points.directionfinder_ts.mobile_value,
    navaids_points.directionfinder_ts.mobile_nilreason,
    navaids_points.directionfinder_ts.magneticvariation_value,
    navaids_points.directionfinder_ts.magneticvariation_nilreason,
    navaids_points.directionfinder_ts.magneticvariationaccuracy_value,
    navaids_points.directionfinder_ts.magneticvariationaccuracy_nilreason,
    navaids_points.directionfinder_ts.datemagneticvariation_value,
    navaids_points.directionfinder_ts.datemagneticvariation_nilreason,
    navaids_points.directionfinder_ts.flightchecked_value,
    navaids_points.directionfinder_ts.flightchecked_nilreason,
    navaids_points.directionfinder_ts.doppler_value,
    navaids_points.directionfinder_ts.doppler_nilreason,
    geometry_elevatedpoint_view_gyilqe.geom,
    geometry_elevatedpoint_view_gyilqe.elevation,
    geometry_elevatedpoint_view_gyilqe.geoidUndulation,
    geometry_elevatedpoint_view_gyilqe.verticalDatum,
    geometry_elevatedpoint_view_gyilqe.verticalAccuracy,
    geometry_elevatedpoint_view_gyilqe.horizontalAccuracy
order by directionfinder.identifier, directionfinder_ts.sequence_number, directionfinder_ts.correction_number DESC;
create index on navaids_points.directionfinder_view (id);
-- DistanceIndicationTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.distanceindication_view cascade;
create materialized view navaids_points.distanceindication_view as
select distinct on (distanceindication.identifier,distanceindication_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.distanceindication.id,
    navaids_points.distanceindication_ts.id as ts_id,
    navaids_points.distanceindication_tsp.id as tsp_id,
    navaids_points.distanceindication.identifier,
    navaids_points.distanceindication_ts.interpretation,
    navaids_points.distanceindication_ts.sequence_number,
    navaids_points.distanceindication_ts.correction_number,
    navaids_points.distanceindication_ts.valid_time_begin,
    navaids_points.distanceindication_ts.valid_time_end,
    navaids_points.distanceindication_ts.feature_lifetime_begin,
    navaids_points.distanceindication_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.distanceindication_ts.type_value as varchar), '(' || navaids_points.distanceindication_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.distanceindication_ts.distance_value as varchar) || ' ' || navaids_points.distanceindication_ts.distance_uom, '(' || navaids_points.distanceindication_ts.distance_nilreason || ')') as distance,
    coalesce(cast(navaids_points.distanceindication_ts.minimumreceptionaltitude_value as varchar) || ' ' || navaids_points.distanceindication_ts.minimumreceptionaltitude_uom, '(' || navaids_points.distanceindication_ts.minimumreceptionaltitude_nilreason || ')') as minimumreceptionaltitude,
    coalesce(cast(navaids_points_designatedpoint_pt_nsewio.title as varchar), '(' || navaids_points_designatedpoint_pt_nsewio.nilreason[1] || ')') AS fix,
    navaids_points_designatedpoint_pt_nsewio.href AS fix_href,
    coalesce(cast(navaids_points_designatedpoint_pt_zywgly.title as varchar), '(' || navaids_points_designatedpoint_pt_zywgly.nilreason[1] || ')') AS pointchoicefixdesignatedpoint,
    navaids_points_designatedpoint_pt_zywgly.href AS pointchoicefixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_mtjxjo.title as varchar), '(' || navaids_points_navaid_pt_mtjxjo.nilreason[1] || ')') AS pointchoicenavaidsystem,
    navaids_points_navaid_pt_mtjxjo.href AS pointchoicenavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_mrbyjn.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_mrbyjn.nilreason[1] || ')') AS pointchoiceaimingpoint,
    airport_heliport_touchdownliftoff_pt_mrbyjn.href AS pointchoiceaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_pjjvke.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_pjjvke.nilreason[1] || ')') AS pointchoicerunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_pjjvke.href AS pointchoicerunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_bxruzc.title as varchar), '(' || airport_heliport_airportheliport_pt_bxruzc.nilreason[1] || ')') AS pointchoiceairportreferencepoint,
    airport_heliport_airportheliport_pt_bxruzc.href AS pointchoiceairportreferencepoint_href,
    geometry_point_view_odaqbo.geom AS pointchoiceposition_geom,
    ST_X(geometry_point_view_odaqbo.geom) AS pointchoiceposition_longitude,
    ST_Y(geometry_point_view_odaqbo.geom) AS pointchoiceposition_latitude,
    geometry_point_view_odaqbo.horizontalAccuracy AS pointchoiceposition_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_zaohcx.*) AS annotation
from navaids_points.distanceindication 
inner join master_join mj2 on navaids_points.distanceindication.id = mj2.source_id
inner join navaids_points.distanceindication_tsp on mj2.target_id = navaids_points.distanceindication_tsp.id
inner join navaids_points.distanceindication_ts on navaids_points.distanceindication_tsp.distanceindicationtimeslice_id = navaids_points.distanceindication_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_nsewio on navaids_points.distanceindication_ts.fix_id = navaids_points_designatedpoint_pt_nsewio.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_zywgly on navaids_points.distanceindication_ts.distanceindication_ts_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_zywgly.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_mtjxjo on navaids_points.distanceindication_ts.distanceindication_ts_navaidsystem_id = navaids_points_navaid_pt_mtjxjo.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_mrbyjn on navaids_points.distanceindication_ts.distanceindication_ts_aimingpoint_id = airport_heliport_touchdownliftoff_pt_mrbyjn.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_pjjvke on navaids_points.distanceindication_ts.distanceindication_ts_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_pjjvke.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_bxruzc on navaids_points.distanceindication_ts.distanceindication_ts_airportreferencepoint_id = airport_heliport_airportheliport_pt_bxruzc.id
left join geometry.point_view geometry_point_view_odaqbo on navaids_points.distanceindication_ts.distanceindication_ts_position_id = geometry_point_view_odaqbo.id
left join master_join master_join_zunimp on navaids_points.distanceindication_ts.id = master_join_zunimp.source_id
left join notes.note_view notes_note_view_zaohcx on master_join_zunimp.target_id = notes_note_view_zaohcx.id
where navaids_points.distanceindication.feature_status = 'APPROVED'
  and navaids_points.distanceindication_ts.feature_status = 'APPROVED'
group by
    navaids_points.distanceindication.id,
    navaids_points.distanceindication_ts.id,
    navaids_points.distanceindication_tsp.id,
    navaids_points.distanceindication.identifier,
    navaids_points.distanceindication_ts.interpretation,
    navaids_points.distanceindication_ts.sequence_number,
    navaids_points.distanceindication_ts.correction_number,
    navaids_points.distanceindication_ts.valid_time_begin,
    navaids_points.distanceindication_ts.valid_time_end,
    navaids_points.distanceindication_ts.feature_lifetime_begin,
    navaids_points.distanceindication_ts.feature_lifetime_end,
    navaids_points.distanceindication_ts.type_value,
    navaids_points.distanceindication_ts.type_nilreason,
    navaids_points.distanceindication_ts.distance_value,
    navaids_points.distanceindication_ts.distance_uom,
    navaids_points.distanceindication_ts.distance_nilreason,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_value,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_uom,
    navaids_points.distanceindication_ts.minimumreceptionaltitude_nilreason,
    navaids_points_designatedpoint_pt_nsewio.title,
    navaids_points_designatedpoint_pt_nsewio.nilreason[1],
    navaids_points_designatedpoint_pt_nsewio.href,
    navaids_points_designatedpoint_pt_zywgly.title,
    navaids_points_designatedpoint_pt_zywgly.nilreason[1],
    navaids_points_designatedpoint_pt_zywgly.href,
    navaids_points_navaid_pt_mtjxjo.title,
    navaids_points_navaid_pt_mtjxjo.nilreason[1],
    navaids_points_navaid_pt_mtjxjo.href,
    airport_heliport_touchdownliftoff_pt_mrbyjn.title,
    airport_heliport_touchdownliftoff_pt_mrbyjn.nilreason[1],
    airport_heliport_touchdownliftoff_pt_mrbyjn.href,
    airport_heliport_runwaycentrelinepoint_pt_pjjvke.title,
    airport_heliport_runwaycentrelinepoint_pt_pjjvke.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_pjjvke.href,
    airport_heliport_airportheliport_pt_bxruzc.title,
    airport_heliport_airportheliport_pt_bxruzc.nilreason[1],
    airport_heliport_airportheliport_pt_bxruzc.href,
    geometry_point_view_odaqbo.geom,
    geometry_point_view_odaqbo.horizontalAccuracy
order by distanceindication.identifier, distanceindication_ts.sequence_number, distanceindication_ts.correction_number DESC;
create index on navaids_points.distanceindication_view (id);
-- DMETimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.dme_view cascade;
create materialized view navaids_points.dme_view as
select distinct on (dme.identifier,dme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.dme.id,
    navaids_points.dme_ts.id as ts_id,
    navaids_points.dme_tsp.id as tsp_id,
    navaids_points.dme.identifier,
    navaids_points.dme_ts.interpretation,
    navaids_points.dme_ts.sequence_number,
    navaids_points.dme_ts.correction_number,
    navaids_points.dme_ts.valid_time_begin,
    navaids_points.dme_ts.valid_time_end,
    navaids_points.dme_ts.feature_lifetime_begin,
    navaids_points.dme_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.dme_ts.designator_value as varchar), '(' || navaids_points.dme_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.dme_ts.name_value as varchar), '(' || navaids_points.dme_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.dme_ts.emissionclass_value as varchar), '(' || navaids_points.dme_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.dme_ts.mobile_value as varchar), '(' || navaids_points.dme_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.dme_ts.magneticvariation_value as varchar), '(' || navaids_points.dme_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.dme_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.dme_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.dme_ts.datemagneticvariation_value as varchar), '(' || navaids_points.dme_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.dme_ts.flightchecked_value as varchar), '(' || navaids_points.dme_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.dme_ts.type_value as varchar), '(' || navaids_points.dme_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.dme_ts.channel_value as varchar), '(' || navaids_points.dme_ts.channel_nilreason || ')') as channel,
    coalesce(cast(navaids_points.dme_ts.ghostfrequency_value as varchar) || ' ' || navaids_points.dme_ts.ghostfrequency_uom, '(' || navaids_points.dme_ts.ghostfrequency_nilreason || ')') as ghostfrequency,
    coalesce(cast(navaids_points.dme_ts.displace_value as varchar) || ' ' || navaids_points.dme_ts.displace_uom, '(' || navaids_points.dme_ts.displace_nilreason || ')') as displace,
    geometry_elevatedpoint_view_rdprra.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_rdprra.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_rdprra.geom) AS location_latitude,
    geometry_elevatedpoint_view_rdprra.elevation AS location_elevation,
    geometry_elevatedpoint_view_rdprra.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_rdprra.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_rdprra.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_rdprra.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_mavzeb.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_jxzxzq.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_vgimdu.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_rojnnb.*) AS annotation
from navaids_points.dme 
inner join master_join mj2 on navaids_points.dme.id = mj2.source_id
inner join navaids_points.dme_tsp on mj2.target_id = navaids_points.dme_tsp.id
inner join navaids_points.dme_ts on navaids_points.dme_tsp.dmetimeslice_id = navaids_points.dme_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_rdprra on navaids_points.dme_ts.location_id = geometry_elevatedpoint_view_rdprra.id
left join master_join master_join_zfxvra on navaids_points.dme_ts.id = master_join_zfxvra.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_mavzeb on master_join_zfxvra.target_id = navaids_points_authorityfornavaidequipment_view_mavzeb.id
left join master_join master_join_pnynel on navaids_points.dme_ts.id = master_join_pnynel.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_jxzxzq on master_join_pnynel.target_id = navaids_points_navaidequipmentmonitoring_view_jxzxzq.id
left join master_join master_join_feujyd on navaids_points.dme_ts.id = master_join_feujyd.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_vgimdu on master_join_feujyd.target_id = navaids_points_navaidoperationalstatus_view_vgimdu.id
left join master_join master_join_vhseqx on navaids_points.dme_ts.id = master_join_vhseqx.source_id
left join notes.note_view notes_note_view_rojnnb on master_join_vhseqx.target_id = notes_note_view_rojnnb.id
where navaids_points.dme.feature_status = 'APPROVED'
  and navaids_points.dme_ts.feature_status = 'APPROVED'
group by
    navaids_points.dme.id,
    navaids_points.dme_ts.id,
    navaids_points.dme_tsp.id,
    navaids_points.dme.identifier,
    navaids_points.dme_ts.interpretation,
    navaids_points.dme_ts.sequence_number,
    navaids_points.dme_ts.correction_number,
    navaids_points.dme_ts.valid_time_begin,
    navaids_points.dme_ts.valid_time_end,
    navaids_points.dme_ts.feature_lifetime_begin,
    navaids_points.dme_ts.feature_lifetime_end,
    navaids_points.dme_ts.designator_value,
    navaids_points.dme_ts.designator_nilreason,
    navaids_points.dme_ts.name_value,
    navaids_points.dme_ts.name_nilreason,
    navaids_points.dme_ts.emissionclass_value,
    navaids_points.dme_ts.emissionclass_nilreason,
    navaids_points.dme_ts.mobile_value,
    navaids_points.dme_ts.mobile_nilreason,
    navaids_points.dme_ts.magneticvariation_value,
    navaids_points.dme_ts.magneticvariation_nilreason,
    navaids_points.dme_ts.magneticvariationaccuracy_value,
    navaids_points.dme_ts.magneticvariationaccuracy_nilreason,
    navaids_points.dme_ts.datemagneticvariation_value,
    navaids_points.dme_ts.datemagneticvariation_nilreason,
    navaids_points.dme_ts.flightchecked_value,
    navaids_points.dme_ts.flightchecked_nilreason,
    navaids_points.dme_ts.type_value,
    navaids_points.dme_ts.type_nilreason,
    navaids_points.dme_ts.channel_value,
    navaids_points.dme_ts.channel_nilreason,
    navaids_points.dme_ts.ghostfrequency_value,
    navaids_points.dme_ts.ghostfrequency_uom,
    navaids_points.dme_ts.ghostfrequency_nilreason,
    navaids_points.dme_ts.displace_value,
    navaids_points.dme_ts.displace_uom,
    navaids_points.dme_ts.displace_nilreason,
    geometry_elevatedpoint_view_rdprra.geom,
    geometry_elevatedpoint_view_rdprra.elevation,
    geometry_elevatedpoint_view_rdprra.geoidUndulation,
    geometry_elevatedpoint_view_rdprra.verticalDatum,
    geometry_elevatedpoint_view_rdprra.verticalAccuracy,
    geometry_elevatedpoint_view_rdprra.horizontalAccuracy
order by dme.identifier, dme_ts.sequence_number, dme_ts.correction_number DESC;
create index on navaids_points.dme_view (id);
-- ElevationTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.elevation_view cascade;
create materialized view navaids_points.elevation_view as
select distinct on (elevation.identifier,elevation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.elevation.id,
    navaids_points.elevation_ts.id as ts_id,
    navaids_points.elevation_tsp.id as tsp_id,
    navaids_points.elevation.identifier,
    navaids_points.elevation_ts.interpretation,
    navaids_points.elevation_ts.sequence_number,
    navaids_points.elevation_ts.correction_number,
    navaids_points.elevation_ts.valid_time_begin,
    navaids_points.elevation_ts.valid_time_end,
    navaids_points.elevation_ts.feature_lifetime_begin,
    navaids_points.elevation_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.elevation_ts.designator_value as varchar), '(' || navaids_points.elevation_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.elevation_ts.name_value as varchar), '(' || navaids_points.elevation_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.elevation_ts.emissionclass_value as varchar), '(' || navaids_points.elevation_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.elevation_ts.mobile_value as varchar), '(' || navaids_points.elevation_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.elevation_ts.magneticvariation_value as varchar), '(' || navaids_points.elevation_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.elevation_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.elevation_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.elevation_ts.datemagneticvariation_value as varchar), '(' || navaids_points.elevation_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.elevation_ts.flightchecked_value as varchar), '(' || navaids_points.elevation_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.elevation_ts.anglenominal_value as varchar), '(' || navaids_points.elevation_ts.anglenominal_nilreason || ')') as anglenominal,
    coalesce(cast(navaids_points.elevation_ts.angleminimum_value as varchar), '(' || navaids_points.elevation_ts.angleminimum_nilreason || ')') as angleminimum,
    coalesce(cast(navaids_points.elevation_ts.anglespan_value as varchar), '(' || navaids_points.elevation_ts.anglespan_nilreason || ')') as anglespan,
    coalesce(cast(navaids_points.elevation_ts.angleaccuracy_value as varchar), '(' || navaids_points.elevation_ts.angleaccuracy_nilreason || ')') as angleaccuracy,
    geometry_elevatedpoint_view_zddczi.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_zddczi.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_zddczi.geom) AS location_latitude,
    geometry_elevatedpoint_view_zddczi.elevation AS location_elevation,
    geometry_elevatedpoint_view_zddczi.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_zddczi.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_zddczi.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_zddczi.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_bobneg.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_izdoyy.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_ctcvzz.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_gvxkct.*) AS annotation
from navaids_points.elevation 
inner join master_join mj2 on navaids_points.elevation.id = mj2.source_id
inner join navaids_points.elevation_tsp on mj2.target_id = navaids_points.elevation_tsp.id
inner join navaids_points.elevation_ts on navaids_points.elevation_tsp.elevationtimeslice_id = navaids_points.elevation_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_zddczi on navaids_points.elevation_ts.location_id = geometry_elevatedpoint_view_zddczi.id
left join master_join master_join_axuasg on navaids_points.elevation_ts.id = master_join_axuasg.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_bobneg on master_join_axuasg.target_id = navaids_points_authorityfornavaidequipment_view_bobneg.id
left join master_join master_join_cdodgx on navaids_points.elevation_ts.id = master_join_cdodgx.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_izdoyy on master_join_cdodgx.target_id = navaids_points_navaidequipmentmonitoring_view_izdoyy.id
left join master_join master_join_vokclj on navaids_points.elevation_ts.id = master_join_vokclj.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_ctcvzz on master_join_vokclj.target_id = navaids_points_navaidoperationalstatus_view_ctcvzz.id
left join master_join master_join_cwmqbi on navaids_points.elevation_ts.id = master_join_cwmqbi.source_id
left join notes.note_view notes_note_view_gvxkct on master_join_cwmqbi.target_id = notes_note_view_gvxkct.id
where navaids_points.elevation.feature_status = 'APPROVED'
  and navaids_points.elevation_ts.feature_status = 'APPROVED'
group by
    navaids_points.elevation.id,
    navaids_points.elevation_ts.id,
    navaids_points.elevation_tsp.id,
    navaids_points.elevation.identifier,
    navaids_points.elevation_ts.interpretation,
    navaids_points.elevation_ts.sequence_number,
    navaids_points.elevation_ts.correction_number,
    navaids_points.elevation_ts.valid_time_begin,
    navaids_points.elevation_ts.valid_time_end,
    navaids_points.elevation_ts.feature_lifetime_begin,
    navaids_points.elevation_ts.feature_lifetime_end,
    navaids_points.elevation_ts.designator_value,
    navaids_points.elevation_ts.designator_nilreason,
    navaids_points.elevation_ts.name_value,
    navaids_points.elevation_ts.name_nilreason,
    navaids_points.elevation_ts.emissionclass_value,
    navaids_points.elevation_ts.emissionclass_nilreason,
    navaids_points.elevation_ts.mobile_value,
    navaids_points.elevation_ts.mobile_nilreason,
    navaids_points.elevation_ts.magneticvariation_value,
    navaids_points.elevation_ts.magneticvariation_nilreason,
    navaids_points.elevation_ts.magneticvariationaccuracy_value,
    navaids_points.elevation_ts.magneticvariationaccuracy_nilreason,
    navaids_points.elevation_ts.datemagneticvariation_value,
    navaids_points.elevation_ts.datemagneticvariation_nilreason,
    navaids_points.elevation_ts.flightchecked_value,
    navaids_points.elevation_ts.flightchecked_nilreason,
    navaids_points.elevation_ts.anglenominal_value,
    navaids_points.elevation_ts.anglenominal_nilreason,
    navaids_points.elevation_ts.angleminimum_value,
    navaids_points.elevation_ts.angleminimum_nilreason,
    navaids_points.elevation_ts.anglespan_value,
    navaids_points.elevation_ts.anglespan_nilreason,
    navaids_points.elevation_ts.angleaccuracy_value,
    navaids_points.elevation_ts.angleaccuracy_nilreason,
    geometry_elevatedpoint_view_zddczi.geom,
    geometry_elevatedpoint_view_zddczi.elevation,
    geometry_elevatedpoint_view_zddczi.geoidUndulation,
    geometry_elevatedpoint_view_zddczi.verticalDatum,
    geometry_elevatedpoint_view_zddczi.verticalAccuracy,
    geometry_elevatedpoint_view_zddczi.horizontalAccuracy
order by elevation.identifier, elevation_ts.sequence_number, elevation_ts.correction_number DESC;
create index on navaids_points.elevation_view (id);
-- FinalLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'public.fasdatablock_view', 'procedure.approachcondition_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'geometry.point_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.finalleg_view cascade;
create materialized view procedure.finalleg_view as
select distinct on (finalleg.identifier,finalleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.finalleg.id,
    procedure.finalleg_ts.id as ts_id,
    procedure.finalleg_tsp.id as tsp_id,
    procedure.finalleg.identifier,
    procedure.finalleg_ts.interpretation,
    procedure.finalleg_ts.sequence_number,
    procedure.finalleg_ts.correction_number,
    procedure.finalleg_ts.valid_time_begin,
    procedure.finalleg_ts.valid_time_end,
    procedure.finalleg_ts.feature_lifetime_begin,
    procedure.finalleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.finalleg_ts.endconditiondesignator_value as varchar), '(' || procedure.finalleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.finalleg_ts.legpath_value as varchar), '(' || procedure.finalleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.finalleg_ts.legtypearinc_value as varchar), '(' || procedure.finalleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.finalleg_ts.course_value as varchar), '(' || procedure.finalleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.finalleg_ts.coursetype_value as varchar), '(' || procedure.finalleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.finalleg_ts.coursedirection_value as varchar), '(' || procedure.finalleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.finalleg_ts.turndirection_value as varchar), '(' || procedure.finalleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.finalleg_ts.speedreference_value as varchar), '(' || procedure.finalleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.finalleg_ts.speedinterpretation_value as varchar), '(' || procedure.finalleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.finalleg_ts.bankangle_value as varchar), '(' || procedure.finalleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.finalleg_ts.procedureturnrequired_value as varchar), '(' || procedure.finalleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.finalleg_ts.upperlimitreference_value as varchar), '(' || procedure.finalleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.finalleg_ts.lowerlimitreference_value as varchar), '(' || procedure.finalleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.finalleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.finalleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.finalleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.finalleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.finalleg_ts.verticalangle_value as varchar), '(' || procedure.finalleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.finalleg_ts.guidancesystem_value as varchar), '(' || procedure.finalleg_ts.guidancesystem_nilreason || ')') as guidancesystem,
    coalesce(cast(procedure.finalleg_ts.landingsystemcategory_value as varchar), '(' || procedure.finalleg_ts.landingsystemcategory_nilreason || ')') as landingsystemcategory,
    coalesce(cast(procedure.finalleg_ts.rnpdmeauthorized_value as varchar), '(' || procedure.finalleg_ts.rnpdmeauthorized_nilreason || ')') as rnpdmeauthorized,
    coalesce(cast(procedure.finalleg_ts.courseoffsetangle_value as varchar), '(' || procedure.finalleg_ts.courseoffsetangle_nilreason || ')') as courseoffsetangle,
    coalesce(cast(procedure.finalleg_ts.courseoffsetside_value as varchar), '(' || procedure.finalleg_ts.courseoffsetside_nilreason || ')') as courseoffsetside,
    coalesce(cast(procedure.finalleg_ts.coursecentrelineintersect_value as varchar), '(' || procedure.finalleg_ts.coursecentrelineintersect_nilreason || ')') as coursecentrelineintersect,
    coalesce(cast(procedure.finalleg_ts.speedlimit_value as varchar) || ' ' || procedure.finalleg_ts.speedlimit_uom, '(' || procedure.finalleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.finalleg_ts.length_value as varchar) || ' ' || procedure.finalleg_ts.length_uom, '(' || procedure.finalleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.finalleg_ts.duration_value as varchar) || ' ' || procedure.finalleg_ts.duration_uom, '(' || procedure.finalleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.finalleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.finalleg_ts.upperlimitaltitude_uom, '(' || procedure.finalleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.finalleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.finalleg_ts.lowerlimitaltitude_uom, '(' || procedure.finalleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.finalleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.finalleg_ts.altitudeoverrideatc_uom, '(' || procedure.finalleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.finalleg_ts.minimumbarovnavtemperature_value as varchar) || ' ' || procedure.finalleg_ts.minimumbarovnavtemperature_uom, '(' || procedure.finalleg_ts.minimumbarovnavtemperature_nilreason || ')') as minimumbarovnavtemperature,
    coalesce(cast(procedure.finalleg_ts.coursecentrelinedistance_value as varchar) || ' ' || procedure.finalleg_ts.coursecentrelinedistance_uom, '(' || procedure.finalleg_ts.coursecentrelinedistance_nilreason || ')') as coursecentrelinedistance,
    coalesce(cast(procedure.finalleg_ts.courseoffsetdistance_value as varchar) || ' ' || procedure.finalleg_ts.courseoffsetdistance_uom, '(' || procedure.finalleg_ts.courseoffsetdistance_nilreason || ')') as courseoffsetdistance,
    navaids_points_terminalsegmentpoint_view_zctxed.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_wrlnpz.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_rwfgtt.id AS arccentre,
    navaids_points_terminalsegmentpoint_view_sjntxd.id AS visualdescentpoint,
    geometry_curve_view_vvvciz.geom AS trajectory_geom,
    geometry_curve_view_vvvciz.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_nphyub.title as varchar), '(' || navaids_points_angleindication_pt_nphyub.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_nphyub.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_uieonc.title as varchar), '(' || navaids_points_distanceindication_pt_uieonc.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_uieonc.href AS distance_href,
    procedure_holdinguse_view_cxwrmq.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_pkdgvs.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_pkdgvs.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_pkdgvs.href AS approach_href,
    coalesce(cast(navaids_points_designatedpoint_pt_fgmwve.title as varchar), '(' || navaids_points_designatedpoint_pt_fgmwve.nilreason[1] || ')') AS finalpathalignmentpointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_fgmwve.href AS finalpathalignmentpointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ijkzkj.title as varchar), '(' || navaids_points_navaid_pt_ijkzkj.nilreason[1] || ')') AS finalpathalignmentpointnavaidsystem,
    navaids_points_navaid_pt_ijkzkj.href AS finalpathalignmentpointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_acfsnz.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_acfsnz.nilreason[1] || ')') AS finalpathalignmentpointaimingpoint,
    airport_heliport_touchdownliftoff_pt_acfsnz.href AS finalpathalignmentpointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_xttxaj.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_xttxaj.nilreason[1] || ')') AS finalpathalignmentpointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_xttxaj.href AS finalpathalignmentpointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_pvougw.title as varchar), '(' || airport_heliport_airportheliport_pt_pvougw.nilreason[1] || ')') AS finalpathalignmentpointairportreferencepoint,
    airport_heliport_airportheliport_pt_pvougw.href AS finalpathalignmentpointairportreferencepoint_href,
    geometry_point_view_kaespe.geom AS finalpathalignmentpointposition_geom,
    ST_X(geometry_point_view_kaespe.geom) AS finalpathalignmentpointposition_longitude,
    ST_Y(geometry_point_view_kaespe.geom) AS finalpathalignmentpointposition_latitude,
    geometry_point_view_kaespe.horizontalAccuracy AS finalpathalignmentpointposition_horizontalaccuracy,
    public_fasdatablock_view_cxgkkd.id AS fasdata,
    jsonb_agg(shared_aircraftcharacteristic_view_kskjzt.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_gymini.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_ltytgt.*) AS annotation,
    jsonb_agg(procedure_approachcondition_view_qidaav.id) AS condition
from procedure.finalleg 
inner join master_join mj2 on procedure.finalleg.id = mj2.source_id
inner join procedure.finalleg_tsp on mj2.target_id = procedure.finalleg_tsp.id
inner join procedure.finalleg_ts on procedure.finalleg_tsp.finallegtimeslice_id = procedure.finalleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_zctxed on procedure.finalleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_zctxed.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_wrlnpz on procedure.finalleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_wrlnpz.id
left join geometry.curve_view geometry_curve_view_vvvciz on procedure.finalleg_ts.trajectory_id = geometry_curve_view_vvvciz.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_rwfgtt on procedure.finalleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_rwfgtt.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_nphyub on procedure.finalleg_ts.angle_id = navaids_points_angleindication_pt_nphyub.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_uieonc on procedure.finalleg_ts.distance_id = navaids_points_distanceindication_pt_uieonc.id
left join procedure.holdinguse_view procedure_holdinguse_view_cxwrmq on procedure.finalleg_ts.holding_id = procedure_holdinguse_view_cxwrmq.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_pkdgvs on procedure.finalleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_pkdgvs.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_fgmwve on procedure.finalleg_ts.finalpathalignmentpoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_fgmwve.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ijkzkj on procedure.finalleg_ts.finalpathalignmentpoint_navaidsystem_id = navaids_points_navaid_pt_ijkzkj.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_acfsnz on procedure.finalleg_ts.finalpathalignmentpoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_acfsnz.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_xttxaj on procedure.finalleg_ts.finalpathalignmentpoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_xttxaj.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pvougw on procedure.finalleg_ts.finalpathalignmentpoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_pvougw.id
left join geometry.point_view geometry_point_view_kaespe on procedure.finalleg_ts.finalpathalignmentpoint_position_id = geometry_point_view_kaespe.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_sjntxd on procedure.finalleg_ts.visualdescentpoint_id = navaids_points_terminalsegmentpoint_view_sjntxd.id
left join public.fasdatablock_view public_fasdatablock_view_cxgkkd on procedure.finalleg_ts.fasdata_id = public_fasdatablock_view_cxgkkd.id
left join master_join master_join_qstvht on procedure.finalleg_ts.id = master_join_qstvht.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_kskjzt on master_join_qstvht.target_id = shared_aircraftcharacteristic_view_kskjzt.id
left join master_join master_join_avkftf on procedure.finalleg_ts.id = master_join_avkftf.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_gymini on master_join_avkftf.target_id = shared_obstacleassessmentarea_view_gymini.id
left join master_join master_join_yvynom on procedure.finalleg_ts.id = master_join_yvynom.source_id
left join notes.note_view notes_note_view_ltytgt on master_join_yvynom.target_id = notes_note_view_ltytgt.id
left join master_join master_join_igqkry on procedure.finalleg_ts.id = master_join_igqkry.source_id
left join procedure.approachcondition_view procedure_approachcondition_view_qidaav on master_join_igqkry.target_id = procedure_approachcondition_view_qidaav.id
where procedure.finalleg.feature_status = 'APPROVED'
  and procedure.finalleg_ts.feature_status = 'APPROVED'
group by
    procedure.finalleg.id,
    procedure.finalleg_ts.id,
    procedure.finalleg_tsp.id,
    procedure.finalleg.identifier,
    procedure.finalleg_ts.interpretation,
    procedure.finalleg_ts.sequence_number,
    procedure.finalleg_ts.correction_number,
    procedure.finalleg_ts.valid_time_begin,
    procedure.finalleg_ts.valid_time_end,
    procedure.finalleg_ts.feature_lifetime_begin,
    procedure.finalleg_ts.feature_lifetime_end,
    procedure.finalleg_ts.endconditiondesignator_value,
    procedure.finalleg_ts.endconditiondesignator_nilreason,
    procedure.finalleg_ts.legpath_value,
    procedure.finalleg_ts.legpath_nilreason,
    procedure.finalleg_ts.legtypearinc_value,
    procedure.finalleg_ts.legtypearinc_nilreason,
    procedure.finalleg_ts.course_value,
    procedure.finalleg_ts.course_nilreason,
    procedure.finalleg_ts.coursetype_value,
    procedure.finalleg_ts.coursetype_nilreason,
    procedure.finalleg_ts.coursedirection_value,
    procedure.finalleg_ts.coursedirection_nilreason,
    procedure.finalleg_ts.turndirection_value,
    procedure.finalleg_ts.turndirection_nilreason,
    procedure.finalleg_ts.speedreference_value,
    procedure.finalleg_ts.speedreference_nilreason,
    procedure.finalleg_ts.speedinterpretation_value,
    procedure.finalleg_ts.speedinterpretation_nilreason,
    procedure.finalleg_ts.bankangle_value,
    procedure.finalleg_ts.bankangle_nilreason,
    procedure.finalleg_ts.procedureturnrequired_value,
    procedure.finalleg_ts.procedureturnrequired_nilreason,
    procedure.finalleg_ts.upperlimitreference_value,
    procedure.finalleg_ts.upperlimitreference_nilreason,
    procedure.finalleg_ts.lowerlimitreference_value,
    procedure.finalleg_ts.lowerlimitreference_nilreason,
    procedure.finalleg_ts.altitudeinterpretation_value,
    procedure.finalleg_ts.altitudeinterpretation_nilreason,
    procedure.finalleg_ts.altitudeoverridereference_value,
    procedure.finalleg_ts.altitudeoverridereference_nilreason,
    procedure.finalleg_ts.verticalangle_value,
    procedure.finalleg_ts.verticalangle_nilreason,
    procedure.finalleg_ts.guidancesystem_value,
    procedure.finalleg_ts.guidancesystem_nilreason,
    procedure.finalleg_ts.landingsystemcategory_value,
    procedure.finalleg_ts.landingsystemcategory_nilreason,
    procedure.finalleg_ts.rnpdmeauthorized_value,
    procedure.finalleg_ts.rnpdmeauthorized_nilreason,
    procedure.finalleg_ts.courseoffsetangle_value,
    procedure.finalleg_ts.courseoffsetangle_nilreason,
    procedure.finalleg_ts.courseoffsetside_value,
    procedure.finalleg_ts.courseoffsetside_nilreason,
    procedure.finalleg_ts.coursecentrelineintersect_value,
    procedure.finalleg_ts.coursecentrelineintersect_nilreason,
    procedure.finalleg_ts.speedlimit_value,
    procedure.finalleg_ts.speedlimit_uom,
    procedure.finalleg_ts.speedlimit_nilreason,
    procedure.finalleg_ts.length_value,
    procedure.finalleg_ts.length_uom,
    procedure.finalleg_ts.length_nilreason,
    procedure.finalleg_ts.duration_value,
    procedure.finalleg_ts.duration_uom,
    procedure.finalleg_ts.duration_nilreason,
    procedure.finalleg_ts.upperlimitaltitude_value,
    procedure.finalleg_ts.upperlimitaltitude_uom,
    procedure.finalleg_ts.upperlimitaltitude_nilreason,
    procedure.finalleg_ts.lowerlimitaltitude_value,
    procedure.finalleg_ts.lowerlimitaltitude_uom,
    procedure.finalleg_ts.lowerlimitaltitude_nilreason,
    procedure.finalleg_ts.altitudeoverrideatc_value,
    procedure.finalleg_ts.altitudeoverrideatc_uom,
    procedure.finalleg_ts.altitudeoverrideatc_nilreason,
    procedure.finalleg_ts.minimumbarovnavtemperature_value,
    procedure.finalleg_ts.minimumbarovnavtemperature_uom,
    procedure.finalleg_ts.minimumbarovnavtemperature_nilreason,
    procedure.finalleg_ts.coursecentrelinedistance_value,
    procedure.finalleg_ts.coursecentrelinedistance_uom,
    procedure.finalleg_ts.coursecentrelinedistance_nilreason,
    procedure.finalleg_ts.courseoffsetdistance_value,
    procedure.finalleg_ts.courseoffsetdistance_uom,
    procedure.finalleg_ts.courseoffsetdistance_nilreason,
    navaids_points_terminalsegmentpoint_view_zctxed.id,
    navaids_points_terminalsegmentpoint_view_wrlnpz.id,
    geometry_curve_view_vvvciz.geom,
    geometry_curve_view_vvvciz.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_rwfgtt.id,
    navaids_points_angleindication_pt_nphyub.title,
    navaids_points_angleindication_pt_nphyub.nilreason[1],
    navaids_points_angleindication_pt_nphyub.href,
    navaids_points_distanceindication_pt_uieonc.title,
    navaids_points_distanceindication_pt_uieonc.nilreason[1],
    navaids_points_distanceindication_pt_uieonc.href,
    procedure_holdinguse_view_cxwrmq.id,
    procedure_instrumentapproachprocedure_pt_pkdgvs.title,
    procedure_instrumentapproachprocedure_pt_pkdgvs.nilreason[1],
    procedure_instrumentapproachprocedure_pt_pkdgvs.href,
    navaids_points_designatedpoint_pt_fgmwve.title,
    navaids_points_designatedpoint_pt_fgmwve.nilreason[1],
    navaids_points_designatedpoint_pt_fgmwve.href,
    navaids_points_navaid_pt_ijkzkj.title,
    navaids_points_navaid_pt_ijkzkj.nilreason[1],
    navaids_points_navaid_pt_ijkzkj.href,
    airport_heliport_touchdownliftoff_pt_acfsnz.title,
    airport_heliport_touchdownliftoff_pt_acfsnz.nilreason[1],
    airport_heliport_touchdownliftoff_pt_acfsnz.href,
    airport_heliport_runwaycentrelinepoint_pt_xttxaj.title,
    airport_heliport_runwaycentrelinepoint_pt_xttxaj.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_xttxaj.href,
    airport_heliport_airportheliport_pt_pvougw.title,
    airport_heliport_airportheliport_pt_pvougw.nilreason[1],
    airport_heliport_airportheliport_pt_pvougw.href,
    geometry_point_view_kaespe.geom,
    geometry_point_view_kaespe.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_sjntxd.id,
    public_fasdatablock_view_cxgkkd.id
order by finalleg.identifier, finalleg_ts.sequence_number, finalleg_ts.correction_number DESC;
create index on procedure.finalleg_view (id);
-- FireFightingServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.firefightingservice_view cascade;
create materialized view service.firefightingservice_view as
select distinct on (firefightingservice.identifier,firefightingservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.firefightingservice.id,
    service.firefightingservice_ts.id as ts_id,
    service.firefightingservice_tsp.id as tsp_id,
    service.firefightingservice.identifier,
    service.firefightingservice_ts.interpretation,
    service.firefightingservice_ts.sequence_number,
    service.firefightingservice_ts.correction_number,
    service.firefightingservice_ts.valid_time_begin,
    service.firefightingservice_ts.valid_time_end,
    service.firefightingservice_ts.feature_lifetime_begin,
    service.firefightingservice_ts.feature_lifetime_end,
    coalesce(cast(service.firefightingservice_ts.flightoperations_value as varchar), '(' || service.firefightingservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.firefightingservice_ts.rank_value as varchar), '(' || service.firefightingservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.firefightingservice_ts.complianticao_value as varchar), '(' || service.firefightingservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.firefightingservice_ts.name_value as varchar), '(' || service.firefightingservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.firefightingservice_ts.category_value as varchar), '(' || service.firefightingservice_ts.category_nilreason || ')') as category,
    coalesce(cast(service.firefightingservice_ts.standard_value as varchar), '(' || service.firefightingservice_ts.standard_nilreason || ')') as standard,
    geometry_elevatedpoint_view_qmzsxt.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_qmzsxt.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_qmzsxt.geom) AS location_latitude,
    geometry_elevatedpoint_view_qmzsxt.elevation AS location_elevation,
    geometry_elevatedpoint_view_qmzsxt.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_qmzsxt.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_qmzsxt.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_qmzsxt.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_foxymy.title as varchar), '(' || organisation_unit_pt_foxymy.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_foxymy.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_zjxbtz.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_bvscdn.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_bvscdn.title AS varchar), '(' || service_radiocommunicationchannel_pt_bvscdn.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_bvscdn.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_anreca.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_nvqgku.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_ogpfrv.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_ogpfrv.title AS varchar), '(' || airport_heliport_airportheliport_pt_ogpfrv.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_ogpfrv.href)) AS airportheliport
from service.firefightingservice 
inner join master_join mj2 on service.firefightingservice.id = mj2.source_id
inner join service.firefightingservice_tsp on mj2.target_id = service.firefightingservice_tsp.id
inner join service.firefightingservice_ts on service.firefightingservice_tsp.firefightingservicetimeslice_id = service.firefightingservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_qmzsxt on service.firefightingservice_ts.location_id = geometry_elevatedpoint_view_qmzsxt.id
left join organisation.unit_pt organisation_unit_pt_foxymy on service.firefightingservice_ts.serviceprovider_id = organisation_unit_pt_foxymy.id
left join master_join master_join_cubucv on service.firefightingservice_ts.id = master_join_cubucv.source_id
left join service.callsigndetail_view service_callsigndetail_view_zjxbtz on master_join_cubucv.target_id = service_callsigndetail_view_zjxbtz.id
left join master_join master_join_qhpzqd on service.firefightingservice_ts.id = master_join_qhpzqd.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_bvscdn on master_join_qhpzqd.target_id = service_radiocommunicationchannel_pt_bvscdn.id
left join master_join master_join_esmxpe on service.firefightingservice_ts.id = master_join_esmxpe.source_id
left join shared.contactinformation_view shared_contactinformation_view_vquntw on master_join_esmxpe.target_id = shared_contactinformation_view_vquntw.id
left join master_join master_join_drowxj on service.firefightingservice_ts.id = master_join_drowxj.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_anreca on master_join_drowxj.target_id = service_serviceoperationalstatus_view_anreca.id
left join master_join master_join_vnqigj on service.firefightingservice_ts.id = master_join_vnqigj.source_id
left join notes.note_view notes_note_view_nvqgku on master_join_vnqigj.target_id = notes_note_view_nvqgku.id
left join master_join master_join_xtavbw on service.firefightingservice_ts.id = master_join_xtavbw.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ogpfrv on master_join_xtavbw.target_id = airport_heliport_airportheliport_pt_ogpfrv.id
where service.firefightingservice.feature_status = 'APPROVED'
  and service.firefightingservice_ts.feature_status = 'APPROVED'
group by
    service.firefightingservice.id,
    service.firefightingservice_ts.id,
    service.firefightingservice_tsp.id,
    service.firefightingservice.identifier,
    service.firefightingservice_ts.interpretation,
    service.firefightingservice_ts.sequence_number,
    service.firefightingservice_ts.correction_number,
    service.firefightingservice_ts.valid_time_begin,
    service.firefightingservice_ts.valid_time_end,
    service.firefightingservice_ts.feature_lifetime_begin,
    service.firefightingservice_ts.feature_lifetime_end,
    service.firefightingservice_ts.flightoperations_value,
    service.firefightingservice_ts.flightoperations_nilreason,
    service.firefightingservice_ts.rank_value,
    service.firefightingservice_ts.rank_nilreason,
    service.firefightingservice_ts.complianticao_value,
    service.firefightingservice_ts.complianticao_nilreason,
    service.firefightingservice_ts.name_value,
    service.firefightingservice_ts.name_nilreason,
    service.firefightingservice_ts.category_value,
    service.firefightingservice_ts.category_nilreason,
    service.firefightingservice_ts.standard_value,
    service.firefightingservice_ts.standard_nilreason,
    geometry_elevatedpoint_view_qmzsxt.geom,
    geometry_elevatedpoint_view_qmzsxt.elevation,
    geometry_elevatedpoint_view_qmzsxt.geoidUndulation,
    geometry_elevatedpoint_view_qmzsxt.verticalDatum,
    geometry_elevatedpoint_view_qmzsxt.verticalAccuracy,
    geometry_elevatedpoint_view_qmzsxt.horizontalAccuracy,
    organisation_unit_pt_foxymy.title,
    organisation_unit_pt_foxymy.nilreason[1],
    organisation_unit_pt_foxymy.href
order by firefightingservice.identifier, firefightingservice_ts.sequence_number, firefightingservice_ts.correction_number DESC;
create index on service.firefightingservice_view (id);
-- FlightRestrictionTimeSliceType
-- ['routes.flightconditioncombination_view', 'routes.flightrestrictionroute_view', 'notes.note_view']
drop materialized view if exists routes.flightrestriction_view cascade;
create materialized view routes.flightrestriction_view as
select distinct on (flightrestriction.identifier,flightrestriction_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.flightrestriction.id,
    routes.flightrestriction_ts.id as ts_id,
    routes.flightrestriction_tsp.id as tsp_id,
    routes.flightrestriction.identifier,
    routes.flightrestriction_ts.interpretation,
    routes.flightrestriction_ts.sequence_number,
    routes.flightrestriction_ts.correction_number,
    routes.flightrestriction_ts.valid_time_begin,
    routes.flightrestriction_ts.valid_time_end,
    routes.flightrestriction_ts.feature_lifetime_begin,
    routes.flightrestriction_ts.feature_lifetime_end,
    coalesce(cast(routes.flightrestriction_ts.designator_value as varchar), '(' || routes.flightrestriction_ts.designator_nilreason || ')') as designator,
    coalesce(cast(routes.flightrestriction_ts.type_value as varchar), '(' || routes.flightrestriction_ts.type_nilreason || ')') as type,
    coalesce(cast(routes.flightrestriction_ts.instruction_value as varchar), '(' || routes.flightrestriction_ts.instruction_nilreason || ')') as instruction,
    routes_flightconditioncombination_view_yfvmzj.id AS flight,
    jsonb_agg(routes_flightrestrictionroute_view_zyjdzy.id) AS regulatedroute,
    jsonb_agg(DISTINCT notes_note_view_wfwtda.*) AS annotation
from routes.flightrestriction 
inner join master_join mj2 on routes.flightrestriction.id = mj2.source_id
inner join routes.flightrestriction_tsp on mj2.target_id = routes.flightrestriction_tsp.id
inner join routes.flightrestriction_ts on routes.flightrestriction_tsp.flightrestrictiontimeslice_id = routes.flightrestriction_ts.id
left join routes.flightconditioncombination_view routes_flightconditioncombination_view_yfvmzj on routes.flightrestriction_ts.flight_id = routes_flightconditioncombination_view_yfvmzj.id
left join master_join master_join_ebuebo on routes.flightrestriction_ts.id = master_join_ebuebo.source_id
left join routes.flightrestrictionroute_view routes_flightrestrictionroute_view_zyjdzy on master_join_ebuebo.target_id = routes_flightrestrictionroute_view_zyjdzy.id
left join master_join master_join_uyqgpx on routes.flightrestriction_ts.id = master_join_uyqgpx.source_id
left join notes.note_view notes_note_view_wfwtda on master_join_uyqgpx.target_id = notes_note_view_wfwtda.id
where routes.flightrestriction.feature_status = 'APPROVED'
  and routes.flightrestriction_ts.feature_status = 'APPROVED'
group by
    routes.flightrestriction.id,
    routes.flightrestriction_ts.id,
    routes.flightrestriction_tsp.id,
    routes.flightrestriction.identifier,
    routes.flightrestriction_ts.interpretation,
    routes.flightrestriction_ts.sequence_number,
    routes.flightrestriction_ts.correction_number,
    routes.flightrestriction_ts.valid_time_begin,
    routes.flightrestriction_ts.valid_time_end,
    routes.flightrestriction_ts.feature_lifetime_begin,
    routes.flightrestriction_ts.feature_lifetime_end,
    routes.flightrestriction_ts.designator_value,
    routes.flightrestriction_ts.designator_nilreason,
    routes.flightrestriction_ts.type_value,
    routes.flightrestriction_ts.type_nilreason,
    routes.flightrestriction_ts.instruction_value,
    routes.flightrestriction_ts.instruction_nilreason,
    routes_flightconditioncombination_view_yfvmzj.id
order by flightrestriction.identifier, flightrestriction_ts.sequence_number, flightrestriction_ts.correction_number DESC;
create index on routes.flightrestriction_view (id);
-- FloatingDockSiteTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.floatingdocksite_view cascade;
create materialized view airport_heliport.floatingdocksite_view as
select distinct on (floatingdocksite.identifier,floatingdocksite_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.floatingdocksite.id,
    airport_heliport.floatingdocksite_ts.id as ts_id,
    airport_heliport.floatingdocksite_tsp.id as tsp_id,
    airport_heliport.floatingdocksite.identifier,
    airport_heliport.floatingdocksite_ts.interpretation,
    airport_heliport.floatingdocksite_ts.sequence_number,
    airport_heliport.floatingdocksite_ts.correction_number,
    airport_heliport.floatingdocksite_ts.valid_time_begin,
    airport_heliport.floatingdocksite_ts.valid_time_end,
    airport_heliport.floatingdocksite_ts.feature_lifetime_begin,
    airport_heliport.floatingdocksite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_tqdzue.geom AS extent_geom,
    geometry_elevatedsurface_view_tqdzue.elevation AS extent_elevation,
    geometry_elevatedsurface_view_tqdzue.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_tqdzue.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_tqdzue.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_tqdzue.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_grglsv.*) AS annotation
from airport_heliport.floatingdocksite 
inner join master_join mj2 on airport_heliport.floatingdocksite.id = mj2.source_id
inner join airport_heliport.floatingdocksite_tsp on mj2.target_id = airport_heliport.floatingdocksite_tsp.id
inner join airport_heliport.floatingdocksite_ts on airport_heliport.floatingdocksite_tsp.floatingdocksitetimeslice_id = airport_heliport.floatingdocksite_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_tqdzue on airport_heliport.floatingdocksite_ts.extent_id = geometry_elevatedsurface_view_tqdzue.id
left join master_join master_join_vlbnpc on airport_heliport.floatingdocksite_ts.id = master_join_vlbnpc.source_id
left join notes.note_view notes_note_view_grglsv on master_join_vlbnpc.target_id = notes_note_view_grglsv.id
where airport_heliport.floatingdocksite.feature_status = 'APPROVED'
  and airport_heliport.floatingdocksite_ts.feature_status = 'APPROVED'
group by
    airport_heliport.floatingdocksite.id,
    airport_heliport.floatingdocksite_ts.id,
    airport_heliport.floatingdocksite_tsp.id,
    airport_heliport.floatingdocksite.identifier,
    airport_heliport.floatingdocksite_ts.interpretation,
    airport_heliport.floatingdocksite_ts.sequence_number,
    airport_heliport.floatingdocksite_ts.correction_number,
    airport_heliport.floatingdocksite_ts.valid_time_begin,
    airport_heliport.floatingdocksite_ts.valid_time_end,
    airport_heliport.floatingdocksite_ts.feature_lifetime_begin,
    airport_heliport.floatingdocksite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_tqdzue.geom,
    geometry_elevatedsurface_view_tqdzue.elevation,
    geometry_elevatedsurface_view_tqdzue.geoidUndulation,
    geometry_elevatedsurface_view_tqdzue.verticalDatum,
    geometry_elevatedsurface_view_tqdzue.verticalAccuracy,
    geometry_elevatedsurface_view_tqdzue.horizontalAccuracy
order by floatingdocksite.identifier, floatingdocksite_ts.sequence_number, floatingdocksite_ts.correction_number DESC;
create index on airport_heliport.floatingdocksite_view (id);
-- GeoBorderTimeSliceType
-- ['geometry.curve_view', 'notes.note_view']
drop materialized view if exists airspace.geoborder_view cascade;
create materialized view airspace.geoborder_view as
select distinct on (geoborder.identifier,geoborder_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airspace.geoborder.id,
    airspace.geoborder_ts.id as ts_id,
    airspace.geoborder_tsp.id as tsp_id,
    airspace.geoborder.identifier,
    airspace.geoborder_ts.interpretation,
    airspace.geoborder_ts.sequence_number,
    airspace.geoborder_ts.correction_number,
    airspace.geoborder_ts.valid_time_begin,
    airspace.geoborder_ts.valid_time_end,
    airspace.geoborder_ts.feature_lifetime_begin,
    airspace.geoborder_ts.feature_lifetime_end,
    coalesce(cast(airspace.geoborder_ts.name_value as varchar), '(' || airspace.geoborder_ts.name_nilreason || ')') as name,
    coalesce(cast(airspace.geoborder_ts.type_value as varchar), '(' || airspace.geoborder_ts.type_nilreason || ')') as type,
    geometry_curve_view_umawfb.geom AS border_geom,
    geometry_curve_view_umawfb.horizontalAccuracy as border_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_donwld.*) AS annotation
from airspace.geoborder 
inner join master_join mj2 on airspace.geoborder.id = mj2.source_id
inner join airspace.geoborder_tsp on mj2.target_id = airspace.geoborder_tsp.id
inner join airspace.geoborder_ts on airspace.geoborder_tsp.geobordertimeslice_id = airspace.geoborder_ts.id
left join geometry.curve_view geometry_curve_view_umawfb on airspace.geoborder_ts.border_id = geometry_curve_view_umawfb.id
left join master_join master_join_ngktwz on airspace.geoborder_ts.id = master_join_ngktwz.source_id
left join notes.note_view notes_note_view_donwld on master_join_ngktwz.target_id = notes_note_view_donwld.id
where airspace.geoborder.feature_status = 'APPROVED'
  and airspace.geoborder_ts.feature_status = 'APPROVED'
group by
    airspace.geoborder.id,
    airspace.geoborder_ts.id,
    airspace.geoborder_tsp.id,
    airspace.geoborder.identifier,
    airspace.geoborder_ts.interpretation,
    airspace.geoborder_ts.sequence_number,
    airspace.geoborder_ts.correction_number,
    airspace.geoborder_ts.valid_time_begin,
    airspace.geoborder_ts.valid_time_end,
    airspace.geoborder_ts.feature_lifetime_begin,
    airspace.geoborder_ts.feature_lifetime_end,
    airspace.geoborder_ts.name_value,
    airspace.geoborder_ts.name_nilreason,
    airspace.geoborder_ts.type_value,
    airspace.geoborder_ts.type_nilreason,
    geometry_curve_view_umawfb.geom,
    geometry_curve_view_umawfb.horizontalAccuracy
order by geoborder.identifier, geoborder_ts.sequence_number, geoborder_ts.correction_number DESC;
create index on airspace.geoborder_view (id);
-- GlidepathTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.glidepath_view cascade;
create materialized view navaids_points.glidepath_view as
select distinct on (glidepath.identifier,glidepath_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.glidepath.id,
    navaids_points.glidepath_ts.id as ts_id,
    navaids_points.glidepath_tsp.id as tsp_id,
    navaids_points.glidepath.identifier,
    navaids_points.glidepath_ts.interpretation,
    navaids_points.glidepath_ts.sequence_number,
    navaids_points.glidepath_ts.correction_number,
    navaids_points.glidepath_ts.valid_time_begin,
    navaids_points.glidepath_ts.valid_time_end,
    navaids_points.glidepath_ts.feature_lifetime_begin,
    navaids_points.glidepath_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.glidepath_ts.designator_value as varchar), '(' || navaids_points.glidepath_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.glidepath_ts.name_value as varchar), '(' || navaids_points.glidepath_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.glidepath_ts.emissionclass_value as varchar), '(' || navaids_points.glidepath_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.glidepath_ts.mobile_value as varchar), '(' || navaids_points.glidepath_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.glidepath_ts.magneticvariation_value as varchar), '(' || navaids_points.glidepath_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.glidepath_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.glidepath_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.glidepath_ts.datemagneticvariation_value as varchar), '(' || navaids_points.glidepath_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.glidepath_ts.flightchecked_value as varchar), '(' || navaids_points.glidepath_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.glidepath_ts.slope_value as varchar), '(' || navaids_points.glidepath_ts.slope_nilreason || ')') as slope,
    coalesce(cast(navaids_points.glidepath_ts.angleaccuracy_value as varchar), '(' || navaids_points.glidepath_ts.angleaccuracy_nilreason || ')') as angleaccuracy,
    coalesce(cast(navaids_points.glidepath_ts.frequency_value as varchar) || ' ' || navaids_points.glidepath_ts.frequency_uom, '(' || navaids_points.glidepath_ts.frequency_nilreason || ')') as frequency,
    coalesce(cast(navaids_points.glidepath_ts.rdh_value as varchar) || ' ' || navaids_points.glidepath_ts.rdh_uom, '(' || navaids_points.glidepath_ts.rdh_nilreason || ')') as rdh,
    coalesce(cast(navaids_points.glidepath_ts.rdhaccuracy_value as varchar) || ' ' || navaids_points.glidepath_ts.rdhaccuracy_uom, '(' || navaids_points.glidepath_ts.rdhaccuracy_nilreason || ')') as rdhaccuracy,
    geometry_elevatedpoint_view_gtpobv.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_gtpobv.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_gtpobv.geom) AS location_latitude,
    geometry_elevatedpoint_view_gtpobv.elevation AS location_elevation,
    geometry_elevatedpoint_view_gtpobv.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_gtpobv.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_gtpobv.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_gtpobv.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_oqbquy.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_tfmsth.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_kcgxti.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_yevgoy.*) AS annotation
from navaids_points.glidepath 
inner join master_join mj2 on navaids_points.glidepath.id = mj2.source_id
inner join navaids_points.glidepath_tsp on mj2.target_id = navaids_points.glidepath_tsp.id
inner join navaids_points.glidepath_ts on navaids_points.glidepath_tsp.glidepathtimeslice_id = navaids_points.glidepath_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_gtpobv on navaids_points.glidepath_ts.location_id = geometry_elevatedpoint_view_gtpobv.id
left join master_join master_join_vggttr on navaids_points.glidepath_ts.id = master_join_vggttr.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_oqbquy on master_join_vggttr.target_id = navaids_points_authorityfornavaidequipment_view_oqbquy.id
left join master_join master_join_wozqsv on navaids_points.glidepath_ts.id = master_join_wozqsv.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_tfmsth on master_join_wozqsv.target_id = navaids_points_navaidequipmentmonitoring_view_tfmsth.id
left join master_join master_join_cwszgb on navaids_points.glidepath_ts.id = master_join_cwszgb.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_kcgxti on master_join_cwszgb.target_id = navaids_points_navaidoperationalstatus_view_kcgxti.id
left join master_join master_join_diodqt on navaids_points.glidepath_ts.id = master_join_diodqt.source_id
left join notes.note_view notes_note_view_yevgoy on master_join_diodqt.target_id = notes_note_view_yevgoy.id
where navaids_points.glidepath.feature_status = 'APPROVED'
  and navaids_points.glidepath_ts.feature_status = 'APPROVED'
group by
    navaids_points.glidepath.id,
    navaids_points.glidepath_ts.id,
    navaids_points.glidepath_tsp.id,
    navaids_points.glidepath.identifier,
    navaids_points.glidepath_ts.interpretation,
    navaids_points.glidepath_ts.sequence_number,
    navaids_points.glidepath_ts.correction_number,
    navaids_points.glidepath_ts.valid_time_begin,
    navaids_points.glidepath_ts.valid_time_end,
    navaids_points.glidepath_ts.feature_lifetime_begin,
    navaids_points.glidepath_ts.feature_lifetime_end,
    navaids_points.glidepath_ts.designator_value,
    navaids_points.glidepath_ts.designator_nilreason,
    navaids_points.glidepath_ts.name_value,
    navaids_points.glidepath_ts.name_nilreason,
    navaids_points.glidepath_ts.emissionclass_value,
    navaids_points.glidepath_ts.emissionclass_nilreason,
    navaids_points.glidepath_ts.mobile_value,
    navaids_points.glidepath_ts.mobile_nilreason,
    navaids_points.glidepath_ts.magneticvariation_value,
    navaids_points.glidepath_ts.magneticvariation_nilreason,
    navaids_points.glidepath_ts.magneticvariationaccuracy_value,
    navaids_points.glidepath_ts.magneticvariationaccuracy_nilreason,
    navaids_points.glidepath_ts.datemagneticvariation_value,
    navaids_points.glidepath_ts.datemagneticvariation_nilreason,
    navaids_points.glidepath_ts.flightchecked_value,
    navaids_points.glidepath_ts.flightchecked_nilreason,
    navaids_points.glidepath_ts.slope_value,
    navaids_points.glidepath_ts.slope_nilreason,
    navaids_points.glidepath_ts.angleaccuracy_value,
    navaids_points.glidepath_ts.angleaccuracy_nilreason,
    navaids_points.glidepath_ts.frequency_value,
    navaids_points.glidepath_ts.frequency_uom,
    navaids_points.glidepath_ts.frequency_nilreason,
    navaids_points.glidepath_ts.rdh_value,
    navaids_points.glidepath_ts.rdh_uom,
    navaids_points.glidepath_ts.rdh_nilreason,
    navaids_points.glidepath_ts.rdhaccuracy_value,
    navaids_points.glidepath_ts.rdhaccuracy_uom,
    navaids_points.glidepath_ts.rdhaccuracy_nilreason,
    geometry_elevatedpoint_view_gtpobv.geom,
    geometry_elevatedpoint_view_gtpobv.elevation,
    geometry_elevatedpoint_view_gtpobv.geoidUndulation,
    geometry_elevatedpoint_view_gtpobv.verticalDatum,
    geometry_elevatedpoint_view_gtpobv.verticalAccuracy,
    geometry_elevatedpoint_view_gtpobv.horizontalAccuracy
order by glidepath.identifier, glidepath_ts.sequence_number, glidepath_ts.correction_number DESC;
create index on navaids_points.glidepath_view (id);
-- GroundTrafficControlServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.groundtrafficcontrolservice_view cascade;
create materialized view service.groundtrafficcontrolservice_view as
select distinct on (groundtrafficcontrolservice.identifier,groundtrafficcontrolservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.groundtrafficcontrolservice.id,
    service.groundtrafficcontrolservice_ts.id as ts_id,
    service.groundtrafficcontrolservice_tsp.id as tsp_id,
    service.groundtrafficcontrolservice.identifier,
    service.groundtrafficcontrolservice_ts.interpretation,
    service.groundtrafficcontrolservice_ts.sequence_number,
    service.groundtrafficcontrolservice_ts.correction_number,
    service.groundtrafficcontrolservice_ts.valid_time_begin,
    service.groundtrafficcontrolservice_ts.valid_time_end,
    service.groundtrafficcontrolservice_ts.feature_lifetime_begin,
    service.groundtrafficcontrolservice_ts.feature_lifetime_end,
    coalesce(cast(service.groundtrafficcontrolservice_ts.flightoperations_value as varchar), '(' || service.groundtrafficcontrolservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.groundtrafficcontrolservice_ts.rank_value as varchar), '(' || service.groundtrafficcontrolservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.groundtrafficcontrolservice_ts.complianticao_value as varchar), '(' || service.groundtrafficcontrolservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.groundtrafficcontrolservice_ts.name_value as varchar), '(' || service.groundtrafficcontrolservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.groundtrafficcontrolservice_ts.radarassisted_value as varchar), '(' || service.groundtrafficcontrolservice_ts.radarassisted_nilreason || ')') as radarassisted,
    coalesce(cast(service.groundtrafficcontrolservice_ts.datalinkenabled_value as varchar), '(' || service.groundtrafficcontrolservice_ts.datalinkenabled_nilreason || ')') as datalinkenabled,
    coalesce(cast(service.groundtrafficcontrolservice_ts.datalinkchannel_value as varchar), '(' || service.groundtrafficcontrolservice_ts.datalinkchannel_nilreason || ')') as datalinkchannel,
    coalesce(cast(service.groundtrafficcontrolservice_ts.type_value as varchar), '(' || service.groundtrafficcontrolservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_oviwcw.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_oviwcw.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_oviwcw.geom) AS location_latitude,
    geometry_elevatedpoint_view_oviwcw.elevation AS location_elevation,
    geometry_elevatedpoint_view_oviwcw.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_oviwcw.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_oviwcw.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_oviwcw.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_xnkfta.title as varchar), '(' || organisation_unit_pt_xnkfta.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_xnkfta.href AS serviceprovider_href,
    coalesce(cast(airport_heliport_airportheliport_pt_enduld.title as varchar), '(' || airport_heliport_airportheliport_pt_enduld.nilreason[1] || ')') AS clientairport,
    airport_heliport_airportheliport_pt_enduld.href AS clientairport_href,
    jsonb_agg(service_callsigndetail_view_cdinff.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_ghgwkk.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_ghgwkk.title AS varchar), '(' || service_radiocommunicationchannel_pt_ghgwkk.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_ghgwkk.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_wrtfmk.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_rzvgmt.*) AS annotation
from service.groundtrafficcontrolservice 
inner join master_join mj2 on service.groundtrafficcontrolservice.id = mj2.source_id
inner join service.groundtrafficcontrolservice_tsp on mj2.target_id = service.groundtrafficcontrolservice_tsp.id
inner join service.groundtrafficcontrolservice_ts on service.groundtrafficcontrolservice_tsp.groundtrafficcontrolservicetimeslice_id = service.groundtrafficcontrolservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_oviwcw on service.groundtrafficcontrolservice_ts.location_id = geometry_elevatedpoint_view_oviwcw.id
left join organisation.unit_pt organisation_unit_pt_xnkfta on service.groundtrafficcontrolservice_ts.serviceprovider_id = organisation_unit_pt_xnkfta.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_enduld on service.groundtrafficcontrolservice_ts.clientairport_id = airport_heliport_airportheliport_pt_enduld.id
left join master_join master_join_rhybbf on service.groundtrafficcontrolservice_ts.id = master_join_rhybbf.source_id
left join service.callsigndetail_view service_callsigndetail_view_cdinff on master_join_rhybbf.target_id = service_callsigndetail_view_cdinff.id
left join master_join master_join_dtvfty on service.groundtrafficcontrolservice_ts.id = master_join_dtvfty.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_ghgwkk on master_join_dtvfty.target_id = service_radiocommunicationchannel_pt_ghgwkk.id
left join master_join master_join_paxxuh on service.groundtrafficcontrolservice_ts.id = master_join_paxxuh.source_id
left join shared.contactinformation_view shared_contactinformation_view_bbsbbm on master_join_paxxuh.target_id = shared_contactinformation_view_bbsbbm.id
left join master_join master_join_fspfwj on service.groundtrafficcontrolservice_ts.id = master_join_fspfwj.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_wrtfmk on master_join_fspfwj.target_id = service_serviceoperationalstatus_view_wrtfmk.id
left join master_join master_join_yszjze on service.groundtrafficcontrolservice_ts.id = master_join_yszjze.source_id
left join notes.note_view notes_note_view_rzvgmt on master_join_yszjze.target_id = notes_note_view_rzvgmt.id
where service.groundtrafficcontrolservice.feature_status = 'APPROVED'
  and service.groundtrafficcontrolservice_ts.feature_status = 'APPROVED'
group by
    service.groundtrafficcontrolservice.id,
    service.groundtrafficcontrolservice_ts.id,
    service.groundtrafficcontrolservice_tsp.id,
    service.groundtrafficcontrolservice.identifier,
    service.groundtrafficcontrolservice_ts.interpretation,
    service.groundtrafficcontrolservice_ts.sequence_number,
    service.groundtrafficcontrolservice_ts.correction_number,
    service.groundtrafficcontrolservice_ts.valid_time_begin,
    service.groundtrafficcontrolservice_ts.valid_time_end,
    service.groundtrafficcontrolservice_ts.feature_lifetime_begin,
    service.groundtrafficcontrolservice_ts.feature_lifetime_end,
    service.groundtrafficcontrolservice_ts.flightoperations_value,
    service.groundtrafficcontrolservice_ts.flightoperations_nilreason,
    service.groundtrafficcontrolservice_ts.rank_value,
    service.groundtrafficcontrolservice_ts.rank_nilreason,
    service.groundtrafficcontrolservice_ts.complianticao_value,
    service.groundtrafficcontrolservice_ts.complianticao_nilreason,
    service.groundtrafficcontrolservice_ts.name_value,
    service.groundtrafficcontrolservice_ts.name_nilreason,
    service.groundtrafficcontrolservice_ts.radarassisted_value,
    service.groundtrafficcontrolservice_ts.radarassisted_nilreason,
    service.groundtrafficcontrolservice_ts.datalinkenabled_value,
    service.groundtrafficcontrolservice_ts.datalinkenabled_nilreason,
    service.groundtrafficcontrolservice_ts.datalinkchannel_value,
    service.groundtrafficcontrolservice_ts.datalinkchannel_nilreason,
    service.groundtrafficcontrolservice_ts.type_value,
    service.groundtrafficcontrolservice_ts.type_nilreason,
    geometry_elevatedpoint_view_oviwcw.geom,
    geometry_elevatedpoint_view_oviwcw.elevation,
    geometry_elevatedpoint_view_oviwcw.geoidUndulation,
    geometry_elevatedpoint_view_oviwcw.verticalDatum,
    geometry_elevatedpoint_view_oviwcw.verticalAccuracy,
    geometry_elevatedpoint_view_oviwcw.horizontalAccuracy,
    organisation_unit_pt_xnkfta.title,
    organisation_unit_pt_xnkfta.nilreason[1],
    organisation_unit_pt_xnkfta.href,
    airport_heliport_airportheliport_pt_enduld.title,
    airport_heliport_airportheliport_pt_enduld.nilreason[1],
    airport_heliport_airportheliport_pt_enduld.href
order by groundtrafficcontrolservice.identifier, groundtrafficcontrolservice_ts.sequence_number, groundtrafficcontrolservice_ts.correction_number DESC;
create index on service.groundtrafficcontrolservice_view (id);
-- GuidanceLineLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.guidancelinelightsystem_view cascade;
create materialized view airport_heliport.guidancelinelightsystem_view as
select distinct on (guidancelinelightsystem.identifier,guidancelinelightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidancelinelightsystem.id,
    airport_heliport.guidancelinelightsystem_ts.id as ts_id,
    airport_heliport.guidancelinelightsystem_tsp.id as tsp_id,
    airport_heliport.guidancelinelightsystem.identifier,
    airport_heliport.guidancelinelightsystem_ts.interpretation,
    airport_heliport.guidancelinelightsystem_ts.sequence_number,
    airport_heliport.guidancelinelightsystem_ts.correction_number,
    airport_heliport.guidancelinelightsystem_ts.valid_time_begin,
    airport_heliport.guidancelinelightsystem_ts.valid_time_end,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_begin,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.guidancelinelightsystem_ts.colour_value as varchar), '(' || airport_heliport.guidancelinelightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport_guidanceline_pt_khrqax.title as varchar), '(' || airport_heliport_guidanceline_pt_khrqax.nilreason[1] || ')') AS lightedguidanceline,
    airport_heliport_guidanceline_pt_khrqax.href AS lightedguidanceline_href,
    jsonb_agg(shared_lightelement_view_saluvr.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_hjpsbv.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_avkerl.*) AS annotation
from airport_heliport.guidancelinelightsystem 
inner join master_join mj2 on airport_heliport.guidancelinelightsystem.id = mj2.source_id
inner join airport_heliport.guidancelinelightsystem_tsp on mj2.target_id = airport_heliport.guidancelinelightsystem_tsp.id
inner join airport_heliport.guidancelinelightsystem_ts on airport_heliport.guidancelinelightsystem_tsp.guidancelinelightsystemtimeslice_id = airport_heliport.guidancelinelightsystem_ts.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_khrqax on airport_heliport.guidancelinelightsystem_ts.lightedguidanceline_id = airport_heliport_guidanceline_pt_khrqax.id
left join master_join master_join_hwlaus on airport_heliport.guidancelinelightsystem_ts.id = master_join_hwlaus.source_id
left join shared.lightelement_view shared_lightelement_view_saluvr on master_join_hwlaus.target_id = shared_lightelement_view_saluvr.id
left join master_join master_join_abwuxb on airport_heliport.guidancelinelightsystem_ts.id = master_join_abwuxb.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_hjpsbv on master_join_abwuxb.target_id = airport_heliport_groundlightingavailability_view_hjpsbv.id
left join master_join master_join_tdvdqe on airport_heliport.guidancelinelightsystem_ts.id = master_join_tdvdqe.source_id
left join notes.note_view notes_note_view_avkerl on master_join_tdvdqe.target_id = notes_note_view_avkerl.id
where airport_heliport.guidancelinelightsystem.feature_status = 'APPROVED'
  and airport_heliport.guidancelinelightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidancelinelightsystem.id,
    airport_heliport.guidancelinelightsystem_ts.id,
    airport_heliport.guidancelinelightsystem_tsp.id,
    airport_heliport.guidancelinelightsystem.identifier,
    airport_heliport.guidancelinelightsystem_ts.interpretation,
    airport_heliport.guidancelinelightsystem_ts.sequence_number,
    airport_heliport.guidancelinelightsystem_ts.correction_number,
    airport_heliport.guidancelinelightsystem_ts.valid_time_begin,
    airport_heliport.guidancelinelightsystem_ts.valid_time_end,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_begin,
    airport_heliport.guidancelinelightsystem_ts.feature_lifetime_end,
    airport_heliport.guidancelinelightsystem_ts.emergencylighting_value,
    airport_heliport.guidancelinelightsystem_ts.emergencylighting_nilreason,
    airport_heliport.guidancelinelightsystem_ts.intensitylevel_value,
    airport_heliport.guidancelinelightsystem_ts.intensitylevel_nilreason,
    airport_heliport.guidancelinelightsystem_ts.colour_value,
    airport_heliport.guidancelinelightsystem_ts.colour_nilreason,
    airport_heliport_guidanceline_pt_khrqax.title,
    airport_heliport_guidanceline_pt_khrqax.nilreason[1],
    airport_heliport_guidanceline_pt_khrqax.href
order by guidancelinelightsystem.identifier, guidancelinelightsystem_ts.sequence_number, guidancelinelightsystem_ts.correction_number DESC;
create index on airport_heliport.guidancelinelightsystem_view (id);
-- GuidanceLineMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.guidancelinemarking_view cascade;
create materialized view airport_heliport.guidancelinemarking_view as
select distinct on (guidancelinemarking.identifier,guidancelinemarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidancelinemarking.id,
    airport_heliport.guidancelinemarking_ts.id as ts_id,
    airport_heliport.guidancelinemarking_tsp.id as tsp_id,
    airport_heliport.guidancelinemarking.identifier,
    airport_heliport.guidancelinemarking_ts.interpretation,
    airport_heliport.guidancelinemarking_ts.sequence_number,
    airport_heliport.guidancelinemarking_ts.correction_number,
    airport_heliport.guidancelinemarking_ts.valid_time_begin,
    airport_heliport.guidancelinemarking_ts.valid_time_end,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_begin,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.guidancelinemarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.guidancelinemarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.guidancelinemarking_ts.condition_value as varchar), '(' || airport_heliport.guidancelinemarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_guidanceline_pt_mcyaui.title as varchar), '(' || airport_heliport_guidanceline_pt_mcyaui.nilreason[1] || ')') AS markedguidanceline,
    airport_heliport_guidanceline_pt_mcyaui.href AS markedguidanceline_href,
    jsonb_agg(airport_heliport_markingelement_view_trsbkl.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_ovsnry.*) AS annotation
from airport_heliport.guidancelinemarking 
inner join master_join mj2 on airport_heliport.guidancelinemarking.id = mj2.source_id
inner join airport_heliport.guidancelinemarking_tsp on mj2.target_id = airport_heliport.guidancelinemarking_tsp.id
inner join airport_heliport.guidancelinemarking_ts on airport_heliport.guidancelinemarking_tsp.guidancelinemarkingtimeslice_id = airport_heliport.guidancelinemarking_ts.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_mcyaui on airport_heliport.guidancelinemarking_ts.markedguidanceline_id = airport_heliport_guidanceline_pt_mcyaui.id
left join master_join master_join_tnboyd on airport_heliport.guidancelinemarking_ts.id = master_join_tnboyd.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_trsbkl on master_join_tnboyd.target_id = airport_heliport_markingelement_view_trsbkl.id
left join master_join master_join_glkjor on airport_heliport.guidancelinemarking_ts.id = master_join_glkjor.source_id
left join notes.note_view notes_note_view_ovsnry on master_join_glkjor.target_id = notes_note_view_ovsnry.id
where airport_heliport.guidancelinemarking.feature_status = 'APPROVED'
  and airport_heliport.guidancelinemarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidancelinemarking.id,
    airport_heliport.guidancelinemarking_ts.id,
    airport_heliport.guidancelinemarking_tsp.id,
    airport_heliport.guidancelinemarking.identifier,
    airport_heliport.guidancelinemarking_ts.interpretation,
    airport_heliport.guidancelinemarking_ts.sequence_number,
    airport_heliport.guidancelinemarking_ts.correction_number,
    airport_heliport.guidancelinemarking_ts.valid_time_begin,
    airport_heliport.guidancelinemarking_ts.valid_time_end,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_begin,
    airport_heliport.guidancelinemarking_ts.feature_lifetime_end,
    airport_heliport.guidancelinemarking_ts.markingicaostandard_value,
    airport_heliport.guidancelinemarking_ts.markingicaostandard_nilreason,
    airport_heliport.guidancelinemarking_ts.condition_value,
    airport_heliport.guidancelinemarking_ts.condition_nilreason,
    airport_heliport_guidanceline_pt_mcyaui.title,
    airport_heliport_guidanceline_pt_mcyaui.nilreason[1],
    airport_heliport_guidanceline_pt_mcyaui.href
order by guidancelinemarking.identifier, guidancelinemarking_ts.sequence_number, guidancelinemarking_ts.correction_number DESC;
create index on airport_heliport.guidancelinemarking_view (id);
-- GuidanceLineTimeSliceType
-- ['geometry.elevatedcurve_view', 'notes.note_view']
drop materialized view if exists airport_heliport.guidanceline_view cascade;
create materialized view airport_heliport.guidanceline_view as
select distinct on (guidanceline.identifier,guidanceline_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.guidanceline.id,
    airport_heliport.guidanceline_ts.id as ts_id,
    airport_heliport.guidanceline_tsp.id as tsp_id,
    airport_heliport.guidanceline.identifier,
    airport_heliport.guidanceline_ts.interpretation,
    airport_heliport.guidanceline_ts.sequence_number,
    airport_heliport.guidanceline_ts.correction_number,
    airport_heliport.guidanceline_ts.valid_time_begin,
    airport_heliport.guidanceline_ts.valid_time_end,
    airport_heliport.guidanceline_ts.feature_lifetime_begin,
    airport_heliport.guidanceline_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.guidanceline_ts.designator_value as varchar), '(' || airport_heliport.guidanceline_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.guidanceline_ts.type_value as varchar), '(' || airport_heliport.guidanceline_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.guidanceline_ts.usagedirection_value as varchar), '(' || airport_heliport.guidanceline_ts.usagedirection_nilreason || ')') as usagedirection,
    coalesce(cast(airport_heliport.guidanceline_ts.maxspeed_value as varchar) || ' ' || airport_heliport.guidanceline_ts.maxspeed_uom, '(' || airport_heliport.guidanceline_ts.maxspeed_nilreason || ')') as maxspeed,
    geometry_elevatedcurve_view_ltdfey.geom AS extent_geom,
    geometry_elevatedcurve_view_ltdfey.elevation AS extent_elevation,
    geometry_elevatedcurve_view_ltdfey.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedcurve_view_ltdfey.verticalDatum AS extent_verticaldatum,
    geometry_elevatedcurve_view_ltdfey.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedcurve_view_ltdfey.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_touchdownliftoff_pt_vlivwq.id,
    'title', coalesce(cast(airport_heliport_touchdownliftoff_pt_vlivwq.title AS varchar), '(' || airport_heliport_touchdownliftoff_pt_vlivwq.nilreason[1] || ')'),
    'href', airport_heliport_touchdownliftoff_pt_vlivwq.href)) AS connectedtouchdownliftoff,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaycentrelinepoint_pt_udiceo.id,
    'title', coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_udiceo.title AS varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_udiceo.nilreason[1] || ')'),
    'href', airport_heliport_runwaycentrelinepoint_pt_udiceo.href)) AS connectedrunwaycentrelinepoint,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_apron_pt_ctenle.id,
    'title', coalesce(cast(airport_heliport_apron_pt_ctenle.title AS varchar), '(' || airport_heliport_apron_pt_ctenle.nilreason[1] || ')'),
    'href', airport_heliport_apron_pt_ctenle.href)) AS connectedapron,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_aircraftstand_pt_dolcdk.id,
    'title', coalesce(cast(airport_heliport_aircraftstand_pt_dolcdk.title AS varchar), '(' || airport_heliport_aircraftstand_pt_dolcdk.nilreason[1] || ')'),
    'href', airport_heliport_aircraftstand_pt_dolcdk.href)) AS connectedstand,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_taxiway_pt_yadhuw.id,
    'title', coalesce(cast(airport_heliport_taxiway_pt_yadhuw.title AS varchar), '(' || airport_heliport_taxiway_pt_yadhuw.nilreason[1] || ')'),
    'href', airport_heliport_taxiway_pt_yadhuw.href)) AS connectedtaxiway,
    jsonb_agg(DISTINCT notes_note_view_yeatwk.*) AS annotation
from airport_heliport.guidanceline 
inner join master_join mj2 on airport_heliport.guidanceline.id = mj2.source_id
inner join airport_heliport.guidanceline_tsp on mj2.target_id = airport_heliport.guidanceline_tsp.id
inner join airport_heliport.guidanceline_ts on airport_heliport.guidanceline_tsp.guidancelinetimeslice_id = airport_heliport.guidanceline_ts.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_ltdfey on airport_heliport.guidanceline_ts.extent_id = geometry_elevatedcurve_view_ltdfey.id
left join master_join master_join_hoqhxp on airport_heliport.guidanceline_ts.id = master_join_hoqhxp.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_vlivwq on master_join_hoqhxp.target_id = airport_heliport_touchdownliftoff_pt_vlivwq.id
left join master_join master_join_jducgj on airport_heliport.guidanceline_ts.id = master_join_jducgj.source_id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_udiceo on master_join_jducgj.target_id = airport_heliport_runwaycentrelinepoint_pt_udiceo.id
left join master_join master_join_jevvqq on airport_heliport.guidanceline_ts.id = master_join_jevvqq.source_id
left join airport_heliport.apron_pt airport_heliport_apron_pt_ctenle on master_join_jevvqq.target_id = airport_heliport_apron_pt_ctenle.id
left join master_join master_join_envkqb on airport_heliport.guidanceline_ts.id = master_join_envkqb.source_id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_dolcdk on master_join_envkqb.target_id = airport_heliport_aircraftstand_pt_dolcdk.id
left join master_join master_join_hjxqjf on airport_heliport.guidanceline_ts.id = master_join_hjxqjf.source_id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_yadhuw on master_join_hjxqjf.target_id = airport_heliport_taxiway_pt_yadhuw.id
left join master_join master_join_zjxkoz on airport_heliport.guidanceline_ts.id = master_join_zjxkoz.source_id
left join notes.note_view notes_note_view_yeatwk on master_join_zjxkoz.target_id = notes_note_view_yeatwk.id
where airport_heliport.guidanceline.feature_status = 'APPROVED'
  and airport_heliport.guidanceline_ts.feature_status = 'APPROVED'
group by
    airport_heliport.guidanceline.id,
    airport_heliport.guidanceline_ts.id,
    airport_heliport.guidanceline_tsp.id,
    airport_heliport.guidanceline.identifier,
    airport_heliport.guidanceline_ts.interpretation,
    airport_heliport.guidanceline_ts.sequence_number,
    airport_heliport.guidanceline_ts.correction_number,
    airport_heliport.guidanceline_ts.valid_time_begin,
    airport_heliport.guidanceline_ts.valid_time_end,
    airport_heliport.guidanceline_ts.feature_lifetime_begin,
    airport_heliport.guidanceline_ts.feature_lifetime_end,
    airport_heliport.guidanceline_ts.designator_value,
    airport_heliport.guidanceline_ts.designator_nilreason,
    airport_heliport.guidanceline_ts.type_value,
    airport_heliport.guidanceline_ts.type_nilreason,
    airport_heliport.guidanceline_ts.usagedirection_value,
    airport_heliport.guidanceline_ts.usagedirection_nilreason,
    airport_heliport.guidanceline_ts.maxspeed_value,
    airport_heliport.guidanceline_ts.maxspeed_uom,
    airport_heliport.guidanceline_ts.maxspeed_nilreason,
    geometry_elevatedcurve_view_ltdfey.geom,
    geometry_elevatedcurve_view_ltdfey.elevation,
    geometry_elevatedcurve_view_ltdfey.geoidUndulation,
    geometry_elevatedcurve_view_ltdfey.verticalDatum,
    geometry_elevatedcurve_view_ltdfey.verticalAccuracy,
    geometry_elevatedcurve_view_ltdfey.horizontalAccuracy
order by guidanceline.identifier, guidanceline_ts.sequence_number, guidanceline_ts.correction_number DESC;
create index on airport_heliport.guidanceline_view (id);
-- HoldingAssessmentTimeSliceType
-- ['notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists shared.holdingassessment_view cascade;
create materialized view shared.holdingassessment_view as
select distinct on (holdingassessment.identifier,holdingassessment_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.holdingassessment.id,
    shared.holdingassessment_ts.id as ts_id,
    shared.holdingassessment_tsp.id as tsp_id,
    shared.holdingassessment.identifier,
    shared.holdingassessment_ts.interpretation,
    shared.holdingassessment_ts.sequence_number,
    shared.holdingassessment_ts.correction_number,
    shared.holdingassessment_ts.valid_time_begin,
    shared.holdingassessment_ts.valid_time_end,
    shared.holdingassessment_ts.feature_lifetime_begin,
    shared.holdingassessment_ts.feature_lifetime_end,
    coalesce(cast(shared.holdingassessment_ts.upperlimitreference_value as varchar), '(' || shared.holdingassessment_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(shared.holdingassessment_ts.lowerlimitreference_value as varchar), '(' || shared.holdingassessment_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(shared.holdingassessment_ts.patterntemplate_value as varchar), '(' || shared.holdingassessment_ts.patterntemplate_nilreason || ')') as patterntemplate,
    coalesce(cast(shared.holdingassessment_ts.turbulentair_value as varchar), '(' || shared.holdingassessment_ts.turbulentair_nilreason || ')') as turbulentair,
    coalesce(cast(shared.holdingassessment_ts.upperlimit_value as varchar) || ' ' || shared.holdingassessment_ts.upperlimit_uom, '(' || shared.holdingassessment_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(shared.holdingassessment_ts.lowerlimit_value as varchar) || ' ' || shared.holdingassessment_ts.lowerlimit_uom, '(' || shared.holdingassessment_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(shared.holdingassessment_ts.speedlimit_value as varchar) || ' ' || shared.holdingassessment_ts.speedlimit_uom, '(' || shared.holdingassessment_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(shared.holdingassessment_ts.leglengthtoward_value as varchar) || ' ' || shared.holdingassessment_ts.leglengthtoward_uom, '(' || shared.holdingassessment_ts.leglengthtoward_nilreason || ')') as leglengthtoward,
    coalesce(cast(shared.holdingassessment_ts.leglengthaway_value as varchar) || ' ' || shared.holdingassessment_ts.leglengthaway_uom, '(' || shared.holdingassessment_ts.leglengthaway_nilreason || ')') as leglengthaway,
    coalesce(cast(holding_unplannedholding_pt_nnuepw.title as varchar), '(' || holding_unplannedholding_pt_nnuepw.nilreason[1] || ')') AS unplannedholding,
    holding_unplannedholding_pt_nnuepw.href AS unplannedholding_href,
    coalesce(cast(holding_holdingpattern_pt_gwyiks.title as varchar), '(' || holding_holdingpattern_pt_gwyiks.nilreason[1] || ')') AS assessedholdingpattern,
    holding_holdingpattern_pt_gwyiks.href AS assessedholdingpattern_href,
    jsonb_agg(shared_obstacleassessmentarea_view_luqiog.id) AS obstacleassessment,
    jsonb_agg(DISTINCT notes_note_view_hzeexi.*) AS annotation
from shared.holdingassessment 
inner join master_join mj2 on shared.holdingassessment.id = mj2.source_id
inner join shared.holdingassessment_tsp on mj2.target_id = shared.holdingassessment_tsp.id
inner join shared.holdingassessment_ts on shared.holdingassessment_tsp.holdingassessmenttimeslice_id = shared.holdingassessment_ts.id
left join holding.unplannedholding_pt holding_unplannedholding_pt_nnuepw on shared.holdingassessment_ts.unplannedholding_id = holding_unplannedholding_pt_nnuepw.id
left join holding.holdingpattern_pt holding_holdingpattern_pt_gwyiks on shared.holdingassessment_ts.assessedholdingpattern_id = holding_holdingpattern_pt_gwyiks.id
left join master_join master_join_rplluw on shared.holdingassessment_ts.id = master_join_rplluw.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_luqiog on master_join_rplluw.target_id = shared_obstacleassessmentarea_view_luqiog.id
left join master_join master_join_jqxmsd on shared.holdingassessment_ts.id = master_join_jqxmsd.source_id
left join notes.note_view notes_note_view_hzeexi on master_join_jqxmsd.target_id = notes_note_view_hzeexi.id
where shared.holdingassessment.feature_status = 'APPROVED'
  and shared.holdingassessment_ts.feature_status = 'APPROVED'
group by
    shared.holdingassessment.id,
    shared.holdingassessment_ts.id,
    shared.holdingassessment_tsp.id,
    shared.holdingassessment.identifier,
    shared.holdingassessment_ts.interpretation,
    shared.holdingassessment_ts.sequence_number,
    shared.holdingassessment_ts.correction_number,
    shared.holdingassessment_ts.valid_time_begin,
    shared.holdingassessment_ts.valid_time_end,
    shared.holdingassessment_ts.feature_lifetime_begin,
    shared.holdingassessment_ts.feature_lifetime_end,
    shared.holdingassessment_ts.upperlimitreference_value,
    shared.holdingassessment_ts.upperlimitreference_nilreason,
    shared.holdingassessment_ts.lowerlimitreference_value,
    shared.holdingassessment_ts.lowerlimitreference_nilreason,
    shared.holdingassessment_ts.patterntemplate_value,
    shared.holdingassessment_ts.patterntemplate_nilreason,
    shared.holdingassessment_ts.turbulentair_value,
    shared.holdingassessment_ts.turbulentair_nilreason,
    shared.holdingassessment_ts.upperlimit_value,
    shared.holdingassessment_ts.upperlimit_uom,
    shared.holdingassessment_ts.upperlimit_nilreason,
    shared.holdingassessment_ts.lowerlimit_value,
    shared.holdingassessment_ts.lowerlimit_uom,
    shared.holdingassessment_ts.lowerlimit_nilreason,
    shared.holdingassessment_ts.speedlimit_value,
    shared.holdingassessment_ts.speedlimit_uom,
    shared.holdingassessment_ts.speedlimit_nilreason,
    shared.holdingassessment_ts.leglengthtoward_value,
    shared.holdingassessment_ts.leglengthtoward_uom,
    shared.holdingassessment_ts.leglengthtoward_nilreason,
    shared.holdingassessment_ts.leglengthaway_value,
    shared.holdingassessment_ts.leglengthaway_uom,
    shared.holdingassessment_ts.leglengthaway_nilreason,
    holding_unplannedholding_pt_nnuepw.title,
    holding_unplannedholding_pt_nnuepw.nilreason[1],
    holding_unplannedholding_pt_nnuepw.href,
    holding_holdingpattern_pt_gwyiks.title,
    holding_holdingpattern_pt_gwyiks.nilreason[1],
    holding_holdingpattern_pt_gwyiks.href
order by holdingassessment.identifier, holdingassessment_ts.sequence_number, holdingassessment_ts.correction_number DESC;
create index on shared.holdingassessment_view (id);
-- HoldingPatternTimeSliceType
-- ['holding.holdingpatternduration_view', 'geometry.curve_view', 'holding.holdingpatterndistance_view', 'notes.note_view']
drop materialized view if exists holding.holdingpattern_view cascade;
create materialized view holding.holdingpattern_view as
select distinct on (holdingpattern.identifier,holdingpattern_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    holding.holdingpattern.id,
    holding.holdingpattern_ts.id as ts_id,
    holding.holdingpattern_tsp.id as tsp_id,
    holding.holdingpattern.identifier,
    holding.holdingpattern_ts.interpretation,
    holding.holdingpattern_ts.sequence_number,
    holding.holdingpattern_ts.correction_number,
    holding.holdingpattern_ts.valid_time_begin,
    holding.holdingpattern_ts.valid_time_end,
    holding.holdingpattern_ts.feature_lifetime_begin,
    holding.holdingpattern_ts.feature_lifetime_end,
    coalesce(cast(holding.holdingpattern_ts.type_value as varchar), '(' || holding.holdingpattern_ts.type_nilreason || ')') as type,
    coalesce(cast(holding.holdingpattern_ts.outboundcourse_value as varchar), '(' || holding.holdingpattern_ts.outboundcourse_nilreason || ')') as outboundcourse,
    coalesce(cast(holding.holdingpattern_ts.outboundcoursetype_value as varchar), '(' || holding.holdingpattern_ts.outboundcoursetype_nilreason || ')') as outboundcoursetype,
    coalesce(cast(holding.holdingpattern_ts.inboundcourse_value as varchar), '(' || holding.holdingpattern_ts.inboundcourse_nilreason || ')') as inboundcourse,
    coalesce(cast(holding.holdingpattern_ts.turndirection_value as varchar), '(' || holding.holdingpattern_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(holding.holdingpattern_ts.upperlimitreference_value as varchar), '(' || holding.holdingpattern_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(holding.holdingpattern_ts.lowerlimitreference_value as varchar), '(' || holding.holdingpattern_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(holding.holdingpattern_ts.instruction_value as varchar), '(' || holding.holdingpattern_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(holding.holdingpattern_ts.nonstandardholding_value as varchar), '(' || holding.holdingpattern_ts.nonstandardholding_nilreason || ')') as nonstandardholding,
    coalesce(cast(holding.holdingpattern_ts.upperlimit_value as varchar) || ' ' || holding.holdingpattern_ts.upperlimit_uom, '(' || holding.holdingpattern_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(holding.holdingpattern_ts.lowerlimit_value as varchar) || ' ' || holding.holdingpattern_ts.lowerlimit_uom, '(' || holding.holdingpattern_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(holding.holdingpattern_ts.speedlimit_value as varchar) || ' ' || holding.holdingpattern_ts.speedlimit_uom, '(' || holding.holdingpattern_ts.speedlimit_nilreason || ')') as speedlimit,
    holding_holdingpatternduration_view_xphddl.id AS outboundlegspanendtime,
    holding_holdingpatterndistance_view_mhunmn.id AS outboundlegspanenddistance,
    geometry_curve_view_ovkmxl.geom AS extent_geom,
    geometry_curve_view_ovkmxl.horizontalAccuracy as extent_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_lbmjup.*) AS annotation
from holding.holdingpattern 
inner join master_join mj2 on holding.holdingpattern.id = mj2.source_id
inner join holding.holdingpattern_tsp on mj2.target_id = holding.holdingpattern_tsp.id
inner join holding.holdingpattern_ts on holding.holdingpattern_tsp.holdingpatterntimeslice_id = holding.holdingpattern_ts.id
left join holding.holdingpatternduration_view holding_holdingpatternduration_view_xphddl on holding.holdingpattern_ts.outboundlegspan_endtime_id = holding_holdingpatternduration_view_xphddl.id
left join holding.holdingpatterndistance_view holding_holdingpatterndistance_view_mhunmn on holding.holdingpattern_ts.outboundlegspan_enddistance_id = holding_holdingpatterndistance_view_mhunmn.id
left join geometry.curve_view geometry_curve_view_ovkmxl on holding.holdingpattern_ts.extent_id = geometry_curve_view_ovkmxl.id
left join master_join master_join_nzobep on holding.holdingpattern_ts.id = master_join_nzobep.source_id
left join notes.note_view notes_note_view_lbmjup on master_join_nzobep.target_id = notes_note_view_lbmjup.id
where holding.holdingpattern.feature_status = 'APPROVED'
  and holding.holdingpattern_ts.feature_status = 'APPROVED'
group by
    holding.holdingpattern.id,
    holding.holdingpattern_ts.id,
    holding.holdingpattern_tsp.id,
    holding.holdingpattern.identifier,
    holding.holdingpattern_ts.interpretation,
    holding.holdingpattern_ts.sequence_number,
    holding.holdingpattern_ts.correction_number,
    holding.holdingpattern_ts.valid_time_begin,
    holding.holdingpattern_ts.valid_time_end,
    holding.holdingpattern_ts.feature_lifetime_begin,
    holding.holdingpattern_ts.feature_lifetime_end,
    holding.holdingpattern_ts.type_value,
    holding.holdingpattern_ts.type_nilreason,
    holding.holdingpattern_ts.outboundcourse_value,
    holding.holdingpattern_ts.outboundcourse_nilreason,
    holding.holdingpattern_ts.outboundcoursetype_value,
    holding.holdingpattern_ts.outboundcoursetype_nilreason,
    holding.holdingpattern_ts.inboundcourse_value,
    holding.holdingpattern_ts.inboundcourse_nilreason,
    holding.holdingpattern_ts.turndirection_value,
    holding.holdingpattern_ts.turndirection_nilreason,
    holding.holdingpattern_ts.upperlimitreference_value,
    holding.holdingpattern_ts.upperlimitreference_nilreason,
    holding.holdingpattern_ts.lowerlimitreference_value,
    holding.holdingpattern_ts.lowerlimitreference_nilreason,
    holding.holdingpattern_ts.instruction_value,
    holding.holdingpattern_ts.instruction_nilreason,
    holding.holdingpattern_ts.nonstandardholding_value,
    holding.holdingpattern_ts.nonstandardholding_nilreason,
    holding.holdingpattern_ts.upperlimit_value,
    holding.holdingpattern_ts.upperlimit_uom,
    holding.holdingpattern_ts.upperlimit_nilreason,
    holding.holdingpattern_ts.lowerlimit_value,
    holding.holdingpattern_ts.lowerlimit_uom,
    holding.holdingpattern_ts.lowerlimit_nilreason,
    holding.holdingpattern_ts.speedlimit_value,
    holding.holdingpattern_ts.speedlimit_uom,
    holding.holdingpattern_ts.speedlimit_nilreason,
    holding_holdingpatternduration_view_xphddl.id,
    holding_holdingpatterndistance_view_mhunmn.id,
    geometry_curve_view_ovkmxl.geom,
    geometry_curve_view_ovkmxl.horizontalAccuracy
order by holdingpattern.identifier, holdingpattern_ts.sequence_number, holdingpattern_ts.correction_number DESC;
create index on holding.holdingpattern_view (id);
-- InformationServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'routes.routeportion_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.informationservice_view cascade;
create materialized view service.informationservice_view as
select distinct on (informationservice.identifier,informationservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.informationservice.id,
    service.informationservice_ts.id as ts_id,
    service.informationservice_tsp.id as tsp_id,
    service.informationservice.identifier,
    service.informationservice_ts.interpretation,
    service.informationservice_ts.sequence_number,
    service.informationservice_ts.correction_number,
    service.informationservice_ts.valid_time_begin,
    service.informationservice_ts.valid_time_end,
    service.informationservice_ts.feature_lifetime_begin,
    service.informationservice_ts.feature_lifetime_end,
    coalesce(cast(service.informationservice_ts.flightoperations_value as varchar), '(' || service.informationservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.informationservice_ts.rank_value as varchar), '(' || service.informationservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.informationservice_ts.complianticao_value as varchar), '(' || service.informationservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.informationservice_ts.name_value as varchar), '(' || service.informationservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.informationservice_ts.type_value as varchar), '(' || service.informationservice_ts.type_nilreason || ')') as type,
    coalesce(cast(service.informationservice_ts.voice_value as varchar), '(' || service.informationservice_ts.voice_nilreason || ')') as voice,
    coalesce(cast(service.informationservice_ts.datalink_value as varchar), '(' || service.informationservice_ts.datalink_nilreason || ')') as datalink,
    coalesce(cast(service.informationservice_ts.recorded_value as varchar), '(' || service.informationservice_ts.recorded_nilreason || ')') as recorded,
    geometry_elevatedpoint_view_rpzqfo.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_rpzqfo.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_rpzqfo.geom) AS location_latitude,
    geometry_elevatedpoint_view_rpzqfo.elevation AS location_elevation,
    geometry_elevatedpoint_view_rpzqfo.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_rpzqfo.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_rpzqfo.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_rpzqfo.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_mqlrpc.title as varchar), '(' || organisation_unit_pt_mqlrpc.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_mqlrpc.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_lvbbjw.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_hpjksq.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_hpjksq.title AS varchar), '(' || service_radiocommunicationchannel_pt_hpjksq.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_hpjksq.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_ecvjze.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_chbkxq.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', navaids_points_vor_pt_dqhcef.id,
    'title', coalesce(cast(navaids_points_vor_pt_dqhcef.title AS varchar), '(' || navaids_points_vor_pt_dqhcef.nilreason[1] || ')'),
    'href', navaids_points_vor_pt_dqhcef.href)) AS navaidbroadcast,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_xhdorf.id,
    'title', coalesce(cast(airspace_airspace_pt_xhdorf.title AS varchar), '(' || airspace_airspace_pt_xhdorf.nilreason[1] || ')'),
    'href', airspace_airspace_pt_xhdorf.href)) AS clientairspace,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_oqqwig.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_oqqwig.title AS varchar), '(' || airport_heliport_airportheliport_pt_oqqwig.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_oqqwig.href)) AS clientairport,
    jsonb_agg(routes_routeportion_view_eqtodf.id) AS clientroute,
    jsonb_agg(DISTINCT jsonb_build_object('id', holding_holdingpattern_pt_xebntb.id,
    'title', coalesce(cast(holding_holdingpattern_pt_xebntb.title AS varchar), '(' || holding_holdingpattern_pt_xebntb.nilreason[1] || ')'),
    'href', holding_holdingpattern_pt_xebntb.href)) AS clientholding,
    jsonb_agg(DISTINCT jsonb_build_object('id', aerial_refuelling_aerialrefuelling_pt_fdyxjn.id,
    'title', coalesce(cast(aerial_refuelling_aerialrefuelling_pt_fdyxjn.title AS varchar), '(' || aerial_refuelling_aerialrefuelling_pt_fdyxjn.nilreason[1] || ')'),
    'href', aerial_refuelling_aerialrefuelling_pt_fdyxjn.href)) AS clientaerialrefuelling
from service.informationservice 
inner join master_join mj2 on service.informationservice.id = mj2.source_id
inner join service.informationservice_tsp on mj2.target_id = service.informationservice_tsp.id
inner join service.informationservice_ts on service.informationservice_tsp.informationservicetimeslice_id = service.informationservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_rpzqfo on service.informationservice_ts.location_id = geometry_elevatedpoint_view_rpzqfo.id
left join organisation.unit_pt organisation_unit_pt_mqlrpc on service.informationservice_ts.serviceprovider_id = organisation_unit_pt_mqlrpc.id
left join master_join master_join_axutdk on service.informationservice_ts.id = master_join_axutdk.source_id
left join service.callsigndetail_view service_callsigndetail_view_lvbbjw on master_join_axutdk.target_id = service_callsigndetail_view_lvbbjw.id
left join master_join master_join_ebzbgi on service.informationservice_ts.id = master_join_ebzbgi.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_hpjksq on master_join_ebzbgi.target_id = service_radiocommunicationchannel_pt_hpjksq.id
left join master_join master_join_whqasm on service.informationservice_ts.id = master_join_whqasm.source_id
left join shared.contactinformation_view shared_contactinformation_view_ktzquy on master_join_whqasm.target_id = shared_contactinformation_view_ktzquy.id
left join master_join master_join_onrjjq on service.informationservice_ts.id = master_join_onrjjq.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_ecvjze on master_join_onrjjq.target_id = service_serviceoperationalstatus_view_ecvjze.id
left join master_join master_join_fwmvou on service.informationservice_ts.id = master_join_fwmvou.source_id
left join notes.note_view notes_note_view_chbkxq on master_join_fwmvou.target_id = notes_note_view_chbkxq.id
left join master_join master_join_xnherz on service.informationservice_ts.id = master_join_xnherz.source_id
left join navaids_points.vor_pt navaids_points_vor_pt_dqhcef on master_join_xnherz.target_id = navaids_points_vor_pt_dqhcef.id
left join master_join master_join_kvjiwj on service.informationservice_ts.id = master_join_kvjiwj.source_id
left join airspace.airspace_pt airspace_airspace_pt_xhdorf on master_join_kvjiwj.target_id = airspace_airspace_pt_xhdorf.id
left join master_join master_join_tqdrux on service.informationservice_ts.id = master_join_tqdrux.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_oqqwig on master_join_tqdrux.target_id = airport_heliport_airportheliport_pt_oqqwig.id
left join master_join master_join_dzbdqg on service.informationservice_ts.id = master_join_dzbdqg.source_id
left join routes.routeportion_view routes_routeportion_view_eqtodf on master_join_dzbdqg.target_id = routes_routeportion_view_eqtodf.id
left join master_join master_join_cvvmys on service.informationservice_ts.id = master_join_cvvmys.source_id
left join holding.holdingpattern_pt holding_holdingpattern_pt_xebntb on master_join_cvvmys.target_id = holding_holdingpattern_pt_xebntb.id
left join master_join master_join_mphxnu on service.informationservice_ts.id = master_join_mphxnu.source_id
left join aerial_refuelling.aerialrefuelling_pt aerial_refuelling_aerialrefuelling_pt_fdyxjn on master_join_mphxnu.target_id = aerial_refuelling_aerialrefuelling_pt_fdyxjn.id
where service.informationservice.feature_status = 'APPROVED'
  and service.informationservice_ts.feature_status = 'APPROVED'
group by
    service.informationservice.id,
    service.informationservice_ts.id,
    service.informationservice_tsp.id,
    service.informationservice.identifier,
    service.informationservice_ts.interpretation,
    service.informationservice_ts.sequence_number,
    service.informationservice_ts.correction_number,
    service.informationservice_ts.valid_time_begin,
    service.informationservice_ts.valid_time_end,
    service.informationservice_ts.feature_lifetime_begin,
    service.informationservice_ts.feature_lifetime_end,
    service.informationservice_ts.flightoperations_value,
    service.informationservice_ts.flightoperations_nilreason,
    service.informationservice_ts.rank_value,
    service.informationservice_ts.rank_nilreason,
    service.informationservice_ts.complianticao_value,
    service.informationservice_ts.complianticao_nilreason,
    service.informationservice_ts.name_value,
    service.informationservice_ts.name_nilreason,
    service.informationservice_ts.type_value,
    service.informationservice_ts.type_nilreason,
    service.informationservice_ts.voice_value,
    service.informationservice_ts.voice_nilreason,
    service.informationservice_ts.datalink_value,
    service.informationservice_ts.datalink_nilreason,
    service.informationservice_ts.recorded_value,
    service.informationservice_ts.recorded_nilreason,
    geometry_elevatedpoint_view_rpzqfo.geom,
    geometry_elevatedpoint_view_rpzqfo.elevation,
    geometry_elevatedpoint_view_rpzqfo.geoidUndulation,
    geometry_elevatedpoint_view_rpzqfo.verticalDatum,
    geometry_elevatedpoint_view_rpzqfo.verticalAccuracy,
    geometry_elevatedpoint_view_rpzqfo.horizontalAccuracy,
    organisation_unit_pt_mqlrpc.title,
    organisation_unit_pt_mqlrpc.nilreason[1],
    organisation_unit_pt_mqlrpc.href
order by informationservice.identifier, informationservice_ts.sequence_number, informationservice_ts.correction_number DESC;
create index on service.informationservice_view (id);
-- InitialLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.initialleg_view cascade;
create materialized view procedure.initialleg_view as
select distinct on (initialleg.identifier,initialleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.initialleg.id,
    procedure.initialleg_ts.id as ts_id,
    procedure.initialleg_tsp.id as tsp_id,
    procedure.initialleg.identifier,
    procedure.initialleg_ts.interpretation,
    procedure.initialleg_ts.sequence_number,
    procedure.initialleg_ts.correction_number,
    procedure.initialleg_ts.valid_time_begin,
    procedure.initialleg_ts.valid_time_end,
    procedure.initialleg_ts.feature_lifetime_begin,
    procedure.initialleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.initialleg_ts.endconditiondesignator_value as varchar), '(' || procedure.initialleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.initialleg_ts.legpath_value as varchar), '(' || procedure.initialleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.initialleg_ts.legtypearinc_value as varchar), '(' || procedure.initialleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.initialleg_ts.course_value as varchar), '(' || procedure.initialleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.initialleg_ts.coursetype_value as varchar), '(' || procedure.initialleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.initialleg_ts.coursedirection_value as varchar), '(' || procedure.initialleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.initialleg_ts.turndirection_value as varchar), '(' || procedure.initialleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.initialleg_ts.speedreference_value as varchar), '(' || procedure.initialleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.initialleg_ts.speedinterpretation_value as varchar), '(' || procedure.initialleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.initialleg_ts.bankangle_value as varchar), '(' || procedure.initialleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.initialleg_ts.procedureturnrequired_value as varchar), '(' || procedure.initialleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.initialleg_ts.upperlimitreference_value as varchar), '(' || procedure.initialleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.initialleg_ts.lowerlimitreference_value as varchar), '(' || procedure.initialleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.initialleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.initialleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.initialleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.initialleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.initialleg_ts.verticalangle_value as varchar), '(' || procedure.initialleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.initialleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.initialleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.initialleg_ts.speedlimit_value as varchar) || ' ' || procedure.initialleg_ts.speedlimit_uom, '(' || procedure.initialleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.initialleg_ts.length_value as varchar) || ' ' || procedure.initialleg_ts.length_uom, '(' || procedure.initialleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.initialleg_ts.duration_value as varchar) || ' ' || procedure.initialleg_ts.duration_uom, '(' || procedure.initialleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.initialleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.initialleg_ts.upperlimitaltitude_uom, '(' || procedure.initialleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.initialleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.initialleg_ts.lowerlimitaltitude_uom, '(' || procedure.initialleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.initialleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.initialleg_ts.altitudeoverrideatc_uom, '(' || procedure.initialleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_hkraey.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_jdlxvv.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_ughqmf.id AS arccentre,
    geometry_curve_view_ysnqhl.geom AS trajectory_geom,
    geometry_curve_view_ysnqhl.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_purbbi.title as varchar), '(' || navaids_points_angleindication_pt_purbbi.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_purbbi.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_bmbypo.title as varchar), '(' || navaids_points_distanceindication_pt_bmbypo.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_bmbypo.href AS distance_href,
    procedure_holdinguse_view_fxjseu.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_acssvi.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_acssvi.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_acssvi.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_veywba.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_sjmkjg.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_xgfcop.*) AS annotation
from procedure.initialleg 
inner join master_join mj2 on procedure.initialleg.id = mj2.source_id
inner join procedure.initialleg_tsp on mj2.target_id = procedure.initialleg_tsp.id
inner join procedure.initialleg_ts on procedure.initialleg_tsp.initiallegtimeslice_id = procedure.initialleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_hkraey on procedure.initialleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_hkraey.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_jdlxvv on procedure.initialleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_jdlxvv.id
left join geometry.curve_view geometry_curve_view_ysnqhl on procedure.initialleg_ts.trajectory_id = geometry_curve_view_ysnqhl.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_ughqmf on procedure.initialleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_ughqmf.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_purbbi on procedure.initialleg_ts.angle_id = navaids_points_angleindication_pt_purbbi.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_bmbypo on procedure.initialleg_ts.distance_id = navaids_points_distanceindication_pt_bmbypo.id
left join procedure.holdinguse_view procedure_holdinguse_view_fxjseu on procedure.initialleg_ts.holding_id = procedure_holdinguse_view_fxjseu.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_acssvi on procedure.initialleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_acssvi.id
left join master_join master_join_bwjuqx on procedure.initialleg_ts.id = master_join_bwjuqx.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_veywba on master_join_bwjuqx.target_id = shared_aircraftcharacteristic_view_veywba.id
left join master_join master_join_awbqvo on procedure.initialleg_ts.id = master_join_awbqvo.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_sjmkjg on master_join_awbqvo.target_id = shared_obstacleassessmentarea_view_sjmkjg.id
left join master_join master_join_eohjla on procedure.initialleg_ts.id = master_join_eohjla.source_id
left join notes.note_view notes_note_view_xgfcop on master_join_eohjla.target_id = notes_note_view_xgfcop.id
where procedure.initialleg.feature_status = 'APPROVED'
  and procedure.initialleg_ts.feature_status = 'APPROVED'
group by
    procedure.initialleg.id,
    procedure.initialleg_ts.id,
    procedure.initialleg_tsp.id,
    procedure.initialleg.identifier,
    procedure.initialleg_ts.interpretation,
    procedure.initialleg_ts.sequence_number,
    procedure.initialleg_ts.correction_number,
    procedure.initialleg_ts.valid_time_begin,
    procedure.initialleg_ts.valid_time_end,
    procedure.initialleg_ts.feature_lifetime_begin,
    procedure.initialleg_ts.feature_lifetime_end,
    procedure.initialleg_ts.endconditiondesignator_value,
    procedure.initialleg_ts.endconditiondesignator_nilreason,
    procedure.initialleg_ts.legpath_value,
    procedure.initialleg_ts.legpath_nilreason,
    procedure.initialleg_ts.legtypearinc_value,
    procedure.initialleg_ts.legtypearinc_nilreason,
    procedure.initialleg_ts.course_value,
    procedure.initialleg_ts.course_nilreason,
    procedure.initialleg_ts.coursetype_value,
    procedure.initialleg_ts.coursetype_nilreason,
    procedure.initialleg_ts.coursedirection_value,
    procedure.initialleg_ts.coursedirection_nilreason,
    procedure.initialleg_ts.turndirection_value,
    procedure.initialleg_ts.turndirection_nilreason,
    procedure.initialleg_ts.speedreference_value,
    procedure.initialleg_ts.speedreference_nilreason,
    procedure.initialleg_ts.speedinterpretation_value,
    procedure.initialleg_ts.speedinterpretation_nilreason,
    procedure.initialleg_ts.bankangle_value,
    procedure.initialleg_ts.bankangle_nilreason,
    procedure.initialleg_ts.procedureturnrequired_value,
    procedure.initialleg_ts.procedureturnrequired_nilreason,
    procedure.initialleg_ts.upperlimitreference_value,
    procedure.initialleg_ts.upperlimitreference_nilreason,
    procedure.initialleg_ts.lowerlimitreference_value,
    procedure.initialleg_ts.lowerlimitreference_nilreason,
    procedure.initialleg_ts.altitudeinterpretation_value,
    procedure.initialleg_ts.altitudeinterpretation_nilreason,
    procedure.initialleg_ts.altitudeoverridereference_value,
    procedure.initialleg_ts.altitudeoverridereference_nilreason,
    procedure.initialleg_ts.verticalangle_value,
    procedure.initialleg_ts.verticalangle_nilreason,
    procedure.initialleg_ts.requirednavigationperformance_value,
    procedure.initialleg_ts.requirednavigationperformance_nilreason,
    procedure.initialleg_ts.speedlimit_value,
    procedure.initialleg_ts.speedlimit_uom,
    procedure.initialleg_ts.speedlimit_nilreason,
    procedure.initialleg_ts.length_value,
    procedure.initialleg_ts.length_uom,
    procedure.initialleg_ts.length_nilreason,
    procedure.initialleg_ts.duration_value,
    procedure.initialleg_ts.duration_uom,
    procedure.initialleg_ts.duration_nilreason,
    procedure.initialleg_ts.upperlimitaltitude_value,
    procedure.initialleg_ts.upperlimitaltitude_uom,
    procedure.initialleg_ts.upperlimitaltitude_nilreason,
    procedure.initialleg_ts.lowerlimitaltitude_value,
    procedure.initialleg_ts.lowerlimitaltitude_uom,
    procedure.initialleg_ts.lowerlimitaltitude_nilreason,
    procedure.initialleg_ts.altitudeoverrideatc_value,
    procedure.initialleg_ts.altitudeoverrideatc_uom,
    procedure.initialleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_hkraey.id,
    navaids_points_terminalsegmentpoint_view_jdlxvv.id,
    geometry_curve_view_ysnqhl.geom,
    geometry_curve_view_ysnqhl.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_ughqmf.id,
    navaids_points_angleindication_pt_purbbi.title,
    navaids_points_angleindication_pt_purbbi.nilreason[1],
    navaids_points_angleindication_pt_purbbi.href,
    navaids_points_distanceindication_pt_bmbypo.title,
    navaids_points_distanceindication_pt_bmbypo.nilreason[1],
    navaids_points_distanceindication_pt_bmbypo.href,
    procedure_holdinguse_view_fxjseu.id,
    procedure_instrumentapproachprocedure_pt_acssvi.title,
    procedure_instrumentapproachprocedure_pt_acssvi.nilreason[1],
    procedure_instrumentapproachprocedure_pt_acssvi.href
order by initialleg.identifier, initialleg_ts.sequence_number, initialleg_ts.correction_number DESC;
create index on procedure.initialleg_view (id);
-- InstrumentApproachProcedureTimeSliceType
-- ['procedure.proceduretransition_view', 'procedure.procedureavailability_view', 'procedure.missedapproachgroup_view', 'procedure.landingtakeoffareacollection_view', 'shared.aircraftcharacteristic_view', 'procedure.finalprofile_view', 'notes.note_view']
drop materialized view if exists procedure.instrumentapproachprocedure_view cascade;
create materialized view procedure.instrumentapproachprocedure_view as
select distinct on (instrumentapproachprocedure.identifier,instrumentapproachprocedure_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.instrumentapproachprocedure.id,
    procedure.instrumentapproachprocedure_ts.id as ts_id,
    procedure.instrumentapproachprocedure_tsp.id as tsp_id,
    procedure.instrumentapproachprocedure.identifier,
    procedure.instrumentapproachprocedure_ts.interpretation,
    procedure.instrumentapproachprocedure_ts.sequence_number,
    procedure.instrumentapproachprocedure_ts.correction_number,
    procedure.instrumentapproachprocedure_ts.valid_time_begin,
    procedure.instrumentapproachprocedure_ts.valid_time_end,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_begin,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_end,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.instruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.designcriteria_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.codingstandard_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.flightchecked_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.name_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.rnav_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.approachprefix_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.approachprefix_nilreason || ')') as approachprefix,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.approachtype_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.approachtype_nilreason || ')') as approachtype,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.multipleidentification_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.multipleidentification_nilreason || ')') as multipleidentification,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.coptertrack_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.coptertrack_nilreason || ')') as coptertrack,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.circlingidentification_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.circlingidentification_nilreason || ')') as circlingidentification,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.coursereversalinstruction_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.coursereversalinstruction_nilreason || ')') as coursereversalinstruction,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.additionalequipment_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.additionalequipment_nilreason || ')') as additionalequipment,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.channelgnss_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.channelgnss_nilreason || ')') as channelgnss,
    coalesce(cast(procedure.instrumentapproachprocedure_ts.waasreliable_value as varchar), '(' || procedure.instrumentapproachprocedure_ts.waasreliable_nilreason || ')') as waasreliable,
    coalesce(cast(navaids_points_navaid_pt_ygdklc.title as varchar), '(' || navaids_points_navaid_pt_ygdklc.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_ygdklc.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_hltvap.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_hltvap.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_hltvap.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_wtnfhp.title as varchar), '(' || surveillance_radarsystem_pt_wtnfhp.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_wtnfhp.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_jiaovv.title as varchar), '(' || procedure_safealtitudearea_pt_jiaovv.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_jiaovv.href AS safealtitude_href,
    procedure_landingtakeoffareacollection_view_mqddwy.id AS landing,
    procedure_finalprofile_view_apwtwl.id AS finalprofile,
    jsonb_agg(procedure_procedureavailability_view_isiwto.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_elcxmb.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_elcxmb.title AS varchar), '(' || airport_heliport_airportheliport_pt_elcxmb.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_elcxmb.href)) AS airportheliport,
    jsonb_agg(shared_aircraftcharacteristic_view_fejylw.id) AS aircraftcharacteristic,
    jsonb_agg(procedure_proceduretransition_view_bigqsc.id) AS flighttransition,
    jsonb_agg(DISTINCT notes_note_view_chhbbw.*) AS annotation,
    jsonb_agg(procedure_missedapproachgroup_view_tgyljd.id) AS missedinstruction
from procedure.instrumentapproachprocedure 
inner join master_join mj2 on procedure.instrumentapproachprocedure.id = mj2.source_id
inner join procedure.instrumentapproachprocedure_tsp on mj2.target_id = procedure.instrumentapproachprocedure_tsp.id
inner join procedure.instrumentapproachprocedure_ts on procedure.instrumentapproachprocedure_tsp.instrumentapproachproceduretimeslice_id = procedure.instrumentapproachprocedure_ts.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ygdklc on procedure.instrumentapproachprocedure_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_ygdklc.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_hltvap on procedure.instrumentapproachprocedure_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_hltvap.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_wtnfhp on procedure.instrumentapproachprocedure_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_wtnfhp.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_jiaovv on procedure.instrumentapproachprocedure_ts.safealtitude_id = procedure_safealtitudearea_pt_jiaovv.id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_mqddwy on procedure.instrumentapproachprocedure_ts.landing_id = procedure_landingtakeoffareacollection_view_mqddwy.id
left join procedure.finalprofile_view procedure_finalprofile_view_apwtwl on procedure.instrumentapproachprocedure_ts.finalprofile_id = procedure_finalprofile_view_apwtwl.id
left join master_join master_join_zxdcut on procedure.instrumentapproachprocedure_ts.id = master_join_zxdcut.source_id
left join procedure.procedureavailability_view procedure_procedureavailability_view_isiwto on master_join_zxdcut.target_id = procedure_procedureavailability_view_isiwto.id
left join master_join master_join_zoqkoi on procedure.instrumentapproachprocedure_ts.id = master_join_zoqkoi.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_elcxmb on master_join_zoqkoi.target_id = airport_heliport_airportheliport_pt_elcxmb.id
left join master_join master_join_eiyyab on procedure.instrumentapproachprocedure_ts.id = master_join_eiyyab.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_fejylw on master_join_eiyyab.target_id = shared_aircraftcharacteristic_view_fejylw.id
left join master_join master_join_pffkjb on procedure.instrumentapproachprocedure_ts.id = master_join_pffkjb.source_id
left join procedure.proceduretransition_view procedure_proceduretransition_view_bigqsc on master_join_pffkjb.target_id = procedure_proceduretransition_view_bigqsc.id
left join master_join master_join_dkvepa on procedure.instrumentapproachprocedure_ts.id = master_join_dkvepa.source_id
left join notes.note_view notes_note_view_chhbbw on master_join_dkvepa.target_id = notes_note_view_chhbbw.id
left join master_join master_join_twxuqb on procedure.instrumentapproachprocedure_ts.id = master_join_twxuqb.source_id
left join procedure.missedapproachgroup_view procedure_missedapproachgroup_view_tgyljd on master_join_twxuqb.target_id = procedure_missedapproachgroup_view_tgyljd.id
where procedure.instrumentapproachprocedure.feature_status = 'APPROVED'
  and procedure.instrumentapproachprocedure_ts.feature_status = 'APPROVED'
group by
    procedure.instrumentapproachprocedure.id,
    procedure.instrumentapproachprocedure_ts.id,
    procedure.instrumentapproachprocedure_tsp.id,
    procedure.instrumentapproachprocedure.identifier,
    procedure.instrumentapproachprocedure_ts.interpretation,
    procedure.instrumentapproachprocedure_ts.sequence_number,
    procedure.instrumentapproachprocedure_ts.correction_number,
    procedure.instrumentapproachprocedure_ts.valid_time_begin,
    procedure.instrumentapproachprocedure_ts.valid_time_end,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_begin,
    procedure.instrumentapproachprocedure_ts.feature_lifetime_end,
    procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_value,
    procedure.instrumentapproachprocedure_ts.communicationfailureinstruction_nilreason,
    procedure.instrumentapproachprocedure_ts.instruction_value,
    procedure.instrumentapproachprocedure_ts.instruction_nilreason,
    procedure.instrumentapproachprocedure_ts.designcriteria_value,
    procedure.instrumentapproachprocedure_ts.designcriteria_nilreason,
    procedure.instrumentapproachprocedure_ts.codingstandard_value,
    procedure.instrumentapproachprocedure_ts.codingstandard_nilreason,
    procedure.instrumentapproachprocedure_ts.flightchecked_value,
    procedure.instrumentapproachprocedure_ts.flightchecked_nilreason,
    procedure.instrumentapproachprocedure_ts.name_value,
    procedure.instrumentapproachprocedure_ts.name_nilreason,
    procedure.instrumentapproachprocedure_ts.rnav_value,
    procedure.instrumentapproachprocedure_ts.rnav_nilreason,
    procedure.instrumentapproachprocedure_ts.approachprefix_value,
    procedure.instrumentapproachprocedure_ts.approachprefix_nilreason,
    procedure.instrumentapproachprocedure_ts.approachtype_value,
    procedure.instrumentapproachprocedure_ts.approachtype_nilreason,
    procedure.instrumentapproachprocedure_ts.multipleidentification_value,
    procedure.instrumentapproachprocedure_ts.multipleidentification_nilreason,
    procedure.instrumentapproachprocedure_ts.coptertrack_value,
    procedure.instrumentapproachprocedure_ts.coptertrack_nilreason,
    procedure.instrumentapproachprocedure_ts.circlingidentification_value,
    procedure.instrumentapproachprocedure_ts.circlingidentification_nilreason,
    procedure.instrumentapproachprocedure_ts.coursereversalinstruction_value,
    procedure.instrumentapproachprocedure_ts.coursereversalinstruction_nilreason,
    procedure.instrumentapproachprocedure_ts.additionalequipment_value,
    procedure.instrumentapproachprocedure_ts.additionalequipment_nilreason,
    procedure.instrumentapproachprocedure_ts.channelgnss_value,
    procedure.instrumentapproachprocedure_ts.channelgnss_nilreason,
    procedure.instrumentapproachprocedure_ts.waasreliable_value,
    procedure.instrumentapproachprocedure_ts.waasreliable_nilreason,
    navaids_points_navaid_pt_ygdklc.title,
    navaids_points_navaid_pt_ygdklc.nilreason[1],
    navaids_points_navaid_pt_ygdklc.href,
    navaids_points_specialnavigationsystem_pt_hltvap.title,
    navaids_points_specialnavigationsystem_pt_hltvap.nilreason[1],
    navaids_points_specialnavigationsystem_pt_hltvap.href,
    surveillance_radarsystem_pt_wtnfhp.title,
    surveillance_radarsystem_pt_wtnfhp.nilreason[1],
    surveillance_radarsystem_pt_wtnfhp.href,
    procedure_safealtitudearea_pt_jiaovv.title,
    procedure_safealtitudearea_pt_jiaovv.nilreason[1],
    procedure_safealtitudearea_pt_jiaovv.href,
    procedure_landingtakeoffareacollection_view_mqddwy.id,
    procedure_finalprofile_view_apwtwl.id
order by instrumentapproachprocedure.identifier, instrumentapproachprocedure_ts.sequence_number, instrumentapproachprocedure_ts.correction_number DESC;
create index on procedure.instrumentapproachprocedure_view (id);
-- IntermediateLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.intermediateleg_view cascade;
create materialized view procedure.intermediateleg_view as
select distinct on (intermediateleg.identifier,intermediateleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.intermediateleg.id,
    procedure.intermediateleg_ts.id as ts_id,
    procedure.intermediateleg_tsp.id as tsp_id,
    procedure.intermediateleg.identifier,
    procedure.intermediateleg_ts.interpretation,
    procedure.intermediateleg_ts.sequence_number,
    procedure.intermediateleg_ts.correction_number,
    procedure.intermediateleg_ts.valid_time_begin,
    procedure.intermediateleg_ts.valid_time_end,
    procedure.intermediateleg_ts.feature_lifetime_begin,
    procedure.intermediateleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.intermediateleg_ts.endconditiondesignator_value as varchar), '(' || procedure.intermediateleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.intermediateleg_ts.legpath_value as varchar), '(' || procedure.intermediateleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.intermediateleg_ts.legtypearinc_value as varchar), '(' || procedure.intermediateleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.intermediateleg_ts.course_value as varchar), '(' || procedure.intermediateleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.intermediateleg_ts.coursetype_value as varchar), '(' || procedure.intermediateleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.intermediateleg_ts.coursedirection_value as varchar), '(' || procedure.intermediateleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.intermediateleg_ts.turndirection_value as varchar), '(' || procedure.intermediateleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.intermediateleg_ts.speedreference_value as varchar), '(' || procedure.intermediateleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.intermediateleg_ts.speedinterpretation_value as varchar), '(' || procedure.intermediateleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.intermediateleg_ts.bankangle_value as varchar), '(' || procedure.intermediateleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.intermediateleg_ts.procedureturnrequired_value as varchar), '(' || procedure.intermediateleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.intermediateleg_ts.upperlimitreference_value as varchar), '(' || procedure.intermediateleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.intermediateleg_ts.lowerlimitreference_value as varchar), '(' || procedure.intermediateleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.intermediateleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.intermediateleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.intermediateleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.intermediateleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.intermediateleg_ts.verticalangle_value as varchar), '(' || procedure.intermediateleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.intermediateleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.intermediateleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.intermediateleg_ts.speedlimit_value as varchar) || ' ' || procedure.intermediateleg_ts.speedlimit_uom, '(' || procedure.intermediateleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.intermediateleg_ts.length_value as varchar) || ' ' || procedure.intermediateleg_ts.length_uom, '(' || procedure.intermediateleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.intermediateleg_ts.duration_value as varchar) || ' ' || procedure.intermediateleg_ts.duration_uom, '(' || procedure.intermediateleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.intermediateleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.intermediateleg_ts.upperlimitaltitude_uom, '(' || procedure.intermediateleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.intermediateleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.intermediateleg_ts.lowerlimitaltitude_uom, '(' || procedure.intermediateleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.intermediateleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.intermediateleg_ts.altitudeoverrideatc_uom, '(' || procedure.intermediateleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    navaids_points_terminalsegmentpoint_view_otsttc.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_ueeivz.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_dqimvi.id AS arccentre,
    geometry_curve_view_aoamcw.geom AS trajectory_geom,
    geometry_curve_view_aoamcw.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_qhechs.title as varchar), '(' || navaids_points_angleindication_pt_qhechs.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_qhechs.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_kyabqe.title as varchar), '(' || navaids_points_distanceindication_pt_kyabqe.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_kyabqe.href AS distance_href,
    procedure_holdinguse_view_wpvshj.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_qqnhfp.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_qqnhfp.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_qqnhfp.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_asgakg.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_jimuji.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_ilmelj.*) AS annotation
from procedure.intermediateleg 
inner join master_join mj2 on procedure.intermediateleg.id = mj2.source_id
inner join procedure.intermediateleg_tsp on mj2.target_id = procedure.intermediateleg_tsp.id
inner join procedure.intermediateleg_ts on procedure.intermediateleg_tsp.intermediatelegtimeslice_id = procedure.intermediateleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_otsttc on procedure.intermediateleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_otsttc.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_ueeivz on procedure.intermediateleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_ueeivz.id
left join geometry.curve_view geometry_curve_view_aoamcw on procedure.intermediateleg_ts.trajectory_id = geometry_curve_view_aoamcw.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_dqimvi on procedure.intermediateleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_dqimvi.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_qhechs on procedure.intermediateleg_ts.angle_id = navaids_points_angleindication_pt_qhechs.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_kyabqe on procedure.intermediateleg_ts.distance_id = navaids_points_distanceindication_pt_kyabqe.id
left join procedure.holdinguse_view procedure_holdinguse_view_wpvshj on procedure.intermediateleg_ts.holding_id = procedure_holdinguse_view_wpvshj.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_qqnhfp on procedure.intermediateleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_qqnhfp.id
left join master_join master_join_vqhtei on procedure.intermediateleg_ts.id = master_join_vqhtei.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_asgakg on master_join_vqhtei.target_id = shared_aircraftcharacteristic_view_asgakg.id
left join master_join master_join_arjbno on procedure.intermediateleg_ts.id = master_join_arjbno.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_jimuji on master_join_arjbno.target_id = shared_obstacleassessmentarea_view_jimuji.id
left join master_join master_join_fmwdal on procedure.intermediateleg_ts.id = master_join_fmwdal.source_id
left join notes.note_view notes_note_view_ilmelj on master_join_fmwdal.target_id = notes_note_view_ilmelj.id
where procedure.intermediateleg.feature_status = 'APPROVED'
  and procedure.intermediateleg_ts.feature_status = 'APPROVED'
group by
    procedure.intermediateleg.id,
    procedure.intermediateleg_ts.id,
    procedure.intermediateleg_tsp.id,
    procedure.intermediateleg.identifier,
    procedure.intermediateleg_ts.interpretation,
    procedure.intermediateleg_ts.sequence_number,
    procedure.intermediateleg_ts.correction_number,
    procedure.intermediateleg_ts.valid_time_begin,
    procedure.intermediateleg_ts.valid_time_end,
    procedure.intermediateleg_ts.feature_lifetime_begin,
    procedure.intermediateleg_ts.feature_lifetime_end,
    procedure.intermediateleg_ts.endconditiondesignator_value,
    procedure.intermediateleg_ts.endconditiondesignator_nilreason,
    procedure.intermediateleg_ts.legpath_value,
    procedure.intermediateleg_ts.legpath_nilreason,
    procedure.intermediateleg_ts.legtypearinc_value,
    procedure.intermediateleg_ts.legtypearinc_nilreason,
    procedure.intermediateleg_ts.course_value,
    procedure.intermediateleg_ts.course_nilreason,
    procedure.intermediateleg_ts.coursetype_value,
    procedure.intermediateleg_ts.coursetype_nilreason,
    procedure.intermediateleg_ts.coursedirection_value,
    procedure.intermediateleg_ts.coursedirection_nilreason,
    procedure.intermediateleg_ts.turndirection_value,
    procedure.intermediateleg_ts.turndirection_nilreason,
    procedure.intermediateleg_ts.speedreference_value,
    procedure.intermediateleg_ts.speedreference_nilreason,
    procedure.intermediateleg_ts.speedinterpretation_value,
    procedure.intermediateleg_ts.speedinterpretation_nilreason,
    procedure.intermediateleg_ts.bankangle_value,
    procedure.intermediateleg_ts.bankangle_nilreason,
    procedure.intermediateleg_ts.procedureturnrequired_value,
    procedure.intermediateleg_ts.procedureturnrequired_nilreason,
    procedure.intermediateleg_ts.upperlimitreference_value,
    procedure.intermediateleg_ts.upperlimitreference_nilreason,
    procedure.intermediateleg_ts.lowerlimitreference_value,
    procedure.intermediateleg_ts.lowerlimitreference_nilreason,
    procedure.intermediateleg_ts.altitudeinterpretation_value,
    procedure.intermediateleg_ts.altitudeinterpretation_nilreason,
    procedure.intermediateleg_ts.altitudeoverridereference_value,
    procedure.intermediateleg_ts.altitudeoverridereference_nilreason,
    procedure.intermediateleg_ts.verticalangle_value,
    procedure.intermediateleg_ts.verticalangle_nilreason,
    procedure.intermediateleg_ts.requirednavigationperformance_value,
    procedure.intermediateleg_ts.requirednavigationperformance_nilreason,
    procedure.intermediateleg_ts.speedlimit_value,
    procedure.intermediateleg_ts.speedlimit_uom,
    procedure.intermediateleg_ts.speedlimit_nilreason,
    procedure.intermediateleg_ts.length_value,
    procedure.intermediateleg_ts.length_uom,
    procedure.intermediateleg_ts.length_nilreason,
    procedure.intermediateleg_ts.duration_value,
    procedure.intermediateleg_ts.duration_uom,
    procedure.intermediateleg_ts.duration_nilreason,
    procedure.intermediateleg_ts.upperlimitaltitude_value,
    procedure.intermediateleg_ts.upperlimitaltitude_uom,
    procedure.intermediateleg_ts.upperlimitaltitude_nilreason,
    procedure.intermediateleg_ts.lowerlimitaltitude_value,
    procedure.intermediateleg_ts.lowerlimitaltitude_uom,
    procedure.intermediateleg_ts.lowerlimitaltitude_nilreason,
    procedure.intermediateleg_ts.altitudeoverrideatc_value,
    procedure.intermediateleg_ts.altitudeoverrideatc_uom,
    procedure.intermediateleg_ts.altitudeoverrideatc_nilreason,
    navaids_points_terminalsegmentpoint_view_otsttc.id,
    navaids_points_terminalsegmentpoint_view_ueeivz.id,
    geometry_curve_view_aoamcw.geom,
    geometry_curve_view_aoamcw.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_dqimvi.id,
    navaids_points_angleindication_pt_qhechs.title,
    navaids_points_angleindication_pt_qhechs.nilreason[1],
    navaids_points_angleindication_pt_qhechs.href,
    navaids_points_distanceindication_pt_kyabqe.title,
    navaids_points_distanceindication_pt_kyabqe.nilreason[1],
    navaids_points_distanceindication_pt_kyabqe.href,
    procedure_holdinguse_view_wpvshj.id,
    procedure_instrumentapproachprocedure_pt_qqnhfp.title,
    procedure_instrumentapproachprocedure_pt_qqnhfp.nilreason[1],
    procedure_instrumentapproachprocedure_pt_qqnhfp.href
order by intermediateleg.identifier, intermediateleg_ts.sequence_number, intermediateleg_ts.correction_number DESC;
create index on procedure.intermediateleg_view (id);
-- LocalizerTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.localizer_view cascade;
create materialized view navaids_points.localizer_view as
select distinct on (localizer.identifier,localizer_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.localizer.id,
    navaids_points.localizer_ts.id as ts_id,
    navaids_points.localizer_tsp.id as tsp_id,
    navaids_points.localizer.identifier,
    navaids_points.localizer_ts.interpretation,
    navaids_points.localizer_ts.sequence_number,
    navaids_points.localizer_ts.correction_number,
    navaids_points.localizer_ts.valid_time_begin,
    navaids_points.localizer_ts.valid_time_end,
    navaids_points.localizer_ts.feature_lifetime_begin,
    navaids_points.localizer_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.localizer_ts.designator_value as varchar), '(' || navaids_points.localizer_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.localizer_ts.name_value as varchar), '(' || navaids_points.localizer_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.localizer_ts.emissionclass_value as varchar), '(' || navaids_points.localizer_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.localizer_ts.mobile_value as varchar), '(' || navaids_points.localizer_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.localizer_ts.magneticvariation_value as varchar), '(' || navaids_points.localizer_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.localizer_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.localizer_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.localizer_ts.datemagneticvariation_value as varchar), '(' || navaids_points.localizer_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.localizer_ts.flightchecked_value as varchar), '(' || navaids_points.localizer_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.localizer_ts.magneticbearing_value as varchar), '(' || navaids_points.localizer_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.localizer_ts.magneticbearingaccuracy_value as varchar), '(' || navaids_points.localizer_ts.magneticbearingaccuracy_nilreason || ')') as magneticbearingaccuracy,
    coalesce(cast(navaids_points.localizer_ts.truebearing_value as varchar), '(' || navaids_points.localizer_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.localizer_ts.truebearingaccuracy_value as varchar), '(' || navaids_points.localizer_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(navaids_points.localizer_ts.declination_value as varchar), '(' || navaids_points.localizer_ts.declination_nilreason || ')') as declination,
    coalesce(cast(navaids_points.localizer_ts.widthcourse_value as varchar), '(' || navaids_points.localizer_ts.widthcourse_nilreason || ')') as widthcourse,
    coalesce(cast(navaids_points.localizer_ts.widthcourseaccuracy_value as varchar), '(' || navaids_points.localizer_ts.widthcourseaccuracy_nilreason || ')') as widthcourseaccuracy,
    coalesce(cast(navaids_points.localizer_ts.backcourseusable_value as varchar), '(' || navaids_points.localizer_ts.backcourseusable_nilreason || ')') as backcourseusable,
    coalesce(cast(navaids_points.localizer_ts.frequency_value as varchar) || ' ' || navaids_points.localizer_ts.frequency_uom, '(' || navaids_points.localizer_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_frhfza.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_frhfza.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_frhfza.geom) AS location_latitude,
    geometry_elevatedpoint_view_frhfza.elevation AS location_elevation,
    geometry_elevatedpoint_view_frhfza.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_frhfza.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_frhfza.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_frhfza.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_amzpgt.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_lxksxa.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_wgyrcj.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_dbssak.*) AS annotation
from navaids_points.localizer 
inner join master_join mj2 on navaids_points.localizer.id = mj2.source_id
inner join navaids_points.localizer_tsp on mj2.target_id = navaids_points.localizer_tsp.id
inner join navaids_points.localizer_ts on navaids_points.localizer_tsp.localizertimeslice_id = navaids_points.localizer_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_frhfza on navaids_points.localizer_ts.location_id = geometry_elevatedpoint_view_frhfza.id
left join master_join master_join_updwul on navaids_points.localizer_ts.id = master_join_updwul.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_amzpgt on master_join_updwul.target_id = navaids_points_authorityfornavaidequipment_view_amzpgt.id
left join master_join master_join_yuofpe on navaids_points.localizer_ts.id = master_join_yuofpe.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_lxksxa on master_join_yuofpe.target_id = navaids_points_navaidequipmentmonitoring_view_lxksxa.id
left join master_join master_join_lzhqoc on navaids_points.localizer_ts.id = master_join_lzhqoc.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_wgyrcj on master_join_lzhqoc.target_id = navaids_points_navaidoperationalstatus_view_wgyrcj.id
left join master_join master_join_fhrrjz on navaids_points.localizer_ts.id = master_join_fhrrjz.source_id
left join notes.note_view notes_note_view_dbssak on master_join_fhrrjz.target_id = notes_note_view_dbssak.id
where navaids_points.localizer.feature_status = 'APPROVED'
  and navaids_points.localizer_ts.feature_status = 'APPROVED'
group by
    navaids_points.localizer.id,
    navaids_points.localizer_ts.id,
    navaids_points.localizer_tsp.id,
    navaids_points.localizer.identifier,
    navaids_points.localizer_ts.interpretation,
    navaids_points.localizer_ts.sequence_number,
    navaids_points.localizer_ts.correction_number,
    navaids_points.localizer_ts.valid_time_begin,
    navaids_points.localizer_ts.valid_time_end,
    navaids_points.localizer_ts.feature_lifetime_begin,
    navaids_points.localizer_ts.feature_lifetime_end,
    navaids_points.localizer_ts.designator_value,
    navaids_points.localizer_ts.designator_nilreason,
    navaids_points.localizer_ts.name_value,
    navaids_points.localizer_ts.name_nilreason,
    navaids_points.localizer_ts.emissionclass_value,
    navaids_points.localizer_ts.emissionclass_nilreason,
    navaids_points.localizer_ts.mobile_value,
    navaids_points.localizer_ts.mobile_nilreason,
    navaids_points.localizer_ts.magneticvariation_value,
    navaids_points.localizer_ts.magneticvariation_nilreason,
    navaids_points.localizer_ts.magneticvariationaccuracy_value,
    navaids_points.localizer_ts.magneticvariationaccuracy_nilreason,
    navaids_points.localizer_ts.datemagneticvariation_value,
    navaids_points.localizer_ts.datemagneticvariation_nilreason,
    navaids_points.localizer_ts.flightchecked_value,
    navaids_points.localizer_ts.flightchecked_nilreason,
    navaids_points.localizer_ts.magneticbearing_value,
    navaids_points.localizer_ts.magneticbearing_nilreason,
    navaids_points.localizer_ts.magneticbearingaccuracy_value,
    navaids_points.localizer_ts.magneticbearingaccuracy_nilreason,
    navaids_points.localizer_ts.truebearing_value,
    navaids_points.localizer_ts.truebearing_nilreason,
    navaids_points.localizer_ts.truebearingaccuracy_value,
    navaids_points.localizer_ts.truebearingaccuracy_nilreason,
    navaids_points.localizer_ts.declination_value,
    navaids_points.localizer_ts.declination_nilreason,
    navaids_points.localizer_ts.widthcourse_value,
    navaids_points.localizer_ts.widthcourse_nilreason,
    navaids_points.localizer_ts.widthcourseaccuracy_value,
    navaids_points.localizer_ts.widthcourseaccuracy_nilreason,
    navaids_points.localizer_ts.backcourseusable_value,
    navaids_points.localizer_ts.backcourseusable_nilreason,
    navaids_points.localizer_ts.frequency_value,
    navaids_points.localizer_ts.frequency_uom,
    navaids_points.localizer_ts.frequency_nilreason,
    geometry_elevatedpoint_view_frhfza.geom,
    geometry_elevatedpoint_view_frhfza.elevation,
    geometry_elevatedpoint_view_frhfza.geoidUndulation,
    geometry_elevatedpoint_view_frhfza.verticalDatum,
    geometry_elevatedpoint_view_frhfza.verticalAccuracy,
    geometry_elevatedpoint_view_frhfza.horizontalAccuracy
order by localizer.identifier, localizer_ts.sequence_number, localizer_ts.correction_number DESC;
create index on navaids_points.localizer_view (id);
-- MarkerBeaconTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.markerbeacon_view cascade;
create materialized view navaids_points.markerbeacon_view as
select distinct on (markerbeacon.identifier,markerbeacon_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.markerbeacon.id,
    navaids_points.markerbeacon_ts.id as ts_id,
    navaids_points.markerbeacon_tsp.id as tsp_id,
    navaids_points.markerbeacon.identifier,
    navaids_points.markerbeacon_ts.interpretation,
    navaids_points.markerbeacon_ts.sequence_number,
    navaids_points.markerbeacon_ts.correction_number,
    navaids_points.markerbeacon_ts.valid_time_begin,
    navaids_points.markerbeacon_ts.valid_time_end,
    navaids_points.markerbeacon_ts.feature_lifetime_begin,
    navaids_points.markerbeacon_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.markerbeacon_ts.designator_value as varchar), '(' || navaids_points.markerbeacon_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.markerbeacon_ts.name_value as varchar), '(' || navaids_points.markerbeacon_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.markerbeacon_ts.emissionclass_value as varchar), '(' || navaids_points.markerbeacon_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.markerbeacon_ts.mobile_value as varchar), '(' || navaids_points.markerbeacon_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.markerbeacon_ts.magneticvariation_value as varchar), '(' || navaids_points.markerbeacon_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.markerbeacon_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.markerbeacon_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.markerbeacon_ts.datemagneticvariation_value as varchar), '(' || navaids_points.markerbeacon_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.markerbeacon_ts.flightchecked_value as varchar), '(' || navaids_points.markerbeacon_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.markerbeacon_ts.class_value as varchar), '(' || navaids_points.markerbeacon_ts.class_nilreason || ')') as class,
    coalesce(cast(navaids_points.markerbeacon_ts.axisbearing_value as varchar), '(' || navaids_points.markerbeacon_ts.axisbearing_nilreason || ')') as axisbearing,
    coalesce(cast(navaids_points.markerbeacon_ts.auralmorsecode_value as varchar), '(' || navaids_points.markerbeacon_ts.auralmorsecode_nilreason || ')') as auralmorsecode,
    coalesce(cast(navaids_points.markerbeacon_ts.frequency_value as varchar) || ' ' || navaids_points.markerbeacon_ts.frequency_uom, '(' || navaids_points.markerbeacon_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_mvcjtk.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_mvcjtk.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_mvcjtk.geom) AS location_latitude,
    geometry_elevatedpoint_view_mvcjtk.elevation AS location_elevation,
    geometry_elevatedpoint_view_mvcjtk.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_mvcjtk.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_mvcjtk.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_mvcjtk.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_fxgdhy.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_bfgwuz.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_ztzsww.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_tyvrfy.*) AS annotation
from navaids_points.markerbeacon 
inner join master_join mj2 on navaids_points.markerbeacon.id = mj2.source_id
inner join navaids_points.markerbeacon_tsp on mj2.target_id = navaids_points.markerbeacon_tsp.id
inner join navaids_points.markerbeacon_ts on navaids_points.markerbeacon_tsp.markerbeacontimeslice_id = navaids_points.markerbeacon_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_mvcjtk on navaids_points.markerbeacon_ts.location_id = geometry_elevatedpoint_view_mvcjtk.id
left join master_join master_join_huuwqv on navaids_points.markerbeacon_ts.id = master_join_huuwqv.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_fxgdhy on master_join_huuwqv.target_id = navaids_points_authorityfornavaidequipment_view_fxgdhy.id
left join master_join master_join_zycovz on navaids_points.markerbeacon_ts.id = master_join_zycovz.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_bfgwuz on master_join_zycovz.target_id = navaids_points_navaidequipmentmonitoring_view_bfgwuz.id
left join master_join master_join_kushig on navaids_points.markerbeacon_ts.id = master_join_kushig.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_ztzsww on master_join_kushig.target_id = navaids_points_navaidoperationalstatus_view_ztzsww.id
left join master_join master_join_hvjwjn on navaids_points.markerbeacon_ts.id = master_join_hvjwjn.source_id
left join notes.note_view notes_note_view_tyvrfy on master_join_hvjwjn.target_id = notes_note_view_tyvrfy.id
where navaids_points.markerbeacon.feature_status = 'APPROVED'
  and navaids_points.markerbeacon_ts.feature_status = 'APPROVED'
group by
    navaids_points.markerbeacon.id,
    navaids_points.markerbeacon_ts.id,
    navaids_points.markerbeacon_tsp.id,
    navaids_points.markerbeacon.identifier,
    navaids_points.markerbeacon_ts.interpretation,
    navaids_points.markerbeacon_ts.sequence_number,
    navaids_points.markerbeacon_ts.correction_number,
    navaids_points.markerbeacon_ts.valid_time_begin,
    navaids_points.markerbeacon_ts.valid_time_end,
    navaids_points.markerbeacon_ts.feature_lifetime_begin,
    navaids_points.markerbeacon_ts.feature_lifetime_end,
    navaids_points.markerbeacon_ts.designator_value,
    navaids_points.markerbeacon_ts.designator_nilreason,
    navaids_points.markerbeacon_ts.name_value,
    navaids_points.markerbeacon_ts.name_nilreason,
    navaids_points.markerbeacon_ts.emissionclass_value,
    navaids_points.markerbeacon_ts.emissionclass_nilreason,
    navaids_points.markerbeacon_ts.mobile_value,
    navaids_points.markerbeacon_ts.mobile_nilreason,
    navaids_points.markerbeacon_ts.magneticvariation_value,
    navaids_points.markerbeacon_ts.magneticvariation_nilreason,
    navaids_points.markerbeacon_ts.magneticvariationaccuracy_value,
    navaids_points.markerbeacon_ts.magneticvariationaccuracy_nilreason,
    navaids_points.markerbeacon_ts.datemagneticvariation_value,
    navaids_points.markerbeacon_ts.datemagneticvariation_nilreason,
    navaids_points.markerbeacon_ts.flightchecked_value,
    navaids_points.markerbeacon_ts.flightchecked_nilreason,
    navaids_points.markerbeacon_ts.class_value,
    navaids_points.markerbeacon_ts.class_nilreason,
    navaids_points.markerbeacon_ts.axisbearing_value,
    navaids_points.markerbeacon_ts.axisbearing_nilreason,
    navaids_points.markerbeacon_ts.auralmorsecode_value,
    navaids_points.markerbeacon_ts.auralmorsecode_nilreason,
    navaids_points.markerbeacon_ts.frequency_value,
    navaids_points.markerbeacon_ts.frequency_uom,
    navaids_points.markerbeacon_ts.frequency_nilreason,
    geometry_elevatedpoint_view_mvcjtk.geom,
    geometry_elevatedpoint_view_mvcjtk.elevation,
    geometry_elevatedpoint_view_mvcjtk.geoidUndulation,
    geometry_elevatedpoint_view_mvcjtk.verticalDatum,
    geometry_elevatedpoint_view_mvcjtk.verticalAccuracy,
    geometry_elevatedpoint_view_mvcjtk.horizontalAccuracy
order by markerbeacon.identifier, markerbeacon_ts.sequence_number, markerbeacon_ts.correction_number DESC;
create index on navaids_points.markerbeacon_view (id);
-- MarkingBuoyTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.markingbuoy_view cascade;
create materialized view airport_heliport.markingbuoy_view as
select distinct on (markingbuoy.identifier,markingbuoy_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.markingbuoy.id,
    airport_heliport.markingbuoy_ts.id as ts_id,
    airport_heliport.markingbuoy_tsp.id as tsp_id,
    airport_heliport.markingbuoy.identifier,
    airport_heliport.markingbuoy_ts.interpretation,
    airport_heliport.markingbuoy_ts.sequence_number,
    airport_heliport.markingbuoy_ts.correction_number,
    airport_heliport.markingbuoy_ts.valid_time_begin,
    airport_heliport.markingbuoy_ts.valid_time_end,
    airport_heliport.markingbuoy_ts.feature_lifetime_begin,
    airport_heliport.markingbuoy_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.markingbuoy_ts.type_value as varchar), '(' || airport_heliport.markingbuoy_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.markingbuoy_ts.colour_value as varchar), '(' || airport_heliport.markingbuoy_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport_seaplanelandingarea_pt_oyuklg.title as varchar), '(' || airport_heliport_seaplanelandingarea_pt_oyuklg.nilreason[1] || ')') AS theseaplanelandingarea,
    airport_heliport_seaplanelandingarea_pt_oyuklg.href AS theseaplanelandingarea_href,
    geometry_elevatedpoint_view_bvxxwz.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_bvxxwz.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_bvxxwz.geom) AS location_latitude,
    geometry_elevatedpoint_view_bvxxwz.elevation AS location_elevation,
    geometry_elevatedpoint_view_bvxxwz.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_bvxxwz.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_bvxxwz.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_bvxxwz.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_dvmyri.*) AS annotation
from airport_heliport.markingbuoy 
inner join master_join mj2 on airport_heliport.markingbuoy.id = mj2.source_id
inner join airport_heliport.markingbuoy_tsp on mj2.target_id = airport_heliport.markingbuoy_tsp.id
inner join airport_heliport.markingbuoy_ts on airport_heliport.markingbuoy_tsp.markingbuoytimeslice_id = airport_heliport.markingbuoy_ts.id
left join airport_heliport.seaplanelandingarea_pt airport_heliport_seaplanelandingarea_pt_oyuklg on airport_heliport.markingbuoy_ts.theseaplanelandingarea_id = airport_heliport_seaplanelandingarea_pt_oyuklg.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_bvxxwz on airport_heliport.markingbuoy_ts.location_id = geometry_elevatedpoint_view_bvxxwz.id
left join master_join master_join_pjxnkb on airport_heliport.markingbuoy_ts.id = master_join_pjxnkb.source_id
left join notes.note_view notes_note_view_dvmyri on master_join_pjxnkb.target_id = notes_note_view_dvmyri.id
where airport_heliport.markingbuoy.feature_status = 'APPROVED'
  and airport_heliport.markingbuoy_ts.feature_status = 'APPROVED'
group by
    airport_heliport.markingbuoy.id,
    airport_heliport.markingbuoy_ts.id,
    airport_heliport.markingbuoy_tsp.id,
    airport_heliport.markingbuoy.identifier,
    airport_heliport.markingbuoy_ts.interpretation,
    airport_heliport.markingbuoy_ts.sequence_number,
    airport_heliport.markingbuoy_ts.correction_number,
    airport_heliport.markingbuoy_ts.valid_time_begin,
    airport_heliport.markingbuoy_ts.valid_time_end,
    airport_heliport.markingbuoy_ts.feature_lifetime_begin,
    airport_heliport.markingbuoy_ts.feature_lifetime_end,
    airport_heliport.markingbuoy_ts.type_value,
    airport_heliport.markingbuoy_ts.type_nilreason,
    airport_heliport.markingbuoy_ts.colour_value,
    airport_heliport.markingbuoy_ts.colour_nilreason,
    airport_heliport_seaplanelandingarea_pt_oyuklg.title,
    airport_heliport_seaplanelandingarea_pt_oyuklg.nilreason[1],
    airport_heliport_seaplanelandingarea_pt_oyuklg.href,
    geometry_elevatedpoint_view_bvxxwz.geom,
    geometry_elevatedpoint_view_bvxxwz.elevation,
    geometry_elevatedpoint_view_bvxxwz.geoidUndulation,
    geometry_elevatedpoint_view_bvxxwz.verticalDatum,
    geometry_elevatedpoint_view_bvxxwz.verticalAccuracy,
    geometry_elevatedpoint_view_bvxxwz.horizontalAccuracy
order by markingbuoy.identifier, markingbuoy_ts.sequence_number, markingbuoy_ts.correction_number DESC;
create index on airport_heliport.markingbuoy_view (id);
-- MissedApproachLegTimeSliceType
-- ['navaids_points.terminalsegmentpoint_view', 'procedure.approachcondition_view', 'procedure.holdinguse_view', 'shared.aircraftcharacteristic_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.missedapproachleg_view cascade;
create materialized view procedure.missedapproachleg_view as
select distinct on (missedapproachleg.identifier,missedapproachleg_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.missedapproachleg.id,
    procedure.missedapproachleg_ts.id as ts_id,
    procedure.missedapproachleg_tsp.id as tsp_id,
    procedure.missedapproachleg.identifier,
    procedure.missedapproachleg_ts.interpretation,
    procedure.missedapproachleg_ts.sequence_number,
    procedure.missedapproachleg_ts.correction_number,
    procedure.missedapproachleg_ts.valid_time_begin,
    procedure.missedapproachleg_ts.valid_time_end,
    procedure.missedapproachleg_ts.feature_lifetime_begin,
    procedure.missedapproachleg_ts.feature_lifetime_end,
    coalesce(cast(procedure.missedapproachleg_ts.endconditiondesignator_value as varchar), '(' || procedure.missedapproachleg_ts.endconditiondesignator_nilreason || ')') as endconditiondesignator,
    coalesce(cast(procedure.missedapproachleg_ts.legpath_value as varchar), '(' || procedure.missedapproachleg_ts.legpath_nilreason || ')') as legpath,
    coalesce(cast(procedure.missedapproachleg_ts.legtypearinc_value as varchar), '(' || procedure.missedapproachleg_ts.legtypearinc_nilreason || ')') as legtypearinc,
    coalesce(cast(procedure.missedapproachleg_ts.course_value as varchar), '(' || procedure.missedapproachleg_ts.course_nilreason || ')') as course,
    coalesce(cast(procedure.missedapproachleg_ts.coursetype_value as varchar), '(' || procedure.missedapproachleg_ts.coursetype_nilreason || ')') as coursetype,
    coalesce(cast(procedure.missedapproachleg_ts.coursedirection_value as varchar), '(' || procedure.missedapproachleg_ts.coursedirection_nilreason || ')') as coursedirection,
    coalesce(cast(procedure.missedapproachleg_ts.turndirection_value as varchar), '(' || procedure.missedapproachleg_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(procedure.missedapproachleg_ts.speedreference_value as varchar), '(' || procedure.missedapproachleg_ts.speedreference_nilreason || ')') as speedreference,
    coalesce(cast(procedure.missedapproachleg_ts.speedinterpretation_value as varchar), '(' || procedure.missedapproachleg_ts.speedinterpretation_nilreason || ')') as speedinterpretation,
    coalesce(cast(procedure.missedapproachleg_ts.bankangle_value as varchar), '(' || procedure.missedapproachleg_ts.bankangle_nilreason || ')') as bankangle,
    coalesce(cast(procedure.missedapproachleg_ts.procedureturnrequired_value as varchar), '(' || procedure.missedapproachleg_ts.procedureturnrequired_nilreason || ')') as procedureturnrequired,
    coalesce(cast(procedure.missedapproachleg_ts.upperlimitreference_value as varchar), '(' || procedure.missedapproachleg_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(procedure.missedapproachleg_ts.lowerlimitreference_value as varchar), '(' || procedure.missedapproachleg_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeinterpretation_value as varchar), '(' || procedure.missedapproachleg_ts.altitudeinterpretation_nilreason || ')') as altitudeinterpretation,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeoverridereference_value as varchar), '(' || procedure.missedapproachleg_ts.altitudeoverridereference_nilreason || ')') as altitudeoverridereference,
    coalesce(cast(procedure.missedapproachleg_ts.verticalangle_value as varchar), '(' || procedure.missedapproachleg_ts.verticalangle_nilreason || ')') as verticalangle,
    coalesce(cast(procedure.missedapproachleg_ts.type_value as varchar), '(' || procedure.missedapproachleg_ts.type_nilreason || ')') as type,
    coalesce(cast(procedure.missedapproachleg_ts.thresholdaftermapt_value as varchar), '(' || procedure.missedapproachleg_ts.thresholdaftermapt_nilreason || ')') as thresholdaftermapt,
    coalesce(cast(procedure.missedapproachleg_ts.requirednavigationperformance_value as varchar), '(' || procedure.missedapproachleg_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(procedure.missedapproachleg_ts.speedlimit_value as varchar) || ' ' || procedure.missedapproachleg_ts.speedlimit_uom, '(' || procedure.missedapproachleg_ts.speedlimit_nilreason || ')') as speedlimit,
    coalesce(cast(procedure.missedapproachleg_ts.length_value as varchar) || ' ' || procedure.missedapproachleg_ts.length_uom, '(' || procedure.missedapproachleg_ts.length_nilreason || ')') as length,
    coalesce(cast(procedure.missedapproachleg_ts.duration_value as varchar) || ' ' || procedure.missedapproachleg_ts.duration_uom, '(' || procedure.missedapproachleg_ts.duration_nilreason || ')') as duration,
    coalesce(cast(procedure.missedapproachleg_ts.upperlimitaltitude_value as varchar) || ' ' || procedure.missedapproachleg_ts.upperlimitaltitude_uom, '(' || procedure.missedapproachleg_ts.upperlimitaltitude_nilreason || ')') as upperlimitaltitude,
    coalesce(cast(procedure.missedapproachleg_ts.lowerlimitaltitude_value as varchar) || ' ' || procedure.missedapproachleg_ts.lowerlimitaltitude_uom, '(' || procedure.missedapproachleg_ts.lowerlimitaltitude_nilreason || ')') as lowerlimitaltitude,
    coalesce(cast(procedure.missedapproachleg_ts.altitudeoverrideatc_value as varchar) || ' ' || procedure.missedapproachleg_ts.altitudeoverrideatc_uom, '(' || procedure.missedapproachleg_ts.altitudeoverrideatc_nilreason || ')') as altitudeoverrideatc,
    coalesce(cast(procedure.missedapproachleg_ts.heightmapt_value as varchar) || ' ' || procedure.missedapproachleg_ts.heightmapt_uom, '(' || procedure.missedapproachleg_ts.heightmapt_nilreason || ')') as heightmapt,
    navaids_points_terminalsegmentpoint_view_vtnmso.id AS startpoint,
    navaids_points_terminalsegmentpoint_view_uttnke.id AS endpoint,
    navaids_points_terminalsegmentpoint_view_qwssjx.id AS arccentre,
    geometry_curve_view_yjatsl.geom AS trajectory_geom,
    geometry_curve_view_yjatsl.horizontalAccuracy as trajectory_horizontalaccuracy,
    coalesce(cast(navaids_points_angleindication_pt_znrila.title as varchar), '(' || navaids_points_angleindication_pt_znrila.nilreason[1] || ')') AS angle,
    navaids_points_angleindication_pt_znrila.href AS angle_href,
    coalesce(cast(navaids_points_distanceindication_pt_iutqpu.title as varchar), '(' || navaids_points_distanceindication_pt_iutqpu.nilreason[1] || ')') AS distance,
    navaids_points_distanceindication_pt_iutqpu.href AS distance_href,
    procedure_holdinguse_view_vcpgdl.id AS holding,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_tdmuwp.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_tdmuwp.nilreason[1] || ')') AS approach,
    procedure_instrumentapproachprocedure_pt_tdmuwp.href AS approach_href,
    jsonb_agg(shared_aircraftcharacteristic_view_osvimz.id) AS aircraftcategory,
    jsonb_agg(shared_obstacleassessmentarea_view_mhgziz.id) AS designsurface,
    jsonb_agg(DISTINCT notes_note_view_cscwkx.*) AS annotation,
    jsonb_agg(procedure_approachcondition_view_hdwqyu.id) AS condition
from procedure.missedapproachleg 
inner join master_join mj2 on procedure.missedapproachleg.id = mj2.source_id
inner join procedure.missedapproachleg_tsp on mj2.target_id = procedure.missedapproachleg_tsp.id
inner join procedure.missedapproachleg_ts on procedure.missedapproachleg_tsp.missedapproachlegtimeslice_id = procedure.missedapproachleg_ts.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_vtnmso on procedure.missedapproachleg_ts.startpoint_id = navaids_points_terminalsegmentpoint_view_vtnmso.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_uttnke on procedure.missedapproachleg_ts.endpoint_id = navaids_points_terminalsegmentpoint_view_uttnke.id
left join geometry.curve_view geometry_curve_view_yjatsl on procedure.missedapproachleg_ts.trajectory_id = geometry_curve_view_yjatsl.id
left join navaids_points.terminalsegmentpoint_view navaids_points_terminalsegmentpoint_view_qwssjx on procedure.missedapproachleg_ts.arccentre_id = navaids_points_terminalsegmentpoint_view_qwssjx.id
left join navaids_points.angleindication_pt navaids_points_angleindication_pt_znrila on procedure.missedapproachleg_ts.angle_id = navaids_points_angleindication_pt_znrila.id
left join navaids_points.distanceindication_pt navaids_points_distanceindication_pt_iutqpu on procedure.missedapproachleg_ts.distance_id = navaids_points_distanceindication_pt_iutqpu.id
left join procedure.holdinguse_view procedure_holdinguse_view_vcpgdl on procedure.missedapproachleg_ts.holding_id = procedure_holdinguse_view_vcpgdl.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_tdmuwp on procedure.missedapproachleg_ts.approach_id = procedure_instrumentapproachprocedure_pt_tdmuwp.id
left join master_join master_join_ryszui on procedure.missedapproachleg_ts.id = master_join_ryszui.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_osvimz on master_join_ryszui.target_id = shared_aircraftcharacteristic_view_osvimz.id
left join master_join master_join_jjhyxs on procedure.missedapproachleg_ts.id = master_join_jjhyxs.source_id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_mhgziz on master_join_jjhyxs.target_id = shared_obstacleassessmentarea_view_mhgziz.id
left join master_join master_join_jdirpy on procedure.missedapproachleg_ts.id = master_join_jdirpy.source_id
left join notes.note_view notes_note_view_cscwkx on master_join_jdirpy.target_id = notes_note_view_cscwkx.id
left join master_join master_join_aklala on procedure.missedapproachleg_ts.id = master_join_aklala.source_id
left join procedure.approachcondition_view procedure_approachcondition_view_hdwqyu on master_join_aklala.target_id = procedure_approachcondition_view_hdwqyu.id
where procedure.missedapproachleg.feature_status = 'APPROVED'
  and procedure.missedapproachleg_ts.feature_status = 'APPROVED'
group by
    procedure.missedapproachleg.id,
    procedure.missedapproachleg_ts.id,
    procedure.missedapproachleg_tsp.id,
    procedure.missedapproachleg.identifier,
    procedure.missedapproachleg_ts.interpretation,
    procedure.missedapproachleg_ts.sequence_number,
    procedure.missedapproachleg_ts.correction_number,
    procedure.missedapproachleg_ts.valid_time_begin,
    procedure.missedapproachleg_ts.valid_time_end,
    procedure.missedapproachleg_ts.feature_lifetime_begin,
    procedure.missedapproachleg_ts.feature_lifetime_end,
    procedure.missedapproachleg_ts.endconditiondesignator_value,
    procedure.missedapproachleg_ts.endconditiondesignator_nilreason,
    procedure.missedapproachleg_ts.legpath_value,
    procedure.missedapproachleg_ts.legpath_nilreason,
    procedure.missedapproachleg_ts.legtypearinc_value,
    procedure.missedapproachleg_ts.legtypearinc_nilreason,
    procedure.missedapproachleg_ts.course_value,
    procedure.missedapproachleg_ts.course_nilreason,
    procedure.missedapproachleg_ts.coursetype_value,
    procedure.missedapproachleg_ts.coursetype_nilreason,
    procedure.missedapproachleg_ts.coursedirection_value,
    procedure.missedapproachleg_ts.coursedirection_nilreason,
    procedure.missedapproachleg_ts.turndirection_value,
    procedure.missedapproachleg_ts.turndirection_nilreason,
    procedure.missedapproachleg_ts.speedreference_value,
    procedure.missedapproachleg_ts.speedreference_nilreason,
    procedure.missedapproachleg_ts.speedinterpretation_value,
    procedure.missedapproachleg_ts.speedinterpretation_nilreason,
    procedure.missedapproachleg_ts.bankangle_value,
    procedure.missedapproachleg_ts.bankangle_nilreason,
    procedure.missedapproachleg_ts.procedureturnrequired_value,
    procedure.missedapproachleg_ts.procedureturnrequired_nilreason,
    procedure.missedapproachleg_ts.upperlimitreference_value,
    procedure.missedapproachleg_ts.upperlimitreference_nilreason,
    procedure.missedapproachleg_ts.lowerlimitreference_value,
    procedure.missedapproachleg_ts.lowerlimitreference_nilreason,
    procedure.missedapproachleg_ts.altitudeinterpretation_value,
    procedure.missedapproachleg_ts.altitudeinterpretation_nilreason,
    procedure.missedapproachleg_ts.altitudeoverridereference_value,
    procedure.missedapproachleg_ts.altitudeoverridereference_nilreason,
    procedure.missedapproachleg_ts.verticalangle_value,
    procedure.missedapproachleg_ts.verticalangle_nilreason,
    procedure.missedapproachleg_ts.type_value,
    procedure.missedapproachleg_ts.type_nilreason,
    procedure.missedapproachleg_ts.thresholdaftermapt_value,
    procedure.missedapproachleg_ts.thresholdaftermapt_nilreason,
    procedure.missedapproachleg_ts.requirednavigationperformance_value,
    procedure.missedapproachleg_ts.requirednavigationperformance_nilreason,
    procedure.missedapproachleg_ts.speedlimit_value,
    procedure.missedapproachleg_ts.speedlimit_uom,
    procedure.missedapproachleg_ts.speedlimit_nilreason,
    procedure.missedapproachleg_ts.length_value,
    procedure.missedapproachleg_ts.length_uom,
    procedure.missedapproachleg_ts.length_nilreason,
    procedure.missedapproachleg_ts.duration_value,
    procedure.missedapproachleg_ts.duration_uom,
    procedure.missedapproachleg_ts.duration_nilreason,
    procedure.missedapproachleg_ts.upperlimitaltitude_value,
    procedure.missedapproachleg_ts.upperlimitaltitude_uom,
    procedure.missedapproachleg_ts.upperlimitaltitude_nilreason,
    procedure.missedapproachleg_ts.lowerlimitaltitude_value,
    procedure.missedapproachleg_ts.lowerlimitaltitude_uom,
    procedure.missedapproachleg_ts.lowerlimitaltitude_nilreason,
    procedure.missedapproachleg_ts.altitudeoverrideatc_value,
    procedure.missedapproachleg_ts.altitudeoverrideatc_uom,
    procedure.missedapproachleg_ts.altitudeoverrideatc_nilreason,
    procedure.missedapproachleg_ts.heightmapt_value,
    procedure.missedapproachleg_ts.heightmapt_uom,
    procedure.missedapproachleg_ts.heightmapt_nilreason,
    navaids_points_terminalsegmentpoint_view_vtnmso.id,
    navaids_points_terminalsegmentpoint_view_uttnke.id,
    geometry_curve_view_yjatsl.geom,
    geometry_curve_view_yjatsl.horizontalAccuracy,
    navaids_points_terminalsegmentpoint_view_qwssjx.id,
    navaids_points_angleindication_pt_znrila.title,
    navaids_points_angleindication_pt_znrila.nilreason[1],
    navaids_points_angleindication_pt_znrila.href,
    navaids_points_distanceindication_pt_iutqpu.title,
    navaids_points_distanceindication_pt_iutqpu.nilreason[1],
    navaids_points_distanceindication_pt_iutqpu.href,
    procedure_holdinguse_view_vcpgdl.id,
    procedure_instrumentapproachprocedure_pt_tdmuwp.title,
    procedure_instrumentapproachprocedure_pt_tdmuwp.nilreason[1],
    procedure_instrumentapproachprocedure_pt_tdmuwp.href
order by missedapproachleg.identifier, missedapproachleg_ts.sequence_number, missedapproachleg_ts.correction_number DESC;
create index on procedure.missedapproachleg_view (id);
-- NavaidTimeSliceType
-- ['navaids_points.navaidcomponent_view', 'navaids_points.navaidoperationalstatus_view', 'geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists navaids_points.navaid_view cascade;
create materialized view navaids_points.navaid_view as
select distinct on (navaid.identifier,navaid_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.navaid.id,
    navaids_points.navaid_ts.id as ts_id,
    navaids_points.navaid_tsp.id as tsp_id,
    navaids_points.navaid.identifier,
    navaids_points.navaid_ts.interpretation,
    navaids_points.navaid_ts.sequence_number,
    navaids_points.navaid_ts.correction_number,
    navaids_points.navaid_ts.valid_time_begin,
    navaids_points.navaid_ts.valid_time_end,
    navaids_points.navaid_ts.feature_lifetime_begin,
    navaids_points.navaid_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.navaid_ts.type_value as varchar), '(' || navaids_points.navaid_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.navaid_ts.designator_value as varchar), '(' || navaids_points.navaid_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.navaid_ts.name_value as varchar), '(' || navaids_points.navaid_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.navaid_ts.flightchecked_value as varchar), '(' || navaids_points.navaid_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.navaid_ts.purpose_value as varchar), '(' || navaids_points.navaid_ts.purpose_nilreason || ')') as purpose,
    coalesce(cast(navaids_points.navaid_ts.signalperformance_value as varchar), '(' || navaids_points.navaid_ts.signalperformance_nilreason || ')') as signalperformance,
    coalesce(cast(navaids_points.navaid_ts.coursequality_value as varchar), '(' || navaids_points.navaid_ts.coursequality_nilreason || ')') as coursequality,
    coalesce(cast(navaids_points.navaid_ts.integritylevel_value as varchar), '(' || navaids_points.navaid_ts.integritylevel_nilreason || ')') as integritylevel,
    geometry_elevatedpoint_view_ijcovk.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_ijcovk.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_ijcovk.geom) AS location_latitude,
    geometry_elevatedpoint_view_ijcovk.elevation AS location_elevation,
    geometry_elevatedpoint_view_ijcovk.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_ijcovk.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_ijcovk.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_ijcovk.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_touchdownliftoff_pt_ofsbpn.id,
    'title', coalesce(cast(airport_heliport_touchdownliftoff_pt_ofsbpn.title AS varchar), '(' || airport_heliport_touchdownliftoff_pt_ofsbpn.nilreason[1] || ')'),
    'href', airport_heliport_touchdownliftoff_pt_ofsbpn.href)) AS touchdownliftoff,
    jsonb_agg(navaids_points_navaidcomponent_view_vtehhm.id) AS navaidequipment,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_itphdb.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_itphdb.title AS varchar), '(' || airport_heliport_runwaydirection_pt_itphdb.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_itphdb.href)) AS runwaydirection,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_zdhrqa.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_zdhrqa.title AS varchar), '(' || airport_heliport_airportheliport_pt_zdhrqa.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_zdhrqa.href)) AS servedairport,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_ogjplx.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_pqvugs.*) AS annotation
from navaids_points.navaid 
inner join master_join mj2 on navaids_points.navaid.id = mj2.source_id
inner join navaids_points.navaid_tsp on mj2.target_id = navaids_points.navaid_tsp.id
inner join navaids_points.navaid_ts on navaids_points.navaid_tsp.navaidtimeslice_id = navaids_points.navaid_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_ijcovk on navaids_points.navaid_ts.location_id = geometry_elevatedpoint_view_ijcovk.id
left join master_join master_join_jqzugz on navaids_points.navaid_ts.id = master_join_jqzugz.source_id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ofsbpn on master_join_jqzugz.target_id = airport_heliport_touchdownliftoff_pt_ofsbpn.id
left join master_join master_join_hsenpi on navaids_points.navaid_ts.id = master_join_hsenpi.source_id
left join navaids_points.navaidcomponent_view navaids_points_navaidcomponent_view_vtehhm on master_join_hsenpi.target_id = navaids_points_navaidcomponent_view_vtehhm.id
left join master_join master_join_kcqqkf on navaids_points.navaid_ts.id = master_join_kcqqkf.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_itphdb on master_join_kcqqkf.target_id = airport_heliport_runwaydirection_pt_itphdb.id
left join master_join master_join_ztdwbe on navaids_points.navaid_ts.id = master_join_ztdwbe.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_zdhrqa on master_join_ztdwbe.target_id = airport_heliport_airportheliport_pt_zdhrqa.id
left join master_join master_join_uczdof on navaids_points.navaid_ts.id = master_join_uczdof.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_ogjplx on master_join_uczdof.target_id = navaids_points_navaidoperationalstatus_view_ogjplx.id
left join master_join master_join_etqfdb on navaids_points.navaid_ts.id = master_join_etqfdb.source_id
left join notes.note_view notes_note_view_pqvugs on master_join_etqfdb.target_id = notes_note_view_pqvugs.id
where navaids_points.navaid.feature_status = 'APPROVED'
  and navaids_points.navaid_ts.feature_status = 'APPROVED'
group by
    navaids_points.navaid.id,
    navaids_points.navaid_ts.id,
    navaids_points.navaid_tsp.id,
    navaids_points.navaid.identifier,
    navaids_points.navaid_ts.interpretation,
    navaids_points.navaid_ts.sequence_number,
    navaids_points.navaid_ts.correction_number,
    navaids_points.navaid_ts.valid_time_begin,
    navaids_points.navaid_ts.valid_time_end,
    navaids_points.navaid_ts.feature_lifetime_begin,
    navaids_points.navaid_ts.feature_lifetime_end,
    navaids_points.navaid_ts.type_value,
    navaids_points.navaid_ts.type_nilreason,
    navaids_points.navaid_ts.designator_value,
    navaids_points.navaid_ts.designator_nilreason,
    navaids_points.navaid_ts.name_value,
    navaids_points.navaid_ts.name_nilreason,
    navaids_points.navaid_ts.flightchecked_value,
    navaids_points.navaid_ts.flightchecked_nilreason,
    navaids_points.navaid_ts.purpose_value,
    navaids_points.navaid_ts.purpose_nilreason,
    navaids_points.navaid_ts.signalperformance_value,
    navaids_points.navaid_ts.signalperformance_nilreason,
    navaids_points.navaid_ts.coursequality_value,
    navaids_points.navaid_ts.coursequality_nilreason,
    navaids_points.navaid_ts.integritylevel_value,
    navaids_points.navaid_ts.integritylevel_nilreason,
    geometry_elevatedpoint_view_ijcovk.geom,
    geometry_elevatedpoint_view_ijcovk.elevation,
    geometry_elevatedpoint_view_ijcovk.geoidUndulation,
    geometry_elevatedpoint_view_ijcovk.verticalDatum,
    geometry_elevatedpoint_view_ijcovk.verticalAccuracy,
    geometry_elevatedpoint_view_ijcovk.horizontalAccuracy
order by navaid.identifier, navaid_ts.sequence_number, navaid_ts.correction_number DESC;
create index on navaids_points.navaid_view (id);
-- NavigationAreaRestrictionTimeSliceType
-- ['shared.circlesector_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists procedure.navigationarearestriction_view cascade;
create materialized view procedure.navigationarearestriction_view as
select distinct on (navigationarearestriction.identifier,navigationarearestriction_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.navigationarearestriction.id,
    procedure.navigationarearestriction_ts.id as ts_id,
    procedure.navigationarearestriction_tsp.id as tsp_id,
    procedure.navigationarearestriction.identifier,
    procedure.navigationarearestriction_ts.interpretation,
    procedure.navigationarearestriction_ts.sequence_number,
    procedure.navigationarearestriction_ts.correction_number,
    procedure.navigationarearestriction_ts.valid_time_begin,
    procedure.navigationarearestriction_ts.valid_time_end,
    procedure.navigationarearestriction_ts.feature_lifetime_begin,
    procedure.navigationarearestriction_ts.feature_lifetime_end,
    coalesce(cast(procedure.navigationarearestriction_ts.type_value as varchar), '(' || procedure.navigationarearestriction_ts.type_nilreason || ')') as type,
    shared_obstacleassessmentarea_view_pidzko.id AS designsurface,
    shared_circlesector_view_aladfa.id AS sectordefinition,
    jsonb_agg(DISTINCT notes_note_view_cagxra.*) AS annotation
from procedure.navigationarearestriction 
inner join master_join mj2 on procedure.navigationarearestriction.id = mj2.source_id
inner join procedure.navigationarearestriction_tsp on mj2.target_id = procedure.navigationarearestriction_tsp.id
inner join procedure.navigationarearestriction_ts on procedure.navigationarearestriction_tsp.navigationarearestrictiontimeslice_id = procedure.navigationarearestriction_ts.id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_pidzko on procedure.navigationarearestriction_ts.designsurface_id = shared_obstacleassessmentarea_view_pidzko.id
left join shared.circlesector_view shared_circlesector_view_aladfa on procedure.navigationarearestriction_ts.sectordefinition_id = shared_circlesector_view_aladfa.id
left join master_join master_join_ryznop on procedure.navigationarearestriction_ts.id = master_join_ryznop.source_id
left join notes.note_view notes_note_view_cagxra on master_join_ryznop.target_id = notes_note_view_cagxra.id
where procedure.navigationarearestriction.feature_status = 'APPROVED'
  and procedure.navigationarearestriction_ts.feature_status = 'APPROVED'
group by
    procedure.navigationarearestriction.id,
    procedure.navigationarearestriction_ts.id,
    procedure.navigationarearestriction_tsp.id,
    procedure.navigationarearestriction.identifier,
    procedure.navigationarearestriction_ts.interpretation,
    procedure.navigationarearestriction_ts.sequence_number,
    procedure.navigationarearestriction_ts.correction_number,
    procedure.navigationarearestriction_ts.valid_time_begin,
    procedure.navigationarearestriction_ts.valid_time_end,
    procedure.navigationarearestriction_ts.feature_lifetime_begin,
    procedure.navigationarearestriction_ts.feature_lifetime_end,
    procedure.navigationarearestriction_ts.type_value,
    procedure.navigationarearestriction_ts.type_nilreason,
    shared_obstacleassessmentarea_view_pidzko.id,
    shared_circlesector_view_aladfa.id
order by navigationarearestriction.identifier, navigationarearestriction_ts.sequence_number, navigationarearestriction_ts.correction_number DESC;
create index on procedure.navigationarearestriction_view (id);
-- NavigationAreaTimeSliceType
-- ['procedure.navigationareasector_view', 'geometry.point_view', 'notes.note_view']
drop materialized view if exists procedure.navigationarea_view cascade;
create materialized view procedure.navigationarea_view as
select distinct on (navigationarea.identifier,navigationarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.navigationarea.id,
    procedure.navigationarea_ts.id as ts_id,
    procedure.navigationarea_tsp.id as tsp_id,
    procedure.navigationarea.identifier,
    procedure.navigationarea_ts.interpretation,
    procedure.navigationarea_ts.sequence_number,
    procedure.navigationarea_ts.correction_number,
    procedure.navigationarea_ts.valid_time_begin,
    procedure.navigationarea_ts.valid_time_end,
    procedure.navigationarea_ts.feature_lifetime_begin,
    procedure.navigationarea_ts.feature_lifetime_end,
    coalesce(cast(procedure.navigationarea_ts.navigationareatype_value as varchar), '(' || procedure.navigationarea_ts.navigationareatype_nilreason || ')') as navigationareatype,
    coalesce(cast(procedure.navigationarea_ts.minimumceiling_value as varchar) || ' ' || procedure.navigationarea_ts.minimumceiling_uom, '(' || procedure.navigationarea_ts.minimumceiling_nilreason || ')') as minimumceiling,
    coalesce(cast(procedure.navigationarea_ts.minimumvisibility_value as varchar) || ' ' || procedure.navigationarea_ts.minimumvisibility_uom, '(' || procedure.navigationarea_ts.minimumvisibility_nilreason || ')') as minimumvisibility,
    coalesce(cast(procedure_standardinstrumentdeparture_pt_nsgzlg.title as varchar), '(' || procedure_standardinstrumentdeparture_pt_nsgzlg.nilreason[1] || ')') AS departure,
    procedure_standardinstrumentdeparture_pt_nsgzlg.href AS departure_href,
    coalesce(cast(navaids_points_designatedpoint_pt_oqmjkr.title as varchar), '(' || navaids_points_designatedpoint_pt_oqmjkr.nilreason[1] || ')') AS centrepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_oqmjkr.href AS centrepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_uknrjl.title as varchar), '(' || navaids_points_navaid_pt_uknrjl.nilreason[1] || ')') AS centrepointnavaidsystem,
    navaids_points_navaid_pt_uknrjl.href AS centrepointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_sbrjtn.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_sbrjtn.nilreason[1] || ')') AS centrepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_sbrjtn.href AS centrepointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_trowkv.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_trowkv.nilreason[1] || ')') AS centrepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_trowkv.href AS centrepointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_shwusa.title as varchar), '(' || airport_heliport_airportheliport_pt_shwusa.nilreason[1] || ')') AS centrepointairportreferencepoint,
    airport_heliport_airportheliport_pt_shwusa.href AS centrepointairportreferencepoint_href,
    geometry_point_view_hgcwxx.geom AS centrepointposition_geom,
    ST_X(geometry_point_view_hgcwxx.geom) AS centrepointposition_longitude,
    ST_Y(geometry_point_view_hgcwxx.geom) AS centrepointposition_latitude,
    geometry_point_view_hgcwxx.horizontalAccuracy AS centrepointposition_horizontalaccuracy,
    jsonb_agg(procedure_navigationareasector_view_lippoo.id) AS sector,
    jsonb_agg(DISTINCT notes_note_view_wkmibb.*) AS annotation
from procedure.navigationarea 
inner join master_join mj2 on procedure.navigationarea.id = mj2.source_id
inner join procedure.navigationarea_tsp on mj2.target_id = procedure.navigationarea_tsp.id
inner join procedure.navigationarea_ts on procedure.navigationarea_tsp.navigationareatimeslice_id = procedure.navigationarea_ts.id
left join procedure.standardinstrumentdeparture_pt procedure_standardinstrumentdeparture_pt_nsgzlg on procedure.navigationarea_ts.departure_id = procedure_standardinstrumentdeparture_pt_nsgzlg.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_oqmjkr on procedure.navigationarea_ts.centrepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_oqmjkr.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_uknrjl on procedure.navigationarea_ts.centrepoint_navaidsystem_id = navaids_points_navaid_pt_uknrjl.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_sbrjtn on procedure.navigationarea_ts.centrepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_sbrjtn.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_trowkv on procedure.navigationarea_ts.centrepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_trowkv.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_shwusa on procedure.navigationarea_ts.centrepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_shwusa.id
left join geometry.point_view geometry_point_view_hgcwxx on procedure.navigationarea_ts.centrepoint_position_id = geometry_point_view_hgcwxx.id
left join master_join master_join_ddbipq on procedure.navigationarea_ts.id = master_join_ddbipq.source_id
left join procedure.navigationareasector_view procedure_navigationareasector_view_lippoo on master_join_ddbipq.target_id = procedure_navigationareasector_view_lippoo.id
left join master_join master_join_wkmpfx on procedure.navigationarea_ts.id = master_join_wkmpfx.source_id
left join notes.note_view notes_note_view_wkmibb on master_join_wkmpfx.target_id = notes_note_view_wkmibb.id
where procedure.navigationarea.feature_status = 'APPROVED'
  and procedure.navigationarea_ts.feature_status = 'APPROVED'
group by
    procedure.navigationarea.id,
    procedure.navigationarea_ts.id,
    procedure.navigationarea_tsp.id,
    procedure.navigationarea.identifier,
    procedure.navigationarea_ts.interpretation,
    procedure.navigationarea_ts.sequence_number,
    procedure.navigationarea_ts.correction_number,
    procedure.navigationarea_ts.valid_time_begin,
    procedure.navigationarea_ts.valid_time_end,
    procedure.navigationarea_ts.feature_lifetime_begin,
    procedure.navigationarea_ts.feature_lifetime_end,
    procedure.navigationarea_ts.navigationareatype_value,
    procedure.navigationarea_ts.navigationareatype_nilreason,
    procedure.navigationarea_ts.minimumceiling_value,
    procedure.navigationarea_ts.minimumceiling_uom,
    procedure.navigationarea_ts.minimumceiling_nilreason,
    procedure.navigationarea_ts.minimumvisibility_value,
    procedure.navigationarea_ts.minimumvisibility_uom,
    procedure.navigationarea_ts.minimumvisibility_nilreason,
    procedure_standardinstrumentdeparture_pt_nsgzlg.title,
    procedure_standardinstrumentdeparture_pt_nsgzlg.nilreason[1],
    procedure_standardinstrumentdeparture_pt_nsgzlg.href,
    navaids_points_designatedpoint_pt_oqmjkr.title,
    navaids_points_designatedpoint_pt_oqmjkr.nilreason[1],
    navaids_points_designatedpoint_pt_oqmjkr.href,
    navaids_points_navaid_pt_uknrjl.title,
    navaids_points_navaid_pt_uknrjl.nilreason[1],
    navaids_points_navaid_pt_uknrjl.href,
    airport_heliport_touchdownliftoff_pt_sbrjtn.title,
    airport_heliport_touchdownliftoff_pt_sbrjtn.nilreason[1],
    airport_heliport_touchdownliftoff_pt_sbrjtn.href,
    airport_heliport_runwaycentrelinepoint_pt_trowkv.title,
    airport_heliport_runwaycentrelinepoint_pt_trowkv.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_trowkv.href,
    airport_heliport_airportheliport_pt_shwusa.title,
    airport_heliport_airportheliport_pt_shwusa.nilreason[1],
    airport_heliport_airportheliport_pt_shwusa.href,
    geometry_point_view_hgcwxx.geom,
    geometry_point_view_hgcwxx.horizontalAccuracy
order by navigationarea.identifier, navigationarea_ts.sequence_number, navigationarea_ts.correction_number DESC;
create index on procedure.navigationarea_view (id);
-- NDBTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.ndb_view cascade;
create materialized view navaids_points.ndb_view as
select distinct on (ndb.identifier,ndb_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.ndb.id,
    navaids_points.ndb_ts.id as ts_id,
    navaids_points.ndb_tsp.id as tsp_id,
    navaids_points.ndb.identifier,
    navaids_points.ndb_ts.interpretation,
    navaids_points.ndb_ts.sequence_number,
    navaids_points.ndb_ts.correction_number,
    navaids_points.ndb_ts.valid_time_begin,
    navaids_points.ndb_ts.valid_time_end,
    navaids_points.ndb_ts.feature_lifetime_begin,
    navaids_points.ndb_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.ndb_ts.designator_value as varchar), '(' || navaids_points.ndb_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.ndb_ts.name_value as varchar), '(' || navaids_points.ndb_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.ndb_ts.emissionclass_value as varchar), '(' || navaids_points.ndb_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.ndb_ts.mobile_value as varchar), '(' || navaids_points.ndb_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.ndb_ts.magneticvariation_value as varchar), '(' || navaids_points.ndb_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.ndb_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.ndb_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.ndb_ts.datemagneticvariation_value as varchar), '(' || navaids_points.ndb_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.ndb_ts.flightchecked_value as varchar), '(' || navaids_points.ndb_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.ndb_ts.class_value as varchar), '(' || navaids_points.ndb_ts.class_nilreason || ')') as class,
    coalesce(cast(navaids_points.ndb_ts.emissionband_value as varchar), '(' || navaids_points.ndb_ts.emissionband_nilreason || ')') as emissionband,
    coalesce(cast(navaids_points.ndb_ts.frequency_value as varchar) || ' ' || navaids_points.ndb_ts.frequency_uom, '(' || navaids_points.ndb_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_lqqiue.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_lqqiue.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_lqqiue.geom) AS location_latitude,
    geometry_elevatedpoint_view_lqqiue.elevation AS location_elevation,
    geometry_elevatedpoint_view_lqqiue.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_lqqiue.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_lqqiue.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_lqqiue.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_ryddcp.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_jvknyg.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_xndryf.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_qkljnr.*) AS annotation
from navaids_points.ndb 
inner join master_join mj2 on navaids_points.ndb.id = mj2.source_id
inner join navaids_points.ndb_tsp on mj2.target_id = navaids_points.ndb_tsp.id
inner join navaids_points.ndb_ts on navaids_points.ndb_tsp.ndbtimeslice_id = navaids_points.ndb_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_lqqiue on navaids_points.ndb_ts.location_id = geometry_elevatedpoint_view_lqqiue.id
left join master_join master_join_tgduga on navaids_points.ndb_ts.id = master_join_tgduga.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_ryddcp on master_join_tgduga.target_id = navaids_points_authorityfornavaidequipment_view_ryddcp.id
left join master_join master_join_kyzlro on navaids_points.ndb_ts.id = master_join_kyzlro.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_jvknyg on master_join_kyzlro.target_id = navaids_points_navaidequipmentmonitoring_view_jvknyg.id
left join master_join master_join_dckfmf on navaids_points.ndb_ts.id = master_join_dckfmf.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_xndryf on master_join_dckfmf.target_id = navaids_points_navaidoperationalstatus_view_xndryf.id
left join master_join master_join_nqwpsx on navaids_points.ndb_ts.id = master_join_nqwpsx.source_id
left join notes.note_view notes_note_view_qkljnr on master_join_nqwpsx.target_id = notes_note_view_qkljnr.id
where navaids_points.ndb.feature_status = 'APPROVED'
  and navaids_points.ndb_ts.feature_status = 'APPROVED'
group by
    navaids_points.ndb.id,
    navaids_points.ndb_ts.id,
    navaids_points.ndb_tsp.id,
    navaids_points.ndb.identifier,
    navaids_points.ndb_ts.interpretation,
    navaids_points.ndb_ts.sequence_number,
    navaids_points.ndb_ts.correction_number,
    navaids_points.ndb_ts.valid_time_begin,
    navaids_points.ndb_ts.valid_time_end,
    navaids_points.ndb_ts.feature_lifetime_begin,
    navaids_points.ndb_ts.feature_lifetime_end,
    navaids_points.ndb_ts.designator_value,
    navaids_points.ndb_ts.designator_nilreason,
    navaids_points.ndb_ts.name_value,
    navaids_points.ndb_ts.name_nilreason,
    navaids_points.ndb_ts.emissionclass_value,
    navaids_points.ndb_ts.emissionclass_nilreason,
    navaids_points.ndb_ts.mobile_value,
    navaids_points.ndb_ts.mobile_nilreason,
    navaids_points.ndb_ts.magneticvariation_value,
    navaids_points.ndb_ts.magneticvariation_nilreason,
    navaids_points.ndb_ts.magneticvariationaccuracy_value,
    navaids_points.ndb_ts.magneticvariationaccuracy_nilreason,
    navaids_points.ndb_ts.datemagneticvariation_value,
    navaids_points.ndb_ts.datemagneticvariation_nilreason,
    navaids_points.ndb_ts.flightchecked_value,
    navaids_points.ndb_ts.flightchecked_nilreason,
    navaids_points.ndb_ts.class_value,
    navaids_points.ndb_ts.class_nilreason,
    navaids_points.ndb_ts.emissionband_value,
    navaids_points.ndb_ts.emissionband_nilreason,
    navaids_points.ndb_ts.frequency_value,
    navaids_points.ndb_ts.frequency_uom,
    navaids_points.ndb_ts.frequency_nilreason,
    geometry_elevatedpoint_view_lqqiue.geom,
    geometry_elevatedpoint_view_lqqiue.elevation,
    geometry_elevatedpoint_view_lqqiue.geoidUndulation,
    geometry_elevatedpoint_view_lqqiue.verticalDatum,
    geometry_elevatedpoint_view_lqqiue.verticalAccuracy,
    geometry_elevatedpoint_view_lqqiue.horizontalAccuracy
order by ndb.identifier, ndb_ts.sequence_number, ndb_ts.correction_number DESC;
create index on navaids_points.ndb_view (id);
-- NonMovementAreaTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.nonmovementarea_view cascade;
create materialized view airport_heliport.nonmovementarea_view as
select distinct on (nonmovementarea.identifier,nonmovementarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.nonmovementarea.id,
    airport_heliport.nonmovementarea_ts.id as ts_id,
    airport_heliport.nonmovementarea_tsp.id as tsp_id,
    airport_heliport.nonmovementarea.identifier,
    airport_heliport.nonmovementarea_ts.interpretation,
    airport_heliport.nonmovementarea_ts.sequence_number,
    airport_heliport.nonmovementarea_ts.correction_number,
    airport_heliport.nonmovementarea_ts.valid_time_begin,
    airport_heliport.nonmovementarea_ts.valid_time_end,
    airport_heliport.nonmovementarea_ts.feature_lifetime_begin,
    airport_heliport.nonmovementarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport_airportheliport_pt_ixgppk.title as varchar), '(' || airport_heliport_airportheliport_pt_ixgppk.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ixgppk.href AS associatedairportheliport_href,
    geometry_elevatedsurface_view_xhbrka.geom AS extent_geom,
    geometry_elevatedsurface_view_xhbrka.elevation AS extent_elevation,
    geometry_elevatedsurface_view_xhbrka.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_xhbrka.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_xhbrka.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_xhbrka.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_jaxzsw.*) AS annotation
from airport_heliport.nonmovementarea 
inner join master_join mj2 on airport_heliport.nonmovementarea.id = mj2.source_id
inner join airport_heliport.nonmovementarea_tsp on mj2.target_id = airport_heliport.nonmovementarea_tsp.id
inner join airport_heliport.nonmovementarea_ts on airport_heliport.nonmovementarea_tsp.nonmovementareatimeslice_id = airport_heliport.nonmovementarea_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ixgppk on airport_heliport.nonmovementarea_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ixgppk.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_xhbrka on airport_heliport.nonmovementarea_ts.extent_id = geometry_elevatedsurface_view_xhbrka.id
left join master_join master_join_lqibmf on airport_heliport.nonmovementarea_ts.id = master_join_lqibmf.source_id
left join notes.note_view notes_note_view_jaxzsw on master_join_lqibmf.target_id = notes_note_view_jaxzsw.id
where airport_heliport.nonmovementarea.feature_status = 'APPROVED'
  and airport_heliport.nonmovementarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.nonmovementarea.id,
    airport_heliport.nonmovementarea_ts.id,
    airport_heliport.nonmovementarea_tsp.id,
    airport_heliport.nonmovementarea.identifier,
    airport_heliport.nonmovementarea_ts.interpretation,
    airport_heliport.nonmovementarea_ts.sequence_number,
    airport_heliport.nonmovementarea_ts.correction_number,
    airport_heliport.nonmovementarea_ts.valid_time_begin,
    airport_heliport.nonmovementarea_ts.valid_time_end,
    airport_heliport.nonmovementarea_ts.feature_lifetime_begin,
    airport_heliport.nonmovementarea_ts.feature_lifetime_end,
    airport_heliport_airportheliport_pt_ixgppk.title,
    airport_heliport_airportheliport_pt_ixgppk.nilreason[1],
    airport_heliport_airportheliport_pt_ixgppk.href,
    geometry_elevatedsurface_view_xhbrka.geom,
    geometry_elevatedsurface_view_xhbrka.elevation,
    geometry_elevatedsurface_view_xhbrka.geoidUndulation,
    geometry_elevatedsurface_view_xhbrka.verticalDatum,
    geometry_elevatedsurface_view_xhbrka.verticalAccuracy,
    geometry_elevatedsurface_view_xhbrka.horizontalAccuracy
order by nonmovementarea.identifier, nonmovementarea_ts.sequence_number, nonmovementarea_ts.correction_number DESC;
create index on airport_heliport.nonmovementarea_view (id);
-- ObstacleAreaTimeSliceType
-- ['geometry.surface_view', 'notes.note_view']
drop materialized view if exists obstacles.obstaclearea_view cascade;
create materialized view obstacles.obstaclearea_view as
select distinct on (obstaclearea.identifier,obstaclearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    obstacles.obstaclearea.id,
    obstacles.obstaclearea_ts.id as ts_id,
    obstacles.obstaclearea_tsp.id as tsp_id,
    obstacles.obstaclearea.identifier,
    obstacles.obstaclearea_ts.interpretation,
    obstacles.obstaclearea_ts.sequence_number,
    obstacles.obstaclearea_ts.correction_number,
    obstacles.obstaclearea_ts.valid_time_begin,
    obstacles.obstaclearea_ts.valid_time_end,
    obstacles.obstaclearea_ts.feature_lifetime_begin,
    obstacles.obstaclearea_ts.feature_lifetime_end,
    coalesce(cast(obstacles.obstaclearea_ts.type_value as varchar), '(' || obstacles.obstaclearea_ts.type_nilreason || ')') as type,
    coalesce(cast(obstacles.obstaclearea_ts.obstructionidsurfacecondition_value as varchar), '(' || obstacles.obstaclearea_ts.obstructionidsurfacecondition_nilreason || ')') as obstructionidsurfacecondition,
    coalesce(cast(airport_heliport_airportheliport_pt_jfldea.title as varchar), '(' || airport_heliport_airportheliport_pt_jfldea.nilreason[1] || ')') AS referenceownerairport,
    airport_heliport_airportheliport_pt_jfldea.href AS referenceownerairport_href,
    coalesce(cast(airport_heliport_runwaydirection_pt_bjjism.title as varchar), '(' || airport_heliport_runwaydirection_pt_bjjism.nilreason[1] || ')') AS referenceownerrunway,
    airport_heliport_runwaydirection_pt_bjjism.href AS referenceownerrunway_href,
    coalesce(cast(organisation_organisationauthority_pt_dwitoq.title as varchar), '(' || organisation_organisationauthority_pt_dwitoq.nilreason[1] || ')') AS referenceownerorganisation,
    organisation_organisationauthority_pt_dwitoq.href AS referenceownerorganisation_href,
    geometry_surface_view_cumnlf.geom AS surfaceextent_geom,
    geometry_surface_view_cumnlf.horizontalAccuracy as surfaceextent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', obstacles_verticalstructure_pt_lwegze.id,
    'title', coalesce(cast(obstacles_verticalstructure_pt_lwegze.title AS varchar), '(' || obstacles_verticalstructure_pt_lwegze.nilreason[1] || ')'),
    'href', obstacles_verticalstructure_pt_lwegze.href)) AS obstacle,
    jsonb_agg(DISTINCT notes_note_view_ojcwjb.*) AS annotation
from obstacles.obstaclearea 
inner join master_join mj2 on obstacles.obstaclearea.id = mj2.source_id
inner join obstacles.obstaclearea_tsp on mj2.target_id = obstacles.obstaclearea_tsp.id
inner join obstacles.obstaclearea_ts on obstacles.obstaclearea_tsp.obstacleareatimeslice_id = obstacles.obstaclearea_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jfldea on obstacles.obstaclearea_ts.reference_ownerairport_id = airport_heliport_airportheliport_pt_jfldea.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_bjjism on obstacles.obstaclearea_ts.reference_ownerrunway_id = airport_heliport_runwaydirection_pt_bjjism.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_dwitoq on obstacles.obstaclearea_ts.reference_ownerorganisation_id = organisation_organisationauthority_pt_dwitoq.id
left join geometry.surface_view geometry_surface_view_cumnlf on obstacles.obstaclearea_ts.surfaceextent_id = geometry_surface_view_cumnlf.id
left join master_join master_join_asdpsq on obstacles.obstaclearea_ts.id = master_join_asdpsq.source_id
left join obstacles.verticalstructure_pt obstacles_verticalstructure_pt_lwegze on master_join_asdpsq.target_id = obstacles_verticalstructure_pt_lwegze.id
left join master_join master_join_ppdxzt on obstacles.obstaclearea_ts.id = master_join_ppdxzt.source_id
left join notes.note_view notes_note_view_ojcwjb on master_join_ppdxzt.target_id = notes_note_view_ojcwjb.id
where obstacles.obstaclearea.feature_status = 'APPROVED'
  and obstacles.obstaclearea_ts.feature_status = 'APPROVED'
group by
    obstacles.obstaclearea.id,
    obstacles.obstaclearea_ts.id,
    obstacles.obstaclearea_tsp.id,
    obstacles.obstaclearea.identifier,
    obstacles.obstaclearea_ts.interpretation,
    obstacles.obstaclearea_ts.sequence_number,
    obstacles.obstaclearea_ts.correction_number,
    obstacles.obstaclearea_ts.valid_time_begin,
    obstacles.obstaclearea_ts.valid_time_end,
    obstacles.obstaclearea_ts.feature_lifetime_begin,
    obstacles.obstaclearea_ts.feature_lifetime_end,
    obstacles.obstaclearea_ts.type_value,
    obstacles.obstaclearea_ts.type_nilreason,
    obstacles.obstaclearea_ts.obstructionidsurfacecondition_value,
    obstacles.obstaclearea_ts.obstructionidsurfacecondition_nilreason,
    airport_heliport_airportheliport_pt_jfldea.title,
    airport_heliport_airportheliport_pt_jfldea.nilreason[1],
    airport_heliport_airportheliport_pt_jfldea.href,
    airport_heliport_runwaydirection_pt_bjjism.title,
    airport_heliport_runwaydirection_pt_bjjism.nilreason[1],
    airport_heliport_runwaydirection_pt_bjjism.href,
    organisation_organisationauthority_pt_dwitoq.title,
    organisation_organisationauthority_pt_dwitoq.nilreason[1],
    organisation_organisationauthority_pt_dwitoq.href,
    geometry_surface_view_cumnlf.geom,
    geometry_surface_view_cumnlf.horizontalAccuracy
order by obstaclearea.identifier, obstaclearea_ts.sequence_number, obstaclearea_ts.correction_number DESC;
create index on obstacles.obstaclearea_view (id);
-- OrganisationAuthorityTimeSliceType
-- ['notes.note_view', 'shared.contactinformation_view', 'organisation.organisationauthorityassociation_view']
drop materialized view if exists organisation.organisationauthority_view cascade;
create materialized view organisation.organisationauthority_view as
select distinct on (organisationauthority.identifier,organisationauthority_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    organisation.organisationauthority.id,
    organisation.organisationauthority_ts.id as ts_id,
    organisation.organisationauthority_tsp.id as tsp_id,
    organisation.organisationauthority.identifier,
    organisation.organisationauthority_ts.interpretation,
    organisation.organisationauthority_ts.sequence_number,
    organisation.organisationauthority_ts.correction_number,
    organisation.organisationauthority_ts.valid_time_begin,
    organisation.organisationauthority_ts.valid_time_end,
    organisation.organisationauthority_ts.feature_lifetime_begin,
    organisation.organisationauthority_ts.feature_lifetime_end,
    coalesce(cast(organisation.organisationauthority_ts.name_value as varchar), '(' || organisation.organisationauthority_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation.organisationauthority_ts.designator_value as varchar), '(' || organisation.organisationauthority_ts.designator_nilreason || ')') as designator,
    coalesce(cast(organisation.organisationauthority_ts.type_value as varchar), '(' || organisation.organisationauthority_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation.organisationauthority_ts.military_value as varchar), '(' || organisation.organisationauthority_ts.military_nilreason || ')') as military,
    jsonb_agg(organisation_organisationauthorityassociation_view_kxrbnv.id) AS relatedorganisationauthority,
    jsonb_agg(DISTINCT notes_note_view_fqzwtc.*) AS annotation
from organisation.organisationauthority 
inner join master_join mj2 on organisation.organisationauthority.id = mj2.source_id
inner join organisation.organisationauthority_tsp on mj2.target_id = organisation.organisationauthority_tsp.id
inner join organisation.organisationauthority_ts on organisation.organisationauthority_tsp.organisationauthoritytimeslice_id = organisation.organisationauthority_ts.id
left join master_join master_join_zvtabr on organisation.organisationauthority_ts.id = master_join_zvtabr.source_id
left join shared.contactinformation_view shared_contactinformation_view_hjkcph on master_join_zvtabr.target_id = shared_contactinformation_view_hjkcph.id
left join master_join master_join_lrjplm on organisation.organisationauthority_ts.id = master_join_lrjplm.source_id
left join organisation.organisationauthorityassociation_view organisation_organisationauthorityassociation_view_kxrbnv on master_join_lrjplm.target_id = organisation_organisationauthorityassociation_view_kxrbnv.id
left join master_join master_join_biopmh on organisation.organisationauthority_ts.id = master_join_biopmh.source_id
left join notes.note_view notes_note_view_fqzwtc on master_join_biopmh.target_id = notes_note_view_fqzwtc.id
where organisation.organisationauthority.feature_status = 'APPROVED'
  and organisation.organisationauthority_ts.feature_status = 'APPROVED'
group by
    organisation.organisationauthority.id,
    organisation.organisationauthority_ts.id,
    organisation.organisationauthority_tsp.id,
    organisation.organisationauthority.identifier,
    organisation.organisationauthority_ts.interpretation,
    organisation.organisationauthority_ts.sequence_number,
    organisation.organisationauthority_ts.correction_number,
    organisation.organisationauthority_ts.valid_time_begin,
    organisation.organisationauthority_ts.valid_time_end,
    organisation.organisationauthority_ts.feature_lifetime_begin,
    organisation.organisationauthority_ts.feature_lifetime_end,
    organisation.organisationauthority_ts.name_value,
    organisation.organisationauthority_ts.name_nilreason,
    organisation.organisationauthority_ts.designator_value,
    organisation.organisationauthority_ts.designator_nilreason,
    organisation.organisationauthority_ts.type_value,
    organisation.organisationauthority_ts.type_nilreason,
    organisation.organisationauthority_ts.military_value,
    organisation.organisationauthority_ts.military_nilreason
order by organisationauthority.identifier, organisationauthority_ts.sequence_number, organisationauthority_ts.correction_number DESC;
create index on organisation.organisationauthority_view (id);
-- PassengerLoadingBridgeTimeSliceType
-- ['geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.passengerloadingbridge_view cascade;
create materialized view airport_heliport.passengerloadingbridge_view as
select distinct on (passengerloadingbridge.identifier,passengerloadingbridge_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.passengerloadingbridge.id,
    airport_heliport.passengerloadingbridge_ts.id as ts_id,
    airport_heliport.passengerloadingbridge_tsp.id as tsp_id,
    airport_heliport.passengerloadingbridge.identifier,
    airport_heliport.passengerloadingbridge_ts.interpretation,
    airport_heliport.passengerloadingbridge_ts.sequence_number,
    airport_heliport.passengerloadingbridge_ts.correction_number,
    airport_heliport.passengerloadingbridge_ts.valid_time_begin,
    airport_heliport.passengerloadingbridge_ts.valid_time_end,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_begin,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.passengerloadingbridge_ts.type_value as varchar), '(' || airport_heliport.passengerloadingbridge_ts.type_nilreason || ')') as type,
    geometry_elevatedsurface_view_zarzup.geom AS extent_geom,
    geometry_elevatedsurface_view_zarzup.elevation AS extent_elevation,
    geometry_elevatedsurface_view_zarzup.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_zarzup.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_zarzup.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_zarzup.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_aircraftstand_pt_zjmmgj.id,
    'title', coalesce(cast(airport_heliport_aircraftstand_pt_zjmmgj.title AS varchar), '(' || airport_heliport_aircraftstand_pt_zjmmgj.nilreason[1] || ')'),
    'href', airport_heliport_aircraftstand_pt_zjmmgj.href)) AS associatedstand,
    jsonb_agg(DISTINCT notes_note_view_vedeiu.*) AS annotation
from airport_heliport.passengerloadingbridge 
inner join master_join mj2 on airport_heliport.passengerloadingbridge.id = mj2.source_id
inner join airport_heliport.passengerloadingbridge_tsp on mj2.target_id = airport_heliport.passengerloadingbridge_tsp.id
inner join airport_heliport.passengerloadingbridge_ts on airport_heliport.passengerloadingbridge_tsp.passengerloadingbridgetimeslice_id = airport_heliport.passengerloadingbridge_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_zarzup on airport_heliport.passengerloadingbridge_ts.extent_id = geometry_elevatedsurface_view_zarzup.id
left join master_join master_join_comlcf on airport_heliport.passengerloadingbridge_ts.id = master_join_comlcf.source_id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_zjmmgj on master_join_comlcf.target_id = airport_heliport_aircraftstand_pt_zjmmgj.id
left join master_join master_join_vfcllh on airport_heliport.passengerloadingbridge_ts.id = master_join_vfcllh.source_id
left join notes.note_view notes_note_view_vedeiu on master_join_vfcllh.target_id = notes_note_view_vedeiu.id
where airport_heliport.passengerloadingbridge.feature_status = 'APPROVED'
  and airport_heliport.passengerloadingbridge_ts.feature_status = 'APPROVED'
group by
    airport_heliport.passengerloadingbridge.id,
    airport_heliport.passengerloadingbridge_ts.id,
    airport_heliport.passengerloadingbridge_tsp.id,
    airport_heliport.passengerloadingbridge.identifier,
    airport_heliport.passengerloadingbridge_ts.interpretation,
    airport_heliport.passengerloadingbridge_ts.sequence_number,
    airport_heliport.passengerloadingbridge_ts.correction_number,
    airport_heliport.passengerloadingbridge_ts.valid_time_begin,
    airport_heliport.passengerloadingbridge_ts.valid_time_end,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_begin,
    airport_heliport.passengerloadingbridge_ts.feature_lifetime_end,
    airport_heliport.passengerloadingbridge_ts.type_value,
    airport_heliport.passengerloadingbridge_ts.type_nilreason,
    geometry_elevatedsurface_view_zarzup.geom,
    geometry_elevatedsurface_view_zarzup.elevation,
    geometry_elevatedsurface_view_zarzup.geoidUndulation,
    geometry_elevatedsurface_view_zarzup.verticalDatum,
    geometry_elevatedsurface_view_zarzup.verticalAccuracy,
    geometry_elevatedsurface_view_zarzup.horizontalAccuracy
order by passengerloadingbridge.identifier, passengerloadingbridge_ts.sequence_number, passengerloadingbridge_ts.correction_number DESC;
create index on airport_heliport.passengerloadingbridge_view (id);
-- PassengerServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.passengerservice_view cascade;
create materialized view service.passengerservice_view as
select distinct on (passengerservice.identifier,passengerservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.passengerservice.id,
    service.passengerservice_ts.id as ts_id,
    service.passengerservice_tsp.id as tsp_id,
    service.passengerservice.identifier,
    service.passengerservice_ts.interpretation,
    service.passengerservice_ts.sequence_number,
    service.passengerservice_ts.correction_number,
    service.passengerservice_ts.valid_time_begin,
    service.passengerservice_ts.valid_time_end,
    service.passengerservice_ts.feature_lifetime_begin,
    service.passengerservice_ts.feature_lifetime_end,
    coalesce(cast(service.passengerservice_ts.flightoperations_value as varchar), '(' || service.passengerservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.passengerservice_ts.rank_value as varchar), '(' || service.passengerservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.passengerservice_ts.complianticao_value as varchar), '(' || service.passengerservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.passengerservice_ts.name_value as varchar), '(' || service.passengerservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.passengerservice_ts.type_value as varchar), '(' || service.passengerservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_auldno.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_auldno.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_auldno.geom) AS location_latitude,
    geometry_elevatedpoint_view_auldno.elevation AS location_elevation,
    geometry_elevatedpoint_view_auldno.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_auldno.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_auldno.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_auldno.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_sjybiu.title as varchar), '(' || organisation_unit_pt_sjybiu.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_sjybiu.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_mwfwsq.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_wrkvet.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_wrkvet.title AS varchar), '(' || service_radiocommunicationchannel_pt_wrkvet.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_wrkvet.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_samuef.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_isomyf.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_hehhls.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_hehhls.title AS varchar), '(' || airport_heliport_airportheliport_pt_hehhls.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_hehhls.href)) AS airportheliport
from service.passengerservice 
inner join master_join mj2 on service.passengerservice.id = mj2.source_id
inner join service.passengerservice_tsp on mj2.target_id = service.passengerservice_tsp.id
inner join service.passengerservice_ts on service.passengerservice_tsp.passengerservicetimeslice_id = service.passengerservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_auldno on service.passengerservice_ts.location_id = geometry_elevatedpoint_view_auldno.id
left join organisation.unit_pt organisation_unit_pt_sjybiu on service.passengerservice_ts.serviceprovider_id = organisation_unit_pt_sjybiu.id
left join master_join master_join_zafkxi on service.passengerservice_ts.id = master_join_zafkxi.source_id
left join service.callsigndetail_view service_callsigndetail_view_mwfwsq on master_join_zafkxi.target_id = service_callsigndetail_view_mwfwsq.id
left join master_join master_join_gcrmsj on service.passengerservice_ts.id = master_join_gcrmsj.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_wrkvet on master_join_gcrmsj.target_id = service_radiocommunicationchannel_pt_wrkvet.id
left join master_join master_join_vawgkr on service.passengerservice_ts.id = master_join_vawgkr.source_id
left join shared.contactinformation_view shared_contactinformation_view_cxeilz on master_join_vawgkr.target_id = shared_contactinformation_view_cxeilz.id
left join master_join master_join_ubgvkt on service.passengerservice_ts.id = master_join_ubgvkt.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_samuef on master_join_ubgvkt.target_id = service_serviceoperationalstatus_view_samuef.id
left join master_join master_join_vpzomj on service.passengerservice_ts.id = master_join_vpzomj.source_id
left join notes.note_view notes_note_view_isomyf on master_join_vpzomj.target_id = notes_note_view_isomyf.id
left join master_join master_join_qobslx on service.passengerservice_ts.id = master_join_qobslx.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_hehhls on master_join_qobslx.target_id = airport_heliport_airportheliport_pt_hehhls.id
where service.passengerservice.feature_status = 'APPROVED'
  and service.passengerservice_ts.feature_status = 'APPROVED'
group by
    service.passengerservice.id,
    service.passengerservice_ts.id,
    service.passengerservice_tsp.id,
    service.passengerservice.identifier,
    service.passengerservice_ts.interpretation,
    service.passengerservice_ts.sequence_number,
    service.passengerservice_ts.correction_number,
    service.passengerservice_ts.valid_time_begin,
    service.passengerservice_ts.valid_time_end,
    service.passengerservice_ts.feature_lifetime_begin,
    service.passengerservice_ts.feature_lifetime_end,
    service.passengerservice_ts.flightoperations_value,
    service.passengerservice_ts.flightoperations_nilreason,
    service.passengerservice_ts.rank_value,
    service.passengerservice_ts.rank_nilreason,
    service.passengerservice_ts.complianticao_value,
    service.passengerservice_ts.complianticao_nilreason,
    service.passengerservice_ts.name_value,
    service.passengerservice_ts.name_nilreason,
    service.passengerservice_ts.type_value,
    service.passengerservice_ts.type_nilreason,
    geometry_elevatedpoint_view_auldno.geom,
    geometry_elevatedpoint_view_auldno.elevation,
    geometry_elevatedpoint_view_auldno.geoidUndulation,
    geometry_elevatedpoint_view_auldno.verticalDatum,
    geometry_elevatedpoint_view_auldno.verticalAccuracy,
    geometry_elevatedpoint_view_auldno.horizontalAccuracy,
    organisation_unit_pt_sjybiu.title,
    organisation_unit_pt_sjybiu.nilreason[1],
    organisation_unit_pt_sjybiu.href
order by passengerservice.identifier, passengerservice_ts.sequence_number, passengerservice_ts.correction_number DESC;
create index on service.passengerservice_view (id);
-- PilotControlledLightingTimeSliceType
-- ['airport_heliport.lightactivation_view', 'notes.note_view']
drop materialized view if exists service.pilotcontrolledlighting_view cascade;
create materialized view service.pilotcontrolledlighting_view as
select distinct on (pilotcontrolledlighting.identifier,pilotcontrolledlighting_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.pilotcontrolledlighting.id,
    service.pilotcontrolledlighting_ts.id as ts_id,
    service.pilotcontrolledlighting_tsp.id as tsp_id,
    service.pilotcontrolledlighting.identifier,
    service.pilotcontrolledlighting_ts.interpretation,
    service.pilotcontrolledlighting_ts.sequence_number,
    service.pilotcontrolledlighting_ts.correction_number,
    service.pilotcontrolledlighting_ts.valid_time_begin,
    service.pilotcontrolledlighting_ts.valid_time_end,
    service.pilotcontrolledlighting_ts.feature_lifetime_begin,
    service.pilotcontrolledlighting_ts.feature_lifetime_end,
    coalesce(cast(service.pilotcontrolledlighting_ts.type_value as varchar), '(' || service.pilotcontrolledlighting_ts.type_nilreason || ')') as type,
    coalesce(cast(service.pilotcontrolledlighting_ts.intensitysteps_value as varchar), '(' || service.pilotcontrolledlighting_ts.intensitysteps_nilreason || ')') as intensitysteps,
    coalesce(cast(service.pilotcontrolledlighting_ts.standbyintensity_value as varchar), '(' || service.pilotcontrolledlighting_ts.standbyintensity_nilreason || ')') as standbyintensity,
    coalesce(cast(service.pilotcontrolledlighting_ts.activationinstruction_value as varchar), '(' || service.pilotcontrolledlighting_ts.activationinstruction_nilreason || ')') as activationinstruction,
    coalesce(cast(service.pilotcontrolledlighting_ts.duration_value as varchar) || ' ' || service.pilotcontrolledlighting_ts.duration_uom, '(' || service.pilotcontrolledlighting_ts.duration_nilreason || ')') as duration,
    coalesce(cast(service.pilotcontrolledlighting_ts.radiofrequency_value as varchar) || ' ' || service.pilotcontrolledlighting_ts.radiofrequency_uom, '(' || service.pilotcontrolledlighting_ts.radiofrequency_nilreason || ')') as radiofrequency,
    jsonb_agg(airport_heliport_lightactivation_view_akcajq.id) AS controlledlightintensity,
    jsonb_agg(DISTINCT notes_note_view_iglqnx.*) AS annotation
from service.pilotcontrolledlighting 
inner join master_join mj2 on service.pilotcontrolledlighting.id = mj2.source_id
inner join service.pilotcontrolledlighting_tsp on mj2.target_id = service.pilotcontrolledlighting_tsp.id
inner join service.pilotcontrolledlighting_ts on service.pilotcontrolledlighting_tsp.pilotcontrolledlightingtimeslice_id = service.pilotcontrolledlighting_ts.id
left join master_join master_join_qeeity on service.pilotcontrolledlighting_ts.id = master_join_qeeity.source_id
left join airport_heliport.lightactivation_view airport_heliport_lightactivation_view_akcajq on master_join_qeeity.target_id = airport_heliport_lightactivation_view_akcajq.id
left join master_join master_join_uuvsfy on service.pilotcontrolledlighting_ts.id = master_join_uuvsfy.source_id
left join notes.note_view notes_note_view_iglqnx on master_join_uuvsfy.target_id = notes_note_view_iglqnx.id
where service.pilotcontrolledlighting.feature_status = 'APPROVED'
  and service.pilotcontrolledlighting_ts.feature_status = 'APPROVED'
group by
    service.pilotcontrolledlighting.id,
    service.pilotcontrolledlighting_ts.id,
    service.pilotcontrolledlighting_tsp.id,
    service.pilotcontrolledlighting.identifier,
    service.pilotcontrolledlighting_ts.interpretation,
    service.pilotcontrolledlighting_ts.sequence_number,
    service.pilotcontrolledlighting_ts.correction_number,
    service.pilotcontrolledlighting_ts.valid_time_begin,
    service.pilotcontrolledlighting_ts.valid_time_end,
    service.pilotcontrolledlighting_ts.feature_lifetime_begin,
    service.pilotcontrolledlighting_ts.feature_lifetime_end,
    service.pilotcontrolledlighting_ts.type_value,
    service.pilotcontrolledlighting_ts.type_nilreason,
    service.pilotcontrolledlighting_ts.intensitysteps_value,
    service.pilotcontrolledlighting_ts.intensitysteps_nilreason,
    service.pilotcontrolledlighting_ts.standbyintensity_value,
    service.pilotcontrolledlighting_ts.standbyintensity_nilreason,
    service.pilotcontrolledlighting_ts.activationinstruction_value,
    service.pilotcontrolledlighting_ts.activationinstruction_nilreason,
    service.pilotcontrolledlighting_ts.duration_value,
    service.pilotcontrolledlighting_ts.duration_uom,
    service.pilotcontrolledlighting_ts.duration_nilreason,
    service.pilotcontrolledlighting_ts.radiofrequency_value,
    service.pilotcontrolledlighting_ts.radiofrequency_uom,
    service.pilotcontrolledlighting_ts.radiofrequency_nilreason
order by pilotcontrolledlighting.identifier, pilotcontrolledlighting_ts.sequence_number, pilotcontrolledlighting_ts.correction_number DESC;
create index on service.pilotcontrolledlighting_view (id);
-- PrecisionApproachRadarTimeSliceType
-- ['notes.note_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'surveillance.reflector_view']
drop materialized view if exists surveillance.precisionapproachradar_view cascade;
create materialized view surveillance.precisionapproachradar_view as
select distinct on (precisionapproachradar.identifier,precisionapproachradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.precisionapproachradar.id,
    surveillance.precisionapproachradar_ts.id as ts_id,
    surveillance.precisionapproachradar_tsp.id as tsp_id,
    surveillance.precisionapproachradar.identifier,
    surveillance.precisionapproachradar_ts.interpretation,
    surveillance.precisionapproachradar_ts.sequence_number,
    surveillance.precisionapproachradar_ts.correction_number,
    surveillance.precisionapproachradar_ts.valid_time_begin,
    surveillance.precisionapproachradar_ts.valid_time_end,
    surveillance.precisionapproachradar_ts.feature_lifetime_begin,
    surveillance.precisionapproachradar_ts.feature_lifetime_end,
    coalesce(cast(surveillance.precisionapproachradar_ts.name_value as varchar), '(' || surveillance.precisionapproachradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.precisionapproachradar_ts.serialnumber_value as varchar), '(' || surveillance.precisionapproachradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.precisionapproachradar_ts.dualchannel_value as varchar), '(' || surveillance.precisionapproachradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.precisionapproachradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.precisionapproachradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.precisionapproachradar_ts.standbypower_value as varchar), '(' || surveillance.precisionapproachradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.precisionapproachradar_ts.digital_value as varchar), '(' || surveillance.precisionapproachradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.precisionapproachradar_ts.militaryuseonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.specialuseonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.precisionapproachradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.precisionapproachradar_ts.magneticvariation_value as varchar), '(' || surveillance.precisionapproachradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.precisionapproachradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.precisionapproachradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.precisionapproachradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.precisionapproachradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.precisionapproachradar_ts.precisionapproachradartype_value as varchar), '(' || surveillance.precisionapproachradar_ts.precisionapproachradartype_nilreason || ')') as precisionapproachradartype,
    coalesce(cast(surveillance.precisionapproachradar_ts.slope_value as varchar), '(' || surveillance.precisionapproachradar_ts.slope_nilreason || ')') as slope,
    coalesce(cast(surveillance.precisionapproachradar_ts.slopeaccuracy_value as varchar), '(' || surveillance.precisionapproachradar_ts.slopeaccuracy_nilreason || ')') as slopeaccuracy,
    coalesce(cast(surveillance.precisionapproachradar_ts.range_value as varchar) || ' ' || surveillance.precisionapproachradar_ts.range_uom, '(' || surveillance.precisionapproachradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.precisionapproachradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.precisionapproachradar_ts.rangeaccuracy_uom, '(' || surveillance.precisionapproachradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    geometry_elevatedpoint_view_nhwfcr.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_nhwfcr.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_nhwfcr.geom) AS location_latitude,
    geometry_elevatedpoint_view_nhwfcr.elevation AS location_elevation,
    geometry_elevatedpoint_view_nhwfcr.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_nhwfcr.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_nhwfcr.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_nhwfcr.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_miardx.*) AS annotation,
    jsonb_agg(surveillance_reflector_view_haytwr.id) AS reflector
from surveillance.precisionapproachradar 
inner join master_join mj2 on surveillance.precisionapproachradar.id = mj2.source_id
inner join surveillance.precisionapproachradar_tsp on mj2.target_id = surveillance.precisionapproachradar_tsp.id
inner join surveillance.precisionapproachradar_ts on surveillance.precisionapproachradar_tsp.precisionapproachradartimeslice_id = surveillance.precisionapproachradar_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_nhwfcr on surveillance.precisionapproachradar_ts.location_id = geometry_elevatedpoint_view_nhwfcr.id
left join master_join master_join_wecxaj on surveillance.precisionapproachradar_ts.id = master_join_wecxaj.source_id
left join shared.contactinformation_view shared_contactinformation_view_rvqsnj on master_join_wecxaj.target_id = shared_contactinformation_view_rvqsnj.id
left join master_join master_join_mhbfxv on surveillance.precisionapproachradar_ts.id = master_join_mhbfxv.source_id
left join notes.note_view notes_note_view_miardx on master_join_mhbfxv.target_id = notes_note_view_miardx.id
left join master_join master_join_scwucn on surveillance.precisionapproachradar_ts.id = master_join_scwucn.source_id
left join surveillance.reflector_view surveillance_reflector_view_haytwr on master_join_scwucn.target_id = surveillance_reflector_view_haytwr.id
where surveillance.precisionapproachradar.feature_status = 'APPROVED'
  and surveillance.precisionapproachradar_ts.feature_status = 'APPROVED'
group by
    surveillance.precisionapproachradar.id,
    surveillance.precisionapproachradar_ts.id,
    surveillance.precisionapproachradar_tsp.id,
    surveillance.precisionapproachradar.identifier,
    surveillance.precisionapproachradar_ts.interpretation,
    surveillance.precisionapproachradar_ts.sequence_number,
    surveillance.precisionapproachradar_ts.correction_number,
    surveillance.precisionapproachradar_ts.valid_time_begin,
    surveillance.precisionapproachradar_ts.valid_time_end,
    surveillance.precisionapproachradar_ts.feature_lifetime_begin,
    surveillance.precisionapproachradar_ts.feature_lifetime_end,
    surveillance.precisionapproachradar_ts.name_value,
    surveillance.precisionapproachradar_ts.name_nilreason,
    surveillance.precisionapproachradar_ts.serialnumber_value,
    surveillance.precisionapproachradar_ts.serialnumber_nilreason,
    surveillance.precisionapproachradar_ts.dualchannel_value,
    surveillance.precisionapproachradar_ts.dualchannel_nilreason,
    surveillance.precisionapproachradar_ts.movingtargetindicator_value,
    surveillance.precisionapproachradar_ts.movingtargetindicator_nilreason,
    surveillance.precisionapproachradar_ts.standbypower_value,
    surveillance.precisionapproachradar_ts.standbypower_nilreason,
    surveillance.precisionapproachradar_ts.digital_value,
    surveillance.precisionapproachradar_ts.digital_nilreason,
    surveillance.precisionapproachradar_ts.militaryuseonly_value,
    surveillance.precisionapproachradar_ts.militaryuseonly_nilreason,
    surveillance.precisionapproachradar_ts.specialuseonly_value,
    surveillance.precisionapproachradar_ts.specialuseonly_nilreason,
    surveillance.precisionapproachradar_ts.specialaircraftonly_value,
    surveillance.precisionapproachradar_ts.specialaircraftonly_nilreason,
    surveillance.precisionapproachradar_ts.magneticvariation_value,
    surveillance.precisionapproachradar_ts.magneticvariation_nilreason,
    surveillance.precisionapproachradar_ts.magneticvariationaccuracy_value,
    surveillance.precisionapproachradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.precisionapproachradar_ts.datemagneticvariation_value,
    surveillance.precisionapproachradar_ts.datemagneticvariation_nilreason,
    surveillance.precisionapproachradar_ts.precisionapproachradartype_value,
    surveillance.precisionapproachradar_ts.precisionapproachradartype_nilreason,
    surveillance.precisionapproachradar_ts.slope_value,
    surveillance.precisionapproachradar_ts.slope_nilreason,
    surveillance.precisionapproachradar_ts.slopeaccuracy_value,
    surveillance.precisionapproachradar_ts.slopeaccuracy_nilreason,
    surveillance.precisionapproachradar_ts.range_value,
    surveillance.precisionapproachradar_ts.range_uom,
    surveillance.precisionapproachradar_ts.range_nilreason,
    surveillance.precisionapproachradar_ts.rangeaccuracy_value,
    surveillance.precisionapproachradar_ts.rangeaccuracy_uom,
    surveillance.precisionapproachradar_ts.rangeaccuracy_nilreason,
    geometry_elevatedpoint_view_nhwfcr.geom,
    geometry_elevatedpoint_view_nhwfcr.elevation,
    geometry_elevatedpoint_view_nhwfcr.geoidUndulation,
    geometry_elevatedpoint_view_nhwfcr.verticalDatum,
    geometry_elevatedpoint_view_nhwfcr.verticalAccuracy,
    geometry_elevatedpoint_view_nhwfcr.horizontalAccuracy
order by precisionapproachradar.identifier, precisionapproachradar_ts.sequence_number, precisionapproachradar_ts.correction_number DESC;
create index on surveillance.precisionapproachradar_view (id);
-- PrimarySurveillanceRadarTimeSliceType
-- ['notes.note_view', 'surveillance.surveillancegroundstation_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view']
drop materialized view if exists surveillance.primarysurveillanceradar_view cascade;
create materialized view surveillance.primarysurveillanceradar_view as
select distinct on (primarysurveillanceradar.identifier,primarysurveillanceradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.primarysurveillanceradar.id,
    surveillance.primarysurveillanceradar_ts.id as ts_id,
    surveillance.primarysurveillanceradar_tsp.id as tsp_id,
    surveillance.primarysurveillanceradar.identifier,
    surveillance.primarysurveillanceradar_ts.interpretation,
    surveillance.primarysurveillanceradar_ts.sequence_number,
    surveillance.primarysurveillanceradar_ts.correction_number,
    surveillance.primarysurveillanceradar_ts.valid_time_begin,
    surveillance.primarysurveillanceradar_ts.valid_time_end,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_end,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.name_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.serialnumber_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.dualchannel_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.standbypower_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.digital_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.militaryuseonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.specialuseonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.magneticvariation_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_nilreason || ')') as verticalcoverageazimuth,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.antennatiltfixed_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.antennatiltfixed_nilreason || ')') as antennatiltfixed,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.tiltangle_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.tiltangle_nilreason || ')') as tiltangle,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_nilreason || ')') as automatedradarterminalsystem,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.type_value as varchar), '(' || surveillance.primarysurveillanceradar_ts.type_nilreason || ')') as type,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.range_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.range_uom, '(' || surveillance.primarysurveillanceradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.rangeaccuracy_uom, '(' || surveillance.primarysurveillanceradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_uom, '(' || surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_nilreason || ')') as verticalcoveragealtitude,
    coalesce(cast(surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_value as varchar) || ' ' || surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_uom, '(' || surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_nilreason || ')') as verticalcoveragedistance,
    geometry_elevatedpoint_view_inemoz.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_inemoz.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_inemoz.geom) AS location_latitude,
    geometry_elevatedpoint_view_inemoz.elevation AS location_elevation,
    geometry_elevatedpoint_view_inemoz.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_inemoz.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_inemoz.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_inemoz.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_uuqtwc.*) AS annotation,
    jsonb_agg(surveillance_surveillancegroundstation_view_ylqkab.id) AS groundstation
from surveillance.primarysurveillanceradar 
inner join master_join mj2 on surveillance.primarysurveillanceradar.id = mj2.source_id
inner join surveillance.primarysurveillanceradar_tsp on mj2.target_id = surveillance.primarysurveillanceradar_tsp.id
inner join surveillance.primarysurveillanceradar_ts on surveillance.primarysurveillanceradar_tsp.primarysurveillanceradartimeslice_id = surveillance.primarysurveillanceradar_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_inemoz on surveillance.primarysurveillanceradar_ts.location_id = geometry_elevatedpoint_view_inemoz.id
left join master_join master_join_gbrkib on surveillance.primarysurveillanceradar_ts.id = master_join_gbrkib.source_id
left join shared.contactinformation_view shared_contactinformation_view_ppuoxh on master_join_gbrkib.target_id = shared_contactinformation_view_ppuoxh.id
left join master_join master_join_bvcilp on surveillance.primarysurveillanceradar_ts.id = master_join_bvcilp.source_id
left join notes.note_view notes_note_view_uuqtwc on master_join_bvcilp.target_id = notes_note_view_uuqtwc.id
left join master_join master_join_itngdt on surveillance.primarysurveillanceradar_ts.id = master_join_itngdt.source_id
left join surveillance.surveillancegroundstation_view surveillance_surveillancegroundstation_view_ylqkab on master_join_itngdt.target_id = surveillance_surveillancegroundstation_view_ylqkab.id
where surveillance.primarysurveillanceradar.feature_status = 'APPROVED'
  and surveillance.primarysurveillanceradar_ts.feature_status = 'APPROVED'
group by
    surveillance.primarysurveillanceradar.id,
    surveillance.primarysurveillanceradar_ts.id,
    surveillance.primarysurveillanceradar_tsp.id,
    surveillance.primarysurveillanceradar.identifier,
    surveillance.primarysurveillanceradar_ts.interpretation,
    surveillance.primarysurveillanceradar_ts.sequence_number,
    surveillance.primarysurveillanceradar_ts.correction_number,
    surveillance.primarysurveillanceradar_ts.valid_time_begin,
    surveillance.primarysurveillanceradar_ts.valid_time_end,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.primarysurveillanceradar_ts.feature_lifetime_end,
    surveillance.primarysurveillanceradar_ts.name_value,
    surveillance.primarysurveillanceradar_ts.name_nilreason,
    surveillance.primarysurveillanceradar_ts.serialnumber_value,
    surveillance.primarysurveillanceradar_ts.serialnumber_nilreason,
    surveillance.primarysurveillanceradar_ts.dualchannel_value,
    surveillance.primarysurveillanceradar_ts.dualchannel_nilreason,
    surveillance.primarysurveillanceradar_ts.movingtargetindicator_value,
    surveillance.primarysurveillanceradar_ts.movingtargetindicator_nilreason,
    surveillance.primarysurveillanceradar_ts.standbypower_value,
    surveillance.primarysurveillanceradar_ts.standbypower_nilreason,
    surveillance.primarysurveillanceradar_ts.digital_value,
    surveillance.primarysurveillanceradar_ts.digital_nilreason,
    surveillance.primarysurveillanceradar_ts.militaryuseonly_value,
    surveillance.primarysurveillanceradar_ts.militaryuseonly_nilreason,
    surveillance.primarysurveillanceradar_ts.specialuseonly_value,
    surveillance.primarysurveillanceradar_ts.specialuseonly_nilreason,
    surveillance.primarysurveillanceradar_ts.specialaircraftonly_value,
    surveillance.primarysurveillanceradar_ts.specialaircraftonly_nilreason,
    surveillance.primarysurveillanceradar_ts.magneticvariation_value,
    surveillance.primarysurveillanceradar_ts.magneticvariation_nilreason,
    surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_value,
    surveillance.primarysurveillanceradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.primarysurveillanceradar_ts.datemagneticvariation_value,
    surveillance.primarysurveillanceradar_ts.datemagneticvariation_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_value,
    surveillance.primarysurveillanceradar_ts.verticalcoverageazimuth_nilreason,
    surveillance.primarysurveillanceradar_ts.antennatiltfixed_value,
    surveillance.primarysurveillanceradar_ts.antennatiltfixed_nilreason,
    surveillance.primarysurveillanceradar_ts.tiltangle_value,
    surveillance.primarysurveillanceradar_ts.tiltangle_nilreason,
    surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_value,
    surveillance.primarysurveillanceradar_ts.automatedradarterminalsystem_nilreason,
    surveillance.primarysurveillanceradar_ts.type_value,
    surveillance.primarysurveillanceradar_ts.type_nilreason,
    surveillance.primarysurveillanceradar_ts.range_value,
    surveillance.primarysurveillanceradar_ts.range_uom,
    surveillance.primarysurveillanceradar_ts.range_nilreason,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_value,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_uom,
    surveillance.primarysurveillanceradar_ts.rangeaccuracy_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_value,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_uom,
    surveillance.primarysurveillanceradar_ts.verticalcoveragealtitude_nilreason,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_value,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_uom,
    surveillance.primarysurveillanceradar_ts.verticalcoveragedistance_nilreason,
    geometry_elevatedpoint_view_inemoz.geom,
    geometry_elevatedpoint_view_inemoz.elevation,
    geometry_elevatedpoint_view_inemoz.geoidUndulation,
    geometry_elevatedpoint_view_inemoz.verticalDatum,
    geometry_elevatedpoint_view_inemoz.verticalAccuracy,
    geometry_elevatedpoint_view_inemoz.horizontalAccuracy
order by primarysurveillanceradar.identifier, primarysurveillanceradar_ts.sequence_number, primarysurveillanceradar_ts.correction_number DESC;
create index on surveillance.primarysurveillanceradar_view (id);
-- ProcedureDMETimeSliceType
-- ['notes.note_view']
drop materialized view if exists procedure.proceduredme_view cascade;
create materialized view procedure.proceduredme_view as
select distinct on (proceduredme.identifier,proceduredme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.proceduredme.id,
    procedure.proceduredme_ts.id as ts_id,
    procedure.proceduredme_tsp.id as tsp_id,
    procedure.proceduredme.identifier,
    procedure.proceduredme_ts.interpretation,
    procedure.proceduredme_ts.sequence_number,
    procedure.proceduredme_ts.correction_number,
    procedure.proceduredme_ts.valid_time_begin,
    procedure.proceduredme_ts.valid_time_end,
    procedure.proceduredme_ts.feature_lifetime_begin,
    procedure.proceduredme_ts.feature_lifetime_end,
    coalesce(cast(procedure.proceduredme_ts.criticaldme_value as varchar), '(' || procedure.proceduredme_ts.criticaldme_nilreason || ')') as criticaldme,
    coalesce(cast(procedure.proceduredme_ts.satisfactory_value as varchar), '(' || procedure.proceduredme_ts.satisfactory_nilreason || ')') as satisfactory,
    coalesce(cast(navaids_points_dme_pt_htxxgt.title as varchar), '(' || navaids_points_dme_pt_htxxgt.nilreason[1] || ')') AS dme,
    navaids_points_dme_pt_htxxgt.href AS dme_href,
    jsonb_agg(DISTINCT notes_note_view_bpxpkb.*) AS annotation
from procedure.proceduredme 
inner join master_join mj2 on procedure.proceduredme.id = mj2.source_id
inner join procedure.proceduredme_tsp on mj2.target_id = procedure.proceduredme_tsp.id
inner join procedure.proceduredme_ts on procedure.proceduredme_tsp.proceduredmetimeslice_id = procedure.proceduredme_ts.id
left join navaids_points.dme_pt navaids_points_dme_pt_htxxgt on procedure.proceduredme_ts.dme_id = navaids_points_dme_pt_htxxgt.id
left join master_join master_join_gpesae on procedure.proceduredme_ts.id = master_join_gpesae.source_id
left join notes.note_view notes_note_view_bpxpkb on master_join_gpesae.target_id = notes_note_view_bpxpkb.id
where procedure.proceduredme.feature_status = 'APPROVED'
  and procedure.proceduredme_ts.feature_status = 'APPROVED'
group by
    procedure.proceduredme.id,
    procedure.proceduredme_ts.id,
    procedure.proceduredme_tsp.id,
    procedure.proceduredme.identifier,
    procedure.proceduredme_ts.interpretation,
    procedure.proceduredme_ts.sequence_number,
    procedure.proceduredme_ts.correction_number,
    procedure.proceduredme_ts.valid_time_begin,
    procedure.proceduredme_ts.valid_time_end,
    procedure.proceduredme_ts.feature_lifetime_begin,
    procedure.proceduredme_ts.feature_lifetime_end,
    procedure.proceduredme_ts.criticaldme_value,
    procedure.proceduredme_ts.criticaldme_nilreason,
    procedure.proceduredme_ts.satisfactory_value,
    procedure.proceduredme_ts.satisfactory_nilreason,
    navaids_points_dme_pt_htxxgt.title,
    navaids_points_dme_pt_htxxgt.nilreason[1],
    navaids_points_dme_pt_htxxgt.href
order by proceduredme.identifier, proceduredme_ts.sequence_number, proceduredme_ts.correction_number DESC;
create index on procedure.proceduredme_view (id);
-- RadarSystemTimeSliceType
-- ['surveillance.radarcomponent_view', 'geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists surveillance.radarsystem_view cascade;
create materialized view surveillance.radarsystem_view as
select distinct on (radarsystem.identifier,radarsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.radarsystem.id,
    surveillance.radarsystem_ts.id as ts_id,
    surveillance.radarsystem_tsp.id as tsp_id,
    surveillance.radarsystem.identifier,
    surveillance.radarsystem_ts.interpretation,
    surveillance.radarsystem_ts.sequence_number,
    surveillance.radarsystem_ts.correction_number,
    surveillance.radarsystem_ts.valid_time_begin,
    surveillance.radarsystem_ts.valid_time_end,
    surveillance.radarsystem_ts.feature_lifetime_begin,
    surveillance.radarsystem_ts.feature_lifetime_end,
    coalesce(cast(surveillance.radarsystem_ts.type_value as varchar), '(' || surveillance.radarsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(surveillance.radarsystem_ts.model_value as varchar), '(' || surveillance.radarsystem_ts.model_nilreason || ')') as model,
    coalesce(cast(surveillance.radarsystem_ts.generalterrainmonitor_value as varchar), '(' || surveillance.radarsystem_ts.generalterrainmonitor_nilreason || ')') as generalterrainmonitor,
    coalesce(cast(surveillance.radarsystem_ts.broadcastidentifier_value as varchar), '(' || surveillance.radarsystem_ts.broadcastidentifier_nilreason || ')') as broadcastidentifier,
    coalesce(cast(airport_heliport_airportheliport_pt_xhcwrh.title as varchar), '(' || airport_heliport_airportheliport_pt_xhcwrh.nilreason[1] || ')') AS airportheliport,
    airport_heliport_airportheliport_pt_xhcwrh.href AS airportheliport_href,
    geometry_elevatedpoint_view_djokkr.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_djokkr.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_djokkr.geom) AS location_latitude,
    geometry_elevatedpoint_view_djokkr.elevation AS location_elevation,
    geometry_elevatedpoint_view_djokkr.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_djokkr.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_djokkr.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_djokkr.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(surveillance_radarcomponent_view_srhjlq.id) AS radarequipment,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_ewkcfh.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_ewkcfh.title AS varchar), '(' || organisation_organisationauthority_pt_ewkcfh.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_ewkcfh.href)) AS office,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runway_pt_wlitpy.id,
    'title', coalesce(cast(airport_heliport_runway_pt_wlitpy.title AS varchar), '(' || airport_heliport_runway_pt_wlitpy.nilreason[1] || ')'),
    'href', airport_heliport_runway_pt_wlitpy.href)) AS parrunway,
    jsonb_agg(DISTINCT notes_note_view_pqpkmg.*) AS annotation
from surveillance.radarsystem 
inner join master_join mj2 on surveillance.radarsystem.id = mj2.source_id
inner join surveillance.radarsystem_tsp on mj2.target_id = surveillance.radarsystem_tsp.id
inner join surveillance.radarsystem_ts on surveillance.radarsystem_tsp.radarsystemtimeslice_id = surveillance.radarsystem_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_xhcwrh on surveillance.radarsystem_ts.airportheliport_id = airport_heliport_airportheliport_pt_xhcwrh.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_djokkr on surveillance.radarsystem_ts.location_id = geometry_elevatedpoint_view_djokkr.id
left join master_join master_join_ysdqjd on surveillance.radarsystem_ts.id = master_join_ysdqjd.source_id
left join surveillance.radarcomponent_view surveillance_radarcomponent_view_srhjlq on master_join_ysdqjd.target_id = surveillance_radarcomponent_view_srhjlq.id
left join master_join master_join_kycffb on surveillance.radarsystem_ts.id = master_join_kycffb.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_ewkcfh on master_join_kycffb.target_id = organisation_organisationauthority_pt_ewkcfh.id
left join master_join master_join_tocfcm on surveillance.radarsystem_ts.id = master_join_tocfcm.source_id
left join airport_heliport.runway_pt airport_heliport_runway_pt_wlitpy on master_join_tocfcm.target_id = airport_heliport_runway_pt_wlitpy.id
left join master_join master_join_bmtpnl on surveillance.radarsystem_ts.id = master_join_bmtpnl.source_id
left join notes.note_view notes_note_view_pqpkmg on master_join_bmtpnl.target_id = notes_note_view_pqpkmg.id
where surveillance.radarsystem.feature_status = 'APPROVED'
  and surveillance.radarsystem_ts.feature_status = 'APPROVED'
group by
    surveillance.radarsystem.id,
    surveillance.radarsystem_ts.id,
    surveillance.radarsystem_tsp.id,
    surveillance.radarsystem.identifier,
    surveillance.radarsystem_ts.interpretation,
    surveillance.radarsystem_ts.sequence_number,
    surveillance.radarsystem_ts.correction_number,
    surveillance.radarsystem_ts.valid_time_begin,
    surveillance.radarsystem_ts.valid_time_end,
    surveillance.radarsystem_ts.feature_lifetime_begin,
    surveillance.radarsystem_ts.feature_lifetime_end,
    surveillance.radarsystem_ts.type_value,
    surveillance.radarsystem_ts.type_nilreason,
    surveillance.radarsystem_ts.model_value,
    surveillance.radarsystem_ts.model_nilreason,
    surveillance.radarsystem_ts.generalterrainmonitor_value,
    surveillance.radarsystem_ts.generalterrainmonitor_nilreason,
    surveillance.radarsystem_ts.broadcastidentifier_value,
    surveillance.radarsystem_ts.broadcastidentifier_nilreason,
    airport_heliport_airportheliport_pt_xhcwrh.title,
    airport_heliport_airportheliport_pt_xhcwrh.nilreason[1],
    airport_heliport_airportheliport_pt_xhcwrh.href,
    geometry_elevatedpoint_view_djokkr.geom,
    geometry_elevatedpoint_view_djokkr.elevation,
    geometry_elevatedpoint_view_djokkr.geoidUndulation,
    geometry_elevatedpoint_view_djokkr.verticalDatum,
    geometry_elevatedpoint_view_djokkr.verticalAccuracy,
    geometry_elevatedpoint_view_djokkr.horizontalAccuracy
order by radarsystem.identifier, radarsystem_ts.sequence_number, radarsystem_ts.correction_number DESC;
create index on surveillance.radarsystem_view (id);
-- RadioCommunicationChannelTimeSliceType
-- ['service.radiocommunicationoperationalstatus_view', 'geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists service.radiocommunicationchannel_view cascade;
create materialized view service.radiocommunicationchannel_view as
select distinct on (radiocommunicationchannel.identifier,radiocommunicationchannel_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.radiocommunicationchannel.id,
    service.radiocommunicationchannel_ts.id as ts_id,
    service.radiocommunicationchannel_tsp.id as tsp_id,
    service.radiocommunicationchannel.identifier,
    service.radiocommunicationchannel_ts.interpretation,
    service.radiocommunicationchannel_ts.sequence_number,
    service.radiocommunicationchannel_ts.correction_number,
    service.radiocommunicationchannel_ts.valid_time_begin,
    service.radiocommunicationchannel_ts.valid_time_end,
    service.radiocommunicationchannel_ts.feature_lifetime_begin,
    service.radiocommunicationchannel_ts.feature_lifetime_end,
    coalesce(cast(service.radiocommunicationchannel_ts.mode_value as varchar), '(' || service.radiocommunicationchannel_ts.mode_nilreason || ')') as mode,
    coalesce(cast(service.radiocommunicationchannel_ts.rank_value as varchar), '(' || service.radiocommunicationchannel_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.radiocommunicationchannel_ts.channel_value as varchar), '(' || service.radiocommunicationchannel_ts.channel_nilreason || ')') as channel,
    coalesce(cast(service.radiocommunicationchannel_ts.logon_value as varchar), '(' || service.radiocommunicationchannel_ts.logon_nilreason || ')') as logon,
    coalesce(cast(service.radiocommunicationchannel_ts.emissiontype_value as varchar), '(' || service.radiocommunicationchannel_ts.emissiontype_nilreason || ')') as emissiontype,
    coalesce(cast(service.radiocommunicationchannel_ts.selectivecall_value as varchar), '(' || service.radiocommunicationchannel_ts.selectivecall_nilreason || ')') as selectivecall,
    coalesce(cast(service.radiocommunicationchannel_ts.flightchecked_value as varchar), '(' || service.radiocommunicationchannel_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(service.radiocommunicationchannel_ts.trafficdirection_value as varchar), '(' || service.radiocommunicationchannel_ts.trafficdirection_nilreason || ')') as trafficdirection,
    coalesce(cast(service.radiocommunicationchannel_ts.frequencytransmission_value as varchar) || ' ' || service.radiocommunicationchannel_ts.frequencytransmission_uom, '(' || service.radiocommunicationchannel_ts.frequencytransmission_nilreason || ')') as frequencytransmission,
    coalesce(cast(service.radiocommunicationchannel_ts.frequencyreception_value as varchar) || ' ' || service.radiocommunicationchannel_ts.frequencyreception_uom, '(' || service.radiocommunicationchannel_ts.frequencyreception_nilreason || ')') as frequencyreception,
    ST_Collect(DISTINCT geometry_elevatedpoint_view_pqwwfa.geom) AS location_geom,
    jsonb_agg(service_radiocommunicationoperationalstatus_view_xtutbo.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_zozvgo.*) AS annotation
from service.radiocommunicationchannel 
inner join master_join mj2 on service.radiocommunicationchannel.id = mj2.source_id
inner join service.radiocommunicationchannel_tsp on mj2.target_id = service.radiocommunicationchannel_tsp.id
inner join service.radiocommunicationchannel_ts on service.radiocommunicationchannel_tsp.radiocommunicationchanneltimeslice_id = service.radiocommunicationchannel_ts.id
left join master_join master_join_xhakhu on service.radiocommunicationchannel_ts.id = master_join_xhakhu.source_id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_pqwwfa on master_join_xhakhu.target_id = geometry_elevatedpoint_view_pqwwfa.id
left join master_join master_join_biyiqq on service.radiocommunicationchannel_ts.id = master_join_biyiqq.source_id
left join service.radiocommunicationoperationalstatus_view service_radiocommunicationoperationalstatus_view_xtutbo on master_join_biyiqq.target_id = service_radiocommunicationoperationalstatus_view_xtutbo.id
left join master_join master_join_xpdjmb on service.radiocommunicationchannel_ts.id = master_join_xpdjmb.source_id
left join notes.note_view notes_note_view_zozvgo on master_join_xpdjmb.target_id = notes_note_view_zozvgo.id
where service.radiocommunicationchannel.feature_status = 'APPROVED'
  and service.radiocommunicationchannel_ts.feature_status = 'APPROVED'
group by
    service.radiocommunicationchannel.id,
    service.radiocommunicationchannel_ts.id,
    service.radiocommunicationchannel_tsp.id,
    service.radiocommunicationchannel.identifier,
    service.radiocommunicationchannel_ts.interpretation,
    service.radiocommunicationchannel_ts.sequence_number,
    service.radiocommunicationchannel_ts.correction_number,
    service.radiocommunicationchannel_ts.valid_time_begin,
    service.radiocommunicationchannel_ts.valid_time_end,
    service.radiocommunicationchannel_ts.feature_lifetime_begin,
    service.radiocommunicationchannel_ts.feature_lifetime_end,
    service.radiocommunicationchannel_ts.mode_value,
    service.radiocommunicationchannel_ts.mode_nilreason,
    service.radiocommunicationchannel_ts.rank_value,
    service.radiocommunicationchannel_ts.rank_nilreason,
    service.radiocommunicationchannel_ts.channel_value,
    service.radiocommunicationchannel_ts.channel_nilreason,
    service.radiocommunicationchannel_ts.logon_value,
    service.radiocommunicationchannel_ts.logon_nilreason,
    service.radiocommunicationchannel_ts.emissiontype_value,
    service.radiocommunicationchannel_ts.emissiontype_nilreason,
    service.radiocommunicationchannel_ts.selectivecall_value,
    service.radiocommunicationchannel_ts.selectivecall_nilreason,
    service.radiocommunicationchannel_ts.flightchecked_value,
    service.radiocommunicationchannel_ts.flightchecked_nilreason,
    service.radiocommunicationchannel_ts.trafficdirection_value,
    service.radiocommunicationchannel_ts.trafficdirection_nilreason,
    service.radiocommunicationchannel_ts.frequencytransmission_value,
    service.radiocommunicationchannel_ts.frequencytransmission_uom,
    service.radiocommunicationchannel_ts.frequencytransmission_nilreason,
    service.radiocommunicationchannel_ts.frequencyreception_value,
    service.radiocommunicationchannel_ts.frequencyreception_uom,
    service.radiocommunicationchannel_ts.frequencyreception_nilreason
order by radiocommunicationchannel.identifier, radiocommunicationchannel_ts.sequence_number, radiocommunicationchannel_ts.correction_number DESC;
create index on service.radiocommunicationchannel_view (id);
-- RadioFrequencyAreaTimeSliceType
-- ['geometry.surface_view', 'shared.circlesector_view', 'notes.note_view']
drop materialized view if exists shared.radiofrequencyarea_view cascade;
create materialized view shared.radiofrequencyarea_view as
select distinct on (radiofrequencyarea.identifier,radiofrequencyarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.radiofrequencyarea.id,
    shared.radiofrequencyarea_ts.id as ts_id,
    shared.radiofrequencyarea_tsp.id as tsp_id,
    shared.radiofrequencyarea.identifier,
    shared.radiofrequencyarea_ts.interpretation,
    shared.radiofrequencyarea_ts.sequence_number,
    shared.radiofrequencyarea_ts.correction_number,
    shared.radiofrequencyarea_ts.valid_time_begin,
    shared.radiofrequencyarea_ts.valid_time_end,
    shared.radiofrequencyarea_ts.feature_lifetime_begin,
    shared.radiofrequencyarea_ts.feature_lifetime_end,
    coalesce(cast(shared.radiofrequencyarea_ts.type_value as varchar), '(' || shared.radiofrequencyarea_ts.type_nilreason || ')') as type,
    coalesce(cast(shared.radiofrequencyarea_ts.anglescallop_value as varchar), '(' || shared.radiofrequencyarea_ts.anglescallop_nilreason || ')') as anglescallop,
    coalesce(cast(shared.radiofrequencyarea_ts.signaltype_value as varchar), '(' || shared.radiofrequencyarea_ts.signaltype_nilreason || ')') as signaltype,
    coalesce(cast(service_radiocommunicationchannel_pt_oysqtg.title as varchar), '(' || service_radiocommunicationchannel_pt_oysqtg.nilreason[1] || ')') AS equipmentfrequency,
    service_radiocommunicationchannel_pt_oysqtg.href AS equipmentfrequency_href,
    coalesce(cast(navaids_points_specialnavigationstation_pt_zvmwgh.title as varchar), '(' || navaids_points_specialnavigationstation_pt_zvmwgh.nilreason[1] || ')') AS equipmentspecialnavigationstation,
    navaids_points_specialnavigationstation_pt_zvmwgh.href AS equipmentspecialnavigationstation_href,
    coalesce(cast(surveillance_precisionapproachradar_pt_msudff.title as varchar), '(' || surveillance_precisionapproachradar_pt_msudff.nilreason[1] || ')') AS equipmentprecisionapproachradar,
    surveillance_precisionapproachradar_pt_msudff.href AS equipmentprecisionapproachradar_href,
    coalesce(cast(surveillance_secondarysurveillanceradar_pt_ghtdyy.title as varchar), '(' || surveillance_secondarysurveillanceradar_pt_ghtdyy.nilreason[1] || ')') AS equipmentradar,
    surveillance_secondarysurveillanceradar_pt_ghtdyy.href AS equipmentradar_href,
    jsonb_agg(shared_circlesector_view_urhzjo.id) AS sector,
    ST_Collect(DISTINCT geometry_surface_view_pyjobg.geom) AS extent_geom,
    jsonb_agg(DISTINCT notes_note_view_gwlmuo.*) AS annotation
from shared.radiofrequencyarea 
inner join master_join mj2 on shared.radiofrequencyarea.id = mj2.source_id
inner join shared.radiofrequencyarea_tsp on mj2.target_id = shared.radiofrequencyarea_tsp.id
inner join shared.radiofrequencyarea_ts on shared.radiofrequencyarea_tsp.radiofrequencyareatimeslice_id = shared.radiofrequencyarea_ts.id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_oysqtg on shared.radiofrequencyarea_ts.equipment_frequency_id = service_radiocommunicationchannel_pt_oysqtg.id
left join navaids_points.specialnavigationstation_pt navaids_points_specialnavigationstation_pt_zvmwgh on shared.radiofrequencyarea_ts.equipment_specialnavigationstation_id = navaids_points_specialnavigationstation_pt_zvmwgh.id
left join surveillance.precisionapproachradar_pt surveillance_precisionapproachradar_pt_msudff on shared.radiofrequencyarea_ts.equipment_precisionapproachradar_id = surveillance_precisionapproachradar_pt_msudff.id
left join surveillance.secondarysurveillanceradar_pt surveillance_secondarysurveillanceradar_pt_ghtdyy on shared.radiofrequencyarea_ts.equipment_radar_id = surveillance_secondarysurveillanceradar_pt_ghtdyy.id
left join master_join master_join_trbsmy on shared.radiofrequencyarea_ts.id = master_join_trbsmy.source_id
left join shared.circlesector_view shared_circlesector_view_urhzjo on master_join_trbsmy.target_id = shared_circlesector_view_urhzjo.id
left join master_join master_join_vbkpwa on shared.radiofrequencyarea_ts.id = master_join_vbkpwa.source_id
left join geometry.surface_view geometry_surface_view_pyjobg on master_join_vbkpwa.target_id = geometry_surface_view_pyjobg.id
left join master_join master_join_yeabxe on shared.radiofrequencyarea_ts.id = master_join_yeabxe.source_id
left join notes.note_view notes_note_view_gwlmuo on master_join_yeabxe.target_id = notes_note_view_gwlmuo.id
where shared.radiofrequencyarea.feature_status = 'APPROVED'
  and shared.radiofrequencyarea_ts.feature_status = 'APPROVED'
group by
    shared.radiofrequencyarea.id,
    shared.radiofrequencyarea_ts.id,
    shared.radiofrequencyarea_tsp.id,
    shared.radiofrequencyarea.identifier,
    shared.radiofrequencyarea_ts.interpretation,
    shared.radiofrequencyarea_ts.sequence_number,
    shared.radiofrequencyarea_ts.correction_number,
    shared.radiofrequencyarea_ts.valid_time_begin,
    shared.radiofrequencyarea_ts.valid_time_end,
    shared.radiofrequencyarea_ts.feature_lifetime_begin,
    shared.radiofrequencyarea_ts.feature_lifetime_end,
    shared.radiofrequencyarea_ts.type_value,
    shared.radiofrequencyarea_ts.type_nilreason,
    shared.radiofrequencyarea_ts.anglescallop_value,
    shared.radiofrequencyarea_ts.anglescallop_nilreason,
    shared.radiofrequencyarea_ts.signaltype_value,
    shared.radiofrequencyarea_ts.signaltype_nilreason,
    service_radiocommunicationchannel_pt_oysqtg.title,
    service_radiocommunicationchannel_pt_oysqtg.nilreason[1],
    service_radiocommunicationchannel_pt_oysqtg.href,
    navaids_points_specialnavigationstation_pt_zvmwgh.title,
    navaids_points_specialnavigationstation_pt_zvmwgh.nilreason[1],
    navaids_points_specialnavigationstation_pt_zvmwgh.href,
    surveillance_precisionapproachradar_pt_msudff.title,
    surveillance_precisionapproachradar_pt_msudff.nilreason[1],
    surveillance_precisionapproachradar_pt_msudff.href,
    surveillance_secondarysurveillanceradar_pt_ghtdyy.title,
    surveillance_secondarysurveillanceradar_pt_ghtdyy.nilreason[1],
    surveillance_secondarysurveillanceradar_pt_ghtdyy.href
order by radiofrequencyarea.identifier, radiofrequencyarea_ts.sequence_number, radiofrequencyarea_ts.correction_number DESC;
create index on shared.radiofrequencyarea_view (id);
-- RoadTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.road_view cascade;
create materialized view airport_heliport.road_view as
select distinct on (road.identifier,road_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.road.id,
    airport_heliport.road_ts.id as ts_id,
    airport_heliport.road_tsp.id as tsp_id,
    airport_heliport.road.identifier,
    airport_heliport.road_ts.interpretation,
    airport_heliport.road_ts.sequence_number,
    airport_heliport.road_ts.correction_number,
    airport_heliport.road_ts.valid_time_begin,
    airport_heliport.road_ts.valid_time_end,
    airport_heliport.road_ts.feature_lifetime_begin,
    airport_heliport.road_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.road_ts.designator_value as varchar), '(' || airport_heliport.road_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.road_ts.status_value as varchar), '(' || airport_heliport.road_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.road_ts.type_value as varchar), '(' || airport_heliport.road_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.road_ts.abandoned_value as varchar), '(' || airport_heliport.road_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport_airportheliport_pt_ngfcsf.title as varchar), '(' || airport_heliport_airportheliport_pt_ngfcsf.nilreason[1] || ')') AS associatedairport,
    airport_heliport_airportheliport_pt_ngfcsf.href AS associatedairport_href,
    airport_heliport_surfacecharacteristics_view_chmhpb.id AS surfaceproperties,
    geometry_elevatedsurface_view_vvuirr.geom AS surfaceextent_geom,
    geometry_elevatedsurface_view_vvuirr.elevation AS surfaceextent_elevation,
    geometry_elevatedsurface_view_vvuirr.geoidUndulation AS surfaceextent_geoidundulation,
    geometry_elevatedsurface_view_vvuirr.verticalDatum AS surfaceextent_verticaldatum,
    geometry_elevatedsurface_view_vvuirr.verticalAccuracy AS surfaceextent_verticalaccuracy,
    geometry_elevatedsurface_view_vvuirr.horizontalAccuracy AS surfaceextent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_aircraftstand_pt_vxawpo.id,
    'title', coalesce(cast(airport_heliport_aircraftstand_pt_vxawpo.title AS varchar), '(' || airport_heliport_aircraftstand_pt_vxawpo.nilreason[1] || ')'),
    'href', airport_heliport_aircraftstand_pt_vxawpo.href)) AS accessiblestand,
    jsonb_agg(DISTINCT notes_note_view_yqdoto.*) AS annotation
from airport_heliport.road 
inner join master_join mj2 on airport_heliport.road.id = mj2.source_id
inner join airport_heliport.road_tsp on mj2.target_id = airport_heliport.road_tsp.id
inner join airport_heliport.road_ts on airport_heliport.road_tsp.roadtimeslice_id = airport_heliport.road_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ngfcsf on airport_heliport.road_ts.associatedairport_id = airport_heliport_airportheliport_pt_ngfcsf.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_chmhpb on airport_heliport.road_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_chmhpb.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_vvuirr on airport_heliport.road_ts.surfaceextent_id = geometry_elevatedsurface_view_vvuirr.id
left join master_join master_join_dpfhtz on airport_heliport.road_ts.id = master_join_dpfhtz.source_id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_vxawpo on master_join_dpfhtz.target_id = airport_heliport_aircraftstand_pt_vxawpo.id
left join master_join master_join_hsaqgt on airport_heliport.road_ts.id = master_join_hsaqgt.source_id
left join notes.note_view notes_note_view_yqdoto on master_join_hsaqgt.target_id = notes_note_view_yqdoto.id
where airport_heliport.road.feature_status = 'APPROVED'
  and airport_heliport.road_ts.feature_status = 'APPROVED'
group by
    airport_heliport.road.id,
    airport_heliport.road_ts.id,
    airport_heliport.road_tsp.id,
    airport_heliport.road.identifier,
    airport_heliport.road_ts.interpretation,
    airport_heliport.road_ts.sequence_number,
    airport_heliport.road_ts.correction_number,
    airport_heliport.road_ts.valid_time_begin,
    airport_heliport.road_ts.valid_time_end,
    airport_heliport.road_ts.feature_lifetime_begin,
    airport_heliport.road_ts.feature_lifetime_end,
    airport_heliport.road_ts.designator_value,
    airport_heliport.road_ts.designator_nilreason,
    airport_heliport.road_ts.status_value,
    airport_heliport.road_ts.status_nilreason,
    airport_heliport.road_ts.type_value,
    airport_heliport.road_ts.type_nilreason,
    airport_heliport.road_ts.abandoned_value,
    airport_heliport.road_ts.abandoned_nilreason,
    airport_heliport_airportheliport_pt_ngfcsf.title,
    airport_heliport_airportheliport_pt_ngfcsf.nilreason[1],
    airport_heliport_airportheliport_pt_ngfcsf.href,
    airport_heliport_surfacecharacteristics_view_chmhpb.id,
    geometry_elevatedsurface_view_vvuirr.geom,
    geometry_elevatedsurface_view_vvuirr.elevation,
    geometry_elevatedsurface_view_vvuirr.geoidUndulation,
    geometry_elevatedsurface_view_vvuirr.verticalDatum,
    geometry_elevatedsurface_view_vvuirr.verticalAccuracy,
    geometry_elevatedsurface_view_vvuirr.horizontalAccuracy
order by road.identifier, road_ts.sequence_number, road_ts.correction_number DESC;
create index on airport_heliport.road_view (id);
-- RouteDMETimeSliceType
-- ['routes.routeportion_view', 'notes.note_view']
drop materialized view if exists routes.routedme_view cascade;
create materialized view routes.routedme_view as
select distinct on (routedme.identifier,routedme_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.routedme.id,
    routes.routedme_ts.id as ts_id,
    routes.routedme_tsp.id as tsp_id,
    routes.routedme.identifier,
    routes.routedme_ts.interpretation,
    routes.routedme_ts.sequence_number,
    routes.routedme_ts.correction_number,
    routes.routedme_ts.valid_time_begin,
    routes.routedme_ts.valid_time_end,
    routes.routedme_ts.feature_lifetime_begin,
    routes.routedme_ts.feature_lifetime_end,
    coalesce(cast(routes.routedme_ts.criticaldme_value as varchar), '(' || routes.routedme_ts.criticaldme_nilreason || ')') as criticaldme,
    coalesce(cast(routes.routedme_ts.satisfactory_value as varchar), '(' || routes.routedme_ts.satisfactory_nilreason || ')') as satisfactory,
    coalesce(cast(navaids_points_dme_pt_svqolu.title as varchar), '(' || navaids_points_dme_pt_svqolu.nilreason[1] || ')') AS referenceddme,
    navaids_points_dme_pt_svqolu.href AS referenceddme_href,
    routes_routeportion_view_jygpju.id AS applicablerouteportion,
    jsonb_agg(DISTINCT notes_note_view_nitrpj.*) AS annotation
from routes.routedme 
inner join master_join mj2 on routes.routedme.id = mj2.source_id
inner join routes.routedme_tsp on mj2.target_id = routes.routedme_tsp.id
inner join routes.routedme_ts on routes.routedme_tsp.routedmetimeslice_id = routes.routedme_ts.id
left join navaids_points.dme_pt navaids_points_dme_pt_svqolu on routes.routedme_ts.referenceddme_id = navaids_points_dme_pt_svqolu.id
left join routes.routeportion_view routes_routeportion_view_jygpju on routes.routedme_ts.applicablerouteportion_id = routes_routeportion_view_jygpju.id
left join master_join master_join_gfztkn on routes.routedme_ts.id = master_join_gfztkn.source_id
left join notes.note_view notes_note_view_nitrpj on master_join_gfztkn.target_id = notes_note_view_nitrpj.id
where routes.routedme.feature_status = 'APPROVED'
  and routes.routedme_ts.feature_status = 'APPROVED'
group by
    routes.routedme.id,
    routes.routedme_ts.id,
    routes.routedme_tsp.id,
    routes.routedme.identifier,
    routes.routedme_ts.interpretation,
    routes.routedme_ts.sequence_number,
    routes.routedme_ts.correction_number,
    routes.routedme_ts.valid_time_begin,
    routes.routedme_ts.valid_time_end,
    routes.routedme_ts.feature_lifetime_begin,
    routes.routedme_ts.feature_lifetime_end,
    routes.routedme_ts.criticaldme_value,
    routes.routedme_ts.criticaldme_nilreason,
    routes.routedme_ts.satisfactory_value,
    routes.routedme_ts.satisfactory_nilreason,
    navaids_points_dme_pt_svqolu.title,
    navaids_points_dme_pt_svqolu.nilreason[1],
    navaids_points_dme_pt_svqolu.href,
    routes_routeportion_view_jygpju.id
order by routedme.identifier, routedme_ts.sequence_number, routedme_ts.correction_number DESC;
create index on routes.routedme_view (id);
-- RouteSegmentTimeSliceType
-- ['navaids_points.enroutesegmentpoint_view', 'routes.routeavailability_view', 'geometry.curve_view', 'notes.note_view', 'shared.obstacleassessmentarea_view']
drop materialized view if exists routes.routesegment_view cascade;
create materialized view routes.routesegment_view as
select distinct on (routesegment.identifier,routesegment_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.routesegment.id,
    routes.routesegment_ts.id as ts_id,
    routes.routesegment_tsp.id as tsp_id,
    routes.routesegment.identifier,
    routes.routesegment_ts.interpretation,
    routes.routesegment_ts.sequence_number,
    routes.routesegment_ts.correction_number,
    routes.routesegment_ts.valid_time_begin,
    routes.routesegment_ts.valid_time_end,
    routes.routesegment_ts.feature_lifetime_begin,
    routes.routesegment_ts.feature_lifetime_end,
    coalesce(cast(routes.routesegment_ts.level_value as varchar), '(' || routes.routesegment_ts.level_nilreason || ')') as level,
    coalesce(cast(routes.routesegment_ts.upperlimitreference_value as varchar), '(' || routes.routesegment_ts.upperlimitreference_nilreason || ')') as upperlimitreference,
    coalesce(cast(routes.routesegment_ts.lowerlimitreference_value as varchar), '(' || routes.routesegment_ts.lowerlimitreference_nilreason || ')') as lowerlimitreference,
    coalesce(cast(routes.routesegment_ts.pathtype_value as varchar), '(' || routes.routesegment_ts.pathtype_nilreason || ')') as pathtype,
    coalesce(cast(routes.routesegment_ts.truetrack_value as varchar), '(' || routes.routesegment_ts.truetrack_nilreason || ')') as truetrack,
    coalesce(cast(routes.routesegment_ts.magnetictrack_value as varchar), '(' || routes.routesegment_ts.magnetictrack_nilreason || ')') as magnetictrack,
    coalesce(cast(routes.routesegment_ts.reversetruetrack_value as varchar), '(' || routes.routesegment_ts.reversetruetrack_nilreason || ')') as reversetruetrack,
    coalesce(cast(routes.routesegment_ts.reversemagnetictrack_value as varchar), '(' || routes.routesegment_ts.reversemagnetictrack_nilreason || ')') as reversemagnetictrack,
    coalesce(cast(routes.routesegment_ts.turndirection_value as varchar), '(' || routes.routesegment_ts.turndirection_nilreason || ')') as turndirection,
    coalesce(cast(routes.routesegment_ts.signalgap_value as varchar), '(' || routes.routesegment_ts.signalgap_nilreason || ')') as signalgap,
    coalesce(cast(routes.routesegment_ts.minimumcrossingatendreference_value as varchar), '(' || routes.routesegment_ts.minimumcrossingatendreference_nilreason || ')') as minimumcrossingatendreference,
    coalesce(cast(routes.routesegment_ts.maximumcrossingatendreference_value as varchar), '(' || routes.routesegment_ts.maximumcrossingatendreference_nilreason || ')') as maximumcrossingatendreference,
    coalesce(cast(routes.routesegment_ts.navigationtype_value as varchar), '(' || routes.routesegment_ts.navigationtype_nilreason || ')') as navigationtype,
    coalesce(cast(routes.routesegment_ts.requirednavigationperformance_value as varchar), '(' || routes.routesegment_ts.requirednavigationperformance_nilreason || ')') as requirednavigationperformance,
    coalesce(cast(routes.routesegment_ts.designatorsuffix_value as varchar), '(' || routes.routesegment_ts.designatorsuffix_nilreason || ')') as designatorsuffix,
    coalesce(cast(routes.routesegment_ts.upperlimit_value as varchar) || ' ' || routes.routesegment_ts.upperlimit_uom, '(' || routes.routesegment_ts.upperlimit_nilreason || ')') as upperlimit,
    coalesce(cast(routes.routesegment_ts.lowerlimit_value as varchar) || ' ' || routes.routesegment_ts.lowerlimit_uom, '(' || routes.routesegment_ts.lowerlimit_nilreason || ')') as lowerlimit,
    coalesce(cast(routes.routesegment_ts.minimumobstacleclearancealtitude_value as varchar) || ' ' || routes.routesegment_ts.minimumobstacleclearancealtitude_uom, '(' || routes.routesegment_ts.minimumobstacleclearancealtitude_nilreason || ')') as minimumobstacleclearancealtitude,
    coalesce(cast(routes.routesegment_ts.length_value as varchar) || ' ' || routes.routesegment_ts.length_uom, '(' || routes.routesegment_ts.length_nilreason || ')') as length,
    coalesce(cast(routes.routesegment_ts.widthleft_value as varchar) || ' ' || routes.routesegment_ts.widthleft_uom, '(' || routes.routesegment_ts.widthleft_nilreason || ')') as widthleft,
    coalesce(cast(routes.routesegment_ts.widthright_value as varchar) || ' ' || routes.routesegment_ts.widthright_uom, '(' || routes.routesegment_ts.widthright_nilreason || ')') as widthright,
    coalesce(cast(routes.routesegment_ts.minimumenroutealtitude_value as varchar) || ' ' || routes.routesegment_ts.minimumenroutealtitude_uom, '(' || routes.routesegment_ts.minimumenroutealtitude_nilreason || ')') as minimumenroutealtitude,
    coalesce(cast(routes.routesegment_ts.minimumcrossingatend_value as varchar) || ' ' || routes.routesegment_ts.minimumcrossingatend_uom, '(' || routes.routesegment_ts.minimumcrossingatend_nilreason || ')') as minimumcrossingatend,
    coalesce(cast(routes.routesegment_ts.maximumcrossingatend_value as varchar) || ' ' || routes.routesegment_ts.maximumcrossingatend_uom, '(' || routes.routesegment_ts.maximumcrossingatend_nilreason || ')') as maximumcrossingatend,
    navaids_points_enroutesegmentpoint_view_qmpxnu.id AS start,
    navaids_points_enroutesegmentpoint_view_uszuiv.id AS end,
    coalesce(cast(routes_route_pt_ebtdcl.title as varchar), '(' || routes_route_pt_ebtdcl.nilreason[1] || ')') AS routeformed,
    routes_route_pt_ebtdcl.href AS routeformed_href,
    shared_obstacleassessmentarea_view_hpaqwc.id AS evaluationarea,
    geometry_curve_view_ywlwlq.geom AS curveextent_geom,
    geometry_curve_view_ywlwlq.horizontalAccuracy as curveextent_horizontalaccuracy,
    jsonb_agg(routes_routeavailability_view_llwkaz.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_kgbtcu.*) AS annotation
from routes.routesegment 
inner join master_join mj2 on routes.routesegment.id = mj2.source_id
inner join routes.routesegment_tsp on mj2.target_id = routes.routesegment_tsp.id
inner join routes.routesegment_ts on routes.routesegment_tsp.routesegmenttimeslice_id = routes.routesegment_ts.id
left join navaids_points.enroutesegmentpoint_view navaids_points_enroutesegmentpoint_view_qmpxnu on routes.routesegment_ts.start_id = navaids_points_enroutesegmentpoint_view_qmpxnu.id
left join routes.route_pt routes_route_pt_ebtdcl on routes.routesegment_ts.routeformed_id = routes_route_pt_ebtdcl.id
left join shared.obstacleassessmentarea_view shared_obstacleassessmentarea_view_hpaqwc on routes.routesegment_ts.evaluationarea_id = shared_obstacleassessmentarea_view_hpaqwc.id
left join geometry.curve_view geometry_curve_view_ywlwlq on routes.routesegment_ts.curveextent_id = geometry_curve_view_ywlwlq.id
left join navaids_points.enroutesegmentpoint_view navaids_points_enroutesegmentpoint_view_uszuiv on routes.routesegment_ts.end_id = navaids_points_enroutesegmentpoint_view_uszuiv.id
left join master_join master_join_dnmunk on routes.routesegment_ts.id = master_join_dnmunk.source_id
left join routes.routeavailability_view routes_routeavailability_view_llwkaz on master_join_dnmunk.target_id = routes_routeavailability_view_llwkaz.id
left join master_join master_join_ymlqis on routes.routesegment_ts.id = master_join_ymlqis.source_id
left join notes.note_view notes_note_view_kgbtcu on master_join_ymlqis.target_id = notes_note_view_kgbtcu.id
where routes.routesegment.feature_status = 'APPROVED'
  and routes.routesegment_ts.feature_status = 'APPROVED'
group by
    routes.routesegment.id,
    routes.routesegment_ts.id,
    routes.routesegment_tsp.id,
    routes.routesegment.identifier,
    routes.routesegment_ts.interpretation,
    routes.routesegment_ts.sequence_number,
    routes.routesegment_ts.correction_number,
    routes.routesegment_ts.valid_time_begin,
    routes.routesegment_ts.valid_time_end,
    routes.routesegment_ts.feature_lifetime_begin,
    routes.routesegment_ts.feature_lifetime_end,
    routes.routesegment_ts.level_value,
    routes.routesegment_ts.level_nilreason,
    routes.routesegment_ts.upperlimitreference_value,
    routes.routesegment_ts.upperlimitreference_nilreason,
    routes.routesegment_ts.lowerlimitreference_value,
    routes.routesegment_ts.lowerlimitreference_nilreason,
    routes.routesegment_ts.pathtype_value,
    routes.routesegment_ts.pathtype_nilreason,
    routes.routesegment_ts.truetrack_value,
    routes.routesegment_ts.truetrack_nilreason,
    routes.routesegment_ts.magnetictrack_value,
    routes.routesegment_ts.magnetictrack_nilreason,
    routes.routesegment_ts.reversetruetrack_value,
    routes.routesegment_ts.reversetruetrack_nilreason,
    routes.routesegment_ts.reversemagnetictrack_value,
    routes.routesegment_ts.reversemagnetictrack_nilreason,
    routes.routesegment_ts.turndirection_value,
    routes.routesegment_ts.turndirection_nilreason,
    routes.routesegment_ts.signalgap_value,
    routes.routesegment_ts.signalgap_nilreason,
    routes.routesegment_ts.minimumcrossingatendreference_value,
    routes.routesegment_ts.minimumcrossingatendreference_nilreason,
    routes.routesegment_ts.maximumcrossingatendreference_value,
    routes.routesegment_ts.maximumcrossingatendreference_nilreason,
    routes.routesegment_ts.navigationtype_value,
    routes.routesegment_ts.navigationtype_nilreason,
    routes.routesegment_ts.requirednavigationperformance_value,
    routes.routesegment_ts.requirednavigationperformance_nilreason,
    routes.routesegment_ts.designatorsuffix_value,
    routes.routesegment_ts.designatorsuffix_nilreason,
    routes.routesegment_ts.upperlimit_value,
    routes.routesegment_ts.upperlimit_uom,
    routes.routesegment_ts.upperlimit_nilreason,
    routes.routesegment_ts.lowerlimit_value,
    routes.routesegment_ts.lowerlimit_uom,
    routes.routesegment_ts.lowerlimit_nilreason,
    routes.routesegment_ts.minimumobstacleclearancealtitude_value,
    routes.routesegment_ts.minimumobstacleclearancealtitude_uom,
    routes.routesegment_ts.minimumobstacleclearancealtitude_nilreason,
    routes.routesegment_ts.length_value,
    routes.routesegment_ts.length_uom,
    routes.routesegment_ts.length_nilreason,
    routes.routesegment_ts.widthleft_value,
    routes.routesegment_ts.widthleft_uom,
    routes.routesegment_ts.widthleft_nilreason,
    routes.routesegment_ts.widthright_value,
    routes.routesegment_ts.widthright_uom,
    routes.routesegment_ts.widthright_nilreason,
    routes.routesegment_ts.minimumenroutealtitude_value,
    routes.routesegment_ts.minimumenroutealtitude_uom,
    routes.routesegment_ts.minimumenroutealtitude_nilreason,
    routes.routesegment_ts.minimumcrossingatend_value,
    routes.routesegment_ts.minimumcrossingatend_uom,
    routes.routesegment_ts.minimumcrossingatend_nilreason,
    routes.routesegment_ts.maximumcrossingatend_value,
    routes.routesegment_ts.maximumcrossingatend_uom,
    routes.routesegment_ts.maximumcrossingatend_nilreason,
    navaids_points_enroutesegmentpoint_view_qmpxnu.id,
    routes_route_pt_ebtdcl.title,
    routes_route_pt_ebtdcl.nilreason[1],
    routes_route_pt_ebtdcl.href,
    shared_obstacleassessmentarea_view_hpaqwc.id,
    geometry_curve_view_ywlwlq.geom,
    geometry_curve_view_ywlwlq.horizontalAccuracy,
    navaids_points_enroutesegmentpoint_view_uszuiv.id
order by routesegment.identifier, routesegment_ts.sequence_number, routesegment_ts.correction_number DESC;
create index on routes.routesegment_view (id);
-- RouteTimeSliceType
-- ['notes.note_view']
drop materialized view if exists routes.route_view cascade;
create materialized view routes.route_view as
select distinct on (route.identifier,route_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    routes.route.id,
    routes.route_ts.id as ts_id,
    routes.route_tsp.id as tsp_id,
    routes.route.identifier,
    routes.route_ts.interpretation,
    routes.route_ts.sequence_number,
    routes.route_ts.correction_number,
    routes.route_ts.valid_time_begin,
    routes.route_ts.valid_time_end,
    routes.route_ts.feature_lifetime_begin,
    routes.route_ts.feature_lifetime_end,
    coalesce(cast(routes.route_ts.designatorprefix_value as varchar), '(' || routes.route_ts.designatorprefix_nilreason || ')') as designatorprefix,
    coalesce(cast(routes.route_ts.designatorsecondletter_value as varchar), '(' || routes.route_ts.designatorsecondletter_nilreason || ')') as designatorsecondletter,
    coalesce(cast(routes.route_ts.designatornumber_value as varchar), '(' || routes.route_ts.designatornumber_nilreason || ')') as designatornumber,
    coalesce(cast(routes.route_ts.multipleidentifier_value as varchar), '(' || routes.route_ts.multipleidentifier_nilreason || ')') as multipleidentifier,
    coalesce(cast(routes.route_ts.locationdesignator_value as varchar), '(' || routes.route_ts.locationdesignator_nilreason || ')') as locationdesignator,
    coalesce(cast(routes.route_ts.name_value as varchar), '(' || routes.route_ts.name_nilreason || ')') as name,
    coalesce(cast(routes.route_ts.type_value as varchar), '(' || routes.route_ts.type_nilreason || ')') as type,
    coalesce(cast(routes.route_ts.flightrule_value as varchar), '(' || routes.route_ts.flightrule_nilreason || ')') as flightrule,
    coalesce(cast(routes.route_ts.internationaluse_value as varchar), '(' || routes.route_ts.internationaluse_nilreason || ')') as internationaluse,
    coalesce(cast(routes.route_ts.militaryuse_value as varchar), '(' || routes.route_ts.militaryuse_nilreason || ')') as militaryuse,
    coalesce(cast(routes.route_ts.militarytrainingtype_value as varchar), '(' || routes.route_ts.militarytrainingtype_nilreason || ')') as militarytrainingtype,
    coalesce(cast(organisation_organisationauthority_pt_niubxu.title as varchar), '(' || organisation_organisationauthority_pt_niubxu.nilreason[1] || ')') AS userorganisation,
    organisation_organisationauthority_pt_niubxu.href AS userorganisation_href,
    jsonb_agg(DISTINCT notes_note_view_qbbwox.*) AS annotation
from routes.route 
inner join master_join mj2 on routes.route.id = mj2.source_id
inner join routes.route_tsp on mj2.target_id = routes.route_tsp.id
inner join routes.route_ts on routes.route_tsp.routetimeslice_id = routes.route_ts.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_niubxu on routes.route_ts.userorganisation_id = organisation_organisationauthority_pt_niubxu.id
left join master_join master_join_kxjkzf on routes.route_ts.id = master_join_kxjkzf.source_id
left join notes.note_view notes_note_view_qbbwox on master_join_kxjkzf.target_id = notes_note_view_qbbwox.id
where routes.route.feature_status = 'APPROVED'
  and routes.route_ts.feature_status = 'APPROVED'
group by
    routes.route.id,
    routes.route_ts.id,
    routes.route_tsp.id,
    routes.route.identifier,
    routes.route_ts.interpretation,
    routes.route_ts.sequence_number,
    routes.route_ts.correction_number,
    routes.route_ts.valid_time_begin,
    routes.route_ts.valid_time_end,
    routes.route_ts.feature_lifetime_begin,
    routes.route_ts.feature_lifetime_end,
    routes.route_ts.designatorprefix_value,
    routes.route_ts.designatorprefix_nilreason,
    routes.route_ts.designatorsecondletter_value,
    routes.route_ts.designatorsecondletter_nilreason,
    routes.route_ts.designatornumber_value,
    routes.route_ts.designatornumber_nilreason,
    routes.route_ts.multipleidentifier_value,
    routes.route_ts.multipleidentifier_nilreason,
    routes.route_ts.locationdesignator_value,
    routes.route_ts.locationdesignator_nilreason,
    routes.route_ts.name_value,
    routes.route_ts.name_nilreason,
    routes.route_ts.type_value,
    routes.route_ts.type_nilreason,
    routes.route_ts.flightrule_value,
    routes.route_ts.flightrule_nilreason,
    routes.route_ts.internationaluse_value,
    routes.route_ts.internationaluse_nilreason,
    routes.route_ts.militaryuse_value,
    routes.route_ts.militaryuse_nilreason,
    routes.route_ts.militarytrainingtype_value,
    routes.route_ts.militarytrainingtype_nilreason,
    organisation_organisationauthority_pt_niubxu.title,
    organisation_organisationauthority_pt_niubxu.nilreason[1],
    organisation_organisationauthority_pt_niubxu.href
order by route.identifier, route_ts.sequence_number, route_ts.correction_number DESC;
create index on routes.route_view (id);
-- RulesProceduresTimeSliceType
-- ['notes.note_view']
drop materialized view if exists rules_procedures.rulesprocedures_view cascade;
create materialized view rules_procedures.rulesprocedures_view as
select distinct on (rulesprocedures.identifier,rulesprocedures_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    rules_procedures.rulesprocedures.id,
    rules_procedures.rulesprocedures_ts.id as ts_id,
    rules_procedures.rulesprocedures_tsp.id as tsp_id,
    rules_procedures.rulesprocedures.identifier,
    rules_procedures.rulesprocedures_ts.interpretation,
    rules_procedures.rulesprocedures_ts.sequence_number,
    rules_procedures.rulesprocedures_ts.correction_number,
    rules_procedures.rulesprocedures_ts.valid_time_begin,
    rules_procedures.rulesprocedures_ts.valid_time_end,
    rules_procedures.rulesprocedures_ts.feature_lifetime_begin,
    rules_procedures.rulesprocedures_ts.feature_lifetime_end,
    coalesce(cast(rules_procedures.rulesprocedures_ts.category_value as varchar), '(' || rules_procedures.rulesprocedures_ts.category_nilreason || ')') as category,
    coalesce(cast(rules_procedures.rulesprocedures_ts.title_value as varchar), '(' || rules_procedures.rulesprocedures_ts.title_nilreason || ')') as title,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_jjqqls.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_jjqqls.title AS varchar), '(' || airport_heliport_airportheliport_pt_jjqqls.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_jjqqls.href)) AS affectedlocation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_pioivb.id,
    'title', coalesce(cast(airspace_airspace_pt_pioivb.title AS varchar), '(' || airspace_airspace_pt_pioivb.nilreason[1] || ')'),
    'href', airspace_airspace_pt_pioivb.href)) AS affectedarea,
    jsonb_agg(DISTINCT notes_note_view_owiash.*) AS annotation
from rules_procedures.rulesprocedures 
inner join master_join mj2 on rules_procedures.rulesprocedures.id = mj2.source_id
inner join rules_procedures.rulesprocedures_tsp on mj2.target_id = rules_procedures.rulesprocedures_tsp.id
inner join rules_procedures.rulesprocedures_ts on rules_procedures.rulesprocedures_tsp.rulesprocedurestimeslice_id = rules_procedures.rulesprocedures_ts.id
left join master_join master_join_icqjvo on rules_procedures.rulesprocedures_ts.id = master_join_icqjvo.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_jjqqls on master_join_icqjvo.target_id = airport_heliport_airportheliport_pt_jjqqls.id
left join master_join master_join_xiqhtw on rules_procedures.rulesprocedures_ts.id = master_join_xiqhtw.source_id
left join airspace.airspace_pt airspace_airspace_pt_pioivb on master_join_xiqhtw.target_id = airspace_airspace_pt_pioivb.id
left join master_join master_join_hsbbns on rules_procedures.rulesprocedures_ts.id = master_join_hsbbns.source_id
left join notes.note_view notes_note_view_owiash on master_join_hsbbns.target_id = notes_note_view_owiash.id
where rules_procedures.rulesprocedures.feature_status = 'APPROVED'
  and rules_procedures.rulesprocedures_ts.feature_status = 'APPROVED'
group by
    rules_procedures.rulesprocedures.id,
    rules_procedures.rulesprocedures_ts.id,
    rules_procedures.rulesprocedures_tsp.id,
    rules_procedures.rulesprocedures.identifier,
    rules_procedures.rulesprocedures_ts.interpretation,
    rules_procedures.rulesprocedures_ts.sequence_number,
    rules_procedures.rulesprocedures_ts.correction_number,
    rules_procedures.rulesprocedures_ts.valid_time_begin,
    rules_procedures.rulesprocedures_ts.valid_time_end,
    rules_procedures.rulesprocedures_ts.feature_lifetime_begin,
    rules_procedures.rulesprocedures_ts.feature_lifetime_end,
    rules_procedures.rulesprocedures_ts.category_value,
    rules_procedures.rulesprocedures_ts.category_nilreason,
    rules_procedures.rulesprocedures_ts.title_value,
    rules_procedures.rulesprocedures_ts.title_nilreason
order by rulesprocedures.identifier, rulesprocedures_ts.sequence_number, rulesprocedures_ts.correction_number DESC;
create index on rules_procedures.rulesprocedures_view (id);
-- RunwayBlastPadTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwayblastpad_view cascade;
create materialized view airport_heliport.runwayblastpad_view as
select distinct on (runwayblastpad.identifier,runwayblastpad_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayblastpad.id,
    airport_heliport.runwayblastpad_ts.id as ts_id,
    airport_heliport.runwayblastpad_tsp.id as tsp_id,
    airport_heliport.runwayblastpad.identifier,
    airport_heliport.runwayblastpad_ts.interpretation,
    airport_heliport.runwayblastpad_ts.sequence_number,
    airport_heliport.runwayblastpad_ts.correction_number,
    airport_heliport.runwayblastpad_ts.valid_time_begin,
    airport_heliport.runwayblastpad_ts.valid_time_end,
    airport_heliport.runwayblastpad_ts.feature_lifetime_begin,
    airport_heliport.runwayblastpad_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayblastpad_ts.status_value as varchar), '(' || airport_heliport.runwayblastpad_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.runwayblastpad_ts.length_value as varchar) || ' ' || airport_heliport.runwayblastpad_ts.length_uom, '(' || airport_heliport.runwayblastpad_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport_runwaydirection_pt_wosgjv.title as varchar), '(' || airport_heliport_runwaydirection_pt_wosgjv.nilreason[1] || ')') AS usedrunwaydirection,
    airport_heliport_runwaydirection_pt_wosgjv.href AS usedrunwaydirection_href,
    geometry_elevatedsurface_view_cqcgzs.geom AS extent_geom,
    geometry_elevatedsurface_view_cqcgzs.elevation AS extent_elevation,
    geometry_elevatedsurface_view_cqcgzs.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_cqcgzs.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_cqcgzs.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_cqcgzs.horizontalAccuracy AS extent_horizontalaccuracy,
    airport_heliport_surfacecharacteristics_view_pentrg.id AS surfaceproperties,
    jsonb_agg(DISTINCT notes_note_view_buxdef.*) AS annotation
from airport_heliport.runwayblastpad 
inner join master_join mj2 on airport_heliport.runwayblastpad.id = mj2.source_id
inner join airport_heliport.runwayblastpad_tsp on mj2.target_id = airport_heliport.runwayblastpad_tsp.id
inner join airport_heliport.runwayblastpad_ts on airport_heliport.runwayblastpad_tsp.runwayblastpadtimeslice_id = airport_heliport.runwayblastpad_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_wosgjv on airport_heliport.runwayblastpad_ts.usedrunwaydirection_id = airport_heliport_runwaydirection_pt_wosgjv.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_cqcgzs on airport_heliport.runwayblastpad_ts.extent_id = geometry_elevatedsurface_view_cqcgzs.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_pentrg on airport_heliport.runwayblastpad_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_pentrg.id
left join master_join master_join_cvkzci on airport_heliport.runwayblastpad_ts.id = master_join_cvkzci.source_id
left join notes.note_view notes_note_view_buxdef on master_join_cvkzci.target_id = notes_note_view_buxdef.id
where airport_heliport.runwayblastpad.feature_status = 'APPROVED'
  and airport_heliport.runwayblastpad_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayblastpad.id,
    airport_heliport.runwayblastpad_ts.id,
    airport_heliport.runwayblastpad_tsp.id,
    airport_heliport.runwayblastpad.identifier,
    airport_heliport.runwayblastpad_ts.interpretation,
    airport_heliport.runwayblastpad_ts.sequence_number,
    airport_heliport.runwayblastpad_ts.correction_number,
    airport_heliport.runwayblastpad_ts.valid_time_begin,
    airport_heliport.runwayblastpad_ts.valid_time_end,
    airport_heliport.runwayblastpad_ts.feature_lifetime_begin,
    airport_heliport.runwayblastpad_ts.feature_lifetime_end,
    airport_heliport.runwayblastpad_ts.status_value,
    airport_heliport.runwayblastpad_ts.status_nilreason,
    airport_heliport.runwayblastpad_ts.length_value,
    airport_heliport.runwayblastpad_ts.length_uom,
    airport_heliport.runwayblastpad_ts.length_nilreason,
    airport_heliport_runwaydirection_pt_wosgjv.title,
    airport_heliport_runwaydirection_pt_wosgjv.nilreason[1],
    airport_heliport_runwaydirection_pt_wosgjv.href,
    geometry_elevatedsurface_view_cqcgzs.geom,
    geometry_elevatedsurface_view_cqcgzs.elevation,
    geometry_elevatedsurface_view_cqcgzs.geoidUndulation,
    geometry_elevatedsurface_view_cqcgzs.verticalDatum,
    geometry_elevatedsurface_view_cqcgzs.verticalAccuracy,
    geometry_elevatedsurface_view_cqcgzs.horizontalAccuracy,
    airport_heliport_surfacecharacteristics_view_pentrg.id
order by runwayblastpad.identifier, runwayblastpad_ts.sequence_number, runwayblastpad_ts.correction_number DESC;
create index on airport_heliport.runwayblastpad_view (id);
-- RunwayCentrelinePointTimeSliceType
-- ['airport_heliport.navaidequipmentdistance_view', 'notes.note_view', 'geometry.elevatedpoint_view', 'airport_heliport.runwaydeclareddistance_view']
drop materialized view if exists airport_heliport.runwaycentrelinepoint_view cascade;
create materialized view airport_heliport.runwaycentrelinepoint_view as
select distinct on (runwaycentrelinepoint.identifier,runwaycentrelinepoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaycentrelinepoint.id,
    airport_heliport.runwaycentrelinepoint_ts.id as ts_id,
    airport_heliport.runwaycentrelinepoint_tsp.id as tsp_id,
    airport_heliport.runwaycentrelinepoint.identifier,
    airport_heliport.runwaycentrelinepoint_ts.interpretation,
    airport_heliport.runwaycentrelinepoint_ts.sequence_number,
    airport_heliport.runwaycentrelinepoint_ts.correction_number,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_begin,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_end,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_begin,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaycentrelinepoint_ts.role_value as varchar), '(' || airport_heliport.runwaycentrelinepoint_ts.role_nilreason || ')') as role,
    coalesce(cast(airport_heliport.runwaycentrelinepoint_ts.designator_value as varchar), '(' || airport_heliport.runwaycentrelinepoint_ts.designator_nilreason || ')') as designator,
    geometry_elevatedpoint_view_xvglbl.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_xvglbl.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_xvglbl.geom) AS location_latitude,
    geometry_elevatedpoint_view_xvglbl.elevation AS location_elevation,
    geometry_elevatedpoint_view_xvglbl.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_xvglbl.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_xvglbl.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_xvglbl.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(airport_heliport_runwaydirection_pt_vnnjbh.title as varchar), '(' || airport_heliport_runwaydirection_pt_vnnjbh.nilreason[1] || ')') AS onrunway,
    airport_heliport_runwaydirection_pt_vnnjbh.href AS onrunway_href,
    jsonb_agg(airport_heliport_runwaydeclareddistance_view_gdvpwo.id) AS associateddeclareddistance,
    jsonb_agg(airport_heliport_navaidequipmentdistance_view_hxccwu.id) AS navaidequipment,
    jsonb_agg(DISTINCT notes_note_view_tbotbk.*) AS annotation
from airport_heliport.runwaycentrelinepoint 
inner join master_join mj2 on airport_heliport.runwaycentrelinepoint.id = mj2.source_id
inner join airport_heliport.runwaycentrelinepoint_tsp on mj2.target_id = airport_heliport.runwaycentrelinepoint_tsp.id
inner join airport_heliport.runwaycentrelinepoint_ts on airport_heliport.runwaycentrelinepoint_tsp.runwaycentrelinepointtimeslice_id = airport_heliport.runwaycentrelinepoint_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_xvglbl on airport_heliport.runwaycentrelinepoint_ts.location_id = geometry_elevatedpoint_view_xvglbl.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_vnnjbh on airport_heliport.runwaycentrelinepoint_ts.onrunway_id = airport_heliport_runwaydirection_pt_vnnjbh.id
left join master_join master_join_tpgvnj on airport_heliport.runwaycentrelinepoint_ts.id = master_join_tpgvnj.source_id
left join airport_heliport.runwaydeclareddistance_view airport_heliport_runwaydeclareddistance_view_gdvpwo on master_join_tpgvnj.target_id = airport_heliport_runwaydeclareddistance_view_gdvpwo.id
left join master_join master_join_urdbqt on airport_heliport.runwaycentrelinepoint_ts.id = master_join_urdbqt.source_id
left join airport_heliport.navaidequipmentdistance_view airport_heliport_navaidequipmentdistance_view_hxccwu on master_join_urdbqt.target_id = airport_heliport_navaidequipmentdistance_view_hxccwu.id
left join master_join master_join_rhcogw on airport_heliport.runwaycentrelinepoint_ts.id = master_join_rhcogw.source_id
left join notes.note_view notes_note_view_tbotbk on master_join_rhcogw.target_id = notes_note_view_tbotbk.id
where airport_heliport.runwaycentrelinepoint.feature_status = 'APPROVED'
  and airport_heliport.runwaycentrelinepoint_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaycentrelinepoint.id,
    airport_heliport.runwaycentrelinepoint_ts.id,
    airport_heliport.runwaycentrelinepoint_tsp.id,
    airport_heliport.runwaycentrelinepoint.identifier,
    airport_heliport.runwaycentrelinepoint_ts.interpretation,
    airport_heliport.runwaycentrelinepoint_ts.sequence_number,
    airport_heliport.runwaycentrelinepoint_ts.correction_number,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_begin,
    airport_heliport.runwaycentrelinepoint_ts.valid_time_end,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_begin,
    airport_heliport.runwaycentrelinepoint_ts.feature_lifetime_end,
    airport_heliport.runwaycentrelinepoint_ts.role_value,
    airport_heliport.runwaycentrelinepoint_ts.role_nilreason,
    airport_heliport.runwaycentrelinepoint_ts.designator_value,
    airport_heliport.runwaycentrelinepoint_ts.designator_nilreason,
    geometry_elevatedpoint_view_xvglbl.geom,
    geometry_elevatedpoint_view_xvglbl.elevation,
    geometry_elevatedpoint_view_xvglbl.geoidUndulation,
    geometry_elevatedpoint_view_xvglbl.verticalDatum,
    geometry_elevatedpoint_view_xvglbl.verticalAccuracy,
    geometry_elevatedpoint_view_xvglbl.horizontalAccuracy,
    airport_heliport_runwaydirection_pt_vnnjbh.title,
    airport_heliport_runwaydirection_pt_vnnjbh.nilreason[1],
    airport_heliport_runwaydirection_pt_vnnjbh.href
order by runwaycentrelinepoint.identifier, runwaycentrelinepoint_ts.sequence_number, runwaycentrelinepoint_ts.correction_number DESC;
create index on airport_heliport.runwaycentrelinepoint_view (id);
-- RunwayDirectionLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.runwaydirectionlightsystem_view cascade;
create materialized view airport_heliport.runwaydirectionlightsystem_view as
select distinct on (runwaydirectionlightsystem.identifier,runwaydirectionlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaydirectionlightsystem.id,
    airport_heliport.runwaydirectionlightsystem_ts.id as ts_id,
    airport_heliport.runwaydirectionlightsystem_tsp.id as tsp_id,
    airport_heliport.runwaydirectionlightsystem.identifier,
    airport_heliport.runwaydirectionlightsystem_ts.interpretation,
    airport_heliport.runwaydirectionlightsystem_ts.sequence_number,
    airport_heliport.runwaydirectionlightsystem_ts.correction_number,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_begin,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_end,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.colour_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.runwaydirectionlightsystem_ts.position_value as varchar), '(' || airport_heliport.runwaydirectionlightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_runwaydirection_pt_ahczos.title as varchar), '(' || airport_heliport_runwaydirection_pt_ahczos.nilreason[1] || ')') AS associatedrunwaydirection,
    airport_heliport_runwaydirection_pt_ahczos.href AS associatedrunwaydirection_href,
    jsonb_agg(shared_lightelement_view_ddslgt.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_wvimys.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_erydqq.*) AS annotation
from airport_heliport.runwaydirectionlightsystem 
inner join master_join mj2 on airport_heliport.runwaydirectionlightsystem.id = mj2.source_id
inner join airport_heliport.runwaydirectionlightsystem_tsp on mj2.target_id = airport_heliport.runwaydirectionlightsystem_tsp.id
inner join airport_heliport.runwaydirectionlightsystem_ts on airport_heliport.runwaydirectionlightsystem_tsp.runwaydirectionlightsystemtimeslice_id = airport_heliport.runwaydirectionlightsystem_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_ahczos on airport_heliport.runwaydirectionlightsystem_ts.associatedrunwaydirection_id = airport_heliport_runwaydirection_pt_ahczos.id
left join master_join master_join_ccaieu on airport_heliport.runwaydirectionlightsystem_ts.id = master_join_ccaieu.source_id
left join shared.lightelement_view shared_lightelement_view_ddslgt on master_join_ccaieu.target_id = shared_lightelement_view_ddslgt.id
left join master_join master_join_nztsxd on airport_heliport.runwaydirectionlightsystem_ts.id = master_join_nztsxd.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_wvimys on master_join_nztsxd.target_id = airport_heliport_groundlightingavailability_view_wvimys.id
left join master_join master_join_xdklmv on airport_heliport.runwaydirectionlightsystem_ts.id = master_join_xdklmv.source_id
left join notes.note_view notes_note_view_erydqq on master_join_xdklmv.target_id = notes_note_view_erydqq.id
where airport_heliport.runwaydirectionlightsystem.feature_status = 'APPROVED'
  and airport_heliport.runwaydirectionlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaydirectionlightsystem.id,
    airport_heliport.runwaydirectionlightsystem_ts.id,
    airport_heliport.runwaydirectionlightsystem_tsp.id,
    airport_heliport.runwaydirectionlightsystem.identifier,
    airport_heliport.runwaydirectionlightsystem_ts.interpretation,
    airport_heliport.runwaydirectionlightsystem_ts.sequence_number,
    airport_heliport.runwaydirectionlightsystem_ts.correction_number,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_begin,
    airport_heliport.runwaydirectionlightsystem_ts.valid_time_end,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwaydirectionlightsystem_ts.feature_lifetime_end,
    airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_value,
    airport_heliport.runwaydirectionlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_value,
    airport_heliport.runwaydirectionlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.colour_value,
    airport_heliport.runwaydirectionlightsystem_ts.colour_nilreason,
    airport_heliport.runwaydirectionlightsystem_ts.position_value,
    airport_heliport.runwaydirectionlightsystem_ts.position_nilreason,
    airport_heliport_runwaydirection_pt_ahczos.title,
    airport_heliport_runwaydirection_pt_ahczos.nilreason[1],
    airport_heliport_runwaydirection_pt_ahczos.href
order by runwaydirectionlightsystem.identifier, runwaydirectionlightsystem_ts.sequence_number, runwaydirectionlightsystem_ts.correction_number DESC;
create index on airport_heliport.runwaydirectionlightsystem_view (id);
-- RunwayDirectionTimeSliceType
-- ['airport_heliport.manoeuvringareaavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwaydirection_view cascade;
create materialized view airport_heliport.runwaydirection_view as
select distinct on (runwaydirection.identifier,runwaydirection_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaydirection.id,
    airport_heliport.runwaydirection_ts.id as ts_id,
    airport_heliport.runwaydirection_tsp.id as tsp_id,
    airport_heliport.runwaydirection.identifier,
    airport_heliport.runwaydirection_ts.interpretation,
    airport_heliport.runwaydirection_ts.sequence_number,
    airport_heliport.runwaydirection_ts.correction_number,
    airport_heliport.runwaydirection_ts.valid_time_begin,
    airport_heliport.runwaydirection_ts.valid_time_end,
    airport_heliport.runwaydirection_ts.feature_lifetime_begin,
    airport_heliport.runwaydirection_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaydirection_ts.designator_value as varchar), '(' || airport_heliport.runwaydirection_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.runwaydirection_ts.truebearing_value as varchar), '(' || airport_heliport.runwaydirection_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(airport_heliport.runwaydirection_ts.truebearingaccuracy_value as varchar), '(' || airport_heliport.runwaydirection_ts.truebearingaccuracy_nilreason || ')') as truebearingaccuracy,
    coalesce(cast(airport_heliport.runwaydirection_ts.magneticbearing_value as varchar), '(' || airport_heliport.runwaydirection_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(airport_heliport.runwaydirection_ts.patternvfr_value as varchar), '(' || airport_heliport.runwaydirection_ts.patternvfr_nilreason || ')') as patternvfr,
    coalesce(cast(airport_heliport.runwaydirection_ts.slopetdz_value as varchar), '(' || airport_heliport.runwaydirection_ts.slopetdz_nilreason || ')') as slopetdz,
    coalesce(cast(airport_heliport.runwaydirection_ts.approachmarkingtype_value as varchar), '(' || airport_heliport.runwaydirection_ts.approachmarkingtype_nilreason || ')') as approachmarkingtype,
    coalesce(cast(airport_heliport.runwaydirection_ts.approachmarkingcondition_value as varchar), '(' || airport_heliport.runwaydirection_ts.approachmarkingcondition_nilreason || ')') as approachmarkingcondition,
    coalesce(cast(airport_heliport.runwaydirection_ts.classlightingjar_value as varchar), '(' || airport_heliport.runwaydirection_ts.classlightingjar_nilreason || ')') as classlightingjar,
    coalesce(cast(airport_heliport.runwaydirection_ts.precisionapproachguidance_value as varchar), '(' || airport_heliport.runwaydirection_ts.precisionapproachguidance_nilreason || ')') as precisionapproachguidance,
    coalesce(cast(airport_heliport.runwaydirection_ts.elevationtdz_value as varchar) || ' ' || airport_heliport.runwaydirection_ts.elevationtdz_uom, '(' || airport_heliport.runwaydirection_ts.elevationtdz_nilreason || ')') as elevationtdz,
    coalesce(cast(airport_heliport.runwaydirection_ts.elevationtdzaccuracy_value as varchar) || ' ' || airport_heliport.runwaydirection_ts.elevationtdzaccuracy_uom, '(' || airport_heliport.runwaydirection_ts.elevationtdzaccuracy_nilreason || ')') as elevationtdzaccuracy,
    coalesce(cast(airport_heliport_runway_pt_ngqqit.title as varchar), '(' || airport_heliport_runway_pt_ngqqit.nilreason[1] || ')') AS usedrunway,
    airport_heliport_runway_pt_ngqqit.href AS usedrunway_href,
    coalesce(cast(airport_heliport_runwayelement_pt_aztxfj.title as varchar), '(' || airport_heliport_runwayelement_pt_aztxfj.nilreason[1] || ')') AS startingelement,
    airport_heliport_runwayelement_pt_aztxfj.href AS startingelement_href,
    jsonb_agg(DISTINCT notes_note_view_afkxzf.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_ogsvza.id) AS availability
from airport_heliport.runwaydirection 
inner join master_join mj2 on airport_heliport.runwaydirection.id = mj2.source_id
inner join airport_heliport.runwaydirection_tsp on mj2.target_id = airport_heliport.runwaydirection_tsp.id
inner join airport_heliport.runwaydirection_ts on airport_heliport.runwaydirection_tsp.runwaydirectiontimeslice_id = airport_heliport.runwaydirection_ts.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_ngqqit on airport_heliport.runwaydirection_ts.usedrunway_id = airport_heliport_runway_pt_ngqqit.id
left join airport_heliport.runwayelement_pt airport_heliport_runwayelement_pt_aztxfj on airport_heliport.runwaydirection_ts.startingelement_id = airport_heliport_runwayelement_pt_aztxfj.id
left join master_join master_join_pyelny on airport_heliport.runwaydirection_ts.id = master_join_pyelny.source_id
left join notes.note_view notes_note_view_afkxzf on master_join_pyelny.target_id = notes_note_view_afkxzf.id
left join master_join master_join_aksfhm on airport_heliport.runwaydirection_ts.id = master_join_aksfhm.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_ogsvza on master_join_aksfhm.target_id = airport_heliport_manoeuvringareaavailability_view_ogsvza.id
where airport_heliport.runwaydirection.feature_status = 'APPROVED'
  and airport_heliport.runwaydirection_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaydirection.id,
    airport_heliport.runwaydirection_ts.id,
    airport_heliport.runwaydirection_tsp.id,
    airport_heliport.runwaydirection.identifier,
    airport_heliport.runwaydirection_ts.interpretation,
    airport_heliport.runwaydirection_ts.sequence_number,
    airport_heliport.runwaydirection_ts.correction_number,
    airport_heliport.runwaydirection_ts.valid_time_begin,
    airport_heliport.runwaydirection_ts.valid_time_end,
    airport_heliport.runwaydirection_ts.feature_lifetime_begin,
    airport_heliport.runwaydirection_ts.feature_lifetime_end,
    airport_heliport.runwaydirection_ts.designator_value,
    airport_heliport.runwaydirection_ts.designator_nilreason,
    airport_heliport.runwaydirection_ts.truebearing_value,
    airport_heliport.runwaydirection_ts.truebearing_nilreason,
    airport_heliport.runwaydirection_ts.truebearingaccuracy_value,
    airport_heliport.runwaydirection_ts.truebearingaccuracy_nilreason,
    airport_heliport.runwaydirection_ts.magneticbearing_value,
    airport_heliport.runwaydirection_ts.magneticbearing_nilreason,
    airport_heliport.runwaydirection_ts.patternvfr_value,
    airport_heliport.runwaydirection_ts.patternvfr_nilreason,
    airport_heliport.runwaydirection_ts.slopetdz_value,
    airport_heliport.runwaydirection_ts.slopetdz_nilreason,
    airport_heliport.runwaydirection_ts.approachmarkingtype_value,
    airport_heliport.runwaydirection_ts.approachmarkingtype_nilreason,
    airport_heliport.runwaydirection_ts.approachmarkingcondition_value,
    airport_heliport.runwaydirection_ts.approachmarkingcondition_nilreason,
    airport_heliport.runwaydirection_ts.classlightingjar_value,
    airport_heliport.runwaydirection_ts.classlightingjar_nilreason,
    airport_heliport.runwaydirection_ts.precisionapproachguidance_value,
    airport_heliport.runwaydirection_ts.precisionapproachguidance_nilreason,
    airport_heliport.runwaydirection_ts.elevationtdz_value,
    airport_heliport.runwaydirection_ts.elevationtdz_uom,
    airport_heliport.runwaydirection_ts.elevationtdz_nilreason,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_value,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_uom,
    airport_heliport.runwaydirection_ts.elevationtdzaccuracy_nilreason,
    airport_heliport_runway_pt_ngqqit.title,
    airport_heliport_runway_pt_ngqqit.nilreason[1],
    airport_heliport_runway_pt_ngqqit.href,
    airport_heliport_runwayelement_pt_aztxfj.title,
    airport_heliport_runwayelement_pt_aztxfj.nilreason[1],
    airport_heliport_runwayelement_pt_aztxfj.href
order by runwaydirection.identifier, runwaydirection_ts.sequence_number, runwaydirection_ts.correction_number DESC;
create index on airport_heliport.runwaydirection_view (id);
-- RunwayElementTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.manoeuvringareaavailability_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwayelement_view cascade;
create materialized view airport_heliport.runwayelement_view as
select distinct on (runwayelement.identifier,runwayelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayelement.id,
    airport_heliport.runwayelement_ts.id as ts_id,
    airport_heliport.runwayelement_tsp.id as tsp_id,
    airport_heliport.runwayelement.identifier,
    airport_heliport.runwayelement_ts.interpretation,
    airport_heliport.runwayelement_ts.sequence_number,
    airport_heliport.runwayelement_ts.correction_number,
    airport_heliport.runwayelement_ts.valid_time_begin,
    airport_heliport.runwayelement_ts.valid_time_end,
    airport_heliport.runwayelement_ts.feature_lifetime_begin,
    airport_heliport.runwayelement_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayelement_ts.type_value as varchar), '(' || airport_heliport.runwayelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runwayelement_ts.gradeseparation_value as varchar), '(' || airport_heliport.runwayelement_ts.gradeseparation_nilreason || ')') as gradeseparation,
    coalesce(cast(airport_heliport.runwayelement_ts.length_value as varchar) || ' ' || airport_heliport.runwayelement_ts.length_uom, '(' || airport_heliport.runwayelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.runwayelement_ts.width_value as varchar) || ' ' || airport_heliport.runwayelement_ts.width_uom, '(' || airport_heliport.runwayelement_ts.width_nilreason || ')') as width,
    airport_heliport_surfacecharacteristics_view_hzvtgp.id AS surfaceproperties,
    geometry_elevatedsurface_view_hwupnt.geom AS extent_geom,
    geometry_elevatedsurface_view_hwupnt.elevation AS extent_elevation,
    geometry_elevatedsurface_view_hwupnt.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_hwupnt.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_hwupnt.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_hwupnt.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runway_pt_gkhzvo.id,
    'title', coalesce(cast(airport_heliport_runway_pt_gkhzvo.title AS varchar), '(' || airport_heliport_runway_pt_gkhzvo.nilreason[1] || ')'),
    'href', airport_heliport_runway_pt_gkhzvo.href)) AS associatedrunway,
    jsonb_agg(DISTINCT notes_note_view_fzgofr.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_xrmviw.id) AS availability
from airport_heliport.runwayelement 
inner join master_join mj2 on airport_heliport.runwayelement.id = mj2.source_id
inner join airport_heliport.runwayelement_tsp on mj2.target_id = airport_heliport.runwayelement_tsp.id
inner join airport_heliport.runwayelement_ts on airport_heliport.runwayelement_tsp.runwayelementtimeslice_id = airport_heliport.runwayelement_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_hzvtgp on airport_heliport.runwayelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_hzvtgp.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_hwupnt on airport_heliport.runwayelement_ts.extent_id = geometry_elevatedsurface_view_hwupnt.id
left join master_join master_join_zrxclw on airport_heliport.runwayelement_ts.id = master_join_zrxclw.source_id
left join airport_heliport.runway_pt airport_heliport_runway_pt_gkhzvo on master_join_zrxclw.target_id = airport_heliport_runway_pt_gkhzvo.id
left join master_join master_join_gcxygj on airport_heliport.runwayelement_ts.id = master_join_gcxygj.source_id
left join notes.note_view notes_note_view_fzgofr on master_join_gcxygj.target_id = notes_note_view_fzgofr.id
left join master_join master_join_nbsqxy on airport_heliport.runwayelement_ts.id = master_join_nbsqxy.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_xrmviw on master_join_nbsqxy.target_id = airport_heliport_manoeuvringareaavailability_view_xrmviw.id
where airport_heliport.runwayelement.feature_status = 'APPROVED'
  and airport_heliport.runwayelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayelement.id,
    airport_heliport.runwayelement_ts.id,
    airport_heliport.runwayelement_tsp.id,
    airport_heliport.runwayelement.identifier,
    airport_heliport.runwayelement_ts.interpretation,
    airport_heliport.runwayelement_ts.sequence_number,
    airport_heliport.runwayelement_ts.correction_number,
    airport_heliport.runwayelement_ts.valid_time_begin,
    airport_heliport.runwayelement_ts.valid_time_end,
    airport_heliport.runwayelement_ts.feature_lifetime_begin,
    airport_heliport.runwayelement_ts.feature_lifetime_end,
    airport_heliport.runwayelement_ts.type_value,
    airport_heliport.runwayelement_ts.type_nilreason,
    airport_heliport.runwayelement_ts.gradeseparation_value,
    airport_heliport.runwayelement_ts.gradeseparation_nilreason,
    airport_heliport.runwayelement_ts.length_value,
    airport_heliport.runwayelement_ts.length_uom,
    airport_heliport.runwayelement_ts.length_nilreason,
    airport_heliport.runwayelement_ts.width_value,
    airport_heliport.runwayelement_ts.width_uom,
    airport_heliport.runwayelement_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_view_hzvtgp.id,
    geometry_elevatedsurface_view_hwupnt.geom,
    geometry_elevatedsurface_view_hwupnt.elevation,
    geometry_elevatedsurface_view_hwupnt.geoidUndulation,
    geometry_elevatedsurface_view_hwupnt.verticalDatum,
    geometry_elevatedsurface_view_hwupnt.verticalAccuracy,
    geometry_elevatedsurface_view_hwupnt.horizontalAccuracy
order by runwayelement.identifier, runwayelement_ts.sequence_number, runwayelement_ts.correction_number DESC;
create index on airport_heliport.runwayelement_view (id);
-- RunwayMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwaymarking_view cascade;
create materialized view airport_heliport.runwaymarking_view as
select distinct on (runwaymarking.identifier,runwaymarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwaymarking.id,
    airport_heliport.runwaymarking_ts.id as ts_id,
    airport_heliport.runwaymarking_tsp.id as tsp_id,
    airport_heliport.runwaymarking.identifier,
    airport_heliport.runwaymarking_ts.interpretation,
    airport_heliport.runwaymarking_ts.sequence_number,
    airport_heliport.runwaymarking_ts.correction_number,
    airport_heliport.runwaymarking_ts.valid_time_begin,
    airport_heliport.runwaymarking_ts.valid_time_end,
    airport_heliport.runwaymarking_ts.feature_lifetime_begin,
    airport_heliport.runwaymarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwaymarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.runwaymarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.runwaymarking_ts.condition_value as varchar), '(' || airport_heliport.runwaymarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.runwaymarking_ts.markinglocation_value as varchar), '(' || airport_heliport.runwaymarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_runway_pt_tffqaw.title as varchar), '(' || airport_heliport_runway_pt_tffqaw.nilreason[1] || ')') AS markedrunway,
    airport_heliport_runway_pt_tffqaw.href AS markedrunway_href,
    jsonb_agg(airport_heliport_markingelement_view_jjmyem.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_fhcuvg.*) AS annotation
from airport_heliport.runwaymarking 
inner join master_join mj2 on airport_heliport.runwaymarking.id = mj2.source_id
inner join airport_heliport.runwaymarking_tsp on mj2.target_id = airport_heliport.runwaymarking_tsp.id
inner join airport_heliport.runwaymarking_ts on airport_heliport.runwaymarking_tsp.runwaymarkingtimeslice_id = airport_heliport.runwaymarking_ts.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_tffqaw on airport_heliport.runwaymarking_ts.markedrunway_id = airport_heliport_runway_pt_tffqaw.id
left join master_join master_join_xlufrl on airport_heliport.runwaymarking_ts.id = master_join_xlufrl.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_jjmyem on master_join_xlufrl.target_id = airport_heliport_markingelement_view_jjmyem.id
left join master_join master_join_ekziuc on airport_heliport.runwaymarking_ts.id = master_join_ekziuc.source_id
left join notes.note_view notes_note_view_fhcuvg on master_join_ekziuc.target_id = notes_note_view_fhcuvg.id
where airport_heliport.runwaymarking.feature_status = 'APPROVED'
  and airport_heliport.runwaymarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwaymarking.id,
    airport_heliport.runwaymarking_ts.id,
    airport_heliport.runwaymarking_tsp.id,
    airport_heliport.runwaymarking.identifier,
    airport_heliport.runwaymarking_ts.interpretation,
    airport_heliport.runwaymarking_ts.sequence_number,
    airport_heliport.runwaymarking_ts.correction_number,
    airport_heliport.runwaymarking_ts.valid_time_begin,
    airport_heliport.runwaymarking_ts.valid_time_end,
    airport_heliport.runwaymarking_ts.feature_lifetime_begin,
    airport_heliport.runwaymarking_ts.feature_lifetime_end,
    airport_heliport.runwaymarking_ts.markingicaostandard_value,
    airport_heliport.runwaymarking_ts.markingicaostandard_nilreason,
    airport_heliport.runwaymarking_ts.condition_value,
    airport_heliport.runwaymarking_ts.condition_nilreason,
    airport_heliport.runwaymarking_ts.markinglocation_value,
    airport_heliport.runwaymarking_ts.markinglocation_nilreason,
    airport_heliport_runway_pt_tffqaw.title,
    airport_heliport_runway_pt_tffqaw.nilreason[1],
    airport_heliport_runway_pt_tffqaw.href
order by runwaymarking.identifier, runwaymarking_ts.sequence_number, runwaymarking_ts.correction_number DESC;
create index on airport_heliport.runwaymarking_view (id);
-- RunwayProtectAreaLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.runwayprotectarealightsystem_view cascade;
create materialized view airport_heliport.runwayprotectarealightsystem_view as
select distinct on (runwayprotectarealightsystem.identifier,runwayprotectarealightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayprotectarealightsystem.id,
    airport_heliport.runwayprotectarealightsystem_ts.id as ts_id,
    airport_heliport.runwayprotectarealightsystem_tsp.id as tsp_id,
    airport_heliport.runwayprotectarealightsystem.identifier,
    airport_heliport.runwayprotectarealightsystem_ts.interpretation,
    airport_heliport.runwayprotectarealightsystem_ts.sequence_number,
    airport_heliport.runwayprotectarealightsystem_ts.correction_number,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_begin,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_end,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.colour_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.runwayprotectarealightsystem_ts.position_value as varchar), '(' || airport_heliport.runwayprotectarealightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_runwayprotectarea_pt_gydlgg.title as varchar), '(' || airport_heliport_runwayprotectarea_pt_gydlgg.nilreason[1] || ')') AS lightedarea,
    airport_heliport_runwayprotectarea_pt_gydlgg.href AS lightedarea_href,
    jsonb_agg(shared_lightelement_view_zbaost.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_wyzegd.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_xpabkd.*) AS annotation
from airport_heliport.runwayprotectarealightsystem 
inner join master_join mj2 on airport_heliport.runwayprotectarealightsystem.id = mj2.source_id
inner join airport_heliport.runwayprotectarealightsystem_tsp on mj2.target_id = airport_heliport.runwayprotectarealightsystem_tsp.id
inner join airport_heliport.runwayprotectarealightsystem_ts on airport_heliport.runwayprotectarealightsystem_tsp.runwayprotectarealightsystemtimeslice_id = airport_heliport.runwayprotectarealightsystem_ts.id
left join airport_heliport.runwayprotectarea_pt airport_heliport_runwayprotectarea_pt_gydlgg on airport_heliport.runwayprotectarealightsystem_ts.lightedarea_id = airport_heliport_runwayprotectarea_pt_gydlgg.id
left join master_join master_join_ppkmdf on airport_heliport.runwayprotectarealightsystem_ts.id = master_join_ppkmdf.source_id
left join shared.lightelement_view shared_lightelement_view_zbaost on master_join_ppkmdf.target_id = shared_lightelement_view_zbaost.id
left join master_join master_join_oaewqb on airport_heliport.runwayprotectarealightsystem_ts.id = master_join_oaewqb.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_wyzegd on master_join_oaewqb.target_id = airport_heliport_groundlightingavailability_view_wyzegd.id
left join master_join master_join_unjhbe on airport_heliport.runwayprotectarealightsystem_ts.id = master_join_unjhbe.source_id
left join notes.note_view notes_note_view_xpabkd on master_join_unjhbe.target_id = notes_note_view_xpabkd.id
where airport_heliport.runwayprotectarealightsystem.feature_status = 'APPROVED'
  and airport_heliport.runwayprotectarealightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayprotectarealightsystem.id,
    airport_heliport.runwayprotectarealightsystem_ts.id,
    airport_heliport.runwayprotectarealightsystem_tsp.id,
    airport_heliport.runwayprotectarealightsystem.identifier,
    airport_heliport.runwayprotectarealightsystem_ts.interpretation,
    airport_heliport.runwayprotectarealightsystem_ts.sequence_number,
    airport_heliport.runwayprotectarealightsystem_ts.correction_number,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_begin,
    airport_heliport.runwayprotectarealightsystem_ts.valid_time_end,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarealightsystem_ts.feature_lifetime_end,
    airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_value,
    airport_heliport.runwayprotectarealightsystem_ts.emergencylighting_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_value,
    airport_heliport.runwayprotectarealightsystem_ts.intensitylevel_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.colour_value,
    airport_heliport.runwayprotectarealightsystem_ts.colour_nilreason,
    airport_heliport.runwayprotectarealightsystem_ts.position_value,
    airport_heliport.runwayprotectarealightsystem_ts.position_nilreason,
    airport_heliport_runwayprotectarea_pt_gydlgg.title,
    airport_heliport_runwayprotectarea_pt_gydlgg.nilreason[1],
    airport_heliport_runwayprotectarea_pt_gydlgg.href
order by runwayprotectarealightsystem.identifier, runwayprotectarealightsystem_ts.sequence_number, runwayprotectarealightsystem_ts.correction_number DESC;
create index on airport_heliport.runwayprotectarealightsystem_view (id);
-- RunwayProtectAreaTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwayprotectarea_view cascade;
create materialized view airport_heliport.runwayprotectarea_view as
select distinct on (runwayprotectarea.identifier,runwayprotectarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayprotectarea.id,
    airport_heliport.runwayprotectarea_ts.id as ts_id,
    airport_heliport.runwayprotectarea_tsp.id as tsp_id,
    airport_heliport.runwayprotectarea.identifier,
    airport_heliport.runwayprotectarea_ts.interpretation,
    airport_heliport.runwayprotectarea_ts.sequence_number,
    airport_heliport.runwayprotectarea_ts.correction_number,
    airport_heliport.runwayprotectarea_ts.valid_time_begin,
    airport_heliport.runwayprotectarea_ts.valid_time_end,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.lighting_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.lighting_nilreason || ')') as lighting,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.obstaclefree_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.obstaclefree_nilreason || ')') as obstaclefree,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.type_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.status_value as varchar), '(' || airport_heliport.runwayprotectarea_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.width_value as varchar) || ' ' || airport_heliport.runwayprotectarea_ts.width_uom, '(' || airport_heliport.runwayprotectarea_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.runwayprotectarea_ts.length_value as varchar) || ' ' || airport_heliport.runwayprotectarea_ts.length_uom, '(' || airport_heliport.runwayprotectarea_ts.length_nilreason || ')') as length,
    airport_heliport_surfacecharacteristics_view_hfoeka.id AS surfaceproperties,
    geometry_elevatedsurface_view_dawtqf.geom AS extent_geom,
    geometry_elevatedsurface_view_dawtqf.elevation AS extent_elevation,
    geometry_elevatedsurface_view_dawtqf.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_dawtqf.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_dawtqf.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_dawtqf.horizontalAccuracy AS extent_horizontalaccuracy,
    coalesce(cast(airport_heliport_runwaydirection_pt_xxnozf.title as varchar), '(' || airport_heliport_runwaydirection_pt_xxnozf.nilreason[1] || ')') AS protectedrunwaydirection,
    airport_heliport_runwaydirection_pt_xxnozf.href AS protectedrunwaydirection_href,
    jsonb_agg(DISTINCT notes_note_view_msjzuc.*) AS annotation
from airport_heliport.runwayprotectarea 
inner join master_join mj2 on airport_heliport.runwayprotectarea.id = mj2.source_id
inner join airport_heliport.runwayprotectarea_tsp on mj2.target_id = airport_heliport.runwayprotectarea_tsp.id
inner join airport_heliport.runwayprotectarea_ts on airport_heliport.runwayprotectarea_tsp.runwayprotectareatimeslice_id = airport_heliport.runwayprotectarea_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_hfoeka on airport_heliport.runwayprotectarea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_hfoeka.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_dawtqf on airport_heliport.runwayprotectarea_ts.extent_id = geometry_elevatedsurface_view_dawtqf.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_xxnozf on airport_heliport.runwayprotectarea_ts.protectedrunwaydirection_id = airport_heliport_runwaydirection_pt_xxnozf.id
left join master_join master_join_mytgza on airport_heliport.runwayprotectarea_ts.id = master_join_mytgza.source_id
left join notes.note_view notes_note_view_msjzuc on master_join_mytgza.target_id = notes_note_view_msjzuc.id
where airport_heliport.runwayprotectarea.feature_status = 'APPROVED'
  and airport_heliport.runwayprotectarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayprotectarea.id,
    airport_heliport.runwayprotectarea_ts.id,
    airport_heliport.runwayprotectarea_tsp.id,
    airport_heliport.runwayprotectarea.identifier,
    airport_heliport.runwayprotectarea_ts.interpretation,
    airport_heliport.runwayprotectarea_ts.sequence_number,
    airport_heliport.runwayprotectarea_ts.correction_number,
    airport_heliport.runwayprotectarea_ts.valid_time_begin,
    airport_heliport.runwayprotectarea_ts.valid_time_end,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_begin,
    airport_heliport.runwayprotectarea_ts.feature_lifetime_end,
    airport_heliport.runwayprotectarea_ts.lighting_value,
    airport_heliport.runwayprotectarea_ts.lighting_nilreason,
    airport_heliport.runwayprotectarea_ts.obstaclefree_value,
    airport_heliport.runwayprotectarea_ts.obstaclefree_nilreason,
    airport_heliport.runwayprotectarea_ts.type_value,
    airport_heliport.runwayprotectarea_ts.type_nilreason,
    airport_heliport.runwayprotectarea_ts.status_value,
    airport_heliport.runwayprotectarea_ts.status_nilreason,
    airport_heliport.runwayprotectarea_ts.width_value,
    airport_heliport.runwayprotectarea_ts.width_uom,
    airport_heliport.runwayprotectarea_ts.width_nilreason,
    airport_heliport.runwayprotectarea_ts.length_value,
    airport_heliport.runwayprotectarea_ts.length_uom,
    airport_heliport.runwayprotectarea_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_view_hfoeka.id,
    geometry_elevatedsurface_view_dawtqf.geom,
    geometry_elevatedsurface_view_dawtqf.elevation,
    geometry_elevatedsurface_view_dawtqf.geoidUndulation,
    geometry_elevatedsurface_view_dawtqf.verticalDatum,
    geometry_elevatedsurface_view_dawtqf.verticalAccuracy,
    geometry_elevatedsurface_view_dawtqf.horizontalAccuracy,
    airport_heliport_runwaydirection_pt_xxnozf.title,
    airport_heliport_runwaydirection_pt_xxnozf.nilreason[1],
    airport_heliport_runwaydirection_pt_xxnozf.href
order by runwayprotectarea.identifier, runwayprotectarea_ts.sequence_number, runwayprotectarea_ts.correction_number DESC;
create index on airport_heliport.runwayprotectarea_view (id);
-- RunwayTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.runwaysectioncontamination_view', 'notes.note_view', 'airport_heliport.runwaycontamination_view']
drop materialized view if exists airport_heliport.runway_view cascade;
create materialized view airport_heliport.runway_view as
select distinct on (runway.identifier,runway_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runway.id,
    airport_heliport.runway_ts.id as ts_id,
    airport_heliport.runway_tsp.id as tsp_id,
    airport_heliport.runway.identifier,
    airport_heliport.runway_ts.interpretation,
    airport_heliport.runway_ts.sequence_number,
    airport_heliport.runway_ts.correction_number,
    airport_heliport.runway_ts.valid_time_begin,
    airport_heliport.runway_ts.valid_time_end,
    airport_heliport.runway_ts.feature_lifetime_begin,
    airport_heliport.runway_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runway_ts.designator_value as varchar), '(' || airport_heliport.runway_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.runway_ts.type_value as varchar), '(' || airport_heliport.runway_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.runway_ts.abandoned_value as varchar), '(' || airport_heliport.runway_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.runway_ts.nominallength_value as varchar) || ' ' || airport_heliport.runway_ts.nominallength_uom, '(' || airport_heliport.runway_ts.nominallength_nilreason || ')') as nominallength,
    coalesce(cast(airport_heliport.runway_ts.lengthaccuracy_value as varchar) || ' ' || airport_heliport.runway_ts.lengthaccuracy_uom, '(' || airport_heliport.runway_ts.lengthaccuracy_nilreason || ')') as lengthaccuracy,
    coalesce(cast(airport_heliport.runway_ts.nominalwidth_value as varchar) || ' ' || airport_heliport.runway_ts.nominalwidth_uom, '(' || airport_heliport.runway_ts.nominalwidth_nilreason || ')') as nominalwidth,
    coalesce(cast(airport_heliport.runway_ts.widthaccuracy_value as varchar) || ' ' || airport_heliport.runway_ts.widthaccuracy_uom, '(' || airport_heliport.runway_ts.widthaccuracy_nilreason || ')') as widthaccuracy,
    coalesce(cast(airport_heliport.runway_ts.widthshoulder_value as varchar) || ' ' || airport_heliport.runway_ts.widthshoulder_uom, '(' || airport_heliport.runway_ts.widthshoulder_nilreason || ')') as widthshoulder,
    coalesce(cast(airport_heliport.runway_ts.lengthstrip_value as varchar) || ' ' || airport_heliport.runway_ts.lengthstrip_uom, '(' || airport_heliport.runway_ts.lengthstrip_nilreason || ')') as lengthstrip,
    coalesce(cast(airport_heliport.runway_ts.widthstrip_value as varchar) || ' ' || airport_heliport.runway_ts.widthstrip_uom, '(' || airport_heliport.runway_ts.widthstrip_nilreason || ')') as widthstrip,
    coalesce(cast(airport_heliport.runway_ts.lengthoffset_value as varchar) || ' ' || airport_heliport.runway_ts.lengthoffset_uom, '(' || airport_heliport.runway_ts.lengthoffset_nilreason || ')') as lengthoffset,
    coalesce(cast(airport_heliport.runway_ts.widthoffset_value as varchar) || ' ' || airport_heliport.runway_ts.widthoffset_uom, '(' || airport_heliport.runway_ts.widthoffset_nilreason || ')') as widthoffset,
    airport_heliport_surfacecharacteristics_view_xxzdsz.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_grxcpm.title as varchar), '(' || airport_heliport_airportheliport_pt_grxcpm.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_grxcpm.href AS associatedairportheliport_href,
    jsonb_agg(airport_heliport_runwaycontamination_view_avmxro.id) AS overallcontaminant,
    jsonb_agg(DISTINCT notes_note_view_qtkiax.*) AS annotation,
    jsonb_agg(airport_heliport_runwaysectioncontamination_view_umtkbf.id) AS areacontaminant
from airport_heliport.runway 
inner join master_join mj2 on airport_heliport.runway.id = mj2.source_id
inner join airport_heliport.runway_tsp on mj2.target_id = airport_heliport.runway_tsp.id
inner join airport_heliport.runway_ts on airport_heliport.runway_tsp.runwaytimeslice_id = airport_heliport.runway_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_xxzdsz on airport_heliport.runway_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_xxzdsz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_grxcpm on airport_heliport.runway_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_grxcpm.id
left join master_join master_join_vqjpop on airport_heliport.runway_ts.id = master_join_vqjpop.source_id
left join airport_heliport.runwaycontamination_view airport_heliport_runwaycontamination_view_avmxro on master_join_vqjpop.target_id = airport_heliport_runwaycontamination_view_avmxro.id
left join master_join master_join_awenlj on airport_heliport.runway_ts.id = master_join_awenlj.source_id
left join notes.note_view notes_note_view_qtkiax on master_join_awenlj.target_id = notes_note_view_qtkiax.id
left join master_join master_join_lxrpao on airport_heliport.runway_ts.id = master_join_lxrpao.source_id
left join airport_heliport.runwaysectioncontamination_view airport_heliport_runwaysectioncontamination_view_umtkbf on master_join_lxrpao.target_id = airport_heliport_runwaysectioncontamination_view_umtkbf.id
where airport_heliport.runway.feature_status = 'APPROVED'
  and airport_heliport.runway_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runway.id,
    airport_heliport.runway_ts.id,
    airport_heliport.runway_tsp.id,
    airport_heliport.runway.identifier,
    airport_heliport.runway_ts.interpretation,
    airport_heliport.runway_ts.sequence_number,
    airport_heliport.runway_ts.correction_number,
    airport_heliport.runway_ts.valid_time_begin,
    airport_heliport.runway_ts.valid_time_end,
    airport_heliport.runway_ts.feature_lifetime_begin,
    airport_heliport.runway_ts.feature_lifetime_end,
    airport_heliport.runway_ts.designator_value,
    airport_heliport.runway_ts.designator_nilreason,
    airport_heliport.runway_ts.type_value,
    airport_heliport.runway_ts.type_nilreason,
    airport_heliport.runway_ts.abandoned_value,
    airport_heliport.runway_ts.abandoned_nilreason,
    airport_heliport.runway_ts.nominallength_value,
    airport_heliport.runway_ts.nominallength_uom,
    airport_heliport.runway_ts.nominallength_nilreason,
    airport_heliport.runway_ts.lengthaccuracy_value,
    airport_heliport.runway_ts.lengthaccuracy_uom,
    airport_heliport.runway_ts.lengthaccuracy_nilreason,
    airport_heliport.runway_ts.nominalwidth_value,
    airport_heliport.runway_ts.nominalwidth_uom,
    airport_heliport.runway_ts.nominalwidth_nilreason,
    airport_heliport.runway_ts.widthaccuracy_value,
    airport_heliport.runway_ts.widthaccuracy_uom,
    airport_heliport.runway_ts.widthaccuracy_nilreason,
    airport_heliport.runway_ts.widthshoulder_value,
    airport_heliport.runway_ts.widthshoulder_uom,
    airport_heliport.runway_ts.widthshoulder_nilreason,
    airport_heliport.runway_ts.lengthstrip_value,
    airport_heliport.runway_ts.lengthstrip_uom,
    airport_heliport.runway_ts.lengthstrip_nilreason,
    airport_heliport.runway_ts.widthstrip_value,
    airport_heliport.runway_ts.widthstrip_uom,
    airport_heliport.runway_ts.widthstrip_nilreason,
    airport_heliport.runway_ts.lengthoffset_value,
    airport_heliport.runway_ts.lengthoffset_uom,
    airport_heliport.runway_ts.lengthoffset_nilreason,
    airport_heliport.runway_ts.widthoffset_value,
    airport_heliport.runway_ts.widthoffset_uom,
    airport_heliport.runway_ts.widthoffset_nilreason,
    airport_heliport_surfacecharacteristics_view_xxzdsz.id,
    airport_heliport_airportheliport_pt_grxcpm.title,
    airport_heliport_airportheliport_pt_grxcpm.nilreason[1],
    airport_heliport_airportheliport_pt_grxcpm.href
order by runway.identifier, runway_ts.sequence_number, runway_ts.correction_number DESC;
create index on airport_heliport.runway_view (id);
-- RunwayVisualRangeTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.runwayvisualrange_view cascade;
create materialized view airport_heliport.runwayvisualrange_view as
select distinct on (runwayvisualrange.identifier,runwayvisualrange_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.runwayvisualrange.id,
    airport_heliport.runwayvisualrange_ts.id as ts_id,
    airport_heliport.runwayvisualrange_tsp.id as tsp_id,
    airport_heliport.runwayvisualrange.identifier,
    airport_heliport.runwayvisualrange_ts.interpretation,
    airport_heliport.runwayvisualrange_ts.sequence_number,
    airport_heliport.runwayvisualrange_ts.correction_number,
    airport_heliport.runwayvisualrange_ts.valid_time_begin,
    airport_heliport.runwayvisualrange_ts.valid_time_end,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_begin,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.runwayvisualrange_ts.readingposition_value as varchar), '(' || airport_heliport.runwayvisualrange_ts.readingposition_nilreason || ')') as readingposition,
    geometry_elevatedpoint_view_xvmbge.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_xvmbge.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_xvmbge.geom) AS location_latitude,
    geometry_elevatedpoint_view_xvmbge.elevation AS location_elevation,
    geometry_elevatedpoint_view_xvmbge.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_xvmbge.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_xvmbge.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_xvmbge.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runwaydirection_pt_haqdtl.id,
    'title', coalesce(cast(airport_heliport_runwaydirection_pt_haqdtl.title AS varchar), '(' || airport_heliport_runwaydirection_pt_haqdtl.nilreason[1] || ')'),
    'href', airport_heliport_runwaydirection_pt_haqdtl.href)) AS associatedrunwaydirection,
    jsonb_agg(DISTINCT notes_note_view_gdxxbx.*) AS annotation
from airport_heliport.runwayvisualrange 
inner join master_join mj2 on airport_heliport.runwayvisualrange.id = mj2.source_id
inner join airport_heliport.runwayvisualrange_tsp on mj2.target_id = airport_heliport.runwayvisualrange_tsp.id
inner join airport_heliport.runwayvisualrange_ts on airport_heliport.runwayvisualrange_tsp.runwayvisualrangetimeslice_id = airport_heliport.runwayvisualrange_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_xvmbge on airport_heliport.runwayvisualrange_ts.location_id = geometry_elevatedpoint_view_xvmbge.id
left join master_join master_join_vpkjmq on airport_heliport.runwayvisualrange_ts.id = master_join_vpkjmq.source_id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_haqdtl on master_join_vpkjmq.target_id = airport_heliport_runwaydirection_pt_haqdtl.id
left join master_join master_join_zpqjhe on airport_heliport.runwayvisualrange_ts.id = master_join_zpqjhe.source_id
left join notes.note_view notes_note_view_gdxxbx on master_join_zpqjhe.target_id = notes_note_view_gdxxbx.id
where airport_heliport.runwayvisualrange.feature_status = 'APPROVED'
  and airport_heliport.runwayvisualrange_ts.feature_status = 'APPROVED'
group by
    airport_heliport.runwayvisualrange.id,
    airport_heliport.runwayvisualrange_ts.id,
    airport_heliport.runwayvisualrange_tsp.id,
    airport_heliport.runwayvisualrange.identifier,
    airport_heliport.runwayvisualrange_ts.interpretation,
    airport_heliport.runwayvisualrange_ts.sequence_number,
    airport_heliport.runwayvisualrange_ts.correction_number,
    airport_heliport.runwayvisualrange_ts.valid_time_begin,
    airport_heliport.runwayvisualrange_ts.valid_time_end,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_begin,
    airport_heliport.runwayvisualrange_ts.feature_lifetime_end,
    airport_heliport.runwayvisualrange_ts.readingposition_value,
    airport_heliport.runwayvisualrange_ts.readingposition_nilreason,
    geometry_elevatedpoint_view_xvmbge.geom,
    geometry_elevatedpoint_view_xvmbge.elevation,
    geometry_elevatedpoint_view_xvmbge.geoidUndulation,
    geometry_elevatedpoint_view_xvmbge.verticalDatum,
    geometry_elevatedpoint_view_xvmbge.verticalAccuracy,
    geometry_elevatedpoint_view_xvmbge.horizontalAccuracy
order by runwayvisualrange.identifier, runwayvisualrange_ts.sequence_number, runwayvisualrange_ts.correction_number DESC;
create index on airport_heliport.runwayvisualrange_view (id);
-- SafeAltitudeAreaTimeSliceType
-- ['geometry.point_view', 'notes.note_view', 'procedure.safealtitudeareasector_view']
drop materialized view if exists procedure.safealtitudearea_view cascade;
create materialized view procedure.safealtitudearea_view as
select distinct on (safealtitudearea.identifier,safealtitudearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.safealtitudearea.id,
    procedure.safealtitudearea_ts.id as ts_id,
    procedure.safealtitudearea_tsp.id as tsp_id,
    procedure.safealtitudearea.identifier,
    procedure.safealtitudearea_ts.interpretation,
    procedure.safealtitudearea_ts.sequence_number,
    procedure.safealtitudearea_ts.correction_number,
    procedure.safealtitudearea_ts.valid_time_begin,
    procedure.safealtitudearea_ts.valid_time_end,
    procedure.safealtitudearea_ts.feature_lifetime_begin,
    procedure.safealtitudearea_ts.feature_lifetime_end,
    coalesce(cast(procedure.safealtitudearea_ts.safeareatype_value as varchar), '(' || procedure.safealtitudearea_ts.safeareatype_nilreason || ')') as safeareatype,
    coalesce(cast(navaids_points_designatedpoint_pt_wlxjym.title as varchar), '(' || navaids_points_designatedpoint_pt_wlxjym.nilreason[1] || ')') AS centrepointfixdesignatedpoint,
    navaids_points_designatedpoint_pt_wlxjym.href AS centrepointfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_ublvjf.title as varchar), '(' || navaids_points_navaid_pt_ublvjf.nilreason[1] || ')') AS centrepointnavaidsystem,
    navaids_points_navaid_pt_ublvjf.href AS centrepointnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_trhkzm.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_trhkzm.nilreason[1] || ')') AS centrepointaimingpoint,
    airport_heliport_touchdownliftoff_pt_trhkzm.href AS centrepointaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_payqsi.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_payqsi.nilreason[1] || ')') AS centrepointrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_payqsi.href AS centrepointrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_rnclvt.title as varchar), '(' || airport_heliport_airportheliport_pt_rnclvt.nilreason[1] || ')') AS centrepointairportreferencepoint,
    airport_heliport_airportheliport_pt_rnclvt.href AS centrepointairportreferencepoint_href,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_drjnpp.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_drjnpp.title AS varchar), '(' || airport_heliport_airportheliport_pt_drjnpp.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_drjnpp.href)) AS location,
    geometry_point_view_yikzps.geom AS centrepointposition_geom,
    ST_X(geometry_point_view_yikzps.geom) AS centrepointposition_longitude,
    ST_Y(geometry_point_view_yikzps.geom) AS centrepointposition_latitude,
    geometry_point_view_yikzps.horizontalAccuracy AS centrepointposition_horizontalaccuracy,
    jsonb_agg(procedure_safealtitudeareasector_view_sabjur.id) AS sector,
    jsonb_agg(DISTINCT notes_note_view_gpzfng.*) AS annotation
from procedure.safealtitudearea 
inner join master_join mj2 on procedure.safealtitudearea.id = mj2.source_id
inner join procedure.safealtitudearea_tsp on mj2.target_id = procedure.safealtitudearea_tsp.id
inner join procedure.safealtitudearea_ts on procedure.safealtitudearea_tsp.safealtitudeareatimeslice_id = procedure.safealtitudearea_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_wlxjym on procedure.safealtitudearea_ts.centrepoint_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_wlxjym.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ublvjf on procedure.safealtitudearea_ts.centrepoint_navaidsystem_id = navaids_points_navaid_pt_ublvjf.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_trhkzm on procedure.safealtitudearea_ts.centrepoint_aimingpoint_id = airport_heliport_touchdownliftoff_pt_trhkzm.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_payqsi on procedure.safealtitudearea_ts.centrepoint_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_payqsi.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_rnclvt on procedure.safealtitudearea_ts.centrepoint_airportreferencepoint_id = airport_heliport_airportheliport_pt_rnclvt.id
left join geometry.point_view geometry_point_view_yikzps on procedure.safealtitudearea_ts.centrepoint_position_id = geometry_point_view_yikzps.id
left join master_join master_join_ivtymr on procedure.safealtitudearea_ts.id = master_join_ivtymr.source_id
left join procedure.safealtitudeareasector_view procedure_safealtitudeareasector_view_sabjur on master_join_ivtymr.target_id = procedure_safealtitudeareasector_view_sabjur.id
left join master_join master_join_nrfonz on procedure.safealtitudearea_ts.id = master_join_nrfonz.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_drjnpp on master_join_nrfonz.target_id = airport_heliport_airportheliport_pt_drjnpp.id
left join master_join master_join_lxtyjh on procedure.safealtitudearea_ts.id = master_join_lxtyjh.source_id
left join notes.note_view notes_note_view_gpzfng on master_join_lxtyjh.target_id = notes_note_view_gpzfng.id
where procedure.safealtitudearea.feature_status = 'APPROVED'
  and procedure.safealtitudearea_ts.feature_status = 'APPROVED'
group by
    procedure.safealtitudearea.id,
    procedure.safealtitudearea_ts.id,
    procedure.safealtitudearea_tsp.id,
    procedure.safealtitudearea.identifier,
    procedure.safealtitudearea_ts.interpretation,
    procedure.safealtitudearea_ts.sequence_number,
    procedure.safealtitudearea_ts.correction_number,
    procedure.safealtitudearea_ts.valid_time_begin,
    procedure.safealtitudearea_ts.valid_time_end,
    procedure.safealtitudearea_ts.feature_lifetime_begin,
    procedure.safealtitudearea_ts.feature_lifetime_end,
    procedure.safealtitudearea_ts.safeareatype_value,
    procedure.safealtitudearea_ts.safeareatype_nilreason,
    navaids_points_designatedpoint_pt_wlxjym.title,
    navaids_points_designatedpoint_pt_wlxjym.nilreason[1],
    navaids_points_designatedpoint_pt_wlxjym.href,
    navaids_points_navaid_pt_ublvjf.title,
    navaids_points_navaid_pt_ublvjf.nilreason[1],
    navaids_points_navaid_pt_ublvjf.href,
    airport_heliport_touchdownliftoff_pt_trhkzm.title,
    airport_heliport_touchdownliftoff_pt_trhkzm.nilreason[1],
    airport_heliport_touchdownliftoff_pt_trhkzm.href,
    airport_heliport_runwaycentrelinepoint_pt_payqsi.title,
    airport_heliport_runwaycentrelinepoint_pt_payqsi.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_payqsi.href,
    airport_heliport_airportheliport_pt_rnclvt.title,
    airport_heliport_airportheliport_pt_rnclvt.nilreason[1],
    airport_heliport_airportheliport_pt_rnclvt.href,
    geometry_point_view_yikzps.geom,
    geometry_point_view_yikzps.horizontalAccuracy
order by safealtitudearea.identifier, safealtitudearea_ts.sequence_number, safealtitudearea_ts.correction_number DESC;
create index on procedure.safealtitudearea_view (id);
-- SDFTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.sdf_view cascade;
create materialized view navaids_points.sdf_view as
select distinct on (sdf.identifier,sdf_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.sdf.id,
    navaids_points.sdf_ts.id as ts_id,
    navaids_points.sdf_tsp.id as tsp_id,
    navaids_points.sdf.identifier,
    navaids_points.sdf_ts.interpretation,
    navaids_points.sdf_ts.sequence_number,
    navaids_points.sdf_ts.correction_number,
    navaids_points.sdf_ts.valid_time_begin,
    navaids_points.sdf_ts.valid_time_end,
    navaids_points.sdf_ts.feature_lifetime_begin,
    navaids_points.sdf_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.sdf_ts.designator_value as varchar), '(' || navaids_points.sdf_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.sdf_ts.name_value as varchar), '(' || navaids_points.sdf_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.sdf_ts.emissionclass_value as varchar), '(' || navaids_points.sdf_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.sdf_ts.mobile_value as varchar), '(' || navaids_points.sdf_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.sdf_ts.magneticvariation_value as varchar), '(' || navaids_points.sdf_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.sdf_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.sdf_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.sdf_ts.datemagneticvariation_value as varchar), '(' || navaids_points.sdf_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.sdf_ts.flightchecked_value as varchar), '(' || navaids_points.sdf_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.sdf_ts.magneticbearing_value as varchar), '(' || navaids_points.sdf_ts.magneticbearing_nilreason || ')') as magneticbearing,
    coalesce(cast(navaids_points.sdf_ts.truebearing_value as varchar), '(' || navaids_points.sdf_ts.truebearing_nilreason || ')') as truebearing,
    coalesce(cast(navaids_points.sdf_ts.frequency_value as varchar) || ' ' || navaids_points.sdf_ts.frequency_uom, '(' || navaids_points.sdf_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_xduqsy.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_xduqsy.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_xduqsy.geom) AS location_latitude,
    geometry_elevatedpoint_view_xduqsy.elevation AS location_elevation,
    geometry_elevatedpoint_view_xduqsy.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_xduqsy.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_xduqsy.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_xduqsy.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_gxyxpu.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_hidvno.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_tthxhv.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_guyzdf.*) AS annotation
from navaids_points.sdf 
inner join master_join mj2 on navaids_points.sdf.id = mj2.source_id
inner join navaids_points.sdf_tsp on mj2.target_id = navaids_points.sdf_tsp.id
inner join navaids_points.sdf_ts on navaids_points.sdf_tsp.sdftimeslice_id = navaids_points.sdf_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_xduqsy on navaids_points.sdf_ts.location_id = geometry_elevatedpoint_view_xduqsy.id
left join master_join master_join_dmksyo on navaids_points.sdf_ts.id = master_join_dmksyo.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_gxyxpu on master_join_dmksyo.target_id = navaids_points_authorityfornavaidequipment_view_gxyxpu.id
left join master_join master_join_twzwkw on navaids_points.sdf_ts.id = master_join_twzwkw.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_hidvno on master_join_twzwkw.target_id = navaids_points_navaidequipmentmonitoring_view_hidvno.id
left join master_join master_join_jadhlp on navaids_points.sdf_ts.id = master_join_jadhlp.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_tthxhv on master_join_jadhlp.target_id = navaids_points_navaidoperationalstatus_view_tthxhv.id
left join master_join master_join_xmzgrf on navaids_points.sdf_ts.id = master_join_xmzgrf.source_id
left join notes.note_view notes_note_view_guyzdf on master_join_xmzgrf.target_id = notes_note_view_guyzdf.id
where navaids_points.sdf.feature_status = 'APPROVED'
  and navaids_points.sdf_ts.feature_status = 'APPROVED'
group by
    navaids_points.sdf.id,
    navaids_points.sdf_ts.id,
    navaids_points.sdf_tsp.id,
    navaids_points.sdf.identifier,
    navaids_points.sdf_ts.interpretation,
    navaids_points.sdf_ts.sequence_number,
    navaids_points.sdf_ts.correction_number,
    navaids_points.sdf_ts.valid_time_begin,
    navaids_points.sdf_ts.valid_time_end,
    navaids_points.sdf_ts.feature_lifetime_begin,
    navaids_points.sdf_ts.feature_lifetime_end,
    navaids_points.sdf_ts.designator_value,
    navaids_points.sdf_ts.designator_nilreason,
    navaids_points.sdf_ts.name_value,
    navaids_points.sdf_ts.name_nilreason,
    navaids_points.sdf_ts.emissionclass_value,
    navaids_points.sdf_ts.emissionclass_nilreason,
    navaids_points.sdf_ts.mobile_value,
    navaids_points.sdf_ts.mobile_nilreason,
    navaids_points.sdf_ts.magneticvariation_value,
    navaids_points.sdf_ts.magneticvariation_nilreason,
    navaids_points.sdf_ts.magneticvariationaccuracy_value,
    navaids_points.sdf_ts.magneticvariationaccuracy_nilreason,
    navaids_points.sdf_ts.datemagneticvariation_value,
    navaids_points.sdf_ts.datemagneticvariation_nilreason,
    navaids_points.sdf_ts.flightchecked_value,
    navaids_points.sdf_ts.flightchecked_nilreason,
    navaids_points.sdf_ts.magneticbearing_value,
    navaids_points.sdf_ts.magneticbearing_nilreason,
    navaids_points.sdf_ts.truebearing_value,
    navaids_points.sdf_ts.truebearing_nilreason,
    navaids_points.sdf_ts.frequency_value,
    navaids_points.sdf_ts.frequency_uom,
    navaids_points.sdf_ts.frequency_nilreason,
    geometry_elevatedpoint_view_xduqsy.geom,
    geometry_elevatedpoint_view_xduqsy.elevation,
    geometry_elevatedpoint_view_xduqsy.geoidUndulation,
    geometry_elevatedpoint_view_xduqsy.verticalDatum,
    geometry_elevatedpoint_view_xduqsy.verticalAccuracy,
    geometry_elevatedpoint_view_xduqsy.horizontalAccuracy
order by sdf.identifier, sdf_ts.sequence_number, sdf_ts.correction_number DESC;
create index on navaids_points.sdf_view (id);
-- SeaplaneLandingAreaTimeSliceType
-- ['airport_heliport.manoeuvringareaavailability_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.seaplanelandingarea_view cascade;
create materialized view airport_heliport.seaplanelandingarea_view as
select distinct on (seaplanelandingarea.identifier,seaplanelandingarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.seaplanelandingarea.id,
    airport_heliport.seaplanelandingarea_ts.id as ts_id,
    airport_heliport.seaplanelandingarea_tsp.id as tsp_id,
    airport_heliport.seaplanelandingarea.identifier,
    airport_heliport.seaplanelandingarea_ts.interpretation,
    airport_heliport.seaplanelandingarea_ts.sequence_number,
    airport_heliport.seaplanelandingarea_ts.correction_number,
    airport_heliport.seaplanelandingarea_ts.valid_time_begin,
    airport_heliport.seaplanelandingarea_ts.valid_time_end,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_begin,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_rqacyx.geom AS extent_geom,
    geometry_elevatedsurface_view_rqacyx.elevation AS extent_elevation,
    geometry_elevatedsurface_view_rqacyx.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_rqacyx.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_rqacyx.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_rqacyx.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_seaplanerampsite_pt_qgvbtl.id,
    'title', coalesce(cast(airport_heliport_seaplanerampsite_pt_qgvbtl.title AS varchar), '(' || airport_heliport_seaplanerampsite_pt_qgvbtl.nilreason[1] || ')'),
    'href', airport_heliport_seaplanerampsite_pt_qgvbtl.href)) AS rampsite,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_floatingdocksite_pt_cdcnkg.id,
    'title', coalesce(cast(airport_heliport_floatingdocksite_pt_cdcnkg.title AS varchar), '(' || airport_heliport_floatingdocksite_pt_cdcnkg.nilreason[1] || ')'),
    'href', airport_heliport_floatingdocksite_pt_cdcnkg.href)) AS docksite,
    jsonb_agg(DISTINCT notes_note_view_iwxtaq.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_xthgso.id) AS availability
from airport_heliport.seaplanelandingarea 
inner join master_join mj2 on airport_heliport.seaplanelandingarea.id = mj2.source_id
inner join airport_heliport.seaplanelandingarea_tsp on mj2.target_id = airport_heliport.seaplanelandingarea_tsp.id
inner join airport_heliport.seaplanelandingarea_ts on airport_heliport.seaplanelandingarea_tsp.seaplanelandingareatimeslice_id = airport_heliport.seaplanelandingarea_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_rqacyx on airport_heliport.seaplanelandingarea_ts.extent_id = geometry_elevatedsurface_view_rqacyx.id
left join master_join master_join_fvyxxm on airport_heliport.seaplanelandingarea_ts.id = master_join_fvyxxm.source_id
left join airport_heliport.seaplanerampsite_pt airport_heliport_seaplanerampsite_pt_qgvbtl on master_join_fvyxxm.target_id = airport_heliport_seaplanerampsite_pt_qgvbtl.id
left join master_join master_join_zqcryl on airport_heliport.seaplanelandingarea_ts.id = master_join_zqcryl.source_id
left join airport_heliport.floatingdocksite_pt airport_heliport_floatingdocksite_pt_cdcnkg on master_join_zqcryl.target_id = airport_heliport_floatingdocksite_pt_cdcnkg.id
left join master_join master_join_nnwerf on airport_heliport.seaplanelandingarea_ts.id = master_join_nnwerf.source_id
left join notes.note_view notes_note_view_iwxtaq on master_join_nnwerf.target_id = notes_note_view_iwxtaq.id
left join master_join master_join_zklisw on airport_heliport.seaplanelandingarea_ts.id = master_join_zklisw.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_xthgso on master_join_zklisw.target_id = airport_heliport_manoeuvringareaavailability_view_xthgso.id
where airport_heliport.seaplanelandingarea.feature_status = 'APPROVED'
  and airport_heliport.seaplanelandingarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.seaplanelandingarea.id,
    airport_heliport.seaplanelandingarea_ts.id,
    airport_heliport.seaplanelandingarea_tsp.id,
    airport_heliport.seaplanelandingarea.identifier,
    airport_heliport.seaplanelandingarea_ts.interpretation,
    airport_heliport.seaplanelandingarea_ts.sequence_number,
    airport_heliport.seaplanelandingarea_ts.correction_number,
    airport_heliport.seaplanelandingarea_ts.valid_time_begin,
    airport_heliport.seaplanelandingarea_ts.valid_time_end,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_begin,
    airport_heliport.seaplanelandingarea_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_rqacyx.geom,
    geometry_elevatedsurface_view_rqacyx.elevation,
    geometry_elevatedsurface_view_rqacyx.geoidUndulation,
    geometry_elevatedsurface_view_rqacyx.verticalDatum,
    geometry_elevatedsurface_view_rqacyx.verticalAccuracy,
    geometry_elevatedsurface_view_rqacyx.horizontalAccuracy
order by seaplanelandingarea.identifier, seaplanelandingarea_ts.sequence_number, seaplanelandingarea_ts.correction_number DESC;
create index on airport_heliport.seaplanelandingarea_view (id);
-- SeaplaneRampSiteTimeSliceType
-- ['geometry.elevatedcurve_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.seaplanerampsite_view cascade;
create materialized view airport_heliport.seaplanerampsite_view as
select distinct on (seaplanerampsite.identifier,seaplanerampsite_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.seaplanerampsite.id,
    airport_heliport.seaplanerampsite_ts.id as ts_id,
    airport_heliport.seaplanerampsite_tsp.id as tsp_id,
    airport_heliport.seaplanerampsite.identifier,
    airport_heliport.seaplanerampsite_ts.interpretation,
    airport_heliport.seaplanerampsite_ts.sequence_number,
    airport_heliport.seaplanerampsite_ts.correction_number,
    airport_heliport.seaplanerampsite_ts.valid_time_begin,
    airport_heliport.seaplanerampsite_ts.valid_time_end,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_begin,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_ubqjyu.geom AS extent_geom,
    geometry_elevatedsurface_view_ubqjyu.elevation AS extent_elevation,
    geometry_elevatedsurface_view_ubqjyu.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_ubqjyu.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_ubqjyu.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_ubqjyu.horizontalAccuracy AS extent_horizontalaccuracy,
    geometry_elevatedcurve_view_dvmyhc.geom AS centreline_geom,
    geometry_elevatedcurve_view_dvmyhc.elevation AS centreline_elevation,
    geometry_elevatedcurve_view_dvmyhc.geoidUndulation AS centreline_geoidundulation,
    geometry_elevatedcurve_view_dvmyhc.verticalDatum AS centreline_verticaldatum,
    geometry_elevatedcurve_view_dvmyhc.verticalAccuracy AS centreline_verticalaccuracy,
    geometry_elevatedcurve_view_dvmyhc.horizontalAccuracy AS centreline_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_oknhxj.*) AS annotation
from airport_heliport.seaplanerampsite 
inner join master_join mj2 on airport_heliport.seaplanerampsite.id = mj2.source_id
inner join airport_heliport.seaplanerampsite_tsp on mj2.target_id = airport_heliport.seaplanerampsite_tsp.id
inner join airport_heliport.seaplanerampsite_ts on airport_heliport.seaplanerampsite_tsp.seaplanerampsitetimeslice_id = airport_heliport.seaplanerampsite_ts.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_ubqjyu on airport_heliport.seaplanerampsite_ts.extent_id = geometry_elevatedsurface_view_ubqjyu.id
left join geometry.elevatedcurve_view geometry_elevatedcurve_view_dvmyhc on airport_heliport.seaplanerampsite_ts.centreline_id = geometry_elevatedcurve_view_dvmyhc.id
left join master_join master_join_bgqjez on airport_heliport.seaplanerampsite_ts.id = master_join_bgqjez.source_id
left join notes.note_view notes_note_view_oknhxj on master_join_bgqjez.target_id = notes_note_view_oknhxj.id
where airport_heliport.seaplanerampsite.feature_status = 'APPROVED'
  and airport_heliport.seaplanerampsite_ts.feature_status = 'APPROVED'
group by
    airport_heliport.seaplanerampsite.id,
    airport_heliport.seaplanerampsite_ts.id,
    airport_heliport.seaplanerampsite_tsp.id,
    airport_heliport.seaplanerampsite.identifier,
    airport_heliport.seaplanerampsite_ts.interpretation,
    airport_heliport.seaplanerampsite_ts.sequence_number,
    airport_heliport.seaplanerampsite_ts.correction_number,
    airport_heliport.seaplanerampsite_ts.valid_time_begin,
    airport_heliport.seaplanerampsite_ts.valid_time_end,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_begin,
    airport_heliport.seaplanerampsite_ts.feature_lifetime_end,
    geometry_elevatedsurface_view_ubqjyu.geom,
    geometry_elevatedsurface_view_ubqjyu.elevation,
    geometry_elevatedsurface_view_ubqjyu.geoidUndulation,
    geometry_elevatedsurface_view_ubqjyu.verticalDatum,
    geometry_elevatedsurface_view_ubqjyu.verticalAccuracy,
    geometry_elevatedsurface_view_ubqjyu.horizontalAccuracy,
    geometry_elevatedcurve_view_dvmyhc.geom,
    geometry_elevatedcurve_view_dvmyhc.elevation,
    geometry_elevatedcurve_view_dvmyhc.geoidUndulation,
    geometry_elevatedcurve_view_dvmyhc.verticalDatum,
    geometry_elevatedcurve_view_dvmyhc.verticalAccuracy,
    geometry_elevatedcurve_view_dvmyhc.horizontalAccuracy
order by seaplanerampsite.identifier, seaplanerampsite_ts.sequence_number, seaplanerampsite_ts.correction_number DESC;
create index on airport_heliport.seaplanerampsite_view (id);
-- SearchRescueServiceTimeSliceType
-- ['service.serviceoperationalstatus_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view', 'routes.routeportion_view', 'service.callsigndetail_view', 'notes.note_view']
drop materialized view if exists service.searchrescueservice_view cascade;
create materialized view service.searchrescueservice_view as
select distinct on (searchrescueservice.identifier,searchrescueservice_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    service.searchrescueservice.id,
    service.searchrescueservice_ts.id as ts_id,
    service.searchrescueservice_tsp.id as tsp_id,
    service.searchrescueservice.identifier,
    service.searchrescueservice_ts.interpretation,
    service.searchrescueservice_ts.sequence_number,
    service.searchrescueservice_ts.correction_number,
    service.searchrescueservice_ts.valid_time_begin,
    service.searchrescueservice_ts.valid_time_end,
    service.searchrescueservice_ts.feature_lifetime_begin,
    service.searchrescueservice_ts.feature_lifetime_end,
    coalesce(cast(service.searchrescueservice_ts.flightoperations_value as varchar), '(' || service.searchrescueservice_ts.flightoperations_nilreason || ')') as flightoperations,
    coalesce(cast(service.searchrescueservice_ts.rank_value as varchar), '(' || service.searchrescueservice_ts.rank_nilreason || ')') as rank,
    coalesce(cast(service.searchrescueservice_ts.complianticao_value as varchar), '(' || service.searchrescueservice_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(service.searchrescueservice_ts.name_value as varchar), '(' || service.searchrescueservice_ts.name_nilreason || ')') as name,
    coalesce(cast(service.searchrescueservice_ts.type_value as varchar), '(' || service.searchrescueservice_ts.type_nilreason || ')') as type,
    geometry_elevatedpoint_view_fmaogh.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_fmaogh.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_fmaogh.geom) AS location_latitude,
    geometry_elevatedpoint_view_fmaogh.elevation AS location_elevation,
    geometry_elevatedpoint_view_fmaogh.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_fmaogh.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_fmaogh.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_fmaogh.horizontalAccuracy AS location_horizontalaccuracy,
    coalesce(cast(organisation_unit_pt_zzncuy.title as varchar), '(' || organisation_unit_pt_zzncuy.nilreason[1] || ')') AS serviceprovider,
    organisation_unit_pt_zzncuy.href AS serviceprovider_href,
    jsonb_agg(service_callsigndetail_view_fzevxo.id) AS callsign,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_radiocommunicationchannel_pt_zyeder.id,
    'title', coalesce(cast(service_radiocommunicationchannel_pt_zyeder.title AS varchar), '(' || service_radiocommunicationchannel_pt_zyeder.nilreason[1] || ')'),
    'href', service_radiocommunicationchannel_pt_zyeder.href)) AS radiocommunication,
    jsonb_agg(service_serviceoperationalstatus_view_mgeuhf.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_rwnmyv.*) AS annotation,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_jlpsxc.id,
    'title', coalesce(cast(airspace_airspace_pt_jlpsxc.title AS varchar), '(' || airspace_airspace_pt_jlpsxc.nilreason[1] || ')'),
    'href', airspace_airspace_pt_jlpsxc.href)) AS clientairspace,
    jsonb_agg(routes_routeportion_view_aphxnv.id) AS clientroute
from service.searchrescueservice 
inner join master_join mj2 on service.searchrescueservice.id = mj2.source_id
inner join service.searchrescueservice_tsp on mj2.target_id = service.searchrescueservice_tsp.id
inner join service.searchrescueservice_ts on service.searchrescueservice_tsp.searchrescueservicetimeslice_id = service.searchrescueservice_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_fmaogh on service.searchrescueservice_ts.location_id = geometry_elevatedpoint_view_fmaogh.id
left join organisation.unit_pt organisation_unit_pt_zzncuy on service.searchrescueservice_ts.serviceprovider_id = organisation_unit_pt_zzncuy.id
left join master_join master_join_xkuorq on service.searchrescueservice_ts.id = master_join_xkuorq.source_id
left join service.callsigndetail_view service_callsigndetail_view_fzevxo on master_join_xkuorq.target_id = service_callsigndetail_view_fzevxo.id
left join master_join master_join_hrskpr on service.searchrescueservice_ts.id = master_join_hrskpr.source_id
left join service.radiocommunicationchannel_pt service_radiocommunicationchannel_pt_zyeder on master_join_hrskpr.target_id = service_radiocommunicationchannel_pt_zyeder.id
left join master_join master_join_atcwje on service.searchrescueservice_ts.id = master_join_atcwje.source_id
left join shared.contactinformation_view shared_contactinformation_view_etzcko on master_join_atcwje.target_id = shared_contactinformation_view_etzcko.id
left join master_join master_join_fclkpl on service.searchrescueservice_ts.id = master_join_fclkpl.source_id
left join service.serviceoperationalstatus_view service_serviceoperationalstatus_view_mgeuhf on master_join_fclkpl.target_id = service_serviceoperationalstatus_view_mgeuhf.id
left join master_join master_join_gvqpam on service.searchrescueservice_ts.id = master_join_gvqpam.source_id
left join notes.note_view notes_note_view_rwnmyv on master_join_gvqpam.target_id = notes_note_view_rwnmyv.id
left join master_join master_join_ntreyg on service.searchrescueservice_ts.id = master_join_ntreyg.source_id
left join airspace.airspace_pt airspace_airspace_pt_jlpsxc on master_join_ntreyg.target_id = airspace_airspace_pt_jlpsxc.id
left join master_join master_join_snceym on service.searchrescueservice_ts.id = master_join_snceym.source_id
left join routes.routeportion_view routes_routeportion_view_aphxnv on master_join_snceym.target_id = routes_routeportion_view_aphxnv.id
where service.searchrescueservice.feature_status = 'APPROVED'
  and service.searchrescueservice_ts.feature_status = 'APPROVED'
group by
    service.searchrescueservice.id,
    service.searchrescueservice_ts.id,
    service.searchrescueservice_tsp.id,
    service.searchrescueservice.identifier,
    service.searchrescueservice_ts.interpretation,
    service.searchrescueservice_ts.sequence_number,
    service.searchrescueservice_ts.correction_number,
    service.searchrescueservice_ts.valid_time_begin,
    service.searchrescueservice_ts.valid_time_end,
    service.searchrescueservice_ts.feature_lifetime_begin,
    service.searchrescueservice_ts.feature_lifetime_end,
    service.searchrescueservice_ts.flightoperations_value,
    service.searchrescueservice_ts.flightoperations_nilreason,
    service.searchrescueservice_ts.rank_value,
    service.searchrescueservice_ts.rank_nilreason,
    service.searchrescueservice_ts.complianticao_value,
    service.searchrescueservice_ts.complianticao_nilreason,
    service.searchrescueservice_ts.name_value,
    service.searchrescueservice_ts.name_nilreason,
    service.searchrescueservice_ts.type_value,
    service.searchrescueservice_ts.type_nilreason,
    geometry_elevatedpoint_view_fmaogh.geom,
    geometry_elevatedpoint_view_fmaogh.elevation,
    geometry_elevatedpoint_view_fmaogh.geoidUndulation,
    geometry_elevatedpoint_view_fmaogh.verticalDatum,
    geometry_elevatedpoint_view_fmaogh.verticalAccuracy,
    geometry_elevatedpoint_view_fmaogh.horizontalAccuracy,
    organisation_unit_pt_zzncuy.title,
    organisation_unit_pt_zzncuy.nilreason[1],
    organisation_unit_pt_zzncuy.href
order by searchrescueservice.identifier, searchrescueservice_ts.sequence_number, searchrescueservice_ts.correction_number DESC;
create index on service.searchrescueservice_view (id);
-- SecondarySurveillanceRadarTimeSliceType
-- ['notes.note_view', 'surveillance.surveillancegroundstation_view', 'geometry.elevatedpoint_view', 'shared.contactinformation_view']
drop materialized view if exists surveillance.secondarysurveillanceradar_view cascade;
create materialized view surveillance.secondarysurveillanceradar_view as
select distinct on (secondarysurveillanceradar.identifier,secondarysurveillanceradar_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    surveillance.secondarysurveillanceradar.id,
    surveillance.secondarysurveillanceradar_ts.id as ts_id,
    surveillance.secondarysurveillanceradar_tsp.id as tsp_id,
    surveillance.secondarysurveillanceradar.identifier,
    surveillance.secondarysurveillanceradar_ts.interpretation,
    surveillance.secondarysurveillanceradar_ts.sequence_number,
    surveillance.secondarysurveillanceradar_ts.correction_number,
    surveillance.secondarysurveillanceradar_ts.valid_time_begin,
    surveillance.secondarysurveillanceradar_ts.valid_time_end,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_end,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.name_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.name_nilreason || ')') as name,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.serialnumber_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.serialnumber_nilreason || ')') as serialnumber,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.dualchannel_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.dualchannel_nilreason || ')') as dualchannel,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.movingtargetindicator_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.movingtargetindicator_nilreason || ')') as movingtargetindicator,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.standbypower_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.standbypower_nilreason || ')') as standbypower,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.digital_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.digital_nilreason || ')') as digital,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.militaryuseonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.militaryuseonly_nilreason || ')') as militaryuseonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.specialuseonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.specialuseonly_nilreason || ')') as specialuseonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.specialaircraftonly_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.specialaircraftonly_nilreason || ')') as specialaircraftonly,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.magneticvariation_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.datemagneticvariation_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_nilreason || ')') as verticalcoverageazimuth,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.antennatiltfixed_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.antennatiltfixed_nilreason || ')') as antennatiltfixed,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.tiltangle_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.tiltangle_nilreason || ')') as tiltangle,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_nilreason || ')') as automatedradarterminalsystem,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.transponder_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.transponder_nilreason || ')') as transponder,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.autonomous_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.autonomous_nilreason || ')') as autonomous,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.monopulse_value as varchar), '(' || surveillance.secondarysurveillanceradar_ts.monopulse_nilreason || ')') as monopulse,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.range_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.range_uom, '(' || surveillance.secondarysurveillanceradar_ts.range_nilreason || ')') as range,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.rangeaccuracy_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.rangeaccuracy_uom, '(' || surveillance.secondarysurveillanceradar_ts.rangeaccuracy_nilreason || ')') as rangeaccuracy,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_uom, '(' || surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_nilreason || ')') as verticalcoveragealtitude,
    coalesce(cast(surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_value as varchar) || ' ' || surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_uom, '(' || surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_nilreason || ')') as verticalcoveragedistance,
    geometry_elevatedpoint_view_dztvkd.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_dztvkd.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_dztvkd.geom) AS location_latitude,
    geometry_elevatedpoint_view_dztvkd.elevation AS location_elevation,
    geometry_elevatedpoint_view_dztvkd.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_dztvkd.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_dztvkd.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_dztvkd.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_pkpfbw.*) AS annotation,
    jsonb_agg(surveillance_surveillancegroundstation_view_xcuzra.id) AS groundstation
from surveillance.secondarysurveillanceradar 
inner join master_join mj2 on surveillance.secondarysurveillanceradar.id = mj2.source_id
inner join surveillance.secondarysurveillanceradar_tsp on mj2.target_id = surveillance.secondarysurveillanceradar_tsp.id
inner join surveillance.secondarysurveillanceradar_ts on surveillance.secondarysurveillanceradar_tsp.secondarysurveillanceradartimeslice_id = surveillance.secondarysurveillanceradar_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_dztvkd on surveillance.secondarysurveillanceradar_ts.location_id = geometry_elevatedpoint_view_dztvkd.id
left join master_join master_join_avpriq on surveillance.secondarysurveillanceradar_ts.id = master_join_avpriq.source_id
left join shared.contactinformation_view shared_contactinformation_view_gnzxnw on master_join_avpriq.target_id = shared_contactinformation_view_gnzxnw.id
left join master_join master_join_egaqpy on surveillance.secondarysurveillanceradar_ts.id = master_join_egaqpy.source_id
left join notes.note_view notes_note_view_pkpfbw on master_join_egaqpy.target_id = notes_note_view_pkpfbw.id
left join master_join master_join_sewbpo on surveillance.secondarysurveillanceradar_ts.id = master_join_sewbpo.source_id
left join surveillance.surveillancegroundstation_view surveillance_surveillancegroundstation_view_xcuzra on master_join_sewbpo.target_id = surveillance_surveillancegroundstation_view_xcuzra.id
where surveillance.secondarysurveillanceradar.feature_status = 'APPROVED'
  and surveillance.secondarysurveillanceradar_ts.feature_status = 'APPROVED'
group by
    surveillance.secondarysurveillanceradar.id,
    surveillance.secondarysurveillanceradar_ts.id,
    surveillance.secondarysurveillanceradar_tsp.id,
    surveillance.secondarysurveillanceradar.identifier,
    surveillance.secondarysurveillanceradar_ts.interpretation,
    surveillance.secondarysurveillanceradar_ts.sequence_number,
    surveillance.secondarysurveillanceradar_ts.correction_number,
    surveillance.secondarysurveillanceradar_ts.valid_time_begin,
    surveillance.secondarysurveillanceradar_ts.valid_time_end,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_begin,
    surveillance.secondarysurveillanceradar_ts.feature_lifetime_end,
    surveillance.secondarysurveillanceradar_ts.name_value,
    surveillance.secondarysurveillanceradar_ts.name_nilreason,
    surveillance.secondarysurveillanceradar_ts.serialnumber_value,
    surveillance.secondarysurveillanceradar_ts.serialnumber_nilreason,
    surveillance.secondarysurveillanceradar_ts.dualchannel_value,
    surveillance.secondarysurveillanceradar_ts.dualchannel_nilreason,
    surveillance.secondarysurveillanceradar_ts.movingtargetindicator_value,
    surveillance.secondarysurveillanceradar_ts.movingtargetindicator_nilreason,
    surveillance.secondarysurveillanceradar_ts.standbypower_value,
    surveillance.secondarysurveillanceradar_ts.standbypower_nilreason,
    surveillance.secondarysurveillanceradar_ts.digital_value,
    surveillance.secondarysurveillanceradar_ts.digital_nilreason,
    surveillance.secondarysurveillanceradar_ts.militaryuseonly_value,
    surveillance.secondarysurveillanceradar_ts.militaryuseonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.specialuseonly_value,
    surveillance.secondarysurveillanceradar_ts.specialuseonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.specialaircraftonly_value,
    surveillance.secondarysurveillanceradar_ts.specialaircraftonly_nilreason,
    surveillance.secondarysurveillanceradar_ts.magneticvariation_value,
    surveillance.secondarysurveillanceradar_ts.magneticvariation_nilreason,
    surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_value,
    surveillance.secondarysurveillanceradar_ts.magneticvariationaccuracy_nilreason,
    surveillance.secondarysurveillanceradar_ts.datemagneticvariation_value,
    surveillance.secondarysurveillanceradar_ts.datemagneticvariation_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoverageazimuth_nilreason,
    surveillance.secondarysurveillanceradar_ts.antennatiltfixed_value,
    surveillance.secondarysurveillanceradar_ts.antennatiltfixed_nilreason,
    surveillance.secondarysurveillanceradar_ts.tiltangle_value,
    surveillance.secondarysurveillanceradar_ts.tiltangle_nilreason,
    surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_value,
    surveillance.secondarysurveillanceradar_ts.automatedradarterminalsystem_nilreason,
    surveillance.secondarysurveillanceradar_ts.transponder_value,
    surveillance.secondarysurveillanceradar_ts.transponder_nilreason,
    surveillance.secondarysurveillanceradar_ts.autonomous_value,
    surveillance.secondarysurveillanceradar_ts.autonomous_nilreason,
    surveillance.secondarysurveillanceradar_ts.monopulse_value,
    surveillance.secondarysurveillanceradar_ts.monopulse_nilreason,
    surveillance.secondarysurveillanceradar_ts.range_value,
    surveillance.secondarysurveillanceradar_ts.range_uom,
    surveillance.secondarysurveillanceradar_ts.range_nilreason,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_value,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_uom,
    surveillance.secondarysurveillanceradar_ts.rangeaccuracy_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_uom,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragealtitude_nilreason,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_value,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_uom,
    surveillance.secondarysurveillanceradar_ts.verticalcoveragedistance_nilreason,
    geometry_elevatedpoint_view_dztvkd.geom,
    geometry_elevatedpoint_view_dztvkd.elevation,
    geometry_elevatedpoint_view_dztvkd.geoidUndulation,
    geometry_elevatedpoint_view_dztvkd.verticalDatum,
    geometry_elevatedpoint_view_dztvkd.verticalAccuracy,
    geometry_elevatedpoint_view_dztvkd.horizontalAccuracy
order by secondarysurveillanceradar.identifier, secondarysurveillanceradar_ts.sequence_number, secondarysurveillanceradar_ts.correction_number DESC;
create index on surveillance.secondarysurveillanceradar_view (id);
-- SignificantPointInAirspaceTimeSliceType
-- ['geometry.point_view', 'notes.note_view']
drop materialized view if exists navaids_points.significantpointinairspace_view cascade;
create materialized view navaids_points.significantpointinairspace_view as
select distinct on (significantpointinairspace.identifier,significantpointinairspace_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.significantpointinairspace.id,
    navaids_points.significantpointinairspace_ts.id as ts_id,
    navaids_points.significantpointinairspace_tsp.id as tsp_id,
    navaids_points.significantpointinairspace.identifier,
    navaids_points.significantpointinairspace_ts.interpretation,
    navaids_points.significantpointinairspace_ts.sequence_number,
    navaids_points.significantpointinairspace_ts.correction_number,
    navaids_points.significantpointinairspace_ts.valid_time_begin,
    navaids_points.significantpointinairspace_ts.valid_time_end,
    navaids_points.significantpointinairspace_ts.feature_lifetime_begin,
    navaids_points.significantpointinairspace_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.significantpointinairspace_ts.type_value as varchar), '(' || navaids_points.significantpointinairspace_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.significantpointinairspace_ts.relativelocation_value as varchar), '(' || navaids_points.significantpointinairspace_ts.relativelocation_nilreason || ')') as relativelocation,
    coalesce(cast(airspace_airspace_pt_mxzhym.title as varchar), '(' || airspace_airspace_pt_mxzhym.nilreason[1] || ')') AS containingairspace,
    airspace_airspace_pt_mxzhym.href AS containingairspace_href,
    coalesce(cast(navaids_points_designatedpoint_pt_voujos.title as varchar), '(' || navaids_points_designatedpoint_pt_voujos.nilreason[1] || ')') AS locationfixdesignatedpoint,
    navaids_points_designatedpoint_pt_voujos.href AS locationfixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_bmcnpe.title as varchar), '(' || navaids_points_navaid_pt_bmcnpe.nilreason[1] || ')') AS locationnavaidsystem,
    navaids_points_navaid_pt_bmcnpe.href AS locationnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_heeqsh.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_heeqsh.nilreason[1] || ')') AS locationaimingpoint,
    airport_heliport_touchdownliftoff_pt_heeqsh.href AS locationaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_xfwori.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_xfwori.nilreason[1] || ')') AS locationrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_xfwori.href AS locationrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ctcgmb.title as varchar), '(' || airport_heliport_airportheliport_pt_ctcgmb.nilreason[1] || ')') AS locationairportreferencepoint,
    airport_heliport_airportheliport_pt_ctcgmb.href AS locationairportreferencepoint_href,
    geometry_point_view_dhdcjh.geom AS locationposition_geom,
    ST_X(geometry_point_view_dhdcjh.geom) AS locationposition_longitude,
    ST_Y(geometry_point_view_dhdcjh.geom) AS locationposition_latitude,
    geometry_point_view_dhdcjh.horizontalAccuracy AS locationposition_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_fbxtes.*) AS annotation
from navaids_points.significantpointinairspace 
inner join master_join mj2 on navaids_points.significantpointinairspace.id = mj2.source_id
inner join navaids_points.significantpointinairspace_tsp on mj2.target_id = navaids_points.significantpointinairspace_tsp.id
inner join navaids_points.significantpointinairspace_ts on navaids_points.significantpointinairspace_tsp.significantpointinairspacetimeslice_id = navaids_points.significantpointinairspace_ts.id
left join airspace.airspace_pt airspace_airspace_pt_mxzhym on navaids_points.significantpointinairspace_ts.containingairspace_id = airspace_airspace_pt_mxzhym.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_voujos on navaids_points.significantpointinairspace_ts.location_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_voujos.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_bmcnpe on navaids_points.significantpointinairspace_ts.location_navaidsystem_id = navaids_points_navaid_pt_bmcnpe.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_heeqsh on navaids_points.significantpointinairspace_ts.location_aimingpoint_id = airport_heliport_touchdownliftoff_pt_heeqsh.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_xfwori on navaids_points.significantpointinairspace_ts.location_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_xfwori.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ctcgmb on navaids_points.significantpointinairspace_ts.location_airportreferencepoint_id = airport_heliport_airportheliport_pt_ctcgmb.id
left join geometry.point_view geometry_point_view_dhdcjh on navaids_points.significantpointinairspace_ts.location_position_id = geometry_point_view_dhdcjh.id
left join master_join master_join_fubclh on navaids_points.significantpointinairspace_ts.id = master_join_fubclh.source_id
left join notes.note_view notes_note_view_fbxtes on master_join_fubclh.target_id = notes_note_view_fbxtes.id
where navaids_points.significantpointinairspace.feature_status = 'APPROVED'
  and navaids_points.significantpointinairspace_ts.feature_status = 'APPROVED'
group by
    navaids_points.significantpointinairspace.id,
    navaids_points.significantpointinairspace_ts.id,
    navaids_points.significantpointinairspace_tsp.id,
    navaids_points.significantpointinairspace.identifier,
    navaids_points.significantpointinairspace_ts.interpretation,
    navaids_points.significantpointinairspace_ts.sequence_number,
    navaids_points.significantpointinairspace_ts.correction_number,
    navaids_points.significantpointinairspace_ts.valid_time_begin,
    navaids_points.significantpointinairspace_ts.valid_time_end,
    navaids_points.significantpointinairspace_ts.feature_lifetime_begin,
    navaids_points.significantpointinairspace_ts.feature_lifetime_end,
    navaids_points.significantpointinairspace_ts.type_value,
    navaids_points.significantpointinairspace_ts.type_nilreason,
    navaids_points.significantpointinairspace_ts.relativelocation_value,
    navaids_points.significantpointinairspace_ts.relativelocation_nilreason,
    airspace_airspace_pt_mxzhym.title,
    airspace_airspace_pt_mxzhym.nilreason[1],
    airspace_airspace_pt_mxzhym.href,
    navaids_points_designatedpoint_pt_voujos.title,
    navaids_points_designatedpoint_pt_voujos.nilreason[1],
    navaids_points_designatedpoint_pt_voujos.href,
    navaids_points_navaid_pt_bmcnpe.title,
    navaids_points_navaid_pt_bmcnpe.nilreason[1],
    navaids_points_navaid_pt_bmcnpe.href,
    airport_heliport_touchdownliftoff_pt_heeqsh.title,
    airport_heliport_touchdownliftoff_pt_heeqsh.nilreason[1],
    airport_heliport_touchdownliftoff_pt_heeqsh.href,
    airport_heliport_runwaycentrelinepoint_pt_xfwori.title,
    airport_heliport_runwaycentrelinepoint_pt_xfwori.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_xfwori.href,
    airport_heliport_airportheliport_pt_ctcgmb.title,
    airport_heliport_airportheliport_pt_ctcgmb.nilreason[1],
    airport_heliport_airportheliport_pt_ctcgmb.href,
    geometry_point_view_dhdcjh.geom,
    geometry_point_view_dhdcjh.horizontalAccuracy
order by significantpointinairspace.identifier, significantpointinairspace_ts.sequence_number, significantpointinairspace_ts.correction_number DESC;
create index on navaids_points.significantpointinairspace_view (id);
-- SpecialDateTimeSliceType
-- ['notes.note_view']
drop materialized view if exists shared.specialdate_view cascade;
create materialized view shared.specialdate_view as
select distinct on (specialdate.identifier,specialdate_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.specialdate.id,
    shared.specialdate_ts.id as ts_id,
    shared.specialdate_tsp.id as tsp_id,
    shared.specialdate.identifier,
    shared.specialdate_ts.interpretation,
    shared.specialdate_ts.sequence_number,
    shared.specialdate_ts.correction_number,
    shared.specialdate_ts.valid_time_begin,
    shared.specialdate_ts.valid_time_end,
    shared.specialdate_ts.feature_lifetime_begin,
    shared.specialdate_ts.feature_lifetime_end,
    coalesce(cast(shared.specialdate_ts.type_value as varchar), '(' || shared.specialdate_ts.type_nilreason || ')') as type,
    coalesce(cast(shared.specialdate_ts.dateday_value as varchar), '(' || shared.specialdate_ts.dateday_nilreason || ')') as dateday,
    coalesce(cast(shared.specialdate_ts.dateyear_value as varchar), '(' || shared.specialdate_ts.dateyear_nilreason || ')') as dateyear,
    coalesce(cast(shared.specialdate_ts.name_value as varchar), '(' || shared.specialdate_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation_organisationauthority_pt_maewrz.title as varchar), '(' || organisation_organisationauthority_pt_maewrz.nilreason[1] || ')') AS authority,
    organisation_organisationauthority_pt_maewrz.href AS authority_href,
    jsonb_agg(DISTINCT notes_note_view_lywfiz.*) AS annotation
from shared.specialdate 
inner join master_join mj2 on shared.specialdate.id = mj2.source_id
inner join shared.specialdate_tsp on mj2.target_id = shared.specialdate_tsp.id
inner join shared.specialdate_ts on shared.specialdate_tsp.specialdatetimeslice_id = shared.specialdate_ts.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_maewrz on shared.specialdate_ts.authority_id = organisation_organisationauthority_pt_maewrz.id
left join master_join master_join_zkmoze on shared.specialdate_ts.id = master_join_zkmoze.source_id
left join notes.note_view notes_note_view_lywfiz on master_join_zkmoze.target_id = notes_note_view_lywfiz.id
where shared.specialdate.feature_status = 'APPROVED'
  and shared.specialdate_ts.feature_status = 'APPROVED'
group by
    shared.specialdate.id,
    shared.specialdate_ts.id,
    shared.specialdate_tsp.id,
    shared.specialdate.identifier,
    shared.specialdate_ts.interpretation,
    shared.specialdate_ts.sequence_number,
    shared.specialdate_ts.correction_number,
    shared.specialdate_ts.valid_time_begin,
    shared.specialdate_ts.valid_time_end,
    shared.specialdate_ts.feature_lifetime_begin,
    shared.specialdate_ts.feature_lifetime_end,
    shared.specialdate_ts.type_value,
    shared.specialdate_ts.type_nilreason,
    shared.specialdate_ts.dateday_value,
    shared.specialdate_ts.dateday_nilreason,
    shared.specialdate_ts.dateyear_value,
    shared.specialdate_ts.dateyear_nilreason,
    shared.specialdate_ts.name_value,
    shared.specialdate_ts.name_nilreason,
    organisation_organisationauthority_pt_maewrz.title,
    organisation_organisationauthority_pt_maewrz.nilreason[1],
    organisation_organisationauthority_pt_maewrz.href
order by specialdate.identifier, specialdate_ts.sequence_number, specialdate_ts.correction_number DESC;
create index on shared.specialdate_view (id);
-- SpecialNavigationStationTimeSliceType
-- ['notes.note_view', 'navaids_points.authorityforspecialnavigationstation_view', 'geometry.elevatedpoint_view', 'navaids_points.specialnavigationstationstatus_view']
drop materialized view if exists navaids_points.specialnavigationstation_view cascade;
create materialized view navaids_points.specialnavigationstation_view as
select distinct on (specialnavigationstation.identifier,specialnavigationstation_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.specialnavigationstation.id,
    navaids_points.specialnavigationstation_ts.id as ts_id,
    navaids_points.specialnavigationstation_tsp.id as tsp_id,
    navaids_points.specialnavigationstation.identifier,
    navaids_points.specialnavigationstation_ts.interpretation,
    navaids_points.specialnavigationstation_ts.sequence_number,
    navaids_points.specialnavigationstation_ts.correction_number,
    navaids_points.specialnavigationstation_ts.valid_time_begin,
    navaids_points.specialnavigationstation_ts.valid_time_end,
    navaids_points.specialnavigationstation_ts.feature_lifetime_begin,
    navaids_points.specialnavigationstation_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.specialnavigationstation_ts.name_value as varchar), '(' || navaids_points.specialnavigationstation_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.specialnavigationstation_ts.type_value as varchar), '(' || navaids_points.specialnavigationstation_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.specialnavigationstation_ts.emission_value as varchar), '(' || navaids_points.specialnavigationstation_ts.emission_nilreason || ')') as emission,
    coalesce(cast(navaids_points.specialnavigationstation_ts.frequency_value as varchar) || ' ' || navaids_points.specialnavigationstation_ts.frequency_uom, '(' || navaids_points.specialnavigationstation_ts.frequency_nilreason || ')') as frequency,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_umwbve.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_umwbve.nilreason[1] || ')') AS systemchain,
    navaids_points_specialnavigationsystem_pt_umwbve.href AS systemchain_href,
    navaids_points_authorityforspecialnavigationstation_view_qeqrik.id AS responsibleorganisation,
    geometry_elevatedpoint_view_enskef.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_enskef.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_enskef.geom) AS position_latitude,
    geometry_elevatedpoint_view_enskef.elevation AS position_elevation,
    geometry_elevatedpoint_view_enskef.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_enskef.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_enskef.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_enskef.horizontalAccuracy AS position_horizontalaccuracy,
    jsonb_agg(navaids_points_specialnavigationstationstatus_view_dwizts.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_rkzgdb.*) AS annotation
from navaids_points.specialnavigationstation 
inner join master_join mj2 on navaids_points.specialnavigationstation.id = mj2.source_id
inner join navaids_points.specialnavigationstation_tsp on mj2.target_id = navaids_points.specialnavigationstation_tsp.id
inner join navaids_points.specialnavigationstation_ts on navaids_points.specialnavigationstation_tsp.specialnavigationstationtimeslice_id = navaids_points.specialnavigationstation_ts.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_umwbve on navaids_points.specialnavigationstation_ts.systemchain_id = navaids_points_specialnavigationsystem_pt_umwbve.id
left join navaids_points.authorityforspecialnavigationstation_view navaids_points_authorityforspecialnavigationstation_view_qeqrik on navaids_points.specialnavigationstation_ts.responsibleorganisation_id = navaids_points_authorityforspecialnavigationstation_view_qeqrik.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_enskef on navaids_points.specialnavigationstation_ts.position_id = geometry_elevatedpoint_view_enskef.id
left join master_join master_join_ozsodt on navaids_points.specialnavigationstation_ts.id = master_join_ozsodt.source_id
left join navaids_points.specialnavigationstationstatus_view navaids_points_specialnavigationstationstatus_view_dwizts on master_join_ozsodt.target_id = navaids_points_specialnavigationstationstatus_view_dwizts.id
left join master_join master_join_oxbqom on navaids_points.specialnavigationstation_ts.id = master_join_oxbqom.source_id
left join notes.note_view notes_note_view_rkzgdb on master_join_oxbqom.target_id = notes_note_view_rkzgdb.id
where navaids_points.specialnavigationstation.feature_status = 'APPROVED'
  and navaids_points.specialnavigationstation_ts.feature_status = 'APPROVED'
group by
    navaids_points.specialnavigationstation.id,
    navaids_points.specialnavigationstation_ts.id,
    navaids_points.specialnavigationstation_tsp.id,
    navaids_points.specialnavigationstation.identifier,
    navaids_points.specialnavigationstation_ts.interpretation,
    navaids_points.specialnavigationstation_ts.sequence_number,
    navaids_points.specialnavigationstation_ts.correction_number,
    navaids_points.specialnavigationstation_ts.valid_time_begin,
    navaids_points.specialnavigationstation_ts.valid_time_end,
    navaids_points.specialnavigationstation_ts.feature_lifetime_begin,
    navaids_points.specialnavigationstation_ts.feature_lifetime_end,
    navaids_points.specialnavigationstation_ts.name_value,
    navaids_points.specialnavigationstation_ts.name_nilreason,
    navaids_points.specialnavigationstation_ts.type_value,
    navaids_points.specialnavigationstation_ts.type_nilreason,
    navaids_points.specialnavigationstation_ts.emission_value,
    navaids_points.specialnavigationstation_ts.emission_nilreason,
    navaids_points.specialnavigationstation_ts.frequency_value,
    navaids_points.specialnavigationstation_ts.frequency_uom,
    navaids_points.specialnavigationstation_ts.frequency_nilreason,
    navaids_points_specialnavigationsystem_pt_umwbve.title,
    navaids_points_specialnavigationsystem_pt_umwbve.nilreason[1],
    navaids_points_specialnavigationsystem_pt_umwbve.href,
    navaids_points_authorityforspecialnavigationstation_view_qeqrik.id,
    geometry_elevatedpoint_view_enskef.geom,
    geometry_elevatedpoint_view_enskef.elevation,
    geometry_elevatedpoint_view_enskef.geoidUndulation,
    geometry_elevatedpoint_view_enskef.verticalDatum,
    geometry_elevatedpoint_view_enskef.verticalAccuracy,
    geometry_elevatedpoint_view_enskef.horizontalAccuracy
order by specialnavigationstation.identifier, specialnavigationstation_ts.sequence_number, specialnavigationstation_ts.correction_number DESC;
create index on navaids_points.specialnavigationstation_view (id);
-- SpecialNavigationSystemTimeSliceType
-- ['navaids_points.authorityforspecialnavigationsystem_view', 'notes.note_view']
drop materialized view if exists navaids_points.specialnavigationsystem_view cascade;
create materialized view navaids_points.specialnavigationsystem_view as
select distinct on (specialnavigationsystem.identifier,specialnavigationsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.specialnavigationsystem.id,
    navaids_points.specialnavigationsystem_ts.id as ts_id,
    navaids_points.specialnavigationsystem_tsp.id as tsp_id,
    navaids_points.specialnavigationsystem.identifier,
    navaids_points.specialnavigationsystem_ts.interpretation,
    navaids_points.specialnavigationsystem_ts.sequence_number,
    navaids_points.specialnavigationsystem_ts.correction_number,
    navaids_points.specialnavigationsystem_ts.valid_time_begin,
    navaids_points.specialnavigationsystem_ts.valid_time_end,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_begin,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.type_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.designator_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.specialnavigationsystem_ts.name_value as varchar), '(' || navaids_points.specialnavigationsystem_ts.name_nilreason || ')') as name,
    navaids_points_authorityforspecialnavigationsystem_view_gqwzvt.id AS responsibleorganisation,
    jsonb_agg(DISTINCT notes_note_view_peqaav.*) AS annotation
from navaids_points.specialnavigationsystem 
inner join master_join mj2 on navaids_points.specialnavigationsystem.id = mj2.source_id
inner join navaids_points.specialnavigationsystem_tsp on mj2.target_id = navaids_points.specialnavigationsystem_tsp.id
inner join navaids_points.specialnavigationsystem_ts on navaids_points.specialnavigationsystem_tsp.specialnavigationsystemtimeslice_id = navaids_points.specialnavigationsystem_ts.id
left join navaids_points.authorityforspecialnavigationsystem_view navaids_points_authorityforspecialnavigationsystem_view_gqwzvt on navaids_points.specialnavigationsystem_ts.responsibleorganisation_id = navaids_points_authorityforspecialnavigationsystem_view_gqwzvt.id
left join master_join master_join_vaekag on navaids_points.specialnavigationsystem_ts.id = master_join_vaekag.source_id
left join notes.note_view notes_note_view_peqaav on master_join_vaekag.target_id = notes_note_view_peqaav.id
where navaids_points.specialnavigationsystem.feature_status = 'APPROVED'
  and navaids_points.specialnavigationsystem_ts.feature_status = 'APPROVED'
group by
    navaids_points.specialnavigationsystem.id,
    navaids_points.specialnavigationsystem_ts.id,
    navaids_points.specialnavigationsystem_tsp.id,
    navaids_points.specialnavigationsystem.identifier,
    navaids_points.specialnavigationsystem_ts.interpretation,
    navaids_points.specialnavigationsystem_ts.sequence_number,
    navaids_points.specialnavigationsystem_ts.correction_number,
    navaids_points.specialnavigationsystem_ts.valid_time_begin,
    navaids_points.specialnavigationsystem_ts.valid_time_end,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_begin,
    navaids_points.specialnavigationsystem_ts.feature_lifetime_end,
    navaids_points.specialnavigationsystem_ts.type_value,
    navaids_points.specialnavigationsystem_ts.type_nilreason,
    navaids_points.specialnavigationsystem_ts.designator_value,
    navaids_points.specialnavigationsystem_ts.designator_nilreason,
    navaids_points.specialnavigationsystem_ts.name_value,
    navaids_points.specialnavigationsystem_ts.name_nilreason,
    navaids_points_authorityforspecialnavigationsystem_view_gqwzvt.id
order by specialnavigationsystem.identifier, specialnavigationsystem_ts.sequence_number, specialnavigationsystem_ts.correction_number DESC;
create index on navaids_points.specialnavigationsystem_view (id);
-- StandardInstrumentArrivalTimeSliceType
-- ['procedure.proceduretransition_view', 'procedure.procedureavailability_view', 'procedure.landingtakeoffareacollection_view', 'shared.aircraftcharacteristic_view', 'notes.note_view']
drop materialized view if exists procedure.standardinstrumentarrival_view cascade;
create materialized view procedure.standardinstrumentarrival_view as
select distinct on (standardinstrumentarrival.identifier,standardinstrumentarrival_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.standardinstrumentarrival.id,
    procedure.standardinstrumentarrival_ts.id as ts_id,
    procedure.standardinstrumentarrival_tsp.id as tsp_id,
    procedure.standardinstrumentarrival.identifier,
    procedure.standardinstrumentarrival_ts.interpretation,
    procedure.standardinstrumentarrival_ts.sequence_number,
    procedure.standardinstrumentarrival_ts.correction_number,
    procedure.standardinstrumentarrival_ts.valid_time_begin,
    procedure.standardinstrumentarrival_ts.valid_time_end,
    procedure.standardinstrumentarrival_ts.feature_lifetime_begin,
    procedure.standardinstrumentarrival_ts.feature_lifetime_end,
    coalesce(cast(procedure.standardinstrumentarrival_ts.communicationfailureinstruction_value as varchar), '(' || procedure.standardinstrumentarrival_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.standardinstrumentarrival_ts.instruction_value as varchar), '(' || procedure.standardinstrumentarrival_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.standardinstrumentarrival_ts.designcriteria_value as varchar), '(' || procedure.standardinstrumentarrival_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.standardinstrumentarrival_ts.codingstandard_value as varchar), '(' || procedure.standardinstrumentarrival_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.standardinstrumentarrival_ts.flightchecked_value as varchar), '(' || procedure.standardinstrumentarrival_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.standardinstrumentarrival_ts.name_value as varchar), '(' || procedure.standardinstrumentarrival_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.standardinstrumentarrival_ts.rnav_value as varchar), '(' || procedure.standardinstrumentarrival_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.standardinstrumentarrival_ts.designator_value as varchar), '(' || procedure.standardinstrumentarrival_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points_navaid_pt_ooofpi.title as varchar), '(' || navaids_points_navaid_pt_ooofpi.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_ooofpi.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_tekqcw.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_tekqcw.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_tekqcw.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_qxlllx.title as varchar), '(' || surveillance_radarsystem_pt_qxlllx.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_qxlllx.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_gpuajz.title as varchar), '(' || procedure_safealtitudearea_pt_gpuajz.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_gpuajz.href AS safealtitude_href,
    procedure_landingtakeoffareacollection_view_rpbxpm.id AS arrival,
    jsonb_agg(procedure_procedureavailability_view_zebplx.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_cqmzyz.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_cqmzyz.title AS varchar), '(' || airport_heliport_airportheliport_pt_cqmzyz.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_cqmzyz.href)) AS airportheliport,
    jsonb_agg(shared_aircraftcharacteristic_view_nvgivl.id) AS aircraftcharacteristic,
    jsonb_agg(procedure_proceduretransition_view_smpzvm.id) AS flighttransition,
    jsonb_agg(DISTINCT notes_note_view_gzosyu.*) AS annotation
from procedure.standardinstrumentarrival 
inner join master_join mj2 on procedure.standardinstrumentarrival.id = mj2.source_id
inner join procedure.standardinstrumentarrival_tsp on mj2.target_id = procedure.standardinstrumentarrival_tsp.id
inner join procedure.standardinstrumentarrival_ts on procedure.standardinstrumentarrival_tsp.standardinstrumentarrivaltimeslice_id = procedure.standardinstrumentarrival_ts.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_ooofpi on procedure.standardinstrumentarrival_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_ooofpi.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_tekqcw on procedure.standardinstrumentarrival_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_tekqcw.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_qxlllx on procedure.standardinstrumentarrival_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_qxlllx.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_gpuajz on procedure.standardinstrumentarrival_ts.safealtitude_id = procedure_safealtitudearea_pt_gpuajz.id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_rpbxpm on procedure.standardinstrumentarrival_ts.arrival_id = procedure_landingtakeoffareacollection_view_rpbxpm.id
left join master_join master_join_ojphqk on procedure.standardinstrumentarrival_ts.id = master_join_ojphqk.source_id
left join procedure.procedureavailability_view procedure_procedureavailability_view_zebplx on master_join_ojphqk.target_id = procedure_procedureavailability_view_zebplx.id
left join master_join master_join_ooozyt on procedure.standardinstrumentarrival_ts.id = master_join_ooozyt.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_cqmzyz on master_join_ooozyt.target_id = airport_heliport_airportheliport_pt_cqmzyz.id
left join master_join master_join_zncdfg on procedure.standardinstrumentarrival_ts.id = master_join_zncdfg.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_nvgivl on master_join_zncdfg.target_id = shared_aircraftcharacteristic_view_nvgivl.id
left join master_join master_join_sfxkqk on procedure.standardinstrumentarrival_ts.id = master_join_sfxkqk.source_id
left join procedure.proceduretransition_view procedure_proceduretransition_view_smpzvm on master_join_sfxkqk.target_id = procedure_proceduretransition_view_smpzvm.id
left join master_join master_join_gpqzos on procedure.standardinstrumentarrival_ts.id = master_join_gpqzos.source_id
left join notes.note_view notes_note_view_gzosyu on master_join_gpqzos.target_id = notes_note_view_gzosyu.id
where procedure.standardinstrumentarrival.feature_status = 'APPROVED'
  and procedure.standardinstrumentarrival_ts.feature_status = 'APPROVED'
group by
    procedure.standardinstrumentarrival.id,
    procedure.standardinstrumentarrival_ts.id,
    procedure.standardinstrumentarrival_tsp.id,
    procedure.standardinstrumentarrival.identifier,
    procedure.standardinstrumentarrival_ts.interpretation,
    procedure.standardinstrumentarrival_ts.sequence_number,
    procedure.standardinstrumentarrival_ts.correction_number,
    procedure.standardinstrumentarrival_ts.valid_time_begin,
    procedure.standardinstrumentarrival_ts.valid_time_end,
    procedure.standardinstrumentarrival_ts.feature_lifetime_begin,
    procedure.standardinstrumentarrival_ts.feature_lifetime_end,
    procedure.standardinstrumentarrival_ts.communicationfailureinstruction_value,
    procedure.standardinstrumentarrival_ts.communicationfailureinstruction_nilreason,
    procedure.standardinstrumentarrival_ts.instruction_value,
    procedure.standardinstrumentarrival_ts.instruction_nilreason,
    procedure.standardinstrumentarrival_ts.designcriteria_value,
    procedure.standardinstrumentarrival_ts.designcriteria_nilreason,
    procedure.standardinstrumentarrival_ts.codingstandard_value,
    procedure.standardinstrumentarrival_ts.codingstandard_nilreason,
    procedure.standardinstrumentarrival_ts.flightchecked_value,
    procedure.standardinstrumentarrival_ts.flightchecked_nilreason,
    procedure.standardinstrumentarrival_ts.name_value,
    procedure.standardinstrumentarrival_ts.name_nilreason,
    procedure.standardinstrumentarrival_ts.rnav_value,
    procedure.standardinstrumentarrival_ts.rnav_nilreason,
    procedure.standardinstrumentarrival_ts.designator_value,
    procedure.standardinstrumentarrival_ts.designator_nilreason,
    navaids_points_navaid_pt_ooofpi.title,
    navaids_points_navaid_pt_ooofpi.nilreason[1],
    navaids_points_navaid_pt_ooofpi.href,
    navaids_points_specialnavigationsystem_pt_tekqcw.title,
    navaids_points_specialnavigationsystem_pt_tekqcw.nilreason[1],
    navaids_points_specialnavigationsystem_pt_tekqcw.href,
    surveillance_radarsystem_pt_qxlllx.title,
    surveillance_radarsystem_pt_qxlllx.nilreason[1],
    surveillance_radarsystem_pt_qxlllx.href,
    procedure_safealtitudearea_pt_gpuajz.title,
    procedure_safealtitudearea_pt_gpuajz.nilreason[1],
    procedure_safealtitudearea_pt_gpuajz.href,
    procedure_landingtakeoffareacollection_view_rpbxpm.id
order by standardinstrumentarrival.identifier, standardinstrumentarrival_ts.sequence_number, standardinstrumentarrival_ts.correction_number DESC;
create index on procedure.standardinstrumentarrival_view (id);
-- StandardInstrumentDepartureTimeSliceType
-- ['procedure.proceduretransition_view', 'procedure.procedureavailability_view', 'procedure.landingtakeoffareacollection_view', 'shared.aircraftcharacteristic_view', 'notes.note_view']
drop materialized view if exists procedure.standardinstrumentdeparture_view cascade;
create materialized view procedure.standardinstrumentdeparture_view as
select distinct on (standardinstrumentdeparture.identifier,standardinstrumentdeparture_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.standardinstrumentdeparture.id,
    procedure.standardinstrumentdeparture_ts.id as ts_id,
    procedure.standardinstrumentdeparture_tsp.id as tsp_id,
    procedure.standardinstrumentdeparture.identifier,
    procedure.standardinstrumentdeparture_ts.interpretation,
    procedure.standardinstrumentdeparture_ts.sequence_number,
    procedure.standardinstrumentdeparture_ts.correction_number,
    procedure.standardinstrumentdeparture_ts.valid_time_begin,
    procedure.standardinstrumentdeparture_ts.valid_time_end,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_begin,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_end,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_nilreason || ')') as communicationfailureinstruction,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.instruction_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.instruction_nilreason || ')') as instruction,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.designcriteria_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.designcriteria_nilreason || ')') as designcriteria,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.codingstandard_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.codingstandard_nilreason || ')') as codingstandard,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.flightchecked_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.name_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.name_nilreason || ')') as name,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.rnav_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.rnav_nilreason || ')') as rnav,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.designator_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.designator_nilreason || ')') as designator,
    coalesce(cast(procedure.standardinstrumentdeparture_ts.contingencyroute_value as varchar), '(' || procedure.standardinstrumentdeparture_ts.contingencyroute_nilreason || ')') as contingencyroute,
    coalesce(cast(navaids_points_navaid_pt_dxrqqu.title as varchar), '(' || navaids_points_navaid_pt_dxrqqu.nilreason[1] || ')') AS guidancefacilitynavaid,
    navaids_points_navaid_pt_dxrqqu.href AS guidancefacilitynavaid_href,
    coalesce(cast(navaids_points_specialnavigationsystem_pt_pynpdb.title as varchar), '(' || navaids_points_specialnavigationsystem_pt_pynpdb.nilreason[1] || ')') AS guidancefacilityspecialnavigationsystem,
    navaids_points_specialnavigationsystem_pt_pynpdb.href AS guidancefacilityspecialnavigationsystem_href,
    coalesce(cast(surveillance_radarsystem_pt_yswhsu.title as varchar), '(' || surveillance_radarsystem_pt_yswhsu.nilreason[1] || ')') AS guidancefacilityradar,
    surveillance_radarsystem_pt_yswhsu.href AS guidancefacilityradar_href,
    coalesce(cast(procedure_safealtitudearea_pt_lvsdjp.title as varchar), '(' || procedure_safealtitudearea_pt_lvsdjp.nilreason[1] || ')') AS safealtitude,
    procedure_safealtitudearea_pt_lvsdjp.href AS safealtitude_href,
    procedure_landingtakeoffareacollection_view_iktwpk.id AS takeoff,
    jsonb_agg(procedure_procedureavailability_view_pnhzgk.id) AS availability,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_airportheliport_pt_pzabxc.id,
    'title', coalesce(cast(airport_heliport_airportheliport_pt_pzabxc.title AS varchar), '(' || airport_heliport_airportheliport_pt_pzabxc.nilreason[1] || ')'),
    'href', airport_heliport_airportheliport_pt_pzabxc.href)) AS airportheliport,
    jsonb_agg(shared_aircraftcharacteristic_view_nwsknz.id) AS aircraftcharacteristic,
    jsonb_agg(procedure_proceduretransition_view_cluxif.id) AS flighttransition,
    jsonb_agg(DISTINCT notes_note_view_nnvmzn.*) AS annotation
from procedure.standardinstrumentdeparture 
inner join master_join mj2 on procedure.standardinstrumentdeparture.id = mj2.source_id
inner join procedure.standardinstrumentdeparture_tsp on mj2.target_id = procedure.standardinstrumentdeparture_tsp.id
inner join procedure.standardinstrumentdeparture_ts on procedure.standardinstrumentdeparture_tsp.standardinstrumentdeparturetimeslice_id = procedure.standardinstrumentdeparture_ts.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_dxrqqu on procedure.standardinstrumentdeparture_ts.guidancefacility_navaid_id = navaids_points_navaid_pt_dxrqqu.id
left join navaids_points.specialnavigationsystem_pt navaids_points_specialnavigationsystem_pt_pynpdb on procedure.standardinstrumentdeparture_ts.guidancefacility_specialnavigationsystem_id = navaids_points_specialnavigationsystem_pt_pynpdb.id
left join surveillance.radarsystem_pt surveillance_radarsystem_pt_yswhsu on procedure.standardinstrumentdeparture_ts.guidancefacility_radar_id = surveillance_radarsystem_pt_yswhsu.id
left join procedure.safealtitudearea_pt procedure_safealtitudearea_pt_lvsdjp on procedure.standardinstrumentdeparture_ts.safealtitude_id = procedure_safealtitudearea_pt_lvsdjp.id
left join procedure.landingtakeoffareacollection_view procedure_landingtakeoffareacollection_view_iktwpk on procedure.standardinstrumentdeparture_ts.takeoff_id = procedure_landingtakeoffareacollection_view_iktwpk.id
left join master_join master_join_fgqjbt on procedure.standardinstrumentdeparture_ts.id = master_join_fgqjbt.source_id
left join procedure.procedureavailability_view procedure_procedureavailability_view_pnhzgk on master_join_fgqjbt.target_id = procedure_procedureavailability_view_pnhzgk.id
left join master_join master_join_bfuhma on procedure.standardinstrumentdeparture_ts.id = master_join_bfuhma.source_id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_pzabxc on master_join_bfuhma.target_id = airport_heliport_airportheliport_pt_pzabxc.id
left join master_join master_join_ucyxqa on procedure.standardinstrumentdeparture_ts.id = master_join_ucyxqa.source_id
left join shared.aircraftcharacteristic_view shared_aircraftcharacteristic_view_nwsknz on master_join_ucyxqa.target_id = shared_aircraftcharacteristic_view_nwsknz.id
left join master_join master_join_acqwzf on procedure.standardinstrumentdeparture_ts.id = master_join_acqwzf.source_id
left join procedure.proceduretransition_view procedure_proceduretransition_view_cluxif on master_join_acqwzf.target_id = procedure_proceduretransition_view_cluxif.id
left join master_join master_join_bxtfzh on procedure.standardinstrumentdeparture_ts.id = master_join_bxtfzh.source_id
left join notes.note_view notes_note_view_nnvmzn on master_join_bxtfzh.target_id = notes_note_view_nnvmzn.id
where procedure.standardinstrumentdeparture.feature_status = 'APPROVED'
  and procedure.standardinstrumentdeparture_ts.feature_status = 'APPROVED'
group by
    procedure.standardinstrumentdeparture.id,
    procedure.standardinstrumentdeparture_ts.id,
    procedure.standardinstrumentdeparture_tsp.id,
    procedure.standardinstrumentdeparture.identifier,
    procedure.standardinstrumentdeparture_ts.interpretation,
    procedure.standardinstrumentdeparture_ts.sequence_number,
    procedure.standardinstrumentdeparture_ts.correction_number,
    procedure.standardinstrumentdeparture_ts.valid_time_begin,
    procedure.standardinstrumentdeparture_ts.valid_time_end,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_begin,
    procedure.standardinstrumentdeparture_ts.feature_lifetime_end,
    procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_value,
    procedure.standardinstrumentdeparture_ts.communicationfailureinstruction_nilreason,
    procedure.standardinstrumentdeparture_ts.instruction_value,
    procedure.standardinstrumentdeparture_ts.instruction_nilreason,
    procedure.standardinstrumentdeparture_ts.designcriteria_value,
    procedure.standardinstrumentdeparture_ts.designcriteria_nilreason,
    procedure.standardinstrumentdeparture_ts.codingstandard_value,
    procedure.standardinstrumentdeparture_ts.codingstandard_nilreason,
    procedure.standardinstrumentdeparture_ts.flightchecked_value,
    procedure.standardinstrumentdeparture_ts.flightchecked_nilreason,
    procedure.standardinstrumentdeparture_ts.name_value,
    procedure.standardinstrumentdeparture_ts.name_nilreason,
    procedure.standardinstrumentdeparture_ts.rnav_value,
    procedure.standardinstrumentdeparture_ts.rnav_nilreason,
    procedure.standardinstrumentdeparture_ts.designator_value,
    procedure.standardinstrumentdeparture_ts.designator_nilreason,
    procedure.standardinstrumentdeparture_ts.contingencyroute_value,
    procedure.standardinstrumentdeparture_ts.contingencyroute_nilreason,
    navaids_points_navaid_pt_dxrqqu.title,
    navaids_points_navaid_pt_dxrqqu.nilreason[1],
    navaids_points_navaid_pt_dxrqqu.href,
    navaids_points_specialnavigationsystem_pt_pynpdb.title,
    navaids_points_specialnavigationsystem_pt_pynpdb.nilreason[1],
    navaids_points_specialnavigationsystem_pt_pynpdb.href,
    surveillance_radarsystem_pt_yswhsu.title,
    surveillance_radarsystem_pt_yswhsu.nilreason[1],
    surveillance_radarsystem_pt_yswhsu.href,
    procedure_safealtitudearea_pt_lvsdjp.title,
    procedure_safealtitudearea_pt_lvsdjp.nilreason[1],
    procedure_safealtitudearea_pt_lvsdjp.href,
    procedure_landingtakeoffareacollection_view_iktwpk.id
order by standardinstrumentdeparture.identifier, standardinstrumentdeparture_ts.sequence_number, standardinstrumentdeparture_ts.correction_number DESC;
create index on procedure.standardinstrumentdeparture_view (id);
-- StandardLevelColumnTimeSliceType
-- ['shared.standardlevel_view', 'notes.note_view']
drop materialized view if exists shared.standardlevelcolumn_view cascade;
create materialized view shared.standardlevelcolumn_view as
select distinct on (standardlevelcolumn.identifier,standardlevelcolumn_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardlevelcolumn.id,
    shared.standardlevelcolumn_ts.id as ts_id,
    shared.standardlevelcolumn_tsp.id as tsp_id,
    shared.standardlevelcolumn.identifier,
    shared.standardlevelcolumn_ts.interpretation,
    shared.standardlevelcolumn_ts.sequence_number,
    shared.standardlevelcolumn_ts.correction_number,
    shared.standardlevelcolumn_ts.valid_time_begin,
    shared.standardlevelcolumn_ts.valid_time_end,
    shared.standardlevelcolumn_ts.feature_lifetime_begin,
    shared.standardlevelcolumn_ts.feature_lifetime_end,
    coalesce(cast(shared.standardlevelcolumn_ts.series_value as varchar), '(' || shared.standardlevelcolumn_ts.series_nilreason || ')') as series,
    coalesce(cast(shared.standardlevelcolumn_ts.separation_value as varchar), '(' || shared.standardlevelcolumn_ts.separation_nilreason || ')') as separation,
    coalesce(cast(shared_standardleveltable_pt_zhdwpr.title as varchar), '(' || shared_standardleveltable_pt_zhdwpr.nilreason[1] || ')') AS leveltable,
    shared_standardleveltable_pt_zhdwpr.href AS leveltable_href,
    jsonb_agg(shared_standardlevel_view_naqwps.id) AS level,
    jsonb_agg(DISTINCT notes_note_view_wdbpey.*) AS annotation
from shared.standardlevelcolumn 
inner join master_join mj2 on shared.standardlevelcolumn.id = mj2.source_id
inner join shared.standardlevelcolumn_tsp on mj2.target_id = shared.standardlevelcolumn_tsp.id
inner join shared.standardlevelcolumn_ts on shared.standardlevelcolumn_tsp.standardlevelcolumntimeslice_id = shared.standardlevelcolumn_ts.id
left join shared.standardleveltable_pt shared_standardleveltable_pt_zhdwpr on shared.standardlevelcolumn_ts.leveltable_id = shared_standardleveltable_pt_zhdwpr.id
left join master_join master_join_ggkulf on shared.standardlevelcolumn_ts.id = master_join_ggkulf.source_id
left join shared.standardlevel_view shared_standardlevel_view_naqwps on master_join_ggkulf.target_id = shared_standardlevel_view_naqwps.id
left join master_join master_join_aicvqd on shared.standardlevelcolumn_ts.id = master_join_aicvqd.source_id
left join notes.note_view notes_note_view_wdbpey on master_join_aicvqd.target_id = notes_note_view_wdbpey.id
where shared.standardlevelcolumn.feature_status = 'APPROVED'
  and shared.standardlevelcolumn_ts.feature_status = 'APPROVED'
group by
    shared.standardlevelcolumn.id,
    shared.standardlevelcolumn_ts.id,
    shared.standardlevelcolumn_tsp.id,
    shared.standardlevelcolumn.identifier,
    shared.standardlevelcolumn_ts.interpretation,
    shared.standardlevelcolumn_ts.sequence_number,
    shared.standardlevelcolumn_ts.correction_number,
    shared.standardlevelcolumn_ts.valid_time_begin,
    shared.standardlevelcolumn_ts.valid_time_end,
    shared.standardlevelcolumn_ts.feature_lifetime_begin,
    shared.standardlevelcolumn_ts.feature_lifetime_end,
    shared.standardlevelcolumn_ts.series_value,
    shared.standardlevelcolumn_ts.series_nilreason,
    shared.standardlevelcolumn_ts.separation_value,
    shared.standardlevelcolumn_ts.separation_nilreason,
    shared_standardleveltable_pt_zhdwpr.title,
    shared_standardleveltable_pt_zhdwpr.nilreason[1],
    shared_standardleveltable_pt_zhdwpr.href
order by standardlevelcolumn.identifier, standardlevelcolumn_ts.sequence_number, standardlevelcolumn_ts.correction_number DESC;
create index on shared.standardlevelcolumn_view (id);
-- StandardLevelSectorTimeSliceType
-- ['notes.note_view']
drop materialized view if exists shared.standardlevelsector_view cascade;
create materialized view shared.standardlevelsector_view as
select distinct on (standardlevelsector.identifier,standardlevelsector_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardlevelsector.id,
    shared.standardlevelsector_ts.id as ts_id,
    shared.standardlevelsector_tsp.id as tsp_id,
    shared.standardlevelsector.identifier,
    shared.standardlevelsector_ts.interpretation,
    shared.standardlevelsector_ts.sequence_number,
    shared.standardlevelsector_ts.correction_number,
    shared.standardlevelsector_ts.valid_time_begin,
    shared.standardlevelsector_ts.valid_time_end,
    shared.standardlevelsector_ts.feature_lifetime_begin,
    shared.standardlevelsector_ts.feature_lifetime_end,
    coalesce(cast(shared.standardlevelsector_ts.flightrule_value as varchar), '(' || shared.standardlevelsector_ts.flightrule_nilreason || ')') as flightrule,
    coalesce(cast(shared.standardlevelsector_ts.fromtrack_value as varchar), '(' || shared.standardlevelsector_ts.fromtrack_nilreason || ')') as fromtrack,
    coalesce(cast(shared.standardlevelsector_ts.totrack_value as varchar), '(' || shared.standardlevelsector_ts.totrack_nilreason || ')') as totrack,
    coalesce(cast(shared.standardlevelsector_ts.angletype_value as varchar), '(' || shared.standardlevelsector_ts.angletype_nilreason || ')') as angletype,
    coalesce(cast(shared_standardlevelcolumn_pt_kuwmlt.title as varchar), '(' || shared_standardlevelcolumn_pt_kuwmlt.nilreason[1] || ')') AS applicablelevelcolumn,
    shared_standardlevelcolumn_pt_kuwmlt.href AS applicablelevelcolumn_href,
    jsonb_agg(DISTINCT jsonb_build_object('id', airspace_airspace_pt_qwbpaq.id,
    'title', coalesce(cast(airspace_airspace_pt_qwbpaq.title AS varchar), '(' || airspace_airspace_pt_qwbpaq.nilreason[1] || ')'),
    'href', airspace_airspace_pt_qwbpaq.href)) AS applicableairspace,
    jsonb_agg(DISTINCT notes_note_view_gunlbq.*) AS annotation
from shared.standardlevelsector 
inner join master_join mj2 on shared.standardlevelsector.id = mj2.source_id
inner join shared.standardlevelsector_tsp on mj2.target_id = shared.standardlevelsector_tsp.id
inner join shared.standardlevelsector_ts on shared.standardlevelsector_tsp.standardlevelsectortimeslice_id = shared.standardlevelsector_ts.id
left join shared.standardlevelcolumn_pt shared_standardlevelcolumn_pt_kuwmlt on shared.standardlevelsector_ts.applicablelevelcolumn_id = shared_standardlevelcolumn_pt_kuwmlt.id
left join master_join master_join_kogxzj on shared.standardlevelsector_ts.id = master_join_kogxzj.source_id
left join airspace.airspace_pt airspace_airspace_pt_qwbpaq on master_join_kogxzj.target_id = airspace_airspace_pt_qwbpaq.id
left join master_join master_join_ebdzpx on shared.standardlevelsector_ts.id = master_join_ebdzpx.source_id
left join notes.note_view notes_note_view_gunlbq on master_join_ebdzpx.target_id = notes_note_view_gunlbq.id
where shared.standardlevelsector.feature_status = 'APPROVED'
  and shared.standardlevelsector_ts.feature_status = 'APPROVED'
group by
    shared.standardlevelsector.id,
    shared.standardlevelsector_ts.id,
    shared.standardlevelsector_tsp.id,
    shared.standardlevelsector.identifier,
    shared.standardlevelsector_ts.interpretation,
    shared.standardlevelsector_ts.sequence_number,
    shared.standardlevelsector_ts.correction_number,
    shared.standardlevelsector_ts.valid_time_begin,
    shared.standardlevelsector_ts.valid_time_end,
    shared.standardlevelsector_ts.feature_lifetime_begin,
    shared.standardlevelsector_ts.feature_lifetime_end,
    shared.standardlevelsector_ts.flightrule_value,
    shared.standardlevelsector_ts.flightrule_nilreason,
    shared.standardlevelsector_ts.fromtrack_value,
    shared.standardlevelsector_ts.fromtrack_nilreason,
    shared.standardlevelsector_ts.totrack_value,
    shared.standardlevelsector_ts.totrack_nilreason,
    shared.standardlevelsector_ts.angletype_value,
    shared.standardlevelsector_ts.angletype_nilreason,
    shared_standardlevelcolumn_pt_kuwmlt.title,
    shared_standardlevelcolumn_pt_kuwmlt.nilreason[1],
    shared_standardlevelcolumn_pt_kuwmlt.href
order by standardlevelsector.identifier, standardlevelsector_ts.sequence_number, standardlevelsector_ts.correction_number DESC;
create index on shared.standardlevelsector_view (id);
-- StandardLevelTableTimeSliceType
-- ['notes.note_view']
drop materialized view if exists shared.standardleveltable_view cascade;
create materialized view shared.standardleveltable_view as
select distinct on (standardleveltable.identifier,standardleveltable_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    shared.standardleveltable.id,
    shared.standardleveltable_ts.id as ts_id,
    shared.standardleveltable_tsp.id as tsp_id,
    shared.standardleveltable.identifier,
    shared.standardleveltable_ts.interpretation,
    shared.standardleveltable_ts.sequence_number,
    shared.standardleveltable_ts.correction_number,
    shared.standardleveltable_ts.valid_time_begin,
    shared.standardleveltable_ts.valid_time_end,
    shared.standardleveltable_ts.feature_lifetime_begin,
    shared.standardleveltable_ts.feature_lifetime_end,
    coalesce(cast(shared.standardleveltable_ts.name_value as varchar), '(' || shared.standardleveltable_ts.name_nilreason || ')') as name,
    coalesce(cast(shared.standardleveltable_ts.standardicao_value as varchar), '(' || shared.standardleveltable_ts.standardicao_nilreason || ')') as standardicao,
    jsonb_agg(DISTINCT notes_note_view_ltgtko.*) AS annotation
from shared.standardleveltable 
inner join master_join mj2 on shared.standardleveltable.id = mj2.source_id
inner join shared.standardleveltable_tsp on mj2.target_id = shared.standardleveltable_tsp.id
inner join shared.standardleveltable_ts on shared.standardleveltable_tsp.standardleveltabletimeslice_id = shared.standardleveltable_ts.id
left join master_join master_join_owslrs on shared.standardleveltable_ts.id = master_join_owslrs.source_id
left join notes.note_view notes_note_view_ltgtko on master_join_owslrs.target_id = notes_note_view_ltgtko.id
where shared.standardleveltable.feature_status = 'APPROVED'
  and shared.standardleveltable_ts.feature_status = 'APPROVED'
group by
    shared.standardleveltable.id,
    shared.standardleveltable_ts.id,
    shared.standardleveltable_tsp.id,
    shared.standardleveltable.identifier,
    shared.standardleveltable_ts.interpretation,
    shared.standardleveltable_ts.sequence_number,
    shared.standardleveltable_ts.correction_number,
    shared.standardleveltable_ts.valid_time_begin,
    shared.standardleveltable_ts.valid_time_end,
    shared.standardleveltable_ts.feature_lifetime_begin,
    shared.standardleveltable_ts.feature_lifetime_end,
    shared.standardleveltable_ts.name_value,
    shared.standardleveltable_ts.name_nilreason,
    shared.standardleveltable_ts.standardicao_value,
    shared.standardleveltable_ts.standardicao_nilreason
order by standardleveltable.identifier, standardleveltable_ts.sequence_number, standardleveltable_ts.correction_number DESC;
create index on shared.standardleveltable_view (id);
-- StandMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.standmarking_view cascade;
create materialized view airport_heliport.standmarking_view as
select distinct on (standmarking.identifier,standmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.standmarking.id,
    airport_heliport.standmarking_ts.id as ts_id,
    airport_heliport.standmarking_tsp.id as tsp_id,
    airport_heliport.standmarking.identifier,
    airport_heliport.standmarking_ts.interpretation,
    airport_heliport.standmarking_ts.sequence_number,
    airport_heliport.standmarking_ts.correction_number,
    airport_heliport.standmarking_ts.valid_time_begin,
    airport_heliport.standmarking_ts.valid_time_end,
    airport_heliport.standmarking_ts.feature_lifetime_begin,
    airport_heliport.standmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.standmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.standmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.standmarking_ts.condition_value as varchar), '(' || airport_heliport.standmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_aircraftstand_pt_hhgque.title as varchar), '(' || airport_heliport_aircraftstand_pt_hhgque.nilreason[1] || ')') AS markedstand,
    airport_heliport_aircraftstand_pt_hhgque.href AS markedstand_href,
    jsonb_agg(airport_heliport_markingelement_view_lwqpbh.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_piyven.*) AS annotation
from airport_heliport.standmarking 
inner join master_join mj2 on airport_heliport.standmarking.id = mj2.source_id
inner join airport_heliport.standmarking_tsp on mj2.target_id = airport_heliport.standmarking_tsp.id
inner join airport_heliport.standmarking_ts on airport_heliport.standmarking_tsp.standmarkingtimeslice_id = airport_heliport.standmarking_ts.id
left join airport_heliport.aircraftstand_pt airport_heliport_aircraftstand_pt_hhgque on airport_heliport.standmarking_ts.markedstand_id = airport_heliport_aircraftstand_pt_hhgque.id
left join master_join master_join_gjyxnd on airport_heliport.standmarking_ts.id = master_join_gjyxnd.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_lwqpbh on master_join_gjyxnd.target_id = airport_heliport_markingelement_view_lwqpbh.id
left join master_join master_join_yadipn on airport_heliport.standmarking_ts.id = master_join_yadipn.source_id
left join notes.note_view notes_note_view_piyven on master_join_yadipn.target_id = notes_note_view_piyven.id
where airport_heliport.standmarking.feature_status = 'APPROVED'
  and airport_heliport.standmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.standmarking.id,
    airport_heliport.standmarking_ts.id,
    airport_heliport.standmarking_tsp.id,
    airport_heliport.standmarking.identifier,
    airport_heliport.standmarking_ts.interpretation,
    airport_heliport.standmarking_ts.sequence_number,
    airport_heliport.standmarking_ts.correction_number,
    airport_heliport.standmarking_ts.valid_time_begin,
    airport_heliport.standmarking_ts.valid_time_end,
    airport_heliport.standmarking_ts.feature_lifetime_begin,
    airport_heliport.standmarking_ts.feature_lifetime_end,
    airport_heliport.standmarking_ts.markingicaostandard_value,
    airport_heliport.standmarking_ts.markingicaostandard_nilreason,
    airport_heliport.standmarking_ts.condition_value,
    airport_heliport.standmarking_ts.condition_nilreason,
    airport_heliport_aircraftstand_pt_hhgque.title,
    airport_heliport_aircraftstand_pt_hhgque.nilreason[1],
    airport_heliport_aircraftstand_pt_hhgque.href
order by standmarking.identifier, standmarking_ts.sequence_number, standmarking_ts.correction_number DESC;
create index on airport_heliport.standmarking_view (id);
-- SurveyControlPointTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.surveycontrolpoint_view cascade;
create materialized view airport_heliport.surveycontrolpoint_view as
select distinct on (surveycontrolpoint.identifier,surveycontrolpoint_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.surveycontrolpoint.id,
    airport_heliport.surveycontrolpoint_ts.id as ts_id,
    airport_heliport.surveycontrolpoint_tsp.id as tsp_id,
    airport_heliport.surveycontrolpoint.identifier,
    airport_heliport.surveycontrolpoint_ts.interpretation,
    airport_heliport.surveycontrolpoint_ts.sequence_number,
    airport_heliport.surveycontrolpoint_ts.correction_number,
    airport_heliport.surveycontrolpoint_ts.valid_time_begin,
    airport_heliport.surveycontrolpoint_ts.valid_time_end,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_begin,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.surveycontrolpoint_ts.designator_value as varchar), '(' || airport_heliport.surveycontrolpoint_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport_airportheliport_pt_ykngkg.title as varchar), '(' || airport_heliport_airportheliport_pt_ykngkg.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_ykngkg.href AS associatedairportheliport_href,
    geometry_elevatedpoint_view_eilazk.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_eilazk.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_eilazk.geom) AS location_latitude,
    geometry_elevatedpoint_view_eilazk.elevation AS location_elevation,
    geometry_elevatedpoint_view_eilazk.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_eilazk.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_eilazk.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_eilazk.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_iwcbit.*) AS annotation
from airport_heliport.surveycontrolpoint 
inner join master_join mj2 on airport_heliport.surveycontrolpoint.id = mj2.source_id
inner join airport_heliport.surveycontrolpoint_tsp on mj2.target_id = airport_heliport.surveycontrolpoint_tsp.id
inner join airport_heliport.surveycontrolpoint_ts on airport_heliport.surveycontrolpoint_tsp.surveycontrolpointtimeslice_id = airport_heliport.surveycontrolpoint_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ykngkg on airport_heliport.surveycontrolpoint_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_ykngkg.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_eilazk on airport_heliport.surveycontrolpoint_ts.location_id = geometry_elevatedpoint_view_eilazk.id
left join master_join master_join_fcrwcn on airport_heliport.surveycontrolpoint_ts.id = master_join_fcrwcn.source_id
left join notes.note_view notes_note_view_iwcbit on master_join_fcrwcn.target_id = notes_note_view_iwcbit.id
where airport_heliport.surveycontrolpoint.feature_status = 'APPROVED'
  and airport_heliport.surveycontrolpoint_ts.feature_status = 'APPROVED'
group by
    airport_heliport.surveycontrolpoint.id,
    airport_heliport.surveycontrolpoint_ts.id,
    airport_heliport.surveycontrolpoint_tsp.id,
    airport_heliport.surveycontrolpoint.identifier,
    airport_heliport.surveycontrolpoint_ts.interpretation,
    airport_heliport.surveycontrolpoint_ts.sequence_number,
    airport_heliport.surveycontrolpoint_ts.correction_number,
    airport_heliport.surveycontrolpoint_ts.valid_time_begin,
    airport_heliport.surveycontrolpoint_ts.valid_time_end,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_begin,
    airport_heliport.surveycontrolpoint_ts.feature_lifetime_end,
    airport_heliport.surveycontrolpoint_ts.designator_value,
    airport_heliport.surveycontrolpoint_ts.designator_nilreason,
    airport_heliport_airportheliport_pt_ykngkg.title,
    airport_heliport_airportheliport_pt_ykngkg.nilreason[1],
    airport_heliport_airportheliport_pt_ykngkg.href,
    geometry_elevatedpoint_view_eilazk.geom,
    geometry_elevatedpoint_view_eilazk.elevation,
    geometry_elevatedpoint_view_eilazk.geoidUndulation,
    geometry_elevatedpoint_view_eilazk.verticalDatum,
    geometry_elevatedpoint_view_eilazk.verticalAccuracy,
    geometry_elevatedpoint_view_eilazk.horizontalAccuracy
order by surveycontrolpoint.identifier, surveycontrolpoint_ts.sequence_number, surveycontrolpoint_ts.correction_number DESC;
create index on airport_heliport.surveycontrolpoint_view (id);
-- TACANTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.tacan_view cascade;
create materialized view navaids_points.tacan_view as
select distinct on (tacan.identifier,tacan_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.tacan.id,
    navaids_points.tacan_ts.id as ts_id,
    navaids_points.tacan_tsp.id as tsp_id,
    navaids_points.tacan.identifier,
    navaids_points.tacan_ts.interpretation,
    navaids_points.tacan_ts.sequence_number,
    navaids_points.tacan_ts.correction_number,
    navaids_points.tacan_ts.valid_time_begin,
    navaids_points.tacan_ts.valid_time_end,
    navaids_points.tacan_ts.feature_lifetime_begin,
    navaids_points.tacan_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.tacan_ts.designator_value as varchar), '(' || navaids_points.tacan_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.tacan_ts.name_value as varchar), '(' || navaids_points.tacan_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.tacan_ts.emissionclass_value as varchar), '(' || navaids_points.tacan_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.tacan_ts.mobile_value as varchar), '(' || navaids_points.tacan_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.tacan_ts.magneticvariation_value as varchar), '(' || navaids_points.tacan_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.tacan_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.tacan_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.tacan_ts.datemagneticvariation_value as varchar), '(' || navaids_points.tacan_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.tacan_ts.flightchecked_value as varchar), '(' || navaids_points.tacan_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.tacan_ts.channel_value as varchar), '(' || navaids_points.tacan_ts.channel_nilreason || ')') as channel,
    coalesce(cast(navaids_points.tacan_ts.declination_value as varchar), '(' || navaids_points.tacan_ts.declination_nilreason || ')') as declination,
    geometry_elevatedpoint_view_itmbtt.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_itmbtt.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_itmbtt.geom) AS location_latitude,
    geometry_elevatedpoint_view_itmbtt.elevation AS location_elevation,
    geometry_elevatedpoint_view_itmbtt.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_itmbtt.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_itmbtt.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_itmbtt.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_ilzreo.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_bcnvsq.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_gfancv.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_hiqeul.*) AS annotation
from navaids_points.tacan 
inner join master_join mj2 on navaids_points.tacan.id = mj2.source_id
inner join navaids_points.tacan_tsp on mj2.target_id = navaids_points.tacan_tsp.id
inner join navaids_points.tacan_ts on navaids_points.tacan_tsp.tacantimeslice_id = navaids_points.tacan_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_itmbtt on navaids_points.tacan_ts.location_id = geometry_elevatedpoint_view_itmbtt.id
left join master_join master_join_hxwwgv on navaids_points.tacan_ts.id = master_join_hxwwgv.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_ilzreo on master_join_hxwwgv.target_id = navaids_points_authorityfornavaidequipment_view_ilzreo.id
left join master_join master_join_xcedmc on navaids_points.tacan_ts.id = master_join_xcedmc.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_bcnvsq on master_join_xcedmc.target_id = navaids_points_navaidequipmentmonitoring_view_bcnvsq.id
left join master_join master_join_enwfmq on navaids_points.tacan_ts.id = master_join_enwfmq.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_gfancv on master_join_enwfmq.target_id = navaids_points_navaidoperationalstatus_view_gfancv.id
left join master_join master_join_gbhyid on navaids_points.tacan_ts.id = master_join_gbhyid.source_id
left join notes.note_view notes_note_view_hiqeul on master_join_gbhyid.target_id = notes_note_view_hiqeul.id
where navaids_points.tacan.feature_status = 'APPROVED'
  and navaids_points.tacan_ts.feature_status = 'APPROVED'
group by
    navaids_points.tacan.id,
    navaids_points.tacan_ts.id,
    navaids_points.tacan_tsp.id,
    navaids_points.tacan.identifier,
    navaids_points.tacan_ts.interpretation,
    navaids_points.tacan_ts.sequence_number,
    navaids_points.tacan_ts.correction_number,
    navaids_points.tacan_ts.valid_time_begin,
    navaids_points.tacan_ts.valid_time_end,
    navaids_points.tacan_ts.feature_lifetime_begin,
    navaids_points.tacan_ts.feature_lifetime_end,
    navaids_points.tacan_ts.designator_value,
    navaids_points.tacan_ts.designator_nilreason,
    navaids_points.tacan_ts.name_value,
    navaids_points.tacan_ts.name_nilreason,
    navaids_points.tacan_ts.emissionclass_value,
    navaids_points.tacan_ts.emissionclass_nilreason,
    navaids_points.tacan_ts.mobile_value,
    navaids_points.tacan_ts.mobile_nilreason,
    navaids_points.tacan_ts.magneticvariation_value,
    navaids_points.tacan_ts.magneticvariation_nilreason,
    navaids_points.tacan_ts.magneticvariationaccuracy_value,
    navaids_points.tacan_ts.magneticvariationaccuracy_nilreason,
    navaids_points.tacan_ts.datemagneticvariation_value,
    navaids_points.tacan_ts.datemagneticvariation_nilreason,
    navaids_points.tacan_ts.flightchecked_value,
    navaids_points.tacan_ts.flightchecked_nilreason,
    navaids_points.tacan_ts.channel_value,
    navaids_points.tacan_ts.channel_nilreason,
    navaids_points.tacan_ts.declination_value,
    navaids_points.tacan_ts.declination_nilreason,
    geometry_elevatedpoint_view_itmbtt.geom,
    geometry_elevatedpoint_view_itmbtt.elevation,
    geometry_elevatedpoint_view_itmbtt.geoidUndulation,
    geometry_elevatedpoint_view_itmbtt.verticalDatum,
    geometry_elevatedpoint_view_itmbtt.verticalAccuracy,
    geometry_elevatedpoint_view_itmbtt.horizontalAccuracy
order by tacan.identifier, tacan_ts.sequence_number, tacan_ts.correction_number DESC;
create index on navaids_points.tacan_view (id);
-- TaxiHoldingPositionLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.taxiholdingpositionlightsystem_view cascade;
create materialized view airport_heliport.taxiholdingpositionlightsystem_view as
select distinct on (taxiholdingpositionlightsystem.identifier,taxiholdingpositionlightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingpositionlightsystem.id,
    airport_heliport.taxiholdingpositionlightsystem_ts.id as ts_id,
    airport_heliport.taxiholdingpositionlightsystem_tsp.id as tsp_id,
    airport_heliport.taxiholdingpositionlightsystem.identifier,
    airport_heliport.taxiholdingpositionlightsystem_ts.interpretation,
    airport_heliport.taxiholdingpositionlightsystem_ts.sequence_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.correction_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.colour_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.taxiholdingpositionlightsystem_ts.type_value as varchar), '(' || airport_heliport.taxiholdingpositionlightsystem_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_taxiholdingposition_pt_hvsvon.title as varchar), '(' || airport_heliport_taxiholdingposition_pt_hvsvon.nilreason[1] || ')') AS taxiholding,
    airport_heliport_taxiholdingposition_pt_hvsvon.href AS taxiholding_href,
    jsonb_agg(shared_lightelement_view_imzoug.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_hvsbhg.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_bjxsur.*) AS annotation
from airport_heliport.taxiholdingpositionlightsystem 
inner join master_join mj2 on airport_heliport.taxiholdingpositionlightsystem.id = mj2.source_id
inner join airport_heliport.taxiholdingpositionlightsystem_tsp on mj2.target_id = airport_heliport.taxiholdingpositionlightsystem_tsp.id
inner join airport_heliport.taxiholdingpositionlightsystem_ts on airport_heliport.taxiholdingpositionlightsystem_tsp.taxiholdingpositionlightsystemtimeslice_id = airport_heliport.taxiholdingpositionlightsystem_ts.id
left join airport_heliport.taxiholdingposition_pt airport_heliport_taxiholdingposition_pt_hvsvon on airport_heliport.taxiholdingpositionlightsystem_ts.taxiholding_id = airport_heliport_taxiholdingposition_pt_hvsvon.id
left join master_join master_join_ykeqek on airport_heliport.taxiholdingpositionlightsystem_ts.id = master_join_ykeqek.source_id
left join shared.lightelement_view shared_lightelement_view_imzoug on master_join_ykeqek.target_id = shared_lightelement_view_imzoug.id
left join master_join master_join_oqombt on airport_heliport.taxiholdingpositionlightsystem_ts.id = master_join_oqombt.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_hvsbhg on master_join_oqombt.target_id = airport_heliport_groundlightingavailability_view_hvsbhg.id
left join master_join master_join_amokkc on airport_heliport.taxiholdingpositionlightsystem_ts.id = master_join_amokkc.source_id
left join notes.note_view notes_note_view_bjxsur on master_join_amokkc.target_id = notes_note_view_bjxsur.id
where airport_heliport.taxiholdingpositionlightsystem.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingpositionlightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingpositionlightsystem.id,
    airport_heliport.taxiholdingpositionlightsystem_ts.id,
    airport_heliport.taxiholdingpositionlightsystem_tsp.id,
    airport_heliport.taxiholdingpositionlightsystem.identifier,
    airport_heliport.taxiholdingpositionlightsystem_ts.interpretation,
    airport_heliport.taxiholdingpositionlightsystem_ts.sequence_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.correction_number,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.valid_time_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionlightsystem_ts.feature_lifetime_end,
    airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.emergencylighting_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.intensitylevel_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.colour_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.colour_nilreason,
    airport_heliport.taxiholdingpositionlightsystem_ts.type_value,
    airport_heliport.taxiholdingpositionlightsystem_ts.type_nilreason,
    airport_heliport_taxiholdingposition_pt_hvsvon.title,
    airport_heliport_taxiholdingposition_pt_hvsvon.nilreason[1],
    airport_heliport_taxiholdingposition_pt_hvsvon.href
order by taxiholdingpositionlightsystem.identifier, taxiholdingpositionlightsystem_ts.sequence_number, taxiholdingpositionlightsystem_ts.correction_number DESC;
create index on airport_heliport.taxiholdingpositionlightsystem_view (id);
-- TaxiHoldingPositionMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiholdingpositionmarking_view cascade;
create materialized view airport_heliport.taxiholdingpositionmarking_view as
select distinct on (taxiholdingpositionmarking.identifier,taxiholdingpositionmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingpositionmarking.id,
    airport_heliport.taxiholdingpositionmarking_ts.id as ts_id,
    airport_heliport.taxiholdingpositionmarking_tsp.id as tsp_id,
    airport_heliport.taxiholdingpositionmarking.identifier,
    airport_heliport.taxiholdingpositionmarking_ts.interpretation,
    airport_heliport.taxiholdingpositionmarking_ts.sequence_number,
    airport_heliport.taxiholdingpositionmarking_ts.correction_number,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_end,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.taxiholdingpositionmarking_ts.condition_value as varchar), '(' || airport_heliport.taxiholdingpositionmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport_taxiholdingposition_pt_vbybud.title as varchar), '(' || airport_heliport_taxiholdingposition_pt_vbybud.nilreason[1] || ')') AS markedtaxihold,
    airport_heliport_taxiholdingposition_pt_vbybud.href AS markedtaxihold_href,
    jsonb_agg(airport_heliport_markingelement_view_gjxyob.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_zmzbau.*) AS annotation
from airport_heliport.taxiholdingpositionmarking 
inner join master_join mj2 on airport_heliport.taxiholdingpositionmarking.id = mj2.source_id
inner join airport_heliport.taxiholdingpositionmarking_tsp on mj2.target_id = airport_heliport.taxiholdingpositionmarking_tsp.id
inner join airport_heliport.taxiholdingpositionmarking_ts on airport_heliport.taxiholdingpositionmarking_tsp.taxiholdingpositionmarkingtimeslice_id = airport_heliport.taxiholdingpositionmarking_ts.id
left join airport_heliport.taxiholdingposition_pt airport_heliport_taxiholdingposition_pt_vbybud on airport_heliport.taxiholdingpositionmarking_ts.markedtaxihold_id = airport_heliport_taxiholdingposition_pt_vbybud.id
left join master_join master_join_wuwtih on airport_heliport.taxiholdingpositionmarking_ts.id = master_join_wuwtih.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_gjxyob on master_join_wuwtih.target_id = airport_heliport_markingelement_view_gjxyob.id
left join master_join master_join_cehmrp on airport_heliport.taxiholdingpositionmarking_ts.id = master_join_cehmrp.source_id
left join notes.note_view notes_note_view_zmzbau on master_join_cehmrp.target_id = notes_note_view_zmzbau.id
where airport_heliport.taxiholdingpositionmarking.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingpositionmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingpositionmarking.id,
    airport_heliport.taxiholdingpositionmarking_ts.id,
    airport_heliport.taxiholdingpositionmarking_tsp.id,
    airport_heliport.taxiholdingpositionmarking.identifier,
    airport_heliport.taxiholdingpositionmarking_ts.interpretation,
    airport_heliport.taxiholdingpositionmarking_ts.sequence_number,
    airport_heliport.taxiholdingpositionmarking_ts.correction_number,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_begin,
    airport_heliport.taxiholdingpositionmarking_ts.valid_time_end,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingpositionmarking_ts.feature_lifetime_end,
    airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_value,
    airport_heliport.taxiholdingpositionmarking_ts.markingicaostandard_nilreason,
    airport_heliport.taxiholdingpositionmarking_ts.condition_value,
    airport_heliport.taxiholdingpositionmarking_ts.condition_nilreason,
    airport_heliport_taxiholdingposition_pt_vbybud.title,
    airport_heliport_taxiholdingposition_pt_vbybud.nilreason[1],
    airport_heliport_taxiholdingposition_pt_vbybud.href
order by taxiholdingpositionmarking.identifier, taxiholdingpositionmarking_ts.sequence_number, taxiholdingpositionmarking_ts.correction_number DESC;
create index on airport_heliport.taxiholdingpositionmarking_view (id);
-- TaxiHoldingPositionTimeSliceType
-- ['geometry.elevatedpoint_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiholdingposition_view cascade;
create materialized view airport_heliport.taxiholdingposition_view as
select distinct on (taxiholdingposition.identifier,taxiholdingposition_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiholdingposition.id,
    airport_heliport.taxiholdingposition_ts.id as ts_id,
    airport_heliport.taxiholdingposition_tsp.id as tsp_id,
    airport_heliport.taxiholdingposition.identifier,
    airport_heliport.taxiholdingposition_ts.interpretation,
    airport_heliport.taxiholdingposition_ts.sequence_number,
    airport_heliport.taxiholdingposition_ts.correction_number,
    airport_heliport.taxiholdingposition_ts.valid_time_begin,
    airport_heliport.taxiholdingposition_ts.valid_time_end,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiholdingposition_ts.landingcategory_value as varchar), '(' || airport_heliport.taxiholdingposition_ts.landingcategory_nilreason || ')') as landingcategory,
    coalesce(cast(airport_heliport.taxiholdingposition_ts.status_value as varchar), '(' || airport_heliport.taxiholdingposition_ts.status_nilreason || ')') as status,
    coalesce(cast(airport_heliport_guidanceline_pt_ahrwqn.title as varchar), '(' || airport_heliport_guidanceline_pt_ahrwqn.nilreason[1] || ')') AS associatedguidanceline,
    airport_heliport_guidanceline_pt_ahrwqn.href AS associatedguidanceline_href,
    geometry_elevatedpoint_view_cihmcd.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_cihmcd.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_cihmcd.geom) AS location_latitude,
    geometry_elevatedpoint_view_cihmcd.elevation AS location_elevation,
    geometry_elevatedpoint_view_cihmcd.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_cihmcd.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_cihmcd.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_cihmcd.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(DISTINCT jsonb_build_object('id', airport_heliport_runway_pt_oalohb.id,
    'title', coalesce(cast(airport_heliport_runway_pt_oalohb.title AS varchar), '(' || airport_heliport_runway_pt_oalohb.nilreason[1] || ')'),
    'href', airport_heliport_runway_pt_oalohb.href)) AS protectedrunway,
    jsonb_agg(DISTINCT notes_note_view_ujhtpj.*) AS annotation
from airport_heliport.taxiholdingposition 
inner join master_join mj2 on airport_heliport.taxiholdingposition.id = mj2.source_id
inner join airport_heliport.taxiholdingposition_tsp on mj2.target_id = airport_heliport.taxiholdingposition_tsp.id
inner join airport_heliport.taxiholdingposition_ts on airport_heliport.taxiholdingposition_tsp.taxiholdingpositiontimeslice_id = airport_heliport.taxiholdingposition_ts.id
left join airport_heliport.guidanceline_pt airport_heliport_guidanceline_pt_ahrwqn on airport_heliport.taxiholdingposition_ts.associatedguidanceline_id = airport_heliport_guidanceline_pt_ahrwqn.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_cihmcd on airport_heliport.taxiholdingposition_ts.location_id = geometry_elevatedpoint_view_cihmcd.id
left join master_join master_join_laaceg on airport_heliport.taxiholdingposition_ts.id = master_join_laaceg.source_id
left join airport_heliport.runway_pt airport_heliport_runway_pt_oalohb on master_join_laaceg.target_id = airport_heliport_runway_pt_oalohb.id
left join master_join master_join_ytpqqw on airport_heliport.taxiholdingposition_ts.id = master_join_ytpqqw.source_id
left join notes.note_view notes_note_view_ujhtpj on master_join_ytpqqw.target_id = notes_note_view_ujhtpj.id
where airport_heliport.taxiholdingposition.feature_status = 'APPROVED'
  and airport_heliport.taxiholdingposition_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiholdingposition.id,
    airport_heliport.taxiholdingposition_ts.id,
    airport_heliport.taxiholdingposition_tsp.id,
    airport_heliport.taxiholdingposition.identifier,
    airport_heliport.taxiholdingposition_ts.interpretation,
    airport_heliport.taxiholdingposition_ts.sequence_number,
    airport_heliport.taxiholdingposition_ts.correction_number,
    airport_heliport.taxiholdingposition_ts.valid_time_begin,
    airport_heliport.taxiholdingposition_ts.valid_time_end,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_begin,
    airport_heliport.taxiholdingposition_ts.feature_lifetime_end,
    airport_heliport.taxiholdingposition_ts.landingcategory_value,
    airport_heliport.taxiholdingposition_ts.landingcategory_nilreason,
    airport_heliport.taxiholdingposition_ts.status_value,
    airport_heliport.taxiholdingposition_ts.status_nilreason,
    airport_heliport_guidanceline_pt_ahrwqn.title,
    airport_heliport_guidanceline_pt_ahrwqn.nilreason[1],
    airport_heliport_guidanceline_pt_ahrwqn.href,
    geometry_elevatedpoint_view_cihmcd.geom,
    geometry_elevatedpoint_view_cihmcd.elevation,
    geometry_elevatedpoint_view_cihmcd.geoidUndulation,
    geometry_elevatedpoint_view_cihmcd.verticalDatum,
    geometry_elevatedpoint_view_cihmcd.verticalAccuracy,
    geometry_elevatedpoint_view_cihmcd.horizontalAccuracy
order by taxiholdingposition.identifier, taxiholdingposition_ts.sequence_number, taxiholdingposition_ts.correction_number DESC;
create index on airport_heliport.taxiholdingposition_view (id);
-- TaxiwayElementTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.manoeuvringareaavailability_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiwayelement_view cascade;
create materialized view airport_heliport.taxiwayelement_view as
select distinct on (taxiwayelement.identifier,taxiwayelement_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwayelement.id,
    airport_heliport.taxiwayelement_ts.id as ts_id,
    airport_heliport.taxiwayelement_tsp.id as tsp_id,
    airport_heliport.taxiwayelement.identifier,
    airport_heliport.taxiwayelement_ts.interpretation,
    airport_heliport.taxiwayelement_ts.sequence_number,
    airport_heliport.taxiwayelement_ts.correction_number,
    airport_heliport.taxiwayelement_ts.valid_time_begin,
    airport_heliport.taxiwayelement_ts.valid_time_end,
    airport_heliport.taxiwayelement_ts.feature_lifetime_begin,
    airport_heliport.taxiwayelement_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiwayelement_ts.type_value as varchar), '(' || airport_heliport.taxiwayelement_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.taxiwayelement_ts.gradeseparation_value as varchar), '(' || airport_heliport.taxiwayelement_ts.gradeseparation_nilreason || ')') as gradeseparation,
    coalesce(cast(airport_heliport.taxiwayelement_ts.length_value as varchar) || ' ' || airport_heliport.taxiwayelement_ts.length_uom, '(' || airport_heliport.taxiwayelement_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.taxiwayelement_ts.width_value as varchar) || ' ' || airport_heliport.taxiwayelement_ts.width_uom, '(' || airport_heliport.taxiwayelement_ts.width_nilreason || ')') as width,
    airport_heliport_surfacecharacteristics_view_ytbden.id AS surfaceproperties,
    coalesce(cast(airport_heliport_taxiway_pt_zkmnmr.title as varchar), '(' || airport_heliport_taxiway_pt_zkmnmr.nilreason[1] || ')') AS associatedtaxiway,
    airport_heliport_taxiway_pt_zkmnmr.href AS associatedtaxiway_href,
    geometry_elevatedsurface_view_kieybd.geom AS extent_geom,
    geometry_elevatedsurface_view_kieybd.elevation AS extent_elevation,
    geometry_elevatedsurface_view_kieybd.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_kieybd.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_kieybd.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_kieybd.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(DISTINCT notes_note_view_qkahmx.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_ycszhd.id) AS availability
from airport_heliport.taxiwayelement 
inner join master_join mj2 on airport_heliport.taxiwayelement.id = mj2.source_id
inner join airport_heliport.taxiwayelement_tsp on mj2.target_id = airport_heliport.taxiwayelement_tsp.id
inner join airport_heliport.taxiwayelement_ts on airport_heliport.taxiwayelement_tsp.taxiwayelementtimeslice_id = airport_heliport.taxiwayelement_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_ytbden on airport_heliport.taxiwayelement_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_ytbden.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_zkmnmr on airport_heliport.taxiwayelement_ts.associatedtaxiway_id = airport_heliport_taxiway_pt_zkmnmr.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_kieybd on airport_heliport.taxiwayelement_ts.extent_id = geometry_elevatedsurface_view_kieybd.id
left join master_join master_join_skavyx on airport_heliport.taxiwayelement_ts.id = master_join_skavyx.source_id
left join notes.note_view notes_note_view_qkahmx on master_join_skavyx.target_id = notes_note_view_qkahmx.id
left join master_join master_join_sypeus on airport_heliport.taxiwayelement_ts.id = master_join_sypeus.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_ycszhd on master_join_sypeus.target_id = airport_heliport_manoeuvringareaavailability_view_ycszhd.id
where airport_heliport.taxiwayelement.feature_status = 'APPROVED'
  and airport_heliport.taxiwayelement_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwayelement.id,
    airport_heliport.taxiwayelement_ts.id,
    airport_heliport.taxiwayelement_tsp.id,
    airport_heliport.taxiwayelement.identifier,
    airport_heliport.taxiwayelement_ts.interpretation,
    airport_heliport.taxiwayelement_ts.sequence_number,
    airport_heliport.taxiwayelement_ts.correction_number,
    airport_heliport.taxiwayelement_ts.valid_time_begin,
    airport_heliport.taxiwayelement_ts.valid_time_end,
    airport_heliport.taxiwayelement_ts.feature_lifetime_begin,
    airport_heliport.taxiwayelement_ts.feature_lifetime_end,
    airport_heliport.taxiwayelement_ts.type_value,
    airport_heliport.taxiwayelement_ts.type_nilreason,
    airport_heliport.taxiwayelement_ts.gradeseparation_value,
    airport_heliport.taxiwayelement_ts.gradeseparation_nilreason,
    airport_heliport.taxiwayelement_ts.length_value,
    airport_heliport.taxiwayelement_ts.length_uom,
    airport_heliport.taxiwayelement_ts.length_nilreason,
    airport_heliport.taxiwayelement_ts.width_value,
    airport_heliport.taxiwayelement_ts.width_uom,
    airport_heliport.taxiwayelement_ts.width_nilreason,
    airport_heliport_surfacecharacteristics_view_ytbden.id,
    airport_heliport_taxiway_pt_zkmnmr.title,
    airport_heliport_taxiway_pt_zkmnmr.nilreason[1],
    airport_heliport_taxiway_pt_zkmnmr.href,
    geometry_elevatedsurface_view_kieybd.geom,
    geometry_elevatedsurface_view_kieybd.elevation,
    geometry_elevatedsurface_view_kieybd.geoidUndulation,
    geometry_elevatedsurface_view_kieybd.verticalDatum,
    geometry_elevatedsurface_view_kieybd.verticalAccuracy,
    geometry_elevatedsurface_view_kieybd.horizontalAccuracy
order by taxiwayelement.identifier, taxiwayelement_ts.sequence_number, taxiwayelement_ts.correction_number DESC;
create index on airport_heliport.taxiwayelement_view (id);
-- TaxiwayLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.taxiwaylightsystem_view cascade;
create materialized view airport_heliport.taxiwaylightsystem_view as
select distinct on (taxiwaylightsystem.identifier,taxiwaylightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwaylightsystem.id,
    airport_heliport.taxiwaylightsystem_ts.id as ts_id,
    airport_heliport.taxiwaylightsystem_tsp.id as tsp_id,
    airport_heliport.taxiwaylightsystem.identifier,
    airport_heliport.taxiwaylightsystem_ts.interpretation,
    airport_heliport.taxiwaylightsystem_ts.sequence_number,
    airport_heliport.taxiwaylightsystem_ts.correction_number,
    airport_heliport.taxiwaylightsystem_ts.valid_time_begin,
    airport_heliport.taxiwaylightsystem_ts.valid_time_end,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.colour_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.taxiwaylightsystem_ts.position_value as varchar), '(' || airport_heliport.taxiwaylightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_taxiway_pt_eujpes.title as varchar), '(' || airport_heliport_taxiway_pt_eujpes.nilreason[1] || ')') AS lightedtaxiway,
    airport_heliport_taxiway_pt_eujpes.href AS lightedtaxiway_href,
    jsonb_agg(shared_lightelement_view_rrvndo.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_oupaph.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_hqooze.*) AS annotation
from airport_heliport.taxiwaylightsystem 
inner join master_join mj2 on airport_heliport.taxiwaylightsystem.id = mj2.source_id
inner join airport_heliport.taxiwaylightsystem_tsp on mj2.target_id = airport_heliport.taxiwaylightsystem_tsp.id
inner join airport_heliport.taxiwaylightsystem_ts on airport_heliport.taxiwaylightsystem_tsp.taxiwaylightsystemtimeslice_id = airport_heliport.taxiwaylightsystem_ts.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_eujpes on airport_heliport.taxiwaylightsystem_ts.lightedtaxiway_id = airport_heliport_taxiway_pt_eujpes.id
left join master_join master_join_dcvpxk on airport_heliport.taxiwaylightsystem_ts.id = master_join_dcvpxk.source_id
left join shared.lightelement_view shared_lightelement_view_rrvndo on master_join_dcvpxk.target_id = shared_lightelement_view_rrvndo.id
left join master_join master_join_lpzgbb on airport_heliport.taxiwaylightsystem_ts.id = master_join_lpzgbb.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_oupaph on master_join_lpzgbb.target_id = airport_heliport_groundlightingavailability_view_oupaph.id
left join master_join master_join_utucqc on airport_heliport.taxiwaylightsystem_ts.id = master_join_utucqc.source_id
left join notes.note_view notes_note_view_hqooze on master_join_utucqc.target_id = notes_note_view_hqooze.id
where airport_heliport.taxiwaylightsystem.feature_status = 'APPROVED'
  and airport_heliport.taxiwaylightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwaylightsystem.id,
    airport_heliport.taxiwaylightsystem_ts.id,
    airport_heliport.taxiwaylightsystem_tsp.id,
    airport_heliport.taxiwaylightsystem.identifier,
    airport_heliport.taxiwaylightsystem_ts.interpretation,
    airport_heliport.taxiwaylightsystem_ts.sequence_number,
    airport_heliport.taxiwaylightsystem_ts.correction_number,
    airport_heliport.taxiwaylightsystem_ts.valid_time_begin,
    airport_heliport.taxiwaylightsystem_ts.valid_time_end,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_begin,
    airport_heliport.taxiwaylightsystem_ts.feature_lifetime_end,
    airport_heliport.taxiwaylightsystem_ts.emergencylighting_value,
    airport_heliport.taxiwaylightsystem_ts.emergencylighting_nilreason,
    airport_heliport.taxiwaylightsystem_ts.intensitylevel_value,
    airport_heliport.taxiwaylightsystem_ts.intensitylevel_nilreason,
    airport_heliport.taxiwaylightsystem_ts.colour_value,
    airport_heliport.taxiwaylightsystem_ts.colour_nilreason,
    airport_heliport.taxiwaylightsystem_ts.position_value,
    airport_heliport.taxiwaylightsystem_ts.position_nilreason,
    airport_heliport_taxiway_pt_eujpes.title,
    airport_heliport_taxiway_pt_eujpes.nilreason[1],
    airport_heliport_taxiway_pt_eujpes.href
order by taxiwaylightsystem.identifier, taxiwaylightsystem_ts.sequence_number, taxiwaylightsystem_ts.correction_number DESC;
create index on airport_heliport.taxiwaylightsystem_view (id);
-- TaxiwayMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiwaymarking_view cascade;
create materialized view airport_heliport.taxiwaymarking_view as
select distinct on (taxiwaymarking.identifier,taxiwaymarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiwaymarking.id,
    airport_heliport.taxiwaymarking_ts.id as ts_id,
    airport_heliport.taxiwaymarking_tsp.id as tsp_id,
    airport_heliport.taxiwaymarking.identifier,
    airport_heliport.taxiwaymarking_ts.interpretation,
    airport_heliport.taxiwaymarking_ts.sequence_number,
    airport_heliport.taxiwaymarking_ts.correction_number,
    airport_heliport.taxiwaymarking_ts.valid_time_begin,
    airport_heliport.taxiwaymarking_ts.valid_time_end,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_begin,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.condition_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.taxiwaymarking_ts.markinglocation_value as varchar), '(' || airport_heliport.taxiwaymarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_taxiway_pt_ichpkg.title as varchar), '(' || airport_heliport_taxiway_pt_ichpkg.nilreason[1] || ')') AS markedtaxiway,
    airport_heliport_taxiway_pt_ichpkg.href AS markedtaxiway_href,
    coalesce(cast(airport_heliport_taxiwayelement_pt_rosdqg.title as varchar), '(' || airport_heliport_taxiwayelement_pt_rosdqg.nilreason[1] || ')') AS markedelement,
    airport_heliport_taxiwayelement_pt_rosdqg.href AS markedelement_href,
    jsonb_agg(airport_heliport_markingelement_view_srmqyz.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_ivzmid.*) AS annotation
from airport_heliport.taxiwaymarking 
inner join master_join mj2 on airport_heliport.taxiwaymarking.id = mj2.source_id
inner join airport_heliport.taxiwaymarking_tsp on mj2.target_id = airport_heliport.taxiwaymarking_tsp.id
inner join airport_heliport.taxiwaymarking_ts on airport_heliport.taxiwaymarking_tsp.taxiwaymarkingtimeslice_id = airport_heliport.taxiwaymarking_ts.id
left join airport_heliport.taxiway_pt airport_heliport_taxiway_pt_ichpkg on airport_heliport.taxiwaymarking_ts.markedtaxiway_id = airport_heliport_taxiway_pt_ichpkg.id
left join airport_heliport.taxiwayelement_pt airport_heliport_taxiwayelement_pt_rosdqg on airport_heliport.taxiwaymarking_ts.markedelement_id = airport_heliport_taxiwayelement_pt_rosdqg.id
left join master_join master_join_acaior on airport_heliport.taxiwaymarking_ts.id = master_join_acaior.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_srmqyz on master_join_acaior.target_id = airport_heliport_markingelement_view_srmqyz.id
left join master_join master_join_yzusui on airport_heliport.taxiwaymarking_ts.id = master_join_yzusui.source_id
left join notes.note_view notes_note_view_ivzmid on master_join_yzusui.target_id = notes_note_view_ivzmid.id
where airport_heliport.taxiwaymarking.feature_status = 'APPROVED'
  and airport_heliport.taxiwaymarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiwaymarking.id,
    airport_heliport.taxiwaymarking_ts.id,
    airport_heliport.taxiwaymarking_tsp.id,
    airport_heliport.taxiwaymarking.identifier,
    airport_heliport.taxiwaymarking_ts.interpretation,
    airport_heliport.taxiwaymarking_ts.sequence_number,
    airport_heliport.taxiwaymarking_ts.correction_number,
    airport_heliport.taxiwaymarking_ts.valid_time_begin,
    airport_heliport.taxiwaymarking_ts.valid_time_end,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_begin,
    airport_heliport.taxiwaymarking_ts.feature_lifetime_end,
    airport_heliport.taxiwaymarking_ts.markingicaostandard_value,
    airport_heliport.taxiwaymarking_ts.markingicaostandard_nilreason,
    airport_heliport.taxiwaymarking_ts.condition_value,
    airport_heliport.taxiwaymarking_ts.condition_nilreason,
    airport_heliport.taxiwaymarking_ts.markinglocation_value,
    airport_heliport.taxiwaymarking_ts.markinglocation_nilreason,
    airport_heliport_taxiway_pt_ichpkg.title,
    airport_heliport_taxiway_pt_ichpkg.nilreason[1],
    airport_heliport_taxiway_pt_ichpkg.href,
    airport_heliport_taxiwayelement_pt_rosdqg.title,
    airport_heliport_taxiwayelement_pt_rosdqg.nilreason[1],
    airport_heliport_taxiwayelement_pt_rosdqg.href
order by taxiwaymarking.identifier, taxiwaymarking_ts.sequence_number, taxiwaymarking_ts.correction_number DESC;
create index on airport_heliport.taxiwaymarking_view (id);
-- TaxiwayTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'airport_heliport.taxiwaycontamination_view', 'airport_heliport.manoeuvringareaavailability_view', 'notes.note_view']
drop materialized view if exists airport_heliport.taxiway_view cascade;
create materialized view airport_heliport.taxiway_view as
select distinct on (taxiway.identifier,taxiway_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.taxiway.id,
    airport_heliport.taxiway_ts.id as ts_id,
    airport_heliport.taxiway_tsp.id as tsp_id,
    airport_heliport.taxiway.identifier,
    airport_heliport.taxiway_ts.interpretation,
    airport_heliport.taxiway_ts.sequence_number,
    airport_heliport.taxiway_ts.correction_number,
    airport_heliport.taxiway_ts.valid_time_begin,
    airport_heliport.taxiway_ts.valid_time_end,
    airport_heliport.taxiway_ts.feature_lifetime_begin,
    airport_heliport.taxiway_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.taxiway_ts.designator_value as varchar), '(' || airport_heliport.taxiway_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.taxiway_ts.type_value as varchar), '(' || airport_heliport.taxiway_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.taxiway_ts.abandoned_value as varchar), '(' || airport_heliport.taxiway_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.taxiway_ts.width_value as varchar) || ' ' || airport_heliport.taxiway_ts.width_uom, '(' || airport_heliport.taxiway_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.taxiway_ts.widthshoulder_value as varchar) || ' ' || airport_heliport.taxiway_ts.widthshoulder_uom, '(' || airport_heliport.taxiway_ts.widthshoulder_nilreason || ')') as widthshoulder,
    coalesce(cast(airport_heliport.taxiway_ts.length_value as varchar) || ' ' || airport_heliport.taxiway_ts.length_uom, '(' || airport_heliport.taxiway_ts.length_nilreason || ')') as length,
    airport_heliport_surfacecharacteristics_view_jtixzz.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_qfscas.title as varchar), '(' || airport_heliport_airportheliport_pt_qfscas.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_qfscas.href AS associatedairportheliport_href,
    jsonb_agg(airport_heliport_taxiwaycontamination_view_ccwtxg.id) AS contaminant,
    jsonb_agg(DISTINCT notes_note_view_yxchfk.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_hvyxfi.id) AS availability
from airport_heliport.taxiway 
inner join master_join mj2 on airport_heliport.taxiway.id = mj2.source_id
inner join airport_heliport.taxiway_tsp on mj2.target_id = airport_heliport.taxiway_tsp.id
inner join airport_heliport.taxiway_ts on airport_heliport.taxiway_tsp.taxiwaytimeslice_id = airport_heliport.taxiway_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_jtixzz on airport_heliport.taxiway_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_jtixzz.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_qfscas on airport_heliport.taxiway_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_qfscas.id
left join master_join master_join_ietryb on airport_heliport.taxiway_ts.id = master_join_ietryb.source_id
left join airport_heliport.taxiwaycontamination_view airport_heliport_taxiwaycontamination_view_ccwtxg on master_join_ietryb.target_id = airport_heliport_taxiwaycontamination_view_ccwtxg.id
left join master_join master_join_pegwqy on airport_heliport.taxiway_ts.id = master_join_pegwqy.source_id
left join notes.note_view notes_note_view_yxchfk on master_join_pegwqy.target_id = notes_note_view_yxchfk.id
left join master_join master_join_votqvk on airport_heliport.taxiway_ts.id = master_join_votqvk.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_hvyxfi on master_join_votqvk.target_id = airport_heliport_manoeuvringareaavailability_view_hvyxfi.id
where airport_heliport.taxiway.feature_status = 'APPROVED'
  and airport_heliport.taxiway_ts.feature_status = 'APPROVED'
group by
    airport_heliport.taxiway.id,
    airport_heliport.taxiway_ts.id,
    airport_heliport.taxiway_tsp.id,
    airport_heliport.taxiway.identifier,
    airport_heliport.taxiway_ts.interpretation,
    airport_heliport.taxiway_ts.sequence_number,
    airport_heliport.taxiway_ts.correction_number,
    airport_heliport.taxiway_ts.valid_time_begin,
    airport_heliport.taxiway_ts.valid_time_end,
    airport_heliport.taxiway_ts.feature_lifetime_begin,
    airport_heliport.taxiway_ts.feature_lifetime_end,
    airport_heliport.taxiway_ts.designator_value,
    airport_heliport.taxiway_ts.designator_nilreason,
    airport_heliport.taxiway_ts.type_value,
    airport_heliport.taxiway_ts.type_nilreason,
    airport_heliport.taxiway_ts.abandoned_value,
    airport_heliport.taxiway_ts.abandoned_nilreason,
    airport_heliport.taxiway_ts.width_value,
    airport_heliport.taxiway_ts.width_uom,
    airport_heliport.taxiway_ts.width_nilreason,
    airport_heliport.taxiway_ts.widthshoulder_value,
    airport_heliport.taxiway_ts.widthshoulder_uom,
    airport_heliport.taxiway_ts.widthshoulder_nilreason,
    airport_heliport.taxiway_ts.length_value,
    airport_heliport.taxiway_ts.length_uom,
    airport_heliport.taxiway_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_view_jtixzz.id,
    airport_heliport_airportheliport_pt_qfscas.title,
    airport_heliport_airportheliport_pt_qfscas.nilreason[1],
    airport_heliport_airportheliport_pt_qfscas.href
order by taxiway.identifier, taxiway_ts.sequence_number, taxiway_ts.correction_number DESC;
create index on airport_heliport.taxiway_view (id);
-- TerminalArrivalAreaTimeSliceType
-- ['geometry.surface_view', 'procedure.terminalarrivalareasector_view', 'geometry.point_view', 'notes.note_view']
drop materialized view if exists procedure.terminalarrivalarea_view cascade;
create materialized view procedure.terminalarrivalarea_view as
select distinct on (terminalarrivalarea.identifier,terminalarrivalarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    procedure.terminalarrivalarea.id,
    procedure.terminalarrivalarea_ts.id as ts_id,
    procedure.terminalarrivalarea_tsp.id as tsp_id,
    procedure.terminalarrivalarea.identifier,
    procedure.terminalarrivalarea_ts.interpretation,
    procedure.terminalarrivalarea_ts.sequence_number,
    procedure.terminalarrivalarea_ts.correction_number,
    procedure.terminalarrivalarea_ts.valid_time_begin,
    procedure.terminalarrivalarea_ts.valid_time_end,
    procedure.terminalarrivalarea_ts.feature_lifetime_begin,
    procedure.terminalarrivalarea_ts.feature_lifetime_end,
    coalesce(cast(procedure.terminalarrivalarea_ts.arrivalareatype_value as varchar), '(' || procedure.terminalarrivalarea_ts.arrivalareatype_nilreason || ')') as arrivalareatype,
    coalesce(cast(procedure.terminalarrivalarea_ts.outerbufferwidth_value as varchar) || ' ' || procedure.terminalarrivalarea_ts.outerbufferwidth_uom, '(' || procedure.terminalarrivalarea_ts.outerbufferwidth_nilreason || ')') as outerbufferwidth,
    coalesce(cast(procedure.terminalarrivalarea_ts.lateralbufferwidth_value as varchar) || ' ' || procedure.terminalarrivalarea_ts.lateralbufferwidth_uom, '(' || procedure.terminalarrivalarea_ts.lateralbufferwidth_nilreason || ')') as lateralbufferwidth,
    coalesce(cast(navaids_points_designatedpoint_pt_firjzm.title as varchar), '(' || navaids_points_designatedpoint_pt_firjzm.nilreason[1] || ')') AS iffixdesignatedpoint,
    navaids_points_designatedpoint_pt_firjzm.href AS iffixdesignatedpoint_href,
    coalesce(cast(navaids_points_designatedpoint_pt_isrfco.title as varchar), '(' || navaids_points_designatedpoint_pt_isrfco.nilreason[1] || ')') AS iaffixdesignatedpoint,
    navaids_points_designatedpoint_pt_isrfco.href AS iaffixdesignatedpoint_href,
    coalesce(cast(navaids_points_navaid_pt_raphmp.title as varchar), '(' || navaids_points_navaid_pt_raphmp.nilreason[1] || ')') AS ifnavaidsystem,
    navaids_points_navaid_pt_raphmp.href AS ifnavaidsystem_href,
    coalesce(cast(navaids_points_navaid_pt_uqxhlr.title as varchar), '(' || navaids_points_navaid_pt_uqxhlr.nilreason[1] || ')') AS iafnavaidsystem,
    navaids_points_navaid_pt_uqxhlr.href AS iafnavaidsystem_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_tdleuw.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_tdleuw.nilreason[1] || ')') AS ifaimingpoint,
    airport_heliport_touchdownliftoff_pt_tdleuw.href AS ifaimingpoint_href,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_piwzej.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_piwzej.nilreason[1] || ')') AS iafaimingpoint,
    airport_heliport_touchdownliftoff_pt_piwzej.href AS iafaimingpoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_kkdvau.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_kkdvau.nilreason[1] || ')') AS ifrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_kkdvau.href AS ifrunwaypoint_href,
    coalesce(cast(airport_heliport_runwaycentrelinepoint_pt_hlhgez.title as varchar), '(' || airport_heliport_runwaycentrelinepoint_pt_hlhgez.nilreason[1] || ')') AS iafrunwaypoint,
    airport_heliport_runwaycentrelinepoint_pt_hlhgez.href AS iafrunwaypoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_lkzjun.title as varchar), '(' || airport_heliport_airportheliport_pt_lkzjun.nilreason[1] || ')') AS ifairportreferencepoint,
    airport_heliport_airportheliport_pt_lkzjun.href AS ifairportreferencepoint_href,
    coalesce(cast(airport_heliport_airportheliport_pt_ncdkqe.title as varchar), '(' || airport_heliport_airportheliport_pt_ncdkqe.nilreason[1] || ')') AS iafairportreferencepoint,
    airport_heliport_airportheliport_pt_ncdkqe.href AS iafairportreferencepoint_href,
    geometry_point_view_agnxvx.geom AS ifposition_geom,
    ST_X(geometry_point_view_agnxvx.geom) AS ifposition_longitude,
    ST_Y(geometry_point_view_agnxvx.geom) AS ifposition_latitude,
    geometry_point_view_agnxvx.horizontalAccuracy AS ifposition_horizontalaccuracy,
    geometry_point_view_agleoq.geom AS iafposition_geom,
    ST_X(geometry_point_view_agleoq.geom) AS iafposition_longitude,
    ST_Y(geometry_point_view_agleoq.geom) AS iafposition_latitude,
    geometry_point_view_agleoq.horizontalAccuracy AS iafposition_horizontalaccuracy,
    geometry_surface_view_sglxnk.geom AS buffer_geom,
    geometry_surface_view_sglxnk.horizontalAccuracy as buffer_horizontalaccuracy,
    coalesce(cast(procedure_instrumentapproachprocedure_pt_kikimz.title as varchar), '(' || procedure_instrumentapproachprocedure_pt_kikimz.nilreason[1] || ')') AS approachrnav,
    procedure_instrumentapproachprocedure_pt_kikimz.href AS approachrnav_href,
    jsonb_agg(procedure_terminalarrivalareasector_view_terrgz.id) AS sector,
    jsonb_agg(DISTINCT notes_note_view_chlgda.*) AS annotation
from procedure.terminalarrivalarea 
inner join master_join mj2 on procedure.terminalarrivalarea.id = mj2.source_id
inner join procedure.terminalarrivalarea_tsp on mj2.target_id = procedure.terminalarrivalarea_tsp.id
inner join procedure.terminalarrivalarea_ts on procedure.terminalarrivalarea_tsp.terminalarrivalareatimeslice_id = procedure.terminalarrivalarea_ts.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_firjzm on procedure.terminalarrivalarea_ts.if_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_firjzm.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_raphmp on procedure.terminalarrivalarea_ts.if_navaidsystem_id = navaids_points_navaid_pt_raphmp.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_tdleuw on procedure.terminalarrivalarea_ts.if_aimingpoint_id = airport_heliport_touchdownliftoff_pt_tdleuw.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_kkdvau on procedure.terminalarrivalarea_ts.if_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_kkdvau.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_lkzjun on procedure.terminalarrivalarea_ts.if_airportreferencepoint_id = airport_heliport_airportheliport_pt_lkzjun.id
left join geometry.point_view geometry_point_view_agnxvx on procedure.terminalarrivalarea_ts.if_position_id = geometry_point_view_agnxvx.id
left join navaids_points.designatedpoint_pt navaids_points_designatedpoint_pt_isrfco on procedure.terminalarrivalarea_ts.iaf_fixdesignatedpoint_id = navaids_points_designatedpoint_pt_isrfco.id
left join navaids_points.navaid_pt navaids_points_navaid_pt_uqxhlr on procedure.terminalarrivalarea_ts.iaf_navaidsystem_id = navaids_points_navaid_pt_uqxhlr.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_piwzej on procedure.terminalarrivalarea_ts.iaf_aimingpoint_id = airport_heliport_touchdownliftoff_pt_piwzej.id
left join airport_heliport.runwaycentrelinepoint_pt airport_heliport_runwaycentrelinepoint_pt_hlhgez on procedure.terminalarrivalarea_ts.iaf_runwaypoint_id = airport_heliport_runwaycentrelinepoint_pt_hlhgez.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_ncdkqe on procedure.terminalarrivalarea_ts.iaf_airportreferencepoint_id = airport_heliport_airportheliport_pt_ncdkqe.id
left join geometry.point_view geometry_point_view_agleoq on procedure.terminalarrivalarea_ts.iaf_position_id = geometry_point_view_agleoq.id
left join geometry.surface_view geometry_surface_view_sglxnk on procedure.terminalarrivalarea_ts.buffer_id = geometry_surface_view_sglxnk.id
left join procedure.instrumentapproachprocedure_pt procedure_instrumentapproachprocedure_pt_kikimz on procedure.terminalarrivalarea_ts.approachrnav_id = procedure_instrumentapproachprocedure_pt_kikimz.id
left join master_join master_join_fraxmx on procedure.terminalarrivalarea_ts.id = master_join_fraxmx.source_id
left join procedure.terminalarrivalareasector_view procedure_terminalarrivalareasector_view_terrgz on master_join_fraxmx.target_id = procedure_terminalarrivalareasector_view_terrgz.id
left join master_join master_join_qxvnoi on procedure.terminalarrivalarea_ts.id = master_join_qxvnoi.source_id
left join notes.note_view notes_note_view_chlgda on master_join_qxvnoi.target_id = notes_note_view_chlgda.id
where procedure.terminalarrivalarea.feature_status = 'APPROVED'
  and procedure.terminalarrivalarea_ts.feature_status = 'APPROVED'
group by
    procedure.terminalarrivalarea.id,
    procedure.terminalarrivalarea_ts.id,
    procedure.terminalarrivalarea_tsp.id,
    procedure.terminalarrivalarea.identifier,
    procedure.terminalarrivalarea_ts.interpretation,
    procedure.terminalarrivalarea_ts.sequence_number,
    procedure.terminalarrivalarea_ts.correction_number,
    procedure.terminalarrivalarea_ts.valid_time_begin,
    procedure.terminalarrivalarea_ts.valid_time_end,
    procedure.terminalarrivalarea_ts.feature_lifetime_begin,
    procedure.terminalarrivalarea_ts.feature_lifetime_end,
    procedure.terminalarrivalarea_ts.arrivalareatype_value,
    procedure.terminalarrivalarea_ts.arrivalareatype_nilreason,
    procedure.terminalarrivalarea_ts.outerbufferwidth_value,
    procedure.terminalarrivalarea_ts.outerbufferwidth_uom,
    procedure.terminalarrivalarea_ts.outerbufferwidth_nilreason,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_value,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_uom,
    procedure.terminalarrivalarea_ts.lateralbufferwidth_nilreason,
    navaids_points_designatedpoint_pt_firjzm.title,
    navaids_points_designatedpoint_pt_firjzm.nilreason[1],
    navaids_points_designatedpoint_pt_firjzm.href,
    navaids_points_navaid_pt_raphmp.title,
    navaids_points_navaid_pt_raphmp.nilreason[1],
    navaids_points_navaid_pt_raphmp.href,
    airport_heliport_touchdownliftoff_pt_tdleuw.title,
    airport_heliport_touchdownliftoff_pt_tdleuw.nilreason[1],
    airport_heliport_touchdownliftoff_pt_tdleuw.href,
    airport_heliport_runwaycentrelinepoint_pt_kkdvau.title,
    airport_heliport_runwaycentrelinepoint_pt_kkdvau.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_kkdvau.href,
    airport_heliport_airportheliport_pt_lkzjun.title,
    airport_heliport_airportheliport_pt_lkzjun.nilreason[1],
    airport_heliport_airportheliport_pt_lkzjun.href,
    geometry_point_view_agnxvx.geom,
    geometry_point_view_agnxvx.horizontalAccuracy,
    navaids_points_designatedpoint_pt_isrfco.title,
    navaids_points_designatedpoint_pt_isrfco.nilreason[1],
    navaids_points_designatedpoint_pt_isrfco.href,
    navaids_points_navaid_pt_uqxhlr.title,
    navaids_points_navaid_pt_uqxhlr.nilreason[1],
    navaids_points_navaid_pt_uqxhlr.href,
    airport_heliport_touchdownliftoff_pt_piwzej.title,
    airport_heliport_touchdownliftoff_pt_piwzej.nilreason[1],
    airport_heliport_touchdownliftoff_pt_piwzej.href,
    airport_heliport_runwaycentrelinepoint_pt_hlhgez.title,
    airport_heliport_runwaycentrelinepoint_pt_hlhgez.nilreason[1],
    airport_heliport_runwaycentrelinepoint_pt_hlhgez.href,
    airport_heliport_airportheliport_pt_ncdkqe.title,
    airport_heliport_airportheliport_pt_ncdkqe.nilreason[1],
    airport_heliport_airportheliport_pt_ncdkqe.href,
    geometry_point_view_agleoq.geom,
    geometry_point_view_agleoq.horizontalAccuracy,
    geometry_surface_view_sglxnk.geom,
    geometry_surface_view_sglxnk.horizontalAccuracy,
    procedure_instrumentapproachprocedure_pt_kikimz.title,
    procedure_instrumentapproachprocedure_pt_kikimz.nilreason[1],
    procedure_instrumentapproachprocedure_pt_kikimz.href
order by terminalarrivalarea.identifier, terminalarrivalarea_ts.sequence_number, terminalarrivalarea_ts.correction_number DESC;
create index on procedure.terminalarrivalarea_view (id);
-- TouchDownLiftOffLightSystemTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.touchdownliftofflightsystem_view cascade;
create materialized view airport_heliport.touchdownliftofflightsystem_view as
select distinct on (touchdownliftofflightsystem.identifier,touchdownliftofflightsystem_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftofflightsystem.id,
    airport_heliport.touchdownliftofflightsystem_ts.id as ts_id,
    airport_heliport.touchdownliftofflightsystem_tsp.id as tsp_id,
    airport_heliport.touchdownliftofflightsystem.identifier,
    airport_heliport.touchdownliftofflightsystem_ts.interpretation,
    airport_heliport.touchdownliftofflightsystem_ts.sequence_number,
    airport_heliport.touchdownliftofflightsystem_ts.correction_number,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_begin,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_end,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.colour_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.touchdownliftofflightsystem_ts.position_value as varchar), '(' || airport_heliport.touchdownliftofflightsystem_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_bmeryz.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_bmeryz.nilreason[1] || ')') AS lightedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_bmeryz.href AS lightedtouchdownliftoff_href,
    jsonb_agg(shared_lightelement_view_nqfiaj.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_ghswut.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_awijwq.*) AS annotation
from airport_heliport.touchdownliftofflightsystem 
inner join master_join mj2 on airport_heliport.touchdownliftofflightsystem.id = mj2.source_id
inner join airport_heliport.touchdownliftofflightsystem_tsp on mj2.target_id = airport_heliport.touchdownliftofflightsystem_tsp.id
inner join airport_heliport.touchdownliftofflightsystem_ts on airport_heliport.touchdownliftofflightsystem_tsp.touchdownliftofflightsystemtimeslice_id = airport_heliport.touchdownliftofflightsystem_ts.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_bmeryz on airport_heliport.touchdownliftofflightsystem_ts.lightedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_bmeryz.id
left join master_join master_join_imrcps on airport_heliport.touchdownliftofflightsystem_ts.id = master_join_imrcps.source_id
left join shared.lightelement_view shared_lightelement_view_nqfiaj on master_join_imrcps.target_id = shared_lightelement_view_nqfiaj.id
left join master_join master_join_pvplbt on airport_heliport.touchdownliftofflightsystem_ts.id = master_join_pvplbt.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_ghswut on master_join_pvplbt.target_id = airport_heliport_groundlightingavailability_view_ghswut.id
left join master_join master_join_agwthy on airport_heliport.touchdownliftofflightsystem_ts.id = master_join_agwthy.source_id
left join notes.note_view notes_note_view_awijwq on master_join_agwthy.target_id = notes_note_view_awijwq.id
where airport_heliport.touchdownliftofflightsystem.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftofflightsystem_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftofflightsystem.id,
    airport_heliport.touchdownliftofflightsystem_ts.id,
    airport_heliport.touchdownliftofflightsystem_tsp.id,
    airport_heliport.touchdownliftofflightsystem.identifier,
    airport_heliport.touchdownliftofflightsystem_ts.interpretation,
    airport_heliport.touchdownliftofflightsystem_ts.sequence_number,
    airport_heliport.touchdownliftofflightsystem_ts.correction_number,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_begin,
    airport_heliport.touchdownliftofflightsystem_ts.valid_time_end,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftofflightsystem_ts.feature_lifetime_end,
    airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_value,
    airport_heliport.touchdownliftofflightsystem_ts.emergencylighting_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_value,
    airport_heliport.touchdownliftofflightsystem_ts.intensitylevel_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.colour_value,
    airport_heliport.touchdownliftofflightsystem_ts.colour_nilreason,
    airport_heliport.touchdownliftofflightsystem_ts.position_value,
    airport_heliport.touchdownliftofflightsystem_ts.position_nilreason,
    airport_heliport_touchdownliftoff_pt_bmeryz.title,
    airport_heliport_touchdownliftoff_pt_bmeryz.nilreason[1],
    airport_heliport_touchdownliftoff_pt_bmeryz.href
order by touchdownliftofflightsystem.identifier, touchdownliftofflightsystem_ts.sequence_number, touchdownliftofflightsystem_ts.correction_number DESC;
create index on airport_heliport.touchdownliftofflightsystem_view (id);
-- TouchDownLiftOffMarkingTimeSliceType
-- ['airport_heliport.markingelement_view', 'notes.note_view']
drop materialized view if exists airport_heliport.touchdownliftoffmarking_view cascade;
create materialized view airport_heliport.touchdownliftoffmarking_view as
select distinct on (touchdownliftoffmarking.identifier,touchdownliftoffmarking_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoffmarking.id,
    airport_heliport.touchdownliftoffmarking_ts.id as ts_id,
    airport_heliport.touchdownliftoffmarking_tsp.id as tsp_id,
    airport_heliport.touchdownliftoffmarking.identifier,
    airport_heliport.touchdownliftoffmarking_ts.interpretation,
    airport_heliport.touchdownliftoffmarking_ts.sequence_number,
    airport_heliport.touchdownliftoffmarking_ts.correction_number,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_begin,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_end,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.condition_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.condition_nilreason || ')') as condition,
    coalesce(cast(airport_heliport.touchdownliftoffmarking_ts.markinglocation_value as varchar), '(' || airport_heliport.touchdownliftoffmarking_ts.markinglocation_nilreason || ')') as markinglocation,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_bjfvda.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_bjfvda.nilreason[1] || ')') AS markedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_bjfvda.href AS markedtouchdownliftoff_href,
    jsonb_agg(airport_heliport_markingelement_view_xeuhfz.id) AS element,
    jsonb_agg(DISTINCT notes_note_view_bjlita.*) AS annotation
from airport_heliport.touchdownliftoffmarking 
inner join master_join mj2 on airport_heliport.touchdownliftoffmarking.id = mj2.source_id
inner join airport_heliport.touchdownliftoffmarking_tsp on mj2.target_id = airport_heliport.touchdownliftoffmarking_tsp.id
inner join airport_heliport.touchdownliftoffmarking_ts on airport_heliport.touchdownliftoffmarking_tsp.touchdownliftoffmarkingtimeslice_id = airport_heliport.touchdownliftoffmarking_ts.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_bjfvda on airport_heliport.touchdownliftoffmarking_ts.markedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_bjfvda.id
left join master_join master_join_vhxpoo on airport_heliport.touchdownliftoffmarking_ts.id = master_join_vhxpoo.source_id
left join airport_heliport.markingelement_view airport_heliport_markingelement_view_xeuhfz on master_join_vhxpoo.target_id = airport_heliport_markingelement_view_xeuhfz.id
left join master_join master_join_lsuaej on airport_heliport.touchdownliftoffmarking_ts.id = master_join_lsuaej.source_id
left join notes.note_view notes_note_view_bjlita on master_join_lsuaej.target_id = notes_note_view_bjlita.id
where airport_heliport.touchdownliftoffmarking.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoffmarking_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoffmarking.id,
    airport_heliport.touchdownliftoffmarking_ts.id,
    airport_heliport.touchdownliftoffmarking_tsp.id,
    airport_heliport.touchdownliftoffmarking.identifier,
    airport_heliport.touchdownliftoffmarking_ts.interpretation,
    airport_heliport.touchdownliftoffmarking_ts.sequence_number,
    airport_heliport.touchdownliftoffmarking_ts.correction_number,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_begin,
    airport_heliport.touchdownliftoffmarking_ts.valid_time_end,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffmarking_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_value,
    airport_heliport.touchdownliftoffmarking_ts.markingicaostandard_nilreason,
    airport_heliport.touchdownliftoffmarking_ts.condition_value,
    airport_heliport.touchdownliftoffmarking_ts.condition_nilreason,
    airport_heliport.touchdownliftoffmarking_ts.markinglocation_value,
    airport_heliport.touchdownliftoffmarking_ts.markinglocation_nilreason,
    airport_heliport_touchdownliftoff_pt_bjfvda.title,
    airport_heliport_touchdownliftoff_pt_bjfvda.nilreason[1],
    airport_heliport_touchdownliftoff_pt_bjfvda.href
order by touchdownliftoffmarking.identifier, touchdownliftoffmarking_ts.sequence_number, touchdownliftoffmarking_ts.correction_number DESC;
create index on airport_heliport.touchdownliftoffmarking_view (id);
-- TouchDownLiftOffSafeAreaTimeSliceType
-- ['airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.touchdownliftoffsafearea_view cascade;
create materialized view airport_heliport.touchdownliftoffsafearea_view as
select distinct on (touchdownliftoffsafearea.identifier,touchdownliftoffsafearea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoffsafearea.id,
    airport_heliport.touchdownliftoffsafearea_ts.id as ts_id,
    airport_heliport.touchdownliftoffsafearea_tsp.id as tsp_id,
    airport_heliport.touchdownliftoffsafearea.identifier,
    airport_heliport.touchdownliftoffsafearea_ts.interpretation,
    airport_heliport.touchdownliftoffsafearea_ts.sequence_number,
    airport_heliport.touchdownliftoffsafearea_ts.correction_number,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_begin,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_end,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.lighting_value as varchar), '(' || airport_heliport.touchdownliftoffsafearea_ts.lighting_nilreason || ')') as lighting,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_value as varchar), '(' || airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_nilreason || ')') as obstaclefree,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.width_value as varchar) || ' ' || airport_heliport.touchdownliftoffsafearea_ts.width_uom, '(' || airport_heliport.touchdownliftoffsafearea_ts.width_nilreason || ')') as width,
    coalesce(cast(airport_heliport.touchdownliftoffsafearea_ts.length_value as varchar) || ' ' || airport_heliport.touchdownliftoffsafearea_ts.length_uom, '(' || airport_heliport.touchdownliftoffsafearea_ts.length_nilreason || ')') as length,
    airport_heliport_surfacecharacteristics_view_goacol.id AS surfaceproperties,
    geometry_elevatedsurface_view_sswxsl.geom AS extent_geom,
    geometry_elevatedsurface_view_sswxsl.elevation AS extent_elevation,
    geometry_elevatedsurface_view_sswxsl.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_sswxsl.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_sswxsl.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_sswxsl.horizontalAccuracy AS extent_horizontalaccuracy,
    coalesce(cast(airport_heliport_touchdownliftoff_pt_ggvbnl.title as varchar), '(' || airport_heliport_touchdownliftoff_pt_ggvbnl.nilreason[1] || ')') AS protectedtouchdownliftoff,
    airport_heliport_touchdownliftoff_pt_ggvbnl.href AS protectedtouchdownliftoff_href,
    jsonb_agg(DISTINCT notes_note_view_utnejv.*) AS annotation
from airport_heliport.touchdownliftoffsafearea 
inner join master_join mj2 on airport_heliport.touchdownliftoffsafearea.id = mj2.source_id
inner join airport_heliport.touchdownliftoffsafearea_tsp on mj2.target_id = airport_heliport.touchdownliftoffsafearea_tsp.id
inner join airport_heliport.touchdownliftoffsafearea_ts on airport_heliport.touchdownliftoffsafearea_tsp.touchdownliftoffsafeareatimeslice_id = airport_heliport.touchdownliftoffsafearea_ts.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_goacol on airport_heliport.touchdownliftoffsafearea_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_goacol.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_sswxsl on airport_heliport.touchdownliftoffsafearea_ts.extent_id = geometry_elevatedsurface_view_sswxsl.id
left join airport_heliport.touchdownliftoff_pt airport_heliport_touchdownliftoff_pt_ggvbnl on airport_heliport.touchdownliftoffsafearea_ts.protectedtouchdownliftoff_id = airport_heliport_touchdownliftoff_pt_ggvbnl.id
left join master_join master_join_bvjbqp on airport_heliport.touchdownliftoffsafearea_ts.id = master_join_bvjbqp.source_id
left join notes.note_view notes_note_view_utnejv on master_join_bvjbqp.target_id = notes_note_view_utnejv.id
where airport_heliport.touchdownliftoffsafearea.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoffsafearea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoffsafearea.id,
    airport_heliport.touchdownliftoffsafearea_ts.id,
    airport_heliport.touchdownliftoffsafearea_tsp.id,
    airport_heliport.touchdownliftoffsafearea.identifier,
    airport_heliport.touchdownliftoffsafearea_ts.interpretation,
    airport_heliport.touchdownliftoffsafearea_ts.sequence_number,
    airport_heliport.touchdownliftoffsafearea_ts.correction_number,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_begin,
    airport_heliport.touchdownliftoffsafearea_ts.valid_time_end,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoffsafearea_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoffsafearea_ts.lighting_value,
    airport_heliport.touchdownliftoffsafearea_ts.lighting_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_value,
    airport_heliport.touchdownliftoffsafearea_ts.obstaclefree_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.width_value,
    airport_heliport.touchdownliftoffsafearea_ts.width_uom,
    airport_heliport.touchdownliftoffsafearea_ts.width_nilreason,
    airport_heliport.touchdownliftoffsafearea_ts.length_value,
    airport_heliport.touchdownliftoffsafearea_ts.length_uom,
    airport_heliport.touchdownliftoffsafearea_ts.length_nilreason,
    airport_heliport_surfacecharacteristics_view_goacol.id,
    geometry_elevatedsurface_view_sswxsl.geom,
    geometry_elevatedsurface_view_sswxsl.elevation,
    geometry_elevatedsurface_view_sswxsl.geoidUndulation,
    geometry_elevatedsurface_view_sswxsl.verticalDatum,
    geometry_elevatedsurface_view_sswxsl.verticalAccuracy,
    geometry_elevatedsurface_view_sswxsl.horizontalAccuracy,
    airport_heliport_touchdownliftoff_pt_ggvbnl.title,
    airport_heliport_touchdownliftoff_pt_ggvbnl.nilreason[1],
    airport_heliport_touchdownliftoff_pt_ggvbnl.href
order by touchdownliftoffsafearea.identifier, touchdownliftoffsafearea_ts.sequence_number, touchdownliftoffsafearea_ts.correction_number DESC;
create index on airport_heliport.touchdownliftoffsafearea_view (id);
-- TouchDownLiftOffTimeSliceType
-- ['geometry.elevatedpoint_view', 'airport_heliport.manoeuvringareaavailability_view', 'airport_heliport.touchdownliftoffcontamination_view', 'airport_heliport.surfacecharacteristics_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.touchdownliftoff_view cascade;
create materialized view airport_heliport.touchdownliftoff_view as
select distinct on (touchdownliftoff.identifier,touchdownliftoff_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.touchdownliftoff.id,
    airport_heliport.touchdownliftoff_ts.id as ts_id,
    airport_heliport.touchdownliftoff_tsp.id as tsp_id,
    airport_heliport.touchdownliftoff.identifier,
    airport_heliport.touchdownliftoff_ts.interpretation,
    airport_heliport.touchdownliftoff_ts.sequence_number,
    airport_heliport.touchdownliftoff_ts.correction_number,
    airport_heliport.touchdownliftoff_ts.valid_time_begin,
    airport_heliport.touchdownliftoff_ts.valid_time_end,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.designator_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.designator_nilreason || ')') as designator,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.slope_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.slope_nilreason || ')') as slope,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.helicopterclass_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.helicopterclass_nilreason || ')') as helicopterclass,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.abandoned_value as varchar), '(' || airport_heliport.touchdownliftoff_ts.abandoned_nilreason || ')') as abandoned,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.length_value as varchar) || ' ' || airport_heliport.touchdownliftoff_ts.length_uom, '(' || airport_heliport.touchdownliftoff_ts.length_nilreason || ')') as length,
    coalesce(cast(airport_heliport.touchdownliftoff_ts.width_value as varchar) || ' ' || airport_heliport.touchdownliftoff_ts.width_uom, '(' || airport_heliport.touchdownliftoff_ts.width_nilreason || ')') as width,
    geometry_elevatedpoint_view_ioenvs.geom AS aimingpoint_geom,
    ST_X(geometry_elevatedpoint_view_ioenvs.geom) AS aimingpoint_longitude,
    ST_Y(geometry_elevatedpoint_view_ioenvs.geom) AS aimingpoint_latitude,
    geometry_elevatedpoint_view_ioenvs.elevation AS aimingpoint_elevation,
    geometry_elevatedpoint_view_ioenvs.geoidUndulation AS aimingpoint_geoidundulation,
    geometry_elevatedpoint_view_ioenvs.verticalDatum AS aimingpoint_verticaldatum,
    geometry_elevatedpoint_view_ioenvs.verticalAccuracy AS aimingpoint_verticalaccuracy,
    geometry_elevatedpoint_view_ioenvs.horizontalAccuracy AS aimingpoint_horizontalaccuracy,
    geometry_elevatedsurface_view_hbacjv.geom AS extent_geom,
    geometry_elevatedsurface_view_hbacjv.elevation AS extent_elevation,
    geometry_elevatedsurface_view_hbacjv.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_hbacjv.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_hbacjv.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_hbacjv.horizontalAccuracy AS extent_horizontalaccuracy,
    airport_heliport_surfacecharacteristics_view_cgwyti.id AS surfaceproperties,
    coalesce(cast(airport_heliport_airportheliport_pt_zrryhv.title as varchar), '(' || airport_heliport_airportheliport_pt_zrryhv.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_zrryhv.href AS associatedairportheliport_href,
    coalesce(cast(airport_heliport_runway_pt_llgsqi.title as varchar), '(' || airport_heliport_runway_pt_llgsqi.nilreason[1] || ')') AS approachtakeoffarea,
    airport_heliport_runway_pt_llgsqi.href AS approachtakeoffarea_href,
    jsonb_agg(airport_heliport_touchdownliftoffcontamination_view_flqjns.id) AS contaminant,
    jsonb_agg(DISTINCT notes_note_view_vpeqpb.*) AS annotation,
    jsonb_agg(airport_heliport_manoeuvringareaavailability_view_tocdzd.id) AS availability
from airport_heliport.touchdownliftoff 
inner join master_join mj2 on airport_heliport.touchdownliftoff.id = mj2.source_id
inner join airport_heliport.touchdownliftoff_tsp on mj2.target_id = airport_heliport.touchdownliftoff_tsp.id
inner join airport_heliport.touchdownliftoff_ts on airport_heliport.touchdownliftoff_tsp.touchdownliftofftimeslice_id = airport_heliport.touchdownliftoff_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_ioenvs on airport_heliport.touchdownliftoff_ts.aimingpoint_id = geometry_elevatedpoint_view_ioenvs.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_hbacjv on airport_heliport.touchdownliftoff_ts.extent_id = geometry_elevatedsurface_view_hbacjv.id
left join airport_heliport.surfacecharacteristics_view airport_heliport_surfacecharacteristics_view_cgwyti on airport_heliport.touchdownliftoff_ts.surfaceproperties_id = airport_heliport_surfacecharacteristics_view_cgwyti.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_zrryhv on airport_heliport.touchdownliftoff_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_zrryhv.id
left join airport_heliport.runway_pt airport_heliport_runway_pt_llgsqi on airport_heliport.touchdownliftoff_ts.approachtakeoffarea_id = airport_heliport_runway_pt_llgsqi.id
left join master_join master_join_xtjkyr on airport_heliport.touchdownliftoff_ts.id = master_join_xtjkyr.source_id
left join airport_heliport.touchdownliftoffcontamination_view airport_heliport_touchdownliftoffcontamination_view_flqjns on master_join_xtjkyr.target_id = airport_heliport_touchdownliftoffcontamination_view_flqjns.id
left join master_join master_join_gsjbvd on airport_heliport.touchdownliftoff_ts.id = master_join_gsjbvd.source_id
left join notes.note_view notes_note_view_vpeqpb on master_join_gsjbvd.target_id = notes_note_view_vpeqpb.id
left join master_join master_join_xgrlos on airport_heliport.touchdownliftoff_ts.id = master_join_xgrlos.source_id
left join airport_heliport.manoeuvringareaavailability_view airport_heliport_manoeuvringareaavailability_view_tocdzd on master_join_xgrlos.target_id = airport_heliport_manoeuvringareaavailability_view_tocdzd.id
where airport_heliport.touchdownliftoff.feature_status = 'APPROVED'
  and airport_heliport.touchdownliftoff_ts.feature_status = 'APPROVED'
group by
    airport_heliport.touchdownliftoff.id,
    airport_heliport.touchdownliftoff_ts.id,
    airport_heliport.touchdownliftoff_tsp.id,
    airport_heliport.touchdownliftoff.identifier,
    airport_heliport.touchdownliftoff_ts.interpretation,
    airport_heliport.touchdownliftoff_ts.sequence_number,
    airport_heliport.touchdownliftoff_ts.correction_number,
    airport_heliport.touchdownliftoff_ts.valid_time_begin,
    airport_heliport.touchdownliftoff_ts.valid_time_end,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_begin,
    airport_heliport.touchdownliftoff_ts.feature_lifetime_end,
    airport_heliport.touchdownliftoff_ts.designator_value,
    airport_heliport.touchdownliftoff_ts.designator_nilreason,
    airport_heliport.touchdownliftoff_ts.slope_value,
    airport_heliport.touchdownliftoff_ts.slope_nilreason,
    airport_heliport.touchdownliftoff_ts.helicopterclass_value,
    airport_heliport.touchdownliftoff_ts.helicopterclass_nilreason,
    airport_heliport.touchdownliftoff_ts.abandoned_value,
    airport_heliport.touchdownliftoff_ts.abandoned_nilreason,
    airport_heliport.touchdownliftoff_ts.length_value,
    airport_heliport.touchdownliftoff_ts.length_uom,
    airport_heliport.touchdownliftoff_ts.length_nilreason,
    airport_heliport.touchdownliftoff_ts.width_value,
    airport_heliport.touchdownliftoff_ts.width_uom,
    airport_heliport.touchdownliftoff_ts.width_nilreason,
    geometry_elevatedpoint_view_ioenvs.geom,
    geometry_elevatedpoint_view_ioenvs.elevation,
    geometry_elevatedpoint_view_ioenvs.geoidUndulation,
    geometry_elevatedpoint_view_ioenvs.verticalDatum,
    geometry_elevatedpoint_view_ioenvs.verticalAccuracy,
    geometry_elevatedpoint_view_ioenvs.horizontalAccuracy,
    geometry_elevatedsurface_view_hbacjv.geom,
    geometry_elevatedsurface_view_hbacjv.elevation,
    geometry_elevatedsurface_view_hbacjv.geoidUndulation,
    geometry_elevatedsurface_view_hbacjv.verticalDatum,
    geometry_elevatedsurface_view_hbacjv.verticalAccuracy,
    geometry_elevatedsurface_view_hbacjv.horizontalAccuracy,
    airport_heliport_surfacecharacteristics_view_cgwyti.id,
    airport_heliport_airportheliport_pt_zrryhv.title,
    airport_heliport_airportheliport_pt_zrryhv.nilreason[1],
    airport_heliport_airportheliport_pt_zrryhv.href,
    airport_heliport_runway_pt_llgsqi.title,
    airport_heliport_runway_pt_llgsqi.nilreason[1],
    airport_heliport_runway_pt_llgsqi.href
order by touchdownliftoff.identifier, touchdownliftoff_ts.sequence_number, touchdownliftoff_ts.correction_number DESC;
create index on airport_heliport.touchdownliftoff_view (id);
-- UnitTimeSliceType
-- ['geometry.elevatedpoint_view', 'shared.contactinformation_view', 'organisation.unitdependency_view', 'notes.note_view', 'organisation.unitavailability_view']
drop materialized view if exists organisation.unit_view cascade;
create materialized view organisation.unit_view as
select distinct on (unit.identifier,unit_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    organisation.unit.id,
    organisation.unit_ts.id as ts_id,
    organisation.unit_tsp.id as tsp_id,
    organisation.unit.identifier,
    organisation.unit_ts.interpretation,
    organisation.unit_ts.sequence_number,
    organisation.unit_ts.correction_number,
    organisation.unit_ts.valid_time_begin,
    organisation.unit_ts.valid_time_end,
    organisation.unit_ts.feature_lifetime_begin,
    organisation.unit_ts.feature_lifetime_end,
    coalesce(cast(organisation.unit_ts.name_value as varchar), '(' || organisation.unit_ts.name_nilreason || ')') as name,
    coalesce(cast(organisation.unit_ts.type_value as varchar), '(' || organisation.unit_ts.type_nilreason || ')') as type,
    coalesce(cast(organisation.unit_ts.complianticao_value as varchar), '(' || organisation.unit_ts.complianticao_nilreason || ')') as complianticao,
    coalesce(cast(organisation.unit_ts.designator_value as varchar), '(' || organisation.unit_ts.designator_nilreason || ')') as designator,
    coalesce(cast(organisation.unit_ts.military_value as varchar), '(' || organisation.unit_ts.military_nilreason || ')') as military,
    geometry_elevatedpoint_view_azimpu.geom AS position_geom,
    ST_X(geometry_elevatedpoint_view_azimpu.geom) AS position_longitude,
    ST_Y(geometry_elevatedpoint_view_azimpu.geom) AS position_latitude,
    geometry_elevatedpoint_view_azimpu.elevation AS position_elevation,
    geometry_elevatedpoint_view_azimpu.geoidUndulation AS position_geoidundulation,
    geometry_elevatedpoint_view_azimpu.verticalDatum AS position_verticaldatum,
    geometry_elevatedpoint_view_azimpu.verticalAccuracy AS position_verticalaccuracy,
    geometry_elevatedpoint_view_azimpu.horizontalAccuracy AS position_horizontalaccuracy,
    coalesce(cast(airport_heliport_airportheliport_pt_yymwhb.title as varchar), '(' || airport_heliport_airportheliport_pt_yymwhb.nilreason[1] || ')') AS airportlocation,
    airport_heliport_airportheliport_pt_yymwhb.href AS airportlocation_href,
    coalesce(cast(organisation_organisationauthority_pt_xgngfo.title as varchar), '(' || organisation_organisationauthority_pt_xgngfo.nilreason[1] || ')') AS ownerorganisation,
    organisation_organisationauthority_pt_xgngfo.href AS ownerorganisation_href,
    jsonb_agg(organisation_unitdependency_view_dlrbpz.id) AS relatedunit,
    jsonb_agg(organisation_unitavailability_view_wjjhmk.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_zfpqey.*) AS annotation
from organisation.unit 
inner join master_join mj2 on organisation.unit.id = mj2.source_id
inner join organisation.unit_tsp on mj2.target_id = organisation.unit_tsp.id
inner join organisation.unit_ts on organisation.unit_tsp.unittimeslice_id = organisation.unit_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_azimpu on organisation.unit_ts.position_id = geometry_elevatedpoint_view_azimpu.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_yymwhb on organisation.unit_ts.airportlocation_id = airport_heliport_airportheliport_pt_yymwhb.id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_xgngfo on organisation.unit_ts.ownerorganisation_id = organisation_organisationauthority_pt_xgngfo.id
left join master_join master_join_hfpbhz on organisation.unit_ts.id = master_join_hfpbhz.source_id
left join shared.contactinformation_view shared_contactinformation_view_nkgjei on master_join_hfpbhz.target_id = shared_contactinformation_view_nkgjei.id
left join master_join master_join_vtbaje on organisation.unit_ts.id = master_join_vtbaje.source_id
left join organisation.unitdependency_view organisation_unitdependency_view_dlrbpz on master_join_vtbaje.target_id = organisation_unitdependency_view_dlrbpz.id
left join master_join master_join_ycfbti on organisation.unit_ts.id = master_join_ycfbti.source_id
left join organisation.unitavailability_view organisation_unitavailability_view_wjjhmk on master_join_ycfbti.target_id = organisation_unitavailability_view_wjjhmk.id
left join master_join master_join_iaoyso on organisation.unit_ts.id = master_join_iaoyso.source_id
left join notes.note_view notes_note_view_zfpqey on master_join_iaoyso.target_id = notes_note_view_zfpqey.id
where organisation.unit.feature_status = 'APPROVED'
  and organisation.unit_ts.feature_status = 'APPROVED'
group by
    organisation.unit.id,
    organisation.unit_ts.id,
    organisation.unit_tsp.id,
    organisation.unit.identifier,
    organisation.unit_ts.interpretation,
    organisation.unit_ts.sequence_number,
    organisation.unit_ts.correction_number,
    organisation.unit_ts.valid_time_begin,
    organisation.unit_ts.valid_time_end,
    organisation.unit_ts.feature_lifetime_begin,
    organisation.unit_ts.feature_lifetime_end,
    organisation.unit_ts.name_value,
    organisation.unit_ts.name_nilreason,
    organisation.unit_ts.type_value,
    organisation.unit_ts.type_nilreason,
    organisation.unit_ts.complianticao_value,
    organisation.unit_ts.complianticao_nilreason,
    organisation.unit_ts.designator_value,
    organisation.unit_ts.designator_nilreason,
    organisation.unit_ts.military_value,
    organisation.unit_ts.military_nilreason,
    geometry_elevatedpoint_view_azimpu.geom,
    geometry_elevatedpoint_view_azimpu.elevation,
    geometry_elevatedpoint_view_azimpu.geoidUndulation,
    geometry_elevatedpoint_view_azimpu.verticalDatum,
    geometry_elevatedpoint_view_azimpu.verticalAccuracy,
    geometry_elevatedpoint_view_azimpu.horizontalAccuracy,
    airport_heliport_airportheliport_pt_yymwhb.title,
    airport_heliport_airportheliport_pt_yymwhb.nilreason[1],
    airport_heliport_airportheliport_pt_yymwhb.href,
    organisation_organisationauthority_pt_xgngfo.title,
    organisation_organisationauthority_pt_xgngfo.nilreason[1],
    organisation_organisationauthority_pt_xgngfo.href
order by unit.identifier, unit_ts.sequence_number, unit_ts.correction_number DESC;
create index on organisation.unit_view (id);
-- UnplannedHoldingTimeSliceType
-- ['notes.note_view']
drop materialized view if exists holding.unplannedholding_view cascade;
create materialized view holding.unplannedholding_view as
select distinct on (unplannedholding.identifier,unplannedholding_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    holding.unplannedholding.id,
    holding.unplannedholding_ts.id as ts_id,
    holding.unplannedholding_tsp.id as tsp_id,
    holding.unplannedholding.identifier,
    holding.unplannedholding_ts.interpretation,
    holding.unplannedholding_ts.sequence_number,
    holding.unplannedholding_ts.correction_number,
    holding.unplannedholding_ts.valid_time_begin,
    holding.unplannedholding_ts.valid_time_end,
    holding.unplannedholding_ts.feature_lifetime_begin,
    holding.unplannedholding_ts.feature_lifetime_end,
    coalesce(cast(holding.unplannedholding_ts.unplannedholding_value as varchar), '(' || holding.unplannedholding_ts.unplannedholding_nilreason || ')') as unplannedholding,
    coalesce(cast(holding.unplannedholding_ts.altitudereference_value as varchar), '(' || holding.unplannedholding_ts.altitudereference_nilreason || ')') as altitudereference,
    coalesce(cast(holding.unplannedholding_ts.controlledairspace_value as varchar), '(' || holding.unplannedholding_ts.controlledairspace_nilreason || ')') as controlledairspace,
    coalesce(cast(holding.unplannedholding_ts.authorizedaltitude_value as varchar) || ' ' || holding.unplannedholding_ts.authorizedaltitude_uom, '(' || holding.unplannedholding_ts.authorizedaltitude_nilreason || ')') as authorizedaltitude,
    jsonb_agg(DISTINCT notes_note_view_fbgshs.*) AS annotation
from holding.unplannedholding 
inner join master_join mj2 on holding.unplannedholding.id = mj2.source_id
inner join holding.unplannedholding_tsp on mj2.target_id = holding.unplannedholding_tsp.id
inner join holding.unplannedholding_ts on holding.unplannedholding_tsp.unplannedholdingtimeslice_id = holding.unplannedholding_ts.id
left join master_join master_join_wrldcd on holding.unplannedholding_ts.id = master_join_wrldcd.source_id
left join notes.note_view notes_note_view_fbgshs on master_join_wrldcd.target_id = notes_note_view_fbgshs.id
where holding.unplannedholding.feature_status = 'APPROVED'
  and holding.unplannedholding_ts.feature_status = 'APPROVED'
group by
    holding.unplannedholding.id,
    holding.unplannedholding_ts.id,
    holding.unplannedholding_tsp.id,
    holding.unplannedholding.identifier,
    holding.unplannedholding_ts.interpretation,
    holding.unplannedholding_ts.sequence_number,
    holding.unplannedholding_ts.correction_number,
    holding.unplannedholding_ts.valid_time_begin,
    holding.unplannedholding_ts.valid_time_end,
    holding.unplannedholding_ts.feature_lifetime_begin,
    holding.unplannedholding_ts.feature_lifetime_end,
    holding.unplannedholding_ts.unplannedholding_value,
    holding.unplannedholding_ts.unplannedholding_nilreason,
    holding.unplannedholding_ts.altitudereference_value,
    holding.unplannedholding_ts.altitudereference_nilreason,
    holding.unplannedholding_ts.controlledairspace_value,
    holding.unplannedholding_ts.controlledairspace_nilreason,
    holding.unplannedholding_ts.authorizedaltitude_value,
    holding.unplannedholding_ts.authorizedaltitude_uom,
    holding.unplannedholding_ts.authorizedaltitude_nilreason
order by unplannedholding.identifier, unplannedholding_ts.sequence_number, unplannedholding_ts.correction_number DESC;
create index on holding.unplannedholding_view (id);
-- VerticalStructureTimeSliceType
-- ['obstacles.verticalstructurepart_view', 'obstacles.verticalstructurelightingstatus_view', 'notes.note_view']
drop materialized view if exists obstacles.verticalstructure_view cascade;
create materialized view obstacles.verticalstructure_view as
select distinct on (verticalstructure.identifier,verticalstructure_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    obstacles.verticalstructure.id,
    obstacles.verticalstructure_ts.id as ts_id,
    obstacles.verticalstructure_tsp.id as tsp_id,
    obstacles.verticalstructure.identifier,
    obstacles.verticalstructure_ts.interpretation,
    obstacles.verticalstructure_ts.sequence_number,
    obstacles.verticalstructure_ts.correction_number,
    obstacles.verticalstructure_ts.valid_time_begin,
    obstacles.verticalstructure_ts.valid_time_end,
    obstacles.verticalstructure_ts.feature_lifetime_begin,
    obstacles.verticalstructure_ts.feature_lifetime_end,
    coalesce(cast(obstacles.verticalstructure_ts.name_value as varchar), '(' || obstacles.verticalstructure_ts.name_nilreason || ')') as name,
    coalesce(cast(obstacles.verticalstructure_ts.type_value as varchar), '(' || obstacles.verticalstructure_ts.type_nilreason || ')') as type,
    coalesce(cast(obstacles.verticalstructure_ts.lighted_value as varchar), '(' || obstacles.verticalstructure_ts.lighted_nilreason || ')') as lighted,
    coalesce(cast(obstacles.verticalstructure_ts.markingicaostandard_value as varchar), '(' || obstacles.verticalstructure_ts.markingicaostandard_nilreason || ')') as markingicaostandard,
    coalesce(cast(obstacles.verticalstructure_ts.group_value as varchar), '(' || obstacles.verticalstructure_ts.group_nilreason || ')') as group,
    coalesce(cast(obstacles.verticalstructure_ts.lightingicaostandard_value as varchar), '(' || obstacles.verticalstructure_ts.lightingicaostandard_nilreason || ')') as lightingicaostandard,
    coalesce(cast(obstacles.verticalstructure_ts.synchronisedlighting_value as varchar), '(' || obstacles.verticalstructure_ts.synchronisedlighting_nilreason || ')') as synchronisedlighting,
    coalesce(cast(obstacles.verticalstructure_ts.length_value as varchar) || ' ' || obstacles.verticalstructure_ts.length_uom, '(' || obstacles.verticalstructure_ts.length_nilreason || ')') as length,
    coalesce(cast(obstacles.verticalstructure_ts.width_value as varchar) || ' ' || obstacles.verticalstructure_ts.width_uom, '(' || obstacles.verticalstructure_ts.width_nilreason || ')') as width,
    coalesce(cast(obstacles.verticalstructure_ts.radius_value as varchar) || ' ' || obstacles.verticalstructure_ts.radius_uom, '(' || obstacles.verticalstructure_ts.radius_nilreason || ')') as radius,
    coalesce(cast(navaids_points_markerbeacon_pt_xkeuol.title as varchar), '(' || navaids_points_markerbeacon_pt_xkeuol.nilreason[1] || ')') AS marker,
    navaids_points_markerbeacon_pt_xkeuol.href AS marker_href,
    jsonb_agg(obstacles_verticalstructurepart_view_dqdgst.id) AS part,
    jsonb_agg(DISTINCT jsonb_build_object('id', service_passengerservice_pt_yexukh.id,
    'title', coalesce(cast(service_passengerservice_pt_yexukh.title AS varchar), '(' || service_passengerservice_pt_yexukh.nilreason[1] || ')'),
    'href', service_passengerservice_pt_yexukh.href)) AS hostedpassengerservice,
    jsonb_agg(DISTINCT jsonb_build_object('id', navaids_points_specialnavigationstation_pt_eoalyh.id,
    'title', coalesce(cast(navaids_points_specialnavigationstation_pt_eoalyh.title AS varchar), '(' || navaids_points_specialnavigationstation_pt_eoalyh.nilreason[1] || ')'),
    'href', navaids_points_specialnavigationstation_pt_eoalyh.href)) AS hostedspecialnavstation,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_unit_pt_ovoodg.id,
    'title', coalesce(cast(organisation_unit_pt_ovoodg.title AS varchar), '(' || organisation_unit_pt_ovoodg.nilreason[1] || ')'),
    'href', organisation_unit_pt_ovoodg.href)) AS hostedunit,
    jsonb_agg(DISTINCT jsonb_build_object('id', organisation_organisationauthority_pt_jtfgyf.id,
    'title', coalesce(cast(organisation_organisationauthority_pt_jtfgyf.title AS varchar), '(' || organisation_organisationauthority_pt_jtfgyf.nilreason[1] || ')'),
    'href', organisation_organisationauthority_pt_jtfgyf.href)) AS hostedorganisation,
    jsonb_agg(DISTINCT notes_note_view_nvkujq.*) AS annotation,
    jsonb_agg(obstacles_verticalstructurelightingstatus_view_nsfaze.id) AS lightingavailability
from obstacles.verticalstructure 
inner join master_join mj2 on obstacles.verticalstructure.id = mj2.source_id
inner join obstacles.verticalstructure_tsp on mj2.target_id = obstacles.verticalstructure_tsp.id
inner join obstacles.verticalstructure_ts on obstacles.verticalstructure_tsp.verticalstructuretimeslice_id = obstacles.verticalstructure_ts.id
left join navaids_points.markerbeacon_pt navaids_points_markerbeacon_pt_xkeuol on obstacles.verticalstructure_ts.marker_id = navaids_points_markerbeacon_pt_xkeuol.id
left join master_join master_join_xidxku on obstacles.verticalstructure_ts.id = master_join_xidxku.source_id
left join obstacles.verticalstructurepart_view obstacles_verticalstructurepart_view_dqdgst on master_join_xidxku.target_id = obstacles_verticalstructurepart_view_dqdgst.id
left join master_join master_join_tmason on obstacles.verticalstructure_ts.id = master_join_tmason.source_id
left join service.passengerservice_pt service_passengerservice_pt_yexukh on master_join_tmason.target_id = service_passengerservice_pt_yexukh.id
left join master_join master_join_ijlbie on obstacles.verticalstructure_ts.id = master_join_ijlbie.source_id
left join navaids_points.specialnavigationstation_pt navaids_points_specialnavigationstation_pt_eoalyh on master_join_ijlbie.target_id = navaids_points_specialnavigationstation_pt_eoalyh.id
left join master_join master_join_yighnx on obstacles.verticalstructure_ts.id = master_join_yighnx.source_id
left join organisation.unit_pt organisation_unit_pt_ovoodg on master_join_yighnx.target_id = organisation_unit_pt_ovoodg.id
left join master_join master_join_lquddv on obstacles.verticalstructure_ts.id = master_join_lquddv.source_id
left join organisation.organisationauthority_pt organisation_organisationauthority_pt_jtfgyf on master_join_lquddv.target_id = organisation_organisationauthority_pt_jtfgyf.id
left join master_join master_join_ioucni on obstacles.verticalstructure_ts.id = master_join_ioucni.source_id
left join notes.note_view notes_note_view_nvkujq on master_join_ioucni.target_id = notes_note_view_nvkujq.id
left join master_join master_join_ikkalz on obstacles.verticalstructure_ts.id = master_join_ikkalz.source_id
left join obstacles.verticalstructurelightingstatus_view obstacles_verticalstructurelightingstatus_view_nsfaze on master_join_ikkalz.target_id = obstacles_verticalstructurelightingstatus_view_nsfaze.id
where obstacles.verticalstructure.feature_status = 'APPROVED'
  and obstacles.verticalstructure_ts.feature_status = 'APPROVED'
group by
    obstacles.verticalstructure.id,
    obstacles.verticalstructure_ts.id,
    obstacles.verticalstructure_tsp.id,
    obstacles.verticalstructure.identifier,
    obstacles.verticalstructure_ts.interpretation,
    obstacles.verticalstructure_ts.sequence_number,
    obstacles.verticalstructure_ts.correction_number,
    obstacles.verticalstructure_ts.valid_time_begin,
    obstacles.verticalstructure_ts.valid_time_end,
    obstacles.verticalstructure_ts.feature_lifetime_begin,
    obstacles.verticalstructure_ts.feature_lifetime_end,
    obstacles.verticalstructure_ts.name_value,
    obstacles.verticalstructure_ts.name_nilreason,
    obstacles.verticalstructure_ts.type_value,
    obstacles.verticalstructure_ts.type_nilreason,
    obstacles.verticalstructure_ts.lighted_value,
    obstacles.verticalstructure_ts.lighted_nilreason,
    obstacles.verticalstructure_ts.markingicaostandard_value,
    obstacles.verticalstructure_ts.markingicaostandard_nilreason,
    obstacles.verticalstructure_ts.group_value,
    obstacles.verticalstructure_ts.group_nilreason,
    obstacles.verticalstructure_ts.lightingicaostandard_value,
    obstacles.verticalstructure_ts.lightingicaostandard_nilreason,
    obstacles.verticalstructure_ts.synchronisedlighting_value,
    obstacles.verticalstructure_ts.synchronisedlighting_nilreason,
    obstacles.verticalstructure_ts.length_value,
    obstacles.verticalstructure_ts.length_uom,
    obstacles.verticalstructure_ts.length_nilreason,
    obstacles.verticalstructure_ts.width_value,
    obstacles.verticalstructure_ts.width_uom,
    obstacles.verticalstructure_ts.width_nilreason,
    obstacles.verticalstructure_ts.radius_value,
    obstacles.verticalstructure_ts.radius_uom,
    obstacles.verticalstructure_ts.radius_nilreason,
    navaids_points_markerbeacon_pt_xkeuol.title,
    navaids_points_markerbeacon_pt_xkeuol.nilreason[1],
    navaids_points_markerbeacon_pt_xkeuol.href
order by verticalstructure.identifier, verticalstructure_ts.sequence_number, verticalstructure_ts.correction_number DESC;
create index on obstacles.verticalstructure_view (id);
-- VisualGlideSlopeIndicatorTimeSliceType
-- ['airport_heliport.groundlightingavailability_view', 'notes.note_view', 'shared.lightelement_view']
drop materialized view if exists airport_heliport.visualglideslopeindicator_view cascade;
create materialized view airport_heliport.visualglideslopeindicator_view as
select distinct on (visualglideslopeindicator.identifier,visualglideslopeindicator_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.visualglideslopeindicator.id,
    airport_heliport.visualglideslopeindicator_ts.id as ts_id,
    airport_heliport.visualglideslopeindicator_tsp.id as tsp_id,
    airport_heliport.visualglideslopeindicator.identifier,
    airport_heliport.visualglideslopeindicator_ts.interpretation,
    airport_heliport.visualglideslopeindicator_ts.sequence_number,
    airport_heliport.visualglideslopeindicator_ts.correction_number,
    airport_heliport.visualglideslopeindicator_ts.valid_time_begin,
    airport_heliport.visualglideslopeindicator_ts.valid_time_end,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_begin,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.emergencylighting_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.emergencylighting_nilreason || ')') as emergencylighting,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.intensitylevel_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.intensitylevel_nilreason || ')') as intensitylevel,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.colour_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.colour_nilreason || ')') as colour,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.type_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.position_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.position_nilreason || ')') as position,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.numberbox_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.numberbox_nilreason || ')') as numberbox,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.portable_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.portable_nilreason || ')') as portable,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.slopeangle_value as varchar), '(' || airport_heliport.visualglideslopeindicator_ts.slopeangle_nilreason || ')') as slopeangle,
    coalesce(cast(airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_value as varchar) || ' ' || airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_uom, '(' || airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_nilreason || ')') as minimumeyeheightoverthreshold,
    coalesce(cast(airport_heliport_runwaydirection_pt_nourbt.title as varchar), '(' || airport_heliport_runwaydirection_pt_nourbt.nilreason[1] || ')') AS runwaydirection,
    airport_heliport_runwaydirection_pt_nourbt.href AS runwaydirection_href,
    jsonb_agg(shared_lightelement_view_wsprjx.id) AS element,
    jsonb_agg(airport_heliport_groundlightingavailability_view_gzxfvi.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_obdcbc.*) AS annotation
from airport_heliport.visualglideslopeindicator 
inner join master_join mj2 on airport_heliport.visualglideslopeindicator.id = mj2.source_id
inner join airport_heliport.visualglideslopeindicator_tsp on mj2.target_id = airport_heliport.visualglideslopeindicator_tsp.id
inner join airport_heliport.visualglideslopeindicator_ts on airport_heliport.visualglideslopeindicator_tsp.visualglideslopeindicatortimeslice_id = airport_heliport.visualglideslopeindicator_ts.id
left join airport_heliport.runwaydirection_pt airport_heliport_runwaydirection_pt_nourbt on airport_heliport.visualglideslopeindicator_ts.runwaydirection_id = airport_heliport_runwaydirection_pt_nourbt.id
left join master_join master_join_fifdlj on airport_heliport.visualglideslopeindicator_ts.id = master_join_fifdlj.source_id
left join shared.lightelement_view shared_lightelement_view_wsprjx on master_join_fifdlj.target_id = shared_lightelement_view_wsprjx.id
left join master_join master_join_qwqiov on airport_heliport.visualglideslopeindicator_ts.id = master_join_qwqiov.source_id
left join airport_heliport.groundlightingavailability_view airport_heliport_groundlightingavailability_view_gzxfvi on master_join_qwqiov.target_id = airport_heliport_groundlightingavailability_view_gzxfvi.id
left join master_join master_join_sqikig on airport_heliport.visualglideslopeindicator_ts.id = master_join_sqikig.source_id
left join notes.note_view notes_note_view_obdcbc on master_join_sqikig.target_id = notes_note_view_obdcbc.id
where airport_heliport.visualglideslopeindicator.feature_status = 'APPROVED'
  and airport_heliport.visualglideslopeindicator_ts.feature_status = 'APPROVED'
group by
    airport_heliport.visualglideslopeindicator.id,
    airport_heliport.visualglideslopeindicator_ts.id,
    airport_heliport.visualglideslopeindicator_tsp.id,
    airport_heliport.visualglideslopeindicator.identifier,
    airport_heliport.visualglideslopeindicator_ts.interpretation,
    airport_heliport.visualglideslopeindicator_ts.sequence_number,
    airport_heliport.visualglideslopeindicator_ts.correction_number,
    airport_heliport.visualglideslopeindicator_ts.valid_time_begin,
    airport_heliport.visualglideslopeindicator_ts.valid_time_end,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_begin,
    airport_heliport.visualglideslopeindicator_ts.feature_lifetime_end,
    airport_heliport.visualglideslopeindicator_ts.emergencylighting_value,
    airport_heliport.visualglideslopeindicator_ts.emergencylighting_nilreason,
    airport_heliport.visualglideslopeindicator_ts.intensitylevel_value,
    airport_heliport.visualglideslopeindicator_ts.intensitylevel_nilreason,
    airport_heliport.visualglideslopeindicator_ts.colour_value,
    airport_heliport.visualglideslopeindicator_ts.colour_nilreason,
    airport_heliport.visualglideslopeindicator_ts.type_value,
    airport_heliport.visualglideslopeindicator_ts.type_nilreason,
    airport_heliport.visualglideslopeindicator_ts.position_value,
    airport_heliport.visualglideslopeindicator_ts.position_nilreason,
    airport_heliport.visualglideslopeindicator_ts.numberbox_value,
    airport_heliport.visualglideslopeindicator_ts.numberbox_nilreason,
    airport_heliport.visualglideslopeindicator_ts.portable_value,
    airport_heliport.visualglideslopeindicator_ts.portable_nilreason,
    airport_heliport.visualglideslopeindicator_ts.slopeangle_value,
    airport_heliport.visualglideslopeindicator_ts.slopeangle_nilreason,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_value,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_uom,
    airport_heliport.visualglideslopeindicator_ts.minimumeyeheightoverthreshold_nilreason,
    airport_heliport_runwaydirection_pt_nourbt.title,
    airport_heliport_runwaydirection_pt_nourbt.nilreason[1],
    airport_heliport_runwaydirection_pt_nourbt.href
order by visualglideslopeindicator.identifier, visualglideslopeindicator_ts.sequence_number, visualglideslopeindicator_ts.correction_number DESC;
create index on airport_heliport.visualglideslopeindicator_view (id);
-- VORTimeSliceType
-- ['navaids_points.navaidoperationalstatus_view', 'navaids_points.navaidequipmentmonitoring_view', 'geometry.elevatedpoint_view', 'navaids_points.authorityfornavaidequipment_view', 'notes.note_view']
drop materialized view if exists navaids_points.vor_view cascade;
create materialized view navaids_points.vor_view as
select distinct on (vor.identifier,vor_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    navaids_points.vor.id,
    navaids_points.vor_ts.id as ts_id,
    navaids_points.vor_tsp.id as tsp_id,
    navaids_points.vor.identifier,
    navaids_points.vor_ts.interpretation,
    navaids_points.vor_ts.sequence_number,
    navaids_points.vor_ts.correction_number,
    navaids_points.vor_ts.valid_time_begin,
    navaids_points.vor_ts.valid_time_end,
    navaids_points.vor_ts.feature_lifetime_begin,
    navaids_points.vor_ts.feature_lifetime_end,
    coalesce(cast(navaids_points.vor_ts.designator_value as varchar), '(' || navaids_points.vor_ts.designator_nilreason || ')') as designator,
    coalesce(cast(navaids_points.vor_ts.name_value as varchar), '(' || navaids_points.vor_ts.name_nilreason || ')') as name,
    coalesce(cast(navaids_points.vor_ts.emissionclass_value as varchar), '(' || navaids_points.vor_ts.emissionclass_nilreason || ')') as emissionclass,
    coalesce(cast(navaids_points.vor_ts.mobile_value as varchar), '(' || navaids_points.vor_ts.mobile_nilreason || ')') as mobile,
    coalesce(cast(navaids_points.vor_ts.magneticvariation_value as varchar), '(' || navaids_points.vor_ts.magneticvariation_nilreason || ')') as magneticvariation,
    coalesce(cast(navaids_points.vor_ts.magneticvariationaccuracy_value as varchar), '(' || navaids_points.vor_ts.magneticvariationaccuracy_nilreason || ')') as magneticvariationaccuracy,
    coalesce(cast(navaids_points.vor_ts.datemagneticvariation_value as varchar), '(' || navaids_points.vor_ts.datemagneticvariation_nilreason || ')') as datemagneticvariation,
    coalesce(cast(navaids_points.vor_ts.flightchecked_value as varchar), '(' || navaids_points.vor_ts.flightchecked_nilreason || ')') as flightchecked,
    coalesce(cast(navaids_points.vor_ts.type_value as varchar), '(' || navaids_points.vor_ts.type_nilreason || ')') as type,
    coalesce(cast(navaids_points.vor_ts.zerobearingdirection_value as varchar), '(' || navaids_points.vor_ts.zerobearingdirection_nilreason || ')') as zerobearingdirection,
    coalesce(cast(navaids_points.vor_ts.declination_value as varchar), '(' || navaids_points.vor_ts.declination_nilreason || ')') as declination,
    coalesce(cast(navaids_points.vor_ts.frequency_value as varchar) || ' ' || navaids_points.vor_ts.frequency_uom, '(' || navaids_points.vor_ts.frequency_nilreason || ')') as frequency,
    geometry_elevatedpoint_view_tzqwhf.geom AS location_geom,
    ST_X(geometry_elevatedpoint_view_tzqwhf.geom) AS location_longitude,
    ST_Y(geometry_elevatedpoint_view_tzqwhf.geom) AS location_latitude,
    geometry_elevatedpoint_view_tzqwhf.elevation AS location_elevation,
    geometry_elevatedpoint_view_tzqwhf.geoidUndulation AS location_geoidundulation,
    geometry_elevatedpoint_view_tzqwhf.verticalDatum AS location_verticaldatum,
    geometry_elevatedpoint_view_tzqwhf.verticalAccuracy AS location_verticalaccuracy,
    geometry_elevatedpoint_view_tzqwhf.horizontalAccuracy AS location_horizontalaccuracy,
    jsonb_agg(navaids_points_authorityfornavaidequipment_view_tswycg.id) AS authority,
    jsonb_agg(navaids_points_navaidequipmentmonitoring_view_vddjhz.id) AS monitoring,
    jsonb_agg(navaids_points_navaidoperationalstatus_view_ewszgs.id) AS availability,
    jsonb_agg(DISTINCT notes_note_view_kjokpa.*) AS annotation
from navaids_points.vor 
inner join master_join mj2 on navaids_points.vor.id = mj2.source_id
inner join navaids_points.vor_tsp on mj2.target_id = navaids_points.vor_tsp.id
inner join navaids_points.vor_ts on navaids_points.vor_tsp.vortimeslice_id = navaids_points.vor_ts.id
left join geometry.elevatedpoint_view geometry_elevatedpoint_view_tzqwhf on navaids_points.vor_ts.location_id = geometry_elevatedpoint_view_tzqwhf.id
left join master_join master_join_hzwgyj on navaids_points.vor_ts.id = master_join_hzwgyj.source_id
left join navaids_points.authorityfornavaidequipment_view navaids_points_authorityfornavaidequipment_view_tswycg on master_join_hzwgyj.target_id = navaids_points_authorityfornavaidequipment_view_tswycg.id
left join master_join master_join_rkktoj on navaids_points.vor_ts.id = master_join_rkktoj.source_id
left join navaids_points.navaidequipmentmonitoring_view navaids_points_navaidequipmentmonitoring_view_vddjhz on master_join_rkktoj.target_id = navaids_points_navaidequipmentmonitoring_view_vddjhz.id
left join master_join master_join_izkjgq on navaids_points.vor_ts.id = master_join_izkjgq.source_id
left join navaids_points.navaidoperationalstatus_view navaids_points_navaidoperationalstatus_view_ewszgs on master_join_izkjgq.target_id = navaids_points_navaidoperationalstatus_view_ewszgs.id
left join master_join master_join_zmdhzd on navaids_points.vor_ts.id = master_join_zmdhzd.source_id
left join notes.note_view notes_note_view_kjokpa on master_join_zmdhzd.target_id = notes_note_view_kjokpa.id
where navaids_points.vor.feature_status = 'APPROVED'
  and navaids_points.vor_ts.feature_status = 'APPROVED'
group by
    navaids_points.vor.id,
    navaids_points.vor_ts.id,
    navaids_points.vor_tsp.id,
    navaids_points.vor.identifier,
    navaids_points.vor_ts.interpretation,
    navaids_points.vor_ts.sequence_number,
    navaids_points.vor_ts.correction_number,
    navaids_points.vor_ts.valid_time_begin,
    navaids_points.vor_ts.valid_time_end,
    navaids_points.vor_ts.feature_lifetime_begin,
    navaids_points.vor_ts.feature_lifetime_end,
    navaids_points.vor_ts.designator_value,
    navaids_points.vor_ts.designator_nilreason,
    navaids_points.vor_ts.name_value,
    navaids_points.vor_ts.name_nilreason,
    navaids_points.vor_ts.emissionclass_value,
    navaids_points.vor_ts.emissionclass_nilreason,
    navaids_points.vor_ts.mobile_value,
    navaids_points.vor_ts.mobile_nilreason,
    navaids_points.vor_ts.magneticvariation_value,
    navaids_points.vor_ts.magneticvariation_nilreason,
    navaids_points.vor_ts.magneticvariationaccuracy_value,
    navaids_points.vor_ts.magneticvariationaccuracy_nilreason,
    navaids_points.vor_ts.datemagneticvariation_value,
    navaids_points.vor_ts.datemagneticvariation_nilreason,
    navaids_points.vor_ts.flightchecked_value,
    navaids_points.vor_ts.flightchecked_nilreason,
    navaids_points.vor_ts.type_value,
    navaids_points.vor_ts.type_nilreason,
    navaids_points.vor_ts.zerobearingdirection_value,
    navaids_points.vor_ts.zerobearingdirection_nilreason,
    navaids_points.vor_ts.declination_value,
    navaids_points.vor_ts.declination_nilreason,
    navaids_points.vor_ts.frequency_value,
    navaids_points.vor_ts.frequency_uom,
    navaids_points.vor_ts.frequency_nilreason,
    geometry_elevatedpoint_view_tzqwhf.geom,
    geometry_elevatedpoint_view_tzqwhf.elevation,
    geometry_elevatedpoint_view_tzqwhf.geoidUndulation,
    geometry_elevatedpoint_view_tzqwhf.verticalDatum,
    geometry_elevatedpoint_view_tzqwhf.verticalAccuracy,
    geometry_elevatedpoint_view_tzqwhf.horizontalAccuracy
order by vor.identifier, vor_ts.sequence_number, vor_ts.correction_number DESC;
create index on navaids_points.vor_view (id);
-- WorkAreaTimeSliceType
-- ['airport_heliport.workareaactivity_view', 'geometry.elevatedsurface_view', 'notes.note_view']
drop materialized view if exists airport_heliport.workarea_view cascade;
create materialized view airport_heliport.workarea_view as
select distinct on (workarea.identifier,workarea_ts.sequence_number)
    (row_number() OVER ())::integer AS row,
    airport_heliport.workarea.id,
    airport_heliport.workarea_ts.id as ts_id,
    airport_heliport.workarea_tsp.id as tsp_id,
    airport_heliport.workarea.identifier,
    airport_heliport.workarea_ts.interpretation,
    airport_heliport.workarea_ts.sequence_number,
    airport_heliport.workarea_ts.correction_number,
    airport_heliport.workarea_ts.valid_time_begin,
    airport_heliport.workarea_ts.valid_time_end,
    airport_heliport.workarea_ts.feature_lifetime_begin,
    airport_heliport.workarea_ts.feature_lifetime_end,
    coalesce(cast(airport_heliport.workarea_ts.plannedOperational_value as varchar), '(' || airport_heliport.workarea_ts.plannedOperational_nilreason || ')') as plannedOperational,
    coalesce(cast(airport_heliport.workarea_ts.type_value as varchar), '(' || airport_heliport.workarea_ts.type_nilreason || ')') as type,
    coalesce(cast(airport_heliport_airportheliport_pt_duyvhf.title as varchar), '(' || airport_heliport_airportheliport_pt_duyvhf.nilreason[1] || ')') AS associatedairportheliport,
    airport_heliport_airportheliport_pt_duyvhf.href AS associatedairportheliport_href,
    geometry_elevatedsurface_view_gifxgq.geom AS extent_geom,
    geometry_elevatedsurface_view_gifxgq.elevation AS extent_elevation,
    geometry_elevatedsurface_view_gifxgq.geoidUndulation AS extent_geoidundulation,
    geometry_elevatedsurface_view_gifxgq.verticalDatum AS extent_verticaldatum,
    geometry_elevatedsurface_view_gifxgq.verticalAccuracy AS extent_verticalaccuracy,
    geometry_elevatedsurface_view_gifxgq.horizontalAccuracy AS extent_horizontalaccuracy,
    jsonb_agg(airport_heliport_workareaactivity_view_hjmeqa.id) AS activation,
    jsonb_agg(DISTINCT notes_note_view_uvflwk.*) AS annotation
from airport_heliport.workarea 
inner join master_join mj2 on airport_heliport.workarea.id = mj2.source_id
inner join airport_heliport.workarea_tsp on mj2.target_id = airport_heliport.workarea_tsp.id
inner join airport_heliport.workarea_ts on airport_heliport.workarea_tsp.workareatimeslice_id = airport_heliport.workarea_ts.id
left join airport_heliport.airportheliport_pt airport_heliport_airportheliport_pt_duyvhf on airport_heliport.workarea_ts.associatedairportheliport_id = airport_heliport_airportheliport_pt_duyvhf.id
left join geometry.elevatedsurface_view geometry_elevatedsurface_view_gifxgq on airport_heliport.workarea_ts.extent_id = geometry_elevatedsurface_view_gifxgq.id
left join master_join master_join_fmwbcn on airport_heliport.workarea_ts.id = master_join_fmwbcn.source_id
left join airport_heliport.workareaactivity_view airport_heliport_workareaactivity_view_hjmeqa on master_join_fmwbcn.target_id = airport_heliport_workareaactivity_view_hjmeqa.id
left join master_join master_join_xkurfo on airport_heliport.workarea_ts.id = master_join_xkurfo.source_id
left join notes.note_view notes_note_view_uvflwk on master_join_xkurfo.target_id = notes_note_view_uvflwk.id
where airport_heliport.workarea.feature_status = 'APPROVED'
  and airport_heliport.workarea_ts.feature_status = 'APPROVED'
group by
    airport_heliport.workarea.id,
    airport_heliport.workarea_ts.id,
    airport_heliport.workarea_tsp.id,
    airport_heliport.workarea.identifier,
    airport_heliport.workarea_ts.interpretation,
    airport_heliport.workarea_ts.sequence_number,
    airport_heliport.workarea_ts.correction_number,
    airport_heliport.workarea_ts.valid_time_begin,
    airport_heliport.workarea_ts.valid_time_end,
    airport_heliport.workarea_ts.feature_lifetime_begin,
    airport_heliport.workarea_ts.feature_lifetime_end,
    airport_heliport.workarea_ts.plannedOperational_value,
    airport_heliport.workarea_ts.plannedOperational_nilreason,
    airport_heliport.workarea_ts.type_value,
    airport_heliport.workarea_ts.type_nilreason,
    airport_heliport_airportheliport_pt_duyvhf.title,
    airport_heliport_airportheliport_pt_duyvhf.nilreason[1],
    airport_heliport_airportheliport_pt_duyvhf.href,
    geometry_elevatedsurface_view_gifxgq.geom,
    geometry_elevatedsurface_view_gifxgq.elevation,
    geometry_elevatedsurface_view_gifxgq.geoidUndulation,
    geometry_elevatedsurface_view_gifxgq.verticalDatum,
    geometry_elevatedsurface_view_gifxgq.verticalAccuracy,
    geometry_elevatedsurface_view_gifxgq.horizontalAccuracy
order by workarea.identifier, workarea_ts.sequence_number, workarea_ts.correction_number DESC;
create index on airport_heliport.workarea_view (id);
